begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qtabwidget.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qlabel.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qboxlayout.h>
end_include
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_include
include|#
directive|include
file|<qt_windows.h>
end_include
begin_define
DECL|macro|Q_CHECK_PAINTEVENTS
define|#
directive|define
name|Q_CHECK_PAINTEVENTS
define|\
value|if (::SwitchDesktop(::GetThreadDesktop(::GetCurrentThreadId())) == 0) \         QSKIP("desktop is not visible, this test would fail");
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|Q_CHECK_PAINTEVENTS
define|#
directive|define
name|Q_CHECK_PAINTEVENTS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
end_if
begin_include
include|#
directive|include
file|<private/qt_x11_p.h>
end_include
begin_include
include|#
directive|include
file|<qx11info_x11.h>
end_include
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
end_elif
begin_include
include|#
directive|include
file|<qwindowsystem_qws.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|QTabWidgetChild
class|class
name|QTabWidgetChild
super|:
specifier|public
name|QTabWidget
block|{
public|public:
DECL|function|QTabWidgetChild
name|QTabWidgetChild
parameter_list|()
member_init_list|:
name|tabCount
argument_list|(
literal|0
argument_list|)
block|{
name|QVERIFY
argument_list|(
name|tabBar
argument_list|()
operator|!=
name|NULL
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
decl_stmt|;
name|int
name|index
init|=
name|addTab
argument_list|(
name|w
argument_list|,
literal|"test"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tabCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|removeTab
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Test bad arguments
comment|// This will assert, so don't do it :)
comment|//setTabBar(NULL);
block|}
empty_stmt|;
protected|protected:
DECL|function|tabInserted
specifier|virtual
name|void
name|tabInserted
parameter_list|(
name|int
comment|/*index */
parameter_list|)
block|{
name|tabCount
operator|++
expr_stmt|;
block|}
empty_stmt|;
DECL|function|tabRemoved
specifier|virtual
name|void
name|tabRemoved
parameter_list|(
name|int
comment|/*index */
parameter_list|)
block|{
name|tabCount
operator|--
expr_stmt|;
block|}
empty_stmt|;
DECL|member|tabCount
name|int
name|tabCount
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|tst_QTabWidget
class|class
name|tst_QTabWidget
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QTabWidget
parameter_list|()
constructor_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|testChild
parameter_list|()
function_decl|;
name|void
name|addRemoveTab
parameter_list|()
function_decl|;
name|void
name|tabPosition
parameter_list|()
function_decl|;
name|void
name|tabEnabled
parameter_list|()
function_decl|;
name|void
name|tabText
parameter_list|()
function_decl|;
name|void
name|tabShape
parameter_list|()
function_decl|;
name|void
name|tabTooltip
parameter_list|()
function_decl|;
name|void
name|tabIcon
parameter_list|()
function_decl|;
name|void
name|indexOf
parameter_list|()
function_decl|;
name|void
name|currentWidget
parameter_list|()
function_decl|;
name|void
name|currentIndex
parameter_list|()
function_decl|;
name|void
name|cornerWidget
parameter_list|()
function_decl|;
name|void
name|removeTab
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|void
name|keyboardNavigation
parameter_list|()
function_decl|;
name|void
name|paintEventCount
parameter_list|()
function_decl|;
name|void
name|minimumSizeHint
parameter_list|()
function_decl|;
name|void
name|heightForWidth_data
parameter_list|()
function_decl|;
name|void
name|heightForWidth
parameter_list|()
function_decl|;
private|private:
name|int
name|addPage
parameter_list|()
function_decl|;
name|void
name|removePage
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
DECL|member|tw
name|QTabWidget
modifier|*
name|tw
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QTabWidget
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QTabWidget
name|obj1
decl_stmt|;
name|QWidget
modifier|*
name|w1
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w2
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w3
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w4
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w5
init|=
operator|new
name|QWidget
decl_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
name|w1
argument_list|,
literal|"Page 1"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
name|w2
argument_list|,
literal|"Page 2"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
name|w3
argument_list|,
literal|"Page 3"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
name|w4
argument_list|,
literal|"Page 4"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
name|w5
argument_list|,
literal|"Page 5"
argument_list|)
expr_stmt|;
comment|// TabShape QTabWidget::tabShape()
comment|// void QTabWidget::setTabShape(TabShape)
name|obj1
operator|.
name|setTabShape
argument_list|(
name|QTabWidget
operator|::
name|TabShape
argument_list|(
name|QTabWidget
operator|::
name|Rounded
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabWidget
operator|::
name|TabShape
argument_list|(
name|QTabWidget
operator|::
name|Rounded
argument_list|)
argument_list|,
name|obj1
operator|.
name|tabShape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setTabShape
argument_list|(
name|QTabWidget
operator|::
name|TabShape
argument_list|(
name|QTabWidget
operator|::
name|Triangular
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabWidget
operator|::
name|TabShape
argument_list|(
name|QTabWidget
operator|::
name|Triangular
argument_list|)
argument_list|,
name|obj1
operator|.
name|tabShape
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QTabWidget::currentIndex()
comment|// void QTabWidget::setCurrentIndex(int)
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|4
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
comment|// QWidget * QTabWidget::currentWidget()
comment|// void QTabWidget::setCurrentWidget(QWidget *)
name|obj1
operator|.
name|setCurrentWidget
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w1
argument_list|,
name|obj1
operator|.
name|currentWidget
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentWidget
argument_list|(
name|w5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w5
argument_list|,
name|obj1
operator|.
name|currentWidget
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentWidget
argument_list|(
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w5
argument_list|,
name|obj1
operator|.
name|currentWidget
argument_list|()
argument_list|)
expr_stmt|;
comment|// current not changed
block|}
end_function
begin_constructor
DECL|function|tst_QTabWidget
name|tst_QTabWidget
operator|::
name|tst_QTabWidget
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|init
name|void
name|tst_QTabWidget
operator|::
name|init
parameter_list|()
block|{
name|tw
operator|=
operator|new
name|QTabWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|currentWidget
argument_list|()
operator|==
name|NULL
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QTabWidget
operator|::
name|cleanup
parameter_list|()
block|{
operator|delete
name|tw
expr_stmt|;
name|tw
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testChild
name|void
name|tst_QTabWidget
operator|::
name|testChild
parameter_list|()
block|{
name|QTabWidgetChild
name|t
decl_stmt|;
block|}
end_function
begin_define
DECL|macro|LABEL
define|#
directive|define
name|LABEL
value|"TEST"
end_define
begin_define
DECL|macro|TIP
define|#
directive|define
name|TIP
value|"TIP"
end_define
begin_function
DECL|function|addPage
name|int
name|tst_QTabWidget
operator|::
name|addPage
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
return|return
name|tw
operator|->
name|addTab
argument_list|(
name|w
argument_list|,
name|LABEL
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|removePage
name|void
name|tst_QTabWidget
operator|::
name|removePage
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|QWidget
modifier|*
name|w
init|=
name|tw
operator|->
name|widget
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|tw
operator|->
name|removeTab
argument_list|(
name|index
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_comment
comment|/**  * Tests:  * addTab(...) which really calls -> insertTab(...)  * widget(...)  * removeTab(...);  * If this fails then many others probably will too.  */
end_comment
begin_function
DECL|function|addRemoveTab
name|void
name|tst_QTabWidget
operator|::
name|addRemoveTab
parameter_list|()
block|{
comment|// Test bad arguments
name|tw
operator|->
name|addTab
argument_list|(
name|NULL
argument_list|,
name|LABEL
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tw
operator|->
name|removeTab
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|widget
argument_list|(
operator|-
literal|1
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|int
name|index
init|=
name|tw
operator|->
name|addTab
argument_list|(
name|w
argument_list|,
name|LABEL
argument_list|)
decl_stmt|;
comment|// return value
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|indexOf
argument_list|(
name|w
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|widget
argument_list|(
name|index
argument_list|)
operator|==
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabText
argument_list|(
name|index
argument_list|)
argument_list|,
name|QString
argument_list|(
name|LABEL
argument_list|)
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabPosition
name|void
name|tst_QTabWidget
operator|::
name|tabPosition
parameter_list|()
block|{
name|tw
operator|->
name|setTabPosition
argument_list|(
name|QTabWidget
operator|::
name|North
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabPosition
argument_list|()
argument_list|,
name|QTabWidget
operator|::
name|North
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabPosition
argument_list|(
name|QTabWidget
operator|::
name|South
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabPosition
argument_list|()
argument_list|,
name|QTabWidget
operator|::
name|South
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabPosition
argument_list|(
name|QTabWidget
operator|::
name|East
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabPosition
argument_list|()
argument_list|,
name|QTabWidget
operator|::
name|East
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabPosition
argument_list|(
name|QTabWidget
operator|::
name|West
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabPosition
argument_list|()
argument_list|,
name|QTabWidget
operator|::
name|West
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabEnabled
name|void
name|tst_QTabWidget
operator|::
name|tabEnabled
parameter_list|()
block|{
comment|// Test bad arguments
name|QVERIFY
argument_list|(
name|tw
operator|->
name|isTabEnabled
argument_list|(
operator|-
literal|1
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
name|index
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|isTabEnabled
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|widget
argument_list|(
name|index
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
name|index
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|tw
operator|->
name|isTabEnabled
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|tw
operator|->
name|widget
argument_list|(
name|index
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
name|index
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|isTabEnabled
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|widget
argument_list|(
name|index
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabText
name|void
name|tst_QTabWidget
operator|::
name|tabText
parameter_list|()
block|{
comment|// Test bad arguments
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabText
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabText
argument_list|(
operator|-
literal|1
argument_list|,
name|LABEL
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|tw
operator|->
name|setTabText
argument_list|(
name|index
argument_list|,
literal|"new"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabText
argument_list|(
name|index
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"new"
argument_list|)
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabText
argument_list|(
name|index
argument_list|,
name|LABEL
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabText
argument_list|(
name|index
argument_list|)
argument_list|,
name|QString
argument_list|(
name|LABEL
argument_list|)
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabShape
name|void
name|tst_QTabWidget
operator|::
name|tabShape
parameter_list|()
block|{
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|tw
operator|->
name|setTabShape
argument_list|(
name|QTabWidget
operator|::
name|Rounded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabShape
argument_list|()
argument_list|,
name|QTabWidget
operator|::
name|Rounded
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabShape
argument_list|(
name|QTabWidget
operator|::
name|Triangular
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabShape
argument_list|()
argument_list|,
name|QTabWidget
operator|::
name|Triangular
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabShape
argument_list|(
name|QTabWidget
operator|::
name|Rounded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabShape
argument_list|()
argument_list|,
name|QTabWidget
operator|::
name|Rounded
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabTooltip
name|void
name|tst_QTabWidget
operator|::
name|tabTooltip
parameter_list|()
block|{
comment|// Test bad arguments
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabToolTip
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabText
argument_list|(
operator|-
literal|1
argument_list|,
name|TIP
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|tw
operator|->
name|setTabToolTip
argument_list|(
name|index
argument_list|,
literal|"tip"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabToolTip
argument_list|(
name|index
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"tip"
argument_list|)
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabToolTip
argument_list|(
name|index
argument_list|,
name|TIP
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|tabToolTip
argument_list|(
name|index
argument_list|)
argument_list|,
name|QString
argument_list|(
name|TIP
argument_list|)
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabIcon
name|void
name|tst_QTabWidget
operator|::
name|tabIcon
parameter_list|()
block|{
comment|// Test bad arguments
name|QVERIFY
argument_list|(
name|tw
operator|->
name|tabToolTip
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabIcon
argument_list|(
operator|-
literal|1
argument_list|,
name|QIcon
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|QIcon
name|icon
decl_stmt|;
name|tw
operator|->
name|setTabIcon
argument_list|(
name|index
argument_list|,
name|icon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|tabIcon
argument_list|(
name|index
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|indexOf
name|void
name|tst_QTabWidget
operator|::
name|indexOf
parameter_list|()
block|{
comment|// Test bad arguments
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|indexOf
argument_list|(
name|NULL
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
name|tw
operator|->
name|widget
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|indexOf
argument_list|(
name|w
argument_list|)
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentWidget
name|void
name|tst_QTabWidget
operator|::
name|currentWidget
parameter_list|()
block|{
comment|// Test bad arguments
name|tw
operator|->
name|setCurrentWidget
argument_list|(
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|currentWidget
argument_list|()
operator|==
name|NULL
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
name|tw
operator|->
name|widget
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|currentWidget
argument_list|()
operator|==
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCurrentWidget
argument_list|(
name|NULL
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|currentWidget
argument_list|()
operator|==
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|int
name|index2
init|=
name|addPage
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|w2
init|=
name|tw
operator|->
name|widget
argument_list|(
name|index2
argument_list|)
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|currentWidget
argument_list|()
operator|==
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index2
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/**  * setCurrentWidget(..) calls setCurrentIndex(..)  * currentChanged(..) SIGNAL  */
end_comment
begin_function
DECL|function|currentIndex
name|void
name|tst_QTabWidget
operator|::
name|currentIndex
parameter_list|()
block|{
comment|// Test bad arguments
name|QSignalSpy
name|spy
argument_list|(
name|tw
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|int
name|firstIndex
init|=
name|addPage
argument_list|()
decl_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
name|firstIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|firstIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|arguments
init|=
name|spy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
name|firstIndex
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|addPage
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|firstIndex
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
name|index
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|firstIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
name|firstIndex
argument_list|)
expr_stmt|;
name|removePage
argument_list|(
name|firstIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cornerWidget
name|void
name|tst_QTabWidget
operator|::
name|cornerWidget
parameter_list|()
block|{
comment|// Test bad arguments
name|tw
operator|->
name|setCornerWidget
argument_list|(
name|NULL
argument_list|,
name|Qt
operator|::
name|TopRightCorner
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|TopLeftCorner
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|TopRightCorner
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|BottomLeftCorner
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|BottomRightCorner
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|tw
operator|->
name|setCornerWidget
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|TopLeftCorner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|->
name|parent
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
name|tw
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|TopLeftCorner
argument_list|)
operator|==
name|w
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCornerWidget
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|TopRightCorner
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|TopRightCorner
argument_list|)
operator|==
name|w
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCornerWidget
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|BottomLeftCorner
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|BottomLeftCorner
argument_list|)
operator|==
name|w
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCornerWidget
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|BottomRightCorner
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|BottomRightCorner
argument_list|)
operator|==
name|w
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCornerWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|TopRightCorner
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tw
operator|->
name|cornerWidget
argument_list|(
name|Qt
operator|::
name|TopRightCorner
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|->
name|isHidden
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//test that the QTabWidget::count() is correct at the moment the currentChanged signal is emit
end_comment
begin_class
DECL|class|RemoveTabObject
class|class
name|RemoveTabObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|RemoveTabObject
name|RemoveTabObject
parameter_list|(
name|QTabWidget
modifier|*
name|_tw
parameter_list|)
member_init_list|:
name|tw
argument_list|(
name|_tw
argument_list|)
member_init_list|,
name|count
argument_list|(
operator|-
literal|1
argument_list|)
block|{
name|connect
argument_list|(
name|tw
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|currentChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|member|tw
name|QTabWidget
modifier|*
name|tw
decl_stmt|;
DECL|member|count
name|int
name|count
decl_stmt|;
public|public
name|slots
public|:
DECL|function|currentChanged
name|void
name|currentChanged
parameter_list|()
block|{
name|count
operator|=
name|tw
operator|->
name|count
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|removeTab
name|void
name|tst_QTabWidget
operator|::
name|removeTab
parameter_list|()
block|{
name|tw
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|RemoveTabObject
name|ob
argument_list|(
name|tw
argument_list|)
decl_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"1"
argument_list|)
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"2"
argument_list|)
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"3"
argument_list|)
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"4"
argument_list|)
argument_list|,
literal|"4"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"5"
argument_list|)
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|tw
operator|->
name|removeTab
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|tw
operator|->
name|removeTab
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|tw
operator|->
name|widget
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|tw
operator|->
name|widget
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|tw
operator|->
name|removeTab
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ob
operator|.
name|count
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|tst_QTabWidget
operator|::
name|clear
parameter_list|()
block|{
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QWidget
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QWidget
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QWidget
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QWidget
argument_list|,
literal|"4"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
operator|new
name|QWidget
argument_list|,
literal|"5"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|tw
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyboardNavigation
name|void
name|tst_QTabWidget
operator|::
name|keyboardNavigation
parameter_list|()
block|{
name|int
name|firstIndex
init|=
name|addPage
argument_list|()
decl_stmt|;
name|addPage
argument_list|()
expr_stmt|;
name|addPage
argument_list|()
expr_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
name|firstIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|firstIndex
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
operator||
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
operator||
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
operator||
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
operator||
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
operator||
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Disable all and try to go to the next. It should not move anywhere, and more importantly
comment|// it should not loop forever. (a naive "search for the first enabled tabbar") implementation
comment|// might do that)
name|tw
operator|->
name|setTabEnabled
argument_list|(
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setTabEnabled
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|tw
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
comment|// TODO: Disabling the current tab will move current tab to the next,
comment|// but what if next tab is also disabled. We should look into this.
name|QVERIFY
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
operator|<
literal|3
operator|&&
name|tw
operator|->
name|currentIndex
argument_list|()
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|PaintCounter
class|class
name|PaintCounter
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|PaintCounter
name|PaintCounter
parameter_list|()
member_init_list|:
name|count
argument_list|(
literal|0
argument_list|)
block|{
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
block|}
DECL|member|count
name|int
name|count
decl_stmt|;
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
operator|++
name|count
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|paintEventCount
name|void
name|tst_QTabWidget
operator|::
name|paintEventCount
parameter_list|()
block|{
name|Q_CHECK_PAINTEVENTS
name|PaintCounter
modifier|*
name|tab1
init|=
operator|new
name|PaintCounter
decl_stmt|;
name|PaintCounter
modifier|*
name|tab2
init|=
operator|new
name|PaintCounter
decl_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
name|tab1
argument_list|,
literal|"one"
argument_list|)
expr_stmt|;
name|tw
operator|->
name|addTab
argument_list|(
name|tab2
argument_list|,
literal|"two"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab1
operator|->
name|count
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab2
operator|->
name|count
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|->
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tw
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// Mac, Windows and Windows CE get multiple repaints on the first show, so use those as a starting point.
specifier|static
specifier|const
name|int
name|MaxInitialPaintCount
init|=
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
literal|4
decl_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
literal|2
expr_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
literal|5
expr_stmt|;
else|#
directive|else
literal|2
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
name|tab1
operator|->
name|count
operator|<=
name|MaxInitialPaintCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab2
operator|->
name|count
argument_list|,
literal|0
argument_list|)
expr_stmt|;
specifier|const
name|int
name|initalPaintCount
init|=
name|tab1
operator|->
name|count
decl_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab1
operator|->
name|count
argument_list|,
name|initalPaintCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab2
operator|->
name|count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|tw
operator|->
name|setCurrentIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab1
operator|->
name|count
argument_list|,
name|initalPaintCount
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tab2
operator|->
name|count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minimumSizeHint
name|void
name|tst_QTabWidget
operator|::
name|minimumSizeHint
parameter_list|()
block|{
name|QTabWidget
name|tw
decl_stmt|;
name|QWidget
modifier|*
name|page
init|=
operator|new
name|QWidget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|lay
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|QLatin1String
argument_list|(
literal|"XXgypq lorem ipsum must be long, must be long. lorem ipsumMMMW"
argument_list|)
argument_list|)
decl_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|page
operator|->
name|setLayout
argument_list|(
name|lay
argument_list|)
expr_stmt|;
name|tw
operator|.
name|addTab
argument_list|(
name|page
argument_list|,
name|QLatin1String
argument_list|(
literal|"page1"
argument_list|)
argument_list|)
expr_stmt|;
name|tw
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|tw
argument_list|)
expr_stmt|;
name|tw
operator|.
name|resize
argument_list|(
name|tw
operator|.
name|minimumSizeHint
argument_list|()
argument_list|)
expr_stmt|;
name|QSize
name|minSize
init|=
name|label
operator|->
name|minimumSizeHint
argument_list|()
decl_stmt|;
name|QSize
name|actSize
init|=
name|label
operator|->
name|geometry
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|minSize
operator|.
name|width
argument_list|()
operator|<=
name|actSize
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|minSize
operator|.
name|height
argument_list|()
operator|<=
name|actSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|heightForWidth_data
name|void
name|tst_QTabWidget
operator|::
name|heightForWidth_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"tabPosition"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"West"
argument_list|)
operator|<<
name|int
argument_list|(
name|QTabWidget
operator|::
name|West
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"North"
argument_list|)
operator|<<
name|int
argument_list|(
name|QTabWidget
operator|::
name|North
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"East"
argument_list|)
operator|<<
name|int
argument_list|(
name|QTabWidget
operator|::
name|East
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"South"
argument_list|)
operator|<<
name|int
argument_list|(
name|QTabWidget
operator|::
name|South
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|heightForWidth
name|void
name|tst_QTabWidget
operator|::
name|heightForWidth
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|tabPosition
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|window
init|=
operator|new
name|QWidget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|lay
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|window
argument_list|)
decl_stmt|;
name|lay
operator|->
name|setMargin
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|lay
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTabWidget
modifier|*
name|tabWid
init|=
operator|new
name|QTabWidget
argument_list|(
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
decl_stmt|;
name|tabWid
operator|->
name|addTab
argument_list|(
name|w
argument_list|,
name|QLatin1String
argument_list|(
literal|"HFW page"
argument_list|)
argument_list|)
expr_stmt|;
name|tabWid
operator|->
name|setTabPosition
argument_list|(
name|QTabWidget
operator|::
name|TabPosition
argument_list|(
name|tabPosition
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|lay2
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
literal|"Label with wordwrap turned on makes it trade height for width."
literal|" Make it a really long text so that it spans on several lines"
literal|" when the label is on its narrowest."
literal|" I don't like to repeat myself."
literal|" I don't like to repeat myself."
literal|" I don't like to repeat myself."
literal|" I don't like to repeat myself."
argument_list|)
decl_stmt|;
name|label
operator|->
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|lay2
operator|->
name|addWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|lay2
operator|->
name|setMargin
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
name|tabWid
argument_list|)
expr_stmt|;
name|int
name|h
init|=
name|window
operator|->
name|heightForWidth
argument_list|(
literal|160
argument_list|)
decl_stmt|;
name|window
operator|->
name|resize
argument_list|(
literal|160
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|window
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|label
operator|->
name|height
argument_list|()
operator|>=
name|label
operator|->
name|heightForWidth
argument_list|(
name|label
operator|->
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|window
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTabWidget
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtabwidget.moc"
end_include
end_unit
