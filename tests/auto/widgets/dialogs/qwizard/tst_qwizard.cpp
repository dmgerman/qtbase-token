begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QFont>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QCheckBox>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_include
include|#
directive|include
file|<QLineEdit>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|<QPushButton>
end_include
begin_include
include|#
directive|include
file|<QToolButton>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QWizard>
end_include
begin_include
include|#
directive|include
file|<QStyle>
end_include
begin_include
include|#
directive|include
file|<QPlastiqueStyle>
end_include
begin_include
include|#
directive|include
file|<QTreeWidget>
end_include
begin_function
DECL|function|grabWidget
specifier|static
name|QImage
name|grabWidget
parameter_list|(
name|QWidget
modifier|*
name|window
parameter_list|)
block|{
return|return
name|window
operator|->
name|grab
argument_list|()
operator|.
name|toImage
argument_list|()
return|;
block|}
end_function
begin_class
DECL|class|tst_QWizard
class|class
name|tst_QWizard
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QWizard
parameter_list|()
constructor_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|buttonText
parameter_list|()
function_decl|;
name|void
name|setButtonLayout
parameter_list|()
function_decl|;
name|void
name|setButton
parameter_list|()
function_decl|;
name|void
name|setTitleFormatEtc
parameter_list|()
function_decl|;
name|void
name|setPixmap
parameter_list|()
function_decl|;
name|void
name|setDefaultProperty
parameter_list|()
function_decl|;
name|void
name|addPage
parameter_list|()
function_decl|;
name|void
name|setPage
parameter_list|()
function_decl|;
name|void
name|setStartId
parameter_list|()
function_decl|;
name|void
name|setOption_IndependentPages
parameter_list|()
function_decl|;
name|void
name|setOption_IgnoreSubTitles
parameter_list|()
function_decl|;
name|void
name|setOption_ExtendedWatermarkPixmap
parameter_list|()
function_decl|;
name|void
name|setOption_NoDefaultButton
parameter_list|()
function_decl|;
name|void
name|setOption_NoBackButtonOnStartPage
parameter_list|()
function_decl|;
name|void
name|setOption_NoBackButtonOnLastPage
parameter_list|()
function_decl|;
name|void
name|setOption_DisabledBackButtonOnLastPage
parameter_list|()
function_decl|;
name|void
name|setOption_HaveNextButtonOnLastPage
parameter_list|()
function_decl|;
name|void
name|setOption_HaveFinishButtonOnEarlyPages
parameter_list|()
function_decl|;
name|void
name|setOption_NoCancelButton
parameter_list|()
function_decl|;
name|void
name|setOption_CancelButtonOnLeft
parameter_list|()
function_decl|;
name|void
name|setOption_HaveHelpButton
parameter_list|()
function_decl|;
name|void
name|setOption_HelpButtonOnRight
parameter_list|()
function_decl|;
name|void
name|setOption_HaveCustomButtonX
parameter_list|()
function_decl|;
name|void
name|combinations_data
parameter_list|()
function_decl|;
name|void
name|combinations
parameter_list|()
function_decl|;
name|void
name|showCurrentPageOnly
parameter_list|()
function_decl|;
name|void
name|setButtonText
parameter_list|()
function_decl|;
name|void
name|setCommitPage
parameter_list|()
function_decl|;
name|void
name|setWizardStyle
parameter_list|()
function_decl|;
name|void
name|removePage
parameter_list|()
function_decl|;
name|void
name|sideWidget
parameter_list|()
function_decl|;
comment|// task-specific tests below me:
name|void
name|task161660_buttonSpacing
parameter_list|()
function_decl|;
name|void
name|task177716_disableCommitButton
parameter_list|()
function_decl|;
name|void
name|task183550_stretchFactor
parameter_list|()
function_decl|;
name|void
name|task161658_alignments
parameter_list|()
function_decl|;
name|void
name|task177022_setFixedSize
parameter_list|()
function_decl|;
name|void
name|task248107_backButton
parameter_list|()
function_decl|;
name|void
name|task255350_fieldObjectDestroyed
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_25691_fieldObjectDestroyed2
parameter_list|()
function_decl|;
comment|/*         Things that could be added:          1. Test virtual functions that are called, signals that are            emitted, etc.          2. Test QWizardPage more thorougly.          3. Test the look and field a bit more (especially the            different wizard styles, and how they interact with            pixmaps, titles, subtitles, etc.).          4. Test minimum sizes, sizes, maximum sizes, resizing, etc.          5. Try setting various options and wizard styles in various            orders and check that the results are the same every time,            no matter the order in which the properties were set.             -> Initial version done (tst_QWizard::combinations())          6. Test done() and restart().          7. Test default properties of built-in widgets.          8. Test mutual exclusiveness of Next and Commit buttons.     */
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QWizard
name|tst_QWizard
operator|::
name|tst_QWizard
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|init
name|void
name|tst_QWizard
operator|::
name|init
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//disable magic for WindowsCE
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QWizard
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|buttonText
name|void
name|tst_QWizard
operator|::
name|buttonText
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|ClassicStyle
argument_list|)
expr_stmt|;
comment|// Check the buttons' original text in Classic and Modern styles.
for|for
control|(
name|int
name|pass
init|=
literal|0
init|;
name|pass
operator|<
literal|2
condition|;
operator|++
name|pass
control|)
block|{
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"<&Back"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|"Finish"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|"Help"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// robustness
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|Stretch
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NoButton
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NStandardButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|ModernStyle
argument_list|)
expr_stmt|;
block|}
comment|// Check the buttons' original text in Mac style.
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|MacStyle
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Go Back"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Continue"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Done"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Help"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// robustness
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|Stretch
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NoButton
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NStandardButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Modify the buttons' text and see what happens.
name|wizard
operator|.
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|,
literal|"N&este"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|,
literal|"&Cucu"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|Stretch
argument_list|,
literal|"Stretch"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Go Back"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"N&este"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Done"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Help"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"&Cucu"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// robustness
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|Stretch
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NoButton
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NStandardButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Switch back to Classic style and see what happens.
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|ClassicStyle
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|pass
init|=
literal|0
init|;
name|pass
operator|<
literal|2
condition|;
operator|++
name|pass
control|)
block|{
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"<&Back"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"N&este"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|"Finish"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|"Help"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"&Cucu"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// robustness
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|Stretch
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NoButton
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NStandardButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NButtons
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOptions
argument_list|(
name|QWizard
operator|::
name|NoDefaultButton
operator||
name|QWizard
operator|::
name|NoBackButtonOnStartPage
operator||
name|QWizard
operator|::
name|NoBackButtonOnLastPage
operator||
name|QWizard
operator|::
name|DisabledBackButtonOnLastPage
operator||
name|QWizard
operator|::
name|NoCancelButton
operator||
name|QWizard
operator|::
name|CancelButtonOnLeft
operator||
name|QWizard
operator|::
name|HaveHelpButton
operator||
name|QWizard
operator|::
name|HelpButtonOnRight
operator||
name|QWizard
operator|::
name|HaveCustomButton1
operator||
name|QWizard
operator|::
name|HaveCustomButton2
operator||
name|QWizard
operator|::
name|HaveCustomButton3
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setButtonLayout
name|void
name|tst_QWizard
operator|::
name|setButtonLayout
parameter_list|()
block|{
name|QList
argument_list|<
name|QWizard
operator|::
name|WizardButton
argument_list|>
name|layout
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|ClassicStyle
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOptions
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setButtonLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|// if these crash, this means there's a bug in QWizard
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Back"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Finish"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Help"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|Stretch
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NoButton
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layout
operator|<<
name|QWizard
operator|::
name|NextButton
operator|<<
name|QWizard
operator|::
name|HelpButton
expr_stmt|;
name|wizard
operator|.
name|setButtonLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layout
operator|.
name|clear
argument_list|()
expr_stmt|;
name|layout
operator|<<
name|QWizard
operator|::
name|NextButton
operator|<<
name|QWizard
operator|::
name|HelpButton
operator|<<
name|QWizard
operator|::
name|BackButton
operator|<<
name|QWizard
operator|::
name|FinishButton
operator|<<
name|QWizard
operator|::
name|CancelButton
operator|<<
name|QWizard
operator|::
name|Stretch
operator|<<
name|QWizard
operator|::
name|CustomButton2
expr_stmt|;
comment|// Turn on all the button-related wizard options. Some of these
comment|// should have no impact on a custom layout; others should.
name|wizard
operator|.
name|setButtonLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOptions
argument_list|(
name|QWizard
operator|::
name|NoDefaultButton
operator||
name|QWizard
operator|::
name|NoBackButtonOnStartPage
operator||
name|QWizard
operator|::
name|NoBackButtonOnLastPage
operator||
name|QWizard
operator|::
name|DisabledBackButtonOnLastPage
operator||
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
operator||
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
operator||
name|QWizard
operator|::
name|NoCancelButton
operator||
name|QWizard
operator|::
name|CancelButtonOnLeft
operator||
name|QWizard
operator|::
name|HaveHelpButton
operator||
name|QWizard
operator|::
name|HelpButtonOnRight
operator||
name|QWizard
operator|::
name|HaveCustomButton1
operator||
name|QWizard
operator|::
name|HaveCustomButton2
operator||
name|QWizard
operator|::
name|HaveCustomButton3
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|// we're on first page
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// NoCancelButton overridden
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// HaveCustomButton2 overridden
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|// we're on last page
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// NoCancelButton overridden
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// HaveCustomButton2 overridden
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that the buttons are in the right order on screen.
for|for
control|(
name|int
name|pass
init|=
literal|0
init|;
name|pass
operator|<
literal|2
condition|;
operator|++
name|pass
control|)
block|{
name|wizard
operator|.
name|setLayoutDirection
argument_list|(
name|pass
operator|==
literal|0
condition|?
name|Qt
operator|::
name|LeftToRight
else|:
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|sign
init|=
operator|(
name|pass
operator|==
literal|0
operator|)
condition|?
operator|+
literal|1
else|:
operator|-
literal|1
decl_stmt|;
name|int
name|p
index|[
literal|5
index|]
decl_stmt|;
name|p
index|[
literal|0
index|]
operator|=
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|x
argument_list|()
expr_stmt|;
name|p
index|[
literal|1
index|]
operator|=
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|x
argument_list|()
expr_stmt|;
name|p
index|[
literal|2
index|]
operator|=
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|x
argument_list|()
expr_stmt|;
name|p
index|[
literal|3
index|]
operator|=
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|x
argument_list|()
expr_stmt|;
name|p
index|[
literal|4
index|]
operator|=
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|->
name|x
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
index|[
literal|0
index|]
operator|<
name|p
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
index|[
literal|1
index|]
operator|<
name|p
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
index|[
literal|2
index|]
operator|<
name|p
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
index|[
literal|3
index|]
operator|<
name|p
index|[
literal|4
index|]
argument_list|)
expr_stmt|;
block|}
name|layout
operator|.
name|clear
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|setButtonLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
operator|-
literal|1
init|;
name|i
operator|<
literal|50
condition|;
operator|++
name|i
control|)
block|{
name|QAbstractButton
modifier|*
name|button
init|=
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|WizardButton
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|button
operator|||
operator|!
name|button
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setButton
name|void
name|tst_QWizard
operator|::
name|setButton
parameter_list|()
block|{
name|QPointer
argument_list|<
name|QToolButton
argument_list|>
name|toolButton
init|=
operator|new
name|QToolButton
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|ClassicStyle
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setButton
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|,
name|toolButton
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setButton
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|,
operator|new
name|QCheckBox
argument_list|(
literal|"Kustom 2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QCheckBox
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolButton
operator|!=
literal|0
argument_list|)
expr_stmt|;
comment|// resetting the same button does nothing
name|wizard
operator|.
name|setButton
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|,
name|toolButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolButton
operator|!=
literal|0
argument_list|)
expr_stmt|;
comment|// revert to default button
name|wizard
operator|.
name|setButton
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolButton
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTitleFormatEtc
name|void
name|tst_QWizard
operator|::
name|setTitleFormatEtc
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|titleFormat
argument_list|()
operator|==
name|Qt
operator|::
name|AutoText
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|subTitleFormat
argument_list|()
operator|==
name|Qt
operator|::
name|AutoText
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setTitleFormat
argument_list|(
name|Qt
operator|::
name|RichText
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|titleFormat
argument_list|()
operator|==
name|Qt
operator|::
name|RichText
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|subTitleFormat
argument_list|()
operator|==
name|Qt
operator|::
name|AutoText
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setSubTitleFormat
argument_list|(
name|Qt
operator|::
name|PlainText
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|titleFormat
argument_list|()
operator|==
name|Qt
operator|::
name|RichText
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|subTitleFormat
argument_list|()
operator|==
name|Qt
operator|::
name|PlainText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPixmap
name|void
name|tst_QWizard
operator|::
name|setPixmap
parameter_list|()
block|{
name|QPixmap
name|p1
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPixmap
name|p2
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QPixmap
name|p3
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QPixmap
name|p4
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QPixmap
name|p5
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|QWizardPage
modifier|*
name|page
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QWizardPage
modifier|*
name|page2
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BannerPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
if|if
condition|(
name|QSysInfo
operator|::
name|MacintoshVersion
operator|>
name|QSysInfo
operator|::
name|MV_10_3
condition|)
block|{
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-23701"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
operator|==
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// fall through since the image doesn't exist on a 10.3 system.
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|#
directive|else
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BannerPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
if|if
condition|(
name|QSysInfo
operator|::
name|MacintoshVersion
operator|>
name|QSysInfo
operator|::
name|MV_10_3
condition|)
block|{
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-23701"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
operator|==
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// fall through since the image doesn't exist on a 10.3 system.
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|#
directive|else
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|wizard
operator|.
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|BannerPixmap
argument_list|,
name|p1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|,
name|p2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|,
name|p3
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|,
name|p4
argument_list|)
expr_stmt|;
name|page
operator|->
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|,
name|p5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BannerPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p3
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p4
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BannerPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p5
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p3
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p4
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BannerPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p3
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|pixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|)
operator|.
name|size
argument_list|()
operator|==
name|p4
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MyPage1
class|class
name|MyPage1
super|:
specifier|public
name|QWizardPage
block|{
public|public:
DECL|function|MyPage1
name|MyPage1
parameter_list|()
block|{
name|edit1
operator|=
operator|new
name|QLineEdit
argument_list|(
literal|"Bla 1"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|edit2
operator|=
operator|new
name|QLineEdit
argument_list|(
literal|"Bla 2"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|edit2
operator|->
name|setInputMask
argument_list|(
literal|"Mask"
argument_list|)
expr_stmt|;
name|edit3
operator|=
operator|new
name|QLineEdit
argument_list|(
literal|"Bla 3"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|edit3
operator|->
name|setMaxLength
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|edit4
operator|=
operator|new
name|QLineEdit
argument_list|(
literal|"Bla 4"
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
DECL|function|registerField
name|void
name|registerField
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|,
specifier|const
name|char
modifier|*
name|property
init|=
literal|0
parameter_list|,
specifier|const
name|char
modifier|*
name|changedSignal
init|=
literal|0
parameter_list|)
block|{
name|QWizardPage
operator|::
name|registerField
argument_list|(
name|name
argument_list|,
name|widget
argument_list|,
name|property
argument_list|,
name|changedSignal
argument_list|)
expr_stmt|;
block|}
DECL|member|edit1
name|QLineEdit
modifier|*
name|edit1
decl_stmt|;
DECL|member|edit2
name|QLineEdit
modifier|*
name|edit2
decl_stmt|;
DECL|member|edit3
name|QLineEdit
modifier|*
name|edit3
decl_stmt|;
DECL|member|edit4
name|QLineEdit
modifier|*
name|edit4
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|setDefaultProperty
name|void
name|tst_QWizard
operator|::
name|setDefaultProperty
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|MyPage1
modifier|*
name|page
init|=
operator|new
name|MyPage1
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|page
operator|->
name|registerField
argument_list|(
literal|"edit1"
argument_list|,
name|page
operator|->
name|edit1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setDefaultProperty
argument_list|(
literal|"QLineEdit"
argument_list|,
literal|"inputMask"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|page
operator|->
name|registerField
argument_list|(
literal|"edit2"
argument_list|,
name|page
operator|->
name|edit2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setDefaultProperty
argument_list|(
literal|"QLineEdit"
argument_list|,
literal|"maxLength"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|page
operator|->
name|registerField
argument_list|(
literal|"edit3"
argument_list|,
name|page
operator|->
name|edit3
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setDefaultProperty
argument_list|(
literal|"QLineEdit"
argument_list|,
literal|"text"
argument_list|,
name|SIGNAL
argument_list|(
name|textChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|page
operator|->
name|registerField
argument_list|(
literal|"edit3bis"
argument_list|,
name|page
operator|->
name|edit3
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setDefaultProperty
argument_list|(
literal|"QWidget"
argument_list|,
literal|"enabled"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// less specific, i.e. ignored
name|page
operator|->
name|registerField
argument_list|(
literal|"edit4"
argument_list|,
name|page
operator|->
name|edit4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QWizard::setField: Couldn't write to property 'customProperty'"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setDefaultProperty
argument_list|(
literal|"QLineEdit"
argument_list|,
literal|"customProperty"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|page
operator|->
name|registerField
argument_list|(
literal|"edit4bis"
argument_list|,
name|page
operator|->
name|edit4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Bla 1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit2"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|page
operator|->
name|edit2
operator|->
name|inputMask
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit3"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit3bis"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Bla 3"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit4"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Bla 4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit4bis"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setField
argument_list|(
literal|"edit1"
argument_list|,
literal|"Alpha"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setField
argument_list|(
literal|"edit2"
argument_list|,
literal|"Beta"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setField
argument_list|(
literal|"edit3"
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setField
argument_list|(
literal|"edit3bis"
argument_list|,
literal|"Gamma"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setField
argument_list|(
literal|"edit4"
argument_list|,
literal|"Delta"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setField
argument_list|(
literal|"edit4bis"
argument_list|,
literal|"Epsilon"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Alpha"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit2"
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Beta"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit3"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit3bis"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Gamma"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit4"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Delta"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|field
argument_list|(
literal|"edit4bis"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Epsilon"
argument_list|)
argument_list|)
expr_stmt|;
comment|// make sure the data structure is reasonable
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|200000
condition|;
operator|++
name|i
control|)
block|{
name|wizard
operator|.
name|setDefaultProperty
argument_list|(
literal|"QLineEdit"
argument_list|,
name|QByteArray
argument_list|(
literal|"x"
operator|+
name|QByteArray
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setDefaultProperty
argument_list|(
literal|"QLabel"
argument_list|,
name|QByteArray
argument_list|(
literal|"y"
operator|+
name|QByteArray
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addPage
name|void
name|tst_QWizard
operator|::
name|addPage
parameter_list|()
block|{
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
specifier|const
name|int
name|N
init|=
literal|100
decl_stmt|;
name|QWizardPage
modifier|*
name|pages
index|[
name|N
index|]
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|wizard
argument_list|,
name|SIGNAL
argument_list|(
name|pageAdded
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|N
condition|;
operator|++
name|i
control|)
block|{
name|pages
index|[
name|i
index|]
operator|=
operator|new
name|QWizardPage
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|addPage
argument_list|(
name|pages
index|[
name|i
index|]
argument_list|)
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pages
index|[
name|i
index|]
operator|->
name|window
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|wizard
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|arguments
init|=
name|spy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|N
condition|;
operator|++
name|i
control|)
block|{
name|QVERIFY
argument_list|(
name|pages
index|[
name|i
index|]
operator|==
name|wizard
operator|.
name|page
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|page
argument_list|(
name|N
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|page
argument_list|(
name|N
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
name|N
operator|+
literal|50
argument_list|,
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|arguments
init|=
name|spy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|N
operator|+
literal|50
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
operator|-
literal|3000
argument_list|,
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
operator|-
literal|3000
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|pageX
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|addPage
argument_list|(
name|pageX
argument_list|)
argument_list|,
name|N
operator|+
literal|51
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|page
argument_list|(
name|N
operator|+
literal|51
argument_list|)
argument_list|,
name|pageX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|N
operator|+
literal|51
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
argument_list|,
name|N
operator|+
literal|52
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|N
operator|+
literal|52
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QWizard::setPage: Cannot insert null page"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// generates a warning
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_define
DECL|macro|CHECK_VISITED
define|#
directive|define
name|CHECK_VISITED
parameter_list|(
name|wizard
parameter_list|,
name|list
parameter_list|)
define|\
value|do { \         QList<int> myList = list; \         QCOMPARE((wizard).visitedPages(), myList); \         Q_FOREACH(int id, myList) \             QVERIFY((wizard).hasVisitedPage(id)); \     } while (0)
end_define
begin_function
DECL|function|setPage
name|void
name|tst_QWizard
operator|::
name|setPage
parameter_list|()
block|{
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|QWizardPage
modifier|*
name|page
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|wizard
argument_list|,
name|SIGNAL
argument_list|(
name|pageAdded
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|page
operator|=
operator|new
name|QWizardPage
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QWizard::setPage: Cannot insert page with ID -1"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
operator|-
literal|1
argument_list|,
name|page
argument_list|)
expr_stmt|;
comment|// gives a warning and does nothing
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|page
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|page
operator|=
operator|new
name|QWizardPage
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|0
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|arguments
init|=
name|spy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page
operator|->
name|window
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|wizard
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|page
argument_list|(
literal|0
argument_list|)
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|page
operator|=
operator|new
name|QWizardPage
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
operator|-
literal|2
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page
operator|->
name|window
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|wizard
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|2
argument_list|)
expr_stmt|;
name|page
operator|=
operator|new
name|QWizardPage
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|2
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|page
argument_list|(
literal|2
argument_list|)
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|2
argument_list|)
expr_stmt|;
name|page
operator|=
operator|new
name|QWizardPage
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
operator|-
literal|3
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|3
argument_list|)
argument_list|,
name|page
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
operator|<<
operator|-
literal|2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
operator|<<
operator|-
literal|2
operator|<<
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
operator|++
name|i
control|)
block|{
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
operator|<<
operator|-
literal|2
operator|<<
literal|0
operator|<<
literal|2
argument_list|)
expr_stmt|;
block|}
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
operator|<<
operator|-
literal|2
operator|<<
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
operator|<<
operator|-
literal|2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
operator|++
name|i
control|)
block|{
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
operator|++
name|i
control|)
block|{
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|3
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setStartId
name|void
name|tst_QWizard
operator|::
name|setStartId
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
name|INT_MIN
argument_list|,
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
operator|-
literal|2
argument_list|,
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|0
argument_list|,
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|1
argument_list|,
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
name|INT_MAX
argument_list|,
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QWizard::setStartId: Invalid page ID 123"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|startId
argument_list|()
argument_list|,
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentId
argument_list|()
argument_list|,
name|INT_MAX
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
operator|==
name|wizard
operator|.
name|page
argument_list|(
name|INT_MAX
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|nextId
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|CHECK_VISITED
argument_list|(
name|wizard
argument_list|,
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|2
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|INT_MAX
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
DECL|struct|MyPage2
struct|struct
name|MyPage2
super|:
specifier|public
name|QWizardPage
block|{
public|public:
DECL|function|MyPage2
name|MyPage2
parameter_list|()
member_init_list|:
name|init
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|cleanup
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|validate
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|initializePage
name|void
name|initializePage
parameter_list|()
block|{
operator|++
name|init
expr_stmt|;
name|QWizardPage
operator|::
name|initializePage
argument_list|()
expr_stmt|;
block|}
DECL|function|cleanupPage
name|void
name|cleanupPage
parameter_list|()
block|{
operator|++
name|cleanup
expr_stmt|;
name|QWizardPage
operator|::
name|cleanupPage
argument_list|()
expr_stmt|;
block|}
DECL|function|validatePage
name|bool
name|validatePage
parameter_list|()
block|{
operator|++
name|validate
expr_stmt|;
return|return
name|QWizardPage
operator|::
name|validatePage
argument_list|()
return|;
block|}
DECL|function|sanityCheck
name|bool
name|sanityCheck
parameter_list|(
name|int
name|init
parameter_list|,
name|int
name|cleanup
parameter_list|)
block|{
return|return
name|init
operator|==
name|this
operator|->
name|init
operator|&&
name|cleanup
operator|==
name|this
operator|->
name|cleanup
operator|&&
operator|(
name|this
operator|->
name|init
operator|==
name|this
operator|->
name|cleanup
operator|||
name|this
operator|->
name|init
operator|-
literal|1
operator|==
name|this
operator|->
name|cleanup
operator|)
return|;
block|}
DECL|member|init
name|int
name|init
decl_stmt|;
DECL|member|cleanup
name|int
name|cleanup
decl_stmt|;
DECL|member|validate
name|int
name|validate
decl_stmt|;
block|}
struct|;
end_struct
begin_define
DECL|macro|CHECK_PAGE_INIT
define|#
directive|define
name|CHECK_PAGE_INIT
parameter_list|(
name|i0
parameter_list|,
name|c0
parameter_list|,
name|i1
parameter_list|,
name|c1
parameter_list|,
name|i2
parameter_list|,
name|c2
parameter_list|)
define|\
value|QVERIFY(page0->sanityCheck((i0), (c0))); \     QVERIFY(page1->sanityCheck((i1), (c1))); \     QVERIFY(page2->sanityCheck((i2), (c2)));
end_define
begin_function
DECL|function|setOption_IndependentPages
name|void
name|tst_QWizard
operator|::
name|setOption_IndependentPages
parameter_list|()
block|{
name|MyPage2
modifier|*
name|page0
init|=
operator|new
name|MyPage2
decl_stmt|;
name|MyPage2
modifier|*
name|page1
init|=
operator|new
name|MyPage2
decl_stmt|;
name|MyPage2
modifier|*
name|page2
init|=
operator|new
name|MyPage2
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|testOption
argument_list|(
name|QWizard
operator|::
name|IndependentPages
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
comment|// Make sure initializePage() and cleanupPage() are called are
comment|// they should when the
comment|// wizard.testOption(QWizard::IndependentPages option is off.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|CHECK_PAGE_INIT
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|i
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
block|}
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// Now, turn on the option and check that they're called at the
comment|// appropriate times (which aren't the same).
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IndependentPages
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|12
argument_list|)
expr_stmt|;
comment|// Fun stuff here.
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IndependentPages
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IndependentPages
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IndependentPages
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|CHECK_PAGE_INIT
argument_list|(
literal|12
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOption_IgnoreSubTitles
name|void
name|tst_QWizard
operator|::
name|setOption_IgnoreSubTitles
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QSKIP
argument_list|(
literal|"Skipped because of limited resources and potential crash. (Task: 166824)"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QWizard
name|wizard1
decl_stmt|;
name|wizard1
operator|.
name|setButtonLayout
argument_list|(
name|QList
argument_list|<
name|QWizard
operator|::
name|WizardButton
argument_list|>
argument_list|()
operator|<<
name|QWizard
operator|::
name|CancelButton
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard1
operator|.
name|testOption
argument_list|(
name|QWizard
operator|::
name|IgnoreSubTitles
argument_list|)
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page11
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page11
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|page11
operator|->
name|setSubTitle
argument_list|(
literal|"Some subtitle"
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page12
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page12
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|addPage
argument_list|(
name|page11
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|addPage
argument_list|(
name|page12
argument_list|)
expr_stmt|;
name|QWizard
name|wizard2
decl_stmt|;
name|wizard2
operator|.
name|setButtonLayout
argument_list|(
name|QList
argument_list|<
name|QWizard
operator|::
name|WizardButton
argument_list|>
argument_list|()
operator|<<
name|QWizard
operator|::
name|CancelButton
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IgnoreSubTitles
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page21
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page21
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|page21
operator|->
name|setSubTitle
argument_list|(
literal|"Some subtitle"
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page22
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page22
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|addPage
argument_list|(
name|page21
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|addPage
argument_list|(
name|page22
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|show
argument_list|()
expr_stmt|;
name|wizard2
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Check that subtitles are shown when they should (i.e.,
comment|// they're set and IgnoreSubTitles is off).
name|qApp
operator|->
name|setActiveWindow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// ensure no focus rectangle around cancel button
name|QImage
name|i11
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
decl_stmt|;
name|QImage
name|i21
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|i11
operator|!=
name|i21
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|next
argument_list|()
expr_stmt|;
name|wizard2
operator|.
name|next
argument_list|()
expr_stmt|;
name|QImage
name|i12
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
decl_stmt|;
name|QImage
name|i22
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|i12
operator|==
name|i22
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i21
operator|==
name|i22
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|back
argument_list|()
expr_stmt|;
name|wizard2
operator|.
name|back
argument_list|()
expr_stmt|;
name|QImage
name|i13
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
decl_stmt|;
name|QImage
name|i23
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|i13
operator|==
name|i11
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i23
operator|==
name|i21
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IgnoreSubTitles
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IgnoreSubTitles
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QImage
name|i14
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
decl_stmt|;
name|QImage
name|i24
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|i14
operator|==
name|i21
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i24
operator|==
name|i11
argument_list|)
expr_stmt|;
comment|// Check the impact of subtitles on the rest of the layout, by
comment|// using a subtitle that looks empty (but that isn't). In
comment|// Classic and Modern styles, this should be enough to trigger a
comment|// "header"; in Mac style, this only creates a QLabel, with no
comment|// text, i.e. it doesn't affect the layout.
name|page11
operator|->
name|setSubTitle
argument_list|(
literal|"<b></b>"
argument_list|)
expr_stmt|;
comment|// not quite empty, but looks empty
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|wizard1
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|IgnoreSubTitles
argument_list|,
name|j
operator|==
literal|0
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|setWizardStyle
argument_list|(
name|i
operator|==
literal|0
condition|?
name|QWizard
operator|::
name|ClassicStyle
else|:
name|i
operator|==
literal|1
condition|?
name|QWizard
operator|::
name|ModernStyle
else|:
name|QWizard
operator|::
name|MacStyle
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QImage
name|i1
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
decl_stmt|;
name|wizard1
operator|.
name|next
argument_list|()
expr_stmt|;
name|QImage
name|i2
init|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
decl_stmt|;
if|if
condition|(
name|j
operator|==
literal|0
operator|||
name|wizard1
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|MacStyle
condition|)
block|{
name|QVERIFY
argument_list|(
name|i1
operator|==
name|i2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|i1
operator|!=
name|i2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|setOption_ExtendedWatermarkPixmap
name|void
name|tst_QWizard
operator|::
name|setOption_ExtendedWatermarkPixmap
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QSKIP
argument_list|(
literal|"Skipped because of limited resources and potential crash. (Task: 166824)"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QPixmap
name|watermarkPixmap
argument_list|(
literal|200
argument_list|,
literal|400
argument_list|)
decl_stmt|;
name|watermarkPixmap
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|QWizard
name|wizard1
decl_stmt|;
name|wizard1
operator|.
name|setButtonLayout
argument_list|(
name|QList
argument_list|<
name|QWizard
operator|::
name|WizardButton
argument_list|>
argument_list|()
operator|<<
name|QWizard
operator|::
name|CancelButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard1
operator|.
name|testOption
argument_list|(
name|QWizard
operator|::
name|ExtendedWatermarkPixmap
argument_list|)
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page11
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page11
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|page11
operator|->
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|,
name|watermarkPixmap
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page12
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page12
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|addPage
argument_list|(
name|page11
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|addPage
argument_list|(
name|page12
argument_list|)
expr_stmt|;
name|QWizard
name|wizard2
decl_stmt|;
name|wizard2
operator|.
name|setButtonLayout
argument_list|(
name|QList
argument_list|<
name|QWizard
operator|::
name|WizardButton
argument_list|>
argument_list|()
operator|<<
name|QWizard
operator|::
name|CancelButton
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|ExtendedWatermarkPixmap
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page21
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page21
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|page21
operator|->
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|,
name|watermarkPixmap
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page22
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|page22
operator|->
name|setTitle
argument_list|(
literal|"Page X"
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|addPage
argument_list|(
name|page21
argument_list|)
expr_stmt|;
name|wizard2
operator|.
name|addPage
argument_list|(
name|page22
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|show
argument_list|()
expr_stmt|;
name|wizard2
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Check the impact of watermark pixmaps on the rest of the layout.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|QImage
name|i1
index|[
literal|2
index|]
decl_stmt|;
name|QImage
name|i2
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|wizard1
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|ExtendedWatermarkPixmap
argument_list|,
name|j
operator|==
literal|0
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|setWizardStyle
argument_list|(
name|i
operator|==
literal|0
condition|?
name|QWizard
operator|::
name|ClassicStyle
else|:
name|i
operator|==
literal|1
condition|?
name|QWizard
operator|::
name|ModernStyle
else|:
name|QWizard
operator|::
name|MacStyle
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|restart
argument_list|()
expr_stmt|;
name|wizard1
operator|.
name|setMaximumSize
argument_list|(
literal|1000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|resize
argument_list|(
literal|600
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|i1
index|[
name|j
index|]
operator|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|next
argument_list|()
expr_stmt|;
name|wizard1
operator|.
name|setMaximumSize
argument_list|(
literal|1000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|wizard1
operator|.
name|resize
argument_list|(
literal|600
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|i2
index|[
name|j
index|]
operator|=
name|grabWidget
argument_list|(
operator|&
name|wizard1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|wizard1
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|MacStyle
condition|)
block|{
name|QVERIFY
argument_list|(
name|i1
index|[
literal|0
index|]
operator|==
name|i1
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i2
index|[
literal|0
index|]
operator|==
name|i2
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i1
index|[
literal|0
index|]
operator|==
name|i2
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|i1
index|[
literal|0
index|]
operator|!=
name|i1
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i2
index|[
literal|0
index|]
operator|==
name|i2
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i1
index|[
literal|0
index|]
operator|!=
name|i2
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|i1
index|[
literal|1
index|]
operator|!=
name|i2
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|setOption_NoDefaultButton
name|void
name|tst_QWizard
operator|::
name|setOption_NoDefaultButton
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoDefaultButton
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|page
argument_list|(
literal|0
argument_list|)
operator|->
name|setFinalPage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
if|if
condition|(
name|QPushButton
modifier|*
name|pb
init|=
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
condition|)
name|pb
operator|->
name|setAutoDefault
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|QPushButton
modifier|*
name|pb
init|=
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
argument_list|)
condition|)
name|pb
operator|->
name|setAutoDefault
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoDefaultButton
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoDefaultButton
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QPushButton
operator|*
argument_list|>
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|)
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOption_NoBackButtonOnStartPage
name|void
name|tst_QWizard
operator|::
name|setOption_NoBackButtonOnStartPage
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOption_NoBackButtonOnLastPage
name|void
name|tst_QWizard
operator|::
name|setOption_NoBackButtonOnLastPage
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnLastPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|DisabledBackButtonOnLastPage
argument_list|,
name|i
operator|==
literal|0
argument_list|)
expr_stmt|;
comment|// changes nothing
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|page
argument_list|(
literal|1
argument_list|)
operator|->
name|setFinalPage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// changes nothing (final != last in general)
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnLastPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnLastPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// this is maybe wrong
block|}
block|}
end_function
begin_function
DECL|function|setOption_DisabledBackButtonOnLastPage
name|void
name|tst_QWizard
operator|::
name|setOption_DisabledBackButtonOnLastPage
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|DisabledBackButtonOnLastPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|page
argument_list|(
literal|1
argument_list|)
operator|->
name|setFinalPage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// changes nothing (final != last in general)
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|DisabledBackButtonOnLastPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|DisabledBackButtonOnLastPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
comment|// this is maybe wrong
block|}
end_function
begin_function
DECL|function|setOption_HaveNextButtonOnLastPage
name|void
name|tst_QWizard
operator|::
name|setOption_HaveNextButtonOnLastPage
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|page
argument_list|(
literal|1
argument_list|)
operator|->
name|setFinalPage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// changes nothing (final != last in general)
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOption_HaveFinishButtonOnEarlyPages
name|void
name|tst_QWizard
operator|::
name|setOption_HaveFinishButtonOnEarlyPages
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|testOption
argument_list|(
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|page
argument_list|(
literal|1
argument_list|)
operator|->
name|setFinalPage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOption_NoCancelButton
name|void
name|tst_QWizard
operator|::
name|setOption_NoCancelButton
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoCancelButton
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|CancelButtonOnLeft
argument_list|,
name|i
operator|==
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoCancelButton
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoCancelButton
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setOption_CancelButtonOnLeft
name|void
name|tst_QWizard
operator|::
name|setOption_CancelButtonOnLeft
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|int
name|sign
init|=
operator|(
name|i
operator|==
literal|0
operator|)
condition|?
operator|+
literal|1
else|:
operator|-
literal|1
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setLayoutDirection
argument_list|(
name|i
operator|==
literal|0
condition|?
name|Qt
operator|::
name|LeftToRight
else|:
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoCancelButton
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|CancelButtonOnLeft
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
specifier|const
name|QAbstractButton
modifier|*
name|refButton
init|=
name|wizard
operator|.
name|button
argument_list|(
operator|(
name|wizard
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|AeroStyle
operator|)
condition|?
name|QWizard
operator|::
name|NextButton
else|:
name|QWizard
operator|::
name|BackButton
argument_list|)
decl_stmt|;
specifier|const
name|QAbstractButton
modifier|*
name|refButton2
init|=
name|wizard
operator|.
name|button
argument_list|(
operator|(
name|wizard
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|AeroStyle
operator|)
condition|?
name|QWizard
operator|::
name|FinishButton
else|:
name|QWizard
operator|::
name|BackButton
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|x
argument_list|()
operator|<
name|sign
operator|*
name|refButton
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|x
argument_list|()
operator|<
name|sign
operator|*
name|refButton
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|CancelButtonOnLeft
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|x
argument_list|()
operator|>
name|sign
operator|*
name|refButton2
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
operator|->
name|x
argument_list|()
operator|>
name|sign
operator|*
name|refButton
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setOption_HaveHelpButton
name|void
name|tst_QWizard
operator|::
name|setOption_HaveHelpButton
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QWizard
name|wizard
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|testOption
argument_list|(
name|QWizard
operator|::
name|HaveHelpButton
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveHelpButton
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HelpButtonOnRight
argument_list|,
name|i
operator|==
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveHelpButton
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveHelpButton
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setOption_HelpButtonOnRight
name|void
name|tst_QWizard
operator|::
name|setOption_HelpButtonOnRight
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|int
name|sign
init|=
operator|(
name|i
operator|==
literal|0
operator|)
condition|?
operator|+
literal|1
else|:
operator|-
literal|1
decl_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setLayoutDirection
argument_list|(
name|i
operator|==
literal|0
condition|?
name|Qt
operator|::
name|LeftToRight
else|:
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveHelpButton
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HelpButtonOnRight
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|NoBackButtonOnStartPage
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
specifier|const
name|QAbstractButton
modifier|*
name|refButton
init|=
name|wizard
operator|.
name|button
argument_list|(
operator|(
name|wizard
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|AeroStyle
operator|)
condition|?
name|QWizard
operator|::
name|NextButton
else|:
name|QWizard
operator|::
name|BackButton
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|x
argument_list|()
operator|<
name|sign
operator|*
name|refButton
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|x
argument_list|()
operator|<
name|sign
operator|*
name|refButton
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HelpButtonOnRight
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|x
argument_list|()
operator|>
name|sign
operator|*
name|refButton
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sign
operator|*
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|HelpButton
argument_list|)
operator|->
name|x
argument_list|()
operator|>
name|sign
operator|*
name|refButton
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setOption_HaveCustomButtonX
name|void
name|tst_QWizard
operator|::
name|setOption_HaveCustomButtonX
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
literal|2
condition|;
operator|++
name|k
control|)
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|,
literal|"Foo"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setButton
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|,
operator|new
name|QCheckBox
argument_list|(
literal|"Bar"
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|->
name|setText
argument_list|(
literal|"Baz"
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveCustomButton1
argument_list|,
name|i
operator|==
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveCustomButton2
argument_list|,
name|j
operator|==
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setOption
argument_list|(
name|QWizard
operator|::
name|HaveCustomButton3
argument_list|,
name|k
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|->
name|isHidden
argument_list|()
operator|==
operator|(
name|i
operator|!=
literal|0
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|->
name|isHidden
argument_list|()
operator|==
operator|(
name|j
operator|!=
literal|0
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|->
name|isHidden
argument_list|()
operator|==
operator|(
name|k
operator|!=
literal|0
operator|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|+
name|j
operator|+
name|k
operator|==
literal|0
condition|)
block|{
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|)
operator|->
name|x
argument_list|()
operator|<
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|)
operator|->
name|x
argument_list|()
operator|<
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|)
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_function
begin_class
DECL|class|Operation
class|class
name|Operation
block|{
public|public:
specifier|virtual
name|void
name|apply
parameter_list|(
name|QWizard
modifier|*
parameter_list|)
specifier|const
function_decl|=
literal|0
function_decl|;
specifier|virtual
name|QString
name|describe
parameter_list|()
specifier|const
function_decl|=
literal|0
function_decl|;
protected|protected:
DECL|function|~Operation
specifier|virtual
name|~
name|Operation
parameter_list|()
block|{}
block|}
class|;
end_class
begin_class
DECL|class|SetPage
class|class
name|SetPage
super|:
specifier|public
name|Operation
block|{
DECL|function|apply
name|void
name|apply
parameter_list|(
name|QWizard
modifier|*
name|wizard
parameter_list|)
specifier|const
block|{
name|wizard
operator|->
name|restart
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|page
condition|;
operator|++
name|j
control|)
name|wizard
operator|->
name|next
argument_list|()
expr_stmt|;
block|}
DECL|function|describe
name|QString
name|describe
parameter_list|()
specifier|const
block|{
return|return
name|QString
argument_list|(
literal|"set page %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|page
argument_list|)
return|;
block|}
DECL|member|page
specifier|const
name|int
name|page
decl_stmt|;
public|public:
DECL|function|SetPage
name|SetPage
parameter_list|(
name|int
name|page
parameter_list|)
member_init_list|:
name|page
argument_list|(
name|page
argument_list|)
block|{}
block|}
class|;
end_class
begin_class
DECL|class|SetStyle
class|class
name|SetStyle
super|:
specifier|public
name|Operation
block|{
DECL|function|apply
name|void
name|apply
parameter_list|(
name|QWizard
modifier|*
name|wizard
parameter_list|)
specifier|const
block|{
name|wizard
operator|->
name|setWizardStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
block|}
DECL|function|describe
name|QString
name|describe
parameter_list|()
specifier|const
block|{
return|return
name|QString
argument_list|(
literal|"set style %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|style
argument_list|)
return|;
block|}
DECL|member|style
specifier|const
name|QWizard
operator|::
name|WizardStyle
name|style
decl_stmt|;
public|public:
DECL|function|SetStyle
name|SetStyle
parameter_list|(
name|QWizard
operator|::
name|WizardStyle
name|style
parameter_list|)
member_init_list|:
name|style
argument_list|(
name|style
argument_list|)
block|{}
block|}
class|;
end_class
begin_class
DECL|class|SetOption
class|class
name|SetOption
super|:
specifier|public
name|Operation
block|{
DECL|function|apply
name|void
name|apply
parameter_list|(
name|QWizard
modifier|*
name|wizard
parameter_list|)
specifier|const
block|{
name|wizard
operator|->
name|setOption
argument_list|(
name|option
argument_list|,
name|on
argument_list|)
expr_stmt|;
block|}
name|QString
name|describe
parameter_list|()
specifier|const
function_decl|;
DECL|member|option
specifier|const
name|QWizard
operator|::
name|WizardOption
name|option
decl_stmt|;
DECL|member|on
specifier|const
name|bool
name|on
decl_stmt|;
public|public:
DECL|function|SetOption
name|SetOption
parameter_list|(
name|QWizard
operator|::
name|WizardOption
name|option
parameter_list|,
name|bool
name|on
parameter_list|)
member_init_list|:
name|option
argument_list|(
name|option
argument_list|)
member_init_list|,
name|on
argument_list|(
name|on
argument_list|)
block|{}
block|}
class|;
end_class
begin_class
DECL|class|OptionInfo
class|class
name|OptionInfo
block|{
DECL|function|OptionInfo
name|OptionInfo
parameter_list|()
block|{
name|tags
index|[
name|QWizard
operator|::
name|IndependentPages
index|]
operator|=
literal|"0/IPP"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|IgnoreSubTitles
index|]
operator|=
literal|"1/IST"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|ExtendedWatermarkPixmap
index|]
operator|=
literal|"2/EWP"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|NoDefaultButton
index|]
operator|=
literal|"3/NDB"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|NoBackButtonOnStartPage
index|]
operator|=
literal|"4/BSP"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|NoBackButtonOnLastPage
index|]
operator|=
literal|"5/BLP"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|DisabledBackButtonOnLastPage
index|]
operator|=
literal|"6/DLP"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
index|]
operator|=
literal|"7/NLP"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
index|]
operator|=
literal|"8/FEP"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|NoCancelButton
index|]
operator|=
literal|"9/NCB"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|CancelButtonOnLeft
index|]
operator|=
literal|"10/CBL"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|HaveHelpButton
index|]
operator|=
literal|"11/HHB"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|HelpButtonOnRight
index|]
operator|=
literal|"12/HBR"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|HaveCustomButton1
index|]
operator|=
literal|"13/CB1"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|HaveCustomButton2
index|]
operator|=
literal|"14/CB2"
expr_stmt|;
name|tags
index|[
name|QWizard
operator|::
name|HaveCustomButton3
index|]
operator|=
literal|"15/CB3"
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QMap
argument_list|<
name|QWizard
operator|::
name|WizardOption
argument_list|,
name|Operation
modifier|*
argument_list|>
name|operations_
decl_stmt|;
foreach|foreach
control|(
name|QWizard
operator|::
name|WizardOption
name|option
decl|,
name|tags
operator|.
name|keys
argument_list|()
control|)
name|operations_
index|[
name|option
index|]
operator|=
operator|new
name|SetOption
argument_list|(
name|option
argument_list|,
name|i
operator|==
literal|1
argument_list|)
expr_stmt|;
name|operations
operator|<<
name|operations_
expr_stmt|;
block|}
block|}
name|OptionInfo
parameter_list|(
name|OptionInfo
specifier|const
modifier|&
parameter_list|)
constructor_decl|;
name|OptionInfo
modifier|&
name|operator
name|=
parameter_list|(
name|OptionInfo
specifier|const
modifier|&
parameter_list|)
function_decl|;
DECL|member|tags
name|QMap
argument_list|<
name|QWizard
operator|::
name|WizardOption
argument_list|,
name|QString
argument_list|>
name|tags
decl_stmt|;
DECL|member|operations
name|QList
argument_list|<
name|QMap
argument_list|<
name|QWizard
operator|::
name|WizardOption
argument_list|,
name|Operation
modifier|*
argument_list|>
argument_list|>
name|operations
decl_stmt|;
public|public:
DECL|function|instance
specifier|static
name|OptionInfo
modifier|&
name|instance
parameter_list|()
block|{
specifier|static
name|OptionInfo
name|optionInfo
decl_stmt|;
return|return
name|optionInfo
return|;
block|}
DECL|function|tag
name|QString
name|tag
parameter_list|(
name|QWizard
operator|::
name|WizardOption
name|option
parameter_list|)
specifier|const
block|{
return|return
name|tags
operator|.
name|value
argument_list|(
name|option
argument_list|)
return|;
block|}
DECL|function|operation
name|Operation
modifier|*
name|operation
parameter_list|(
name|QWizard
operator|::
name|WizardOption
name|option
parameter_list|,
name|bool
name|on
parameter_list|)
specifier|const
block|{
return|return
name|operations
operator|.
name|at
argument_list|(
name|on
argument_list|)
operator|.
name|value
argument_list|(
name|option
argument_list|)
return|;
block|}
DECL|function|options
name|QList
argument_list|<
name|QWizard
operator|::
name|WizardOption
argument_list|>
name|options
parameter_list|()
specifier|const
block|{
return|return
name|tags
operator|.
name|keys
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|describe
name|QString
name|SetOption
operator|::
name|describe
parameter_list|()
specifier|const
block|{
return|return
name|QString
argument_list|(
literal|"set opt %1 %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|OptionInfo
operator|::
name|instance
argument_list|()
operator|.
name|tag
argument_list|(
name|option
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|on
argument_list|)
return|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Operation *
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|SetPage *
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|SetStyle *
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|SetOption *
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QList<Operation *>
argument_list|)
end_macro
begin_class
DECL|class|TestGroup
class|class
name|TestGroup
block|{
public|public:
DECL|enum|Type
DECL|enumerator|Equality
DECL|enumerator|NonEquality
enum|enum
name|Type
block|{
name|Equality
block|,
name|NonEquality
block|}
enum|;
DECL|function|TestGroup
name|TestGroup
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
init|=
name|QString
argument_list|(
literal|"no name"
argument_list|)
parameter_list|,
name|Type
name|type
init|=
name|Equality
parameter_list|)
member_init_list|:
name|name
argument_list|(
name|name
argument_list|)
member_init_list|,
name|type
argument_list|(
name|type
argument_list|)
member_init_list|,
name|nRows_
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|reset
name|void
name|reset
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
name|Type
name|type
init|=
name|Equality
parameter_list|)
block|{
name|this
operator|->
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|->
name|type
operator|=
name|type
expr_stmt|;
name|combinations
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|function|add
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
modifier|&
name|add
parameter_list|()
block|{
name|combinations
operator|<<
operator|new
name|QList
argument_list|<
name|Operation
operator|*
argument_list|>
expr_stmt|;
return|return
operator|*
operator|(
name|combinations
operator|.
name|last
argument_list|()
operator|)
return|;
block|}
DECL|function|createTestRows
name|void
name|createTestRows
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|combinations
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
name|name
operator|+
name|QString
argument_list|(
literal|", row %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|data
argument_list|()
argument_list|)
operator|<<
operator|(
name|i
operator|==
literal|0
operator|)
operator|<<
operator|(
name|type
operator|==
name|Equality
operator|)
operator|<<
operator|*
operator|(
name|combinations
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|)
expr_stmt|;
operator|++
name|nRows_
expr_stmt|;
block|}
block|}
DECL|function|nRows
name|int
name|nRows
parameter_list|()
specifier|const
block|{
return|return
name|nRows_
return|;
block|}
private|private:
DECL|member|name
name|QString
name|name
decl_stmt|;
DECL|member|type
name|Type
name|type
decl_stmt|;
DECL|member|nRows_
name|int
name|nRows_
decl_stmt|;
DECL|member|combinations
name|QList
argument_list|<
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
modifier|*
argument_list|>
name|combinations
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|IntroPage
class|class
name|IntroPage
super|:
specifier|public
name|QWizardPage
block|{
name|Q_OBJECT
public|public:
DECL|function|IntroPage
name|IntroPage
parameter_list|()
block|{
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Intro"
argument_list|)
argument_list|)
expr_stmt|;
name|setSubTitle
argument_list|(
name|tr
argument_list|(
literal|"Intro Subtitle"
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Intro Label"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|MiddlePage
class|class
name|MiddlePage
super|:
specifier|public
name|QWizardPage
block|{
name|Q_OBJECT
public|public:
DECL|function|MiddlePage
name|MiddlePage
parameter_list|()
block|{
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Middle"
argument_list|)
argument_list|)
expr_stmt|;
name|setSubTitle
argument_list|(
name|tr
argument_list|(
literal|"Middle Subtitle"
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Middle Label"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|ConclusionPage
class|class
name|ConclusionPage
super|:
specifier|public
name|QWizardPage
block|{
name|Q_OBJECT
public|public:
DECL|function|ConclusionPage
name|ConclusionPage
parameter_list|()
block|{
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Conclusion"
argument_list|)
argument_list|)
expr_stmt|;
name|setSubTitle
argument_list|(
name|tr
argument_list|(
literal|"Conclusion Subtitle"
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Conclusion Label"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|TestWizard
class|class
name|TestWizard
super|:
specifier|public
name|QWizard
block|{
name|Q_OBJECT
DECL|member|pageIds
name|QList
argument_list|<
name|int
argument_list|>
name|pageIds
decl_stmt|;
DECL|member|opsDescr
name|QString
name|opsDescr
decl_stmt|;
public|public:
DECL|function|TestWizard
name|TestWizard
parameter_list|()
block|{
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|BannerPixmap
argument_list|,
name|QPixmap
argument_list|(
literal|":/images/banner.png"
argument_list|)
argument_list|)
expr_stmt|;
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|BackgroundPixmap
argument_list|,
name|QPixmap
argument_list|(
literal|":/images/background.png"
argument_list|)
argument_list|)
expr_stmt|;
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|WatermarkPixmap
argument_list|,
name|QPixmap
argument_list|(
literal|":/images/watermark.png"
argument_list|)
argument_list|)
expr_stmt|;
name|setPixmap
argument_list|(
name|QWizard
operator|::
name|LogoPixmap
argument_list|,
name|QPixmap
argument_list|(
literal|":/images/logo.png"
argument_list|)
argument_list|)
expr_stmt|;
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|CustomButton1
argument_list|,
literal|"custom 1"
argument_list|)
expr_stmt|;
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|CustomButton2
argument_list|,
literal|"custom 2"
argument_list|)
expr_stmt|;
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|CustomButton3
argument_list|,
literal|"custom 3"
argument_list|)
expr_stmt|;
name|pageIds
operator|<<
name|addPage
argument_list|(
operator|new
name|IntroPage
argument_list|)
expr_stmt|;
name|pageIds
operator|<<
name|addPage
argument_list|(
operator|new
name|MiddlePage
argument_list|)
expr_stmt|;
name|pageIds
operator|<<
name|addPage
argument_list|(
operator|new
name|ConclusionPage
argument_list|)
expr_stmt|;
comment|// Disable antialiased font rendering since this may sometimes result in tiny
comment|// and (apparent) non-deterministic pixel variations between images expected to be
comment|// identical. This may only be a problem on X11.
name|QFont
name|f
init|=
name|font
argument_list|()
decl_stmt|;
name|f
operator|.
name|setStyleStrategy
argument_list|(
name|QFont
operator|::
name|NoAntialias
argument_list|)
expr_stmt|;
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
comment|// ### Required to work with a deficiency(?) in QWizard:
comment|//        setFixedSize(800, 600);
block|}
DECL|function|~TestWizard
name|~
name|TestWizard
parameter_list|()
block|{
foreach|foreach
control|(
name|int
name|id
decl|,
name|pageIds
control|)
block|{
name|QWizardPage
modifier|*
name|page_to_delete
init|=
name|page
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|removePage
argument_list|(
name|id
argument_list|)
expr_stmt|;
operator|delete
name|page_to_delete
expr_stmt|;
block|}
block|}
DECL|function|applyOperations
name|void
name|applyOperations
parameter_list|(
specifier|const
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
modifier|&
name|operations
parameter_list|)
block|{
foreach|foreach
control|(
name|Operation
modifier|*
name|op
decl|,
name|operations
control|)
block|{
if|if
condition|(
name|op
condition|)
block|{
name|op
operator|->
name|apply
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|opsDescr
operator|+=
name|QString
argument_list|(
literal|"(%1) "
argument_list|)
operator|.
name|arg
argument_list|(
name|op
operator|->
name|describe
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|function|createImage
name|QImage
name|createImage
parameter_list|()
specifier|const
block|{
return|return
cast|const_cast
argument_list|<
name|TestWizard
operator|*
argument_list|>
argument_list|(
name|this
argument_list|)
operator|->
name|grab
argument_list|()
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
return|;
block|}
DECL|function|operationsDescription
name|QString
name|operationsDescription
parameter_list|()
specifier|const
block|{
return|return
name|opsDescr
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|CombinationsTestData
class|class
name|CombinationsTestData
block|{
DECL|member|testGroup
name|TestGroup
name|testGroup
decl_stmt|;
DECL|member|pageOps
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
name|pageOps
decl_stmt|;
DECL|member|styleOps
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
name|styleOps
decl_stmt|;
DECL|member|setAllOptions
name|QMap
argument_list|<
name|bool
argument_list|,
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
modifier|*
argument_list|>
name|setAllOptions
decl_stmt|;
public|public:
DECL|function|CombinationsTestData
name|CombinationsTestData
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"ref"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"testEquality"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|Operation
operator|*
argument_list|>
argument_list|>
argument_list|(
literal|"operations"
argument_list|)
expr_stmt|;
name|pageOps
operator|<<
operator|new
name|SetPage
argument_list|(
literal|0
argument_list|)
operator|<<
operator|new
name|SetPage
argument_list|(
literal|1
argument_list|)
operator|<<
operator|new
name|SetPage
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|styleOps
operator|<<
operator|new
name|SetStyle
argument_list|(
name|QWizard
operator|::
name|ClassicStyle
argument_list|)
operator|<<
operator|new
name|SetStyle
argument_list|(
name|QWizard
operator|::
name|ModernStyle
argument_list|)
operator|<<
operator|new
name|SetStyle
argument_list|(
name|QWizard
operator|::
name|MacStyle
argument_list|)
expr_stmt|;
DECL|macro|SETPAGE
define|#
directive|define
name|SETPAGE
parameter_list|(
name|page
parameter_list|)
value|pageOps.at(page)
DECL|macro|SETSTYLE
define|#
directive|define
name|SETSTYLE
parameter_list|(
name|style
parameter_list|)
value|styleOps.at(style)
DECL|macro|OPT
define|#
directive|define
name|OPT
parameter_list|(
name|option
parameter_list|,
name|on
parameter_list|)
value|OptionInfo::instance().operation(option, on)
DECL|macro|CLROPT
define|#
directive|define
name|CLROPT
parameter_list|(
name|option
parameter_list|)
value|OPT(option, false)
DECL|macro|SETOPT
define|#
directive|define
name|SETOPT
parameter_list|(
name|option
parameter_list|)
value|OPT(option, true)
name|setAllOptions
index|[
literal|false
index|]
operator|=
operator|new
name|QList
argument_list|<
name|Operation
operator|*
argument_list|>
expr_stmt|;
name|setAllOptions
index|[
literal|true
index|]
operator|=
operator|new
name|QList
argument_list|<
name|Operation
operator|*
argument_list|>
expr_stmt|;
foreach|foreach
control|(
name|QWizard
operator|::
name|WizardOption
name|option
decl|,
name|OptionInfo
operator|::
name|instance
argument_list|()
operator|.
name|options
argument_list|()
control|)
block|{
operator|*
name|setAllOptions
operator|.
name|value
argument_list|(
literal|false
argument_list|)
operator|<<
name|CLROPT
argument_list|(
name|option
argument_list|)
expr_stmt|;
operator|*
name|setAllOptions
operator|.
name|value
argument_list|(
literal|true
argument_list|)
operator|<<
name|SETOPT
argument_list|(
name|option
argument_list|)
expr_stmt|;
block|}
DECL|macro|CLRALLOPTS
define|#
directive|define
name|CLRALLOPTS
value|*setAllOptions.value(false)
DECL|macro|SETALLOPTS
define|#
directive|define
name|SETALLOPTS
value|*setAllOptions.value(true)
block|}
DECL|function|nRows
name|int
name|nRows
parameter_list|()
specifier|const
block|{
return|return
name|testGroup
operator|.
name|nRows
argument_list|()
return|;
block|}
comment|// Creates "all" possible test rows. (WARNING: This typically makes the test take too long!)
DECL|function|createAllTestRows
name|void
name|createAllTestRows
parameter_list|()
block|{
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 1.1"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
expr_stmt|;
comment|// i.e. no operations applied!
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 2.1"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|CLRALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 2.2"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETALLOPTS
operator|<<
name|SETALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 2.3"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|CLRALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|CLRALLOPTS
operator|<<
name|CLRALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 2.4"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|CLRALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETALLOPTS
operator|<<
name|CLRALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 2.5"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|CLRALLOPTS
operator|<<
name|SETALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 2.6"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETALLOPTS
operator|<<
name|CLRALLOPTS
operator|<<
name|SETALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 2.7"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|CLRALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|CLRALLOPTS
operator|<<
name|SETALLOPTS
operator|<<
name|CLRALLOPTS
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
name|setOptions
init|=
operator|*
name|setAllOptions
operator|.
name|value
argument_list|(
name|i
operator|==
literal|1
argument_list|)
decl_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 3.1"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|setOptions
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|setOptions
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|setOptions
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
operator|<<
name|setOptions
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|setOptions
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|setOptions
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|setOptions
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
operator|<<
name|setOptions
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|setOptions
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
operator|<<
name|setOptions
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|setOptions
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
block|}
foreach|foreach
control|(
name|Operation
modifier|*
name|pageOp
decl|,
name|pageOps
control|)
block|{
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 4.1"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
name|optionOps
init|=
operator|*
name|setAllOptions
operator|.
name|value
argument_list|(
name|i
operator|==
literal|1
argument_list|)
decl_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 4.2"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOps
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|optionOps
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QWizard
operator|::
name|WizardOption
name|option
decl|,
name|OptionInfo
operator|::
name|instance
argument_list|()
operator|.
name|options
argument_list|()
control|)
block|{
name|Operation
modifier|*
name|optionOp
init|=
name|OPT
argument_list|(
name|option
argument_list|,
name|i
operator|==
literal|1
argument_list|)
decl_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 4.3"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOp
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|optionOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
block|}
block|}
block|}
foreach|foreach
control|(
name|Operation
modifier|*
name|styleOp
decl|,
name|styleOps
control|)
block|{
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 5.1"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
name|optionOps
init|=
operator|*
name|setAllOptions
operator|.
name|value
argument_list|(
name|i
operator|==
literal|1
argument_list|)
decl_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 5.2"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOps
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|optionOps
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QWizard
operator|::
name|WizardOption
name|option
decl|,
name|OptionInfo
operator|::
name|instance
argument_list|()
operator|.
name|options
argument_list|()
control|)
block|{
name|Operation
modifier|*
name|optionOp
init|=
name|OPT
argument_list|(
name|option
argument_list|,
name|i
operator|==
literal|1
argument_list|)
decl_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 5.3"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOp
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|optionOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
block|}
block|}
block|}
foreach|foreach
control|(
name|Operation
modifier|*
name|pageOp
decl|,
name|pageOps
control|)
block|{
foreach|foreach
control|(
name|Operation
modifier|*
name|styleOp
decl|,
name|styleOps
control|)
block|{
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 6.1"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 6.2"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 6.3"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QList
argument_list|<
name|Operation
modifier|*
argument_list|>
name|optionOps
init|=
operator|*
name|setAllOptions
operator|.
name|value
argument_list|(
name|i
operator|==
literal|1
argument_list|)
decl_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 6.4"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOps
operator|<<
name|pageOp
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|optionOps
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|styleOp
operator|<<
name|optionOps
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOps
operator|<<
name|styleOp
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|optionOps
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|pageOp
operator|<<
name|optionOps
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QWizard
operator|::
name|WizardOption
name|option
decl|,
name|OptionInfo
operator|::
name|instance
argument_list|()
operator|.
name|options
argument_list|()
control|)
block|{
name|Operation
modifier|*
name|optionOp
init|=
name|OPT
argument_list|(
name|option
argument_list|,
name|i
operator|==
literal|1
argument_list|)
decl_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 6.5"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOp
operator|<<
name|pageOp
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|optionOp
operator|<<
name|styleOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|pageOp
operator|<<
name|styleOp
operator|<<
name|optionOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|optionOp
operator|<<
name|styleOp
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|optionOp
operator|<<
name|pageOp
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|styleOp
operator|<<
name|pageOp
operator|<<
name|optionOp
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 7.1"
argument_list|,
name|TestGroup
operator|::
name|NonEquality
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"testAll 7.2"
argument_list|,
name|TestGroup
operator|::
name|NonEquality
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETSTYLE
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
comment|// more to follow ...
block|}
comment|// Creates a "small" number of interesting test rows.
DECL|function|createTestRows1
name|void
name|createTestRows1
parameter_list|()
block|{
name|testGroup
operator|.
name|reset
argument_list|(
literal|"test1 1"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETOPT
argument_list|(
name|QWizard
operator|::
name|HaveCustomButton3
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETOPT
argument_list|(
name|QWizard
operator|::
name|HaveCustomButton3
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"test1 2"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETOPT
argument_list|(
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
argument_list|)
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|0
argument_list|)
operator|<<
name|SETOPT
argument_list|(
name|QWizard
operator|::
name|HaveFinishButtonOnEarlyPages
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
name|testGroup
operator|.
name|reset
argument_list|(
literal|"test1 3"
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETPAGE
argument_list|(
literal|2
argument_list|)
operator|<<
name|SETOPT
argument_list|(
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|add
argument_list|()
operator|<<
name|SETOPT
argument_list|(
name|QWizard
operator|::
name|HaveNextButtonOnLastPage
argument_list|)
operator|<<
name|SETPAGE
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|testGroup
operator|.
name|createTestRows
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|combinations_data
name|void
name|tst_QWizard
operator|::
name|combinations_data
parameter_list|()
block|{
name|CombinationsTestData
name|combTestData
decl_stmt|;
comment|//    combTestData.createAllTestRows();
name|combTestData
operator|.
name|createTestRows1
argument_list|()
expr_stmt|;
comment|//    qDebug()<< "test rows:"<< combTestData.nRows();
block|}
end_function
begin_function
DECL|function|combinations
name|void
name|tst_QWizard
operator|::
name|combinations
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|QSKIP
argument_list|(
literal|"Too much memory usage for testing on CE emulator"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|ref
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|testEquality
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|Operation
operator|*
argument_list|>
argument_list|,
name|operations
argument_list|)
expr_stmt|;
name|TestWizard
name|wizard
decl_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_WINDOWSVISTA
argument_list|)
if|if
condition|(
name|wizard
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|AeroStyle
condition|)
return|return;
comment|// ### TODO: passes/fails in a unpredictable way, so disable for now
endif|#
directive|endif
name|wizard
operator|.
name|applyOperations
argument_list|(
name|operations
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// ### TODO: Required, but why? Should wizard.createImage() care?
specifier|static
name|QImage
name|refImage
decl_stmt|;
specifier|static
name|QSize
name|refMinSize
decl_stmt|;
specifier|static
name|QString
name|refDescr
decl_stmt|;
if|if
condition|(
name|ref
condition|)
block|{
name|refImage
operator|=
name|wizard
operator|.
name|createImage
argument_list|()
expr_stmt|;
name|refMinSize
operator|=
name|wizard
operator|.
name|minimumSizeHint
argument_list|()
expr_stmt|;
name|refDescr
operator|=
name|wizard
operator|.
name|operationsDescription
argument_list|()
expr_stmt|;
return|return;
block|}
name|QImage
name|image
init|=
name|wizard
operator|.
name|createImage
argument_list|()
decl_stmt|;
name|bool
name|minSizeTest
init|=
name|wizard
operator|.
name|minimumSizeHint
argument_list|()
operator|!=
name|refMinSize
decl_stmt|;
name|bool
name|imageTest
init|=
name|image
operator|!=
name|refImage
decl_stmt|;
name|QLatin1String
name|otor
argument_list|(
literal|"!="
argument_list|)
decl_stmt|;
name|QLatin1String
name|reason
argument_list|(
literal|"differ"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|testEquality
condition|)
block|{
name|minSizeTest
operator|=
literal|false
expr_stmt|;
comment|// the image test is sufficient!
name|imageTest
operator|=
operator|!
name|imageTest
expr_stmt|;
name|otor
operator|=
name|QLatin1String
argument_list|(
literal|"=="
argument_list|)
expr_stmt|;
name|reason
operator|=
name|QLatin1String
argument_list|(
literal|"are equal"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|minSizeTest
condition|)
name|qDebug
argument_list|()
operator|<<
literal|"minimum sizes"
operator|<<
name|reason
operator|.
name|latin1
argument_list|()
operator|<<
literal|";"
operator|<<
name|wizard
operator|.
name|minimumSizeHint
argument_list|()
operator|<<
name|otor
operator|.
name|latin1
argument_list|()
operator|<<
name|refMinSize
expr_stmt|;
if|if
condition|(
name|imageTest
condition|)
name|qDebug
argument_list|()
operator|<<
literal|"images"
operator|<<
name|reason
operator|.
name|latin1
argument_list|()
expr_stmt|;
if|if
condition|(
name|minSizeTest
operator|||
name|imageTest
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"\t      row 0 operations:"
operator|<<
name|refDescr
operator|.
name|toLatin1
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"\tcurrent row operations:"
operator|<<
name|wizard
operator|.
name|operationsDescription
argument_list|()
operator|.
name|toLatin1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|WizardPage
class|class
name|WizardPage
super|:
specifier|public
name|QWizardPage
block|{
name|Q_OBJECT
DECL|member|shown_
name|bool
name|shown_
decl_stmt|;
DECL|function|showEvent
name|void
name|showEvent
parameter_list|(
name|QShowEvent
modifier|*
parameter_list|)
block|{
name|shown_
operator|=
literal|true
expr_stmt|;
block|}
DECL|function|hideEvent
name|void
name|hideEvent
parameter_list|(
name|QHideEvent
modifier|*
parameter_list|)
block|{
name|shown_
operator|=
literal|false
expr_stmt|;
block|}
public|public:
DECL|function|WizardPage
name|WizardPage
parameter_list|()
member_init_list|:
name|shown_
argument_list|(
literal|false
argument_list|)
block|{}
DECL|function|shown
name|bool
name|shown
parameter_list|()
specifier|const
block|{
return|return
name|shown_
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|WizardPages
class|class
name|WizardPages
block|{
DECL|member|pages
name|QList
argument_list|<
name|WizardPage
modifier|*
argument_list|>
name|pages
decl_stmt|;
public|public:
DECL|function|add
name|void
name|add
parameter_list|(
name|WizardPage
modifier|*
name|page
parameter_list|)
block|{
name|pages
operator|<<
name|page
expr_stmt|;
block|}
DECL|function|all
name|QList
argument_list|<
name|WizardPage
modifier|*
argument_list|>
name|all
parameter_list|()
specifier|const
block|{
return|return
name|pages
return|;
block|}
DECL|function|shown
name|QList
argument_list|<
name|WizardPage
modifier|*
argument_list|>
name|shown
parameter_list|()
specifier|const
block|{
name|QList
argument_list|<
name|WizardPage
modifier|*
argument_list|>
name|result
decl_stmt|;
foreach|foreach
control|(
name|WizardPage
modifier|*
name|page
decl|,
name|pages
control|)
if|if
condition|(
name|page
operator|->
name|shown
argument_list|()
condition|)
name|result
operator|<<
name|page
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|showCurrentPageOnly
name|void
name|tst_QWizard
operator|::
name|showCurrentPageOnly
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|WizardPages
name|pages
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|pages
operator|.
name|add
argument_list|(
operator|new
name|WizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|pages
operator|.
name|all
argument_list|()
operator|.
name|last
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pages
operator|.
name|shown
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pages
operator|.
name|shown
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|pages
operator|.
name|all
argument_list|()
operator|.
name|first
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|int
name|steps
init|=
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|steps
condition|;
operator|++
name|i
control|)
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pages
operator|.
name|shown
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pages
operator|.
name|shown
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|pages
operator|.
name|all
argument_list|()
operator|.
name|at
argument_list|(
name|steps
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pages
operator|.
name|shown
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pages
operator|.
name|shown
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|pages
operator|.
name|all
argument_list|()
operator|.
name|first
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setButtonText
name|void
name|tst_QWizard
operator|::
name|setButtonText
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|ClassicStyle
argument_list|)
expr_stmt|;
name|QWizardPage
modifier|*
name|page1
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QWizardPage
modifier|*
name|page2
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page1
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|page2
operator|->
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|,
literal|"Page2"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page1
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page2
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page2"
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Page2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page1
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page2
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page2"
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page1
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Next"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page2
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page2"
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setButtonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|,
literal|"Wizard"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Wizard"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Wizard"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page1
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Wizard"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page2
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page2"
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Page2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Wizard"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page1
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Wizard"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|page2
operator|->
name|buttonText
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Page2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCommitPage
name|void
name|tst_QWizard
operator|::
name|setCommitPage
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|QWizardPage
modifier|*
name|page1
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QWizardPage
modifier|*
name|page2
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|page1
operator|->
name|isCommitPage
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|page1
operator|->
name|setCommitPage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page1
operator|->
name|isCommitPage
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|page1
operator|->
name|setCommitPage
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|page1
operator|->
name|isCommitPage
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
comment|// ### test relabeling of the Cancel button to "Close" once this is implemented
block|}
end_function
begin_function
DECL|function|setWizardStyle
name|void
name|tst_QWizard
operator|::
name|setWizardStyle
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|// defaults
specifier|const
name|bool
name|styleHintMatch
init|=
name|wizard
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|WizardStyle
argument_list|(
name|wizard
operator|.
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_WizardStyle
argument_list|,
literal|0
argument_list|,
operator|&
name|wizard
argument_list|)
argument_list|)
decl_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_WINDOWSVISTA
argument_list|)
name|QVERIFY
argument_list|(
name|styleHintMatch
operator|||
name|wizard
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|AeroStyle
argument_list|)
expr_stmt|;
else|#
directive|else
name|QVERIFY
argument_list|(
name|styleHintMatch
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// set/get consistency
for|for
control|(
name|int
name|wstyle
init|=
literal|0
init|;
name|wstyle
operator|<
name|QWizard
operator|::
name|NStyles
condition|;
operator|++
name|wstyle
control|)
block|{
name|wizard
operator|.
name|setWizardStyle
argument_list|(
operator|(
name|QWizard
operator|::
name|WizardStyle
operator|)
name|wstyle
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|int
operator|)
name|wizard
operator|.
name|wizardStyle
argument_list|()
argument_list|,
name|wstyle
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|removePage
name|void
name|tst_QWizard
operator|::
name|removePage
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|QWizardPage
modifier|*
name|page0
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QWizardPage
modifier|*
name|page1
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QWizardPage
modifier|*
name|page2
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QWizardPage
modifier|*
name|page3
init|=
operator|new
name|QWizardPage
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|wizard
argument_list|,
name|SIGNAL
argument_list|(
name|pageRemoved
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|0
argument_list|,
name|page0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|1
argument_list|,
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|2
argument_list|,
name|page2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|3
argument_list|,
name|page3
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Removing a non-existent page
name|wizard
operator|.
name|removePage
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Removing and then reinserting a page
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|removePage
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|arguments
init|=
name|spy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setPage
argument_list|(
literal|2
argument_list|,
name|page2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Removing the same page twice
name|wizard
operator|.
name|removePage
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|// restore
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|removePage
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Removing a page not in the history
name|wizard
operator|.
name|setPage
argument_list|(
literal|2
argument_list|,
name|page2
argument_list|)
expr_stmt|;
comment|// restore
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|removePage
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page1
argument_list|)
expr_stmt|;
comment|// Removing a page in the history before the current page
name|wizard
operator|.
name|setPage
argument_list|(
literal|2
argument_list|,
name|page2
argument_list|)
expr_stmt|;
comment|// restore
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|removePage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page1
argument_list|)
expr_stmt|;
comment|// Remove the current page which is not the first one in the history
name|wizard
operator|.
name|setPage
argument_list|(
literal|0
argument_list|,
name|page0
argument_list|)
expr_stmt|;
comment|// restore
name|wizard
operator|.
name|restart
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|removePage
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page0
argument_list|)
expr_stmt|;
comment|// Remove the current page which is the first (and only) one in the history
name|wizard
operator|.
name|removePage
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page2
argument_list|)
expr_stmt|;
comment|//
name|wizard
operator|.
name|removePage
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
name|page3
argument_list|)
expr_stmt|;
comment|//
name|wizard
operator|.
name|removePage
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|arguments
operator|=
name|spy
operator|.
name|takeFirst
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|visitedPages
argument_list|()
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|pageIds
argument_list|()
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWizardPage
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sideWidget
name|void
name|tst_QWizard
operator|::
name|sideWidget
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setSideWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|sideWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w1
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|wizard
argument_list|)
decl_stmt|;
name|wizard
operator|.
name|setSideWidget
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|sideWidget
argument_list|()
operator|==
name|w1
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w2
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|wizard
argument_list|)
decl_stmt|;
name|wizard
operator|.
name|setSideWidget
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|sideWidget
argument_list|()
operator|==
name|w2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w1
operator|->
name|parent
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w1
operator|->
name|window
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|wizard
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w2
operator|->
name|window
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|wizard
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|setSideWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|sideWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task161660_buttonSpacing
name|void
name|tst_QWizard
operator|::
name|task161660_buttonSpacing
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_NO_STYLE_PLASTIQUE
name|QString
name|origStyle
init|=
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|objectName
argument_list|()
decl_stmt|;
name|QApplication
operator|::
name|setStyle
argument_list|(
operator|new
name|QPlastiqueStyle
argument_list|)
expr_stmt|;
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
specifier|const
name|QAbstractButton
modifier|*
name|finishButton
init|=
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|FinishButton
argument_list|)
decl_stmt|;
specifier|const
name|QAbstractButton
modifier|*
name|cancelButton
init|=
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CancelButton
argument_list|)
decl_stmt|;
specifier|const
name|int
name|spacing
init|=
name|cancelButton
operator|->
name|geometry
argument_list|()
operator|.
name|left
argument_list|()
operator|-
name|finishButton
operator|->
name|geometry
argument_list|()
operator|.
name|right
argument_list|()
operator|-
literal|1
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spacing
argument_list|,
name|wizard
operator|.
name|style
argument_list|()
operator|->
name|layoutSpacing
argument_list|(
name|QSizePolicy
operator|::
name|PushButton
argument_list|,
name|QSizePolicy
operator|::
name|PushButton
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setStyle
argument_list|(
name|origStyle
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_class
DECL|class|task177716_CommitPage
class|class
name|task177716_CommitPage
super|:
specifier|public
name|QWizardPage
block|{
name|Q_OBJECT
public|public:
DECL|function|task177716_CommitPage
name|task177716_CommitPage
parameter_list|()
block|{
name|setCommitPage
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|ledit
operator|=
operator|new
name|QLineEdit
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|registerField
argument_list|(
literal|"foo*"
argument_list|,
name|ledit
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|ledit
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
DECL|member|ledit
name|QLineEdit
modifier|*
name|ledit
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|task177716_disableCommitButton
name|void
name|tst_QWizard
operator|::
name|task177716_disableCommitButton
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|task177716_CommitPage
modifier|*
name|commitPage
init|=
operator|new
name|task177716_CommitPage
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|commitPage
argument_list|)
expr_stmt|;
comment|// the following page must be there to prevent the first page from replacing the Commit button
comment|// with the Finish button:
name|wizard
operator|.
name|addPage
argument_list|(
operator|new
name|QWizardPage
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CommitButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|commitPage
operator|->
name|ledit
operator|->
name|setText
argument_list|(
literal|"some non-empty text"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CommitButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|commitPage
operator|->
name|ledit
operator|->
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|CommitButton
argument_list|)
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|WizardPage_task183550
class|class
name|WizardPage_task183550
super|:
specifier|public
name|QWizardPage
block|{
public|public:
DECL|function|WizardPage_task183550
name|WizardPage_task183550
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWizardPage
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|treeWidget
argument_list|(
operator|new
name|QTreeWidget
argument_list|)
member_init_list|,
name|verticalPolicy
argument_list|(
name|QSizePolicy
operator|::
name|MinimumExpanding
argument_list|)
block|{}
DECL|function|enableVerticalExpansion
name|void
name|enableVerticalExpansion
parameter_list|()
block|{
name|verticalPolicy
operator|=
name|QSizePolicy
operator|::
name|MinimumExpanding
expr_stmt|;
block|}
DECL|function|disableVerticalExpansion
name|void
name|disableVerticalExpansion
parameter_list|()
block|{
name|verticalPolicy
operator|=
name|QSizePolicy
operator|::
name|Preferred
expr_stmt|;
block|}
DECL|function|treeWidgetHeight
name|int
name|treeWidgetHeight
parameter_list|()
specifier|const
block|{
return|return
name|treeWidget
operator|->
name|height
argument_list|()
return|;
block|}
DECL|function|treeWidgetSizeHintHeight
name|int
name|treeWidgetSizeHintHeight
parameter_list|()
specifier|const
block|{
return|return
name|treeWidget
operator|->
name|sizeHint
argument_list|()
operator|.
name|height
argument_list|()
return|;
block|}
private|private:
DECL|member|treeWidget
name|QTreeWidget
modifier|*
name|treeWidget
decl_stmt|;
DECL|member|verticalPolicy
name|QSizePolicy
operator|::
name|Policy
name|verticalPolicy
decl_stmt|;
DECL|function|initializePage
name|void
name|initializePage
parameter_list|()
block|{
if|if
condition|(
name|layout
argument_list|()
condition|)
operator|delete
name|layout
argument_list|()
expr_stmt|;
if|if
condition|(
name|treeWidget
condition|)
operator|delete
name|treeWidget
expr_stmt|;
name|QLayout
modifier|*
name|layout_
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|layout_
operator|->
name|addWidget
argument_list|(
name|treeWidget
operator|=
operator|new
name|QTreeWidget
argument_list|)
expr_stmt|;
name|QSizePolicy
name|policy
init|=
name|sizePolicy
argument_list|()
decl_stmt|;
name|policy
operator|.
name|setVerticalPolicy
argument_list|(
name|verticalPolicy
argument_list|)
expr_stmt|;
name|treeWidget
operator|->
name|setSizePolicy
argument_list|(
name|policy
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|task183550_stretchFactor
name|void
name|tst_QWizard
operator|::
name|task183550_stretchFactor
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|WizardPage_task183550
modifier|*
name|page1
init|=
operator|new
name|WizardPage_task183550
decl_stmt|;
name|WizardPage_task183550
modifier|*
name|page2
init|=
operator|new
name|WizardPage_task183550
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
name|page2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|2
operator|*
name|page2
operator|->
name|treeWidgetSizeHintHeight
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWizardPage
operator|*
argument_list|>
argument_list|(
name|page1
argument_list|)
argument_list|)
expr_stmt|;
comment|// ----
name|page2
operator|->
name|disableVerticalExpansion
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWizardPage
operator|*
argument_list|>
argument_list|(
name|page2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|treeWidgetHeight
argument_list|()
operator|==
name|page2
operator|->
name|treeWidgetSizeHintHeight
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWizardPage
operator|*
argument_list|>
argument_list|(
name|page1
argument_list|)
argument_list|)
expr_stmt|;
comment|// ----
name|page2
operator|->
name|enableVerticalExpansion
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWizardPage
operator|*
argument_list|>
argument_list|(
name|page2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|treeWidgetHeight
argument_list|()
operator|>
name|page2
operator|->
name|treeWidgetSizeHintHeight
argument_list|()
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|back
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWizardPage
operator|*
argument_list|>
argument_list|(
name|page1
argument_list|)
argument_list|)
expr_stmt|;
comment|// ----
name|page2
operator|->
name|disableVerticalExpansion
argument_list|()
expr_stmt|;
name|wizard
operator|.
name|next
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWizardPage
operator|*
argument_list|>
argument_list|(
name|page2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|page2
operator|->
name|treeWidgetHeight
argument_list|()
operator|==
name|page2
operator|->
name|treeWidgetSizeHintHeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task161658_alignments
name|void
name|tst_QWizard
operator|::
name|task161658_alignments
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|wizard
operator|.
name|setWizardStyle
argument_list|(
name|QWizard
operator|::
name|MacStyle
argument_list|)
expr_stmt|;
name|QWizardPage
name|page
decl_stmt|;
name|page
operator|.
name|setTitle
argument_list|(
literal|"Title"
argument_list|)
expr_stmt|;
name|page
operator|.
name|setSubTitle
argument_list|(
literal|"SUBTITLE#:  The subtitle bust be aligned with the rest of the widget"
argument_list|)
expr_stmt|;
name|QLabel
name|label1
argument_list|(
literal|"Field:"
argument_list|)
decl_stmt|;
name|QLineEdit
name|lineEdit1
decl_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|label1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|lineEdit1
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|page
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|wizard
operator|.
name|addPage
argument_list|(
operator|&
name|page
argument_list|)
decl_stmt|;
name|wizard
operator|.
name|setStartId
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|wizard
argument_list|)
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QLabel
modifier|*
name|subtitleLabel
decl|,
name|qFindChildren
argument_list|<
name|QLabel
operator|*
argument_list|>
argument_list|(
operator|&
name|wizard
argument_list|)
control|)
block|{
if|if
condition|(
name|subtitleLabel
operator|->
name|text
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"SUBTITLE#"
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|lineEdit1
operator|.
name|mapToGlobal
argument_list|(
name|lineEdit1
operator|.
name|contentsRect
argument_list|()
operator|.
name|bottomRight
argument_list|()
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
name|subtitleLabel
operator|->
name|mapToGlobal
argument_list|(
name|subtitleLabel
operator|->
name|contentsRect
argument_list|()
operator|.
name|bottomRight
argument_list|()
argument_list|)
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
name|QFAIL
argument_list|(
literal|"Subtitle label not found"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task177022_setFixedSize
name|void
name|tst_QWizard
operator|::
name|task177022_setFixedSize
parameter_list|()
block|{
name|int
name|width
init|=
literal|300
decl_stmt|;
name|int
name|height
init|=
literal|200
decl_stmt|;
name|QWizard
name|wiz
decl_stmt|;
name|QWizardPage
name|page1
decl_stmt|;
name|QWizardPage
name|page2
decl_stmt|;
name|int
name|page1_id
init|=
name|wiz
operator|.
name|addPage
argument_list|(
operator|&
name|page1
argument_list|)
decl_stmt|;
name|int
name|page2_id
init|=
name|wiz
operator|.
name|addPage
argument_list|(
operator|&
name|page2
argument_list|)
decl_stmt|;
name|wiz
operator|.
name|setFixedSize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
if|if
condition|(
name|wiz
operator|.
name|wizardStyle
argument_list|()
operator|==
name|QWizard
operator|::
name|AeroStyle
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"this probably relates to non-client area hack for AeroStyle titlebar "
literal|"effect; not sure if it qualifies as a bug or not"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|minimumWidth
argument_list|()
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|minimumHeight
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|maximumWidth
argument_list|()
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|maximumHeight
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|wiz
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|wiz
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|minimumWidth
argument_list|()
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|minimumHeight
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|maximumWidth
argument_list|()
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|maximumHeight
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|wiz
operator|.
name|next
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|minimumWidth
argument_list|()
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|minimumHeight
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|maximumWidth
argument_list|()
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wiz
operator|.
name|maximumHeight
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|wiz
operator|.
name|removePage
argument_list|(
name|page1_id
argument_list|)
expr_stmt|;
name|wiz
operator|.
name|removePage
argument_list|(
name|page2_id
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task248107_backButton
name|void
name|tst_QWizard
operator|::
name|task248107_backButton
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|QWizardPage
name|page1
decl_stmt|;
name|QWizardPage
name|page2
decl_stmt|;
name|QWizardPage
name|page3
decl_stmt|;
name|QWizardPage
name|page4
decl_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|&
name|page1
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|&
name|page2
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|&
name|page3
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|addPage
argument_list|(
operator|&
name|page4
argument_list|)
expr_stmt|;
name|wizard
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|wizard
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
operator|&
name|page1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
operator|&
name|page2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
operator|&
name|page3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|NextButton
argument_list|)
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
operator|&
name|page4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
operator|&
name|page3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
operator|&
name|page2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|wizard
operator|.
name|button
argument_list|(
name|QWizard
operator|::
name|BackButton
argument_list|)
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wizard
operator|.
name|currentPage
argument_list|()
argument_list|,
operator|&
name|page1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|WizardPage_task255350
class|class
name|WizardPage_task255350
super|:
specifier|public
name|QWizardPage
block|{
public|public:
DECL|member|lineEdit
name|QLineEdit
modifier|*
name|lineEdit
decl_stmt|;
DECL|function|WizardPage_task255350
name|WizardPage_task255350
parameter_list|()
member_init_list|:
name|lineEdit
argument_list|(
operator|new
name|QLineEdit
argument_list|)
block|{
name|registerField
argument_list|(
literal|"dummy*"
argument_list|,
name|lineEdit
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|task255350_fieldObjectDestroyed
name|void
name|tst_QWizard
operator|::
name|task255350_fieldObjectDestroyed
parameter_list|()
block|{
name|QWizard
name|wizard
decl_stmt|;
name|WizardPage_task255350
modifier|*
name|page
init|=
operator|new
name|WizardPage_task255350
decl_stmt|;
name|int
name|id
init|=
name|wizard
operator|.
name|addPage
argument_list|(
name|page
argument_list|)
decl_stmt|;
operator|delete
name|page
operator|->
name|lineEdit
expr_stmt|;
name|wizard
operator|.
name|removePage
argument_list|(
name|id
argument_list|)
expr_stmt|;
comment|// don't crash!
operator|delete
name|page
expr_stmt|;
block|}
end_function
begin_comment
comment|// Global taskQTBUG_25691_fieldObjectDestroyed2 is defined in
end_comment
begin_comment
comment|// tst_qwizard_2.cpp to avoid cluttering up this file with
end_comment
begin_comment
comment|// the QWizardPage subclasses, etc. required to complete this
end_comment
begin_comment
comment|// test.
end_comment
begin_function_decl
name|void
name|taskQTBUG_25691_fieldObjectDestroyed2
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl
begin_function
DECL|function|taskQTBUG_25691_fieldObjectDestroyed2
name|void
name|tst_QWizard
operator|::
name|taskQTBUG_25691_fieldObjectDestroyed2
parameter_list|()
block|{
operator|::
name|taskQTBUG_25691_fieldObjectDestroyed2
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QWizard
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qwizard.moc"
end_include
end_unit
