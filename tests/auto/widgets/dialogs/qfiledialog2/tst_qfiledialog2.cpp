begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qfiledialog.h>
end_include
begin_include
include|#
directive|include
file|<qabstractitemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<qdirmodel.h>
end_include
begin_include
include|#
directive|include
file|<qitemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<qlistview.h>
end_include
begin_include
include|#
directive|include
file|<qcombobox.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbutton.h>
end_include
begin_include
include|#
directive|include
file|<qtreeview.h>
end_include
begin_include
include|#
directive|include
file|<qheaderview.h>
end_include
begin_include
include|#
directive|include
file|<qcompleter.h>
end_include
begin_include
include|#
directive|include
file|<qaction.h>
end_include
begin_include
include|#
directive|include
file|<qdialogbuttonbox.h>
end_include
begin_include
include|#
directive|include
file|<qsortfilterproxymodel.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qlayout.h>
end_include
begin_include
include|#
directive|include
file|<qmenu.h>
end_include
begin_include
include|#
directive|include
file|"../../../../../src/widgets/dialogs/qsidebar_p.h"
end_include
begin_include
include|#
directive|include
file|"../../../../../src/widgets/dialogs/qfilesystemmodel_p.h"
end_include
begin_include
include|#
directive|include
file|"../../../../../src/widgets/dialogs/qfiledialog_p.h"
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformdialoghelper.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_include
include|#
directive|include
file|"../../../network-settings.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
name|QT_BUILD_INTERNAL
end_if
begin_function_decl
name|QT_BEGIN_NAMESPACE
name|Q_GUI_EXPORT
name|bool
name|qt_test_isFetchedRoot
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|Q_GUI_EXPORT
name|void
name|qt_test_resetFetchedRoot
parameter_list|()
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|QNonNativeFileDialog
class|class
name|QNonNativeFileDialog
super|:
specifier|public
name|QFileDialog
block|{
name|Q_OBJECT
public|public:
DECL|function|QNonNativeFileDialog
name|QNonNativeFileDialog
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|,
specifier|const
name|QString
modifier|&
name|caption
init|=
name|QString
argument_list|()
parameter_list|,
specifier|const
name|QString
modifier|&
name|directory
init|=
name|QString
argument_list|()
parameter_list|,
specifier|const
name|QString
modifier|&
name|filter
init|=
name|QString
argument_list|()
parameter_list|)
member_init_list|:
name|QFileDialog
argument_list|(
name|parent
argument_list|,
name|caption
argument_list|,
name|directory
argument_list|,
name|filter
argument_list|)
block|{
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|DontUseNativeDialog
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|msgDoesNotExist
specifier|static
name|QByteArray
name|msgDoesNotExist
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
block|{
return|return
operator|(
name|QLatin1Char
argument_list|(
literal|'"'
argument_list|)
operator|+
name|QDir
operator|::
name|toNativeSeparators
argument_list|(
name|name
argument_list|)
operator|+
name|QLatin1String
argument_list|(
literal|"\" does not exist."
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
return|;
block|}
end_function
begin_class
DECL|class|tst_QFileDialog2
class|class
name|tst_QFileDialog2
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QFileDialog2
parameter_list|()
constructor_decl|;
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|void
name|deleteDirAndFiles
parameter_list|()
function_decl|;
name|void
name|listRoot
parameter_list|()
function_decl|;
name|void
name|task227304_proxyOnFileDialog
parameter_list|()
function_decl|;
name|void
name|task236402_dontWatchDeletedDir
parameter_list|()
function_decl|;
name|void
name|task251321_sideBarHiddenEntries
parameter_list|()
function_decl|;
name|void
name|task251341_sideBarRemoveEntries
parameter_list|()
function_decl|;
name|void
name|task257579_sideBarWithNonCleanUrls
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|heapCorruption
parameter_list|()
function_decl|;
name|void
name|filter
parameter_list|()
function_decl|;
name|void
name|showNameFilterDetails
parameter_list|()
function_decl|;
name|void
name|unc
parameter_list|()
function_decl|;
name|void
name|emptyUncPath
parameter_list|()
function_decl|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CONTEXTMENU
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_MENU
argument_list|)
name|void
name|task143519_deleteAndRenameActionBehavior
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|task178897_minimumSize
parameter_list|()
function_decl|;
name|void
name|task180459_lastDirectory_data
parameter_list|()
function_decl|;
name|void
name|task180459_lastDirectory
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|Q_OS_MAC
name|void
name|task227930_correctNavigationKeyboardBehavior
parameter_list|()
function_decl|;
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|void
name|task226366_lowerCaseHardDriveWindows
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|completionOnLevelAfterRoot
parameter_list|()
function_decl|;
name|void
name|task233037_selectingDirectory
parameter_list|()
function_decl|;
name|void
name|task235069_hideOnEscape_data
parameter_list|()
function_decl|;
name|void
name|task235069_hideOnEscape
parameter_list|()
function_decl|;
name|void
name|task203703_returnProperSeparator
parameter_list|()
function_decl|;
name|void
name|task228844_ensurePreviousSorting
parameter_list|()
function_decl|;
name|void
name|task239706_editableFilterCombo
parameter_list|()
function_decl|;
name|void
name|task218353_relativePaths
parameter_list|()
function_decl|;
name|void
name|task254490_selectFileMultipleTimes
parameter_list|()
function_decl|;
name|void
name|task259105_filtersCornerCases
parameter_list|()
function_decl|;
name|void
name|QTBUG4419_lineEditSelectAll
parameter_list|()
function_decl|;
name|void
name|QTBUG6558_showDirsOnly
parameter_list|()
function_decl|;
name|void
name|QTBUG4842_selectFilterWithHideNameFilterDetails
parameter_list|()
function_decl|;
name|void
name|dontShowCompleterOnRoot
parameter_list|()
function_decl|;
name|void
name|nameFilterParsing_data
parameter_list|()
function_decl|;
name|void
name|nameFilterParsing
parameter_list|()
function_decl|;
private|private:
name|void
name|cleanupSettingsFile
parameter_list|()
function_decl|;
DECL|member|tempDir
name|QTemporaryDir
name|tempDir
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QFileDialog2
name|tst_QFileDialog2
operator|::
name|tst_QFileDialog2
parameter_list|()
member_init_list|:
name|tempDir
argument_list|(
name|QDir
operator|::
name|tempPath
argument_list|()
operator|+
literal|"/tst_qfiledialog2.XXXXXX"
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_constructor
begin_function
DECL|function|cleanupSettingsFile
name|void
name|tst_QFileDialog2
operator|::
name|cleanupSettingsFile
parameter_list|()
block|{
comment|// clean up the sidebar between each test
name|QSettings
name|settings
argument_list|(
name|QSettings
operator|::
name|UserScope
argument_list|,
name|QLatin1String
argument_list|(
literal|"QtProject"
argument_list|)
argument_list|)
decl_stmt|;
name|settings
operator|.
name|beginGroup
argument_list|(
name|QLatin1String
argument_list|(
literal|"FileDialog"
argument_list|)
argument_list|)
expr_stmt|;
name|settings
operator|.
name|remove
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|endGroup
argument_list|()
expr_stmt|;
name|settings
operator|.
name|beginGroup
argument_list|(
name|QLatin1String
argument_list|(
literal|"Qt"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Compatibility settings
name|settings
operator|.
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"filedialog"
argument_list|)
argument_list|)
expr_stmt|;
name|settings
operator|.
name|endGroup
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initTestCase
name|void
name|tst_QFileDialog2
operator|::
name|initTestCase
parameter_list|()
block|{
name|QVERIFY2
argument_list|(
name|tempDir
operator|.
name|isValid
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|tempDir
operator|.
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardPaths
operator|::
name|setTestModeEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cleanupSettingsFile
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QFileDialog2
operator|::
name|init
parameter_list|()
block|{
name|QFileDialogPrivate
operator|::
name|setLastVisitedDirectory
argument_list|(
name|QUrl
argument_list|()
argument_list|)
expr_stmt|;
comment|// populate the sidebar with some default settings
name|QNonNativeFileDialog
name|fd
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QFileDialog2
operator|::
name|cleanup
parameter_list|()
block|{
name|cleanupSettingsFile
argument_list|()
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|listRoot
name|void
name|tst_QFileDialog2
operator|::
name|listRoot
parameter_list|()
block|{
name|QFileInfoGatherer
name|fileInfoGatherer
decl_stmt|;
name|fileInfoGatherer
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
name|qt_test_resetFetchedRoot
argument_list|()
expr_stmt|;
name|QString
name|dir
argument_list|(
name|QDir
operator|::
name|currentPath
argument_list|()
argument_list|)
decl_stmt|;
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
name|QString
argument_list|()
argument_list|,
name|dir
argument_list|)
decl_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qt_test_isFetchedRoot
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
literal|""
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|qt_test_isFetchedRoot
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|heapCorruption
name|void
name|tst_QFileDialog2
operator|::
name|heapCorruption
parameter_list|()
block|{
name|QVector
argument_list|<
name|QNonNativeFileDialog
modifier|*
argument_list|>
name|dialogs
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|QNonNativeFileDialog
modifier|*
name|f
init|=
operator|new
name|QNonNativeFileDialog
argument_list|(
name|NULL
argument_list|)
decl_stmt|;
name|dialogs
operator|<<
name|f
expr_stmt|;
block|}
name|qDeleteAll
argument_list|(
name|dialogs
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
DECL|struct|FriendlyQFileDialog
struct|struct
name|FriendlyQFileDialog
super|:
specifier|public
name|QNonNativeFileDialog
block|{
friend|friend
class_decl|class
name|tst_QFileDialog2
class_decl|;
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QFileDialog
argument_list|)
block|}
struct|;
end_struct
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|deleteDirAndFiles
name|void
name|tst_QFileDialog2
operator|::
name|deleteDirAndFiles
parameter_list|()
block|{
name|QString
name|tempPath
init|=
name|tempDir
operator|.
name|path
argument_list|()
operator|+
literal|"/QFileDialogTestDir4FullDelete"
decl_stmt|;
name|QDir
name|dir
decl_stmt|;
name|QVERIFY
argument_list|(
name|dir
operator|.
name|mkpath
argument_list|(
name|tempPath
operator|+
literal|"/foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dir
operator|.
name|mkpath
argument_list|(
name|tempPath
operator|+
literal|"/foo/B"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dir
operator|.
name|mkpath
argument_list|(
name|tempPath
operator|+
literal|"/foo/B"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dir
operator|.
name|mkpath
argument_list|(
name|tempPath
operator|+
literal|"/foo/c"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dir
operator|.
name|mkpath
argument_list|(
name|tempPath
operator|+
literal|"/bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QFile
argument_list|(
name|tempPath
operator|+
literal|"/foo/a"
argument_list|)
expr_stmt|;
name|QTemporaryFile
modifier|*
name|t
decl_stmt|;
name|t
operator|=
operator|new
name|QTemporaryFile
argument_list|(
name|tempPath
operator|+
literal|"/foo/aXXXXXX"
argument_list|)
expr_stmt|;
name|t
operator|->
name|setAutoRemove
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|t
operator|->
name|open
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|t
operator|->
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|->
name|close
argument_list|()
expr_stmt|;
operator|delete
name|t
expr_stmt|;
name|t
operator|=
operator|new
name|QTemporaryFile
argument_list|(
name|tempPath
operator|+
literal|"/foo/B/yXXXXXX"
argument_list|)
expr_stmt|;
name|t
operator|->
name|setAutoRemove
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|t
operator|->
name|open
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|t
operator|->
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|->
name|close
argument_list|()
expr_stmt|;
operator|delete
name|t
expr_stmt|;
name|FriendlyQFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|DontUseNativeDialog
argument_list|)
expr_stmt|;
name|fd
operator|.
name|d_func
argument_list|()
operator|->
name|removeDirectory
argument_list|(
name|tempPath
argument_list|)
expr_stmt|;
name|QFileInfo
name|info
argument_list|(
name|tempPath
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|info
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|filter
name|void
name|tst_QFileDialog2
operator|::
name|filter
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|QAction
modifier|*
name|hiddenAction
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
literal|"qt_show_hidden_action"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|hiddenAction
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|hiddenAction
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|hiddenAction
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QDir
operator|::
name|Filters
name|filter
init|=
name|fd
operator|.
name|filter
argument_list|()
decl_stmt|;
name|filter
operator||=
name|QDir
operator|::
name|Hidden
expr_stmt|;
name|fd
operator|.
name|setFilter
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|hiddenAction
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showNameFilterDetails
name|void
name|tst_QFileDialog2
operator|::
name|showNameFilterDetails
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|QComboBox
modifier|*
name|filters
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"fileTypeCombo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|filters
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|fd
operator|.
name|isNameFilterDetailsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QStringList
name|filterChoices
decl_stmt|;
name|filterChoices
operator|<<
literal|"Image files (*.png *.xpm *.jpg)"
operator|<<
literal|"Text files (*.txt)"
operator|<<
literal|"Any files (*.*)"
expr_stmt|;
name|fd
operator|.
name|setNameFilters
argument_list|(
name|filterChoices
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setNameFilterDetailsVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|itemText
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Image files"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|itemText
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Text files"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|itemText
argument_list|(
literal|2
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Any files"
argument_list|)
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setNameFilterDetailsVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|itemText
argument_list|(
literal|0
argument_list|)
argument_list|,
name|filterChoices
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|itemText
argument_list|(
literal|1
argument_list|)
argument_list|,
name|filterChoices
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|itemText
argument_list|(
literal|2
argument_list|)
argument_list|,
name|filterChoices
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unc
name|void
name|tst_QFileDialog2
operator|::
name|unc
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINRT
argument_list|)
comment|// Only test UNC on Windows./
name|QString
name|dir
argument_list|(
literal|"\\\\"
operator|+
name|QtNetworkSettings
operator|::
name|winServerName
argument_list|()
operator|+
literal|"\\testsharewritable"
argument_list|)
decl_stmt|;
else|#
directive|else
name|QString
name|dir
argument_list|(
name|QDir
operator|::
name|currentPath
argument_list|()
argument_list|)
decl_stmt|;
endif|#
directive|endif
name|QVERIFY2
argument_list|(
name|QFile
operator|::
name|exists
argument_list|(
name|dir
argument_list|)
argument_list|,
name|msgDoesNotExist
argument_list|(
name|dir
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
name|QString
argument_list|()
argument_list|,
name|dir
argument_list|)
decl_stmt|;
name|QFileSystemModel
modifier|*
name|model
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
literal|"qt_filesystem_model"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|fd
operator|.
name|directory
argument_list|()
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
name|dir
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyUncPath
name|void
name|tst_QFileDialog2
operator|::
name|emptyUncPath
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileNameEdit"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
comment|// press 'keys' for the input
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
name|QTest
operator|::
name|keyPress
argument_list|(
name|lineEdit
argument_list|,
name|Qt
operator|::
name|Key_Backslash
argument_list|)
expr_stmt|;
name|QFileSystemModel
modifier|*
name|model
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
literal|"qt_filesystem_model"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CONTEXTMENU
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_MENU
argument_list|)
end_if
begin_struct
DECL|struct|MenuCloser
struct|struct
name|MenuCloser
super|:
specifier|public
name|QObject
block|{
DECL|member|w
name|QWidget
modifier|*
name|w
decl_stmt|;
DECL|function|MenuCloser
specifier|explicit
name|MenuCloser
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
member_init_list|:
name|w
argument_list|(
name|w
argument_list|)
block|{}
DECL|function|close
name|void
name|close
parameter_list|()
block|{
name|QMenu
modifier|*
name|menu
init|=
name|w
operator|->
name|findChild
argument_list|<
name|QMenu
operator|*
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|menu
condition|)
block|{
name|qDebug
argument_list|(
literal|"%s: cannot find file dialog child of type QMenu"
argument_list|,
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
name|w
operator|->
name|close
argument_list|()
expr_stmt|;
block|}
name|QTest
operator|::
name|keyClick
argument_list|(
name|menu
argument_list|,
name|Qt
operator|::
name|Key_Escape
argument_list|)
expr_stmt|;
block|}
block|}
struct|;
end_struct
begin_function
DECL|function|openContextMenu
specifier|static
name|bool
name|openContextMenu
parameter_list|(
name|QFileDialog
modifier|&
name|fd
parameter_list|)
block|{
name|QListView
modifier|*
name|list
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QListView
operator|*
argument_list|>
argument_list|(
literal|"listView"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|list
condition|)
block|{
name|qDebug
argument_list|(
literal|"%s: didn't find file dialog child \"listView\""
argument_list|,
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
name|QTimer
name|timer
decl_stmt|;
name|timer
operator|.
name|setInterval
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|timer
operator|.
name|setSingleShot
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MenuCloser
name|closer
argument_list|(
operator|&
name|fd
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|timer
argument_list|,
operator|&
name|QTimer
operator|::
name|timeout
argument_list|,
operator|&
name|closer
argument_list|,
operator|&
name|MenuCloser
operator|::
name|close
argument_list|)
expr_stmt|;
name|timer
operator|.
name|start
argument_list|()
expr_stmt|;
name|QContextMenuEvent
name|cme
argument_list|(
name|QContextMenuEvent
operator|::
name|Mouse
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|list
operator|->
name|viewport
argument_list|()
argument_list|,
operator|&
name|cme
argument_list|)
expr_stmt|;
comment|// blocks until menu is closed again.
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|task143519_deleteAndRenameActionBehavior
name|void
name|tst_QFileDialog2
operator|::
name|task143519_deleteAndRenameActionBehavior
parameter_list|()
block|{
comment|// test based on task233037_selectingDirectory
struct|struct
name|TestContext
block|{
name|TestContext
parameter_list|()
member_init_list|:
name|current
argument_list|(
name|QDir
operator|::
name|current
argument_list|()
argument_list|)
block|{}
name|~
name|TestContext
parameter_list|()
block|{
name|file
operator|.
name|remove
argument_list|()
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
name|test
operator|.
name|dirName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QDir
name|current
decl_stmt|;
name|QDir
name|test
decl_stmt|;
name|QFile
name|file
decl_stmt|;
block|}
name|ctx
struct|;
comment|// setup testbed
name|QVERIFY
argument_list|(
name|ctx
operator|.
name|current
operator|.
name|mkdir
argument_list|(
literal|"task143519_deleteAndRenameActionBehavior_test"
argument_list|)
argument_list|)
expr_stmt|;
comment|// ensure at least one item
name|ctx
operator|.
name|test
operator|=
name|ctx
operator|.
name|current
expr_stmt|;
name|QVERIFY
argument_list|(
name|ctx
operator|.
name|test
operator|.
name|cd
argument_list|(
literal|"task143519_deleteAndRenameActionBehavior_test"
argument_list|)
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|file
operator|.
name|setFileName
argument_list|(
name|ctx
operator|.
name|test
operator|.
name|absoluteFilePath
argument_list|(
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ctx
operator|.
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ctx
operator|.
name|file
operator|.
name|permissions
argument_list|()
operator|&
name|QFile
operator|::
name|WriteUser
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|file
operator|.
name|close
argument_list|()
expr_stmt|;
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|ctx
operator|.
name|test
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|fd
argument_list|)
expr_stmt|;
comment|// grab some internals:
name|QAction
modifier|*
name|rm
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
literal|"qt_delete_action"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|rm
argument_list|)
expr_stmt|;
name|QAction
modifier|*
name|mv
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
literal|"qt_rename_action"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|mv
argument_list|)
expr_stmt|;
comment|// these are the real test cases:
comment|// defaults
name|QVERIFY
argument_list|(
name|openContextMenu
argument_list|(
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|selectedFiles
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rm
operator|->
name|isEnabled
argument_list|()
argument_list|,
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mv
operator|->
name|isEnabled
argument_list|()
argument_list|,
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
comment|// change to non-defaults:
name|fd
operator|.
name|setReadOnly
argument_list|(
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|openContextMenu
argument_list|(
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|selectedFiles
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rm
operator|->
name|isEnabled
argument_list|()
argument_list|,
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mv
operator|->
name|isEnabled
argument_list|()
argument_list|,
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
comment|// and changed back to defaults:
name|fd
operator|.
name|setReadOnly
argument_list|(
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|openContextMenu
argument_list|(
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|selectedFiles
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rm
operator|->
name|isEnabled
argument_list|()
argument_list|,
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mv
operator|->
name|isEnabled
argument_list|()
argument_list|,
operator|!
name|fd
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !QT_NO_CONTEXTMENU&& !QT_NO_MENU
end_comment
begin_function
DECL|function|task178897_minimumSize
name|void
name|tst_QFileDialog2
operator|::
name|task178897_minimumSize
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|QSize
name|oldMs
init|=
name|fd
operator|.
name|layout
argument_list|()
operator|->
name|minimumSize
argument_list|()
decl_stmt|;
name|QStringList
name|history
init|=
name|fd
operator|.
name|history
argument_list|()
decl_stmt|;
name|history
operator|<<
name|QDir
operator|::
name|toNativeSeparators
argument_list|(
literal|"/verylongdirectory/"
literal|"aaaaaaaaaabbbbbbbbcccccccccccddddddddddddddeeeeeeeeeeeeffffffffffgggtggggggggghhhhhhhhiiiiiijjjk"
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setHistory
argument_list|(
name|history
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QSize
name|ms
init|=
name|fd
operator|.
name|layout
argument_list|()
operator|->
name|minimumSize
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|ms
operator|.
name|width
argument_list|()
operator|<=
name|oldMs
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task180459_lastDirectory_data
name|void
name|tst_QFileDialog2
operator|::
name|task180459_lastDirectory_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"directory"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isEnabled"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path+file"
argument_list|)
operator|<<
name|QDir
operator|::
name|homePath
argument_list|()
operator|+
name|QDir
operator|::
name|separator
argument_list|()
operator|+
literal|"foo"
operator|<<
name|QDir
operator|::
name|homePath
argument_list|()
operator|<<
literal|true
operator|<<
name|QDir
operator|::
name|homePath
argument_list|()
operator|+
name|QDir
operator|::
name|separator
argument_list|()
operator|+
literal|"foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no path"
argument_list|)
operator|<<
literal|""
operator|<<
name|tempDir
operator|.
name|path
argument_list|()
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file"
argument_list|)
operator|<<
literal|"foo"
operator|<<
name|QDir
operator|::
name|currentPath
argument_list|()
operator|<<
literal|true
operator|<<
name|QDir
operator|::
name|currentPath
argument_list|()
operator|+
name|QDir
operator|::
name|separator
argument_list|()
operator|+
literal|"foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path"
argument_list|)
operator|<<
name|QDir
operator|::
name|homePath
argument_list|()
operator|<<
name|QDir
operator|::
name|homePath
argument_list|()
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path not existing"
argument_list|)
operator|<<
literal|"/usr/bin/foo/bar/foo/foo.txt"
operator|<<
name|tempDir
operator|.
name|path
argument_list|()
operator|<<
literal|true
operator|<<
name|tempDir
operator|.
name|path
argument_list|()
operator|+
name|QDir
operator|::
name|separator
argument_list|()
operator|+
literal|"foo.txt"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task180459_lastDirectory
name|void
name|tst_QFileDialog2
operator|::
name|task180459_lastDirectory
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QGuiApplication
operator|::
name|platformName
argument_list|()
operator|.
name|compare
argument_list|(
name|QLatin1String
argument_list|(
literal|"cocoa"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"Insignificant on OSX"
argument_list|)
expr_stmt|;
comment|//QTBUG-39183
comment|//first visit the temp directory and close the dialog
name|QNonNativeFileDialog
modifier|*
name|dlg
init|=
operator|new
name|QNonNativeFileDialog
argument_list|(
literal|0
argument_list|,
literal|""
argument_list|,
name|tempDir
operator|.
name|path
argument_list|()
argument_list|)
decl_stmt|;
name|QFileSystemModel
modifier|*
name|model
init|=
name|dlg
operator|->
name|findChild
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
literal|"qt_filesystem_model"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|tempDir
operator|.
name|path
argument_list|()
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
name|dlg
operator|->
name|directory
argument_list|()
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|dlg
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|directory
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isEnabled
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|dlg
operator|=
operator|new
name|QNonNativeFileDialog
argument_list|(
literal|0
argument_list|,
literal|""
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|model
operator|=
name|dlg
operator|->
name|findChild
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
literal|"qt_filesystem_model"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|dlg
operator|->
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|dlg
operator|->
name|directory
argument_list|()
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
name|directory
argument_list|)
argument_list|)
expr_stmt|;
name|QDialogButtonBox
modifier|*
name|buttonBox
init|=
name|dlg
operator|->
name|findChild
argument_list|<
name|QDialogButtonBox
operator|*
argument_list|>
argument_list|(
literal|"buttonBox"
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
name|buttonBox
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Save
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|button
operator|->
name|isEnabled
argument_list|()
argument_list|,
name|isEnabled
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEnabled
condition|)
name|QCOMPARE
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|result
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
name|dlg
operator|->
name|selectedFiles
argument_list|()
operator|.
name|first
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|dlg
expr_stmt|;
block|}
end_function
begin_class
DECL|class|FilterDirModel
class|class
name|FilterDirModel
super|:
specifier|public
name|QSortFilterProxyModel
block|{
public|public:
DECL|function|FilterDirModel
name|FilterDirModel
parameter_list|(
name|QString
name|root
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QSortFilterProxyModel
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_root
argument_list|(
name|root
argument_list|)
block|{}
DECL|function|~FilterDirModel
name|~
name|FilterDirModel
parameter_list|()
block|{}
empty_stmt|;
protected|protected:
DECL|function|filterAcceptsRow
name|bool
name|filterAcceptsRow
parameter_list|(
name|int
name|source_row
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|source_parent
parameter_list|)
specifier|const
block|{
name|QModelIndex
name|parentIndex
decl_stmt|;
name|parentIndex
operator|=
name|source_parent
expr_stmt|;
name|QString
name|path
decl_stmt|;
name|path
operator|=
name|parentIndex
operator|.
name|child
argument_list|(
name|source_row
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
do|do
block|{
name|path
operator|=
name|parentIndex
operator|.
name|data
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
operator|+
name|path
expr_stmt|;
name|parentIndex
operator|=
name|parentIndex
operator|.
name|parent
argument_list|()
expr_stmt|;
block|}
do|while
condition|(
name|parentIndex
operator|.
name|isValid
argument_list|()
condition|)
do|;
name|QFileInfo
name|info
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|info
operator|.
name|isDir
argument_list|()
operator|&&
operator|(
name|QDir
argument_list|(
name|path
argument_list|)
operator|!=
name|m_root
operator|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
private|private:
DECL|member|m_root
name|QDir
name|m_root
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|sortProxy
class|class
name|sortProxy
super|:
specifier|public
name|QSortFilterProxyModel
block|{
public|public:
DECL|function|sortProxy
name|sortProxy
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QSortFilterProxyModel
argument_list|(
name|parent
argument_list|)
block|{         }
protected|protected:
DECL|function|lessThan
specifier|virtual
name|bool
name|lessThan
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|left
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|right
parameter_list|)
specifier|const
block|{
name|QFileSystemModel
modifier|*
specifier|const
name|model
init|=
name|qobject_cast
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
name|sourceModel
argument_list|()
argument_list|)
decl_stmt|;
specifier|const
name|QFileInfo
name|leftInfo
argument_list|(
name|model
operator|->
name|fileInfo
argument_list|(
name|left
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QFileInfo
name|rightInfo
argument_list|(
name|model
operator|->
name|fileInfo
argument_list|(
name|right
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|leftInfo
operator|.
name|isDir
argument_list|()
operator|==
name|rightInfo
operator|.
name|isDir
argument_list|()
condition|)
return|return
operator|(
name|leftInfo
operator|.
name|filePath
argument_list|()
operator|.
name|compare
argument_list|(
name|rightInfo
operator|.
name|filePath
argument_list|()
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
operator|<
literal|0
operator|)
return|;
elseif|else
if|if
condition|(
name|leftInfo
operator|.
name|isDir
argument_list|()
condition|)
return|return
operator|(
literal|false
operator|)
return|;
else|else
return|return
operator|(
literal|true
operator|)
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|CrashDialog
class|class
name|CrashDialog
super|:
specifier|public
name|QNonNativeFileDialog
block|{
name|Q_OBJECT
public|public:
DECL|function|CrashDialog
name|CrashDialog
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|QString
modifier|&
name|caption
parameter_list|,
specifier|const
name|QString
modifier|&
name|dir
parameter_list|,
specifier|const
name|QString
modifier|&
name|filter
parameter_list|)
member_init_list|:
name|QNonNativeFileDialog
argument_list|(
name|parent
argument_list|,
name|caption
argument_list|,
name|dir
argument_list|,
name|filter
argument_list|)
block|{
name|sortProxy
modifier|*
name|proxyModel
init|=
operator|new
name|sortProxy
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|setProxyModel
argument_list|(
name|proxyModel
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|task227304_proxyOnFileDialog
name|void
name|tst_QFileDialog2
operator|::
name|task227304_proxyOnFileDialog
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
literal|""
argument_list|,
name|QDir
operator|::
name|currentPath
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|fd
operator|.
name|setProxyModel
argument_list|(
operator|new
name|FilterDirModel
argument_list|(
name|QDir
operator|::
name|currentPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileNameEdit"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_T
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_S
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
operator|->
name|completer
argument_list|()
operator|->
name|popup
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|CrashDialog
modifier|*
name|dialog
init|=
operator|new
name|CrashDialog
argument_list|(
literal|0
argument_list|,
name|QString
argument_list|(
literal|"crash dialog test"
argument_list|)
argument_list|,
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"*"
argument_list|)
argument_list|)
decl_stmt|;
name|dialog
operator|->
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|ExistingFile
argument_list|)
expr_stmt|;
name|dialog
operator|->
name|show
argument_list|()
expr_stmt|;
name|QListView
modifier|*
name|list
init|=
name|dialog
operator|->
name|findChild
argument_list|<
name|QListView
operator|*
argument_list|>
argument_list|(
literal|"listView"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|dialog
operator|->
name|close
argument_list|()
expr_stmt|;
name|fd
operator|.
name|close
argument_list|()
expr_stmt|;
name|QNonNativeFileDialog
name|fd2
argument_list|(
literal|0
argument_list|,
literal|"I should not crash with a proxy"
argument_list|,
name|tempDir
operator|.
name|path
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSortFilterProxyModel
modifier|*
name|pm
init|=
operator|new
name|QSortFilterProxyModel
decl_stmt|;
name|fd2
operator|.
name|setProxyModel
argument_list|(
name|pm
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QSidebar
modifier|*
name|sidebar
init|=
name|fd2
operator|.
name|findChild
argument_list|<
name|QSidebar
operator|*
argument_list|>
argument_list|(
literal|"sidebar"
argument_list|)
decl_stmt|;
name|sidebar
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|sidebar
operator|->
name|selectUrl
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|sidebar
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|sidebar
operator|->
name|visualRect
argument_list|(
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
comment|//We shouldn't crash
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|Q_OS_MAC
end_ifndef
begin_comment
comment|// The following test implies the folder created will appear first in
end_comment
begin_comment
comment|// the list. On Mac files sorting depends on the locale and the order
end_comment
begin_comment
comment|// displayed cannot be known for sure.
end_comment
begin_function
DECL|function|task227930_correctNavigationKeyboardBehavior
name|void
name|tst_QFileDialog2
operator|::
name|task227930_correctNavigationKeyboardBehavior
parameter_list|()
block|{
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|current
operator|.
name|cd
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|QFile
name|file
argument_list|(
literal|"test/out.txt"
argument_list|)
decl_stmt|;
name|QFile
name|file2
argument_list|(
literal|"test/out2.txt"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
operator||
name|QIODevice
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|file2
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
operator||
name|QIODevice
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
name|current
operator|.
name|cdUp
argument_list|()
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"test2"
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QListView
modifier|*
name|list
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QListView
operator|*
argument_list|>
argument_list|(
literal|"listView"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|list
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|file
operator|.
name|close
argument_list|()
expr_stmt|;
name|file2
operator|.
name|close
argument_list|()
expr_stmt|;
name|file
operator|.
name|remove
argument_list|()
expr_stmt|;
name|file2
operator|.
name|remove
argument_list|()
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"test2"
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_function
DECL|function|task226366_lowerCaseHardDriveWindows
name|void
name|tst_QFileDialog2
operator|::
name|task226366_lowerCaseHardDriveWindows
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|QDir
operator|::
name|root
argument_list|()
operator|.
name|path
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileNameEdit"
argument_list|)
decl_stmt|;
name|QToolButton
modifier|*
name|buttonParent
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
literal|"toParentButton"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|buttonParent
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_C
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
operator|->
name|completer
argument_list|()
operator|->
name|popup
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"C:/"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
comment|//i clear my previous selection in the completer
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
operator|->
name|completer
argument_list|()
operator|->
name|popup
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|edit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
argument_list|,
call|(
name|char
call|)
argument_list|(
name|Qt
operator|::
name|Key_C
operator||
name|Qt
operator|::
name|SHIFT
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
operator|->
name|completer
argument_list|()
operator|->
name|popup
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"C:/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|completionOnLevelAfterRoot
name|void
name|tst_QFileDialog2
operator|::
name|completionOnLevelAfterRoot
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|fd
operator|.
name|setDirectory
argument_list|(
literal|"C:/"
argument_list|)
expr_stmt|;
name|QDir
name|current
init|=
name|fd
operator|.
name|directory
argument_list|()
decl_stmt|;
name|QStringList
name|entryList
init|=
name|current
operator|.
name|entryList
argument_list|(
name|QStringList
argument_list|()
argument_list|,
name|QDir
operator|::
name|Dirs
argument_list|)
decl_stmt|;
comment|// Find a suitable test dir under c:-root:
comment|// - At least 6 characters long
comment|// - Ascii, letters only
comment|// - No another dir with same start
name|QString
name|testDir
decl_stmt|;
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|entry
decl|,
name|entryList
control|)
block|{
if|if
condition|(
name|entry
operator|.
name|size
argument_list|()
operator|>
literal|5
operator|&&
name|QString
argument_list|(
name|entry
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|.
name|compare
argument_list|(
name|entry
argument_list|)
operator|==
literal|0
condition|)
block|{
name|bool
name|invalid
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|entry
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|isLetter
argument_list|()
condition|)
block|{
name|invalid
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|invalid
condition|)
block|{
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|check
decl|,
name|entryList
control|)
block|{
if|if
condition|(
name|check
operator|.
name|startsWith
argument_list|(
name|entry
operator|.
name|left
argument_list|(
literal|5
argument_list|)
argument_list|)
operator|&&
name|check
operator|!=
name|entry
condition|)
block|{
name|invalid
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
operator|!
name|invalid
condition|)
block|{
name|testDir
operator|=
name|entry
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
name|testDir
operator|.
name|isEmpty
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"This test requires to have an unique directory of at least six ascii characters under c:/"
argument_list|)
expr_stmt|;
else|#
directive|else
name|fd
operator|.
name|setFilter
argument_list|(
name|QDir
operator|::
name|Hidden
operator||
name|QDir
operator|::
name|AllDirs
operator||
name|QDir
operator|::
name|Files
operator||
name|QDir
operator|::
name|System
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|QDir
name|etc
argument_list|(
literal|"/etc"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|etc
operator|.
name|exists
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"This test requires to have an etc directory under /"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileNameEdit"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
comment|//I love testlib :D
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
argument_list|,
name|testDir
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|toLower
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|-
literal|'a'
operator|+
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_E
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
argument_list|,
name|Qt
operator|::
name|Key_T
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|edit
operator|->
name|completer
argument_list|()
operator|->
name|popup
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|text
argument_list|()
argument_list|,
name|testDir
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTRY_COMPARE
argument_list|(
name|edit
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"etc"
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|task233037_selectingDirectory
name|void
name|tst_QFileDialog2
operator|::
name|task233037_selectingDirectory
parameter_list|()
block|{
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QListView
modifier|*
name|list
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QListView
operator|*
argument_list|>
argument_list|(
literal|"listView"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
comment|// Wait for sort to settle (I need a signal).
ifdef|#
directive|ifdef
name|QT_KEYPAD_NAVIGATION
name|list
operator|->
name|setEditFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QDialogButtonBox
modifier|*
name|buttonBox
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QDialogButtonBox
operator|*
argument_list|>
argument_list|(
literal|"buttonBox"
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
name|buttonBox
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Save
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|button
operator|->
name|isEnabled
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task235069_hideOnEscape_data
name|void
name|tst_QFileDialog2
operator|::
name|task235069_hideOnEscape_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"childName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QFileDialog
operator|::
name|ViewMode
argument_list|>
argument_list|(
literal|"viewMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"listView"
argument_list|)
operator|<<
name|QStringLiteral
argument_list|(
literal|"listView"
argument_list|)
operator|<<
name|QFileDialog
operator|::
name|List
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fileNameEdit"
argument_list|)
operator|<<
name|QStringLiteral
argument_list|(
literal|"fileNameEdit"
argument_list|)
operator|<<
name|QFileDialog
operator|::
name|List
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"treeView"
argument_list|)
operator|<<
name|QStringLiteral
argument_list|(
literal|"treeView"
argument_list|)
operator|<<
name|QFileDialog
operator|::
name|Detail
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task235069_hideOnEscape
name|void
name|tst_QFileDialog2
operator|::
name|task235069_hideOnEscape
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|childName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QFileDialog
operator|::
name|ViewMode
argument_list|,
name|viewMode
argument_list|)
expr_stmt|;
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|QSignalSpy
name|spyFinished
argument_list|(
operator|&
name|fd
argument_list|,
operator|&
name|QDialog
operator|::
name|finished
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spyFinished
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spyRejected
argument_list|(
operator|&
name|fd
argument_list|,
operator|&
name|QDialog
operator|::
name|rejected
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spyRejected
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|viewMode
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|childName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|child
argument_list|,
name|Qt
operator|::
name|Key_Escape
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|isVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spyFinished
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// QTBUG-7690
name|QCOMPARE
argument_list|(
name|spyRejected
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// reject(), don't hide()
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|task236402_dontWatchDeletedDir
name|void
name|tst_QFileDialog2
operator|::
name|task236402_dontWatchDeletedDir
parameter_list|()
block|{
comment|//THIS TEST SHOULD NOT DISPLAY WARNINGS
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
comment|//make sure it is the first on the list
name|current
operator|.
name|mkdir
argument_list|(
literal|"aaaaaaaaaa"
argument_list|)
expr_stmt|;
name|FriendlyQFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QListView
modifier|*
name|list
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QListView
operator|*
argument_list|>
argument_list|(
literal|"listView"
argument_list|)
decl_stmt|;
name|list
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|fd
operator|.
name|d_func
argument_list|()
operator|->
name|removeDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
operator|+
literal|"/aaaaaaaaaa/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|task203703_returnProperSeparator
name|void
name|tst_QFileDialog2
operator|::
name|task203703_returnProperSeparator
parameter_list|()
block|{
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"aaaaaaaaaaaaaaaaaa"
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|Directory
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QListView
modifier|*
name|list
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QListView
operator|*
argument_list|>
argument_list|(
literal|"listView"
argument_list|)
decl_stmt|;
name|list
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|list
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QDialogButtonBox
modifier|*
name|buttonBox
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QDialogButtonBox
operator|*
argument_list|>
argument_list|(
literal|"buttonBox"
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
name|buttonBox
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|button
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QString
name|result
init|=
name|fd
operator|.
name|selectedFiles
argument_list|()
operator|.
name|first
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|result
operator|.
name|at
argument_list|(
name|result
operator|.
name|count
argument_list|()
operator|-
literal|1
argument_list|)
operator|!=
literal|'/'
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|result
operator|.
name|contains
argument_list|(
literal|'\\'
argument_list|)
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"aaaaaaaaaaaaaaaaaa"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task228844_ensurePreviousSorting
name|void
name|tst_QFileDialog2
operator|::
name|task228844_ensurePreviousSorting
parameter_list|()
block|{
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"aaaaaaaaaaaaaaaaaa"
argument_list|)
expr_stmt|;
name|current
operator|.
name|cd
argument_list|(
literal|"aaaaaaaaaaaaaaaaaa"
argument_list|)
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"d"
argument_list|)
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"e"
argument_list|)
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"f"
argument_list|)
expr_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"g"
argument_list|)
expr_stmt|;
name|QTemporaryFile
modifier|*
name|tempFile
init|=
operator|new
name|QTemporaryFile
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
operator|+
literal|"/rXXXXXX"
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|tempFile
operator|->
name|open
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|tempFile
operator|->
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|current
operator|.
name|cdUp
argument_list|()
expr_stmt|;
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|Detail
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTreeView
modifier|*
name|tree
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QTreeView
operator|*
argument_list|>
argument_list|(
literal|"treeView"
argument_list|)
decl_stmt|;
name|tree
operator|->
name|header
argument_list|()
operator|->
name|setSortIndicator
argument_list|(
literal|3
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QDialogButtonBox
modifier|*
name|buttonBox
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QDialogButtonBox
operator|*
argument_list|>
argument_list|(
literal|"buttonBox"
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
name|buttonBox
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Open
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QNonNativeFileDialog
name|fd2
decl_stmt|;
name|fd2
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|Directory
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|restoreState
argument_list|(
name|fd
operator|.
name|saveState
argument_list|()
argument_list|)
expr_stmt|;
name|current
operator|.
name|cd
argument_list|(
literal|"aaaaaaaaaaaaaaaaaa"
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|setDirectory
argument_list|(
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|show
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTreeView
modifier|*
name|tree2
init|=
name|fd2
operator|.
name|findChild
argument_list|<
name|QTreeView
operator|*
argument_list|>
argument_list|(
literal|"treeView"
argument_list|)
decl_stmt|;
name|tree2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tree2
operator|->
name|rootIndex
argument_list|()
operator|.
name|data
argument_list|(
name|QFileSystemModel
operator|::
name|FilePathRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|QDialogButtonBox
modifier|*
name|buttonBox2
init|=
name|fd2
operator|.
name|findChild
argument_list|<
name|QDialogButtonBox
operator|*
argument_list|>
argument_list|(
literal|"buttonBox"
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|button2
init|=
name|buttonBox2
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Open
argument_list|)
decl_stmt|;
name|fd2
operator|.
name|selectFile
argument_list|(
literal|"g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|button2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|fd2
operator|.
name|selectedFiles
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|current
operator|.
name|absolutePath
argument_list|()
operator|+
name|QLatin1String
argument_list|(
literal|"/g"
argument_list|)
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|fd3
argument_list|(
literal|0
argument_list|,
literal|"This is a third file dialog"
argument_list|,
name|tempFile
operator|->
name|fileName
argument_list|()
argument_list|)
decl_stmt|;
name|fd3
operator|.
name|restoreState
argument_list|(
name|fd
operator|.
name|saveState
argument_list|()
argument_list|)
expr_stmt|;
name|fd3
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|Directory
argument_list|)
expr_stmt|;
name|fd3
operator|.
name|show
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTreeView
modifier|*
name|tree3
init|=
name|fd3
operator|.
name|findChild
argument_list|<
name|QTreeView
operator|*
argument_list|>
argument_list|(
literal|"treeView"
argument_list|)
decl_stmt|;
name|tree3
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tree3
operator|->
name|rootIndex
argument_list|()
operator|.
name|data
argument_list|(
name|QFileSystemModel
operator|::
name|FilePathRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|current
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|QDialogButtonBox
modifier|*
name|buttonBox3
init|=
name|fd3
operator|.
name|findChild
argument_list|<
name|QDialogButtonBox
operator|*
argument_list|>
argument_list|(
literal|"buttonBox"
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|button3
init|=
name|buttonBox3
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Open
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|button3
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|1500
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|fd3
operator|.
name|selectedFiles
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|tempFile
operator|->
name|fileName
argument_list|()
argument_list|)
expr_stmt|;
name|current
operator|.
name|cd
argument_list|(
literal|"aaaaaaaaaaaaaaaaaa"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"d"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"e"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"f"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"g"
argument_list|)
expr_stmt|;
name|tempFile
operator|->
name|close
argument_list|()
expr_stmt|;
operator|delete
name|tempFile
expr_stmt|;
name|current
operator|.
name|cdUp
argument_list|()
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"aaaaaaaaaaaaaaaaaa"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task239706_editableFilterCombo
name|void
name|tst_QFileDialog2
operator|::
name|task239706_editableFilterCombo
parameter_list|()
block|{
name|QNonNativeFileDialog
name|d
decl_stmt|;
name|d
operator|.
name|setNameFilter
argument_list|(
literal|"*.cpp *.h"
argument_list|)
expr_stmt|;
name|d
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QComboBox
modifier|*
argument_list|>
name|comboList
init|=
name|d
operator|.
name|findChildren
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|()
decl_stmt|;
name|QComboBox
modifier|*
name|filterCombo
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|QComboBox
modifier|*
name|combo
decl|,
name|comboList
control|)
block|{
if|if
condition|(
name|combo
operator|->
name|objectName
argument_list|()
operator|==
name|QString
argument_list|(
literal|"fileTypeCombo"
argument_list|)
condition|)
block|{
name|filterCombo
operator|=
name|combo
expr_stmt|;
break|break;
block|}
block|}
name|QVERIFY
argument_list|(
name|filterCombo
argument_list|)
expr_stmt|;
name|filterCombo
operator|->
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|filterCombo
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|filterCombo
argument_list|,
name|Qt
operator|::
name|Key_X
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|filterCombo
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
comment|// should not trigger assertion failure
block|}
end_function
begin_function
DECL|function|task218353_relativePaths
name|void
name|tst_QFileDialog2
operator|::
name|task218353_relativePaths
parameter_list|()
block|{
name|QDir
name|appDir
init|=
name|QDir
operator|::
name|current
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|appDir
operator|.
name|cdUp
argument_list|()
operator|!=
literal|false
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|d
argument_list|(
literal|0
argument_list|,
literal|"TestDialog"
argument_list|,
literal|".."
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|directory
argument_list|()
operator|.
name|absolutePath
argument_list|()
argument_list|,
name|appDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|d
operator|.
name|setDirectory
argument_list|(
name|appDir
operator|.
name|absolutePath
argument_list|()
operator|+
name|QLatin1String
argument_list|(
literal|"/non-existing-directory/../another-non-existing-dir/../"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|directory
argument_list|()
operator|.
name|absolutePath
argument_list|()
argument_list|,
name|appDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|QDir
operator|::
name|current
argument_list|()
operator|.
name|mkdir
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|appDir
operator|=
name|QDir
operator|::
name|current
argument_list|()
expr_stmt|;
name|d
operator|.
name|setDirectory
argument_list|(
name|appDir
operator|.
name|absolutePath
argument_list|()
operator|+
name|QLatin1String
argument_list|(
literal|"/test/../test/../"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|directory
argument_list|()
operator|.
name|absolutePath
argument_list|()
argument_list|,
name|appDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|appDir
operator|.
name|rmdir
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|task251321_sideBarHiddenEntries
name|void
name|tst_QFileDialog2
operator|::
name|task251321_sideBarHiddenEntries
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|".hidden"
argument_list|)
expr_stmt|;
name|QDir
name|hiddenDir
init|=
name|QDir
argument_list|(
literal|".hidden"
argument_list|)
decl_stmt|;
name|hiddenDir
operator|.
name|mkdir
argument_list|(
literal|"subdir"
argument_list|)
expr_stmt|;
name|QDir
name|hiddenSubDir
init|=
name|QDir
argument_list|(
literal|".hidden/subdir"
argument_list|)
decl_stmt|;
name|hiddenSubDir
operator|.
name|mkdir
argument_list|(
literal|"happy"
argument_list|)
expr_stmt|;
name|hiddenSubDir
operator|.
name|mkdir
argument_list|(
literal|"happy2"
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QUrl
argument_list|>
name|urls
decl_stmt|;
name|urls
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|hiddenSubDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setSidebarUrls
argument_list|(
name|urls
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QSidebar
modifier|*
name|sidebar
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QSidebar
operator|*
argument_list|>
argument_list|(
literal|"sidebar"
argument_list|)
decl_stmt|;
name|sidebar
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|sidebar
operator|->
name|selectUrl
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|hiddenSubDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|sidebar
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|sidebar
operator|->
name|visualRect
argument_list|(
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
comment|// give the background processes more time on windows mobile
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFileSystemModel
modifier|*
name|model
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
literal|"qt_filesystem_model"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|hiddenSubDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|hiddenSubDir
operator|.
name|rmdir
argument_list|(
literal|"happy2"
argument_list|)
expr_stmt|;
name|hiddenSubDir
operator|.
name|rmdir
argument_list|(
literal|"happy"
argument_list|)
expr_stmt|;
name|hiddenDir
operator|.
name|rmdir
argument_list|(
literal|"subdir"
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|".hidden"
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
name|QT_BUILD_INTERNAL
end_if
begin_class
DECL|class|MyQSideBar
class|class
name|MyQSideBar
super|:
specifier|public
name|QSidebar
block|{
public|public :
DECL|function|MyQSideBar
name|MyQSideBar
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QSidebar
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|removeSelection
name|void
name|removeSelection
parameter_list|()
block|{
name|QList
argument_list|<
name|QModelIndex
argument_list|>
name|idxs
init|=
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QPersistentModelIndex
argument_list|>
name|indexes
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|idxs
operator|.
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
name|indexes
operator|.
name|append
argument_list|(
name|idxs
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|indexes
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
if|if
condition|(
operator|!
name|indexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
operator|+
literal|1
argument_list|)
operator|.
name|toUrl
argument_list|()
operator|.
name|path
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|model
argument_list|()
operator|->
name|removeRow
argument_list|(
name|indexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|row
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|task251341_sideBarRemoveEntries
name|void
name|tst_QFileDialog2
operator|::
name|task251341_sideBarRemoveEntries
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|QDir
name|current
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
name|current
operator|.
name|mkdir
argument_list|(
literal|"testDir"
argument_list|)
expr_stmt|;
name|QDir
name|testSubDir
init|=
name|QDir
argument_list|(
literal|"testDir"
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QUrl
argument_list|>
name|urls
decl_stmt|;
name|urls
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|testSubDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|urls
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"NotFound"
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setSidebarUrls
argument_list|(
name|urls
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QSidebar
modifier|*
name|sidebar
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QSidebar
operator|*
argument_list|>
argument_list|(
literal|"sidebar"
argument_list|)
decl_stmt|;
name|sidebar
operator|->
name|setFocus
argument_list|()
expr_stmt|;
comment|//We enter in the first bookmark
name|sidebar
operator|->
name|selectUrl
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|testSubDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|sidebar
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|sidebar
operator|->
name|visualRect
argument_list|(
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QFileSystemModel
modifier|*
name|model
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
literal|"qt_filesystem_model"
argument_list|)
decl_stmt|;
comment|//There is no file
name|QCOMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|testSubDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//Icon is not enabled QUrlModel::EnabledRole
name|QVariant
name|value
init|=
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
operator|+
literal|2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|value
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|sidebar
operator|->
name|setFocus
argument_list|()
expr_stmt|;
comment|//We enter in the second bookmark which is invalid
name|sidebar
operator|->
name|selectUrl
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"NotFound"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|sidebar
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|sidebar
operator|->
name|visualRect
argument_list|(
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
comment|//We fallback to root because the entry in the bookmark is invalid
name|QCOMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|"NotFound"
argument_list|)
argument_list|)
argument_list|,
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|model
operator|->
name|rootPath
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//Icon is not enabled QUrlModel::EnabledRole
name|value
operator|=
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
operator|+
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|value
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|MyQSideBar
name|mySideBar
decl_stmt|;
name|mySideBar
operator|.
name|setModelAndUrls
argument_list|(
name|model
argument_list|,
name|urls
argument_list|)
expr_stmt|;
name|mySideBar
operator|.
name|show
argument_list|()
expr_stmt|;
name|mySideBar
operator|.
name|selectUrl
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|testSubDir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|mySideBar
operator|.
name|removeSelection
argument_list|()
expr_stmt|;
comment|//We remove the first entry
name|QList
argument_list|<
name|QUrl
argument_list|>
name|expected
decl_stmt|;
name|expected
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"NotFound"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mySideBar
operator|.
name|urls
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|mySideBar
operator|.
name|selectUrl
argument_list|(
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"NotFound"
argument_list|)
argument_list|)
expr_stmt|;
name|mySideBar
operator|.
name|removeSelection
argument_list|()
expr_stmt|;
comment|//We remove the second entry
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mySideBar
operator|.
name|urls
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|current
operator|.
name|rmdir
argument_list|(
literal|"testDir"
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|task254490_selectFileMultipleTimes
name|void
name|tst_QFileDialog2
operator|::
name|task254490_selectFileMultipleTimes
parameter_list|()
block|{
name|QString
name|tempPath
init|=
name|tempDir
operator|.
name|path
argument_list|()
decl_stmt|;
name|QTemporaryFile
modifier|*
name|t
decl_stmt|;
name|t
operator|=
operator|new
name|QTemporaryFile
expr_stmt|;
name|QVERIFY2
argument_list|(
name|t
operator|->
name|open
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|t
operator|->
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|->
name|open
argument_list|()
expr_stmt|;
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
literal|"TestFileDialog"
argument_list|)
decl_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|tempPath
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|AnyFile
argument_list|)
expr_stmt|;
comment|//This should select the file in the QFileDialog
name|fd
operator|.
name|selectFile
argument_list|(
name|t
operator|->
name|fileName
argument_list|()
argument_list|)
expr_stmt|;
comment|//This should clear the selection and write it into the filename line edit
name|fd
operator|.
name|selectFile
argument_list|(
literal|"new_file.txt"
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileNameEdit"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"new_file.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QListView
modifier|*
name|list
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QListView
operator|*
argument_list|>
argument_list|(
literal|"listView"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|->
name|selectionModel
argument_list|()
operator|->
name|selectedRows
argument_list|(
literal|0
argument_list|)
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|t
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function
DECL|function|task257579_sideBarWithNonCleanUrls
name|void
name|tst_QFileDialog2
operator|::
name|task257579_sideBarWithNonCleanUrls
parameter_list|()
block|{
name|QDir
name|dir
argument_list|(
name|tempDir
operator|.
name|path
argument_list|()
argument_list|)
decl_stmt|;
name|QLatin1String
name|dirname
argument_list|(
literal|"autotest_task257579"
argument_list|)
decl_stmt|;
name|dir
operator|.
name|rmdir
argument_list|(
name|dirname
argument_list|)
expr_stmt|;
comment|//makes sure it doesn't exist any more
name|QVERIFY
argument_list|(
name|dir
operator|.
name|mkdir
argument_list|(
name|dirname
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|url
init|=
name|dir
operator|.
name|absolutePath
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
operator|+
name|dirname
operator|+
name|QLatin1String
argument_list|(
literal|"/.."
argument_list|)
decl_stmt|;
name|QNonNativeFileDialog
name|fd
decl_stmt|;
name|fd
operator|.
name|setSidebarUrls
argument_list|(
name|QList
argument_list|<
name|QUrl
argument_list|>
argument_list|()
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|QSidebar
modifier|*
name|sidebar
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QSidebar
operator|*
argument_list|>
argument_list|(
literal|"sidebar"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|sidebar
operator|->
name|urls
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sidebar
operator|->
name|urls
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toLocalFile
argument_list|()
operator|!=
name|url
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sidebar
operator|->
name|urls
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toLocalFile
argument_list|()
argument_list|,
name|QDir
operator|::
name|cleanPath
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
name|QCOMPARE
argument_list|(
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|toLower
argument_list|()
argument_list|,
name|dir
operator|.
name|dirName
argument_list|()
operator|.
name|toLower
argument_list|()
argument_list|)
expr_stmt|;
else|#
directive|else
name|QCOMPARE
argument_list|(
name|sidebar
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|data
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|dir
operator|.
name|dirName
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|//all tests are finished, we can remove the temporary dir
name|QVERIFY
argument_list|(
name|dir
operator|.
name|rmdir
argument_list|(
name|dirname
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|task259105_filtersCornerCases
name|void
name|tst_QFileDialog2
operator|::
name|task259105_filtersCornerCases
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
literal|"TestFileDialog"
argument_list|)
decl_stmt|;
name|fd
operator|.
name|setNameFilter
argument_list|(
name|QLatin1String
argument_list|(
literal|"All Files! (*);;Text Files (*.txt)"
argument_list|)
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|HideNameFilterDetails
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
comment|//Extensions are hidden
name|QComboBox
modifier|*
name|filters
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"fileTypeCombo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|filters
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"All Files!"
argument_list|)
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text Files"
argument_list|)
argument_list|)
expr_stmt|;
comment|//We should have the full names
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|HideNameFilterDetails
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"All Files! (*)"
argument_list|)
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text Files (*.txt)"
argument_list|)
argument_list|)
expr_stmt|;
comment|//Corner case undocumented of the task
name|fd
operator|.
name|setNameFilter
argument_list|(
name|QLatin1String
argument_list|(
literal|"\352 (I like cheese) All Files! (*);;Text Files (*.txt)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"\352 (I like cheese) All Files! (*)"
argument_list|)
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text Files (*.txt)"
argument_list|)
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|HideNameFilterDetails
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"\352 (I like cheese) All Files!"
argument_list|)
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text Files"
argument_list|)
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|HideNameFilterDetails
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"\352 (I like cheese) All Files!"
argument_list|)
argument_list|)
expr_stmt|;
name|filters
operator|->
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text Files"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG4419_lineEditSelectAll
name|void
name|tst_QFileDialog2
operator|::
name|QTBUG4419_lineEditSelectAll
parameter_list|()
block|{
name|QString
name|tempPath
init|=
name|tempDir
operator|.
name|path
argument_list|()
decl_stmt|;
name|QTemporaryFile
name|temporaryFile
argument_list|(
name|tempPath
operator|+
literal|"/tst_qfiledialog2_lineEditSelectAll.XXXXXX"
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|temporaryFile
operator|.
name|open
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|temporaryFile
operator|.
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
literal|"TestFileDialog"
argument_list|,
name|temporaryFile
operator|.
name|fileName
argument_list|()
argument_list|)
decl_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|tempPath
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|AnyFile
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|fd
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileNameEdit"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|tempPath
operator|+
name|QChar
argument_list|(
literal|'/'
argument_list|)
operator|+
name|lineEdit
operator|->
name|text
argument_list|()
argument_list|,
name|temporaryFile
operator|.
name|fileName
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tempPath
operator|+
name|QChar
argument_list|(
literal|'/'
argument_list|)
operator|+
name|lineEdit
operator|->
name|selectedText
argument_list|()
argument_list|,
name|temporaryFile
operator|.
name|fileName
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG6558_showDirsOnly
name|void
name|tst_QFileDialog2
operator|::
name|QTBUG6558_showDirsOnly
parameter_list|()
block|{
specifier|const
name|QString
name|tempPath
init|=
name|tempDir
operator|.
name|path
argument_list|()
decl_stmt|;
name|QDir
name|dirTemp
argument_list|(
name|tempPath
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|tempName
init|=
name|QLatin1String
argument_list|(
literal|"showDirsOnly."
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|qrand
argument_list|()
argument_list|)
decl_stmt|;
name|dirTemp
operator|.
name|mkdir
argument_list|(
name|tempName
argument_list|)
expr_stmt|;
name|dirTemp
operator|.
name|cd
argument_list|(
name|tempName
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|dirTemp
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|dirPath
init|=
name|dirTemp
operator|.
name|absolutePath
argument_list|()
decl_stmt|;
name|QDir
name|dir
argument_list|(
name|dirPath
argument_list|)
decl_stmt|;
comment|//We create two dirs
name|dir
operator|.
name|mkdir
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|dir
operator|.
name|mkdir
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
comment|//Create a file
name|QFile
name|tempFile
argument_list|(
name|dirPath
operator|+
literal|"/plop.txt"
argument_list|)
decl_stmt|;
name|tempFile
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
operator||
name|QIODevice
operator|::
name|Text
argument_list|)
expr_stmt|;
name|QTextStream
name|out
argument_list|(
operator|&
name|tempFile
argument_list|)
decl_stmt|;
name|out
operator|<<
literal|"The magic number is: "
operator|<<
literal|49
operator|<<
literal|"\n"
expr_stmt|;
name|tempFile
operator|.
name|close
argument_list|()
expr_stmt|;
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
literal|"TestFileDialog"
argument_list|)
decl_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|dir
operator|.
name|absolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setViewMode
argument_list|(
name|QFileDialog
operator|::
name|List
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|ShowDirsOnly
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|fd
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QFileSystemModel
modifier|*
name|model
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QFileSystemModel
operator|*
argument_list|>
argument_list|(
literal|"qt_filesystem_model"
argument_list|)
decl_stmt|;
name|QTRY_COMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|dir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|ShowDirsOnly
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|dir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|ShowDirsOnly
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|dir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|DirectoryOnly
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|dir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|bool
argument_list|(
name|fd
operator|.
name|options
argument_list|()
operator|&
name|QFileDialog
operator|::
name|ShowDirsOnly
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|AnyFile
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|dir
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|bool
argument_list|(
name|fd
operator|.
name|options
argument_list|()
operator|&
name|QFileDialog
operator|::
name|ShowDirsOnly
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
expr_stmt|;
comment|//We remove the dirs
name|dir
operator|.
name|rmdir
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|dir
operator|.
name|rmdir
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
comment|//we delete the file
name|tempFile
operator|.
name|remove
argument_list|()
expr_stmt|;
name|dirTemp
operator|.
name|cdUp
argument_list|()
expr_stmt|;
name|dirTemp
operator|.
name|rmdir
argument_list|(
name|tempName
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG4842_selectFilterWithHideNameFilterDetails
name|void
name|tst_QFileDialog2
operator|::
name|QTBUG4842_selectFilterWithHideNameFilterDetails
parameter_list|()
block|{
name|QStringList
name|filtersStr
decl_stmt|;
name|filtersStr
operator|<<
literal|"Images (*.png *.xpm *.jpg)"
operator|<<
literal|"Text files (*.txt)"
operator|<<
literal|"XML files (*.xml)"
expr_stmt|;
name|QString
name|chosenFilterString
argument_list|(
literal|"Text files (*.txt)"
argument_list|)
decl_stmt|;
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
literal|"TestFileDialog"
argument_list|)
decl_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|HideNameFilterDetails
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setNameFilters
argument_list|(
name|filtersStr
argument_list|)
expr_stmt|;
name|fd
operator|.
name|selectNameFilter
argument_list|(
name|chosenFilterString
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|fd
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QComboBox
modifier|*
name|filters
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"fileTypeCombo"
argument_list|)
decl_stmt|;
comment|//We compare the current combobox text with the stripped version
name|QCOMPARE
argument_list|(
name|filters
operator|->
name|currentText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Text files"
argument_list|)
argument_list|)
expr_stmt|;
name|QNonNativeFileDialog
name|fd2
argument_list|(
literal|0
argument_list|,
literal|"TestFileDialog"
argument_list|)
decl_stmt|;
name|fd2
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|HideNameFilterDetails
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|setNameFilters
argument_list|(
name|filtersStr
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|selectNameFilter
argument_list|(
name|chosenFilterString
argument_list|)
expr_stmt|;
name|fd2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|fd2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|fd2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd2
operator|.
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|fd2
argument_list|)
argument_list|)
expr_stmt|;
name|QComboBox
modifier|*
name|filters2
init|=
name|fd2
operator|.
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"fileTypeCombo"
argument_list|)
decl_stmt|;
comment|//We compare the current combobox text with the non stripped version
name|QCOMPARE
argument_list|(
name|filters2
operator|->
name|currentText
argument_list|()
argument_list|,
name|chosenFilterString
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dontShowCompleterOnRoot
name|void
name|tst_QFileDialog2
operator|::
name|dontShowCompleterOnRoot
parameter_list|()
block|{
name|QNonNativeFileDialog
name|fd
argument_list|(
literal|0
argument_list|,
literal|"TestFileDialog"
argument_list|)
decl_stmt|;
name|fd
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptSave
argument_list|)
expr_stmt|;
name|fd
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|fd
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|fd
operator|.
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|fd
argument_list|)
argument_list|)
expr_stmt|;
name|fd
operator|.
name|setDirectory
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
name|fd
operator|.
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileNameEdit"
argument_list|)
decl_stmt|;
name|QTRY_VERIFY
argument_list|(
name|lineEdit
operator|->
name|text
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|//The gatherer thread will then return the result
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|lineEdit
operator|->
name|completer
argument_list|()
operator|->
name|popup
argument_list|()
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nameFilterParsing_data
name|void
name|tst_QFileDialog2
operator|::
name|nameFilterParsing_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"filterString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"filters"
argument_list|)
expr_stmt|;
comment|// QTBUG-47923: Do not trip over "*,v".
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text"
argument_list|)
operator|<<
literal|"plain text document (*.txt *.asc *,v *.doc)"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"*.txt"
operator|<<
literal|"*.asc"
operator|<<
literal|"*,v"
operator|<<
literal|"*.doc"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"html"
argument_list|)
operator|<<
literal|"HTML document (*.html *.htm)"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"*.html"
operator|<<
literal|"*.htm"
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nameFilterParsing
name|void
name|tst_QFileDialog2
operator|::
name|nameFilterParsing
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|filterString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|filters
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPlatformFileDialogHelper
operator|::
name|cleanFilterList
argument_list|(
name|filterString
argument_list|)
argument_list|,
name|filters
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QFileDialog2
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qfiledialog2.moc"
end_include
end_unit
