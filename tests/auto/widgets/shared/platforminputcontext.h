begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qplatforminputcontext_qpa.h>
end_include
begin_decl_stmt
name|class
name|PlatformInputContext
range|:
name|public
name|QPlatformInputContext
block|{
name|public
operator|:
name|PlatformInputContext
argument_list|()
operator|:
name|m_animating
argument_list|(
name|false
argument_list|)
block|,
name|m_visible
argument_list|(
name|false
argument_list|)
block|,
name|m_updateCallCount
argument_list|(
literal|0
argument_list|)
block|,
name|m_resetCallCount
argument_list|(
literal|0
argument_list|)
block|,
name|m_commitCallCount
argument_list|(
literal|0
argument_list|)
block|,
name|m_lastQueries
argument_list|(
name|Qt
operator|::
name|ImhNone
argument_list|)
block|,
name|m_action
argument_list|(
name|QInputPanel
operator|::
name|Click
argument_list|)
block|,
name|m_cursorPosition
argument_list|(
literal|0
argument_list|)
block|,
name|m_lastEventType
argument_list|(
argument|QEvent::None
argument_list|)
block|{}
name|virtual
name|QRectF
name|keyboardRect
argument_list|()
specifier|const
block|{
return|return
name|m_keyboardRect
return|;
block|}
name|virtual
name|bool
name|isAnimating
argument_list|()
specifier|const
block|{
return|return
name|m_animating
return|;
block|}
name|virtual
name|void
name|reset
argument_list|()
block|{
name|m_resetCallCount
operator|++
block|; }
name|virtual
name|void
name|commit
argument_list|()
block|{
name|m_commitCallCount
operator|++
block|; }
name|virtual
name|void
name|update
argument_list|(
argument|Qt::InputMethodQueries queries
argument_list|)
block|{
name|m_updateCallCount
operator|++
block|;
name|m_lastQueries
operator|=
name|queries
block|;     }
name|virtual
name|void
name|invokeAction
argument_list|(
argument|QInputPanel::Action action
argument_list|,
argument|int cursorPosition
argument_list|)
block|{
name|m_action
operator|=
name|action
block|;
name|m_cursorPosition
operator|=
name|cursorPosition
block|;     }
name|virtual
name|bool
name|filterEvent
argument_list|(
argument|const QEvent *event
argument_list|)
block|{
name|m_lastEventType
operator|=
name|event
operator|->
name|type
argument_list|()
block|;
return|return
name|false
return|;
block|}
name|virtual
name|void
name|showInputPanel
argument_list|()
block|{
name|m_visible
operator|=
name|true
block|;     }
name|virtual
name|void
name|hideInputPanel
argument_list|()
block|{
name|m_visible
operator|=
name|false
block|;     }
name|virtual
name|bool
name|isInputPanelVisible
argument_list|()
specifier|const
block|{
return|return
name|m_visible
return|;
block|}
name|bool
name|m_animating
block|;
name|bool
name|m_visible
block|;
name|int
name|m_updateCallCount
block|;
name|int
name|m_resetCallCount
block|;
name|int
name|m_commitCallCount
block|;
name|Qt
operator|::
name|InputMethodQueries
name|m_lastQueries
block|;
name|QInputPanel
operator|::
name|Action
name|m_action
block|;
name|int
name|m_cursorPosition
block|;
name|int
name|m_lastEventType
block|;
name|QRectF
name|m_keyboardRect
block|; }
decl_stmt|;
end_decl_stmt
end_unit
