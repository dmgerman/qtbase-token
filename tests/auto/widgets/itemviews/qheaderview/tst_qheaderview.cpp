begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Copyright (C) 2012 ThorbjÃ¸rn Lund Martsum - tmartsum[at]gmail.com ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QStandardItemModel>
end_include
begin_include
include|#
directive|include
file|<QStringListModel>
end_include
begin_include
include|#
directive|include
file|<QSortFilterProxyModel>
end_include
begin_include
include|#
directive|include
file|<QTableView>
end_include
begin_include
include|#
directive|include
file|<QProxyStyle>
end_include
begin_include
include|#
directive|include
file|<qabstractitemmodel.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qheaderview.h>
end_include
begin_include
include|#
directive|include
file|<private/qheaderview_p.h>
end_include
begin_include
include|#
directive|include
file|<qitemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<qtreewidget.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_typedef
DECL|typedef|BoolList
typedef|typedef
name|QList
argument_list|<
name|bool
argument_list|>
name|BoolList
typedef|;
end_typedef
begin_class
DECL|class|TestStyle
class|class
name|TestStyle
super|:
specifier|public
name|QProxyStyle
block|{
public|public:
DECL|function|drawControl
name|void
name|drawControl
parameter_list|(
name|ControlElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|element
operator|==
name|CE_HeaderSection
condition|)
block|{
if|if
condition|(
specifier|const
name|QStyleOptionHeader
modifier|*
name|header
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionHeader
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
condition|)
name|lastPosition
operator|=
name|header
operator|->
name|position
expr_stmt|;
block|}
name|QProxyStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
DECL|member|lastPosition
specifier|mutable
name|QStyleOptionHeader
operator|::
name|SectionPosition
name|lastPosition
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|protected_QHeaderView
class|class
name|protected_QHeaderView
super|:
specifier|public
name|QHeaderView
block|{
name|Q_OBJECT
public|public:
DECL|function|protected_QHeaderView
name|protected_QHeaderView
parameter_list|(
name|Qt
operator|::
name|Orientation
name|orientation
parameter_list|)
member_init_list|:
name|QHeaderView
argument_list|(
name|orientation
argument_list|)
block|{
name|resizeSections
argument_list|()
expr_stmt|;
block|}
empty_stmt|;
name|void
name|testEvent
parameter_list|()
function_decl|;
name|void
name|testhorizontalOffset
parameter_list|()
function_decl|;
name|void
name|testverticalOffset
parameter_list|()
function_decl|;
friend|friend
class_decl|class
name|tst_QHeaderView
class_decl|;
block|}
class|;
end_class
begin_class
DECL|class|XResetModel
class|class
name|XResetModel
super|:
specifier|public
name|QStandardItemModel
block|{
DECL|function|removeRows
specifier|virtual
name|bool
name|removeRows
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
block|{
name|blockSignals
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|bool
name|r
init|=
name|QStandardItemModel
operator|::
name|removeRows
argument_list|(
name|row
argument_list|,
name|count
argument_list|,
name|parent
argument_list|)
decl_stmt|;
name|blockSignals
argument_list|(
literal|false
argument_list|)
expr_stmt|;
emit|emit
name|reset
argument_list|()
emit|;
return|return
name|r
return|;
block|}
DECL|function|insertRows
specifier|virtual
name|bool
name|insertRows
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
block|{
name|blockSignals
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|bool
name|r
init|=
name|QStandardItemModel
operator|::
name|insertRows
argument_list|(
name|row
argument_list|,
name|count
argument_list|,
name|parent
argument_list|)
decl_stmt|;
name|blockSignals
argument_list|(
literal|false
argument_list|)
expr_stmt|;
emit|emit
name|reset
argument_list|()
emit|;
return|return
name|r
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|tst_QHeaderView
class|class
name|tst_QHeaderView
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QHeaderView
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QHeaderView
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|visualIndex
parameter_list|()
function_decl|;
name|void
name|visualIndexAt_data
parameter_list|()
function_decl|;
name|void
name|visualIndexAt
parameter_list|()
function_decl|;
name|void
name|noModel
parameter_list|()
function_decl|;
name|void
name|emptyModel
parameter_list|()
function_decl|;
name|void
name|removeRows
parameter_list|()
function_decl|;
name|void
name|removeCols
parameter_list|()
function_decl|;
name|void
name|clickable
parameter_list|()
function_decl|;
name|void
name|movable
parameter_list|()
function_decl|;
name|void
name|hidden
parameter_list|()
function_decl|;
name|void
name|stretch
parameter_list|()
function_decl|;
name|void
name|sectionSize_data
parameter_list|()
function_decl|;
name|void
name|sectionSize
parameter_list|()
function_decl|;
name|void
name|length
parameter_list|()
function_decl|;
name|void
name|offset
parameter_list|()
function_decl|;
name|void
name|sectionSizeHint
parameter_list|()
function_decl|;
name|void
name|logicalIndex
parameter_list|()
function_decl|;
name|void
name|logicalIndexAt
parameter_list|()
function_decl|;
name|void
name|swapSections
parameter_list|()
function_decl|;
name|void
name|moveSection_data
parameter_list|()
function_decl|;
name|void
name|moveSection
parameter_list|()
function_decl|;
name|void
name|resizeMode
parameter_list|()
function_decl|;
name|void
name|resizeSection_data
parameter_list|()
function_decl|;
name|void
name|resizeSection
parameter_list|()
function_decl|;
name|void
name|resizeAndMoveSection_data
parameter_list|()
function_decl|;
name|void
name|resizeAndMoveSection
parameter_list|()
function_decl|;
name|void
name|resizeHiddenSection_data
parameter_list|()
function_decl|;
name|void
name|resizeHiddenSection
parameter_list|()
function_decl|;
name|void
name|resizeAndInsertSection_data
parameter_list|()
function_decl|;
name|void
name|resizeAndInsertSection
parameter_list|()
function_decl|;
name|void
name|resizeWithResizeModes_data
parameter_list|()
function_decl|;
name|void
name|resizeWithResizeModes
parameter_list|()
function_decl|;
name|void
name|moveAndInsertSection_data
parameter_list|()
function_decl|;
name|void
name|moveAndInsertSection
parameter_list|()
function_decl|;
name|void
name|highlightSections
parameter_list|()
function_decl|;
name|void
name|showSortIndicator
parameter_list|()
function_decl|;
name|void
name|sortIndicatorTracking
parameter_list|()
function_decl|;
name|void
name|removeAndInsertRow
parameter_list|()
function_decl|;
name|void
name|unhideSection
parameter_list|()
function_decl|;
name|void
name|testEvent
parameter_list|()
function_decl|;
name|void
name|headerDataChanged
parameter_list|()
function_decl|;
name|void
name|currentChanged
parameter_list|()
function_decl|;
name|void
name|horizontalOffset
parameter_list|()
function_decl|;
name|void
name|verticalOffset
parameter_list|()
function_decl|;
name|void
name|stretchSectionCount
parameter_list|()
function_decl|;
name|void
name|hiddenSectionCount
parameter_list|()
function_decl|;
name|void
name|focusPolicy
parameter_list|()
function_decl|;
name|void
name|moveSectionAndReset
parameter_list|()
function_decl|;
name|void
name|moveSectionAndRemove
parameter_list|()
function_decl|;
name|void
name|saveRestore
parameter_list|()
function_decl|;
name|void
name|defaultSectionSizeTest
parameter_list|()
function_decl|;
name|void
name|defaultSectionSizeTestStyles
parameter_list|()
function_decl|;
name|void
name|defaultAlignment_data
parameter_list|()
function_decl|;
name|void
name|defaultAlignment
parameter_list|()
function_decl|;
name|void
name|globalResizeMode_data
parameter_list|()
function_decl|;
name|void
name|globalResizeMode
parameter_list|()
function_decl|;
name|void
name|sectionPressedSignal_data
parameter_list|()
function_decl|;
name|void
name|sectionPressedSignal
parameter_list|()
function_decl|;
DECL|function|sectionClickedSignal_data
name|void
name|sectionClickedSignal_data
parameter_list|()
block|{
name|sectionPressedSignal_data
argument_list|()
expr_stmt|;
block|}
name|void
name|sectionClickedSignal
parameter_list|()
function_decl|;
name|void
name|defaultSectionSize_data
parameter_list|()
function_decl|;
name|void
name|defaultSectionSize
parameter_list|()
function_decl|;
name|void
name|oneSectionSize
parameter_list|()
function_decl|;
name|void
name|hideAndInsert_data
parameter_list|()
function_decl|;
name|void
name|hideAndInsert
parameter_list|()
function_decl|;
name|void
name|removeSection
parameter_list|()
function_decl|;
name|void
name|preserveHiddenSectionWidth
parameter_list|()
function_decl|;
name|void
name|invisibleStretchLastSection
parameter_list|()
function_decl|;
name|void
name|noSectionsWithNegativeSize
parameter_list|()
function_decl|;
name|void
name|emptySectionSpan
parameter_list|()
function_decl|;
name|void
name|task236450_hidden_data
parameter_list|()
function_decl|;
name|void
name|task236450_hidden
parameter_list|()
function_decl|;
name|void
name|task248050_hideRow
parameter_list|()
function_decl|;
name|void
name|QTBUG6058_reset
parameter_list|()
function_decl|;
name|void
name|QTBUG7833_sectionClicked
parameter_list|()
function_decl|;
name|void
name|QTBUG8650_crashOnInsertSections
parameter_list|()
function_decl|;
name|void
name|QTBUG12268_hiddenMovedSectionSorting
parameter_list|()
function_decl|;
name|void
name|QTBUG14242_hideSectionAutoSize
parameter_list|()
function_decl|;
name|void
name|ensureNoIndexAtLength
parameter_list|()
function_decl|;
name|void
name|offsetConsistent
parameter_list|()
function_decl|;
name|void
name|initialSortOrderRole
parameter_list|()
function_decl|;
DECL|function|logicalIndexAtTest_data
name|void
name|logicalIndexAtTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|()
expr_stmt|;
block|}
DECL|function|visualIndexAtTest_data
name|void
name|visualIndexAtTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|()
expr_stmt|;
block|}
DECL|function|hideShowTest_data
name|void
name|hideShowTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|()
expr_stmt|;
block|}
DECL|function|swapSectionsTest_data
name|void
name|swapSectionsTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|()
expr_stmt|;
block|}
DECL|function|moveSectionTest_data
name|void
name|moveSectionTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|()
expr_stmt|;
block|}
DECL|function|defaultSizeTest_data
name|void
name|defaultSizeTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|()
expr_stmt|;
block|}
DECL|function|removeTest_data
name|void
name|removeTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|insertTest_data
name|void
name|insertTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|mixedTests_data
name|void
name|mixedTests_data
parameter_list|()
block|{
name|setupTestData
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|resizeToContentTest_data
name|void
name|resizeToContentTest_data
parameter_list|()
block|{
name|setupTestData
argument_list|()
expr_stmt|;
block|}
name|void
name|logicalIndexAtTest
parameter_list|()
function_decl|;
name|void
name|visualIndexAtTest
parameter_list|()
function_decl|;
name|void
name|hideShowTest
parameter_list|()
function_decl|;
name|void
name|swapSectionsTest
parameter_list|()
function_decl|;
name|void
name|moveSectionTest
parameter_list|()
function_decl|;
name|void
name|defaultSizeTest
parameter_list|()
function_decl|;
name|void
name|removeTest
parameter_list|()
function_decl|;
name|void
name|insertTest
parameter_list|()
function_decl|;
name|void
name|mixedTests
parameter_list|()
function_decl|;
name|void
name|resizeToContentTest
parameter_list|()
function_decl|;
name|void
name|testStreamWithHide
parameter_list|()
function_decl|;
name|void
name|testStylePosition
parameter_list|()
function_decl|;
name|void
name|sizeHintCrash
parameter_list|()
function_decl|;
protected|protected:
name|void
name|setupTestData
parameter_list|(
name|bool
name|use_reset_model
init|=
literal|false
parameter_list|)
function_decl|;
name|void
name|additionalInit
parameter_list|()
function_decl|;
name|void
name|calculateAndCheck
parameter_list|(
name|int
name|cppline
parameter_list|,
specifier|const
name|int
name|precalced_comparedata
index|[]
parameter_list|)
function_decl|;
DECL|member|topLevel
name|QWidget
modifier|*
name|topLevel
decl_stmt|;
DECL|member|view
name|QHeaderView
modifier|*
name|view
decl_stmt|;
DECL|member|model
name|QStandardItemModel
modifier|*
name|model
decl_stmt|;
DECL|member|m_tableview
name|QTableView
modifier|*
name|m_tableview
decl_stmt|;
DECL|member|m_using_reset_model
name|bool
name|m_using_reset_model
decl_stmt|;
DECL|member|timer
name|QElapsedTimer
name|timer
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|QtTestModel
class|class
name|QtTestModel
super|:
specifier|public
name|QAbstractTableModel
block|{
name|Q_OBJECT
public|public:
DECL|function|QtTestModel
name|QtTestModel
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractTableModel
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|cols
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|rows
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|wrongIndex
argument_list|(
literal|false
argument_list|)
block|{}
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|rows
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|cols
return|;
block|}
DECL|function|isEditable
name|bool
name|isEditable
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
literal|true
return|;
block|}
DECL|function|data
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|idx
parameter_list|,
name|int
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|idx
operator|.
name|row
argument_list|()
operator|<
literal|0
operator|||
name|idx
operator|.
name|column
argument_list|()
operator|<
literal|0
operator|||
name|idx
operator|.
name|column
argument_list|()
operator|>=
name|cols
operator|||
name|idx
operator|.
name|row
argument_list|()
operator|>=
name|rows
condition|)
block|{
name|wrongIndex
operator|=
literal|true
expr_stmt|;
name|qWarning
argument_list|(
literal|"Invalid modelIndex [%d,%d,%p]"
argument_list|,
name|idx
operator|.
name|row
argument_list|()
argument_list|,
name|idx
operator|.
name|column
argument_list|()
argument_list|,
name|idx
operator|.
name|internalPointer
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|QLatin1Char
argument_list|(
literal|'['
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|idx
operator|.
name|row
argument_list|()
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|','
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|idx
operator|.
name|column
argument_list|()
argument_list|)
operator|+
name|QLatin1String
argument_list|(
literal|",0]"
argument_list|)
return|;
block|}
DECL|function|insertOneColumn
name|void
name|insertOneColumn
parameter_list|(
name|int
name|col
parameter_list|)
block|{
name|beginInsertColumns
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|col
argument_list|,
name|col
argument_list|)
expr_stmt|;
operator|--
name|cols
expr_stmt|;
name|endInsertColumns
argument_list|()
expr_stmt|;
block|}
DECL|function|removeLastRow
name|void
name|removeLastRow
parameter_list|()
block|{
name|beginRemoveRows
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|rows
operator|-
literal|1
argument_list|,
name|rows
operator|-
literal|1
argument_list|)
expr_stmt|;
operator|--
name|rows
expr_stmt|;
name|endRemoveRows
argument_list|()
expr_stmt|;
block|}
DECL|function|removeAllRows
name|void
name|removeAllRows
parameter_list|()
block|{
name|beginRemoveRows
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
literal|0
argument_list|,
name|rows
operator|-
literal|1
argument_list|)
expr_stmt|;
name|rows
operator|=
literal|0
expr_stmt|;
name|endRemoveRows
argument_list|()
expr_stmt|;
block|}
DECL|function|removeOneColumn
name|void
name|removeOneColumn
parameter_list|(
name|int
name|col
parameter_list|)
block|{
name|beginRemoveColumns
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|col
argument_list|,
name|col
argument_list|)
expr_stmt|;
operator|--
name|cols
expr_stmt|;
name|endRemoveColumns
argument_list|()
expr_stmt|;
block|}
DECL|function|removeLastColumn
name|void
name|removeLastColumn
parameter_list|()
block|{
name|beginRemoveColumns
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|cols
operator|-
literal|1
argument_list|,
name|cols
operator|-
literal|1
argument_list|)
expr_stmt|;
operator|--
name|cols
expr_stmt|;
name|endRemoveColumns
argument_list|()
expr_stmt|;
block|}
DECL|function|removeAllColumns
name|void
name|removeAllColumns
parameter_list|()
block|{
name|beginRemoveColumns
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
literal|0
argument_list|,
name|cols
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cols
operator|=
literal|0
expr_stmt|;
name|endRemoveColumns
argument_list|()
expr_stmt|;
block|}
DECL|function|cleanup
name|void
name|cleanup
parameter_list|()
block|{
name|cols
operator|=
literal|3
expr_stmt|;
name|rows
operator|=
literal|3
expr_stmt|;
emit|emit
name|layoutChanged
argument_list|()
emit|;
block|}
DECL|member|cols
DECL|member|rows
name|int
name|cols
decl_stmt|,
name|rows
decl_stmt|;
DECL|member|wrongIndex
specifier|mutable
name|bool
name|wrongIndex
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QHeaderView
operator|::
name|getSetCheck
parameter_list|()
block|{
name|protected_QHeaderView
name|obj1
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
comment|// bool QHeaderView::highlightSections()
comment|// void QHeaderView::setHighlightSections(bool)
name|obj1
operator|.
name|setHighlightSections
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|highlightSections
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setHighlightSections
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|highlightSections
argument_list|()
argument_list|)
expr_stmt|;
comment|// bool QHeaderView::stretchLastSection()
comment|// void QHeaderView::setStretchLastSection(bool)
name|obj1
operator|.
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|stretchLastSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|stretchLastSection
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QHeaderView::defaultSectionSize()
comment|// void QHeaderView::setDefaultSectionSize(int)
name|obj1
operator|.
name|setDefaultSectionSize
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj1
operator|.
name|defaultSectionSize
argument_list|()
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setDefaultSectionSize
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|defaultSectionSize
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setDefaultSectionSize
argument_list|(
literal|99999
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|99999
argument_list|,
name|obj1
operator|.
name|defaultSectionSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QHeaderView::minimumSectionSize()
comment|// void QHeaderView::setMinimumSectionSize(int)
name|obj1
operator|.
name|setMinimumSectionSize
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj1
operator|.
name|minimumSectionSize
argument_list|()
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimumSectionSize
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|minimumSectionSize
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimumSectionSize
argument_list|(
literal|99999
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|99999
argument_list|,
name|obj1
operator|.
name|minimumSectionSize
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimumSectionSize
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj1
operator|.
name|minimumSectionSize
argument_list|()
operator|<
literal|100
argument_list|)
expr_stmt|;
comment|// int QHeaderView::offset()
comment|// void QHeaderView::setOffset(int)
name|obj1
operator|.
name|setOffset
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|offset
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setOffset
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MIN
argument_list|,
name|obj1
operator|.
name|offset
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setOffset
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MAX
argument_list|,
name|obj1
operator|.
name|offset
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QHeaderView
name|tst_QHeaderView
operator|::
name|tst_QHeaderView
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"Qt::SortOrder"
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~tst_QHeaderView
name|tst_QHeaderView
operator|::
name|~
name|tst_QHeaderView
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QHeaderView
operator|::
name|initTestCase
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//disable magic for WindowsCE
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|m_tableview
operator|=
operator|new
name|QTableView
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QHeaderView
operator|::
name|cleanupTestCase
parameter_list|()
block|{
operator|delete
name|m_tableview
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QHeaderView
operator|::
name|init
parameter_list|()
block|{
name|topLevel
operator|=
operator|new
name|QWidget
argument_list|()
expr_stmt|;
name|view
operator|=
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|,
name|topLevel
argument_list|)
expr_stmt|;
comment|// Some initial value tests before a model is added
name|QCOMPARE
argument_list|(
name|view
operator|->
name|length
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sizeHint
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSizeHint
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|/*     model = new QStandardItemModel(1, 1);     view->setModel(model);     //qDebug()<< view->count();     view->sizeHint();     */
name|int
name|rows
init|=
literal|4
decl_stmt|;
name|int
name|columns
init|=
literal|4
decl_stmt|;
name|model
operator|=
operator|new
name|QStandardItemModel
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|)
expr_stmt|;
comment|/*     for (int row = 0; row< rows; ++row) {         for (int column = 0; column< columns; ++column) {             QModelIndex index = model->index(row, column, QModelIndex());             model->setData(index, QVariant((row+1) * (column+1)));         }     }     */
name|QSignalSpy
name|spy
argument_list|(
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|sectionCountChanged
argument_list|(
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QHeaderView
operator|::
name|cleanup
parameter_list|()
block|{
name|m_tableview
operator|->
name|setUpdatesEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|view
operator|&&
name|view
operator|->
name|parent
argument_list|()
operator|!=
name|m_tableview
condition|)
operator|delete
name|view
expr_stmt|;
name|view
operator|=
literal|0
expr_stmt|;
operator|delete
name|model
expr_stmt|;
name|model
operator|=
literal|0
expr_stmt|;
operator|delete
name|topLevel
expr_stmt|;
name|topLevel
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noModel
name|void
name|tst_QHeaderView
operator|::
name|noModel
parameter_list|()
block|{
name|QHeaderView
name|emptyView
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|emptyView
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyModel
name|void
name|tst_QHeaderView
operator|::
name|emptyModel
parameter_list|()
block|{
name|QtTestModel
name|testmodel
decl_stmt|;
name|view
operator|->
name|setModel
argument_list|(
operator|&
name|testmodel
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testmodel
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|count
argument_list|()
argument_list|,
name|testmodel
operator|.
name|rows
argument_list|)
expr_stmt|;
name|view
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows
name|void
name|tst_QHeaderView
operator|::
name|removeRows
parameter_list|()
block|{
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|rows
operator|=
name|model
operator|.
name|cols
operator|=
literal|10
expr_stmt|;
name|QHeaderView
name|vertical
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QHeaderView
name|horizontal
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|vertical
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|horizontal
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|vertical
operator|.
name|show
argument_list|()
expr_stmt|;
name|horizontal
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vertical
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|horizontal
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|cols
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeLastRow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vertical
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|horizontal
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|cols
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeAllRows
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vertical
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|horizontal
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|cols
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeCols
name|void
name|tst_QHeaderView
operator|::
name|removeCols
parameter_list|()
block|{
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|rows
operator|=
name|model
operator|.
name|cols
operator|=
literal|10
expr_stmt|;
name|QHeaderView
name|vertical
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QHeaderView
name|horizontal
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|vertical
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|horizontal
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|vertical
operator|.
name|show
argument_list|()
expr_stmt|;
name|horizontal
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vertical
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|horizontal
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|cols
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeLastColumn
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vertical
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|horizontal
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|cols
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeAllColumns
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vertical
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|horizontal
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|cols
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|movable
name|void
name|tst_QHeaderView
operator|::
name|movable
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMovable
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionsMovable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMovable
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionsMovable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMovable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clickable
name|void
name|tst_QHeaderView
operator|::
name|clickable
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsClickable
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionsClickable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsClickable
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionsClickable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsClickable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hidden
name|void
name|tst_QHeaderView
operator|::
name|hidden
parameter_list|()
block|{
comment|//hideSection()& showSection call setSectionHidden
comment|// Test bad arguments
name|QCOMPARE
argument_list|(
name|view
operator|->
name|isSectionHidden
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|isSectionHidden
argument_list|(
name|view
operator|->
name|count
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|isSectionHidden
argument_list|(
literal|999999
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
name|view
operator|->
name|count
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|999999
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
name|view
operator|->
name|count
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|999999
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Hidden sections shouldn't have visual properties (except position)
name|int
name|pos
init|=
name|view
operator|->
name|defaultSectionSize
argument_list|()
decl_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionPosition
argument_list|(
literal|1
argument_list|)
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|view
operator|->
name|resizeSection
argument_list|(
literal|1
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionViewportPosition
argument_list|(
literal|1
argument_list|)
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|isSectionHidden
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
argument_list|,
name|view
operator|->
name|defaultSectionSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stretch
name|void
name|tst_QHeaderView
operator|::
name|stretch
parameter_list|()
block|{
comment|// Show before resize and setStrechLastSection
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QSize
name|viewSize
argument_list|(
literal|200
argument_list|,
literal|300
argument_list|)
decl_stmt|;
else|#
directive|else
name|QSize
name|viewSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
decl_stmt|;
endif|#
directive|endif
name|view
operator|->
name|resize
argument_list|(
name|viewSize
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|stretchLastSection
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|width
argument_list|()
argument_list|,
name|viewSize
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndexAt
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
operator|-
literal|5
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|3
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndexAt
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
operator|-
literal|5
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|stretchLastSection
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|oneSectionSize
name|void
name|tst_QHeaderView
operator|::
name|oneSectionSize
parameter_list|()
block|{
comment|//this ensures that if there is only one section, it gets a correct width (more than 0)
name|QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|cols
operator|=
literal|1
expr_stmt|;
name|model
operator|.
name|rows
operator|=
literal|1
expr_stmt|;
name|view
operator|.
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sectionSize_data
name|void
name|tst_QHeaderView
operator|::
name|sectionSize_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"boundsCheck"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"defaultSizes"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"initialDefaultSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"lastVisibleSectionSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"persistentSectionSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data set one"
argument_list|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|4
operator|<<
literal|9999
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|10
operator|<<
literal|30
operator|<<
literal|30
operator|)
operator|<<
literal|30
operator|<<
literal|300
operator|<<
literal|20
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sectionSize
name|void
name|tst_QHeaderView
operator|::
name|sectionSize
parameter_list|()
block|{
if|#
directive|if
name|defined
name|Q_OS_QNX
name|QSKIP
argument_list|(
literal|"The section size is dpi dependent on QNX"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|boundsCheck
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|defaultSizes
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|initialDefaultSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|lastVisibleSectionSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|persistentSectionSize
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|// We test on a device with doubled pixels. Therefore we need to specify
comment|// different boundaries.
name|initialDefaultSize
operator|=
name|qMax
argument_list|(
name|view
operator|->
name|minimumSectionSize
argument_list|()
argument_list|,
literal|30
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// bounds check
foreach|foreach
control|(
name|int
name|val
decl|,
name|boundsCheck
control|)
name|view
operator|->
name|sectionSize
argument_list|(
name|val
argument_list|)
expr_stmt|;
comment|// default size
name|QCOMPARE
argument_list|(
name|view
operator|->
name|defaultSectionSize
argument_list|()
argument_list|,
name|initialDefaultSize
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|int
name|def
decl|,
name|defaultSizes
control|)
block|{
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
name|def
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|defaultSectionSize
argument_list|()
argument_list|,
name|def
argument_list|)
expr_stmt|;
block|}
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
name|initialDefaultSize
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|s
init|=
literal|0
init|;
name|s
operator|<
name|view
operator|->
name|count
argument_list|()
condition|;
operator|++
name|s
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|s
argument_list|)
argument_list|,
name|initialDefaultSize
argument_list|)
expr_stmt|;
name|view
operator|->
name|doItemsLayout
argument_list|()
expr_stmt|;
comment|// stretch last section
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|int
name|lastSection
init|=
name|view
operator|->
name|count
argument_list|()
operator|-
literal|1
decl_stmt|;
comment|//test that when hiding the last column,
comment|//resizing the new last visible columns still works
name|view
operator|->
name|hideSection
argument_list|(
name|lastSection
argument_list|)
expr_stmt|;
name|view
operator|->
name|resizeSection
argument_list|(
name|lastSection
operator|-
literal|1
argument_list|,
name|lastVisibleSectionSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|lastSection
operator|-
literal|1
argument_list|)
argument_list|,
name|lastVisibleSectionSize
argument_list|)
expr_stmt|;
name|view
operator|->
name|showSection
argument_list|(
name|lastSection
argument_list|)
expr_stmt|;
comment|// turn off stretching
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|lastSection
argument_list|)
argument_list|,
name|initialDefaultSize
argument_list|)
expr_stmt|;
comment|// test persistence
name|int
name|sectionCount
init|=
name|view
operator|->
name|count
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sectionCount
condition|;
operator|++
name|i
control|)
name|view
operator|->
name|resizeSection
argument_list|(
name|i
argument_list|,
name|persistentSectionSize
argument_list|)
expr_stmt|;
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|cols
operator|=
name|sectionCount
operator|*
literal|2
expr_stmt|;
name|model
operator|.
name|rows
operator|=
name|sectionCount
operator|*
literal|2
expr_stmt|;
name|view
operator|->
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|sectionCount
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|j
argument_list|)
argument_list|,
name|persistentSectionSize
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
name|sectionCount
init|;
name|k
operator|<
name|view
operator|->
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|k
argument_list|)
argument_list|,
name|initialDefaultSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visualIndex
name|void
name|tst_QHeaderView
operator|::
name|visualIndex
parameter_list|()
block|{
comment|// Test bad arguments
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
literal|999999
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visualIndexAt_data
name|void
name|tst_QHeaderView
operator|::
name|visualIndexAt_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"hidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"from"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"to"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"coordinate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"visual"
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|coordinateList
decl_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_WINCE
name|coordinateList
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|31
operator|<<
literal|91
operator|<<
literal|99999
expr_stmt|;
else|#
directive|else
comment|// We test on a device with doubled pixels. Therefore we need to specify
comment|// different boundaries.
name|coordinateList
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|33
operator|<<
literal|97
operator|<<
literal|99999
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, no moved sections"
argument_list|)
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|coordinateList
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, moved sections"
argument_list|)
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|coordinateList
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hidden, no moved sections"
argument_list|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|coordinateList
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visualIndexAt
name|void
name|tst_QHeaderView
operator|::
name|visualIndexAt
parameter_list|()
block|{
if|#
directive|if
name|defined
name|Q_OS_QNX
name|QSKIP
argument_list|(
literal|"The section size is dpi dependent on QNX"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|hidden
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|from
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|to
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|coordinate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|visual
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hidden
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|view
operator|->
name|setSectionHidden
argument_list|(
name|hidden
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|from
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
name|view
operator|->
name|moveSection
argument_list|(
name|from
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|,
name|to
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|coordinate
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndexAt
argument_list|(
name|coordinate
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|)
argument_list|,
name|visual
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|length
name|void
name|tst_QHeaderView
operator|::
name|length
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QFont
name|font
argument_list|(
name|QLatin1String
argument_list|(
literal|"Tahoma"
argument_list|)
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|view
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
comment|//minimumSectionSize should be the size of the last section of the widget is not tall enough
name|int
name|length
init|=
name|view
operator|->
name|minimumSectionSize
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|->
name|count
argument_list|()
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|length
operator|+=
name|view
operator|->
name|sectionSize
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|length
operator|=
name|qMax
argument_list|(
name|length
argument_list|,
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|length
argument_list|,
name|view
operator|->
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|length
operator|!=
name|view
operator|->
name|length
argument_list|()
argument_list|)
expr_stmt|;
comment|// layoutChanged might mean rows have been removed
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|cols
operator|=
literal|10
expr_stmt|;
name|model
operator|.
name|rows
operator|=
literal|10
expr_stmt|;
name|view
operator|->
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|int
name|oldLength
init|=
name|view
operator|->
name|length
argument_list|()
decl_stmt|;
name|model
operator|.
name|cleanup
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rows
argument_list|,
name|view
operator|->
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|oldLength
operator|!=
name|view
operator|->
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|offset
name|void
name|tst_QHeaderView
operator|::
name|offset
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|view
operator|->
name|offset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setOffset
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|offset
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|view
operator|->
name|setOffset
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|offset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Test odd arguments
name|view
operator|->
name|setOffset
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sectionSizeHint
name|void
name|tst_QHeaderView
operator|::
name|sectionSizeHint
parameter_list|()
block|{
comment|// Test bad arguments
name|view
operator|->
name|sectionSizeHint
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|sectionSizeHint
argument_list|(
literal|99999
argument_list|)
expr_stmt|;
comment|// TODO how to test the return value?
block|}
end_function
begin_function
DECL|function|logicalIndex
name|void
name|tst_QHeaderView
operator|::
name|logicalIndex
parameter_list|()
block|{
comment|// Test bad arguments
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
literal|99999
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|logicalIndexAt
name|void
name|tst_QHeaderView
operator|::
name|logicalIndexAt
parameter_list|()
block|{
comment|// Test bad arguments
name|view
operator|->
name|logicalIndexAt
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|logicalIndexAt
argument_list|(
literal|99999
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// First item
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|-
literal|1
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Last item
name|int
name|last
init|=
name|view
operator|->
name|length
argument_list|()
operator|-
literal|1
decl_stmt|;
comment|//view->viewport()->height() - 10;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|last
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Not in widget
name|int
name|outofbounds
init|=
name|view
operator|->
name|length
argument_list|()
operator|+
literal|1
decl_stmt|;
comment|//view->viewport()->height() + 1;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|outofbounds
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// First item
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|-
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Last item
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|last
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swapSections
name|void
name|tst_QHeaderView
operator|::
name|swapSections
parameter_list|()
block|{
name|view
operator|->
name|swapSections
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|99999
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|1
argument_list|,
literal|99999
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|int
argument_list|>
name|logical
init|=
operator|(
name|QVector
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
decl_stmt|;
name|QSignalSpy
name|spy1
argument_list|(
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|sectionMoved
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMoved
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMoved
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMoved
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMoved
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|->
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|,
name|logical
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy1
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|logical
operator|=
operator|(
name|QVector
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|0
operator|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMoved
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|view
operator|->
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
name|j
argument_list|)
argument_list|,
name|logical
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy1
operator|.
name|count
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveSection_data
name|void
name|tst_QHeaderView
operator|::
name|moveSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"hidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"from"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"to"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|bool
argument_list|>
argument_list|>
argument_list|(
literal|"moved"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"logical"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"count"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad args, no hidden"
argument_list|)
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|99999
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|99999
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|bool
argument_list|>
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"good args, no hidden"
argument_list|)
operator|<<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|bool
argument_list|>
argument_list|()
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|3
operator|)
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hidden sections"
argument_list|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|bool
argument_list|>
argument_list|()
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|3
operator|)
operator|<<
literal|3
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveSection
name|void
name|tst_QHeaderView
operator|::
name|moveSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|hidden
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|from
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|to
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|bool
argument_list|>
argument_list|,
name|moved
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|logical
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|from
operator|.
name|count
argument_list|()
argument_list|,
name|to
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|from
operator|.
name|count
argument_list|()
argument_list|,
name|moved
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|count
argument_list|()
argument_list|,
name|logical
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy1
argument_list|(
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|sectionMoved
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMoved
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|h
init|=
literal|0
init|;
name|h
operator|<
name|hidden
operator|.
name|count
argument_list|()
condition|;
operator|++
name|h
control|)
name|view
operator|->
name|setSectionHidden
argument_list|(
name|hidden
operator|.
name|at
argument_list|(
name|h
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|from
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|view
operator|->
name|moveSection
argument_list|(
name|from
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|to
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsMoved
argument_list|()
argument_list|,
name|moved
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|view
operator|->
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
name|j
argument_list|)
argument_list|,
name|logical
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy1
operator|.
name|count
argument_list|()
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeAndMoveSection_data
name|void
name|tst_QHeaderView
operator|::
name|resizeAndMoveSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"logicalIndexes"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"sizes"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"logicalFrom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"logicalTo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resizeAndMove-1"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|20
operator|<<
literal|40
operator|)
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resizeAndMove-2"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|20
operator|<<
literal|60
operator|<<
literal|10
operator|<<
literal|80
operator|)
operator|<<
literal|0
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resizeAndMove-3"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|100
operator|<<
literal|60
operator|<<
literal|40
operator|<<
literal|10
operator|)
operator|<<
literal|0
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resizeAndMove-4"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|80
operator|<<
literal|30
operator|)
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"resizeAndMove-5"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|100
operator|<<
literal|200
operator|)
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeAndMoveSection
name|void
name|tst_QHeaderView
operator|::
name|resizeAndMoveSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|logicalIndexes
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|sizes
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|logicalFrom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|logicalTo
argument_list|)
expr_stmt|;
comment|// Save old visual indexes and sizes
name|IntList
name|oldVisualIndexes
decl_stmt|;
name|IntList
name|oldSizes
decl_stmt|;
foreach|foreach
control|(
name|int
name|logical
decl|,
name|logicalIndexes
control|)
block|{
name|oldVisualIndexes
operator|.
name|append
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
name|logical
argument_list|)
argument_list|)
expr_stmt|;
name|oldSizes
operator|.
name|append
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|logical
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Resize sections
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|logicalIndexes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|logical
init|=
name|logicalIndexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|view
operator|->
name|resizeSection
argument_list|(
name|logical
argument_list|,
name|sizes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Move sections
name|int
name|visualFrom
init|=
name|view
operator|->
name|visualIndex
argument_list|(
name|logicalFrom
argument_list|)
decl_stmt|;
name|int
name|visualTo
init|=
name|view
operator|->
name|visualIndex
argument_list|(
name|logicalTo
argument_list|)
decl_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
name|visualFrom
argument_list|,
name|visualTo
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
name|logicalFrom
argument_list|)
argument_list|,
name|visualTo
argument_list|)
expr_stmt|;
comment|// Check that sizes are still correct
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|logicalIndexes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|logical
init|=
name|logicalIndexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|logical
argument_list|)
argument_list|,
name|sizes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Move sections back
name|view
operator|->
name|moveSection
argument_list|(
name|visualTo
argument_list|,
name|visualFrom
argument_list|)
expr_stmt|;
comment|// Check that sizes are still correct
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|logicalIndexes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|logical
init|=
name|logicalIndexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|logical
argument_list|)
argument_list|,
name|sizes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Put everything back as it was
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|logicalIndexes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|int
name|logical
init|=
name|logicalIndexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|view
operator|->
name|resizeSection
argument_list|(
name|logical
argument_list|,
name|oldSizes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
name|logical
argument_list|)
argument_list|,
name|oldVisualIndexes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|resizeHiddenSection_data
name|void
name|tst_QHeaderView
operator|::
name|resizeHiddenSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"section"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"initialSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"finalSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"section 0 resize 50 to 20"
argument_list|)
operator|<<
literal|0
operator|<<
literal|50
operator|<<
literal|20
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"section 1 resize 50 to 20"
argument_list|)
operator|<<
literal|1
operator|<<
literal|50
operator|<<
literal|20
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"section 2 resize 50 to 20"
argument_list|)
operator|<<
literal|2
operator|<<
literal|50
operator|<<
literal|20
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"section 3 resize 50 to 20"
argument_list|)
operator|<<
literal|3
operator|<<
literal|50
operator|<<
literal|20
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeHiddenSection
name|void
name|tst_QHeaderView
operator|::
name|resizeHiddenSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|section
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|initialSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|finalSize
argument_list|)
expr_stmt|;
name|view
operator|->
name|resizeSection
argument_list|(
name|section
argument_list|,
name|initialSize
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
name|section
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|section
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|resizeSection
argument_list|(
name|section
argument_list|,
name|finalSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|section
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
name|section
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|section
argument_list|)
argument_list|,
name|finalSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeAndInsertSection_data
name|void
name|tst_QHeaderView
operator|::
name|resizeAndInsertSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"section"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"insert"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"compare"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"section 0 size 50 insert 0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|50
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|50
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"section 1 size 50 insert 1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|50
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|50
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"section 1 size 50 insert 0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|50
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|50
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeAndInsertSection
name|void
name|tst_QHeaderView
operator|::
name|resizeAndInsertSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|section
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|insert
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|compare
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|resizeSection
argument_list|(
name|section
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|section
argument_list|)
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|model
operator|->
name|insertRow
argument_list|(
name|insert
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|compare
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeWithResizeModes_data
name|void
name|tst_QHeaderView
operator|::
name|resizeWithResizeModes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"sections"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"modes"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"stretch first section"
argument_list|)
operator|<<
literal|600
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|100
operator|<<
literal|100
operator|<<
literal|100
operator|<<
literal|100
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|(
operator|(
name|int
operator|)
name|QHeaderView
operator|::
name|Stretch
operator|)
operator|<<
operator|(
operator|(
name|int
operator|)
name|QHeaderView
operator|::
name|Interactive
operator|)
operator|<<
operator|(
operator|(
name|int
operator|)
name|QHeaderView
operator|::
name|Interactive
operator|)
operator|<<
operator|(
operator|(
name|int
operator|)
name|QHeaderView
operator|::
name|Interactive
operator|)
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|300
operator|<<
literal|100
operator|<<
literal|100
operator|<<
literal|100
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeWithResizeModes
name|void
name|tst_QHeaderView
operator|::
name|resizeWithResizeModes
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|sections
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|modes
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sections
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|view
operator|->
name|resizeSection
argument_list|(
name|i
argument_list|,
name|sections
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|i
argument_list|,
operator|(
name|QHeaderView
operator|::
name|ResizeMode
operator|)
name|modes
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|resize
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|expected
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|j
argument_list|)
argument_list|,
name|expected
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveAndInsertSection_data
name|void
name|tst_QHeaderView
operator|::
name|moveAndInsertSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"from"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"to"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"insert"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"mapping"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"move from 1 to 3, insert 0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|2
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveAndInsertSection
name|void
name|tst_QHeaderView
operator|::
name|moveAndInsertSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|from
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|to
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|insert
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
name|from
argument_list|,
name|to
argument_list|)
expr_stmt|;
name|model
operator|->
name|insertRow
argument_list|(
name|insert
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mapping
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|,
name|mapping
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeMode
name|void
name|tst_QHeaderView
operator|::
name|resizeMode
parameter_list|()
block|{
comment|// resizeMode must not be called with an invalid index
name|int
name|last
init|=
name|view
operator|->
name|count
argument_list|()
operator|-
literal|1
decl_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
name|last
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
name|last
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Custom
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
name|last
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Custom
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Custom
argument_list|)
expr_stmt|;
comment|// test when sections have been moved
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
operator|(
name|view
operator|->
name|count
argument_list|()
operator|-
literal|1
operator|)
condition|;
operator|++
name|i
control|)
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|i
argument_list|,
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
name|int
name|logicalIndex
init|=
name|view
operator|->
name|count
argument_list|()
operator|/
literal|2
decl_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|logicalIndex
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
name|logicalIndex
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
operator|(
name|view
operator|->
name|count
argument_list|()
operator|-
literal|1
operator|)
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|==
name|logicalIndex
condition|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
name|i
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionResizeMode
argument_list|(
name|i
argument_list|)
argument_list|,
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|resizeSection_data
name|void
name|tst_QHeaderView
operator|::
name|resizeSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"initial"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"logical"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"mode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"resized"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad args"
argument_list|)
operator|<<
literal|100
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|99999
operator|<<
literal|99999
operator|<<
literal|4
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|99999
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
name|int
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
operator|<<
name|int
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
operator|<<
name|int
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
operator|<<
name|int
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
operator|)
operator|<<
literal|0
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeSection
name|void
name|tst_QHeaderView
operator|::
name|resizeSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|initial
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|logical
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|resized
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|view
operator|->
name|resize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionsMovable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|logical
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
if|if
condition|(
name|logical
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|>
operator|-
literal|1
operator|&&
name|logical
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|<
name|view
operator|->
name|count
argument_list|()
condition|)
comment|// for now
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|logical
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
operator|(
name|QHeaderView
operator|::
name|ResizeMode
operator|)
name|mode
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|logical
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
name|view
operator|->
name|resizeSection
argument_list|(
name|logical
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|,
name|initial
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|sectionResized
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|logical
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
name|view
operator|->
name|resizeSection
argument_list|(
name|logical
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|,
name|size
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
name|resized
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|l
init|=
literal|0
init|;
name|l
operator|<
name|logical
operator|.
name|count
argument_list|()
condition|;
operator|++
name|l
control|)
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
name|logical
operator|.
name|at
argument_list|(
name|l
argument_list|)
argument_list|)
argument_list|,
name|expected
operator|.
name|at
argument_list|(
name|l
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|highlightSections
name|void
name|tst_QHeaderView
operator|::
name|highlightSections
parameter_list|()
block|{
name|view
operator|->
name|setHighlightSections
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|highlightSections
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|setHighlightSections
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|highlightSections
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showSortIndicator
name|void
name|tst_QHeaderView
operator|::
name|showSortIndicator
parameter_list|()
block|{
name|view
operator|->
name|setSortIndicatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|isSortIndicatorShown
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sortIndicatorOrder
argument_list|()
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSortIndicator
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sortIndicatorOrder
argument_list|()
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSortIndicator
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sortIndicatorOrder
argument_list|()
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSortIndicatorShown
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|isSortIndicatorShown
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSortIndicator
argument_list|(
literal|999999
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
comment|// Don't segfault baby :)
name|view
operator|->
name|setSortIndicatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSortIndicator
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
comment|// Don't assert baby :)
block|}
end_function
begin_function
DECL|function|sortIndicatorTracking
name|void
name|tst_QHeaderView
operator|::
name|sortIndicatorTracking
parameter_list|()
block|{
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|rows
operator|=
name|model
operator|.
name|cols
operator|=
literal|10
expr_stmt|;
name|QHeaderView
name|hv
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|hv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|hv
operator|.
name|show
argument_list|()
expr_stmt|;
name|hv
operator|.
name|setSortIndicatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|hv
operator|.
name|setSortIndicator
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeOneColumn
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeOneColumn
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertOneColumn
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertOneColumn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeOneColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeOneColumn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|sortIndicatorSection
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeAndInsertRow
name|void
name|tst_QHeaderView
operator|::
name|removeAndInsertRow
parameter_list|()
block|{
comment|// Check if logicalIndex returns the correct value after we have removed a row
comment|// we might as well te
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|i
argument_list|,
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
while|while
condition|(
name|model
operator|->
name|removeRow
argument_list|(
literal|0
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|i
argument_list|,
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|int
name|pass
init|=
literal|0
decl_stmt|;
for|for
control|(
name|pass
operator|=
literal|0
init|;
name|pass
operator|<
literal|5
condition|;
name|pass
operator|++
control|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|i
argument_list|,
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|model
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
while|while
condition|(
name|model
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|i
argument_list|,
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|pass
operator|=
literal|0
init|;
name|pass
operator|<
literal|3
condition|;
name|pass
operator|++
control|)
block|{
name|model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|i
argument_list|,
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|pass
operator|=
literal|0
init|;
name|pass
operator|<
literal|3
condition|;
name|pass
operator|++
control|)
block|{
name|model
operator|->
name|insertRows
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|i
argument_list|,
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Insert at end
for|for
control|(
name|pass
operator|=
literal|0
init|;
name|pass
operator|<
literal|3
condition|;
name|pass
operator|++
control|)
block|{
name|int
name|rowCount
init|=
name|model
operator|->
name|rowCount
argument_list|()
decl_stmt|;
name|model
operator|->
name|insertRows
argument_list|(
name|rowCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rowCount
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|i
argument_list|,
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|unhideSection
name|void
name|tst_QHeaderView
operator|::
name|unhideSection
parameter_list|()
block|{
comment|// You should not necessarily expect the same size back again, so the best test we can do is to test if it is larger than 0 after a unhide.
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsHidden
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionsHidden
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testEvent
name|void
name|tst_QHeaderView
operator|::
name|testEvent
parameter_list|()
block|{
name|protected_QHeaderView
name|x
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|x
operator|.
name|testEvent
argument_list|()
expr_stmt|;
name|protected_QHeaderView
name|y
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|y
operator|.
name|testEvent
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testEvent
name|void
name|protected_QHeaderView
operator|::
name|testEvent
parameter_list|()
block|{
comment|// No crashy please
name|QHoverEvent
name|enterEvent
argument_list|(
name|QEvent
operator|::
name|HoverEnter
argument_list|,
name|QPoint
argument_list|()
argument_list|,
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|event
argument_list|(
operator|&
name|enterEvent
argument_list|)
expr_stmt|;
name|QHoverEvent
name|eventLeave
argument_list|(
name|QEvent
operator|::
name|HoverLeave
argument_list|,
name|QPoint
argument_list|()
argument_list|,
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|event
argument_list|(
operator|&
name|eventLeave
argument_list|)
expr_stmt|;
name|QHoverEvent
name|eventMove
argument_list|(
name|QEvent
operator|::
name|HoverMove
argument_list|,
name|QPoint
argument_list|()
argument_list|,
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|event
argument_list|(
operator|&
name|eventMove
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|headerDataChanged
name|void
name|tst_QHeaderView
operator|::
name|headerDataChanged
parameter_list|()
block|{
comment|// This shouldn't asserver because view is Vertical
name|view
operator|->
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
if|#
directive|if
literal|0
comment|// This will assert
block|view->headerDataChanged(Qt::Vertical, -1, -1);
endif|#
directive|endif
comment|// No crashing please
name|view
operator|->
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|headerDataChanged
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentChanged
name|void
name|tst_QHeaderView
operator|::
name|currentChanged
parameter_list|()
block|{
name|view
operator|->
name|setCurrentIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|horizontalOffset
name|void
name|tst_QHeaderView
operator|::
name|horizontalOffset
parameter_list|()
block|{
name|protected_QHeaderView
name|x
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|x
operator|.
name|testhorizontalOffset
argument_list|()
expr_stmt|;
name|protected_QHeaderView
name|y
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|y
operator|.
name|testhorizontalOffset
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|verticalOffset
name|void
name|tst_QHeaderView
operator|::
name|verticalOffset
parameter_list|()
block|{
name|protected_QHeaderView
name|x
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|x
operator|.
name|testverticalOffset
argument_list|()
expr_stmt|;
name|protected_QHeaderView
name|y
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|y
operator|.
name|testverticalOffset
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testhorizontalOffset
name|void
name|protected_QHeaderView
operator|::
name|testhorizontalOffset
parameter_list|()
block|{
if|if
condition|(
name|orientation
argument_list|()
operator|==
name|Qt
operator|::
name|Horizontal
condition|)
block|{
name|QCOMPARE
argument_list|(
name|horizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|setOffset
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|horizontalOffset
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
else|else
name|QCOMPARE
argument_list|(
name|horizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testverticalOffset
name|void
name|protected_QHeaderView
operator|::
name|testverticalOffset
parameter_list|()
block|{
if|if
condition|(
name|orientation
argument_list|()
operator|==
name|Qt
operator|::
name|Vertical
condition|)
block|{
name|QCOMPARE
argument_list|(
name|verticalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|setOffset
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|verticalOffset
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
else|else
name|QCOMPARE
argument_list|(
name|verticalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stretchSectionCount
name|void
name|tst_QHeaderView
operator|::
name|stretchSectionCount
parameter_list|()
block|{
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|stretchSectionCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|stretchSectionCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
literal|0
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|stretchSectionCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hiddenSectionCount
name|void
name|tst_QHeaderView
operator|::
name|hiddenSectionCount
parameter_list|()
block|{
name|model
operator|->
name|clear
argument_list|()
expr_stmt|;
name|model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// Hide every other one
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
name|view
operator|->
name|setSectionHidden
argument_list|(
name|i
argument_list|,
operator|(
name|i
operator|&
literal|1
operator|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// Remove some rows and make sure they are now still counted
name|model
operator|->
name|removeRow
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|model
operator|->
name|removeRow
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|model
operator|->
name|removeRow
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|model
operator|->
name|removeRow
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|count
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|model
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|count
argument_list|()
operator|>=
name|view
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusPolicy
name|void
name|tst_QHeaderView
operator|::
name|focusPolicy
parameter_list|()
block|{
name|QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|focusPolicy
argument_list|()
argument_list|,
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|QTreeWidget
name|widget
decl_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|header
argument_list|()
operator|->
name|focusPolicy
argument_list|()
argument_list|,
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|focusProxy
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|header
argument_list|()
operator|->
name|focusProxy
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|header
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setFocus
argument_list|(
name|Qt
operator|::
name|OtherFocusReason
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|widget
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|header
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|widget
operator|.
name|clearFocus
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|widget
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|header
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
operator|&
name|widget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|header
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SimpleModel
class|class
name|SimpleModel
super|:
specifier|public
name|QAbstractItemModel
block|{
name|Q_OBJECT
public|public:
DECL|function|SimpleModel
name|SimpleModel
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractItemModel
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_col_count
argument_list|(
literal|3
argument_list|)
block|{}
DECL|function|parent
name|QModelIndex
name|parent
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
comment|/*child*/
parameter_list|)
specifier|const
block|{
return|return
name|QModelIndex
argument_list|()
return|;
block|}
DECL|function|index
name|QModelIndex
name|index
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|column
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
name|hasIndex
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|parent
argument_list|)
condition|?
name|createIndex
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
else|:
name|QModelIndex
argument_list|()
return|;
block|}
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
comment|/* parent */
parameter_list|)
specifier|const
block|{
return|return
literal|8
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
comment|/*parent= QModelIndex()*/
parameter_list|)
specifier|const
block|{
return|return
name|m_col_count
return|;
block|}
DECL|function|data
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|,
name|int
name|role
parameter_list|)
specifier|const
block|{
if|if
condition|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
condition|)
block|{
return|return
name|QVariant
argument_list|()
return|;
block|}
if|if
condition|(
name|role
operator|==
name|Qt
operator|::
name|DisplayRole
condition|)
block|{
return|return
name|QString
operator|::
name|number
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|','
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|)
return|;
block|}
return|return
name|QVariant
argument_list|()
return|;
block|}
DECL|function|setColumnCount
name|void
name|setColumnCount
parameter_list|(
name|int
name|c
parameter_list|)
block|{
name|m_col_count
operator|=
name|c
expr_stmt|;
block|}
private|private:
DECL|member|m_col_count
name|int
name|m_col_count
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|moveSectionAndReset
name|void
name|tst_QHeaderView
operator|::
name|moveSectionAndReset
parameter_list|()
block|{
name|SimpleModel
name|m
decl_stmt|;
name|QHeaderView
name|v
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|v
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|int
name|cc
init|=
literal|2
decl_stmt|;
for|for
control|(
name|cc
operator|=
literal|2
init|;
name|cc
operator|<
literal|4
condition|;
operator|++
name|cc
control|)
block|{
name|m
operator|.
name|setColumnCount
argument_list|(
name|cc
argument_list|)
expr_stmt|;
name|int
name|movefrom
init|=
literal|0
decl_stmt|;
name|int
name|moveto
decl_stmt|;
for|for
control|(
name|moveto
operator|=
literal|1
init|;
name|moveto
operator|<
name|cc
condition|;
operator|++
name|moveto
control|)
block|{
name|v
operator|.
name|moveSection
argument_list|(
name|movefrom
argument_list|,
name|moveto
argument_list|)
expr_stmt|;
name|m
operator|.
name|setColumnCount
argument_list|(
name|cc
operator|-
literal|1
argument_list|)
expr_stmt|;
name|v
operator|.
name|reset
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cc
operator|-
literal|1
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|v
operator|.
name|logicalIndex
argument_list|(
name|v
operator|.
name|visualIndex
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|moveSectionAndRemove
name|void
name|tst_QHeaderView
operator|::
name|moveSectionAndRemove
parameter_list|()
block|{
name|QStandardItemModel
name|m
decl_stmt|;
name|QHeaderView
name|v
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|v
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|v
operator|.
name|model
argument_list|()
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|v
operator|.
name|moveSection
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|v
operator|.
name|model
argument_list|()
operator|->
name|removeColumns
argument_list|(
literal|0
argument_list|,
name|v
operator|.
name|model
argument_list|()
operator|->
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|saveRestore
name|void
name|tst_QHeaderView
operator|::
name|saveRestore
parameter_list|()
block|{
name|SimpleModel
name|m
decl_stmt|;
name|QHeaderView
name|h1
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|h1
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|h1
operator|.
name|swapSections
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|h1
operator|.
name|resizeSection
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|h1
operator|.
name|setSortIndicatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|h1
operator|.
name|setSortIndicator
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QByteArray
name|s1
init|=
name|h1
operator|.
name|saveState
argument_list|()
decl_stmt|;
name|QHeaderView
name|h2
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|h2
argument_list|,
name|SIGNAL
argument_list|(
name|sortIndicatorChanged
argument_list|(
name|int
argument_list|,
name|Qt
operator|::
name|SortOrder
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|h2
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|h2
operator|.
name|restoreState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|logicalIndex
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|logicalIndex
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|sectionSize
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|sortIndicatorOrder
argument_list|()
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|isSortIndicatorShown
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QByteArray
name|s2
init|=
name|h2
operator|.
name|saveState
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s1
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|h2
operator|.
name|restoreState
argument_list|(
name|QByteArrayLiteral
argument_list|(
literal|"Garbage"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// QTBUG-40462
comment|// Setting from Qt4, where information about multiple sections were grouped together in one
comment|// sectionItem object
name|QByteArray
name|settings_qt4
init|=
name|QByteArray
operator|::
name|fromHex
argument_list|(
literal|"000000ff00000000000000010000000100000000010000000000000000000000000000"
literal|"0000000003e80000000a0101000100000000000000000000000064ffffffff00000081"
literal|"0000000000000001000003e80000000a00000000"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|h2
operator|.
name|restoreState
argument_list|(
name|settings_qt4
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|sectionItemsLengthTotal
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|h2
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|sectionItemsLengthTotal
operator|+=
name|h2
operator|.
name|sectionSize
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sectionItemsLengthTotal
argument_list|,
name|h2
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
comment|// Buggy setting where sum(sectionItems) != length. Check false is returned and this corrupted
comment|// state isn't restored
name|QByteArray
name|settings_buggy_length
init|=
name|QByteArray
operator|::
name|fromHex
argument_list|(
literal|"000000ff000000000000000100000000000000050100000000000000000000000a4000"
literal|"000000010000000600000258000000fb0000000a010100010000000000000000000000"
literal|"0064ffffffff00000081000000000000000a000000d30000000100000000000000c800"
literal|"000001000000000000008000000001000000000000005c00000001000000000000003c"
literal|"0000000100000000000002580000000100000000000000000000000100000000000002"
literal|"580000000100000000000002580000000100000000000003c000000001000000000000"
literal|"03e8"
argument_list|)
decl_stmt|;
name|int
name|old_length
init|=
name|h2
operator|.
name|length
argument_list|()
decl_stmt|;
name|QByteArray
name|old_state
init|=
name|h2
operator|.
name|saveState
argument_list|()
decl_stmt|;
comment|// Check setting is correctly recognized as corrupted
name|QVERIFY
argument_list|(
operator|!
name|h2
operator|.
name|restoreState
argument_list|(
name|settings_buggy_length
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check nothing has been actually restored
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|length
argument_list|()
argument_list|,
name|old_length
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h2
operator|.
name|saveState
argument_list|()
argument_list|,
name|old_state
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultSectionSizeTest
name|void
name|tst_QHeaderView
operator|::
name|defaultSectionSizeTest
parameter_list|()
block|{
comment|// Setup
name|QTableView
name|qtv
decl_stmt|;
name|QHeaderView
modifier|*
name|hv
init|=
name|qtv
operator|.
name|verticalHeader
argument_list|()
decl_stmt|;
name|hv
operator|->
name|setDefaultSectionSize
argument_list|(
literal|99
argument_list|)
expr_stmt|;
comment|// Set it to a value different from defaultSize.
name|QStandardItemModel
name|amodel
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|qtv
operator|.
name|setModel
argument_list|(
operator|&
name|amodel
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|->
name|visualIndexAt
argument_list|(
literal|50
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//<= also make sure that indexes are calculated
name|hv
operator|->
name|setDefaultSectionSize
argument_list|(
literal|40
argument_list|)
expr_stmt|;
comment|// Set it to a value different from defaultSize.
name|QCOMPARE
argument_list|(
name|hv
operator|->
name|visualIndexAt
argument_list|(
literal|50
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
specifier|const
name|int
name|defaultSize
init|=
literal|26
decl_stmt|;
name|hv
operator|->
name|setDefaultSectionSize
argument_list|(
name|defaultSize
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// Set it to a value different from defaultSize.
comment|// no hidden Sections
name|hv
operator|->
name|resizeSection
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|hv
operator|->
name|setDefaultSectionSize
argument_list|(
name|defaultSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|->
name|sectionSize
argument_list|(
literal|1
argument_list|)
argument_list|,
name|defaultSize
argument_list|)
expr_stmt|;
comment|// with hidden sections
name|hv
operator|->
name|resizeSection
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|hv
operator|->
name|hideSection
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|hv
operator|->
name|setDefaultSectionSize
argument_list|(
name|defaultSize
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|hv
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|==
name|defaultSize
argument_list|)
expr_stmt|;
comment|// trivial case.
name|QVERIFY
argument_list|(
name|hv
operator|->
name|sectionSize
argument_list|(
literal|1
argument_list|)
operator|==
name|defaultSize
argument_list|)
expr_stmt|;
comment|// just sized 0. Now it should be 10
name|QVERIFY
argument_list|(
name|hv
operator|->
name|sectionSize
argument_list|(
literal|2
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
comment|// section is hidden. It should not be resized.
block|}
end_function
begin_class
DECL|class|TestHeaderViewStyle
class|class
name|TestHeaderViewStyle
super|:
specifier|public
name|QProxyStyle
block|{
public|public:
DECL|function|TestHeaderViewStyle
name|TestHeaderViewStyle
parameter_list|()
member_init_list|:
name|horizontalSectionSize
argument_list|(
literal|100
argument_list|)
block|{}
name|int
name|pixelMetric
parameter_list|(
name|PixelMetric
name|metric
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
init|=
literal|0
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|{
if|if
condition|(
name|metric
operator|==
name|QStyle
operator|::
name|PM_HeaderDefaultSectionSizeHorizontal
condition|)
return|return
name|horizontalSectionSize
return|;
else|else
return|return
name|QProxyStyle
operator|::
name|pixelMetric
argument_list|(
name|metric
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
return|;
block|}
DECL|member|horizontalSectionSize
name|int
name|horizontalSectionSize
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|defaultSectionSizeTestStyles
name|void
name|tst_QHeaderView
operator|::
name|defaultSectionSizeTestStyles
parameter_list|()
block|{
name|TestHeaderViewStyle
name|style1
decl_stmt|;
name|TestHeaderViewStyle
name|style2
decl_stmt|;
name|style1
operator|.
name|horizontalSectionSize
operator|=
literal|100
expr_stmt|;
name|style2
operator|.
name|horizontalSectionSize
operator|=
literal|200
expr_stmt|;
name|QHeaderView
name|hv
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|hv
operator|.
name|setStyle
argument_list|(
operator|&
name|style1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
name|style1
operator|.
name|horizontalSectionSize
argument_list|)
expr_stmt|;
name|hv
operator|.
name|setStyle
argument_list|(
operator|&
name|style2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
name|style2
operator|.
name|horizontalSectionSize
argument_list|)
expr_stmt|;
name|hv
operator|.
name|setDefaultSectionSize
argument_list|(
literal|70
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|hv
operator|.
name|setStyle
argument_list|(
operator|&
name|style1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|hv
operator|.
name|resetDefaultSectionSize
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
name|style1
operator|.
name|horizontalSectionSize
argument_list|)
expr_stmt|;
name|hv
operator|.
name|setStyle
argument_list|(
operator|&
name|style2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
name|style2
operator|.
name|horizontalSectionSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultAlignment_data
name|void
name|tst_QHeaderView
operator|::
name|defaultAlignment_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"initial"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"alignment"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal right aligned"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignCenter
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignRight
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal left aligned"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignCenter
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignLeft
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical right aligned"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignRight
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical left aligned"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignVCenter
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AlignLeft
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultAlignment
name|void
name|tst_QHeaderView
operator|::
name|defaultAlignment
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|initial
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|alignment
argument_list|)
expr_stmt|;
name|SimpleModel
name|m
decl_stmt|;
name|QHeaderView
name|header
argument_list|(
operator|(
name|Qt
operator|::
name|Orientation
operator|)
name|direction
argument_list|)
decl_stmt|;
name|header
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|header
operator|.
name|defaultAlignment
argument_list|()
argument_list|,
operator|(
name|Qt
operator|::
name|Alignment
operator|)
name|initial
argument_list|)
expr_stmt|;
name|header
operator|.
name|setDefaultAlignment
argument_list|(
operator|(
name|Qt
operator|::
name|Alignment
operator|)
name|alignment
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|header
operator|.
name|defaultAlignment
argument_list|()
argument_list|,
operator|(
name|Qt
operator|::
name|Alignment
operator|)
name|alignment
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|globalResizeMode_data
name|void
name|tst_QHeaderView
operator|::
name|globalResizeMode_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"mode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"insert"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal ResizeToContents 0"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
name|int
argument_list|(
name|QHeaderView
operator|::
name|ResizeToContents
argument_list|)
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|globalResizeMode
name|void
name|tst_QHeaderView
operator|::
name|globalResizeMode
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|insert
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|m
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QHeaderView
name|h
argument_list|(
operator|(
name|Qt
operator|::
name|Orientation
operator|)
name|direction
argument_list|)
decl_stmt|;
name|h
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|h
operator|.
name|setSectionResizeMode
argument_list|(
operator|(
name|QHeaderView
operator|::
name|ResizeMode
operator|)
name|mode
argument_list|)
expr_stmt|;
name|m
operator|.
name|insertRow
argument_list|(
name|insert
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|h
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|h
operator|.
name|sectionResizeMode
argument_list|(
name|i
argument_list|)
argument_list|,
operator|(
name|QHeaderView
operator|::
name|ResizeMode
operator|)
name|mode
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sectionPressedSignal_data
name|void
name|tst_QHeaderView
operator|::
name|sectionPressedSignal_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"clickable"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"count"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal unclickable 0"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
literal|false
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal clickable 1"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
literal|true
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sectionPressedSignal
name|void
name|tst_QHeaderView
operator|::
name|sectionPressedSignal
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|clickable
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|m
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QHeaderView
name|h
argument_list|(
operator|(
name|Qt
operator|::
name|Orientation
operator|)
name|direction
argument_list|)
decl_stmt|;
name|h
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|h
operator|.
name|show
argument_list|()
expr_stmt|;
name|h
operator|.
name|setSectionsClickable
argument_list|(
name|clickable
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|h
argument_list|,
name|SIGNAL
argument_list|(
name|sectionPressed
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|h
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sectionClickedSignal
name|void
name|tst_QHeaderView
operator|::
name|sectionClickedSignal
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|clickable
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|m
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QHeaderView
name|h
argument_list|(
operator|(
name|Qt
operator|::
name|Orientation
operator|)
name|direction
argument_list|)
decl_stmt|;
name|h
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|h
operator|.
name|show
argument_list|()
expr_stmt|;
name|h
operator|.
name|setSectionsClickable
argument_list|(
name|clickable
argument_list|)
expr_stmt|;
name|h
operator|.
name|setSortIndicatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|h
argument_list|,
name|SIGNAL
argument_list|(
name|sectionClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy2
argument_list|(
operator|&
name|h
argument_list|,
name|SIGNAL
argument_list|(
name|sortIndicatorChanged
argument_list|(
name|int
argument_list|,
name|Qt
operator|::
name|SortOrder
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy2
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|h
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy2
operator|.
name|count
argument_list|()
argument_list|,
name|count
argument_list|)
expr_stmt|;
comment|//now let's try with the sort indicator hidden (the result should be the same
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|spy2
operator|.
name|clear
argument_list|()
expr_stmt|;
name|h
operator|.
name|setSortIndicatorShown
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|h
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy2
operator|.
name|count
argument_list|()
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultSectionSize_data
name|void
name|tst_QHeaderView
operator|::
name|defaultSectionSize_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"oldDefaultSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"newDefaultSize"
argument_list|)
expr_stmt|;
comment|//QTest::newRow("horizontal,-5")<< int(Qt::Horizontal)<< 100<< -5;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal, 0"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
literal|100
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal, 5"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
literal|100
operator|<<
literal|5
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal,25"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
literal|100
operator|<<
literal|5
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultSectionSize
name|void
name|tst_QHeaderView
operator|::
name|defaultSectionSize
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|oldDefaultSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|newDefaultSize
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|m
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QHeaderView
name|h
argument_list|(
operator|(
name|Qt
operator|::
name|Orientation
operator|)
name|direction
argument_list|)
decl_stmt|;
name|h
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
name|oldDefaultSize
argument_list|)
expr_stmt|;
name|h
operator|.
name|setDefaultSectionSize
argument_list|(
name|newDefaultSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|h
operator|.
name|defaultSectionSize
argument_list|()
argument_list|,
name|newDefaultSize
argument_list|)
expr_stmt|;
name|h
operator|.
name|reset
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|h
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|h
operator|.
name|sectionSize
argument_list|(
name|i
argument_list|)
argument_list|,
name|newDefaultSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideAndInsert_data
name|void
name|tst_QHeaderView
operator|::
name|hideAndInsert_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hide"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"insert"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal, 0, 0"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideAndInsert
name|void
name|tst_QHeaderView
operator|::
name|hideAndInsert
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hide
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|insert
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hidden
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|m
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QHeaderView
name|h
argument_list|(
operator|(
name|Qt
operator|::
name|Orientation
operator|)
name|direction
argument_list|)
decl_stmt|;
name|h
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|h
operator|.
name|setSectionHidden
argument_list|(
name|hide
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|direction
operator|==
name|Qt
operator|::
name|Vertical
condition|)
name|m
operator|.
name|insertRow
argument_list|(
name|insert
argument_list|)
expr_stmt|;
else|else
name|m
operator|.
name|insertColumn
argument_list|(
name|insert
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|h
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
if|if
condition|(
name|i
operator|!=
name|hidden
condition|)
name|QCOMPARE
argument_list|(
name|h
operator|.
name|isSectionHidden
argument_list|(
name|i
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|h
operator|.
name|isSectionHidden
argument_list|(
name|i
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeSection
name|void
name|tst_QHeaderView
operator|::
name|removeSection
parameter_list|()
block|{
comment|//test that removing a hidden section gives the expected result: the next row should be hidden
comment|//(see task
specifier|const
name|int
name|hidden
init|=
literal|3
decl_stmt|;
comment|//section that will be hidden
specifier|const
name|QStringList
name|list
init|=
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"1"
operator|<<
literal|"2"
operator|<<
literal|"3"
operator|<<
literal|"4"
operator|<<
literal|"5"
operator|<<
literal|"6"
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideSection
argument_list|(
name|hidden
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideSection
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|.
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|==
operator|(
name|hidden
operator|-
literal|1
operator|)
condition|)
block|{
comment|//-1 because we removed a row in the meantime
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
name|i
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isSectionHidden
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
name|i
argument_list|)
argument_list|,
name|view
operator|.
name|defaultSectionSize
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isSectionHidden
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|preserveHiddenSectionWidth
name|void
name|tst_QHeaderView
operator|::
name|preserveHiddenSectionWidth
parameter_list|()
block|{
specifier|const
name|QStringList
name|list
init|=
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"1"
operator|<<
literal|"2"
operator|<<
literal|"3"
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|resizeSection
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|resizeSection
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|view
operator|.
name|resizeSection
argument_list|(
literal|2
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSectionResizeMode
argument_list|(
literal|3
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|hideSection
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|showSection
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideSection
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|showSection
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
literal|1
argument_list|)
argument_list|,
name|view
operator|.
name|defaultSectionSize
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|50
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invisibleStretchLastSection
name|void
name|tst_QHeaderView
operator|::
name|invisibleStretchLastSection
parameter_list|()
block|{
name|int
name|count
init|=
literal|6
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|1
argument_list|,
name|count
argument_list|)
decl_stmt|;
name|QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|int
name|height
init|=
name|view
operator|.
name|height
argument_list|()
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
name|view
operator|.
name|defaultSectionSize
argument_list|()
operator|*
operator|(
name|count
operator|/
literal|2
operator|)
argument_list|,
name|height
argument_list|)
expr_stmt|;
comment|// don't show all sections
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// stretch section is not visible; it should not be stretched
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
name|i
argument_list|)
argument_list|,
name|view
operator|.
name|defaultSectionSize
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
name|view
operator|.
name|defaultSectionSize
argument_list|()
operator|*
operator|(
name|count
operator|+
literal|1
operator|)
argument_list|,
name|height
argument_list|)
expr_stmt|;
comment|// give room to stretch
comment|// stretch section is visible; it should be stretched
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
operator|-
literal|1
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
name|i
argument_list|)
argument_list|,
name|view
operator|.
name|defaultSectionSize
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|sectionSize
argument_list|(
name|count
operator|-
literal|1
argument_list|)
argument_list|,
name|view
operator|.
name|defaultSectionSize
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noSectionsWithNegativeSize
name|void
name|tst_QHeaderView
operator|::
name|noSectionsWithNegativeSize
parameter_list|()
block|{
name|QStandardItemModel
name|m
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QHeaderView
name|h
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|h
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|h
operator|.
name|resizeSection
argument_list|(
literal|1
argument_list|,
operator|-
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|h
operator|.
name|sectionSize
argument_list|(
literal|1
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
comment|// Sections with negative sizes not well defined.
block|}
end_function
begin_function
DECL|function|emptySectionSpan
name|void
name|tst_QHeaderView
operator|::
name|emptySectionSpan
parameter_list|()
block|{
name|QHeaderViewPrivate
operator|::
name|SectionItem
name|section
decl_stmt|;
name|QCOMPARE
argument_list|(
name|section
operator|.
name|sectionSize
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task236450_hidden_data
name|void
name|tst_QHeaderView
operator|::
name|task236450_hidden_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"hide1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"hide2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"set 1"
argument_list|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|5
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"set 2"
argument_list|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|1
operator|<<
literal|5
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"set 3"
argument_list|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|4
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|5
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task236450_hidden
name|void
name|tst_QHeaderView
operator|::
name|task236450_hidden
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|hide1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|hide2
argument_list|)
expr_stmt|;
specifier|const
name|QStringList
name|list
init|=
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"1"
operator|<<
literal|"2"
operator|<<
literal|"3"
operator|<<
literal|"4"
operator|<<
literal|"5"
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|protected_QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|int
name|i
decl|,
name|hide1
control|)
name|view
operator|.
name|hideSection
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|hiddenSectionCount
argument_list|()
argument_list|,
name|hide1
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|QCOMPARE
argument_list|(
operator|!
name|view
operator|.
name|isSectionHidden
argument_list|(
name|i
argument_list|)
argument_list|,
operator|!
name|hide1
operator|.
name|contains
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|setDefaultSectionSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|view
operator|.
name|scheduleDelayedItemsLayout
argument_list|()
expr_stmt|;
name|view
operator|.
name|executeDelayedItemsLayout
argument_list|()
expr_stmt|;
comment|//force to do a relayout
name|QCOMPARE
argument_list|(
name|view
operator|.
name|hiddenSectionCount
argument_list|()
argument_list|,
name|hide1
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|QCOMPARE
argument_list|(
operator|!
name|view
operator|.
name|isSectionHidden
argument_list|(
name|i
argument_list|)
argument_list|,
operator|!
name|hide1
operator|.
name|contains
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSectionHidden
argument_list|(
name|i
argument_list|,
name|hide2
operator|.
name|contains
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|view
operator|.
name|hiddenSectionCount
argument_list|()
argument_list|,
name|hide2
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|QCOMPARE
argument_list|(
operator|!
name|view
operator|.
name|isSectionHidden
argument_list|(
name|i
argument_list|)
argument_list|,
operator|!
name|hide2
operator|.
name|contains
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|task248050_hideRow
name|void
name|tst_QHeaderView
operator|::
name|task248050_hideRow
parameter_list|()
block|{
comment|//this is the sequence of events that make the task fail
name|protected_QHeaderView
name|header
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|header
operator|.
name|setStretchLastSection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setDefaultSectionSize
argument_list|(
literal|17
argument_list|)
expr_stmt|;
name|header
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|header
operator|.
name|doItemsLayout
argument_list|()
expr_stmt|;
name|model
operator|.
name|setRowCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|header
operator|.
name|sectionPosition
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|17
operator|*
literal|2
argument_list|)
expr_stmt|;
name|header
operator|.
name|hideSection
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|header
operator|.
name|sectionPosition
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|17
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|//the size of the section shouldn't have changed
name|QCOMPARE
argument_list|(
name|header
operator|.
name|sectionPosition
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|17
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//returns 0 if everything is fine.
end_comment
begin_function
DECL|function|checkHeaderViewOrder
specifier|static
name|int
name|checkHeaderViewOrder
parameter_list|(
name|QHeaderView
modifier|*
name|view
parameter_list|,
specifier|const
name|QVector
argument_list|<
name|int
argument_list|>
modifier|&
name|expected
parameter_list|)
block|{
if|if
condition|(
name|view
operator|->
name|count
argument_list|()
operator|!=
name|expected
operator|.
name|count
argument_list|()
condition|)
return|return
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expected
operator|.
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
operator|!=
name|expected
operator|.
name|at
argument_list|(
name|i
argument_list|)
condition|)
return|return
name|i
operator|+
literal|10
return|;
if|if
condition|(
name|view
operator|->
name|visualIndex
argument_list|(
name|expected
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
operator|!=
name|i
condition|)
return|return
name|i
operator|+
literal|100
return|;
block|}
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|QTBUG6058_reset
name|void
name|tst_QHeaderView
operator|::
name|QTBUG6058_reset
parameter_list|()
block|{
name|QStringListModel
name|model1
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"1"
operator|<<
literal|"2"
operator|<<
literal|"3"
operator|<<
literal|"4"
operator|<<
literal|"5"
argument_list|)
decl_stmt|;
name|QStringListModel
name|model2
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"a"
operator|<<
literal|"b"
operator|<<
literal|"c"
argument_list|)
decl_stmt|;
name|QSortFilterProxyModel
name|proxy
decl_stmt|;
name|QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|proxy
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setSourceModel
argument_list|(
operator|&
name|model1
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|view
operator|.
name|swapSections
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|view
operator|.
name|swapSections
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|checkHeaderViewOrder
argument_list|(
operator|&
name|view
argument_list|,
name|QVector
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|2
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setSourceModel
argument_list|(
operator|&
name|model2
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|checkHeaderViewOrder
argument_list|(
operator|&
name|view
argument_list|,
name|QVector
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|1
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setSourceModel
argument_list|(
operator|&
name|model1
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|checkHeaderViewOrder
argument_list|(
operator|&
name|view
argument_list|,
name|QVector
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG7833_sectionClicked
name|void
name|tst_QHeaderView
operator|::
name|QTBUG7833_sectionClicked
parameter_list|()
block|{
name|QTableView
name|tv
decl_stmt|;
name|QStandardItemModel
modifier|*
name|sim
init|=
operator|new
name|QStandardItemModel
argument_list|(
operator|&
name|tv
argument_list|)
decl_stmt|;
name|QSortFilterProxyModel
modifier|*
name|proxyModel
init|=
operator|new
name|QSortFilterProxyModel
argument_list|(
operator|&
name|tv
argument_list|)
decl_stmt|;
name|proxyModel
operator|->
name|setSourceModel
argument_list|(
name|sim
argument_list|)
expr_stmt|;
name|proxyModel
operator|->
name|setDynamicSortFilter
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|proxyModel
operator|->
name|setSortCaseSensitivity
argument_list|(
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|row
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|++
control|)
name|row
operator|.
name|append
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
name|QLatin1Char
argument_list|(
literal|'A'
operator|+
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sim
operator|->
name|appendRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|12
init|;
name|i
operator|>
literal|0
condition|;
name|i
operator|--
control|)
name|row
operator|.
name|append
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
name|QLatin1Char
argument_list|(
literal|'A'
operator|+
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sim
operator|->
name|appendRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|tv
operator|.
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setSortIndicatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setSectionsClickable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setStretchLastSection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|Interactive
argument_list|)
expr_stmt|;
name|tv
operator|.
name|setModel
argument_list|(
name|proxyModel
argument_list|)
expr_stmt|;
name|tv
operator|.
name|setColumnHidden
argument_list|(
literal|5
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|tv
operator|.
name|setColumnHidden
argument_list|(
literal|6
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|swapSections
argument_list|(
literal|8
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|tv
operator|.
name|sortByColumn
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QSignalSpy
name|clickedSpy
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|sectionClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|pressedSpy
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|sectionPressed
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionViewportPosition
argument_list|(
literal|11
argument_list|)
operator|+
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionSize
argument_list|(
literal|11
argument_list|)
operator|/
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionViewportPosition
argument_list|(
literal|8
argument_list|)
operator|+
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|/
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionViewportPosition
argument_list|(
literal|0
argument_list|)
operator|+
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionSize
argument_list|(
literal|0
argument_list|)
operator|/
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG8650_crashOnInsertSections
name|void
name|tst_QHeaderView
operator|::
name|QTBUG8650_crashOnInsertSections
parameter_list|()
block|{
name|QStringList
name|headerLabels
decl_stmt|;
name|QHeaderView
name|view
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|moveSection
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideSection
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|items
decl_stmt|;
name|items
operator|<<
operator|new
name|QStandardItem
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertColumn
argument_list|(
literal|0
argument_list|,
name|items
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setModelTexts
specifier|static
name|void
name|setModelTexts
parameter_list|(
name|QStandardItemModel
modifier|*
name|model
parameter_list|)
block|{
specifier|const
name|int
name|columnCount
init|=
name|model
operator|->
name|columnCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|,
name|rowCount
init|=
name|model
operator|->
name|rowCount
argument_list|()
init|;
name|i
operator|<
name|rowCount
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QString
name|prefix
init|=
name|QLatin1String
argument_list|(
literal|"item ["
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|','
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|columnCount
condition|;
operator|++
name|j
control|)
name|model
operator|->
name|setData
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
argument_list|,
name|prefix
operator|+
name|QString
operator|::
name|number
argument_list|(
name|j
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|']'
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|QTBUG12268_hiddenMovedSectionSorting
name|void
name|tst_QHeaderView
operator|::
name|QTBUG12268_hiddenMovedSectionSorting
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
comment|// ### this test fails on QTableView&view = *m_tableview; !? + shadowing view member
name|QStandardItemModel
modifier|*
name|model
init|=
operator|new
name|QStandardItemModel
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
operator|&
name|view
argument_list|)
decl_stmt|;
name|setModelTexts
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setSectionsMovable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|sortByColumn
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|moveSection
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|view
operator|.
name|setColumnHidden
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG14242_hideSectionAutoSize
name|void
name|tst_QHeaderView
operator|::
name|QTBUG14242_hideSectionAutoSize
parameter_list|()
block|{
name|QTableView
name|qtv
decl_stmt|;
name|QStandardItemModel
name|amodel
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|qtv
operator|.
name|setModel
argument_list|(
operator|&
name|amodel
argument_list|)
expr_stmt|;
name|QHeaderView
modifier|*
name|hv
init|=
name|qtv
operator|.
name|verticalHeader
argument_list|()
decl_stmt|;
name|hv
operator|->
name|setDefaultSectionSize
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|hv
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|ResizeToContents
argument_list|)
expr_stmt|;
name|qtv
operator|.
name|show
argument_list|()
expr_stmt|;
name|hv
operator|->
name|hideSection
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|int
name|afterlength
init|=
name|hv
operator|->
name|length
argument_list|()
decl_stmt|;
name|int
name|calced_length
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|hv
operator|->
name|count
argument_list|()
condition|;
operator|++
name|u
control|)
name|calced_length
operator|+=
name|hv
operator|->
name|sectionSize
argument_list|(
name|u
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|calced_length
argument_list|,
name|afterlength
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ensureNoIndexAtLength
name|void
name|tst_QHeaderView
operator|::
name|ensureNoIndexAtLength
parameter_list|()
block|{
name|QTableView
name|qtv
decl_stmt|;
name|QStandardItemModel
name|amodel
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|qtv
operator|.
name|setModel
argument_list|(
operator|&
name|amodel
argument_list|)
expr_stmt|;
name|QHeaderView
modifier|*
name|hv
init|=
name|qtv
operator|.
name|verticalHeader
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|->
name|visualIndexAt
argument_list|(
name|hv
operator|->
name|length
argument_list|()
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|hv
operator|->
name|resizeSection
argument_list|(
name|hv
operator|->
name|count
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hv
operator|->
name|visualIndexAt
argument_list|(
name|hv
operator|->
name|length
argument_list|()
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|offsetConsistent
name|void
name|tst_QHeaderView
operator|::
name|offsetConsistent
parameter_list|()
block|{
comment|// Ensure that a hidden section 'far away'
comment|// does not affect setOffsetToSectionPosition ..
specifier|const
name|int
name|sectionToHide
init|=
literal|513
decl_stmt|;
name|QTableView
name|qtv
decl_stmt|;
name|QStandardItemModel
name|amodel
argument_list|(
literal|1000
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|qtv
operator|.
name|setModel
argument_list|(
operator|&
name|amodel
argument_list|)
expr_stmt|;
name|QHeaderView
modifier|*
name|hv
init|=
name|qtv
operator|.
name|verticalHeader
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
literal|100
condition|;
name|u
operator|+=
literal|2
control|)
name|hv
operator|->
name|resizeSection
argument_list|(
name|u
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|hv
operator|->
name|setOffsetToSectionPosition
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|int
name|offset1
init|=
name|hv
operator|->
name|offset
argument_list|()
decl_stmt|;
name|hv
operator|->
name|hideSection
argument_list|(
name|sectionToHide
argument_list|)
expr_stmt|;
name|hv
operator|->
name|setOffsetToSectionPosition
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|int
name|offset2
init|=
name|hv
operator|->
name|offset
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|offset1
argument_list|,
name|offset2
argument_list|)
expr_stmt|;
comment|// Ensure that hidden indexes (still) is considered.
name|hv
operator|->
name|resizeSection
argument_list|(
name|sectionToHide
argument_list|,
name|hv
operator|->
name|sectionSize
argument_list|(
literal|200
argument_list|)
operator|*
literal|2
argument_list|)
expr_stmt|;
name|hv
operator|->
name|setOffsetToSectionPosition
argument_list|(
literal|800
argument_list|)
expr_stmt|;
name|offset1
operator|=
name|hv
operator|->
name|offset
argument_list|()
expr_stmt|;
name|hv
operator|->
name|showSection
argument_list|(
name|sectionToHide
argument_list|)
expr_stmt|;
name|hv
operator|->
name|setOffsetToSectionPosition
argument_list|(
literal|800
argument_list|)
expr_stmt|;
name|offset2
operator|=
name|hv
operator|->
name|offset
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|offset2
operator|>
name|offset1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initialSortOrderRole
name|void
name|tst_QHeaderView
operator|::
name|initialSortOrderRole
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
comment|// ### Shadowing member view (of type QHeaderView)
name|QStandardItemModel
modifier|*
name|model
init|=
operator|new
name|QStandardItemModel
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
operator|&
name|view
argument_list|)
decl_stmt|;
name|setModelTexts
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|ascendingItem
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|QStandardItem
modifier|*
name|descendingItem
init|=
operator|new
name|QStandardItem
argument_list|()
decl_stmt|;
name|ascendingItem
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|,
name|Qt
operator|::
name|InitialSortOrderRole
argument_list|)
expr_stmt|;
name|descendingItem
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|,
name|Qt
operator|::
name|InitialSortOrderRole
argument_list|)
expr_stmt|;
name|model
operator|->
name|setHorizontalHeaderItem
argument_list|(
literal|1
argument_list|,
name|ascendingItem
argument_list|)
expr_stmt|;
name|model
operator|->
name|setHorizontalHeaderItem
argument_list|(
literal|2
argument_list|,
name|descendingItem
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|sortByColumn
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|int
name|column1Pos
init|=
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionViewportPosition
argument_list|(
literal|1
argument_list|)
operator|+
literal|5
decl_stmt|;
comment|// +5 not to be on the handle
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
name|column1Pos
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sortIndicatorOrder
argument_list|()
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
specifier|const
name|int
name|column2Pos
init|=
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionViewportPosition
argument_list|(
literal|2
argument_list|)
operator|+
literal|5
decl_stmt|;
comment|// +5 not to be on the handle
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
name|column2Pos
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sortIndicatorOrder
argument_list|()
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
specifier|const
name|int
name|column0Pos
init|=
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sectionViewportPosition
argument_list|(
literal|0
argument_list|)
operator|+
literal|5
decl_stmt|;
comment|// +5 not to be on the handle
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|QPoint
argument_list|(
name|column0Pos
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sortIndicatorSection
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|sortIndicatorOrder
argument_list|()
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|block_some_signals
specifier|const
name|bool
name|block_some_signals
init|=
literal|true
decl_stmt|;
end_decl_stmt
begin_comment
DECL|variable|block_some_signals
comment|// The test should also work with this set to false
end_comment
begin_decl_stmt
DECL|variable|rowcount
specifier|const
name|int
name|rowcount
init|=
literal|500
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|colcount
specifier|const
name|int
name|colcount
init|=
literal|10
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|istr
name|QString
name|istr
parameter_list|(
name|int
name|n
parameter_list|,
name|bool
name|comma
init|=
literal|true
parameter_list|)
block|{
name|QString
name|s
decl_stmt|;
name|s
operator|.
name|setNum
argument_list|(
name|n
argument_list|)
expr_stmt|;
if|if
condition|(
name|comma
condition|)
name|s
operator|+=
literal|", "
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_function
DECL|function|calculateAndCheck
name|void
name|tst_QHeaderView
operator|::
name|calculateAndCheck
parameter_list|(
name|int
name|cppline
parameter_list|,
specifier|const
name|int
name|precalced_comparedata
index|[]
parameter_list|)
block|{
name|qint64
name|endtimer
init|=
name|timer
operator|.
name|elapsed
argument_list|()
decl_stmt|;
specifier|const
name|bool
name|silentmode
init|=
literal|true
decl_stmt|;
if|if
condition|(
operator|!
name|silentmode
condition|)
name|qDebug
argument_list|()
operator|.
name|nospace
argument_list|()
operator|<<
literal|"(Time:"
operator|<<
name|endtimer
operator|<<
literal|")"
expr_stmt|;
name|QString
name|sline
decl_stmt|;
name|sline
operator|.
name|setNum
argument_list|(
name|cppline
operator|-
literal|1
argument_list|)
expr_stmt|;
specifier|const
name|int
name|p1
init|=
literal|3133777
decl_stmt|;
comment|// just a prime (maybe not that random ;) )
specifier|const
name|int
name|p2
init|=
literal|135928393
decl_stmt|;
comment|// just a random large prime - a bit less than signed 32-bit
name|int
name|sum_visual
init|=
literal|0
decl_stmt|;
name|int
name|sum_logical
init|=
literal|0
decl_stmt|;
name|int
name|sum_size
init|=
literal|0
decl_stmt|;
name|int
name|sum_hidden_size
init|=
literal|0
decl_stmt|;
name|int
name|sum_lookup_visual
init|=
literal|0
decl_stmt|;
name|int
name|sum_lookup_logical
init|=
literal|0
decl_stmt|;
name|int
name|chk_visual
init|=
literal|1
decl_stmt|;
name|int
name|chk_logical
init|=
literal|1
decl_stmt|;
name|int
name|chk_sizes
init|=
literal|1
decl_stmt|;
name|int
name|chk_hidden_size
init|=
literal|1
decl_stmt|;
name|int
name|chk_lookup_visual
init|=
literal|1
decl_stmt|;
name|int
name|chk_lookup_logical
init|=
literal|1
decl_stmt|;
name|int
name|header_lenght
init|=
literal|0
decl_stmt|;
name|int
name|lastindex
init|=
name|view
operator|->
name|count
argument_list|()
operator|-
literal|1
decl_stmt|;
comment|// calculate information based on index
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|lastindex
condition|;
operator|++
name|i
control|)
block|{
name|int
name|visual
init|=
name|view
operator|->
name|visualIndex
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|int
name|logical
init|=
name|view
operator|->
name|logicalIndex
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|int
name|ssize
init|=
name|view
operator|->
name|sectionSize
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|sum_visual
operator|+=
name|visual
expr_stmt|;
name|sum_logical
operator|+=
name|logical
expr_stmt|;
name|sum_size
operator|+=
name|ssize
expr_stmt|;
if|if
condition|(
name|visual
operator|>=
literal|0
condition|)
block|{
name|chk_visual
operator|%=
name|p2
expr_stmt|;
name|chk_visual
operator|*=
operator|(
name|visual
operator|+
literal|1
operator|)
operator|*
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
name|p1
expr_stmt|;
block|}
if|if
condition|(
name|logical
operator|>=
literal|0
condition|)
block|{
name|chk_logical
operator|%=
name|p2
expr_stmt|;
name|chk_logical
operator|*=
operator|(
name|logical
operator|+
literal|1
operator|)
operator|*
operator|(
name|i
operator|+
literal|1
operator|+
operator|(
name|logical
operator|!=
name|i
operator|)
operator|)
operator|*
name|p1
expr_stmt|;
block|}
if|if
condition|(
name|ssize
operator|>=
literal|0
condition|)
block|{
name|chk_sizes
operator|%=
name|p2
expr_stmt|;
name|chk_sizes
operator|*=
operator|(
operator|(
name|ssize
operator|+
literal|2
operator|)
operator|*
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
name|p1
operator|)
expr_stmt|;
block|}
if|if
condition|(
name|view
operator|->
name|isSectionHidden
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|view
operator|->
name|showSection
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|int
name|hiddensize
init|=
name|view
operator|->
name|sectionSize
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|sum_hidden_size
operator|+=
name|hiddensize
expr_stmt|;
name|chk_hidden_size
operator|%=
name|p2
expr_stmt|;
name|chk_hidden_size
operator|+=
operator|(
operator|(
name|hiddensize
operator|+
literal|1
operator|)
operator|*
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
name|p1
operator|)
expr_stmt|;
comment|// (hiddensize + 1) in the above to differ between hidden and size 0
comment|// Though it can be changed (why isn't sections with size 0 hidden?)
name|view
operator|->
name|hideSection
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
comment|// lookup indexes by pixel position
specifier|const
name|int
name|max_lookup_count
init|=
literal|500
decl_stmt|;
name|int
name|lookup_to
init|=
name|view
operator|->
name|height
argument_list|()
operator|+
literal|1
decl_stmt|;
if|if
condition|(
name|lookup_to
operator|>
name|max_lookup_count
condition|)
name|lookup_to
operator|=
name|max_lookup_count
expr_stmt|;
comment|// We limit this lookup - not to spend years when testing.
comment|// Notice that lookupTest also has its own extra test
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|max_lookup_count
condition|;
operator|++
name|u
control|)
block|{
name|int
name|visu
init|=
name|view
operator|->
name|visualIndexAt
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|int
name|logi
init|=
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|sum_lookup_visual
operator|+=
name|logi
expr_stmt|;
name|sum_lookup_logical
operator|+=
name|visu
expr_stmt|;
name|chk_lookup_visual
operator|%=
name|p2
expr_stmt|;
name|chk_lookup_visual
operator|*=
operator|(
operator|(
name|u
operator|+
literal|1
operator|)
operator|*
name|p1
operator|*
operator|(
name|visu
operator|+
literal|2
operator|)
operator|)
expr_stmt|;
name|chk_lookup_logical
operator|%=
name|p2
expr_stmt|;
name|chk_lookup_logical
operator|*=
operator|(
operator|(
name|u
operator|+
literal|1
operator|)
operator|*
name|p1
operator|*
operator|(
name|logi
operator|+
literal|2
operator|)
operator|)
expr_stmt|;
block|}
name|header_lenght
operator|=
name|view
operator|->
name|length
argument_list|()
expr_stmt|;
comment|// visual and logical indexes.
name|int
name|sum_to_last_index
init|=
operator|(
name|lastindex
operator|*
operator|(
name|lastindex
operator|+
literal|1
operator|)
operator|)
operator|/
literal|2
decl_stmt|;
comment|// == 0 + 1 + 2 + 3 + ... + lastindex
specifier|const
name|bool
name|write_calced_data
init|=
literal|false
decl_stmt|;
comment|// Do not write calculated output (unless the test fails)
if|if
condition|(
name|write_calced_data
condition|)
block|{
name|qDebug
argument_list|()
operator|.
name|nospace
argument_list|()
operator|<<
literal|"("
operator|<<
name|cppline
operator|-
literal|1
operator|<<
literal|")"
comment|//<< " const int precalced[] = "
operator|<<
literal|" {"
operator|<<
name|chk_visual
operator|<<
literal|", "
operator|<<
name|chk_logical
operator|<<
literal|", "
operator|<<
name|chk_sizes
operator|<<
literal|", "
operator|<<
name|chk_hidden_size
operator|<<
literal|", "
operator|<<
name|chk_lookup_visual
operator|<<
literal|", "
operator|<<
name|chk_lookup_logical
operator|<<
literal|", "
operator|<<
name|header_lenght
operator|<<
literal|"};"
expr_stmt|;
block|}
specifier|const
name|bool
name|sanity_checks
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|sanity_checks
condition|)
block|{
name|QString
name|msg
init|=
name|QString
argument_list|(
literal|"sanity problem at "
argument_list|)
operator|+
name|sline
decl_stmt|;
name|char
modifier|*
name|verifytext
init|=
name|QTest
operator|::
name|toString
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|m_tableview
operator|->
name|model
argument_list|()
operator|->
name|rowCount
argument_list|()
operator|==
name|view
operator|->
name|count
argument_list|()
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|view
operator|->
name|visualIndex
argument_list|(
name|lastindex
operator|+
literal|1
argument_list|)
operator|<=
literal|0
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
comment|// there is no such index in model
name|QVERIFY2
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
name|lastindex
operator|+
literal|1
argument_list|)
operator|<=
literal|0
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
comment|// there is no such index in model.
name|QVERIFY2
argument_list|(
name|view
operator|->
name|logicalIndex
argument_list|(
name|lastindex
operator|+
literal|1
argument_list|)
operator|<=
literal|0
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
comment|// there is no such index in model.
name|QVERIFY2
argument_list|(
name|lastindex
operator|<
literal|0
operator|||
name|view
operator|->
name|visualIndex
argument_list|(
literal|0
argument_list|)
operator|>=
literal|0
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
comment|// no rows or legal index
name|QVERIFY2
argument_list|(
name|lastindex
operator|<
literal|0
operator|||
name|view
operator|->
name|logicalIndex
argument_list|(
literal|0
argument_list|)
operator|>=
literal|0
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
comment|// no rows or legal index
name|QVERIFY2
argument_list|(
name|lastindex
operator|<
literal|0
operator|||
name|view
operator|->
name|visualIndex
argument_list|(
name|lastindex
argument_list|)
operator|>=
literal|0
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
comment|// no rows or legal index
name|QVERIFY2
argument_list|(
name|lastindex
operator|<
literal|0
operator|||
name|view
operator|->
name|logicalIndex
argument_list|(
name|lastindex
argument_list|)
operator|>=
literal|0
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
comment|// no rows or legal index
name|QVERIFY2
argument_list|(
name|view
operator|->
name|visualIndexAt
argument_list|(
operator|-
literal|1
argument_list|)
operator|==
operator|-
literal|1
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
operator|-
literal|1
argument_list|)
operator|==
operator|-
literal|1
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|view
operator|->
name|visualIndexAt
argument_list|(
name|view
operator|->
name|length
argument_list|()
argument_list|)
operator|==
operator|-
literal|1
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|view
operator|->
name|logicalIndexAt
argument_list|(
name|view
operator|->
name|length
argument_list|()
argument_list|)
operator|==
operator|-
literal|1
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|sum_visual
operator|==
name|sum_logical
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|sum_to_last_index
operator|==
name|sum_logical
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
block|}
comment|// Semantic test
specifier|const
name|bool
name|check_semantics
init|=
literal|true
decl_stmt|;
comment|// Otherwise there is no 'real' test
if|if
condition|(
operator|!
name|check_semantics
condition|)
return|return;
specifier|const
name|int
modifier|*
name|x
init|=
name|precalced_comparedata
decl_stmt|;
name|QString
name|msg
init|=
literal|"semantic problem at "
operator|+
name|QString
argument_list|(
name|__FILE__
argument_list|)
operator|+
literal|" ("
operator|+
name|sline
operator|+
literal|")"
decl_stmt|;
name|msg
operator|+=
literal|"\nThe *expected* result was : {"
operator|+
name|istr
argument_list|(
name|x
index|[
literal|0
index|]
argument_list|)
operator|+
name|istr
argument_list|(
name|x
index|[
literal|1
index|]
argument_list|)
operator|+
name|istr
argument_list|(
name|x
index|[
literal|2
index|]
argument_list|)
operator|+
name|istr
argument_list|(
name|x
index|[
literal|3
index|]
argument_list|)
operator|+
name|istr
argument_list|(
name|x
index|[
literal|4
index|]
argument_list|)
operator|+
name|istr
argument_list|(
name|x
index|[
literal|5
index|]
argument_list|)
operator|+
name|istr
argument_list|(
name|x
index|[
literal|6
index|]
argument_list|,
literal|false
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|'}'
argument_list|)
expr_stmt|;
name|msg
operator|+=
literal|"\nThe calculated result was : {"
expr_stmt|;
name|msg
operator|+=
name|istr
argument_list|(
name|chk_visual
argument_list|)
operator|+
name|istr
argument_list|(
name|chk_logical
argument_list|)
operator|+
name|istr
argument_list|(
name|chk_sizes
argument_list|)
operator|+
name|istr
argument_list|(
name|chk_hidden_size
argument_list|)
operator|+
name|istr
argument_list|(
name|chk_lookup_visual
argument_list|)
operator|+
name|istr
argument_list|(
name|chk_lookup_logical
argument_list|)
operator|+
name|istr
argument_list|(
name|header_lenght
argument_list|,
literal|false
argument_list|)
operator|+
literal|"};"
expr_stmt|;
name|char
modifier|*
name|verifytext
init|=
name|QTest
operator|::
name|toString
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|chk_visual
operator|==
name|x
index|[
literal|0
index|]
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|chk_logical
operator|==
name|x
index|[
literal|1
index|]
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|chk_sizes
operator|==
name|x
index|[
literal|2
index|]
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|chk_hidden_size
operator|==
name|x
index|[
literal|3
index|]
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|chk_lookup_visual
operator|==
name|x
index|[
literal|4
index|]
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|chk_lookup_logical
operator|==
name|x
index|[
literal|5
index|]
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|header_lenght
operator|==
name|x
index|[
literal|6
index|]
argument_list|,
name|verifytext
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupTestData
name|void
name|tst_QHeaderView
operator|::
name|setupTestData
parameter_list|(
name|bool
name|also_use_reset_model
parameter_list|)
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"updates_enabled"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"special_prepare"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"reset_model"
argument_list|)
expr_stmt|;
if|if
condition|(
name|also_use_reset_model
condition|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no_updates+normal+reset"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hasupdates+normal+reset"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no_updates+special+reset"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hasupdates+special+reset"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
block|}
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no_updates+normal"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hasupdates+normal"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no_updates+special"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hasupdates+special"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|additionalInit
name|void
name|tst_QHeaderView
operator|::
name|additionalInit
parameter_list|()
block|{
name|m_tableview
operator|->
name|setVerticalHeader
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|updates_enabled
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|special_prepare
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|reset_model
argument_list|)
expr_stmt|;
name|m_using_reset_model
operator|=
name|reset_model
expr_stmt|;
if|if
condition|(
name|m_using_reset_model
condition|)
block|{
name|XResetModel
modifier|*
name|m
init|=
operator|new
name|XResetModel
argument_list|()
decl_stmt|;
name|m_tableview
operator|->
name|setModel
argument_list|(
name|m
argument_list|)
expr_stmt|;
operator|delete
name|model
expr_stmt|;
name|model
operator|=
name|m
expr_stmt|;
block|}
else|else
block|{
name|m_tableview
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
specifier|const
name|int
name|default_section_size
init|=
literal|25
decl_stmt|;
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
name|default_section_size
argument_list|)
expr_stmt|;
comment|// Important - otherwise there will be semantic changes
name|model
operator|->
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|special_prepare
condition|)
block|{
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<=
name|rowcount
condition|;
operator|++
name|u
control|)
comment|// ensures fragmented spans in e.g Qt 4.7
name|model
operator|->
name|setRowCount
argument_list|(
name|u
argument_list|)
expr_stmt|;
name|model
operator|->
name|setColumnCount
argument_list|(
name|colcount
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|0
argument_list|,
name|rowcount
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|0
argument_list|,
name|rowcount
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// No real change - setup visual and log-indexes
name|view
operator|->
name|hideSection
argument_list|(
name|rowcount
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|showSection
argument_list|(
name|rowcount
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// No real change - (maybe init hidden vector)
block|}
else|else
block|{
name|model
operator|->
name|setColumnCount
argument_list|(
name|colcount
argument_list|)
expr_stmt|;
name|model
operator|->
name|setRowCount
argument_list|(
name|rowcount
argument_list|)
expr_stmt|;
block|}
name|QString
name|s
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|model
operator|->
name|setData
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|setNum
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|s
operator|+=
name|QLatin1Char
argument_list|(
literal|'.'
argument_list|)
expr_stmt|;
name|s
operator|+=
literal|'a'
operator|+
operator|(
name|i
operator|%
literal|25
operator|)
expr_stmt|;
name|model
operator|->
name|setData
argument_list|(
name|model
operator|->
name|index
argument_list|(
name|i
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|m_tableview
operator|->
name|setUpdatesEnabled
argument_list|(
name|updates_enabled
argument_list|)
expr_stmt|;
name|view
operator|->
name|blockSignals
argument_list|(
name|block_some_signals
argument_list|)
expr_stmt|;
name|timer
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|logicalIndexAtTest
name|void
name|tst_QHeaderView
operator|::
name|logicalIndexAtTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|4
argument_list|,
literal|9
argument_list|)
expr_stmt|;
comment|// Make sure that visual and logical Indexes are not just the same.
name|int
name|check1
init|=
literal|0
decl_stmt|;
name|int
name|check2
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|u
control|)
block|{
name|view
operator|->
name|resizeSection
argument_list|(
name|u
argument_list|,
literal|10
operator|+
name|u
operator|%
literal|30
argument_list|)
expr_stmt|;
name|int
name|v
init|=
name|view
operator|->
name|visualIndexAt
argument_list|(
name|u
operator|*
literal|29
argument_list|)
decl_stmt|;
name|view
operator|->
name|visualIndexAt
argument_list|(
name|u
operator|*
literal|29
argument_list|)
expr_stmt|;
name|check1
operator|+=
name|v
expr_stmt|;
name|check2
operator|+=
name|u
operator|*
name|v
expr_stmt|;
block|}
name|view
operator|->
name|resizeSection
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Make sure that we have a 0 size section - before the result set
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|6
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Make sure we have a real hidden section before result set
comment|//qDebug()<< "logicalIndexAtTest"<< check1<< check2;
specifier|const
name|int
name|precalced_check1
init|=
literal|106327
decl_stmt|;
specifier|const
name|int
name|precalced_check2
init|=
literal|29856418
decl_stmt|;
name|QCOMPARE
argument_list|(
name|precalced_check1
argument_list|,
name|check1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|precalced_check2
argument_list|,
name|check2
argument_list|)
expr_stmt|;
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|1145298384
block|,
operator|-
literal|1710423344
block|,
operator|-
literal|650981936
block|,
literal|372919464
block|,
operator|-
literal|1544372176
block|,
operator|-
literal|426463328
block|,
literal|12124
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visualIndexAtTest
name|void
name|tst_QHeaderView
operator|::
name|visualIndexAtTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|4
argument_list|,
literal|9
argument_list|)
expr_stmt|;
comment|// Make sure that visual and logical Indexes are not just the same.
name|int
name|check1
init|=
literal|0
decl_stmt|;
name|int
name|check2
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|u
control|)
block|{
name|view
operator|->
name|resizeSection
argument_list|(
name|u
argument_list|,
literal|3
operator|+
name|u
operator|%
literal|17
argument_list|)
expr_stmt|;
name|int
name|v
init|=
name|view
operator|->
name|visualIndexAt
argument_list|(
name|u
operator|*
literal|29
argument_list|)
decl_stmt|;
name|check1
operator|+=
name|v
expr_stmt|;
name|check2
operator|+=
name|u
operator|*
name|v
expr_stmt|;
block|}
name|view
operator|->
name|resizeSection
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Make sure that we have a 0 size section - before the result set
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|5
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Make sure we have a real hidden section before result set
comment|//qDebug()<< "visualIndexAtTest"<< check1<< check2;
specifier|const
name|int
name|precalced_check1
init|=
literal|72665
decl_stmt|;
specifier|const
name|int
name|precalced_check2
init|=
literal|14015890
decl_stmt|;
name|QCOMPARE
argument_list|(
name|precalced_check1
argument_list|,
name|check1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|precalced_check2
argument_list|,
name|check2
argument_list|)
expr_stmt|;
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|1145298384
block|,
operator|-
literal|1710423344
block|,
operator|-
literal|1457520212
block|,
literal|169223959
block|,
literal|557466160
block|,
operator|-
literal|324939600
block|,
literal|5453
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideShowTest
name|void
name|tst_QHeaderView
operator|::
name|hideShowTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
name|model
operator|->
name|rowCount
argument_list|()
init|;
name|u
operator|>=
literal|0
condition|;
operator|--
name|u
control|)
if|if
condition|(
name|u
operator|%
literal|8
operator|!=
literal|0
condition|)
name|view
operator|->
name|hideSection
argument_list|(
name|u
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
name|model
operator|->
name|rowCount
argument_list|()
init|;
name|u
operator|>=
literal|0
condition|;
operator|--
name|u
control|)
if|if
condition|(
name|u
operator|%
literal|3
operator|==
literal|0
condition|)
name|view
operator|->
name|showSection
argument_list|(
name|u
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
name|model
operator|->
name|rowCount
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// invalid hide (should be ignored)
name|view
operator|->
name|setSectionHidden
argument_list|(
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// invalid hide (should be ignored)
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
operator|-
literal|1523279360
block|,
operator|-
literal|1523279360
block|,
operator|-
literal|1321506816
block|,
literal|2105322423
block|,
literal|1879611280
block|,
literal|1879611280
block|,
literal|5225
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swapSectionsTest
name|void
name|tst_QHeaderView
operator|::
name|swapSectionsTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|rowcount
operator|/
literal|2
condition|;
operator|++
name|u
control|)
name|view
operator|->
name|swapSections
argument_list|(
name|u
argument_list|,
name|rowcount
operator|-
name|u
operator|-
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|rowcount
condition|;
name|u
operator|+=
literal|2
control|)
name|view
operator|->
name|swapSections
argument_list|(
name|u
argument_list|,
name|u
operator|+
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|0
argument_list|,
name|model
operator|->
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// invalid swapsection (should be ignored)
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
operator|-
literal|1536450048
block|,
operator|-
literal|1774641430
block|,
operator|-
literal|1347156568
block|,
literal|1
block|,
literal|1719705216
block|,
operator|-
literal|240077576
block|,
literal|12500
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveSectionTest
name|void
name|tst_QHeaderView
operator|::
name|moveSectionTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|1
init|;
name|u
operator|<
literal|5
condition|;
operator|++
name|u
control|)
name|view
operator|->
name|moveSection
argument_list|(
name|u
argument_list|,
name|model
operator|->
name|rowCount
argument_list|()
operator|-
name|u
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
literal|2
argument_list|,
name|model
operator|->
name|rowCount
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
literal|0
argument_list|,
name|model
operator|->
name|rowCount
argument_list|()
operator|-
literal|10
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
literal|0
argument_list|,
name|model
operator|->
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// invalid move (should be ignored)
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|645125952
block|,
literal|577086896
block|,
operator|-
literal|1347156568
block|,
literal|1
block|,
literal|1719705216
block|,
literal|709383416
block|,
literal|12500
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultSizeTest
name|void
name|tst_QHeaderView
operator|::
name|defaultSizeTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
name|view
operator|->
name|hideSection
argument_list|(
name|rowcount
operator|/
literal|2
argument_list|)
expr_stmt|;
name|int
name|restore_to
init|=
name|view
operator|->
name|defaultSectionSize
argument_list|()
decl_stmt|;
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
name|restore_to
operator|+
literal|5
argument_list|)
expr_stmt|;
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
operator|-
literal|1523279360
block|,
operator|-
literal|1523279360
block|,
operator|-
literal|1739688320
block|,
operator|-
literal|1023807777
block|,
literal|997629696
block|,
literal|997629696
block|,
literal|14970
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
name|restore_to
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeTest
name|void
name|tst_QHeaderView
operator|::
name|removeTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|model
operator|->
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// remove one row
name|model
operator|->
name|removeRows
argument_list|(
literal|4
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|model
operator|->
name|setRowCount
argument_list|(
name|model
operator|->
name|rowCount
argument_list|()
operator|/
literal|2
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_using_reset_model
condition|)
block|{
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|1741224292
block|,
operator|-
literal|135269187
block|,
operator|-
literal|569519837
block|,
literal|1
block|,
literal|1719705216
block|,
operator|-
literal|1184395000
block|,
literal|6075
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|289162397
block|,
literal|289162397
block|,
operator|-
literal|569519837
block|,
literal|1
block|,
literal|1719705216
block|,
literal|1719705216
block|,
literal|6075
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|insertTest
name|void
name|tst_QHeaderView
operator|::
name|insertTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|0
argument_list|,
name|model
operator|->
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// insert one row
name|model
operator|->
name|insertRows
argument_list|(
literal|4
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|model
operator|->
name|setRowCount
argument_list|(
name|model
operator|->
name|rowCount
argument_list|()
operator|*
literal|2
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_using_reset_model
condition|)
block|{
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|2040508069
block|,
operator|-
literal|1280266538
block|,
operator|-
literal|150350734
block|,
literal|1
block|,
literal|1719705216
block|,
literal|1331312784
block|,
literal|25525
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
operator|-
literal|1909447021
block|,
literal|339092083
block|,
operator|-
literal|150350734
block|,
literal|1
block|,
literal|1719705216
block|,
operator|-
literal|969712728
block|,
literal|25525
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mixedTests
name|void
name|tst_QHeaderView
operator|::
name|mixedTests
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
name|model
operator|->
name|setRowCount
argument_list|(
name|model
operator|->
name|rowCount
argument_list|()
operator|+
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|model
operator|->
name|rowCount
argument_list|()
condition|;
name|u
operator|+=
literal|2
control|)
name|view
operator|->
name|swapSections
argument_list|(
name|u
argument_list|,
name|u
operator|+
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|moveSection
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
name|model
operator|->
name|rowCount
argument_list|()
init|;
name|u
operator|>=
literal|0
condition|;
operator|--
name|u
control|)
block|{
if|if
condition|(
name|u
operator|%
literal|5
operator|!=
literal|0
condition|)
name|view
operator|->
name|hideSection
argument_list|(
name|u
argument_list|)
expr_stmt|;
if|if
condition|(
name|u
operator|%
literal|3
operator|!=
literal|0
condition|)
name|view
operator|->
name|showSection
argument_list|(
name|u
argument_list|)
expr_stmt|;
block|}
name|model
operator|->
name|insertRows
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|model
operator|->
name|removeRows
argument_list|(
literal|8
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|model
operator|->
name|setRowCount
argument_list|(
name|model
operator|->
name|rowCount
argument_list|()
operator|-
literal|10
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_using_reset_model
condition|)
block|{
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|898296472
block|,
literal|337096378
block|,
operator|-
literal|543340640
block|,
literal|1
block|,
operator|-
literal|1251526424
block|,
operator|-
literal|568618976
block|,
literal|9250
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
literal|1911338224
block|,
literal|1693514365
block|,
operator|-
literal|613398968
block|,
operator|-
literal|1912534953
block|,
literal|1582159424
block|,
operator|-
literal|1851079000
block|,
literal|9300
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|resizeToContentTest
name|void
name|tst_QHeaderView
operator|::
name|resizeToContentTest
parameter_list|()
block|{
name|additionalInit
argument_list|()
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|model
operator|->
name|setData
argument_list|(
name|idx
argument_list|,
name|QVariant
argument_list|(
literal|"A normal string"
argument_list|)
argument_list|)
expr_stmt|;
name|idx
operator|=
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|model
operator|->
name|setData
argument_list|(
name|idx
argument_list|,
name|QVariant
argument_list|(
literal|"A normal longer string to test resize"
argument_list|)
argument_list|)
expr_stmt|;
name|QHeaderView
modifier|*
name|hh
init|=
name|m_tableview
operator|->
name|horizontalHeader
argument_list|()
decl_stmt|;
name|hh
operator|->
name|resizeSections
argument_list|(
name|QHeaderView
operator|::
name|ResizeToContents
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|hh
operator|->
name|sectionSize
argument_list|(
literal|3
argument_list|)
operator|>
name|hh
operator|->
name|sectionSize
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
literal|10
condition|;
operator|++
name|u
control|)
name|view
operator|->
name|resizeSection
argument_list|(
name|u
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|resizeSections
argument_list|(
name|QHeaderView
operator|::
name|ResizeToContents
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|1
argument_list|)
operator|>
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|sectionSize
argument_list|(
literal|2
argument_list|)
operator|>
literal|1
argument_list|)
expr_stmt|;
comment|// Check minimum section size
name|hh
operator|->
name|setMinimumSectionSize
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|model
operator|->
name|setData
argument_list|(
name|idx
argument_list|,
name|QVariant
argument_list|(
literal|"i"
argument_list|)
argument_list|)
expr_stmt|;
name|hh
operator|->
name|resizeSections
argument_list|(
name|QHeaderView
operator|::
name|ResizeToContents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hh
operator|->
name|sectionSize
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|hh
operator|->
name|setMinimumSectionSize
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// Check maximumSection size
name|hh
operator|->
name|setMaximumSectionSize
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|model
operator|->
name|setData
argument_list|(
name|idx
argument_list|,
name|QVariant
argument_list|(
literal|"This is a even longer string that is expected to be more than 200 pixels"
argument_list|)
argument_list|)
expr_stmt|;
name|hh
operator|->
name|resizeSections
argument_list|(
name|QHeaderView
operator|::
name|ResizeToContents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hh
operator|->
name|sectionSize
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|hh
operator|->
name|setMaximumSectionSize
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
literal|25
argument_list|)
expr_stmt|;
comment|// To make sure our precalced data are correct. We do not know font height etc.
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
operator|-
literal|1523279360
block|,
operator|-
literal|1523279360
block|,
operator|-
literal|1347156568
block|,
literal|1
block|,
literal|1719705216
block|,
literal|1719705216
block|,
literal|12500
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testStreamWithHide
name|void
name|tst_QHeaderView
operator|::
name|testStreamWithHide
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_NO_DATASTREAM
name|m_tableview
operator|->
name|setVerticalHeader
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|m_tableview
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|view
operator|->
name|hideSection
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QByteArray
name|s
init|=
name|view
operator|->
name|saveState
argument_list|()
decl_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|view
operator|->
name|setDefaultSectionSize
argument_list|(
literal|30
argument_list|)
expr_stmt|;
comment|// To make sure our precalced data are correct.
name|view
operator|->
name|restoreState
argument_list|(
name|s
argument_list|)
expr_stmt|;
specifier|const
name|int
name|precalced_results
index|[]
init|=
block|{
operator|-
literal|1116614432
block|,
operator|-
literal|1528653200
block|,
operator|-
literal|1914165644
block|,
literal|244434607
block|,
operator|-
literal|1111214068
block|,
literal|750357900
block|,
literal|75
block|}
decl_stmt|;
name|calculateAndCheck
argument_list|(
name|__LINE__
argument_list|,
name|precalced_results
argument_list|)
expr_stmt|;
else|#
directive|else
name|QSKIP
argument_list|(
literal|"Datastream required for testStreamWithHide. Skipping this test."
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|testStylePosition
name|void
name|tst_QHeaderView
operator|::
name|testStylePosition
parameter_list|()
block|{
name|topLevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|protected_QHeaderView
modifier|*
name|header
init|=
cast|static_cast
argument_list|<
name|protected_QHeaderView
operator|*
argument_list|>
argument_list|(
name|view
argument_list|)
decl_stmt|;
name|TestStyle
name|proxy
decl_stmt|;
name|header
operator|->
name|setStyle
argument_list|(
operator|&
name|proxy
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
comment|// 0, 1, 2, 3
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|Beginning
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|Middle
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|Middle
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|End
argument_list|)
expr_stmt|;
comment|// (0),2,1,3
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|Middle
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|Beginning
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|End
argument_list|)
expr_stmt|;
comment|// (1),2,0,(3)
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|3
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|->
name|swapSections
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|End
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|Beginning
argument_list|)
expr_stmt|;
comment|// (1),2,(0),(3)
name|view
operator|->
name|setSectionHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|header
operator|->
name|paintSection
argument_list|(
operator|&
name|p
argument_list|,
name|view
operator|->
name|rect
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|lastPosition
argument_list|,
name|QStyleOptionHeader
operator|::
name|OnlyOneSection
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeHintCrash
name|void
name|tst_QHeaderView
operator|::
name|sizeHintCrash
parameter_list|()
block|{
name|QTreeView
name|treeView
decl_stmt|;
name|QStandardItemModel
modifier|*
name|model
init|=
operator|new
name|QStandardItemModel
argument_list|(
operator|&
name|treeView
argument_list|)
decl_stmt|;
name|model
operator|->
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
literal|"QTBUG-48543"
argument_list|)
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|header
argument_list|()
operator|->
name|sizeHintForColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|header
argument_list|()
operator|->
name|sizeHintForRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QHeaderView
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qheaderview.moc"
end_include
end_unit
