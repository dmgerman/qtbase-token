begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qabstractitemmodel.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qlistview.h>
end_include
begin_include
include|#
directive|include
file|<private/qlistview_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qcoreapplication_p.h>
end_include
begin_include
include|#
directive|include
file|<qlistwidget.h>
end_include
begin_include
include|#
directive|include
file|<qitemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<qstandarditemmodel.h>
end_include
begin_include
include|#
directive|include
file|<qstringlistmodel.h>
end_include
begin_include
include|#
directive|include
file|<cmath>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QScrollBar>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QDialog>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QStyledItemDelegate>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QStyleFactory>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_include
include|#
directive|include
file|<windows.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/QGuiApplication>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformnativeinterface.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_OS_WIN
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_function
DECL|function|getHWNDForWidget
specifier|static
specifier|inline
name|HWND
name|getHWNDForWidget
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QWindow
modifier|*
name|window
init|=
name|widget
operator|->
name|windowHandle
argument_list|()
decl_stmt|;
return|return
cast|static_cast
argument_list|<
name|HWND
argument_list|>
argument_list|(
name|QGuiApplication
operator|::
name|platformNativeInterface
argument_list|()
operator|->
name|nativeResourceForWindow
argument_list|(
literal|"handle"
argument_list|,
name|window
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_OS_WIN
end_comment
begin_comment
comment|// Make a widget frameless to prevent size constraints of title bars
end_comment
begin_comment
comment|// from interfering (Windows).
end_comment
begin_function
DECL|function|setFrameless
specifier|static
specifier|inline
name|void
name|setFrameless
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
name|Qt
operator|::
name|WindowFlags
name|flags
init|=
name|w
operator|->
name|windowFlags
argument_list|()
decl_stmt|;
name|flags
operator||=
name|Qt
operator|::
name|FramelessWindowHint
expr_stmt|;
name|flags
operator|&=
operator|~
operator|(
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator||
name|Qt
operator|::
name|WindowMinMaxButtonsHint
operator||
name|Qt
operator|::
name|WindowCloseButtonHint
operator|)
expr_stmt|;
name|w
operator|->
name|setWindowFlags
argument_list|(
name|flags
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|generateList
specifier|static
name|QStringList
name|generateList
parameter_list|(
specifier|const
name|QString
modifier|&
name|prefix
parameter_list|,
name|int
name|size
parameter_list|)
block|{
name|QStringList
name|result
decl_stmt|;
name|result
operator|.
name|reserve
argument_list|(
name|size
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
name|result
operator|.
name|append
argument_list|(
name|prefix
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
end_function
begin_class
DECL|class|tst_QListView
class|class
name|tst_QListView
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QListView
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QListView
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|noDelegate
parameter_list|()
function_decl|;
name|void
name|noModel
parameter_list|()
function_decl|;
name|void
name|emptyModel
parameter_list|()
function_decl|;
name|void
name|removeRows
parameter_list|()
function_decl|;
name|void
name|cursorMove
parameter_list|()
function_decl|;
name|void
name|hideRows
parameter_list|()
function_decl|;
name|void
name|moveCursor
parameter_list|()
function_decl|;
name|void
name|moveCursor2
parameter_list|()
function_decl|;
name|void
name|moveCursor3
parameter_list|()
function_decl|;
name|void
name|indexAt
parameter_list|()
function_decl|;
name|void
name|clicked
parameter_list|()
function_decl|;
name|void
name|singleSelectionRemoveRow
parameter_list|()
function_decl|;
name|void
name|singleSelectionRemoveColumn
parameter_list|()
function_decl|;
name|void
name|modelColumn
parameter_list|()
function_decl|;
name|void
name|hideFirstRow
parameter_list|()
function_decl|;
name|void
name|batchedMode
parameter_list|()
function_decl|;
name|void
name|setCurrentIndex
parameter_list|()
function_decl|;
name|void
name|selection_data
parameter_list|()
function_decl|;
name|void
name|selection
parameter_list|()
function_decl|;
name|void
name|scrollTo
parameter_list|()
function_decl|;
name|void
name|scrollBarRanges
parameter_list|()
function_decl|;
name|void
name|scrollBarAsNeeded_data
parameter_list|()
function_decl|;
name|void
name|scrollBarAsNeeded
parameter_list|()
function_decl|;
name|void
name|moveItems
parameter_list|()
function_decl|;
name|void
name|wordWrap
parameter_list|()
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
name|WINVER
operator|>=
literal|0x0500
name|void
name|setCurrentIndexAfterAppendRowCrash
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|emptyItemSize
parameter_list|()
function_decl|;
name|void
name|task203585_selectAll
parameter_list|()
function_decl|;
name|void
name|task228566_infiniteRelayout
parameter_list|()
function_decl|;
name|void
name|task248430_crashWith0SizedItem
parameter_list|()
function_decl|;
name|void
name|task250446_scrollChanged
parameter_list|()
function_decl|;
name|void
name|task196118_visualRegionForSelection
parameter_list|()
function_decl|;
name|void
name|task254449_draggingItemToNegativeCoordinates
parameter_list|()
function_decl|;
name|void
name|keyboardSearch
parameter_list|()
function_decl|;
name|void
name|shiftSelectionWithNonUniformItemSizes
parameter_list|()
function_decl|;
name|void
name|clickOnViewportClearsSelection
parameter_list|()
function_decl|;
name|void
name|task262152_setModelColumnNavigate
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_2233_scrollHiddenItems_data
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_2233_scrollHiddenItems
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_633_changeModelData
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_435_deselectOnViewportClick
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_2678_spacingAndWrappedText
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_5877_skippingItemInPageDownUp
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_9455_wrongScrollbarRanges
parameter_list|()
function_decl|;
name|void
name|styleOptionViewItem
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_12308_artihmeticException
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_12308_wrongFlowLayout
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_21115_scrollToAndHiddenItems_data
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_21115_scrollToAndHiddenItems
parameter_list|()
function_decl|;
name|void
name|draggablePaintPairs_data
parameter_list|()
function_decl|;
name|void
name|draggablePaintPairs
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_21804_hiddenItemsAndScrollingWithKeys_data
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_21804_hiddenItemsAndScrollingWithKeys
parameter_list|()
function_decl|;
name|void
name|spacing_data
parameter_list|()
function_decl|;
name|void
name|spacing
parameter_list|()
function_decl|;
name|void
name|testScrollToWithHidden
parameter_list|()
function_decl|;
name|void
name|testViewOptions
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_39902_mutualScrollBars_data
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_39902_mutualScrollBars
parameter_list|()
function_decl|;
name|void
name|horizontalScrollingByVerticalWheelEvents
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QListView
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QListView
name|obj1
decl_stmt|;
comment|// Movement QListView::movement()
comment|// void QListView::setMovement(Movement)
name|obj1
operator|.
name|setMovement
argument_list|(
name|QListView
operator|::
name|Movement
argument_list|(
name|QListView
operator|::
name|Static
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|Movement
argument_list|(
name|QListView
operator|::
name|Static
argument_list|)
argument_list|,
name|obj1
operator|.
name|movement
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMovement
argument_list|(
name|QListView
operator|::
name|Movement
argument_list|(
name|QListView
operator|::
name|Free
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|Movement
argument_list|(
name|QListView
operator|::
name|Free
argument_list|)
argument_list|,
name|obj1
operator|.
name|movement
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMovement
argument_list|(
name|QListView
operator|::
name|Movement
argument_list|(
name|QListView
operator|::
name|Snap
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|Movement
argument_list|(
name|QListView
operator|::
name|Snap
argument_list|)
argument_list|,
name|obj1
operator|.
name|movement
argument_list|()
argument_list|)
expr_stmt|;
comment|// Flow QListView::flow()
comment|// void QListView::setFlow(Flow)
name|obj1
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|Flow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|Flow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
argument_list|,
name|obj1
operator|.
name|flow
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|Flow
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|Flow
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
argument_list|,
name|obj1
operator|.
name|flow
argument_list|()
argument_list|)
expr_stmt|;
comment|// ResizeMode QListView::resizeMode()
comment|// void QListView::setResizeMode(ResizeMode)
name|obj1
operator|.
name|setResizeMode
argument_list|(
name|QListView
operator|::
name|ResizeMode
argument_list|(
name|QListView
operator|::
name|Fixed
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|ResizeMode
argument_list|(
name|QListView
operator|::
name|Fixed
argument_list|)
argument_list|,
name|obj1
operator|.
name|resizeMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setResizeMode
argument_list|(
name|QListView
operator|::
name|ResizeMode
argument_list|(
name|QListView
operator|::
name|Adjust
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|ResizeMode
argument_list|(
name|QListView
operator|::
name|Adjust
argument_list|)
argument_list|,
name|obj1
operator|.
name|resizeMode
argument_list|()
argument_list|)
expr_stmt|;
comment|// LayoutMode QListView::layoutMode()
comment|// void QListView::setLayoutMode(LayoutMode)
name|obj1
operator|.
name|setLayoutMode
argument_list|(
name|QListView
operator|::
name|LayoutMode
argument_list|(
name|QListView
operator|::
name|SinglePass
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|LayoutMode
argument_list|(
name|QListView
operator|::
name|SinglePass
argument_list|)
argument_list|,
name|obj1
operator|.
name|layoutMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setLayoutMode
argument_list|(
name|QListView
operator|::
name|LayoutMode
argument_list|(
name|QListView
operator|::
name|Batched
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|LayoutMode
argument_list|(
name|QListView
operator|::
name|Batched
argument_list|)
argument_list|,
name|obj1
operator|.
name|layoutMode
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QListView::spacing()
comment|// void QListView::setSpacing(int)
name|obj1
operator|.
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|spacing
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setSpacing
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MIN
argument_list|,
name|obj1
operator|.
name|spacing
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setSpacing
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|INT_MAX
argument_list|,
name|obj1
operator|.
name|spacing
argument_list|()
argument_list|)
expr_stmt|;
comment|// ViewMode QListView::viewMode()
comment|// void QListView::setViewMode(ViewMode)
name|obj1
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ViewMode
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|ViewMode
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
argument_list|,
name|obj1
operator|.
name|viewMode
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QListView
operator|::
name|ViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
argument_list|,
name|obj1
operator|.
name|viewMode
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QListView::modelColumn()
comment|// void QListView::setModelColumn(int)
name|obj1
operator|.
name|setModelColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|modelColumn
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setModelColumn
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|modelColumn
argument_list|()
argument_list|)
expr_stmt|;
comment|// Less than 0 => 0
name|obj1
operator|.
name|setModelColumn
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|modelColumn
argument_list|()
argument_list|)
expr_stmt|;
comment|// No model => 0
comment|// bool QListView::uniformItemSizes()
comment|// void QListView::setUniformItemSizes(bool)
name|obj1
operator|.
name|setUniformItemSizes
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|uniformItemSizes
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setUniformItemSizes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|uniformItemSizes
argument_list|()
argument_list|)
expr_stmt|;
comment|// make sure setViewMode() doesn't reset resizeMode
name|obj1
operator|.
name|clearPropertyFlags
argument_list|()
expr_stmt|;
name|obj1
operator|.
name|setResizeMode
argument_list|(
name|QListView
operator|::
name|Adjust
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|resizeMode
argument_list|()
argument_list|,
name|QListView
operator|::
name|Adjust
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setWordWrap
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|wordWrap
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|wordWrap
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|QtTestModel
class|class
name|QtTestModel
super|:
specifier|public
name|QAbstractListModel
block|{
public|public:
DECL|function|QtTestModel
name|QtTestModel
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractListModel
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|colCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|rCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|wrongIndex
argument_list|(
literal|false
argument_list|)
block|{}
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|rCount
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|colCount
return|;
block|}
DECL|function|isEditable
name|bool
name|isEditable
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
literal|true
return|;
block|}
DECL|function|data
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|idx
parameter_list|,
name|int
name|role
parameter_list|)
specifier|const
block|{
if|if
condition|(
operator|!
name|m_icon
operator|.
name|isNull
argument_list|()
operator|&&
name|role
operator|==
name|Qt
operator|::
name|DecorationRole
condition|)
block|{
return|return
name|m_icon
return|;
block|}
if|if
condition|(
name|role
operator|!=
name|Qt
operator|::
name|DisplayRole
condition|)
return|return
name|QVariant
argument_list|()
return|;
if|if
condition|(
name|idx
operator|.
name|row
argument_list|()
operator|<
literal|0
operator|||
name|idx
operator|.
name|column
argument_list|()
operator|<
literal|0
operator|||
name|idx
operator|.
name|column
argument_list|()
operator|>=
name|colCount
operator|||
name|idx
operator|.
name|row
argument_list|()
operator|>=
name|rCount
condition|)
block|{
name|wrongIndex
operator|=
literal|true
expr_stmt|;
name|qWarning
argument_list|(
literal|"got invalid modelIndex %d/%d"
argument_list|,
name|idx
operator|.
name|row
argument_list|()
argument_list|,
name|idx
operator|.
name|column
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|QString
operator|::
name|number
argument_list|(
name|idx
operator|.
name|row
argument_list|()
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|idx
operator|.
name|column
argument_list|()
argument_list|)
return|;
block|}
DECL|function|removeLastRow
name|void
name|removeLastRow
parameter_list|()
block|{
name|beginRemoveRows
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|rCount
operator|-
literal|2
argument_list|,
name|rCount
operator|-
literal|1
argument_list|)
expr_stmt|;
operator|--
name|rCount
expr_stmt|;
name|endRemoveRows
argument_list|()
expr_stmt|;
block|}
DECL|function|removeAllRows
name|void
name|removeAllRows
parameter_list|()
block|{
name|beginRemoveRows
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
literal|0
argument_list|,
name|rCount
operator|-
literal|1
argument_list|)
expr_stmt|;
name|rCount
operator|=
literal|0
expr_stmt|;
name|endRemoveRows
argument_list|()
expr_stmt|;
block|}
DECL|function|setDataIcon
name|void
name|setDataIcon
parameter_list|(
specifier|const
name|QIcon
modifier|&
name|icon
parameter_list|)
block|{
name|m_icon
operator|=
name|icon
expr_stmt|;
block|}
DECL|member|colCount
DECL|member|rCount
name|int
name|colCount
decl_stmt|,
name|rCount
decl_stmt|;
DECL|member|m_icon
name|QIcon
name|m_icon
decl_stmt|;
DECL|member|wrongIndex
specifier|mutable
name|bool
name|wrongIndex
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QListView
name|tst_QListView
operator|::
name|tst_QListView
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QListView
name|tst_QListView
operator|::
name|~
name|tst_QListView
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QListView
operator|::
name|initTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QListView
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QListView
operator|::
name|init
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//disable magic for WindowsCE
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QListView
operator|::
name|cleanup
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|QApplication
operator|::
name|topLevelWidgets
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noDelegate
name|void
name|tst_QListView
operator|::
name|noDelegate
parameter_list|()
block|{
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|rCount
operator|=
name|model
operator|.
name|colCount
operator|=
literal|10
expr_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noModel
name|void
name|tst_QListView
operator|::
name|noModel
parameter_list|()
block|{
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyModel
name|void
name|tst_QListView
operator|::
name|emptyModel
parameter_list|()
block|{
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows
name|void
name|tst_QListView
operator|::
name|removeRows
parameter_list|()
block|{
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|rCount
operator|=
name|model
operator|.
name|colCount
operator|=
literal|10
expr_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|model
operator|.
name|removeLastRow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeAllRows
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|model
operator|.
name|wrongIndex
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cursorMove
name|void
name|tst_QListView
operator|::
name|cursorMove
parameter_list|()
block|{
name|int
name|rows
init|=
literal|6
operator|*
literal|6
decl_stmt|;
name|int
name|columns
init|=
literal|6
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|)
decl_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|QListView
name|view
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|columns
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QString
name|postfix
init|=
name|QLatin1Char
argument_list|(
literal|','
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|j
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|']'
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModelColumn
argument_list|(
name|j
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rows
condition|;
operator|++
name|i
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|index
argument_list|,
name|QLatin1Char
argument_list|(
literal|'['
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|+
name|postfix
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
block|}
name|QSize
name|cellsize
argument_list|(
literal|60
argument_list|,
literal|25
argument_list|)
decl_stmt|;
name|int
name|gap
init|=
literal|1
decl_stmt|;
comment|// compensate for the scrollbars
name|int
name|displayColumns
init|=
literal|6
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
operator|(
name|displayColumns
operator|+
name|gap
operator|)
operator|*
name|cellsize
operator|.
name|width
argument_list|()
argument_list|,
name|int
argument_list|(
operator|(
name|ceil
argument_list|(
name|double
argument_list|(
name|rows
argument_list|)
operator|/
name|displayColumns
argument_list|)
operator|+
name|gap
operator|)
operator|*
name|cellsize
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setResizeMode
argument_list|(
name|QListView
operator|::
name|Adjust
argument_list|)
expr_stmt|;
name|view
operator|.
name|setGridSize
argument_list|(
name|cellsize
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|doItemsLayout
argument_list|()
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVector
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
name|keymoves
decl_stmt|;
name|keymoves
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Right
operator|<<
name|Qt
operator|::
name|Key_Right
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Down
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|int
name|displayRow
init|=
name|rows
operator|/
name|displayColumns
operator|-
literal|1
decl_stmt|;
name|int
name|displayColumn
init|=
name|displayColumns
operator|-
operator|(
name|rows
operator|%
name|displayColumns
operator|)
operator|-
literal|1
decl_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|keymoves
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Qt
operator|::
name|Key
name|key
init|=
name|keymoves
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|key
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|key
condition|)
block|{
case|case
name|Qt
operator|::
name|Key_Up
case|:
name|displayRow
operator|=
name|qMax
argument_list|(
literal|0
argument_list|,
name|displayRow
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Down
case|:
name|displayRow
operator|=
name|qMin
argument_list|(
name|rows
operator|/
name|displayColumns
operator|-
literal|1
argument_list|,
name|displayRow
operator|+
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Left
case|:
name|displayColumn
operator|=
name|qMax
argument_list|(
literal|0
argument_list|,
name|displayColumn
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Right
case|:
name|displayColumn
operator|=
name|qMin
argument_list|(
name|displayColumns
operator|-
literal|1
argument_list|,
name|displayColumn
operator|+
literal|1
argument_list|)
expr_stmt|;
break|break;
default|default:
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|row
init|=
name|displayRow
operator|*
name|displayColumns
operator|+
name|displayColumn
decl_stmt|;
name|int
name|column
init|=
name|columns
operator|-
literal|1
decl_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
operator|.
name|row
argument_list|()
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
operator|.
name|column
argument_list|()
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|hideRows
name|void
name|tst_QListView
operator|::
name|hideRows
parameter_list|()
block|{
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|rCount
operator|=
name|model
operator|.
name|colCount
operator|=
literal|10
expr_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// hide then show
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// re show same row
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// double hidding
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// show in per-item mode, then hide the first row
name|view
operator|.
name|setVerticalScrollMode
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|sim
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|root
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"Root row"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
name|root
operator|->
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QLatin1String
argument_list|(
literal|"Row "
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sim
operator|.
name|appendRow
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|sim
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|root
operator|->
name|index
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveCursor
name|void
name|tst_QListView
operator|::
name|moveCursor
parameter_list|()
block|{
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|rCount
operator|=
name|model
operator|.
name|colCount
operator|=
literal|10
expr_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|QMoveCursorListView
class|class
name|QMoveCursorListView
super|:
specifier|public
name|QListView
block|{
public|public:
DECL|function|QMoveCursorListView
name|QMoveCursorListView
parameter_list|()
member_init_list|:
name|QListView
argument_list|()
block|{}
comment|// enum CursorAction and moveCursor() are protected in QListView.
DECL|enum|CursorAction
DECL|enumerator|MoveUp
DECL|enumerator|MoveDown
DECL|enumerator|MoveLeft
DECL|enumerator|MoveRight
enum|enum
name|CursorAction
block|{
name|MoveUp
block|,
name|MoveDown
block|,
name|MoveLeft
block|,
name|MoveRight
block|,
DECL|enumerator|MoveHome
DECL|enumerator|MoveEnd
DECL|enumerator|MovePageUp
DECL|enumerator|MovePageDown
name|MoveHome
block|,
name|MoveEnd
block|,
name|MovePageUp
block|,
name|MovePageDown
block|,
DECL|enumerator|MoveNext
DECL|enumerator|MovePrevious
name|MoveNext
block|,
name|MovePrevious
block|}
enum|;
DECL|function|doMoveCursor
name|QModelIndex
name|doMoveCursor
parameter_list|(
name|QMoveCursorListView
operator|::
name|CursorAction
name|action
parameter_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
parameter_list|)
block|{
return|return
name|QListView
operator|::
name|moveCursor
argument_list|(
operator|(
name|QListView
operator|::
name|CursorAction
operator|)
name|action
argument_list|,
name|modifiers
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|moveCursor2
name|void
name|tst_QListView
operator|::
name|moveCursor2
parameter_list|()
block|{
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|colCount
operator|=
literal|1
expr_stmt|;
name|model
operator|.
name|rCount
operator|=
literal|100
expr_stmt|;
name|QPixmap
name|pm
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
decl_stmt|;
name|pm
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|model
operator|.
name|setDataIcon
argument_list|(
name|QIcon
argument_list|(
name|pm
argument_list|)
argument_list|)
expr_stmt|;
name|QMoveCursorListView
name|vu
decl_stmt|;
name|vu
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|vu
operator|.
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|36
argument_list|,
literal|48
argument_list|)
argument_list|)
expr_stmt|;
name|vu
operator|.
name|setGridSize
argument_list|(
name|QSize
argument_list|(
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
expr_stmt|;
comment|//Standard framesize is 1. If Framesize> 2 increase size
name|int
name|frameSize
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_DefaultFrameWidth
argument_list|)
decl_stmt|;
name|vu
operator|.
name|resize
argument_list|(
literal|300
operator|+
name|frameSize
operator|*
literal|2
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|vu
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|vu
operator|.
name|setMovement
argument_list|(
name|QListView
operator|::
name|Static
argument_list|)
expr_stmt|;
name|vu
operator|.
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|vu
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|vu
operator|.
name|setLayoutMode
argument_list|(
name|QListView
operator|::
name|Batched
argument_list|)
expr_stmt|;
name|vu
operator|.
name|show
argument_list|()
expr_stmt|;
name|vu
operator|.
name|selectionModel
argument_list|()
operator|->
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectCurrent
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|vu
operator|.
name|doMoveCursor
argument_list|(
name|QMoveCursorListView
operator|::
name|MoveHome
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|idx
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|idx
operator|=
name|vu
operator|.
name|doMoveCursor
argument_list|(
name|QMoveCursorListView
operator|::
name|MoveDown
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|idx
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveCursor3
name|void
name|tst_QListView
operator|::
name|moveCursor3
parameter_list|()
block|{
comment|//this tests is for task 159792
comment|//it tests that navigation works even with non uniform item sizes
name|QListView
name|view
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|i1
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"First item, long name"
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|i2
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"2nd item"
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|i3
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"Third item, long name"
argument_list|)
decl_stmt|;
name|i1
operator|->
name|setSizeHint
argument_list|(
name|QSize
argument_list|(
literal|200
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|i1
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|i2
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|i3
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|QListViewShowEventListener
class|class
name|QListViewShowEventListener
super|:
specifier|public
name|QListView
block|{
public|public:
DECL|function|QListViewShowEventListener
name|QListViewShowEventListener
parameter_list|()
member_init_list|:
name|QListView
argument_list|()
block|{
name|m_shown
operator|=
literal|false
expr_stmt|;
block|}
DECL|function|showEvent
specifier|virtual
name|void
name|showEvent
parameter_list|(
name|QShowEvent
modifier|*
comment|/*e*/
parameter_list|)
block|{
name|int
name|columnwidth
init|=
name|sizeHintForColumn
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QSize
name|sz
init|=
name|sizeHintForIndex
argument_list|(
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
comment|// This should retrieve a model index in the 2nd section
name|m_index
operator|=
name|indexAt
argument_list|(
name|QPoint
argument_list|(
name|columnwidth
operator|+
literal|2
argument_list|,
name|sz
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m_shown
operator|=
literal|true
expr_stmt|;
block|}
DECL|member|m_index
name|QModelIndex
name|m_index
decl_stmt|;
DECL|member|m_shown
name|bool
name|m_shown
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|indexAt
name|void
name|tst_QListView
operator|::
name|indexAt
parameter_list|()
block|{
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|rCount
operator|=
literal|2
expr_stmt|;
name|model
operator|.
name|colCount
operator|=
literal|1
expr_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
expr_stmt|;
name|QSize
name|sz
init|=
name|view
operator|.
name|sizeHintForIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QModelIndex
name|index
decl_stmt|;
name|index
operator|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
name|sz
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|2
operator|*
name|sz
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check when peeking out of the viewport bounds
name|index
operator|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|rCount
operator|=
literal|30
expr_stmt|;
name|QListViewShowEventListener
name|view2
decl_stmt|;
comment|// Set the height to a small enough value so that it wraps to a new section.
name|view2
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|view2
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view2
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
expr_stmt|;
name|view2
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
expr_stmt|;
name|view2
operator|.
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// We really want to make sure it is shown, because the layout won't be known until it is shown
name|view2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view2
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view2
operator|.
name|m_shown
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view2
operator|.
name|m_index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view2
operator|.
name|m_index
operator|.
name|row
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clicked
name|void
name|tst_QListView
operator|::
name|clicked
parameter_list|()
block|{
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|rCount
operator|=
literal|10
expr_stmt|;
name|model
operator|.
name|colCount
operator|=
literal|2
expr_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QModelIndex
name|firstIndex
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|firstIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|itemHeight
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|firstIndex
argument_list|)
operator|.
name|height
argument_list|()
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
name|itemHeight
operator|*
operator|(
name|model
operator|.
name|rCount
operator|+
literal|1
operator|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rCount
condition|;
operator|++
name|i
control|)
block|{
name|QPoint
name|p
argument_list|(
literal|5
argument_list|,
literal|1
operator|+
name|itemHeight
operator|*
name|i
argument_list|)
decl_stmt|;
name|QModelIndex
name|index
init|=
name|view
operator|.
name|indexAt
argument_list|(
name|p
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
condition|)
continue|continue;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|singleSelectionRemoveRow
name|void
name|tst_QListView
operator|::
name|singleSelectionRemoveRow
parameter_list|()
block|{
name|QStringList
name|items
decl_stmt|;
name|items
operator|<<
literal|"item1"
operator|<<
literal|"item2"
operator|<<
literal|"item3"
operator|<<
literal|"item4"
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|items
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|index
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|currentIndex
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"item2"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|currentIndex
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"item3"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|currentIndex
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"item3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|singleSelectionRemoveColumn
name|void
name|tst_QListView
operator|::
name|singleSelectionRemoveColumn
parameter_list|()
block|{
name|int
name|numCols
init|=
literal|3
decl_stmt|;
name|int
name|numRows
init|=
literal|3
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
name|numCols
argument_list|,
name|numRows
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|numRows
condition|;
operator|++
name|r
control|)
block|{
specifier|const
name|QString
name|prefix
init|=
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|','
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|numCols
condition|;
operator|++
name|c
control|)
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|,
name|prefix
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|index
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|currentIndex
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1,1"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeColumn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|currentIndex
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1,0"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|index
operator|=
name|view
operator|.
name|currentIndex
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1,2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|modelColumn
name|void
name|tst_QListView
operator|::
name|modelColumn
parameter_list|()
block|{
name|int
name|numCols
init|=
literal|3
decl_stmt|;
name|int
name|numRows
init|=
literal|3
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
name|numCols
argument_list|,
name|numRows
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|numRows
condition|;
operator|++
name|r
control|)
block|{
specifier|const
name|QString
name|prefix
init|=
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|','
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|numCols
condition|;
operator|++
name|c
control|)
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|,
name|prefix
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|//
comment|// Set and get with a valid model
comment|//
comment|// Default is column 0
name|QCOMPARE
argument_list|(
name|view
operator|.
name|modelColumn
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModelColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|modelColumn
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModelColumn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|modelColumn
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModelColumn
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|modelColumn
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Out of bound cases should not modify the modelColumn
name|view
operator|.
name|setModelColumn
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|modelColumn
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModelColumn
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|modelColumn
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// See if it displays the right column using indexAt()...
name|view
operator|.
name|resize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
literal|3
condition|;
operator|++
name|c
control|)
block|{
name|view
operator|.
name|setModelColumn
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|int
name|startrow
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|view
operator|.
name|height
argument_list|()
condition|;
operator|++
name|y
control|)
block|{
name|QModelIndex
name|idx
init|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
name|y
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|idx
operator|.
name|row
argument_list|()
operator|==
name|startrow
operator|+
literal|1
condition|)
operator|++
name|startrow
expr_stmt|;
elseif|else
if|if
condition|(
name|idx
operator|.
name|row
argument_list|()
operator|==
operator|-
literal|1
condition|)
break|break;
name|QCOMPARE
argument_list|(
name|idx
operator|.
name|row
argument_list|()
argument_list|,
name|startrow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|idx
operator|.
name|column
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|startrow
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|hideFirstRow
name|void
name|tst_QListView
operator|::
name|hideFirstRow
parameter_list|()
block|{
name|QStringList
name|items
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
operator|++
name|i
control|)
name|items
operator|<<
literal|"item"
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|items
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setUniformItemSizes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|modelIndexCount
specifier|static
name|int
name|modelIndexCount
parameter_list|(
specifier|const
name|QAbstractItemView
modifier|*
name|view
parameter_list|)
block|{
name|QBitArray
name|ba
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|,
name|height
init|=
name|view
operator|->
name|height
argument_list|()
init|;
name|y
operator|<
name|height
condition|;
operator|++
name|y
control|)
block|{
specifier|const
name|QModelIndex
name|idx
init|=
name|view
operator|->
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
name|y
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|idx
operator|.
name|isValid
argument_list|()
condition|)
break|break;
if|if
condition|(
name|idx
operator|.
name|row
argument_list|()
operator|>=
name|ba
operator|.
name|size
argument_list|()
condition|)
name|ba
operator|.
name|resize
argument_list|(
name|idx
operator|.
name|row
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|ba
operator|.
name|setBit
argument_list|(
name|idx
operator|.
name|row
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
name|ba
operator|.
name|size
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|batchedMode
name|void
name|tst_QListView
operator|::
name|batchedMode
parameter_list|()
block|{
specifier|const
name|int
name|rowCount
init|=
literal|3
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
name|generateList
argument_list|(
name|QLatin1String
argument_list|(
literal|"item "
argument_list|)
argument_list|,
name|rowCount
argument_list|)
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setWindowTitle
argument_list|(
name|QTest
operator|::
name|currentTestFunction
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setUniformItemSizes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setLayoutMode
argument_list|(
name|QListView
operator|::
name|Batched
argument_list|)
expr_stmt|;
name|view
operator|.
name|setBatchSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|modelIndexCount
argument_list|(
operator|&
name|view
argument_list|)
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
comment|// Test the dynamic listview too.
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setLayoutMode
argument_list|(
name|QListView
operator|::
name|Batched
argument_list|)
expr_stmt|;
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
expr_stmt|;
name|view
operator|.
name|setBatchSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|modelIndexCount
argument_list|(
operator|&
name|view
argument_list|)
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentIndex
name|void
name|tst_QListView
operator|::
name|setCurrentIndex
parameter_list|()
block|{
name|QStringListModel
name|model
argument_list|(
name|generateList
argument_list|(
name|QLatin1String
argument_list|(
literal|"item "
argument_list|)
argument_list|,
literal|20
argument_list|)
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|220
argument_list|,
literal|182
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|pass
init|=
literal|0
init|;
name|pass
operator|<
literal|2
condition|;
operator|++
name|pass
control|)
block|{
name|view
operator|.
name|setFlow
argument_list|(
name|pass
operator|==
literal|0
condition|?
name|QListView
operator|::
name|TopToBottom
else|:
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|QScrollBar
modifier|*
name|sb
init|=
name|pass
operator|==
literal|0
condition|?
name|view
operator|.
name|verticalScrollBar
argument_list|()
else|:
name|view
operator|.
name|horizontalScrollBar
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QSize
argument_list|>
name|gridsizes
decl_stmt|;
name|gridsizes
operator|<<
name|QSize
argument_list|()
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|38
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|ig
init|=
literal|0
init|;
name|ig
operator|<
name|gridsizes
operator|.
name|count
argument_list|()
condition|;
operator|++
name|ig
control|)
block|{
if|if
condition|(
name|pass
operator|==
literal|1
operator|&&
operator|!
name|gridsizes
operator|.
name|at
argument_list|(
name|ig
argument_list|)
operator|.
name|isValid
argument_list|()
condition|)
comment|// the width of an item varies, so it might jump two times
continue|continue;
name|view
operator|.
name|setGridSize
argument_list|(
name|gridsizes
operator|.
name|at
argument_list|(
name|ig
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|offset
init|=
name|sb
operator|->
name|value
argument_list|()
decl_stmt|;
comment|// first "scroll" down, verify that we scroll one step at a time
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
operator|++
name|i
control|)
block|{
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|idx
argument_list|)
expr_stmt|;
if|if
condition|(
name|offset
operator|!=
name|sb
operator|->
name|value
argument_list|()
condition|)
block|{
comment|// If it has scrolled, it should have scrolled only by one.
name|QCOMPARE
argument_list|(
name|sb
operator|->
name|value
argument_list|()
argument_list|,
name|offset
operator|+
literal|1
argument_list|)
expr_stmt|;
operator|++
name|offset
expr_stmt|;
block|}
comment|//QTest::qWait(50);
block|}
operator|--
name|i
expr_stmt|;
comment|// item 20 does not exist
comment|// and then "scroll" up, verify that we scroll one step at a time
for|for
control|(
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|idx
argument_list|)
expr_stmt|;
if|if
condition|(
name|offset
operator|!=
name|sb
operator|->
name|value
argument_list|()
condition|)
block|{
comment|// If it has scrolled, it should have scrolled only by one.
name|QCOMPARE
argument_list|(
name|sb
operator|->
name|value
argument_list|()
argument_list|,
name|offset
operator|-
literal|1
argument_list|)
expr_stmt|;
operator|--
name|offset
expr_stmt|;
block|}
comment|//QTest::qWait(50);
block|}
block|}
block|}
block|}
end_function
begin_class
DECL|class|PublicListView
class|class
name|PublicListView
super|:
specifier|public
name|QListView
block|{
public|public:
DECL|function|PublicListView
name|PublicListView
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QListView
argument_list|(
name|parent
argument_list|)
block|{      }
DECL|function|setSelection
name|void
name|setSelection
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
name|flags
parameter_list|)
block|{
name|QListView
operator|::
name|setSelection
argument_list|(
name|rect
argument_list|,
name|flags
argument_list|)
expr_stmt|;
block|}
DECL|function|contentsSize
name|QSize
name|contentsSize
parameter_list|()
specifier|const
block|{
return|return
name|QListView
operator|::
name|contentsSize
argument_list|()
return|;
block|}
DECL|function|setPositionForIndex
name|void
name|setPositionForIndex
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
block|{
name|QListView
operator|::
name|setPositionForIndex
argument_list|(
name|pos
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
DECL|function|viewOptions
name|QStyleOptionViewItem
name|viewOptions
parameter_list|()
specifier|const
block|{
return|return
name|QListView
operator|::
name|viewOptions
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|TestDelegate
class|class
name|TestDelegate
super|:
specifier|public
name|QItemDelegate
block|{
public|public:
DECL|function|TestDelegate
name|TestDelegate
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QItemDelegate
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_sizeHint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
block|{}
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|(
specifier|const
name|QStyleOptionViewItem
modifier|&
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|m_sizeHint
return|;
block|}
DECL|member|m_sizeHint
name|QSize
name|m_sizeHint
decl_stmt|;
block|}
class|;
end_class
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_function
DECL|function|selection_data
name|void
name|tst_QListView
operator|::
name|selection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"itemCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"viewMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"wrapping"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"spacing"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"gridSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"hiddenRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"selectionRect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"expectedItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select all"
argument_list|)
operator|<<
literal|4
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|false
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|200
argument_list|)
comment|// selection rectangle
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
expr_stmt|;
comment|// expected items
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select below, (on viewport)"
argument_list|)
operator|<<
literal|4
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|false
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|250
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
name|IntList
argument_list|()
expr_stmt|;
comment|// expected items
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select below 2, (on viewport)"
argument_list|)
operator|<<
literal|4
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|10
argument_list|,
literal|250
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
name|IntList
argument_list|()
expr_stmt|;
comment|// expected items
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select to the right, (on viewport)"
argument_list|)
operator|<<
literal|40
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|300
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
name|IntList
argument_list|()
expr_stmt|;
comment|// expected items
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select to the right 2, (on viewport)"
argument_list|)
operator|<<
literal|40
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|300
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|300
argument_list|)
comment|// selection rectangle
operator|<<
name|IntList
argument_list|()
expr_stmt|;
comment|// expected items
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
comment|// depending on whether the display is double-pixeld, we need
comment|// to click at a different position
name|bool
name|doubledSize
init|=
literal|false
decl_stmt|;
name|int
name|dpi
init|=
name|GetDeviceCaps
argument_list|(
name|GetDC
argument_list|(
literal|0
argument_list|)
argument_list|,
name|LOGPIXELSX
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|dpi
operator|<
literal|1000
operator|)
operator|&&
operator|(
name|dpi
operator|>
literal|0
operator|)
condition|)
block|{
name|doubledSize
operator|=
literal|true
expr_stmt|;
block|}
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select inside contents, (on viewport)"
argument_list|)
operator|<<
literal|35
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
name|doubledSize
condition|?
literal|350
else|:
literal|175
argument_list|,
name|doubledSize
condition|?
literal|550
else|:
literal|275
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
name|IntList
argument_list|()
expr_stmt|;
comment|// expected items
else|#
directive|else
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select inside contents, (on viewport)"
argument_list|)
operator|<<
literal|35
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|175
argument_list|,
literal|275
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
name|IntList
argument_list|()
expr_stmt|;
comment|// expected items
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select a tall rect in LeftToRight flow, wrap items"
argument_list|)
operator|<<
literal|70
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|90
argument_list|,
literal|90
argument_list|,
literal|1
argument_list|,
literal|100
argument_list|)
comment|// selection rectangle
operator|<<
operator|(
name|IntList
argument_list|()
comment|// expected items
operator|<<
literal|11
operator|<<
literal|12
operator|<<
literal|13
operator|<<
literal|14
operator|<<
literal|15
operator|<<
literal|16
operator|<<
literal|17
operator|<<
literal|18
operator|<<
literal|19
operator|<<
literal|20
operator|<<
literal|21
operator|<<
literal|22
operator|<<
literal|23
operator|<<
literal|24
operator|<<
literal|25
operator|<<
literal|26
operator|<<
literal|27
operator|<<
literal|28
operator|<<
literal|29
operator|<<
literal|30
operator|<<
literal|31
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select a wide rect in LeftToRight, wrap items"
argument_list|)
operator|<<
literal|70
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|90
argument_list|,
literal|90
argument_list|,
literal|200
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
operator|(
name|IntList
argument_list|()
comment|// expected items
operator|<<
literal|11
operator|<<
literal|12
operator|<<
literal|13
operator|<<
literal|14
operator|<<
literal|15
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select a wide negative rect in LeftToRight flow, wrap items"
argument_list|)
operator|<<
literal|70
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|290
argument_list|,
literal|90
argument_list|,
operator|-
literal|200
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
operator|(
name|IntList
argument_list|()
comment|// expected items
operator|<<
literal|11
operator|<<
literal|12
operator|<<
literal|13
operator|<<
literal|14
operator|<<
literal|15
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select a tall rect in TopToBottom flow, wrap items"
argument_list|)
operator|<<
literal|70
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|90
argument_list|,
literal|90
argument_list|,
literal|1
argument_list|,
literal|100
argument_list|)
comment|// selection rectangle
operator|<<
operator|(
name|IntList
argument_list|()
comment|// expected items
operator|<<
literal|11
operator|<<
literal|12
operator|<<
literal|13
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select a tall negative rect in TopToBottom flow, wrap items"
argument_list|)
operator|<<
literal|70
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|90
argument_list|,
literal|190
argument_list|,
literal|1
argument_list|,
operator|-
literal|100
argument_list|)
comment|// selection rectangle
operator|<<
operator|(
name|IntList
argument_list|()
comment|// expected items
operator|<<
literal|11
operator|<<
literal|12
operator|<<
literal|13
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"select a wide rect in TopToBottom, wrap items"
argument_list|)
operator|<<
literal|70
comment|// itemCount
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|true
comment|// wrapping
operator|<<
literal|0
comment|// spacing
operator|<<
name|QSize
argument_list|()
comment|// gridSize
operator|<<
name|IntList
argument_list|()
comment|// hiddenRows
operator|<<
name|QRect
argument_list|(
literal|90
argument_list|,
literal|90
argument_list|,
literal|100
argument_list|,
literal|1
argument_list|)
comment|// selection rectangle
operator|<<
operator|(
name|IntList
argument_list|()
comment|// expected items
operator|<<
literal|20
operator|<<
literal|30
operator|<<
literal|11
operator|<<
literal|21
operator|<<
literal|31
operator|<<
literal|12
operator|<<
literal|22
operator|<<
literal|13
operator|<<
literal|23
operator|<<
literal|14
operator|<<
literal|24
operator|<<
literal|15
operator|<<
literal|25
operator|<<
literal|16
operator|<<
literal|26
operator|<<
literal|17
operator|<<
literal|27
operator|<<
literal|18
operator|<<
literal|28
operator|<<
literal|19
operator|<<
literal|29
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selection
name|void
name|tst_QListView
operator|::
name|selection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|itemCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|viewMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|flow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|wrapping
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|spacing
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|gridSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|hiddenRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|selectionRect
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|expectedItems
argument_list|)
expr_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|PublicListView
name|v
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|colCount
operator|=
literal|1
expr_stmt|;
name|model
operator|.
name|rCount
operator|=
name|itemCount
expr_stmt|;
comment|// avoid scrollbar size mismatches among different styles
name|v
operator|.
name|setHorizontalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|v
operator|.
name|setVerticalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|v
operator|.
name|setItemDelegate
argument_list|(
operator|new
name|TestDelegate
argument_list|(
operator|&
name|v
argument_list|)
argument_list|)
expr_stmt|;
name|v
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|v
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ViewMode
argument_list|(
name|viewMode
argument_list|)
argument_list|)
expr_stmt|;
name|v
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|Flow
argument_list|(
name|flow
argument_list|)
argument_list|)
expr_stmt|;
name|v
operator|.
name|setWrapping
argument_list|(
name|wrapping
argument_list|)
expr_stmt|;
name|v
operator|.
name|setResizeMode
argument_list|(
name|QListView
operator|::
name|Adjust
argument_list|)
expr_stmt|;
name|v
operator|.
name|setSpacing
argument_list|(
name|spacing
argument_list|)
expr_stmt|;
if|if
condition|(
name|gridSize
operator|.
name|isValid
argument_list|()
condition|)
name|v
operator|.
name|setGridSize
argument_list|(
name|gridSize
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|hiddenRows
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|v
operator|.
name|setRowHidden
argument_list|(
name|hiddenRows
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
comment|// If the device is double-pixeled then the scrollbars become
comment|// 10 pixels wider than normal (Windows Style: 16, Windows Mobile Style: 26).
comment|// So we have to make the window slightly bigger to have the same count of
comment|// items in each row of the list view like in the other styles.
specifier|static
specifier|const
name|int
name|dpi
init|=
operator|::
name|GetDeviceCaps
argument_list|(
name|GetDC
argument_list|(
literal|0
argument_list|)
argument_list|,
name|LOGPIXELSX
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|dpi
operator|<
literal|1000
operator|)
operator|&&
operator|(
name|dpi
operator|>
literal|0
operator|)
condition|)
name|v
operator|.
name|resize
argument_list|(
literal|535
argument_list|,
literal|535
argument_list|)
expr_stmt|;
else|#
directive|else
name|v
operator|.
name|resize
argument_list|(
literal|525
argument_list|,
literal|525
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|v
operator|.
name|setSelection
argument_list|(
name|selectionRect
argument_list|,
name|QItemSelectionModel
operator|::
name|ClearAndSelect
argument_list|)
expr_stmt|;
name|QModelIndexList
name|selected
init|=
name|v
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
name|expectedItems
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selected
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QVERIFY
argument_list|(
name|expectedItems
operator|.
name|contains
argument_list|(
name|selected
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|row
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|scrollTo
name|void
name|tst_QListView
operator|::
name|scrollTo
parameter_list|()
block|{
name|QWidget
name|topLevel
decl_stmt|;
name|setFrameless
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
name|QListView
name|lv
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
operator|&
name|lv
argument_list|)
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
name|list
operator|<<
literal|"Short item 1"
expr_stmt|;
name|list
operator|<<
literal|"Short item 2"
expr_stmt|;
name|list
operator|<<
literal|"Short item 3"
expr_stmt|;
name|list
operator|<<
literal|"Short item 4"
expr_stmt|;
name|list
operator|<<
literal|"Short item 5"
expr_stmt|;
name|list
operator|<<
literal|"Short item 6"
expr_stmt|;
name|list
operator|<<
literal|"Begin This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\n"
literal|"This is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item\nThis is a very long item End\n"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setFixedSize
argument_list|(
literal|110
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
comment|//by default, the list view scrolls per item and has no wrapping
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|)
decl_stmt|;
comment|//we save the size of the item for later comparisons
specifier|const
name|QSize
name|itemsize
init|=
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|size
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|itemsize
operator|.
name|height
argument_list|()
operator|>
name|lv
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|itemsize
operator|.
name|width
argument_list|()
operator|>
name|lv
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
comment|//we click the item
name|QPoint
name|p
init|=
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|p
argument_list|)
expr_stmt|;
comment|//let's wait because the scrolling is delayed
name|QTest
operator|::
name|qWait
argument_list|(
name|QApplication
operator|::
name|doubleClickInterval
argument_list|()
operator|+
literal|150
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|y
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//we scroll down. As the item is to tall for the view, it will disappear
name|QTest
operator|::
name|keyClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|y
argument_list|()
argument_list|,
operator|-
name|itemsize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|y
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//Let's enable wrapping
name|lv
operator|.
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|lv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//let's scroll to the beginning
comment|//we click the item
name|p
operator|=
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|center
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|p
argument_list|)
expr_stmt|;
comment|//let's wait because the scrolling is delayed
name|QTest
operator|::
name|qWait
argument_list|(
name|QApplication
operator|::
name|doubleClickInterval
argument_list|()
operator|+
literal|150
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//we scroll right. As the item is too wide for the view, it will disappear
name|QTest
operator|::
name|keyClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
operator|-
name|itemsize
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setWrapping
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|//let the layout happen
comment|//Let's try with scrolling per pixel
name|lv
operator|.
name|setHorizontalScrollMode
argument_list|(
name|QListView
operator|::
name|ScrollPerPixel
argument_list|)
expr_stmt|;
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//scrolls back to the first item
comment|//we click the item
name|p
operator|=
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|center
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|p
argument_list|)
expr_stmt|;
comment|//let's wait because the scrolling is delayed
name|QTest
operator|::
name|qWait
argument_list|(
name|QApplication
operator|::
name|doubleClickInterval
argument_list|()
operator|+
literal|150
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|y
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//we scroll down. As the item is too tall for the view, it will partially disappear
name|QTest
operator|::
name|keyClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|y
argument_list|()
operator|<
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|y
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|scrollBarRanges
name|void
name|tst_QListView
operator|::
name|scrollBarRanges
parameter_list|()
block|{
specifier|const
name|int
name|rowCount
init|=
literal|10
decl_stmt|;
specifier|const
name|int
name|rowHeight
init|=
literal|20
decl_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|QListView
name|lv
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
operator|&
name|lv
argument_list|)
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rowCount
condition|;
operator|++
name|i
control|)
name|list
operator|<<
name|QLatin1String
argument_list|(
literal|"Item "
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|resize
argument_list|(
literal|250
argument_list|,
literal|130
argument_list|)
expr_stmt|;
name|TestDelegate
modifier|*
name|delegate
init|=
operator|new
name|TestDelegate
argument_list|(
operator|&
name|lv
argument_list|)
decl_stmt|;
name|delegate
operator|->
name|m_sizeHint
operator|=
name|QSize
argument_list|(
literal|100
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setItemDelegate
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|h
init|=
literal|30
init|;
name|h
operator|<=
literal|210
condition|;
operator|++
name|h
control|)
block|{
name|lv
operator|.
name|resize
argument_list|(
literal|250
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// wait for the layout to be done
name|int
name|visibleRowCount
init|=
name|lv
operator|.
name|viewport
argument_list|()
operator|->
name|size
argument_list|()
operator|.
name|height
argument_list|()
operator|/
name|rowHeight
decl_stmt|;
name|int
name|invisibleRowCount
init|=
name|rowCount
operator|-
name|visibleRowCount
decl_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
argument_list|,
name|invisibleRowCount
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|scrollBarAsNeeded_data
name|void
name|tst_QListView
operator|::
name|scrollBarAsNeeded_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"itemCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"horizontalScrollBarVisible"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"verticalScrollBarVisible"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TopToBottom, count:0"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TopToBottom, count:1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TopToBottom, count:20"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
operator|<<
literal|20
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"LeftToRight, count:0"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"LeftToRight, count:1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"LeftToRight, count:20"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
operator|<<
literal|20
operator|<<
name|int
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|scrollBarAsNeeded
name|void
name|tst_QListView
operator|::
name|scrollBarAsNeeded
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|itemCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|flow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|horizontalScrollBarVisible
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|verticalScrollBarVisible
argument_list|)
expr_stmt|;
specifier|const
name|int
name|rowCounts
index|[
literal|3
index|]
init|=
block|{
literal|0
block|,
literal|1
block|,
literal|20
block|}
decl_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|QListView
name|lv
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|lv
operator|.
name|setVerticalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAsNeeded
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setHorizontalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAsNeeded
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setFlow
argument_list|(
operator|(
name|QListView
operator|::
name|Flow
operator|)
name|flow
argument_list|)
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
operator|&
name|lv
argument_list|)
decl_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|resize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|uint
name|r
init|=
literal|0
init|;
name|r
operator|<
sizeof|sizeof
argument_list|(
name|rowCounts
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|int
argument_list|)
condition|;
operator|++
name|r
control|)
block|{
name|QStringList
name|list
decl_stmt|;
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|rowCounts
index|[
name|r
index|]
condition|;
operator|++
name|i
control|)
name|list
operator|<<
name|QLatin1String
argument_list|(
literal|"Item "
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|generateList
argument_list|(
name|QLatin1String
argument_list|(
literal|"Item "
argument_list|)
argument_list|,
name|itemCount
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|lv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|,
name|horizontalScrollBarVisible
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|,
name|verticalScrollBarVisible
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|moveItems
name|void
name|tst_QListView
operator|::
name|moveItems
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
literal|4
condition|;
operator|++
name|r
control|)
block|{
specifier|const
name|QString
name|prefix
init|=
name|QLatin1String
argument_list|(
literal|"standard item ("
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|','
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
literal|4
condition|;
operator|++
name|c
control|)
name|model
operator|.
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QStandardItem
argument_list|(
name|prefix
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|PublicListView
name|view
decl_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setResizeMode
argument_list|(
name|QListView
operator|::
name|Fixed
argument_list|)
expr_stmt|;
name|view
operator|.
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
operator|new
name|TestDelegate
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|model
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
block|{
specifier|const
name|QModelIndex
modifier|&
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
decl_stmt|;
name|view
operator|.
name|setPositionForIndex
argument_list|(
name|QPoint
argument_list|(
name|r
operator|*
literal|75
argument_list|,
name|r
operator|*
literal|75
argument_list|)
argument_list|,
name|idx
argument_list|)
expr_stmt|;
block|}
block|}
name|QCOMPARE
argument_list|(
name|view
operator|.
name|contentsSize
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|275
argument_list|,
literal|275
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|wordWrap
name|void
name|tst_QListView
operator|::
name|wordWrap
parameter_list|()
block|{
name|QListView
name|lv
decl_stmt|;
name|lv
operator|.
name|setVerticalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAsNeeded
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setHorizontalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAsNeeded
argument_list|)
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
operator|&
name|lv
argument_list|)
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
name|list
operator|<<
literal|"Short item 1"
expr_stmt|;
name|list
operator|<<
literal|"Short item 2"
expr_stmt|;
name|list
operator|<<
literal|"Short item 3"
expr_stmt|;
name|list
operator|<<
literal|"Begin\nThis item take severals Lines\nEnd"
expr_stmt|;
name|list
operator|<<
literal|"And this is a very long item very long item this is a very vary vary long item"
literal|"very long very very long long long this is a long item a very long item a very very long item"
expr_stmt|;
name|list
operator|<<
literal|"And this is a second even a little more long very long item very long item this is a very vary vary long item"
literal|"very long very very long long long this is a long item a very long item a very very long item"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|list
operator|<<
literal|"rzeofig zerig fslfgj smdlfkgj qmsdlfj amrzriougf qsla zrg fgsdf gsdfg sdfgs dfg sdfgcvb sdfg qsdjfh qsdfjklh qs"
expr_stmt|;
name|list
operator|<<
literal|"Short item"
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setFixedSize
argument_list|(
literal|400
argument_list|,
literal|150
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
name|Q_OS_BLACKBERRY
name|QFont
name|font
init|=
name|lv
operator|.
name|font
argument_list|()
decl_stmt|;
comment|// On BB10 the root window is stretched over the whole screen
comment|// This makes sure that the text will be long enough to produce
comment|// a vertical scrollbar
name|font
operator|.
name|setPixelSize
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|lv
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|lv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINRT
argument_list|)
end_if
begin_class
DECL|class|SetCurrentIndexAfterAppendRowCrashDialog
class|class
name|SetCurrentIndexAfterAppendRowCrashDialog
super|:
specifier|public
name|QDialog
block|{
name|Q_OBJECT
public|public:
DECL|function|SetCurrentIndexAfterAppendRowCrashDialog
name|SetCurrentIndexAfterAppendRowCrashDialog
parameter_list|()
block|{
if|#
directive|if
name|WINVER
operator|>=
literal|0x0500
name|listView
operator|=
operator|new
name|QListView
argument_list|()
expr_stmt|;
name|listView
operator|->
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|model
operator|=
operator|new
name|QStandardItemModel
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|listView
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|timer
operator|=
operator|new
name|QTimer
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|timer
argument_list|,
name|SIGNAL
argument_list|(
name|timeout
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|buttonClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|timer
operator|->
name|start
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|DWORD
name|lParam
init|=
literal|0xFFFFFFFC
comment|/*OBJID_CLIENT*/
decl_stmt|;
name|DWORD
name|wParam
init|=
literal|0
decl_stmt|;
if|if
condition|(
specifier|const
name|HWND
name|hwnd
init|=
name|getHWNDForWidget
argument_list|(
name|this
argument_list|)
condition|)
name|SendMessage
argument_list|(
name|hwnd
argument_list|,
name|WM_GETOBJECT
argument_list|,
name|wParam
argument_list|,
name|lParam
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
private|private
name|slots
private|:
DECL|function|buttonClicked
name|void
name|buttonClicked
parameter_list|()
block|{
name|timer
operator|->
name|stop
argument_list|()
expr_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|model
operator|->
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|listView
operator|->
name|setCurrentIndex
argument_list|(
name|model
operator|->
name|indexFromItem
argument_list|(
name|item
argument_list|)
argument_list|)
expr_stmt|;
name|close
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|listView
name|QListView
modifier|*
name|listView
decl_stmt|;
DECL|member|model
name|QStandardItemModel
modifier|*
name|model
decl_stmt|;
DECL|member|timer
name|QTimer
modifier|*
name|timer
decl_stmt|;
block|}
class|;
end_class
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINRT
argument_list|)
operator|&&
name|WINVER
operator|>=
literal|0x0500
end_if
begin_comment
comment|// This test only makes sense on windows 2000 and higher.
end_comment
begin_function
DECL|function|setCurrentIndexAfterAppendRowCrash
name|void
name|tst_QListView
operator|::
name|setCurrentIndexAfterAppendRowCrash
parameter_list|()
block|{
name|SetCurrentIndexAfterAppendRowCrashDialog
name|w
decl_stmt|;
name|w
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|emptyItemSize
name|void
name|tst_QListView
operator|::
name|emptyItemSize
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
literal|4
condition|;
operator|++
name|r
control|)
block|{
specifier|const
name|QString
name|text
init|=
name|QLatin1String
argument_list|(
literal|"standard item ("
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
name|r
argument_list|,
operator|new
name|QStandardItem
argument_list|(
name|text
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|setItem
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
operator|new
name|QStandardItem
argument_list|()
argument_list|)
expr_stmt|;
name|PublicListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task203585_selectAll
name|void
name|tst_QListView
operator|::
name|task203585_selectAll
parameter_list|()
block|{
comment|//we make sure that "select all" doesn't select the hidden items
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|new
name|QStringListModel
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
literal|0
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task228566_infiniteRelayout
name|void
name|tst_QListView
operator|::
name|task228566_infiniteRelayout
parameter_list|()
block|{
name|QListView
name|view
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|list
operator|<<
literal|"small"
expr_stmt|;
block|}
name|list
operator|<<
literal|"BIGBIGBIGBIGBIGBIGBIGBIGBIGBIGBIGBIG"
expr_stmt|;
name|list
operator|<<
literal|"BIGBIGBIGBIGBIGBIGBIGBIGBIGBIGBIGBIG"
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setResizeMode
argument_list|(
name|QListView
operator|::
name|Adjust
argument_list|)
expr_stmt|;
specifier|const
name|int
name|itemHeight
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|height
argument_list|()
decl_stmt|;
name|view
operator|.
name|setFixedHeight
argument_list|(
name|itemHeight
operator|*
literal|12
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|//make sure the layout is done once
name|QSignalSpy
name|spy
argument_list|(
name|view
operator|.
name|horizontalScrollBar
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|rangeChanged
argument_list|(
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|//the layout should already have been done
comment|//so there should be no change made to the scrollbar
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task248430_crashWith0SizedItem
name|void
name|tst_QListView
operator|::
name|task248430_crashWith0SizedItem
parameter_list|()
block|{
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|QStringList
argument_list|()
operator|<<
name|QLatin1String
argument_list|(
literal|"item1"
argument_list|)
operator|<<
name|QString
argument_list|()
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task250446_scrollChanged
name|void
name|tst_QListView
operator|::
name|task250446_scrollChanged
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|200
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|int
name|scrollValue
init|=
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
decl_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|scrollValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
name|scrollValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|view
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
name|scrollValue
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|view
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
name|scrollValue
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task196118_visualRegionForSelection
name|void
name|tst_QListView
operator|::
name|task196118_visualRegionForSelection
parameter_list|()
block|{
class|class
name|MyListView
super|:
specifier|public
name|QListView
block|{
public|public:
name|QRegion
name|getVisualRegionForSelection
parameter_list|()
specifier|const
block|{
return|return
name|QListView
operator|::
name|visualRegionForSelection
argument_list|(
name|selectionModel
argument_list|()
operator|->
name|selection
argument_list|()
argument_list|)
return|;
block|}
block|}
name|view
class|;
name|QStandardItemModel
name|model
decl_stmt|;
name|QStandardItem
name|top1
argument_list|(
literal|"top1"
argument_list|)
decl_stmt|;
name|QStandardItem
name|sub1
argument_list|(
literal|"sub1"
argument_list|)
decl_stmt|;
name|top1
operator|.
name|appendRow
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|sub1
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendColumn
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|top1
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|top1
operator|.
name|index
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|select
argument_list|(
name|top1
operator|.
name|index
argument_list|()
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|getVisualRegionForSelection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task254449_draggingItemToNegativeCoordinates
name|void
name|tst_QListView
operator|::
name|task254449_draggingItemToNegativeCoordinates
parameter_list|()
block|{
comment|//we'll check that the items are painted correctly
class|class
name|MyListView
super|:
specifier|public
name|QListView
block|{
public|public:
name|void
name|setPositionForIndex
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|position
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
block|{
name|QListView
operator|::
name|setPositionForIndex
argument_list|(
name|position
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
block|}
name|list
class|;
name|QStandardItemModel
name|model
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|index
argument_list|,
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|list
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|list
operator|.
name|show
argument_list|()
expr_stmt|;
name|list
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|list
argument_list|)
argument_list|)
expr_stmt|;
class|class
name|MyItemDelegate
super|:
specifier|public
name|QStyledItemDelegate
block|{
public|public:
name|MyItemDelegate
parameter_list|()
member_init_list|:
name|numPaints
argument_list|(
literal|0
argument_list|)
block|{ }
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
name|numPaints
operator|++
expr_stmt|;
name|QStyledItemDelegate
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
specifier|mutable
name|int
name|numPaints
decl_stmt|;
block|}
name|delegate
class|;
name|delegate
operator|.
name|numPaints
operator|=
literal|0
expr_stmt|;
name|list
operator|.
name|setItemDelegate
argument_list|(
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|delegate
operator|.
name|numPaints
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|//makes sure the layout is done
specifier|const
name|QPoint
name|topLeft
argument_list|(
operator|-
literal|6
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|list
operator|.
name|setPositionForIndex
argument_list|(
name|topLeft
argument_list|,
name|index
argument_list|)
expr_stmt|;
comment|//we'll make sure the item is repainted
name|delegate
operator|.
name|numPaints
operator|=
literal|0
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|delegate
operator|.
name|numPaints
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|topLeft
argument_list|()
argument_list|,
name|topLeft
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyboardSearch
name|void
name|tst_QListView
operator|::
name|keyboardSearch
parameter_list|()
block|{
name|QStringList
name|items
decl_stmt|;
name|items
operator|<<
literal|"AB"
operator|<<
literal|"AC"
operator|<<
literal|"BA"
operator|<<
literal|"BB"
operator|<<
literal|"BD"
operator|<<
literal|"KAFEINE"
operator|<<
literal|"KONQUEROR"
operator|<<
literal|"KOPETE"
operator|<<
literal|"KOOKA"
operator|<<
literal|"OKULAR"
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|items
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
comment|//    QCOMPARE(view.currentIndex() , model.index(0,0));
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_K
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|//KAFEINE
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_O
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|//KONQUEROR
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_N
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|//KONQUEROR
block|}
end_function
begin_function
DECL|function|shiftSelectionWithNonUniformItemSizes
name|void
name|tst_QListView
operator|::
name|shiftSelectionWithNonUniformItemSizes
parameter_list|()
block|{
comment|// This checks that no items are selected unexpectedly by Shift-Arrow
comment|// when items with non-uniform sizes are laid out in a grid
block|{
comment|// First test: QListView::LeftToRight flow
name|QStringList
name|items
decl_stmt|;
name|items
operator|<<
literal|"Long\nText"
operator|<<
literal|"Text"
operator|<<
literal|"Text"
operator|<<
literal|"Text"
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|items
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setFixedSize
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|view
operator|.
name|setGridSize
argument_list|(
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QListView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verfify that item sizes are non-uniform
name|QVERIFY
argument_list|(
name|view
operator|.
name|sizeHintForIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|height
argument_list|()
operator|>
name|view
operator|.
name|sizeHintForIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndexList
name|selected
init|=
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|contains
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Second test: QListView::TopToBottom flow
name|QStringList
name|items
decl_stmt|;
name|items
operator|<<
literal|"ab"
operator|<<
literal|"a"
operator|<<
literal|"a"
operator|<<
literal|"a"
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|items
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setFixedSize
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
expr_stmt|;
name|view
operator|.
name|setGridSize
argument_list|(
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QListView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verfify that item sizes are non-uniform
name|QVERIFY
argument_list|(
name|view
operator|.
name|sizeHintForIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|width
argument_list|()
operator|>
name|view
operator|.
name|sizeHintForIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndexList
name|selected
init|=
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|contains
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|clickOnViewportClearsSelection
name|void
name|tst_QListView
operator|::
name|clickOnViewportClearsSelection
parameter_list|()
block|{
name|QStringList
name|items
decl_stmt|;
name|items
operator|<<
literal|"Text1"
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|items
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QListView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|isSelected
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
comment|//we try to click outside of the index
specifier|const
name|QPoint
name|point
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|point
argument_list|)
expr_stmt|;
comment|//at this point, the selection shouldn't have changed
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|isSelected
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|point
argument_list|)
expr_stmt|;
comment|//now the selection should be cleared
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task262152_setModelColumnNavigate
name|void
name|tst_QListView
operator|::
name|task262152_setModelColumnNavigate
parameter_list|()
block|{
name|QListView
name|view
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|"[0,1]"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|"[1,1]"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|"[2,1]"
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModelColumn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|view
argument_list|)
argument_list|,
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_2233_scrollHiddenItems_data
name|void
name|tst_QListView
operator|::
name|taskQTBUG_2233_scrollHiddenItems_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"TopToBottom"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"LeftToRight"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_2233_scrollHiddenItems
name|void
name|tst_QListView
operator|::
name|taskQTBUG_2233_scrollHiddenItems
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|flow
argument_list|)
expr_stmt|;
specifier|const
name|int
name|rowCount
init|=
literal|200
decl_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|setFrameless
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
name|QListView
name|view
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rowCount
condition|;
operator|++
name|i
control|)
name|list
operator|<<
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setUniformItemSizes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rowCount
operator|/
literal|2
condition|;
operator|++
name|i
control|)
name|view
operator|.
name|setRowHidden
argument_list|(
literal|2
operator|*
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setFlow
argument_list|(
cast|static_cast
argument_list|<
name|QListView
operator|::
name|Flow
argument_list|>
argument_list|(
name|flow
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|130
argument_list|,
literal|130
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
operator|(
name|view
operator|.
name|flow
argument_list|()
operator|==
name|QListView
operator|::
name|TopToBottom
condition|?
name|view
operator|.
name|verticalScrollBar
argument_list|()
else|:
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|)
operator|->
name|setValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
literal|2
operator|*
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
comment|//QTBUG-7929  should not crash
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|QScrollBar
modifier|*
name|bar
init|=
name|view
operator|.
name|flow
argument_list|()
operator|==
name|QListView
operator|::
name|TopToBottom
condition|?
name|view
operator|.
name|verticalScrollBar
argument_list|()
else|:
name|view
operator|.
name|horizontalScrollBar
argument_list|()
decl_stmt|;
name|int
name|nbVisibleItem
init|=
name|rowCount
operator|/
literal|2
operator|-
name|bar
operator|->
name|maximum
argument_list|()
decl_stmt|;
name|bar
operator|->
name|setValue
argument_list|(
name|bar
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|rowCount
init|;
name|i
operator|>
name|rowCount
operator|/
literal|2
condition|;
name|i
operator|--
control|)
block|{
name|view
operator|.
name|setRowHidden
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bar
operator|->
name|value
argument_list|()
argument_list|,
name|bar
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bar
operator|->
name|maximum
argument_list|()
argument_list|,
name|rowCount
operator|/
literal|4
operator|-
name|nbVisibleItem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_633_changeModelData
name|void
name|tst_QListView
operator|::
name|taskQTBUG_633_changeModelData
parameter_list|()
block|{
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"long long text"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|//leave time for relayouting the items
name|QRect
name|rectLongText
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|rect2
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rectLongText
operator|.
name|intersects
argument_list|(
name|rect2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_435_deselectOnViewportClick
name|void
name|tst_QListView
operator|::
name|taskQTBUG_435_deselectOnViewportClick
parameter_list|()
block|{
name|QListView
name|view
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"1"
operator|<<
literal|"2"
operator|<<
literal|"3"
operator|<<
literal|"4"
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QRect
name|itemRect
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|p
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|0
argument_list|,
name|itemRect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
comment|//first the left button
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
comment|//and now the right button
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|RightButton
argument_list|,
literal|0
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_2678_spacingAndWrappedText
name|void
name|tst_QListView
operator|::
name|taskQTBUG_2678_spacingAndWrappedText
parameter_list|()
block|{
specifier|static
specifier|const
name|QString
name|lorem
argument_list|(
literal|"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
argument_list|)
decl_stmt|;
name|QStringListModel
name|model
argument_list|(
name|QStringList
argument_list|()
operator|<<
name|lorem
operator|<<
name|lorem
operator|<<
literal|"foo"
operator|<<
name|lorem
operator|<<
literal|"bar"
operator|<<
name|lorem
operator|<<
name|lorem
argument_list|)
decl_stmt|;
name|QListView
name|w
decl_stmt|;
name|w
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|w
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|ListMode
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|w
operator|.
name|setSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|minimum
argument_list|()
argument_list|,
name|w
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_5877_skippingItemInPageDownUp
name|void
name|tst_QListView
operator|::
name|taskQTBUG_5877_skippingItemInPageDownUp
parameter_list|()
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|currentItemIndexes
decl_stmt|;
name|QtTestModel
name|model
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|model
operator|.
name|colCount
operator|=
literal|1
expr_stmt|;
name|model
operator|.
name|rCount
operator|=
literal|100
expr_stmt|;
name|currentItemIndexes
operator|<<
literal|0
operator|<<
literal|6
operator|<<
literal|16
operator|<<
literal|25
operator|<<
literal|34
operator|<<
literal|42
operator|<<
literal|57
operator|<<
literal|68
operator|<<
literal|77
operator|<<
literal|83
operator|<<
literal|91
operator|<<
literal|94
expr_stmt|;
name|QMoveCursorListView
name|vu
decl_stmt|;
name|vu
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|vu
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|vu
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|itemHeight
init|=
name|vu
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|visibleRowCount
init|=
name|vu
operator|.
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
operator|/
name|itemHeight
decl_stmt|;
name|int
name|scrolledRowCount
init|=
name|visibleRowCount
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|currentItemIndexes
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|vu
operator|.
name|selectionModel
argument_list|()
operator|->
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|currentItemIndexes
index|[
name|i
index|]
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectCurrent
argument_list|)
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|vu
operator|.
name|doMoveCursor
argument_list|(
name|QMoveCursorListView
operator|::
name|MovePageDown
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|int
name|newCurrent
init|=
name|qMin
argument_list|(
name|currentItemIndexes
index|[
name|i
index|]
operator|+
name|scrolledRowCount
argument_list|,
literal|99
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|idx
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|newCurrent
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|idx
operator|=
name|vu
operator|.
name|doMoveCursor
argument_list|(
name|QMoveCursorListView
operator|::
name|MovePageUp
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|newCurrent
operator|=
name|qMax
argument_list|(
name|currentItemIndexes
index|[
name|i
index|]
operator|-
name|scrolledRowCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|idx
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|newCurrent
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|ListView_9455
class|class
name|ListView_9455
super|:
specifier|public
name|QListView
block|{
public|public:
DECL|function|contentsSize
name|QSize
name|contentsSize
parameter_list|()
specifier|const
block|{
return|return
name|QListView
operator|::
name|contentsSize
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|taskQTBUG_9455_wrongScrollbarRanges
name|void
name|tst_QListView
operator|::
name|taskQTBUG_9455_wrongScrollbarRanges
parameter_list|()
block|{
name|QStringListModel
name|model
argument_list|(
name|generateList
argument_list|(
literal|"item "
argument_list|,
literal|8
argument_list|)
argument_list|)
decl_stmt|;
name|ListView_9455
name|w
decl_stmt|;
name|setFrameless
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|w
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|w
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|w
operator|.
name|resize
argument_list|(
literal|116
argument_list|,
literal|132
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMovement
argument_list|(
name|QListView
operator|::
name|Static
argument_list|)
expr_stmt|;
specifier|const
name|int
name|spacing
init|=
literal|200
decl_stmt|;
name|w
operator|.
name|setSpacing
argument_list|(
name|spacing
argument_list|)
expr_stmt|;
name|w
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
argument_list|,
name|w
operator|.
name|contentsSize
argument_list|()
operator|.
name|height
argument_list|()
operator|-
name|w
operator|.
name|viewport
argument_list|()
operator|->
name|geometry
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|styleOptionViewItem
name|void
name|tst_QListView
operator|::
name|styleOptionViewItem
parameter_list|()
block|{
class|class
name|MyDelegate
super|:
specifier|public
name|QStyledItemDelegate
block|{
public|public:
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
name|QStyleOptionViewItem
name|opt
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|initStyleOption
argument_list|(
operator|&
name|opt
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|opt
operator|.
name|index
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QStyledItemDelegate
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
block|}
class|;
name|QListView
name|view
decl_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|MyDelegate
name|delegate
decl_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|new
name|QStandardItem
argument_list|(
literal|"Beginning"
argument_list|)
operator|<<
operator|new
name|QStandardItem
argument_list|(
literal|"Middle"
argument_list|)
operator|<<
operator|new
name|QStandardItem
argument_list|(
literal|"Middle"
argument_list|)
operator|<<
operator|new
name|QStandardItem
argument_list|(
literal|"End"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Run test
name|view
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_12308_artihmeticException
name|void
name|tst_QListView
operator|::
name|taskQTBUG_12308_artihmeticException
parameter_list|()
block|{
name|QListWidget
name|lw
decl_stmt|;
name|lw
operator|.
name|setLayoutMode
argument_list|(
name|QListView
operator|::
name|Batched
argument_list|)
expr_stmt|;
name|lw
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lw
operator|.
name|batchSize
argument_list|()
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|QListWidgetItem
modifier|*
name|item
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|item
operator|->
name|setText
argument_list|(
name|QString
argument_list|(
literal|"Item %L1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|lw
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|->
name|setHidden
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|lw
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|lw
argument_list|)
argument_list|)
expr_stmt|;
comment|// No crash, it's all right.
block|}
end_function
begin_class
DECL|class|Delegate12308
class|class
name|Delegate12308
super|:
specifier|public
name|QStyledItemDelegate
block|{
name|Q_OBJECT
public|public:
DECL|function|Delegate12308
name|Delegate12308
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QStyledItemDelegate
argument_list|(
name|parent
argument_list|)
block|{ }
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
name|QVERIFY
argument_list|(
name|option
operator|.
name|rect
operator|.
name|topLeft
argument_list|()
operator|!=
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QStyledItemDelegate
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|taskQTBUG_12308_wrongFlowLayout
name|void
name|tst_QListView
operator|::
name|taskQTBUG_12308_wrongFlowLayout
parameter_list|()
block|{
name|QListWidget
name|lw
decl_stmt|;
name|Delegate12308
name|delegate
decl_stmt|;
name|lw
operator|.
name|setLayoutMode
argument_list|(
name|QListView
operator|::
name|Batched
argument_list|)
expr_stmt|;
name|lw
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|lw
operator|.
name|setItemDelegate
argument_list|(
operator|&
name|delegate
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lw
operator|.
name|batchSize
argument_list|()
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|QListWidgetItem
modifier|*
name|item
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|item
operator|->
name|setText
argument_list|(
name|QString
argument_list|(
literal|"Item %L1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|lw
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|item
operator|->
name|text
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1Char
argument_list|(
literal|'1'
argument_list|)
argument_list|)
condition|)
name|item
operator|->
name|setHidden
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|lw
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|lw
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_21115_scrollToAndHiddenItems_data
name|void
name|tst_QListView
operator|::
name|taskQTBUG_21115_scrollToAndHiddenItems_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow TopToBottom"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow LeftToRight"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_21115_scrollToAndHiddenItems
name|void
name|tst_QListView
operator|::
name|taskQTBUG_21115_scrollToAndHiddenItems
parameter_list|()
block|{
if|#
directive|if
name|defined
name|Q_OS_BLACKBERRY
comment|// On BB10 we need to create a root window which is automatically stretched
comment|// over the whole screen
name|QWindow
name|rootWindow
decl_stmt|;
name|rootWindow
operator|.
name|show
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|int
argument_list|,
name|flow
argument_list|)
expr_stmt|;
name|QListView
name|lv
decl_stmt|;
name|lv
operator|.
name|setUniformItemSizes
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setFlow
argument_list|(
cast|static_cast
argument_list|<
name|QListView
operator|::
name|Flow
argument_list|>
argument_list|(
name|flow
argument_list|)
argument_list|)
expr_stmt|;
name|QStringListModel
name|model
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|30
condition|;
name|i
operator|++
control|)
name|list
operator|<<
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|lv
argument_list|)
argument_list|)
expr_stmt|;
comment|// Save first item rect for reference
name|QRect
name|firstItemRect
init|=
name|lv
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
comment|// Select an item and scroll to selection
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|lv
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|lv
operator|.
name|scrollTo
argument_list|(
name|index
argument_list|,
name|QAbstractItemView
operator|::
name|PositionAtTop
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
argument_list|,
name|firstItemRect
argument_list|)
expr_stmt|;
comment|// Hide some rows and scroll to selection
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|==
name|index
operator|.
name|row
argument_list|()
condition|)
continue|continue;
name|lv
operator|.
name|setRowHidden
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|lv
operator|.
name|scrollTo
argument_list|(
name|index
argument_list|,
name|QAbstractItemView
operator|::
name|PositionAtTop
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
argument_list|,
name|firstItemRect
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|draggablePaintPairs_data
name|void
name|tst_QListView
operator|::
name|draggablePaintPairs_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
literal|30
condition|;
operator|++
name|row
control|)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row-"
operator|+
name|QByteArray
operator|::
name|number
argument_list|(
name|row
argument_list|)
argument_list|)
operator|<<
name|row
expr_stmt|;
block|}
end_function
begin_function
DECL|function|draggablePaintPairs
name|void
name|tst_QListView
operator|::
name|draggablePaintPairs
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QListView
name|view
decl_stmt|;
name|QStringListModel
name|model
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|30
condition|;
name|i
operator|++
control|)
name|list
operator|<<
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QModelIndex
name|expectedIndex
init|=
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QListViewPrivate
modifier|*
name|privateClass
init|=
cast|static_cast
argument_list|<
name|QListViewPrivate
operator|*
argument_list|>
argument_list|(
name|QListViewPrivate
operator|::
name|get
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|rect
decl_stmt|;
name|QModelIndexList
name|indexList
decl_stmt|;
name|indexList
operator|<<
name|expectedIndex
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|expectedIndex
argument_list|)
expr_stmt|;
name|QItemViewPaintPairs
name|pairs
init|=
name|privateClass
operator|->
name|draggablePaintPairs
argument_list|(
name|indexList
argument_list|,
operator|&
name|rect
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|indexList
operator|.
name|size
argument_list|()
argument_list|,
name|pairs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
specifier|const
name|QItemViewPaintPair
name|pair
decl|,
name|pairs
control|)
block|{
name|QCOMPARE
argument_list|(
name|rect
argument_list|,
name|pair
operator|.
name|first
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|expectedIndex
argument_list|,
name|pair
operator|.
name|second
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|taskQTBUG_21804_hiddenItemsAndScrollingWithKeys_data
name|void
name|tst_QListView
operator|::
name|taskQTBUG_21804_hiddenItemsAndScrollingWithKeys_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"spacing"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow TopToBottom no spacing"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow TopToBottom with spacing"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|5
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow LeftToRight no spacing"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow LeftToRight with spacing"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|5
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_21804_hiddenItemsAndScrollingWithKeys
name|void
name|tst_QListView
operator|::
name|taskQTBUG_21804_hiddenItemsAndScrollingWithKeys
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|flow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|spacing
argument_list|)
expr_stmt|;
comment|// create some items to show
name|QStringListModel
name|model
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
name|list
operator|<<
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
comment|// create listview
name|QListView
name|lv
decl_stmt|;
name|lv
operator|.
name|setFlow
argument_list|(
cast|static_cast
argument_list|<
name|QListView
operator|::
name|Flow
argument_list|>
argument_list|(
name|flow
argument_list|)
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setSpacing
argument_list|(
name|spacing
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|lv
argument_list|)
expr_stmt|;
comment|// hide every odd number row
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
name|i
operator|+=
literal|2
control|)
name|lv
operator|.
name|setRowHidden
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// scroll forward and check that selected item is visible always
name|int
name|visibleItemCount
init|=
name|model
operator|.
name|rowCount
argument_list|()
operator|/
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|visibleItemCount
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|flow
operator|==
name|QListView
operator|::
name|TopToBottom
condition|)
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
else|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|lv
operator|.
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|lv
operator|.
name|currentIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// scroll backward
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|visibleItemCount
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|flow
operator|==
name|QListView
operator|::
name|TopToBottom
condition|)
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
else|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|lv
operator|.
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|lv
operator|.
name|currentIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// scroll forward only half way
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|visibleItemCount
operator|/
literal|2
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|flow
operator|==
name|QListView
operator|::
name|TopToBottom
condition|)
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
else|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|lv
operator|.
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|lv
operator|.
name|currentIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// scroll backward again
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|visibleItemCount
operator|/
literal|2
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|flow
operator|==
name|QListView
operator|::
name|TopToBottom
condition|)
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
else|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|lv
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|lv
operator|.
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|lv
operator|.
name|visualRect
argument_list|(
name|lv
operator|.
name|currentIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|spacing_data
name|void
name|tst_QListView
operator|::
name|spacing_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"spacing"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow=TopToBottom spacing=0"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow=TopToBottom spacing=10"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|TopToBottom
argument_list|)
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow=LeftToRight spacing=0"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"flow=LeftToRight spacing=10"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
operator|<<
literal|10
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spacing
name|void
name|tst_QListView
operator|::
name|spacing
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|flow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|spacing
argument_list|)
expr_stmt|;
comment|// create some items to show
name|QStringListModel
name|model
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
name|list
operator|<<
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
comment|// create listview
name|QListView
name|lv
decl_stmt|;
name|lv
operator|.
name|setFlow
argument_list|(
cast|static_cast
argument_list|<
name|QListView
operator|::
name|Flow
argument_list|>
argument_list|(
name|flow
argument_list|)
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setSpacing
argument_list|(
name|spacing
argument_list|)
expr_stmt|;
name|lv
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|lv
argument_list|)
expr_stmt|;
comment|// check size and position of first two items
name|QRect
name|item1
init|=
name|lv
operator|.
name|visualRect
argument_list|(
name|lv
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|item2
init|=
name|lv
operator|.
name|visualRect
argument_list|(
name|lv
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|flow
operator|==
name|QListView
operator|::
name|TopToBottom
condition|?
name|spacing
else|:
literal|0
argument_list|,
name|spacing
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|flow
operator|==
name|QListView
operator|::
name|TopToBottom
condition|)
block|{
name|QCOMPARE
argument_list|(
name|item1
operator|.
name|width
argument_list|()
argument_list|,
name|lv
operator|.
name|viewport
argument_list|()
operator|->
name|width
argument_list|()
operator|-
literal|2
operator|*
name|spacing
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|spacing
argument_list|,
name|spacing
operator|+
name|item1
operator|.
name|height
argument_list|()
operator|+
literal|2
operator|*
name|spacing
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// QListView::LeftToRight
name|QCOMPARE
argument_list|(
name|item1
operator|.
name|height
argument_list|()
argument_list|,
name|lv
operator|.
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
operator|-
literal|2
operator|*
name|spacing
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|.
name|topLeft
argument_list|()
argument_list|,
name|QPoint
argument_list|(
name|spacing
operator|+
name|item1
operator|.
name|width
argument_list|()
operator|+
name|spacing
argument_list|,
name|spacing
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testScrollToWithHidden
name|void
name|tst_QListView
operator|::
name|testScrollToWithHidden
parameter_list|()
block|{
if|#
directive|if
name|defined
name|Q_OS_BLACKBERRY
comment|// On BB10 we need to create a root window which is automatically stretched
comment|// over the whole screen
name|QWindow
name|rootWindow
decl_stmt|;
name|rootWindow
operator|.
name|show
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QListView
name|lv
decl_stmt|;
name|QStringListModel
name|model
decl_stmt|;
name|QStringList
name|list
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|30
condition|;
name|i
operator|++
control|)
name|list
operator|<<
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setRowHidden
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setSpacing
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|lv
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|lv
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|lv
operator|.
name|scrollTo
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|26
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|expectedScrollBarValue
init|=
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|expectedScrollBarValue
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|lv
operator|.
name|scrollTo
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|25
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|expectedScrollBarValue
argument_list|,
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testViewOptions
name|void
name|tst_QListView
operator|::
name|testViewOptions
parameter_list|()
block|{
name|PublicListView
name|view
decl_stmt|;
name|QStyleOptionViewItem
name|options
init|=
name|view
operator|.
name|viewOptions
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|options
operator|.
name|decorationPosition
argument_list|,
name|QStyleOptionViewItem
operator|::
name|Left
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|options
operator|=
name|view
operator|.
name|viewOptions
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|options
operator|.
name|decorationPosition
argument_list|,
name|QStyleOptionViewItem
operator|::
name|Top
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// make sure we have no transient scroll bars
end_comment
begin_class
DECL|class|TempStyleSetter
class|class
name|TempStyleSetter
block|{
public|public:
DECL|function|TempStyleSetter
name|TempStyleSetter
parameter_list|()
member_init_list|:
name|m_oldStyle
argument_list|(
name|qApp
operator|->
name|style
argument_list|()
argument_list|)
block|{
name|m_oldStyle
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QListView
name|tempView
decl_stmt|;
if|if
condition|(
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ScrollBar_Transient
argument_list|,
literal|0
argument_list|,
name|tempView
operator|.
name|horizontalScrollBar
argument_list|()
argument_list|)
condition|)
name|QApplication
operator|::
name|setStyle
argument_list|(
name|QStyleFactory
operator|::
name|create
argument_list|(
literal|"Fusion"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|~TempStyleSetter
name|~
name|TempStyleSetter
parameter_list|()
block|{
name|QApplication
operator|::
name|setStyle
argument_list|(
name|m_oldStyle
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_oldStyle
name|QStyle
modifier|*
name|m_oldStyle
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|taskQTBUG_39902_mutualScrollBars_data
name|void
name|tst_QListView
operator|::
name|taskQTBUG_39902_mutualScrollBars_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QAbstractItemView
operator|::
name|ScrollMode
argument_list|>
argument_list|(
literal|"horizontalScrollMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QAbstractItemView
operator|::
name|ScrollMode
argument_list|>
argument_list|(
literal|"verticalScrollMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"per item / per item"
argument_list|)
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerItem
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerItem
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"per pixel / per item"
argument_list|)
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerPixel
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerItem
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"per item / per pixel"
argument_list|)
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerItem
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerPixel
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"per pixel / per pixel"
argument_list|)
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerPixel
operator|<<
name|QAbstractItemView
operator|::
name|ScrollPerPixel
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_39902_mutualScrollBars
name|void
name|tst_QListView
operator|::
name|taskQTBUG_39902_mutualScrollBars
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollMode
argument_list|,
name|horizontalScrollMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollMode
argument_list|,
name|verticalScrollMode
argument_list|)
expr_stmt|;
name|QWidget
name|window
decl_stmt|;
name|window
operator|.
name|resize
argument_list|(
literal|400
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QListView
modifier|*
name|view
init|=
operator|new
name|QListView
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
comment|// make sure we have no transient scroll bars
name|TempStyleSetter
name|styleSetter
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|200
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|const
name|QSize
name|itemSize
argument_list|(
literal|100
argument_list|,
literal|20
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|,
name|itemSize
argument_list|,
name|Qt
operator|::
name|SizeHintRole
argument_list|)
expr_stmt|;
name|view
operator|->
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|->
name|setVerticalScrollMode
argument_list|(
name|verticalScrollMode
argument_list|)
expr_stmt|;
name|view
operator|->
name|setHorizontalScrollMode
argument_list|(
name|horizontalScrollMode
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
comment|// make sure QListView is done with layouting the items (1/10 sec, like QListView)
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|model
operator|.
name|setRowCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|,
name|itemSize
argument_list|,
name|Qt
operator|::
name|SizeHintRole
argument_list|)
expr_stmt|;
name|view
operator|->
name|resize
argument_list|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
comment|// this will end up in a stack overflow, if QTBUG-39902 is not fixed
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// these tests do not apply with transient scroll bars enabled
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ScrollBar_Transient
argument_list|,
literal|0
argument_list|,
name|view
operator|->
name|horizontalScrollBar
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// make it double as large, no scroll bars should be visible
name|view
operator|->
name|resize
argument_list|(
operator|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|)
operator|*
literal|2
argument_list|,
operator|(
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|)
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// make it half the size, both scroll bars should be visible
name|view
operator|->
name|resize
argument_list|(
operator|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|)
operator|/
literal|2
argument_list|,
operator|(
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|)
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// make it double as large, no scroll bars should be visible
name|view
operator|->
name|resize
argument_list|(
operator|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|)
operator|*
literal|2
argument_list|,
operator|(
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|)
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// now, coming from the double size, resize it to the exactly matching size, still no scroll bars should be visible again
name|view
operator|->
name|resize
argument_list|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// now remove just one single pixel in height -> both scroll bars will show up since they depend on each other
name|view
operator|->
name|resize
argument_list|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// now remove just one single pixel in width -> both scroll bars will show up since they depend on each other
name|view
operator|->
name|resize
argument_list|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|-
literal|1
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// finally, coming from a size being to small, resize back to the exactly matching size -> both scroll bars should disappear again
name|view
operator|->
name|resize
argument_list|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// now remove just one single pixel in height -> both scroll bars will show up since they depend on each other
name|view
operator|->
name|resize
argument_list|(
name|itemSize
operator|.
name|width
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
operator|*
name|itemSize
operator|.
name|height
argument_list|()
operator|+
name|view
operator|->
name|frameWidth
argument_list|()
operator|*
literal|2
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|horizontalScrollingByVerticalWheelEvents
name|void
name|tst_QListView
operator|::
name|horizontalScrollingByVerticalWheelEvents
parameter_list|()
block|{
name|QListView
name|lv
decl_stmt|;
name|lv
operator|.
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TestDelegate
modifier|*
name|delegate
init|=
operator|new
name|TestDelegate
argument_list|(
operator|&
name|lv
argument_list|)
decl_stmt|;
name|delegate
operator|->
name|m_sizeHint
operator|=
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setItemDelegate
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
name|QtTestModel
name|model
decl_stmt|;
name|model
operator|.
name|colCount
operator|=
literal|1
expr_stmt|;
name|model
operator|.
name|rCount
operator|=
literal|100
expr_stmt|;
name|lv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|lv
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|lv
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|lv
argument_list|)
expr_stmt|;
name|QPoint
name|globalPos
init|=
name|lv
operator|.
name|geometry
argument_list|()
operator|.
name|center
argument_list|()
decl_stmt|;
name|QPoint
name|pos
init|=
name|lv
operator|.
name|viewport
argument_list|()
operator|->
name|geometry
argument_list|()
operator|.
name|center
argument_list|()
decl_stmt|;
name|QWheelEvent
name|wheelDownEvent
argument_list|(
name|pos
argument_list|,
name|globalPos
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|120
argument_list|)
argument_list|,
operator|-
literal|120
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QWheelEvent
name|wheelUpEvent
argument_list|(
name|pos
argument_list|,
name|globalPos
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|120
argument_list|)
argument_list|,
literal|120
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QWheelEvent
name|wheelLeftDownEvent
argument_list|(
name|pos
argument_list|,
name|globalPos
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|120
argument_list|,
operator|-
literal|120
argument_list|)
argument_list|,
operator|-
literal|120
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|int
name|hValue
init|=
name|lv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|wheelDownEvent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|lv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|>
name|hValue
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|wheelUpEvent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
name|hValue
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|wheelLeftDownEvent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
name|hValue
argument_list|)
expr_stmt|;
comment|// ensure that vertical wheel events are not converted when vertical
comment|// scroll bar is not visible but vertical scrolling is possible
name|lv
operator|.
name|setWrapping
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|lv
operator|.
name|setVerticalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|vValue
init|=
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|lv
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|wheelDownEvent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|lv
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|>
name|vValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QListView
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qlistview.moc"
end_include
end_unit
