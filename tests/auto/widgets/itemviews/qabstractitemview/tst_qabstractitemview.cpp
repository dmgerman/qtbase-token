begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qabstractitemview.h>
end_include
begin_include
include|#
directive|include
file|<qstandarditemmodel.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qlistview.h>
end_include
begin_include
include|#
directive|include
file|<qlistwidget.h>
end_include
begin_include
include|#
directive|include
file|<qtableview.h>
end_include
begin_include
include|#
directive|include
file|<qtablewidget.h>
end_include
begin_include
include|#
directive|include
file|<qtreeview.h>
end_include
begin_include
include|#
directive|include
file|<qtreewidget.h>
end_include
begin_include
include|#
directive|include
file|<qheaderview.h>
end_include
begin_include
include|#
directive|include
file|<qspinbox.h>
end_include
begin_include
include|#
directive|include
file|<qitemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qscrollbar.h>
end_include
begin_include
include|#
directive|include
file|<qboxlayout.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qscreen.h>
end_include
begin_include
include|#
directive|include
file|<qscopedpointer.h>
end_include
begin_include
include|#
directive|include
file|<qstyleditemdelegate.h>
end_include
begin_function
DECL|function|setFrameless
specifier|static
specifier|inline
name|void
name|setFrameless
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
name|Qt
operator|::
name|WindowFlags
name|flags
init|=
name|w
operator|->
name|windowFlags
argument_list|()
decl_stmt|;
name|flags
operator||=
name|Qt
operator|::
name|FramelessWindowHint
expr_stmt|;
name|flags
operator|&=
operator|~
operator|(
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator||
name|Qt
operator|::
name|WindowMinMaxButtonsHint
operator||
name|Qt
operator|::
name|WindowCloseButtonHint
operator|)
expr_stmt|;
name|w
operator|->
name|setWindowFlags
argument_list|(
name|flags
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|centerOnScreen
specifier|static
specifier|inline
name|void
name|centerOnScreen
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
block|{
specifier|const
name|QPoint
name|offset
init|=
name|QPoint
argument_list|(
name|w
operator|->
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|w
operator|->
name|height
argument_list|()
operator|/
literal|2
argument_list|)
decl_stmt|;
name|w
operator|->
name|move
argument_list|(
name|QGuiApplication
operator|::
name|primaryScreen
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|center
argument_list|()
operator|-
name|offset
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// Move cursor out of widget area to avoid undesired interaction on Mac.
end_comment
begin_function
DECL|function|moveCursorAway
specifier|static
specifier|inline
name|void
name|moveCursorAway
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|topLevel
parameter_list|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_CURSOR
name|QCursor
operator|::
name|setPos
argument_list|(
name|topLevel
operator|->
name|geometry
argument_list|()
operator|.
name|topRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|Q_UNUSED
argument_list|(
argument|topLevel
argument_list|)
endif|#
directive|endif
block|}
end_function
begin_class
DECL|class|TestView
class|class
name|TestView
super|:
specifier|public
name|QAbstractItemView
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_dataChanged
specifier|inline
name|void
name|tst_dataChanged
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|tl
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|br
parameter_list|)
block|{
name|dataChanged
argument_list|(
name|tl
argument_list|,
name|br
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_setHorizontalStepsPerItem
specifier|inline
name|void
name|tst_setHorizontalStepsPerItem
parameter_list|(
name|int
name|steps
parameter_list|)
block|{
name|setHorizontalStepsPerItem
argument_list|(
name|steps
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_horizontalStepsPerItem
specifier|inline
name|int
name|tst_horizontalStepsPerItem
parameter_list|()
specifier|const
block|{
return|return
name|horizontalStepsPerItem
argument_list|()
return|;
block|}
DECL|function|tst_setVerticalStepsPerItem
specifier|inline
name|void
name|tst_setVerticalStepsPerItem
parameter_list|(
name|int
name|steps
parameter_list|)
block|{
name|setVerticalStepsPerItem
argument_list|(
name|steps
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_verticalStepsPerItem
specifier|inline
name|int
name|tst_verticalStepsPerItem
parameter_list|()
specifier|const
block|{
return|return
name|verticalStepsPerItem
argument_list|()
return|;
block|}
DECL|function|tst_rowsInserted
specifier|inline
name|void
name|tst_rowsInserted
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|rowsInserted
argument_list|(
name|parent
argument_list|,
name|start
argument_list|,
name|end
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_rowsAboutToBeRemoved
specifier|inline
name|void
name|tst_rowsAboutToBeRemoved
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
name|rowsAboutToBeRemoved
argument_list|(
name|parent
argument_list|,
name|start
argument_list|,
name|end
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_selectionChanged
specifier|inline
name|void
name|tst_selectionChanged
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
name|selected
parameter_list|,
specifier|const
name|QItemSelection
modifier|&
name|deselected
parameter_list|)
block|{
name|selectionChanged
argument_list|(
name|selected
argument_list|,
name|deselected
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_currentChanged
specifier|inline
name|void
name|tst_currentChanged
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|current
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|previous
parameter_list|)
block|{
name|currentChanged
argument_list|(
name|current
argument_list|,
name|previous
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_updateEditorData
specifier|inline
name|void
name|tst_updateEditorData
parameter_list|()
block|{
name|updateEditorData
argument_list|()
expr_stmt|;
block|}
DECL|function|tst_updateEditorGeometries
specifier|inline
name|void
name|tst_updateEditorGeometries
parameter_list|()
block|{
name|updateEditorGeometries
argument_list|()
expr_stmt|;
block|}
DECL|function|tst_updateGeometries
specifier|inline
name|void
name|tst_updateGeometries
parameter_list|()
block|{
name|updateGeometries
argument_list|()
expr_stmt|;
block|}
DECL|function|tst_verticalScrollbarAction
specifier|inline
name|void
name|tst_verticalScrollbarAction
parameter_list|(
name|int
name|action
parameter_list|)
block|{
name|verticalScrollbarAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_horizontalScrollbarAction
specifier|inline
name|void
name|tst_horizontalScrollbarAction
parameter_list|(
name|int
name|action
parameter_list|)
block|{
name|horizontalScrollbarAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_verticalScrollbarValueChanged
specifier|inline
name|void
name|tst_verticalScrollbarValueChanged
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|verticalScrollbarValueChanged
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_horizontalScrollbarValueChanged
specifier|inline
name|void
name|tst_horizontalScrollbarValueChanged
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|horizontalScrollbarValueChanged
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_closeEditor
specifier|inline
name|void
name|tst_closeEditor
parameter_list|(
name|QWidget
modifier|*
name|editor
parameter_list|,
name|QAbstractItemDelegate
operator|::
name|EndEditHint
name|hint
parameter_list|)
block|{
name|closeEditor
argument_list|(
name|editor
argument_list|,
name|hint
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_commitData
specifier|inline
name|void
name|tst_commitData
parameter_list|(
name|QWidget
modifier|*
name|editor
parameter_list|)
block|{
name|commitData
argument_list|(
name|editor
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_editorDestroyed
specifier|inline
name|void
name|tst_editorDestroyed
parameter_list|(
name|QObject
modifier|*
name|editor
parameter_list|)
block|{
name|editorDestroyed
argument_list|(
name|editor
argument_list|)
expr_stmt|;
block|}
DECL|enum|tst_CursorAction
enum|enum
name|tst_CursorAction
block|{
DECL|enumerator|MoveUp
name|MoveUp
init|=
name|QAbstractItemView
operator|::
name|MoveUp
block|,
DECL|enumerator|MoveDown
name|MoveDown
init|=
name|QAbstractItemView
operator|::
name|MoveDown
block|,
DECL|enumerator|MoveLeft
name|MoveLeft
init|=
name|QAbstractItemView
operator|::
name|MoveLeft
block|,
DECL|enumerator|MoveRight
name|MoveRight
init|=
name|QAbstractItemView
operator|::
name|MoveRight
block|,
DECL|enumerator|MoveHome
name|MoveHome
init|=
name|QAbstractItemView
operator|::
name|MoveHome
block|,
DECL|enumerator|MoveEnd
name|MoveEnd
init|=
name|QAbstractItemView
operator|::
name|MoveEnd
block|,
DECL|enumerator|MovePageUp
name|MovePageUp
init|=
name|QAbstractItemView
operator|::
name|MovePageUp
block|,
DECL|enumerator|MovePageDown
name|MovePageDown
init|=
name|QAbstractItemView
operator|::
name|MovePageDown
block|,
DECL|enumerator|MoveNext
name|MoveNext
init|=
name|QAbstractItemView
operator|::
name|MoveNext
block|,
DECL|enumerator|MovePrevious
name|MovePrevious
init|=
name|QAbstractItemView
operator|::
name|MovePrevious
block|}
enum|;
DECL|function|tst_moveCursor
specifier|inline
name|QModelIndex
name|tst_moveCursor
parameter_list|(
name|tst_CursorAction
name|cursorAction
parameter_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
parameter_list|)
block|{
return|return
name|moveCursor
argument_list|(
name|QAbstractItemView
operator|::
name|CursorAction
argument_list|(
name|cursorAction
argument_list|)
argument_list|,
name|modifiers
argument_list|)
return|;
block|}
DECL|function|tst_horizontalOffset
specifier|inline
name|int
name|tst_horizontalOffset
parameter_list|()
specifier|const
block|{
return|return
name|horizontalOffset
argument_list|()
return|;
block|}
DECL|function|tst_verticalOffset
specifier|inline
name|int
name|tst_verticalOffset
parameter_list|()
specifier|const
block|{
return|return
name|verticalOffset
argument_list|()
return|;
block|}
DECL|function|tst_isIndexHidden
specifier|inline
name|bool
name|tst_isIndexHidden
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
return|return
name|isIndexHidden
argument_list|(
name|index
argument_list|)
return|;
block|}
DECL|function|tst_setSelection
specifier|inline
name|void
name|tst_setSelection
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
name|command
parameter_list|)
block|{
name|setSelection
argument_list|(
name|rect
argument_list|,
name|command
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_visualRegionForSelection
specifier|inline
name|QRegion
name|tst_visualRegionForSelection
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
name|selection
parameter_list|)
specifier|const
block|{
return|return
name|visualRegionForSelection
argument_list|(
name|selection
argument_list|)
return|;
block|}
DECL|function|tst_selectedIndexes
specifier|inline
name|QModelIndexList
name|tst_selectedIndexes
parameter_list|()
specifier|const
block|{
return|return
name|selectedIndexes
argument_list|()
return|;
block|}
DECL|function|tst_edit
specifier|inline
name|bool
name|tst_edit
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|,
name|EditTrigger
name|trigger
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|edit
argument_list|(
name|index
argument_list|,
name|trigger
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|function|tst_selectionCommand
specifier|inline
name|QItemSelectionModel
operator|::
name|SelectionFlags
name|tst_selectionCommand
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|,
specifier|const
name|QEvent
modifier|*
name|event
init|=
literal|0
parameter_list|)
specifier|const
block|{
return|return
name|selectionCommand
argument_list|(
name|index
argument_list|,
name|event
argument_list|)
return|;
block|}
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
DECL|function|tst_startDrag
specifier|inline
name|void
name|tst_startDrag
parameter_list|(
name|Qt
operator|::
name|DropActions
name|supportedActions
parameter_list|)
block|{
name|startDrag
argument_list|(
name|supportedActions
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
DECL|function|tst_viewOptions
specifier|inline
name|QStyleOptionViewItem
name|tst_viewOptions
parameter_list|()
specifier|const
block|{
return|return
name|viewOptions
argument_list|()
return|;
block|}
DECL|enum|tst_State
enum|enum
name|tst_State
block|{
DECL|enumerator|NoState
name|NoState
init|=
name|QAbstractItemView
operator|::
name|NoState
block|,
DECL|enumerator|DraggingState
name|DraggingState
init|=
name|QAbstractItemView
operator|::
name|DraggingState
block|,
DECL|enumerator|DragSelectingState
name|DragSelectingState
init|=
name|QAbstractItemView
operator|::
name|DragSelectingState
block|,
DECL|enumerator|EditingState
name|EditingState
init|=
name|QAbstractItemView
operator|::
name|EditingState
block|,
DECL|enumerator|ExpandingState
name|ExpandingState
init|=
name|QAbstractItemView
operator|::
name|ExpandingState
block|,
DECL|enumerator|CollapsingState
name|CollapsingState
init|=
name|QAbstractItemView
operator|::
name|CollapsingState
block|}
enum|;
DECL|function|tst_state
specifier|inline
name|tst_State
name|tst_state
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|tst_State
operator|)
name|state
argument_list|()
return|;
block|}
DECL|function|tst_setState
specifier|inline
name|void
name|tst_setState
parameter_list|(
name|tst_State
name|state
parameter_list|)
block|{
name|setState
argument_list|(
name|QAbstractItemView
operator|::
name|State
argument_list|(
name|state
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|tst_startAutoScroll
specifier|inline
name|void
name|tst_startAutoScroll
parameter_list|()
block|{
name|startAutoScroll
argument_list|()
expr_stmt|;
block|}
DECL|function|tst_stopAutoScroll
specifier|inline
name|void
name|tst_stopAutoScroll
parameter_list|()
block|{
name|stopAutoScroll
argument_list|()
expr_stmt|;
block|}
DECL|function|tst_doAutoScroll
specifier|inline
name|void
name|tst_doAutoScroll
parameter_list|()
block|{
name|doAutoScroll
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|tst_QAbstractItemView
class|class
name|tst_QAbstractItemView
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QAbstractItemView
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QAbstractItemView
parameter_list|()
destructor_decl|;
name|void
name|basic_tests
parameter_list|(
name|TestView
modifier|*
name|view
parameter_list|)
function_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|emptyModels_data
parameter_list|()
function_decl|;
name|void
name|emptyModels
parameter_list|()
function_decl|;
name|void
name|setModel_data
parameter_list|()
function_decl|;
name|void
name|setModel
parameter_list|()
function_decl|;
name|void
name|noModel
parameter_list|()
function_decl|;
name|void
name|dragSelect
parameter_list|()
function_decl|;
name|void
name|rowDelegate
parameter_list|()
function_decl|;
name|void
name|columnDelegate
parameter_list|()
function_decl|;
name|void
name|selectAll
parameter_list|()
function_decl|;
name|void
name|ctrlA
parameter_list|()
function_decl|;
name|void
name|persistentEditorFocus
parameter_list|()
function_decl|;
name|void
name|setItemDelegate
parameter_list|()
function_decl|;
name|void
name|setItemDelegate_data
parameter_list|()
function_decl|;
comment|// The dragAndDrop() test doesn't work, and is thus disabled on Mac and Windows
comment|// for the following reasons:
comment|//   Mac: use of GetCurrentEventButtonState() in QDragManager::drag()
comment|//   Win: unknown reason
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
if|#
directive|if
literal|0
private|void dragAndDrop();     void dragAndDropOnChild();
endif|#
directive|endif
endif|#
directive|endif
name|void
name|noFallbackToRoot
parameter_list|()
function_decl|;
name|void
name|setCurrentIndex_data
parameter_list|()
function_decl|;
name|void
name|setCurrentIndex
parameter_list|()
function_decl|;
name|void
name|task221955_selectedEditor
parameter_list|()
function_decl|;
name|void
name|task250754_fontChange
parameter_list|()
function_decl|;
name|void
name|task200665_itemEntered
parameter_list|()
function_decl|;
name|void
name|task257481_emptyEditor
parameter_list|()
function_decl|;
name|void
name|shiftArrowSelectionAfterScrolling
parameter_list|()
function_decl|;
name|void
name|shiftSelectionAfterRubberbandSelection
parameter_list|()
function_decl|;
name|void
name|ctrlRubberbandSelection
parameter_list|()
function_decl|;
name|void
name|QTBUG6407_extendedSelection
parameter_list|()
function_decl|;
name|void
name|QTBUG6753_selectOnSelection
parameter_list|()
function_decl|;
name|void
name|testDelegateDestroyEditor
parameter_list|()
function_decl|;
name|void
name|testClickedSignal
parameter_list|()
function_decl|;
name|void
name|testChangeEditorState
parameter_list|()
function_decl|;
name|void
name|deselectInSingleSelection
parameter_list|()
function_decl|;
name|void
name|testNoActivateOnDisabledItem
parameter_list|()
function_decl|;
name|void
name|testFocusPolicy_data
parameter_list|()
function_decl|;
name|void
name|testFocusPolicy
parameter_list|()
function_decl|;
name|void
name|QTBUG31411_noSelection
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|MyAbstractItemDelegate
class|class
name|MyAbstractItemDelegate
super|:
specifier|public
name|QAbstractItemDelegate
block|{
public|public:
DECL|function|MyAbstractItemDelegate
name|MyAbstractItemDelegate
parameter_list|()
member_init_list|:
name|QAbstractItemDelegate
argument_list|()
block|{
name|calledVirtualDtor
operator|=
literal|false
expr_stmt|;
block|}
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{}
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|(
specifier|const
name|QStyleOptionViewItem
modifier|&
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|QSize
argument_list|()
return|;
block|}
DECL|function|createEditor
name|QWidget
modifier|*
name|createEditor
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
name|openedEditor
operator|=
operator|new
name|QWidget
argument_list|(
name|parent
argument_list|)
expr_stmt|;
return|return
name|openedEditor
return|;
block|}
DECL|function|destroyEditor
name|void
name|destroyEditor
parameter_list|(
name|QWidget
modifier|*
name|editor
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
name|calledVirtualDtor
operator|=
literal|true
expr_stmt|;
name|editor
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
block|}
DECL|member|calledVirtualDtor
specifier|mutable
name|bool
name|calledVirtualDtor
decl_stmt|;
DECL|member|openedEditor
specifier|mutable
name|QWidget
modifier|*
name|openedEditor
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QAbstractItemView
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QListView
name|view
decl_stmt|;
name|TestView
modifier|*
name|obj1
init|=
cast|reinterpret_cast
argument_list|<
name|TestView
operator|*
argument_list|>
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
comment|// QAbstractItemDelegate * QAbstractItemView::itemDelegate()
comment|// void QAbstractItemView::setItemDelegate(QAbstractItemDelegate *)
name|MyAbstractItemDelegate
modifier|*
name|var1
init|=
operator|new
name|MyAbstractItemDelegate
decl_stmt|;
name|obj1
operator|->
name|setItemDelegate
argument_list|(
name|var1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QAbstractItemDelegate
operator|*
operator|)
name|var1
argument_list|,
name|obj1
operator|->
name|itemDelegate
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setItemDelegate
argument_list|(
operator|(
name|QAbstractItemDelegate
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QAbstractItemDelegate
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|->
name|itemDelegate
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|var1
expr_stmt|;
comment|// EditTriggers QAbstractItemView::editTriggers()
comment|// void QAbstractItemView::setEditTriggers(EditTriggers)
name|obj1
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|NoEditTriggers
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|NoEditTriggers
argument_list|)
argument_list|,
name|obj1
operator|->
name|editTriggers
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|CurrentChanged
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|CurrentChanged
argument_list|)
argument_list|,
name|obj1
operator|->
name|editTriggers
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|DoubleClicked
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|DoubleClicked
argument_list|)
argument_list|,
name|obj1
operator|->
name|editTriggers
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|SelectedClicked
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|SelectedClicked
argument_list|)
argument_list|,
name|obj1
operator|->
name|editTriggers
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditKeyPressed
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditKeyPressed
argument_list|)
argument_list|,
name|obj1
operator|->
name|editTriggers
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|AnyKeyPressed
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|AnyKeyPressed
argument_list|)
argument_list|,
name|obj1
operator|->
name|editTriggers
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|AllEditTriggers
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QAbstractItemView
operator|::
name|EditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|AllEditTriggers
argument_list|)
argument_list|,
name|obj1
operator|->
name|editTriggers
argument_list|()
argument_list|)
expr_stmt|;
comment|// bool QAbstractItemView::tabKeyNavigation()
comment|// void QAbstractItemView::setTabKeyNavigation(bool)
name|obj1
operator|->
name|setTabKeyNavigation
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|->
name|tabKeyNavigation
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setTabKeyNavigation
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|->
name|tabKeyNavigation
argument_list|()
argument_list|)
expr_stmt|;
comment|// bool QAbstractItemView::dragEnabled()
comment|// void QAbstractItemView::setDragEnabled(bool)
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
name|obj1
operator|->
name|setDragEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|->
name|dragEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setDragEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|->
name|dragEnabled
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// bool QAbstractItemView::alternatingRowColors()
comment|// void QAbstractItemView::setAlternatingRowColors(bool)
name|obj1
operator|->
name|setAlternatingRowColors
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|->
name|alternatingRowColors
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setAlternatingRowColors
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|->
name|alternatingRowColors
argument_list|()
argument_list|)
expr_stmt|;
comment|// State QAbstractItemView::state()
comment|// void QAbstractItemView::setState(State)
name|obj1
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|NoState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|NoState
argument_list|)
argument_list|,
name|obj1
operator|->
name|tst_state
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|DraggingState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|DraggingState
argument_list|)
argument_list|,
name|obj1
operator|->
name|tst_state
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|DragSelectingState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|DragSelectingState
argument_list|)
argument_list|,
name|obj1
operator|->
name|tst_state
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|EditingState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|EditingState
argument_list|)
argument_list|,
name|obj1
operator|->
name|tst_state
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|ExpandingState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|ExpandingState
argument_list|)
argument_list|,
name|obj1
operator|->
name|tst_state
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|CollapsingState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|TestView
operator|::
name|tst_State
argument_list|(
name|TestView
operator|::
name|CollapsingState
argument_list|)
argument_list|,
name|obj1
operator|->
name|tst_state
argument_list|()
argument_list|)
expr_stmt|;
comment|// QWidget QAbstractScrollArea::viewport()
comment|// void setViewport(QWidget*)
name|QWidget
modifier|*
name|vp
init|=
operator|new
name|QWidget
decl_stmt|;
name|obj1
operator|->
name|setViewport
argument_list|(
name|vp
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vp
argument_list|,
name|obj1
operator|->
name|viewport
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|16
argument_list|,
name|obj1
operator|->
name|autoScrollMargin
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setAutoScrollMargin
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|20
argument_list|,
name|obj1
operator|->
name|autoScrollMargin
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|->
name|setAutoScrollMargin
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|16
argument_list|,
name|obj1
operator|->
name|autoScrollMargin
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QAbstractItemView
name|tst_QAbstractItemView
operator|::
name|tst_QAbstractItemView
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QAbstractItemView
name|tst_QAbstractItemView
operator|::
name|~
name|tst_QAbstractItemView
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QAbstractItemView
operator|::
name|initTestCase
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE_WM
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QAbstractItemView
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|emptyModels_data
name|void
name|tst_QAbstractItemView
operator|::
name|emptyModels_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"viewType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QListView"
argument_list|)
operator|<<
literal|"QListView"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTableView"
argument_list|)
operator|<<
literal|"QTableView"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTreeView"
argument_list|)
operator|<<
literal|"QTreeView"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QHeaderView"
argument_list|)
operator|<<
literal|"QHeaderView"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyModels
name|void
name|tst_QAbstractItemView
operator|::
name|emptyModels
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|viewType
argument_list|)
expr_stmt|;
name|QScopedPointer
argument_list|<
name|QAbstractItemView
argument_list|>
name|view
decl_stmt|;
if|if
condition|(
name|viewType
operator|==
literal|"QListView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QListView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QTableView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QTableView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QTreeView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QTreeView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QHeaderView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|model
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|selectionModel
argument_list|()
argument_list|)
expr_stmt|;
comment|//QVERIFY(view->itemDelegate() != 0);
name|basic_tests
argument_list|(
cast|reinterpret_cast
argument_list|<
name|TestView
operator|*
argument_list|>
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setModel_data
name|void
name|tst_QAbstractItemView
operator|::
name|setModel_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"viewType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QListView"
argument_list|)
operator|<<
literal|"QListView"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTableView"
argument_list|)
operator|<<
literal|"QTableView"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTreeView"
argument_list|)
operator|<<
literal|"QTreeView"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QHeaderView"
argument_list|)
operator|<<
literal|"QHeaderView"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setModel
name|void
name|tst_QAbstractItemView
operator|::
name|setModel
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|viewType
argument_list|)
expr_stmt|;
name|QScopedPointer
argument_list|<
name|QAbstractItemView
argument_list|>
name|view
decl_stmt|;
if|if
condition|(
name|viewType
operator|==
literal|"QListView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QListView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QTableView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QTableView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QTreeView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QTreeView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QHeaderView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|view
operator|->
name|setModel
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|basic_tests
argument_list|(
cast|reinterpret_cast
argument_list|<
name|TestView
operator|*
argument_list|>
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|basic_tests
name|void
name|tst_QAbstractItemView
operator|::
name|basic_tests
parameter_list|(
name|TestView
modifier|*
name|view
parameter_list|)
block|{
comment|// setSelectionModel
comment|// Will assert as it should
comment|//view->setSelectionModel(0);
comment|// setItemDelegate
comment|//view->setItemDelegate(0);
comment|// Will asswert as it should
comment|// setSelectionMode
name|view
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|SingleSelection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionMode
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|SingleSelection
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ContiguousSelection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionMode
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|ContiguousSelection
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionMode
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|MultiSelection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionMode
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|MultiSelection
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|NoSelection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionMode
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|NoSelection
argument_list|)
expr_stmt|;
comment|// setSelectionBehavior
name|view
operator|->
name|setSelectionBehavior
argument_list|(
name|QAbstractItemView
operator|::
name|SelectItems
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionBehavior
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|SelectItems
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSelectionBehavior
argument_list|(
name|QAbstractItemView
operator|::
name|SelectRows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionBehavior
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|SelectRows
argument_list|)
expr_stmt|;
name|view
operator|->
name|setSelectionBehavior
argument_list|(
name|QAbstractItemView
operator|::
name|SelectColumns
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|selectionBehavior
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|SelectColumns
argument_list|)
expr_stmt|;
comment|// setEditTriggers
name|view
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|EditKeyPressed
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|editTriggers
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|EditKeyPressed
argument_list|)
expr_stmt|;
name|view
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|NoEditTriggers
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|editTriggers
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|NoEditTriggers
argument_list|)
expr_stmt|;
name|view
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|CurrentChanged
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|editTriggers
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|CurrentChanged
argument_list|)
expr_stmt|;
name|view
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|DoubleClicked
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|editTriggers
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|DoubleClicked
argument_list|)
expr_stmt|;
name|view
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|SelectedClicked
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|editTriggers
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|SelectedClicked
argument_list|)
expr_stmt|;
name|view
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|AnyKeyPressed
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|editTriggers
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|AnyKeyPressed
argument_list|)
expr_stmt|;
name|view
operator|->
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|AllEditTriggers
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|editTriggers
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|AllEditTriggers
argument_list|)
expr_stmt|;
comment|// setAutoScroll
name|view
operator|->
name|setAutoScroll
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|hasAutoScroll
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setAutoScroll
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|hasAutoScroll
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// setTabKeyNavigation
name|view
operator|->
name|setTabKeyNavigation
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|tabKeyNavigation
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setTabKeyNavigation
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|tabKeyNavigation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
comment|// setDropIndicatorShown
name|view
operator|->
name|setDropIndicatorShown
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|showDropIndicator
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setDropIndicatorShown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|showDropIndicator
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// setDragEnabled
name|view
operator|->
name|setDragEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|dragEnabled
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setDragEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|dragEnabled
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// setAlternatingRowColors
name|view
operator|->
name|setAlternatingRowColors
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|alternatingRowColors
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|view
operator|->
name|setAlternatingRowColors
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|alternatingRowColors
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// setIconSize
name|view
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|iconSize
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|iconSize
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
comment|// Should this happen?
name|view
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|iconSize
argument_list|()
argument_list|,
name|QSize
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|rootIndex
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|keyboardSearch
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|view
operator|->
name|keyboardSearch
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|view
operator|->
name|keyboardSearch
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|visualRect
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
name|QRect
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|scrollTo
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sizeHintForIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
name|QSize
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|indexAt
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|view
operator|->
name|model
argument_list|()
condition|)
block|{
name|QCOMPARE
argument_list|(
name|view
operator|->
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sizeHintForRow
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|->
name|sizeHintForColumn
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|view
operator|->
name|itemDelegate
argument_list|()
condition|)
block|{
name|view
operator|->
name|sizeHintForRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|sizeHintForColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|view
operator|->
name|openPersistentEditor
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|closePersistentEditor
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|reset
argument_list|()
expr_stmt|;
name|view
operator|->
name|setRootIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|doItemsLayout
argument_list|()
expr_stmt|;
name|view
operator|->
name|selectAll
argument_list|()
expr_stmt|;
name|view
operator|->
name|edit
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|clearSelection
argument_list|()
expr_stmt|;
name|view
operator|->
name|setCurrentIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
comment|// protected methods
name|view
operator|->
name|tst_dataChanged
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_rowsInserted
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_rowsAboutToBeRemoved
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_selectionChanged
argument_list|(
name|QItemSelection
argument_list|()
argument_list|,
name|QItemSelection
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|view
operator|->
name|model
argument_list|()
condition|)
block|{
name|view
operator|->
name|tst_currentChanged
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_currentChanged
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|view
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|view
operator|->
name|tst_updateEditorData
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_updateEditorGeometries
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_updateGeometries
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_verticalScrollbarAction
argument_list|(
name|QAbstractSlider
operator|::
name|SliderSingleStepAdd
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_horizontalScrollbarAction
argument_list|(
name|QAbstractSlider
operator|::
name|SliderSingleStepAdd
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_verticalScrollbarValueChanged
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_horizontalScrollbarValueChanged
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_closeEditor
argument_list|(
literal|0
argument_list|,
name|QAbstractItemDelegate
operator|::
name|NoHint
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_commitData
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_editorDestroyed
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setHorizontalStepsPerItem
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_horizontalStepsPerItem
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_setVerticalStepsPerItem
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_verticalStepsPerItem
argument_list|()
expr_stmt|;
comment|// Will assert as it should
comment|// view->setIndexWidget(QModelIndex(), 0);
name|view
operator|->
name|tst_moveCursor
argument_list|(
name|TestView
operator|::
name|MoveUp
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_horizontalOffset
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_verticalOffset
argument_list|()
expr_stmt|;
comment|//    view->tst_isIndexHidden(QModelIndex()); // will (correctly) assert
if|if
condition|(
name|view
operator|->
name|model
argument_list|()
condition|)
name|view
operator|->
name|tst_isIndexHidden
argument_list|(
name|view
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setSelection
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|ClearAndSelect
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setSelection
argument_list|(
name|QRect
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|ClearAndSelect
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_visualRegionForSelection
argument_list|(
name|QItemSelection
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_selectedIndexes
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_edit
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|NoEditTriggers
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_selectionCommand
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
if|if
condition|(
operator|!
name|view
operator|->
name|model
argument_list|()
condition|)
name|view
operator|->
name|tst_startDrag
argument_list|(
name|Qt
operator|::
name|CopyAction
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_viewOptions
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|NoState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|tst_state
argument_list|()
operator|==
name|TestView
operator|::
name|NoState
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|DraggingState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|tst_state
argument_list|()
operator|==
name|TestView
operator|::
name|DraggingState
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|DragSelectingState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|tst_state
argument_list|()
operator|==
name|TestView
operator|::
name|DragSelectingState
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|EditingState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|tst_state
argument_list|()
operator|==
name|TestView
operator|::
name|EditingState
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|ExpandingState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|tst_state
argument_list|()
operator|==
name|TestView
operator|::
name|ExpandingState
argument_list|)
expr_stmt|;
name|view
operator|->
name|tst_setState
argument_list|(
name|TestView
operator|::
name|CollapsingState
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|tst_state
argument_list|()
operator|==
name|TestView
operator|::
name|CollapsingState
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|view
operator|->
name|tst_startAutoScroll
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_stopAutoScroll
argument_list|()
expr_stmt|;
name|view
operator|->
name|tst_doAutoScroll
argument_list|()
expr_stmt|;
comment|// testing mouseFoo and key functions
comment|//     QTest::mousePress(view, Qt::LeftButton, Qt::NoModifier, QPoint(0,0));
comment|//     mouseMove(view, Qt::LeftButton, Qt::NoModifier, QPoint(10,10));
comment|//     QTest::mouseRelease(view, Qt::LeftButton, Qt::NoModifier, QPoint(10,10));
comment|//     QTest::mouseClick(view, Qt::LeftButton, Qt::NoModifier, QPoint(10,10));
comment|//     mouseDClick(view, Qt::LeftButton, Qt::NoModifier, QPoint(10,10));
comment|//     QTest::keyClick(view, Qt::Key_A);
block|}
end_function
begin_function
DECL|function|noModel
name|void
name|tst_QAbstractItemView
operator|::
name|noModel
parameter_list|()
block|{
comment|// From task #85415
name|QStandardItemModel
name|model
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QTreeView
name|view
decl_stmt|;
name|setFrameless
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|// Make the viewport smaller than the contents, so that we can scroll
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
comment|// make sure that the scrollbars are not at value 0
name|view
operator|.
name|scrollTo
argument_list|(
name|view
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// Due to the model is removed, this will generate a valueChanged signal on both scrollbars. (value to 0)
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|model
argument_list|()
argument_list|,
operator|(
name|QAbstractItemModel
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dragSelect
name|void
name|tst_QAbstractItemView
operator|::
name|dragSelect
parameter_list|()
block|{
comment|// From task #86108
name|QStandardItemModel
name|model
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|int
name|delay
init|=
literal|2
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|bool
name|tracking
init|=
operator|(
name|i
operator|==
literal|1
operator|)
decl_stmt|;
name|view
operator|.
name|setMouseTracking
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
operator|&
name|view
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|delay
argument_list|)
expr_stmt|;
name|view
operator|.
name|setMouseTracking
argument_list|(
name|tracking
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
operator|&
name|view
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|delay
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|rowDelegate
name|void
name|tst_QAbstractItemView
operator|::
name|rowDelegate
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|MyAbstractItemDelegate
name|delegate
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegateForRow
argument_list|(
literal|3
argument_list|,
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|openPersistentEditor
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w
init|=
name|view
operator|.
name|indexWidget
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QWidget"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|columnDelegate
name|void
name|tst_QAbstractItemView
operator|::
name|columnDelegate
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|MyAbstractItemDelegate
name|delegate
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegateForColumn
argument_list|(
literal|3
argument_list|,
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|view
operator|.
name|openPersistentEditor
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w
init|=
name|view
operator|.
name|indexWidget
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|,
literal|"QWidget"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectAll
name|void
name|tst_QAbstractItemView
operator|::
name|selectAll
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|TestView
modifier|*
name|tst_view
init|=
operator|(
name|TestView
operator|*
operator|)
operator|&
name|view
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tst_view
operator|->
name|tst_selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tst_view
operator|->
name|tst_selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|4
operator|*
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ctrlA
name|void
name|tst_QAbstractItemView
operator|::
name|ctrlA
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|TestView
modifier|*
name|tst_view
init|=
operator|(
name|TestView
operator|*
operator|)
operator|&
name|view
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tst_view
operator|->
name|tst_selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tst_view
operator|->
name|tst_selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|4
operator|*
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|persistentEditorFocus
name|void
name|tst_QAbstractItemView
operator|::
name|persistentEditorFocus
parameter_list|()
block|{
comment|// one row, three columns
name|QStandardItemModel
name|model
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|i
control|)
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
name|i
argument_list|)
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|openPersistentEditor
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|openPersistentEditor
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|//these are spinboxes because we put numbers inside
name|QList
argument_list|<
name|QSpinBox
modifier|*
argument_list|>
name|list
init|=
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|findChildren
argument_list|<
name|QSpinBox
operator|*
argument_list|>
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|//these should be the 2 editors
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QTRY_VERIFY
argument_list|(
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QPoint
name|p
init|=
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|QMouseEvent
name|mouseEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|p
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
operator|&
name|mouseEvent
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|qApp
operator|->
name|focusWidget
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"Some window managers don't handle focus that well"
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
end_if
begin_if
if|#
directive|if
literal|0
end_if
begin_comment
unit|static void sendMouseMove(QWidget *widget, QPoint pos = QPoint()) {     if (pos.isNull())         pos = widget->rect().center();     QMouseEvent event(QEvent::MouseMove, pos, widget->mapToGlobal(pos), Qt::NoButton, 0, 0);     QCursor::setPos(widget->mapToGlobal(pos));     qApp->processEvents();     QVERIFY(QTest::qWaitForWindowExposed(widget));     QApplication::sendEvent(widget,&event); }  static void sendMousePress(     QWidget *widget, QPoint pos = QPoint(), Qt::MouseButton button = Qt::LeftButton) {     if (pos.isNull())          pos = widget->rect().center();     QMouseEvent event(QEvent::MouseButtonPress, pos, widget->mapToGlobal(pos), button, 0, 0);     QApplication::sendEvent(widget,&event); }  static void sendMouseRelease(     QWidget *widget, QPoint pos = QPoint(), Qt::MouseButton button = Qt::LeftButton) {     if (pos.isNull())          pos = widget->rect().center();     QMouseEvent event(QEvent::MouseButtonRelease, pos, widget->mapToGlobal(pos), button, 0, 0);     QApplication::sendEvent(widget,&event); }  class DnDTestModel : public QStandardItemModel {     Q_OBJECT     bool dropMimeData(const QMimeData *md, Qt::DropAction action, int r, int c, const QModelIndex&p)     {         dropAction_result = action;         QStandardItemModel::dropMimeData(md, action, r, c, p);         return true;     }     Qt::DropActions supportedDropActions() const { return Qt::CopyAction | Qt::MoveAction; }      Qt::DropAction dropAction_result; public:     DnDTestModel() : QStandardItemModel(20, 20), dropAction_result(Qt::IgnoreAction) {         for (int i = 0; i< rowCount(); ++i)             setData(index(i, 0), QString("%1").arg(i));     }     Qt::DropAction dropAction() const { return dropAction_result; } };  class DnDTestView : public QTreeView {     Q_OBJECT      QPoint dropPoint;     Qt::DropAction dropAction;      void dragEnterEvent(QDragEnterEvent *event)     {         QAbstractItemView::dragEnterEvent(event);     }      void dropEvent(QDropEvent *event)     {         event->setDropAction(dropAction);         QTreeView::dropEvent(event);     }      void timerEvent(QTimerEvent *event)     {         killTimer(event->timerId());         sendMouseMove(this, dropPoint);         sendMouseRelease(this);     }      void mousePressEvent(QMouseEvent *e)     {         QTreeView::mousePressEvent(e);          startTimer(0);         setState(DraggingState);         startDrag(dropAction);     }  public:     DnDTestView(Qt::DropAction dropAction, QAbstractItemModel *model)         : dropAction(dropAction)     {         header()->hide();         setModel(model);         setDragDropMode(QAbstractItemView::DragDrop);         setAcceptDrops(true);         setDragEnabled(true);     }      void dragAndDrop(QPoint drag, QPoint drop)     {         dropPoint = drop;         setCurrentIndex(indexAt(drag));         sendMousePress(viewport(), drag);     } };  class DnDTestWidget : public QWidget {     Q_OBJECT      Qt::DropAction dropAction_request;     Qt::DropAction dropAction_result;     QWidget *dropTarget;      void timerEvent(QTimerEvent *event)     {         killTimer(event->timerId());         sendMouseMove(dropTarget);         sendMouseRelease(dropTarget);     }      void mousePressEvent(QMouseEvent *)     {         QDrag *drag = new QDrag(this);         QMimeData *mimeData = new QMimeData;         mimeData->setData("application/x-qabstractitemmodeldatalist", QByteArray(""));         drag->setMimeData(mimeData);         startTimer(0);         dropAction_result = drag->start(dropAction_request);     }  public:     Qt::DropAction dropAction() const { return dropAction_result; }      void dragAndDrop(QWidget *dropTarget, Qt::DropAction dropAction)     {         this->dropTarget = dropTarget;         dropAction_request = dropAction;         sendMousePress(this);     } };  void tst_QAbstractItemView::dragAndDrop() {
comment|// From Task 137729
end_comment
begin_comment
unit|const int attempts = 10;     int successes = 0;     for (int i = 0; i< attempts; ++i) {         Qt::DropAction dropAction = Qt::MoveAction;          DnDTestModel model;         DnDTestView view(dropAction,&model);         DnDTestWidget widget;          const int size = 200;         widget.setFixedSize(size, size);         view.setFixedSize(size, size);          widget.move(0, 0);         view.move(int(size * 1.5), int(size * 1.5));          widget.show();         view.show();         QVERIFY(QTest::qWaitForWindowExposed(&widget));         QVERIFY(QTest::qWaitForWindowExposed(&view));          widget.dragAndDrop(&view, dropAction);         if (model.dropAction() == dropAction&& widget.dropAction() == dropAction)             ++successes;     }      if (successes< attempts) {         QString msg = QString("# successes (%1)< # attempts (%2)").arg(successes).arg(attempts);         QWARN(msg.toLatin1());     }     QVERIFY(successes> 0);
comment|// allow for some "event unstability" (i.e. unless
end_comment
begin_comment
comment|// successes == 0, QAbstractItemView is probably ok!)
end_comment
begin_endif
unit|}  void tst_QAbstractItemView::dragAndDropOnChild() {      const int attempts = 10;     int successes = 0;     for (int i = 0; i< attempts; ++i) {         Qt::DropAction dropAction = Qt::MoveAction;          DnDTestModel model;         QModelIndex parent = model.index(0, 0);         model.insertRow(0, parent);         model.insertColumn(0, parent);         QModelIndex child = model.index(0, 0, parent);         model.setData(child, "child");         QCOMPARE(model.rowCount(parent), 1);         DnDTestView view(dropAction,&model);         view.setExpanded(parent, true);         view.setDragDropMode(QAbstractItemView::InternalMove);          const int size = 200;         view.setFixedSize(size, size);         view.move(int(size * 1.5), int(size * 1.5));         view.show();         QVERIFY(QTest::qWaitForWindowExposed(&view));          view.dragAndDrop(view.visualRect(parent).center(),                          view.visualRect(child).center());         if (model.dropAction() == dropAction)             ++successes;     }      QVERIFY(successes == 0); }
endif|#
directive|endif
end_endif
begin_comment
comment|// 0
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !Q_OS_MAC&& !Q_OS_WIN
end_comment
begin_class
DECL|class|TestModel
class|class
name|TestModel
super|:
specifier|public
name|QStandardItemModel
block|{
public|public:
DECL|function|TestModel
name|TestModel
parameter_list|(
name|int
name|rows
parameter_list|,
name|int
name|columns
parameter_list|)
member_init_list|:
name|QStandardItemModel
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|)
block|{
name|setData_count
operator|=
literal|0
expr_stmt|;
block|}
DECL|function|setData
specifier|virtual
name|bool
name|setData
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
comment|/*index*/
parameter_list|,
specifier|const
name|QVariant
modifier|&
comment|/*value*/
parameter_list|,
name|int
comment|/*role = Qt::EditRole*/
parameter_list|)
block|{
operator|++
name|setData_count
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|member|setData_count
name|int
name|setData_count
decl_stmt|;
block|}
class|;
end_class
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_function
DECL|function|setItemDelegate_data
name|void
name|tst_QAbstractItemView
operator|::
name|setItemDelegate_data
parameter_list|()
block|{
comment|// default is rows, a -1 will switch to columns
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"rowsOrColumnsWithDelegate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"cellToEdit"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4 columndelegates"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2 identical rowdelegates on the same row"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
operator|)
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2 identical columndelegates on the same column"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|)
operator|<<
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2 duplicate delegates, 1 row and 1 column"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|)
operator|<<
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4 duplicate delegates, 2 row and 2 column"
argument_list|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|)
operator|<<
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setItemDelegate
name|void
name|tst_QAbstractItemView
operator|::
name|setItemDelegate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|rowsOrColumnsWithDelegate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|cellToEdit
argument_list|)
expr_stmt|;
name|QTableView
name|v
decl_stmt|;
name|QItemDelegate
modifier|*
name|delegate
init|=
operator|new
name|QItemDelegate
argument_list|(
operator|&
name|v
argument_list|)
decl_stmt|;
name|TestModel
name|model
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|v
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|bool
name|row
init|=
literal|true
decl_stmt|;
foreach|foreach
control|(
name|int
name|rc
decl|,
name|rowsOrColumnsWithDelegate
control|)
block|{
if|if
condition|(
name|rc
operator|==
operator|-
literal|1
condition|)
block|{
name|row
operator|=
operator|!
name|row
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|row
condition|)
block|{
name|v
operator|.
name|setItemDelegateForRow
argument_list|(
name|rc
argument_list|,
name|delegate
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|v
operator|.
name|setItemDelegateForColumn
argument_list|(
name|rc
argument_list|,
name|delegate
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|centerOnScreen
argument_list|(
operator|&
name|v
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|v
argument_list|)
expr_stmt|;
name|v
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|QCursor
operator|::
name|setPos
argument_list|(
name|v
operator|.
name|geometry
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|v
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|v
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|cellToEdit
operator|.
name|y
argument_list|()
argument_list|,
name|cellToEdit
operator|.
name|x
argument_list|()
argument_list|)
decl_stmt|;
name|v
operator|.
name|edit
argument_list|(
name|index
argument_list|)
expr_stmt|;
comment|// This will close the editor
name|QTRY_VERIFY
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|editor
init|=
name|QApplication
operator|::
name|focusWidget
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|editor
operator|->
name|hide
argument_list|()
expr_stmt|;
operator|delete
name|editor
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|setData_count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|delegate
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noFallbackToRoot
name|void
name|tst_QAbstractItemView
operator|::
name|noFallbackToRoot
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|model
operator|.
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
literal|"top"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|par1
init|=
name|model
operator|.
name|item
argument_list|(
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|15
condition|;
operator|++
name|j
control|)
name|par1
operator|->
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
literal|"sub"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|j
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|par2
init|=
name|par1
operator|->
name|child
argument_list|(
literal|2
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
literal|10
condition|;
operator|++
name|k
control|)
name|par2
operator|->
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
literal|"bot"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|k
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|it1
init|=
name|par2
operator|->
name|child
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|QModelIndex
name|parent1
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
name|par1
argument_list|)
decl_stmt|;
name|QModelIndex
name|parent2
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
name|par2
argument_list|)
decl_stmt|;
name|QModelIndex
name|item1
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
name|it1
argument_list|)
decl_stmt|;
name|QTreeView
name|v
decl_stmt|;
name|v
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|v
operator|.
name|setRootIndex
argument_list|(
name|parent1
argument_list|)
expr_stmt|;
name|v
operator|.
name|setCurrentIndex
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|item1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
name|parent2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|parent2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|15
argument_list|,
name|parent1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentIndex_data
name|void
name|tst_QAbstractItemView
operator|::
name|setCurrentIndex_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"viewType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"itemFlags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QStringList
name|widgets
decl_stmt|;
name|widgets
operator|<<
literal|"QListView"
operator|<<
literal|"QTreeView"
operator|<<
literal|"QHeaderView"
operator|<<
literal|"QTableView"
expr_stmt|;
foreach|foreach
control|(
name|QString
name|widget
decl|,
name|widgets
control|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
name|widget
operator|+
name|QLatin1String
argument_list|(
literal|": no flags"
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
name|widget
operator|<<
operator|(
name|int
operator|)
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
name|widget
operator|+
name|QLatin1String
argument_list|(
literal|": checkable"
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
name|widget
operator|<<
operator|(
name|int
operator|)
name|Qt
operator|::
name|ItemIsUserCheckable
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
name|widget
operator|+
name|QLatin1String
argument_list|(
literal|": selectable"
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
name|widget
operator|<<
operator|(
name|int
operator|)
name|Qt
operator|::
name|ItemIsSelectable
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
name|widget
operator|+
name|QLatin1String
argument_list|(
literal|": enabled"
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
name|widget
operator|<<
operator|(
name|int
operator|)
name|Qt
operator|::
name|ItemIsEnabled
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
name|widget
operator|+
name|QLatin1String
argument_list|(
literal|": enabled|selectable"
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
name|widget
operator|<<
call|(
name|int
call|)
argument_list|(
name|Qt
operator|::
name|ItemIsSelectable
operator||
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setCurrentIndex
name|void
name|tst_QAbstractItemView
operator|::
name|setCurrentIndex
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|viewType
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|itemFlags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QScopedPointer
argument_list|<
name|QAbstractItemView
argument_list|>
name|view
decl_stmt|;
if|if
condition|(
name|viewType
operator|==
literal|"QListView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QListView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QTableView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QTableView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QTreeView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QTreeView
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|viewType
operator|==
literal|"QHeaderView"
condition|)
name|view
operator|.
name|reset
argument_list|(
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QStandardItemModel
modifier|*
name|model
init|=
operator|new
name|QStandardItemModel
argument_list|(
name|view
operator|.
name|data
argument_list|()
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"first item"
argument_list|)
decl_stmt|;
name|item
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsSelectable
operator||
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
name|model
operator|->
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|QStandardItem
argument_list|(
literal|"test item"
argument_list|)
expr_stmt|;
name|item
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemFlags
argument_list|(
name|itemFlags
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|->
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|view
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|view
operator|->
name|setCurrentIndex
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|currentIndex
argument_list|()
operator|==
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|setCurrentIndex
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|currentIndex
argument_list|()
operator|==
name|model
operator|->
name|index
argument_list|(
name|result
condition|?
literal|1
else|:
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task221955_selectedEditor
name|void
name|tst_QAbstractItemView
operator|::
name|task221955_selectedEditor
parameter_list|()
block|{
name|QPushButton
modifier|*
name|button
decl_stmt|;
name|QTreeWidget
name|tree
decl_stmt|;
name|tree
operator|.
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|tree
operator|.
name|addTopLevelItem
argument_list|(
operator|new
name|QTreeWidgetItem
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"Foo"
operator|<<
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|addTopLevelItem
argument_list|(
operator|new
name|QTreeWidgetItem
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"Bar"
operator|<<
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|addTopLevelItem
argument_list|(
operator|new
name|QTreeWidgetItem
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"Baz"
operator|<<
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|dummy
init|=
operator|new
name|QTreeWidgetItem
argument_list|()
decl_stmt|;
name|tree
operator|.
name|addTopLevelItem
argument_list|(
name|dummy
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setItemWidget
argument_list|(
name|dummy
argument_list|,
literal|0
argument_list|,
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"More..."
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// as recommended in doc
name|centerOnScreen
argument_list|(
operator|&
name|tree
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|tree
argument_list|)
expr_stmt|;
name|tree
operator|.
name|show
argument_list|()
expr_stmt|;
name|tree
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|tree
operator|.
name|setCurrentIndex
argument_list|(
name|tree
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|tree
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|tree
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|tree
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|contains
argument_list|(
name|tree
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//We set the focus to the button, the index need to be selected
name|button
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tree
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|contains
argument_list|(
name|tree
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setCurrentIndex
argument_list|(
name|tree
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|tree
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|contains
argument_list|(
name|tree
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//Same thing but with the flag NoSelection,   nothing can be selected.
name|tree
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|tree
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|NoSelection
argument_list|)
expr_stmt|;
name|tree
operator|.
name|clearSelection
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|tree
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|button
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tree
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task250754_fontChange
name|void
name|tst_QAbstractItemView
operator|::
name|task250754_fontChange
parameter_list|()
block|{
name|QString
name|app_css
init|=
name|qApp
operator|->
name|styleSheet
argument_list|()
decl_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
literal|"/*  */"
argument_list|)
expr_stmt|;
name|QWidget
name|w
decl_stmt|;
name|QTreeView
name|tree
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|vLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|tree
argument_list|)
expr_stmt|;
name|QStandardItemModel
modifier|*
name|m
init|=
operator|new
name|QStandardItemModel
argument_list|(
name|this
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"Item number %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|5
condition|;
operator|++
name|j
control|)
block|{
name|QStandardItem
modifier|*
name|child
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"Child Item number %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
argument_list|)
decl_stmt|;
name|item
operator|->
name|setChild
argument_list|(
name|j
argument_list|,
literal|0
argument_list|,
name|child
argument_list|)
expr_stmt|;
block|}
name|m
operator|->
name|setItem
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
name|tree
operator|.
name|setModel
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setHeaderHidden
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// The header is (in certain styles) dpi dependent
name|w
operator|.
name|resize
argument_list|(
literal|160
argument_list|,
literal|300
argument_list|)
expr_stmt|;
comment|// Minimum width for windows with frame on Windows 8
name|centerOnScreen
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|w
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QFont
name|font
init|=
name|tree
operator|.
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setPixelSize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|tree
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPixelSize
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
comment|//now with the huge items, the scrollbar must be visible
name|QTRY_VERIFY
argument_list|(
name|tree
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|app_css
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task200665_itemEntered
name|void
name|tst_QAbstractItemView
operator|::
name|task200665_itemEntered
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE_WM
name|QSKIP
argument_list|(
literal|"On Windows Mobile the mouse tracking is unavailable at the moment"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|//we test that view will emit entered
comment|//when the scrollbar move but not the mouse itself
name|QStandardItemModel
name|model
argument_list|(
literal|1000
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QCursor
operator|::
name|setPos
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|mapToGlobal
argument_list|(
name|rect
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|(
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task257481_emptyEditor
name|void
name|tst_QAbstractItemView
operator|::
name|task257481_emptyEditor
parameter_list|()
block|{
name|QIcon
name|icon
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|QStyle
operator|::
name|SP_ComputerIcon
argument_list|)
decl_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|icon
argument_list|,
name|QString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|icon
argument_list|,
literal|"Editor works"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTreeView
name|treeView
decl_stmt|;
name|treeView
operator|.
name|setRootIsDecorated
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|treeView
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|treeView
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|treeView
argument_list|)
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|edit
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QLineEdit
modifier|*
argument_list|>
name|lineEditors
init|=
name|treeView
operator|.
name|viewport
argument_list|()
operator|->
name|findChildren
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|lineEditors
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|lineEditors
operator|.
name|first
argument_list|()
operator|->
name|size
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|edit
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lineEditors
operator|=
name|treeView
operator|.
name|viewport
argument_list|()
operator|->
name|findChildren
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEditors
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|lineEditors
operator|.
name|first
argument_list|()
operator|->
name|size
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|edit
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|lineEditors
operator|=
name|treeView
operator|.
name|viewport
argument_list|()
operator|->
name|findChildren
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEditors
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|lineEditors
operator|.
name|first
argument_list|()
operator|->
name|size
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|shiftArrowSelectionAfterScrolling
name|void
name|tst_QAbstractItemView
operator|::
name|shiftArrowSelectionAfterScrolling
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setFixedSize
argument_list|(
literal|160
argument_list|,
literal|250
argument_list|)
expr_stmt|;
comment|// Minimum width for windows with frame on Windows 8
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|view
operator|.
name|setGridSize
argument_list|(
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QListView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|index0
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|index1
init|=
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|index9
init|=
name|model
operator|.
name|index
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|setCurrentIndex
argument_list|(
name|index0
argument_list|,
name|QItemSelectionModel
operator|::
name|NoUpdate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index0
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|index9
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index1
argument_list|)
expr_stmt|;
name|QModelIndexList
name|selected
init|=
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|shiftSelectionAfterRubberbandSelection
name|void
name|tst_QAbstractItemView
operator|::
name|shiftSelectionAfterRubberbandSelection
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setFixedSize
argument_list|(
literal|160
argument_list|,
literal|450
argument_list|)
expr_stmt|;
comment|// Minimum width for windows with frame on Windows 8
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|view
operator|.
name|setGridSize
argument_list|(
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QListView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|index0
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|index1
init|=
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|index2
init|=
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index0
argument_list|)
expr_stmt|;
comment|// Determine the points where the rubberband selection starts and ends
name|QPoint
name|pressPos
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index1
argument_list|)
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPoint
name|releasePos
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index1
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|indexAt
argument_list|(
name|pressPos
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|indexAt
argument_list|(
name|releasePos
argument_list|)
argument_list|,
name|index1
argument_list|)
expr_stmt|;
comment|// Select item 1 using a rubberband selection
comment|// The mouse move event has to be created manually because the QTest framework does not
comment|// contain a function for mouse moves with buttons pressed
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|pressPos
argument_list|)
expr_stmt|;
name|QMouseEvent
name|moveEvent
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|releasePos
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|bool
name|moveEventReceived
init|=
name|qApp
operator|->
name|notify
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|moveEvent
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|moveEventReceived
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|releasePos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index1
argument_list|)
expr_stmt|;
comment|// Shift-click item 2
name|QPoint
name|item2Pos
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index2
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|,
name|item2Pos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index2
argument_list|)
expr_stmt|;
comment|// Verify that the selection worked OK
name|QModelIndexList
name|selected
init|=
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Select item 0 to revert the selection
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index0
argument_list|)
expr_stmt|;
comment|// Repeat the same steps as above, but with a Shift-Arrow selection
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|pressPos
argument_list|)
expr_stmt|;
name|QMouseEvent
name|moveEvent2
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|releasePos
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|moveEventReceived
operator|=
name|qApp
operator|->
name|notify
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|moveEvent2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|moveEventReceived
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|releasePos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index1
argument_list|)
expr_stmt|;
comment|// Press Shift-Down
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index2
argument_list|)
expr_stmt|;
comment|// Verify that the selection worked OK
name|selected
operator|=
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ctrlRubberbandSelection
name|void
name|tst_QAbstractItemView
operator|::
name|ctrlRubberbandSelection
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
name|QListView
name|view
decl_stmt|;
name|view
operator|.
name|setFixedSize
argument_list|(
literal|160
argument_list|,
literal|450
argument_list|)
expr_stmt|;
comment|// Minimum width for windows with frame on Windows 8
name|view
operator|.
name|setFlow
argument_list|(
name|QListView
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
name|view
operator|.
name|setGridSize
argument_list|(
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QListView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|setViewMode
argument_list|(
name|QListView
operator|::
name|IconMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|index1
init|=
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|index2
init|=
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
comment|// Select item 1
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index1
argument_list|)
expr_stmt|;
name|QModelIndexList
name|selected
init|=
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now press control and draw a rubberband around items 1 and 2.
comment|// The mouse move event has to be created manually because the QTest framework does not
comment|// contain a function for mouse moves with buttons pressed.
name|QPoint
name|pressPos
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index1
argument_list|)
operator|.
name|topLeft
argument_list|()
operator|-
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QPoint
name|releasePos
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index2
argument_list|)
operator|.
name|bottomRight
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|,
name|pressPos
argument_list|)
expr_stmt|;
name|QMouseEvent
name|moveEvent
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|releasePos
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|bool
name|moveEventReceived
init|=
name|qApp
operator|->
name|notify
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|moveEvent
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|moveEventReceived
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|,
name|releasePos
argument_list|)
expr_stmt|;
comment|// Verify that item 2 is selected now
name|selected
operator|=
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selected
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|contains
argument_list|(
name|index2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG6407_extendedSelection
name|void
name|tst_QAbstractItemView
operator|::
name|QTBUG6407_extendedSelection
parameter_list|()
block|{
name|QListWidget
name|view
decl_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
operator|++
name|i
control|)
name|view
operator|.
name|addItem
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QFont
name|font
init|=
name|view
operator|.
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setPixelSize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|view
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|240
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|view
argument_list|)
argument_list|,
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QModelIndex
name|index49
init|=
name|view
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|49
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QPoint
name|p
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index49
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index49
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectedItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QModelIndex
name|index47
init|=
name|view
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|47
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|p
operator|=
name|view
operator|.
name|visualRect
argument_list|(
name|index47
argument_list|)
operator|.
name|center
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index47
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectedItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|//49, 48, 47;
name|QModelIndex
name|index44
init|=
name|view
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|44
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|p
operator|=
name|view
operator|.
name|visualRect
argument_list|(
name|index44
argument_list|)
operator|.
name|center
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index44
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectedItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|//49 .. 44;
block|}
end_function
begin_function
DECL|function|QTBUG6753_selectOnSelection
name|void
name|tst_QAbstractItemView
operator|::
name|QTBUG6753_selectOnSelection
parameter_list|()
block|{
name|QTableWidget
name|table
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|table
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|table
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|j
control|)
name|table
operator|.
name|setItem
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"choo-be-doo-wah"
argument_list|)
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|table
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|table
argument_list|)
expr_stmt|;
name|table
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|table
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|table
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|table
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndex
name|item
init|=
name|table
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QRect
name|itemRect
init|=
name|table
operator|.
name|visualRect
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
name|table
operator|.
name|viewport
argument_list|()
argument_list|,
name|itemRect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|table
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|itemRect
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|selectedItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|selectedItems
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|table
operator|.
name|item
argument_list|(
name|item
operator|.
name|row
argument_list|()
argument_list|,
name|item
operator|.
name|column
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testDelegateDestroyEditor
name|void
name|tst_QAbstractItemView
operator|::
name|testDelegateDestroyEditor
parameter_list|()
block|{
name|QTableWidget
name|table
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|MyAbstractItemDelegate
name|delegate
decl_stmt|;
name|table
operator|.
name|setItemDelegate
argument_list|(
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|table
operator|.
name|edit
argument_list|(
name|table
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|TestView
modifier|*
name|tv
init|=
cast|reinterpret_cast
argument_list|<
name|TestView
operator|*
argument_list|>
argument_list|(
operator|&
name|table
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|delegate
operator|.
name|calledVirtualDtor
argument_list|)
expr_stmt|;
name|tv
operator|->
name|tst_closeEditor
argument_list|(
name|delegate
operator|.
name|openedEditor
argument_list|,
name|QAbstractItemDelegate
operator|::
name|NoHint
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|delegate
operator|.
name|calledVirtualDtor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testClickedSignal
name|void
name|tst_QAbstractItemView
operator|::
name|testClickedSignal
parameter_list|()
block|{
if|#
directive|if
name|defined
name|Q_OS_BLACKBERRY
name|QWidget
name|rootWindow
decl_stmt|;
name|rootWindow
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|rootWindow
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTableWidget
name|view
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|view
argument_list|)
argument_list|,
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|index49
init|=
name|view
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|49
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QPoint
name|p
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index49
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|clickedSpy
argument_list|(
operator|&
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|RightButton
argument_list|,
literal|0
argument_list|,
name|p
argument_list|)
expr_stmt|;
comment|// We expect that right-clicks do not cause the clicked() signal to
comment|// be emitted.
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|StateChangeDelegate
class|class
name|StateChangeDelegate
super|:
specifier|public
name|QItemDelegate
block|{
name|Q_OBJECT
public|public:
DECL|function|StateChangeDelegate
specifier|explicit
name|StateChangeDelegate
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QItemDelegate
argument_list|(
name|parent
argument_list|)
block|{}
name|void
name|setEditorData
parameter_list|(
name|QWidget
modifier|*
name|editor
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|{
name|Q_UNUSED
argument_list|(
name|index
argument_list|)
expr_stmt|;
specifier|static
name|bool
name|w
init|=
literal|true
decl_stmt|;
name|editor
operator|->
name|setEnabled
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|w
operator|=
operator|!
name|w
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|StateChangeModel
class|class
name|StateChangeModel
super|:
specifier|public
name|QStandardItemModel
block|{
name|Q_OBJECT
public|public:
DECL|function|StateChangeModel
specifier|explicit
name|StateChangeModel
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QStandardItemModel
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|emitDataChanged
name|void
name|emitDataChanged
parameter_list|()
block|{
emit|emit
name|dataChanged
argument_list|(
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
emit|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|testChangeEditorState
name|void
name|tst_QAbstractItemView
operator|::
name|testChangeEditorState
parameter_list|()
block|{
comment|// Test for QTBUG-25370
name|StateChangeModel
name|model
decl_stmt|;
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"b"
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|CurrentChanged
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
operator|new
name|StateChangeDelegate
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|view
argument_list|)
argument_list|,
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|emitDataChanged
argument_list|()
expr_stmt|;
comment|// No segfault - the test passes.
block|}
end_function
begin_function
DECL|function|deselectInSingleSelection
name|void
name|tst_QAbstractItemView
operator|::
name|deselectInSingleSelection
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
name|QStandardItemModel
name|s
decl_stmt|;
name|s
operator|.
name|setRowCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|s
operator|.
name|setColumnCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|s
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|SingleSelection
argument_list|)
expr_stmt|;
name|view
operator|.
name|setEditTriggers
argument_list|(
name|QAbstractItemView
operator|::
name|NoEditTriggers
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
comment|// mouse
name|QModelIndex
name|index22
init|=
name|s
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QRect
name|rect22
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|index22
argument_list|)
decl_stmt|;
name|QPoint
name|clickpos
init|=
name|rect22
operator|.
name|center
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|clickpos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index22
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|,
name|clickpos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index22
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// second click with modifier however does select
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|,
name|clickpos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index22
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// keyboard
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Space
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index22
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Space
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index22
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// second keypress with modifier however does select
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Space
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index22
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testNoActivateOnDisabledItem
name|void
name|tst_QAbstractItemView
operator|::
name|testNoActivateOnDisabledItem
parameter_list|()
block|{
name|QTreeView
name|treeView
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
literal|"item"
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|item
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|NoItemFlags
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|treeView
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|treeView
argument_list|)
expr_stmt|;
name|treeView
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|treeView
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|treeView
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|activatedSpy
argument_list|(
operator|&
name|treeView
argument_list|,
name|SIGNAL
argument_list|(
name|activated
argument_list|(
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Ensure clicking on a disabled item doesn't emit itemActivated.
name|QModelIndex
name|itemIndex
init|=
name|treeView
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QPoint
name|clickPos
init|=
name|treeView
operator|.
name|visualRect
argument_list|(
name|itemIndex
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|treeView
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|clickPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|activatedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testFocusPolicy_data
name|void
name|tst_QAbstractItemView
operator|::
name|testFocusPolicy_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QAbstractItemDelegate
operator|*
argument_list|>
argument_list|(
literal|"delegate"
argument_list|)
expr_stmt|;
name|QAbstractItemDelegate
modifier|*
name|styledItemDelegate
init|=
operator|new
name|QStyledItemDelegate
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QAbstractItemDelegate
modifier|*
name|itemDelegate
init|=
operator|new
name|QItemDelegate
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QStyledItemDelegate"
argument_list|)
operator|<<
name|styledItemDelegate
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QItemDelegate"
argument_list|)
operator|<<
name|itemDelegate
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testFocusPolicy
name|void
name|tst_QAbstractItemView
operator|::
name|testFocusPolicy
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QAbstractItemDelegate
operator|*
argument_list|,
name|delegate
argument_list|)
expr_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QTableView
modifier|*
name|table
init|=
operator|new
name|QTableView
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|table
operator|->
name|setItemDelegate
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|setRowCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|model
operator|.
name|setColumnCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|table
operator|->
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|table
operator|->
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
comment|// itemview accepts focus => editor is closed => return focus to the itemview
name|QPoint
name|clickpos
init|=
name|table
operator|->
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
name|table
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|clickpos
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|editor
init|=
name|qApp
operator|->
name|focusWidget
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|editor
argument_list|,
name|Qt
operator|::
name|Key_Escape
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|table
argument_list|)
expr_stmt|;
comment|// itemview doesn't accept focus => editor is closed => clear the focus
name|table
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
name|table
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|clickpos
argument_list|)
expr_stmt|;
name|editor
operator|=
name|qApp
operator|->
name|focusWidget
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|editor
argument_list|,
name|Qt
operator|::
name|Key_Escape
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QItemSelection
argument_list|)
end_macro
begin_function
DECL|function|QTBUG31411_noSelection
name|void
name|tst_QAbstractItemView
operator|::
name|QTBUG31411_noSelection
parameter_list|()
block|{
name|QWidget
name|window
decl_stmt|;
name|QTableView
modifier|*
name|table
init|=
operator|new
name|QTableView
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|table
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|NoSelection
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|setRowCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|model
operator|.
name|setColumnCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|table
operator|->
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|table
operator|->
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|centerOnScreen
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|moveCursorAway
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QItemSelection
argument_list|>
argument_list|()
expr_stmt|;
name|QSignalSpy
name|selectionChangeSpy
argument_list|(
name|table
operator|->
name|selectionModel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|selectionChangeSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QPoint
name|clickpos
init|=
name|table
operator|->
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|table
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|clickpos
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
name|table
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|,
name|clickpos
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QWidget
argument_list|>
name|editor1
init|=
name|qApp
operator|->
name|focusWidget
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|editor1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|editor1
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QWidget
argument_list|>
name|editor2
init|=
name|qApp
operator|->
name|focusWidget
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|editor2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|editor2
argument_list|,
name|Qt
operator|::
name|Key_Escape
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selectionChangeSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QAbstractItemView
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qabstractitemview.moc"
end_include
end_unit
