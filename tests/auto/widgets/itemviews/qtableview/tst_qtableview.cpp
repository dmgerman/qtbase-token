begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui/QtGui>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QtWidgets>
end_include
begin_include
include|#
directive|include
file|<private/qtablewidget_p.h>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|"private/qapplication_p.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_define
DECL|macro|VERIFY_SPANS_CONSISTENCY
define|#
directive|define
name|VERIFY_SPANS_CONSISTENCY
parameter_list|(
name|TEST_VIEW_
parameter_list|)
define|\
value|QVERIFY(static_cast<QTableViewPrivate*>(QObjectPrivate::get(TEST_VIEW_))->spans.checkConsistency())
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|VERIFY_SPANS_CONSISTENCY
define|#
directive|define
name|VERIFY_SPANS_CONSISTENCY
parameter_list|(
name|TEST_VIEW_
parameter_list|)
value|(void)false
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntList
argument_list|)
end_macro
begin_typedef
DECL|typedef|BoolList
typedef|typedef
name|QList
argument_list|<
name|bool
argument_list|>
name|BoolList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|BoolList
argument_list|)
end_macro
begin_class
DECL|class|tst_QTableView
class|class
name|tst_QTableView
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QTableView
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QTableView
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|noDelegate
parameter_list|()
function_decl|;
name|void
name|noModel
parameter_list|()
function_decl|;
name|void
name|emptyModel
parameter_list|()
function_decl|;
name|void
name|removeRows_data
parameter_list|()
function_decl|;
name|void
name|removeRows
parameter_list|()
function_decl|;
name|void
name|removeColumns_data
parameter_list|()
function_decl|;
name|void
name|removeColumns
parameter_list|()
function_decl|;
name|void
name|keyboardNavigation_data
parameter_list|()
function_decl|;
name|void
name|keyboardNavigation
parameter_list|()
function_decl|;
name|void
name|headerSections_data
parameter_list|()
function_decl|;
name|void
name|headerSections
parameter_list|()
function_decl|;
name|void
name|moveCursor_data
parameter_list|()
function_decl|;
name|void
name|moveCursor
parameter_list|()
function_decl|;
name|void
name|moveCursorStrikesBack_data
parameter_list|()
function_decl|;
name|void
name|moveCursorStrikesBack
parameter_list|()
function_decl|;
name|void
name|hideRows_data
parameter_list|()
function_decl|;
name|void
name|hideRows
parameter_list|()
function_decl|;
name|void
name|hideColumns_data
parameter_list|()
function_decl|;
name|void
name|hideColumns
parameter_list|()
function_decl|;
name|void
name|selection_data
parameter_list|()
function_decl|;
name|void
name|selection
parameter_list|()
function_decl|;
name|void
name|selectRow_data
parameter_list|()
function_decl|;
name|void
name|selectRow
parameter_list|()
function_decl|;
name|void
name|selectColumn_data
parameter_list|()
function_decl|;
name|void
name|selectColumn
parameter_list|()
function_decl|;
name|void
name|visualRect_data
parameter_list|()
function_decl|;
name|void
name|visualRect
parameter_list|()
function_decl|;
name|void
name|fetchMore
parameter_list|()
function_decl|;
name|void
name|setHeaders
parameter_list|()
function_decl|;
name|void
name|resizeRowsToContents_data
parameter_list|()
function_decl|;
name|void
name|resizeRowsToContents
parameter_list|()
function_decl|;
name|void
name|resizeColumnsToContents_data
parameter_list|()
function_decl|;
name|void
name|resizeColumnsToContents
parameter_list|()
function_decl|;
name|void
name|rowViewportPosition_data
parameter_list|()
function_decl|;
name|void
name|rowViewportPosition
parameter_list|()
function_decl|;
name|void
name|rowAt_data
parameter_list|()
function_decl|;
name|void
name|rowAt
parameter_list|()
function_decl|;
name|void
name|rowHeight_data
parameter_list|()
function_decl|;
name|void
name|rowHeight
parameter_list|()
function_decl|;
name|void
name|columnViewportPosition_data
parameter_list|()
function_decl|;
name|void
name|columnViewportPosition
parameter_list|()
function_decl|;
name|void
name|columnAt_data
parameter_list|()
function_decl|;
name|void
name|columnAt
parameter_list|()
function_decl|;
name|void
name|columnWidth_data
parameter_list|()
function_decl|;
name|void
name|columnWidth
parameter_list|()
function_decl|;
name|void
name|hiddenRow_data
parameter_list|()
function_decl|;
name|void
name|hiddenRow
parameter_list|()
function_decl|;
name|void
name|hiddenColumn_data
parameter_list|()
function_decl|;
name|void
name|hiddenColumn
parameter_list|()
function_decl|;
name|void
name|sortingEnabled_data
parameter_list|()
function_decl|;
name|void
name|sortingEnabled
parameter_list|()
function_decl|;
name|void
name|scrollTo_data
parameter_list|()
function_decl|;
name|void
name|scrollTo
parameter_list|()
function_decl|;
name|void
name|indexAt_data
parameter_list|()
function_decl|;
name|void
name|indexAt
parameter_list|()
function_decl|;
name|void
name|span_data
parameter_list|()
function_decl|;
name|void
name|span
parameter_list|()
function_decl|;
name|void
name|spans
parameter_list|()
function_decl|;
name|void
name|spans_data
parameter_list|()
function_decl|;
name|void
name|spansAfterRowInsertion
parameter_list|()
function_decl|;
name|void
name|spansAfterColumnInsertion
parameter_list|()
function_decl|;
name|void
name|spansAfterRowRemoval
parameter_list|()
function_decl|;
name|void
name|spansAfterColumnRemoval
parameter_list|()
function_decl|;
name|void
name|checkHeaderReset
parameter_list|()
function_decl|;
name|void
name|checkHeaderMinSize
parameter_list|()
function_decl|;
name|void
name|resizeToContents
parameter_list|()
function_decl|;
name|void
name|tabFocus
parameter_list|()
function_decl|;
name|void
name|bigModel
parameter_list|()
function_decl|;
name|void
name|selectionSignal
parameter_list|()
function_decl|;
name|void
name|setCurrentIndex
parameter_list|()
function_decl|;
comment|// task-specific tests:
name|void
name|task173773_updateVerticalHeader
parameter_list|()
function_decl|;
name|void
name|task227953_setRootIndex
parameter_list|()
function_decl|;
name|void
name|task240266_veryBigColumn
parameter_list|()
function_decl|;
name|void
name|task248688_autoScrollNavigation
parameter_list|()
function_decl|;
name|void
name|task259308_scrollVerticalHeaderSwappedSections
parameter_list|()
function_decl|;
name|void
name|task191545_dragSelectRows
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_5062_spansInconsistency
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_4516_clickOnRichTextLabel
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_5237_wheelEventOnHeader
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_8585_crashForNoGoodReason
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_7774_RtoLVisualRegionForSelection
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_8777_scrollToSpans
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_10169_sizeHintForRow
parameter_list|()
function_decl|;
name|void
name|mouseWheel_data
parameter_list|()
function_decl|;
name|void
name|mouseWheel
parameter_list|()
function_decl|;
name|void
name|addColumnWhileEditing
parameter_list|()
function_decl|;
name|void
name|task234926_setHeaderSorting
parameter_list|()
function_decl|;
name|void
name|changeHeaderData
parameter_list|()
function_decl|;
name|void
name|viewOptions
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QTableView
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QTableView
name|obj1
decl_stmt|;
name|obj1
operator|.
name|setSortingEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|isSortingEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|isSortingEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShowGrid
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|showGrid
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShowGrid
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|showGrid
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setGridStyle
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|,
name|obj1
operator|.
name|gridStyle
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setGridStyle
argument_list|(
name|Qt
operator|::
name|SolidLine
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Qt
operator|::
name|SolidLine
argument_list|,
name|obj1
operator|.
name|gridStyle
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setRootIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|obj1
operator|.
name|rootIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setRootIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
argument_list|,
name|obj1
operator|.
name|rootIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QHeaderView
modifier|*
name|var1
init|=
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setHorizontalHeader
argument_list|(
name|var1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var1
argument_list|,
name|obj1
operator|.
name|horizontalHeader
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setHorizontalHeader
argument_list|(
operator|(
name|QHeaderView
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var1
argument_list|,
name|obj1
operator|.
name|horizontalHeader
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|var1
expr_stmt|;
name|QHeaderView
modifier|*
name|var2
init|=
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setVerticalHeader
argument_list|(
name|var2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var2
argument_list|,
name|obj1
operator|.
name|verticalHeader
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setVerticalHeader
argument_list|(
operator|(
name|QHeaderView
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var2
argument_list|,
name|obj1
operator|.
name|verticalHeader
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|var2
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|isCornerButtonEnabled
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCornerButtonEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|isCornerButtonEnabled
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|QtTestTableModel
class|class
name|QtTestTableModel
super|:
specifier|public
name|QAbstractTableModel
block|{
name|Q_OBJECT
signals|signals:
name|void
name|invalidIndexEncountered
parameter_list|()
specifier|const
function_decl|;
public|public
name|slots
public|:
DECL|function|submit
name|bool
name|submit
parameter_list|()
block|{
operator|++
name|submit_count
expr_stmt|;
return|return
name|QAbstractTableModel
operator|::
name|submit
argument_list|()
return|;
block|}
public|public:
DECL|function|QtTestTableModel
name|QtTestTableModel
parameter_list|(
name|int
name|rows
init|=
literal|0
parameter_list|,
name|int
name|columns
init|=
literal|0
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractTableModel
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|row_count
argument_list|(
name|rows
argument_list|)
member_init_list|,
name|column_count
argument_list|(
name|columns
argument_list|)
member_init_list|,
name|submit_count
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|can_fetch_more
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|fetch_more_count
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|disabled_rows
argument_list|()
member_init_list|,
name|disabled_columns
argument_list|()
block|{}
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
name|row_count
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
name|column_count
return|;
block|}
DECL|function|isEditable
name|bool
name|isEditable
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
literal|true
return|;
block|}
DECL|function|flags
name|Qt
operator|::
name|ItemFlags
name|flags
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
name|Qt
operator|::
name|ItemFlags
name|index_flags
init|=
name|QAbstractTableModel
operator|::
name|flags
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|disabled_rows
operator|.
name|contains
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|)
operator|||
name|disabled_columns
operator|.
name|contains
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|)
condition|)
name|index_flags
operator|&=
operator|~
name|Qt
operator|::
name|ItemIsEnabled
expr_stmt|;
return|return
name|index_flags
return|;
block|}
DECL|function|disableRow
name|void
name|disableRow
parameter_list|(
name|int
name|row
parameter_list|)
block|{
name|disabled_rows
operator|.
name|insert
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
DECL|function|enableRow
name|void
name|enableRow
parameter_list|(
name|int
name|row
parameter_list|)
block|{
name|disabled_rows
operator|.
name|remove
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
DECL|function|disableColumn
name|void
name|disableColumn
parameter_list|(
name|int
name|column
parameter_list|)
block|{
name|disabled_columns
operator|.
name|insert
argument_list|(
name|column
argument_list|)
expr_stmt|;
block|}
DECL|function|enableColumn
name|void
name|enableColumn
parameter_list|(
name|int
name|column
parameter_list|)
block|{
name|disabled_columns
operator|.
name|remove
argument_list|(
name|column
argument_list|)
expr_stmt|;
block|}
DECL|function|data
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|idx
parameter_list|,
name|int
name|role
parameter_list|)
specifier|const
block|{
if|if
condition|(
operator|!
name|idx
operator|.
name|isValid
argument_list|()
operator|||
name|idx
operator|.
name|row
argument_list|()
operator|>=
name|row_count
operator|||
name|idx
operator|.
name|column
argument_list|()
operator|>=
name|column_count
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"Invalid modelIndex [%d,%d,%p]"
operator|<<
name|idx
expr_stmt|;
emit|emit
name|invalidIndexEncountered
argument_list|()
emit|;
return|return
name|QVariant
argument_list|()
return|;
block|}
if|if
condition|(
name|role
operator|==
name|Qt
operator|::
name|DisplayRole
operator|||
name|role
operator|==
name|Qt
operator|::
name|EditRole
condition|)
return|return
name|QString
argument_list|(
literal|"[%1,%2,%3]"
argument_list|)
operator|.
name|arg
argument_list|(
name|idx
operator|.
name|row
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|idx
operator|.
name|column
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
literal|0
argument_list|)
return|;
return|return
name|QVariant
argument_list|()
return|;
block|}
DECL|function|insertRows
name|bool
name|insertRows
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
block|{
if|if
condition|(
name|start
argument_list|<
literal|0
operator|||
name|start
argument_list|>
name|row_count
condition|)
return|return
literal|false
return|;
name|beginInsertRows
argument_list|(
name|parent
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|count
operator|-
literal|1
argument_list|)
expr_stmt|;
name|row_count
operator|+=
name|count
expr_stmt|;
name|endInsertRows
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|function|removeRows
name|bool
name|removeRows
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
block|{
if|if
condition|(
name|start
operator|<
literal|0
operator|||
name|start
operator|>=
name|row_count
operator|||
name|row_count
operator|<
name|count
condition|)
return|return
literal|false
return|;
name|beginRemoveRows
argument_list|(
name|parent
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|count
operator|-
literal|1
argument_list|)
expr_stmt|;
name|row_count
operator|-=
name|count
expr_stmt|;
name|endRemoveRows
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|function|removeLastRow
name|void
name|removeLastRow
parameter_list|()
block|{
name|beginRemoveRows
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|row_count
operator|-
literal|1
argument_list|,
name|row_count
operator|-
literal|1
argument_list|)
expr_stmt|;
operator|--
name|row_count
expr_stmt|;
name|endRemoveRows
argument_list|()
expr_stmt|;
block|}
DECL|function|removeAllRows
name|void
name|removeAllRows
parameter_list|()
block|{
name|beginRemoveRows
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
literal|0
argument_list|,
name|row_count
operator|-
literal|1
argument_list|)
expr_stmt|;
name|row_count
operator|=
literal|0
expr_stmt|;
name|endRemoveRows
argument_list|()
expr_stmt|;
block|}
DECL|function|insertColumns
name|bool
name|insertColumns
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
block|{
if|if
condition|(
name|start
argument_list|<
literal|0
operator|||
name|start
argument_list|>
name|column_count
condition|)
return|return
literal|false
return|;
name|beginInsertColumns
argument_list|(
name|parent
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|count
operator|-
literal|1
argument_list|)
expr_stmt|;
name|column_count
operator|+=
name|count
expr_stmt|;
name|endInsertColumns
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|function|removeColumns
name|bool
name|removeColumns
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
block|{
if|if
condition|(
name|start
operator|<
literal|0
operator|||
name|start
operator|>=
name|column_count
operator|||
name|column_count
operator|<
name|count
condition|)
return|return
literal|false
return|;
name|beginRemoveColumns
argument_list|(
name|parent
argument_list|,
name|start
argument_list|,
name|start
operator|+
name|count
operator|-
literal|1
argument_list|)
expr_stmt|;
name|column_count
operator|-=
name|count
expr_stmt|;
name|endRemoveColumns
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|function|removeLastColumn
name|void
name|removeLastColumn
parameter_list|()
block|{
name|beginRemoveColumns
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|column_count
operator|-
literal|1
argument_list|,
name|column_count
operator|-
literal|1
argument_list|)
expr_stmt|;
operator|--
name|column_count
expr_stmt|;
name|endRemoveColumns
argument_list|()
expr_stmt|;
block|}
DECL|function|removeAllColumns
name|void
name|removeAllColumns
parameter_list|()
block|{
name|beginRemoveColumns
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
literal|0
argument_list|,
name|column_count
operator|-
literal|1
argument_list|)
expr_stmt|;
name|column_count
operator|=
literal|0
expr_stmt|;
name|endRemoveColumns
argument_list|()
expr_stmt|;
block|}
DECL|function|canFetchMore
name|bool
name|canFetchMore
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|can_fetch_more
return|;
block|}
DECL|function|fetchMore
name|void
name|fetchMore
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
block|{
operator|++
name|fetch_more_count
expr_stmt|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
name|QAbstractTableModel
operator|::
name|reset
argument_list|()
expr_stmt|;
block|}
DECL|member|row_count
name|int
name|row_count
decl_stmt|;
DECL|member|column_count
name|int
name|column_count
decl_stmt|;
DECL|member|submit_count
name|int
name|submit_count
decl_stmt|;
DECL|member|can_fetch_more
name|bool
name|can_fetch_more
decl_stmt|;
DECL|member|fetch_more_count
name|int
name|fetch_more_count
decl_stmt|;
DECL|member|disabled_rows
name|QSet
argument_list|<
name|int
argument_list|>
name|disabled_rows
decl_stmt|;
DECL|member|disabled_columns
name|QSet
argument_list|<
name|int
argument_list|>
name|disabled_columns
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|QtTestTableView
class|class
name|QtTestTableView
super|:
specifier|public
name|QTableView
block|{
name|Q_OBJECT
public|public:
DECL|function|QtTestTableView
name|QtTestTableView
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QTableView
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|checkSignalOrder
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|hasCurrentChanged
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|hasSelectionChanged
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|setModel
name|void
name|setModel
parameter_list|(
name|QAbstractItemModel
modifier|*
name|model
parameter_list|)
block|{
name|QTableView
operator|::
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|selectionModel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|currentChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|selectionModel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|itemSelectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|enum|CursorAction
enum|enum
name|CursorAction
block|{
DECL|enumerator|MoveUp
name|MoveUp
init|=
name|QAbstractItemView
operator|::
name|MoveUp
block|,
DECL|enumerator|MoveDown
name|MoveDown
init|=
name|QAbstractItemView
operator|::
name|MoveDown
block|,
DECL|enumerator|MoveLeft
name|MoveLeft
init|=
name|QAbstractItemView
operator|::
name|MoveLeft
block|,
DECL|enumerator|MoveRight
name|MoveRight
init|=
name|QAbstractItemView
operator|::
name|MoveRight
block|,
DECL|enumerator|MoveHome
name|MoveHome
init|=
name|QAbstractItemView
operator|::
name|MoveHome
block|,
DECL|enumerator|MoveEnd
name|MoveEnd
init|=
name|QAbstractItemView
operator|::
name|MoveEnd
block|,
DECL|enumerator|MovePageUp
name|MovePageUp
init|=
name|QAbstractItemView
operator|::
name|MovePageUp
block|,
DECL|enumerator|MovePageDown
name|MovePageDown
init|=
name|QAbstractItemView
operator|::
name|MovePageDown
block|,
DECL|enumerator|MoveNext
name|MoveNext
init|=
name|QAbstractItemView
operator|::
name|MoveNext
block|,
DECL|enumerator|MovePrevious
name|MovePrevious
init|=
name|QAbstractItemView
operator|::
name|MovePrevious
block|}
enum|;
DECL|function|moveCursor
name|QModelIndex
name|moveCursor
parameter_list|(
name|QtTestTableView
operator|::
name|CursorAction
name|cursorAction
parameter_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
parameter_list|)
block|{
return|return
name|QTableView
operator|::
name|moveCursor
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|CursorAction
operator|)
name|cursorAction
argument_list|,
name|modifiers
argument_list|)
return|;
block|}
DECL|function|columnWidthHint
name|int
name|columnWidthHint
parameter_list|(
name|int
name|column
parameter_list|)
specifier|const
block|{
return|return
name|sizeHintForColumn
argument_list|(
name|column
argument_list|)
return|;
block|}
DECL|function|rowHeightHint
name|int
name|rowHeightHint
parameter_list|(
name|int
name|row
parameter_list|)
specifier|const
block|{
return|return
name|sizeHintForRow
argument_list|(
name|row
argument_list|)
return|;
block|}
DECL|function|isIndexHidden
name|bool
name|isIndexHidden
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
return|return
name|QTableView
operator|::
name|isIndexHidden
argument_list|(
name|index
argument_list|)
return|;
block|}
DECL|function|setSelection
name|void
name|setSelection
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
name|command
parameter_list|)
block|{
name|QTableView
operator|::
name|setSelection
argument_list|(
name|rect
argument_list|,
name|command
argument_list|)
expr_stmt|;
block|}
DECL|function|selectedIndexes
name|QModelIndexList
name|selectedIndexes
parameter_list|()
specifier|const
block|{
return|return
name|QTableView
operator|::
name|selectedIndexes
argument_list|()
return|;
block|}
DECL|function|sizeHintForRow
name|int
name|sizeHintForRow
parameter_list|(
name|int
name|row
parameter_list|)
specifier|const
block|{
return|return
name|QTableView
operator|::
name|sizeHintForRow
argument_list|(
name|row
argument_list|)
return|;
block|}
DECL|function|viewOptions
name|QStyleOptionViewItem
name|viewOptions
parameter_list|()
specifier|const
block|{
return|return
name|QTableView
operator|::
name|viewOptions
argument_list|()
return|;
block|}
DECL|member|checkSignalOrder
name|bool
name|checkSignalOrder
decl_stmt|;
public|public
name|slots
public|:
DECL|function|currentChanged
name|void
name|currentChanged
parameter_list|(
name|QModelIndex
parameter_list|,
name|QModelIndex
parameter_list|)
block|{
name|hasCurrentChanged
operator|++
expr_stmt|;
if|if
condition|(
name|checkSignalOrder
condition|)
name|QVERIFY
argument_list|(
name|hasCurrentChanged
operator|>
name|hasSelectionChanged
argument_list|)
expr_stmt|;
block|}
DECL|function|itemSelectionChanged
name|void
name|itemSelectionChanged
parameter_list|(
name|QItemSelection
parameter_list|,
name|QItemSelection
parameter_list|)
block|{
name|hasSelectionChanged
operator|++
expr_stmt|;
if|if
condition|(
name|checkSignalOrder
condition|)
name|QVERIFY
argument_list|(
name|hasCurrentChanged
operator|>=
name|hasSelectionChanged
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|hasCurrentChanged
name|int
name|hasCurrentChanged
decl_stmt|;
DECL|member|hasSelectionChanged
name|int
name|hasSelectionChanged
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|QtTestItemDelegate
class|class
name|QtTestItemDelegate
super|:
specifier|public
name|QItemDelegate
block|{
public|public:
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|(
specifier|const
name|QStyleOptionViewItem
modifier|&
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|hint
return|;
block|}
DECL|member|hint
name|QSize
name|hint
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QTableView
name|tst_QTableView
operator|::
name|tst_QTableView
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QTableView
name|tst_QTableView
operator|::
name|~
name|tst_QTableView
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QTableView
operator|::
name|initTestCase
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//disable magic for WindowsCE
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QTableView
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QTableView
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QTableView
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|noDelegate
name|void
name|tst_QTableView
operator|::
name|noDelegate
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noModel
name|void
name|tst_QTableView
operator|::
name|noModel
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyModel
name|void
name|tst_QTableView
operator|::
name|emptyModel
parameter_list|()
block|{
name|QtTestTableModel
name|model
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|invalidIndexEncountered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows_data
name|void
name|tst_QTableView
operator|::
name|removeRows_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x2"
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows
name|void
name|tst_QTableView
operator|::
name|removeRows
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|invalidIndexEncountered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|model
operator|.
name|removeLastRow
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeAllRows
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns_data
name|void
name|tst_QTableView
operator|::
name|removeColumns_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x2"
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns
name|void
name|tst_QTableView
operator|::
name|removeColumns
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|invalidIndexEncountered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|model
operator|.
name|removeLastColumn
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeAllColumns
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyboardNavigation_data
name|void
name|tst_QTableView
operator|::
name|keyboardNavigation_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"tabKeyNavigation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"keyPresses"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16x16 model"
argument_list|)
operator|<<
literal|16
operator|<<
literal|16
operator|<<
literal|true
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Right
operator|<<
name|Qt
operator|::
name|Key_Right
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Down
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Down
operator|<<
name|Qt
operator|::
name|Key_Down
operator|<<
name|Qt
operator|::
name|Key_Tab
operator|<<
name|Qt
operator|::
name|Key_Backtab
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no tab"
argument_list|)
operator|<<
literal|8
operator|<<
literal|8
operator|<<
literal|false
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Right
operator|<<
name|Qt
operator|::
name|Key_Right
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Down
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
name|Qt
operator|::
name|Key_Up
operator|<<
name|Qt
operator|::
name|Key_Down
operator|<<
name|Qt
operator|::
name|Key_Down
operator|<<
name|Qt
operator|::
name|Key_Tab
operator|<<
name|Qt
operator|::
name|Key_Backtab
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyboardNavigation
name|void
name|tst_QTableView
operator|::
name|keyboardNavigation
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|tabKeyNavigation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|keyPresses
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setTabKeyNavigation
argument_list|(
name|tabKeyNavigation
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|rowCount
operator|-
literal|1
argument_list|,
name|columnCount
operator|-
literal|1
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|row
init|=
name|rowCount
operator|-
literal|1
decl_stmt|;
name|int
name|column
init|=
name|columnCount
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|keyPresses
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Qt
operator|::
name|Key
name|key
init|=
operator|(
name|Qt
operator|::
name|Key
operator|)
name|keyPresses
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|key
condition|)
block|{
case|case
name|Qt
operator|::
name|Key_Up
case|:
name|row
operator|=
name|qMax
argument_list|(
literal|0
argument_list|,
name|row
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Down
case|:
name|row
operator|=
name|qMin
argument_list|(
name|rowCount
operator|-
literal|1
argument_list|,
name|row
operator|+
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Backtab
case|:
if|if
condition|(
operator|!
name|tabKeyNavigation
condition|)
break|break;
case|case
name|Qt
operator|::
name|Key_Left
case|:
name|column
operator|=
name|qMax
argument_list|(
literal|0
argument_list|,
name|column
operator|-
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Tab
case|:
if|if
condition|(
operator|!
name|tabKeyNavigation
condition|)
break|break;
case|case
name|Qt
operator|::
name|Key_Right
case|:
name|column
operator|=
name|qMin
argument_list|(
name|columnCount
operator|-
literal|1
argument_list|,
name|column
operator|+
literal|1
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|key
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|headerSections_data
name|void
name|tst_QTableView
operator|::
name|headerSections_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|""
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|5
operator|<<
literal|5
operator|<<
literal|30
operator|<<
literal|30
expr_stmt|;
block|}
end_function
begin_function
DECL|function|headerSections
name|void
name|tst_QTableView
operator|::
name|headerSections
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|QHeaderView
modifier|*
name|hheader
init|=
name|view
operator|.
name|horizontalHeader
argument_list|()
decl_stmt|;
name|QHeaderView
modifier|*
name|vheader
init|=
name|view
operator|.
name|verticalHeader
argument_list|()
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|hheader
operator|->
name|doItemsLayout
argument_list|()
expr_stmt|;
name|vheader
operator|->
name|doItemsLayout
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hheader
operator|->
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vheader
operator|->
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHeight
argument_list|(
name|row
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowHeight
argument_list|(
name|row
argument_list|)
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowHeight
argument_list|(
name|row
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|showRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowHeight
argument_list|(
name|row
argument_list|)
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|view
operator|.
name|setColumnWidth
argument_list|(
name|column
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidth
argument_list|(
name|column
argument_list|)
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidth
argument_list|(
name|column
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|showColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidth
argument_list|(
name|column
argument_list|)
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
block|}
end_function
begin_typedef
DECL|typedef|IntPair
typedef|typedef
name|QPair
argument_list|<
name|int
argument_list|,
name|int
argument_list|>
name|IntPair
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntPair
argument_list|)
end_macro
begin_function
DECL|function|moveCursor_data
name|void
name|tst_QTableView
operator|::
name|moveCursor_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"cursorMoveAction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"modifier"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntPair
argument_list|>
argument_list|(
literal|"moveRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntPair
argument_list|>
argument_list|(
literal|"moveColumn"
argument_list|)
expr_stmt|;
comment|// MoveRight
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveRight (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveRight
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveRight (3,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveRight
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveRight (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveRight
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// ###
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveRight, hidden column 1 (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveRight
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveRight, hidden column 3 (0,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveRight
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// ###
comment|// MoveNext should in addition wrap
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext (0,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext, wrap (0,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext, wrap (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext, hidden column 1 (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext, wrap, hidden column 3 (0,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext, wrap, hidden column 3 (3,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext, wrapy, wrapx, hidden column 3, hidden row 3 (2,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveNext, wrap, hidden column 2, moved column from 3 to 0. (0,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// MoveLeft
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveLeft (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveLeft
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveLeft (0,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveLeft
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveLeft (1,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveLeft
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveLeft, hidden column 0 (0,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveLeft
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveLeft, hidden column 0 (0,1)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveLeft
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// MovePrevious should in addition wrap
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious (0,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious (0,1)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious, wrap (1,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious, wrap, (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious, hidden column 1 (0,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious, wrap, hidden column 3 (0,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious, wrapy, hidden column 0 (0,1)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious, wrap, hidden column 0, hidden row 0 (1,1)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePrevious, wrap, hidden column 1, moved column from 0 to 3. (1,2)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// MoveDown
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveDown (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveDown (3,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveDown (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveDown, hidden row 1 (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveDown, hidden row 3 (2,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveDown, hidden row 0 hidden column 0 (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// MoveUp
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveUp (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveUp
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveUp (3, 0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveUp
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveUp (0,1)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveUp
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveUp, hidden row 1 (2,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveUp
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveUp, hidden row (1,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|0
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveUp
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// MoveHome
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveHome (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveHome
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveHome (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveHome
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveHome, hidden column 0 (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveHome
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Use Ctrl modifier
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveHome + Ctrl (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveHome
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ControlModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveHome + Ctrl (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveHome
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ControlModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveHome + Ctrl, hidden column 0, hidden row 0 (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveHome
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ControlModifier
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// MoveEnd
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveEnd (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveEnd
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveEnd (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveEnd
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveEnd, hidden column (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveEnd
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|NoModifier
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Use Ctrl modifier
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveEnd + Ctrl (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveEnd
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ControlModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveEnd + Ctrl (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveEnd
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ControlModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveEnd + Ctrl, hidden column 3 (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveEnd
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ControlModifier
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MoveEnd + Ctrl, hidden column 3, hidden row 3 (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveEnd
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ControlModifier
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePageUp (0,0)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePageUp
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePageUp (3,3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePageUp
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePageDown (3, 3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePageDown
argument_list|)
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MovePageDown (0, 3)"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePageDown
argument_list|)
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveCursor
name|void
name|tst_QTableView
operator|::
name|moveCursor
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|cursorMoveAction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|modifier
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntPair
argument_list|,
name|moveRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntPair
argument_list|,
name|moveColumn
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|hideRow
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hideColumn
argument_list|)
expr_stmt|;
if|if
condition|(
name|moveColumn
operator|.
name|first
operator|!=
name|moveColumn
operator|.
name|second
condition|)
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|moveSection
argument_list|(
name|moveColumn
operator|.
name|first
argument_list|,
name|moveColumn
operator|.
name|second
argument_list|)
expr_stmt|;
if|if
condition|(
name|moveRow
operator|.
name|first
operator|!=
name|moveRow
operator|.
name|second
condition|)
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|moveSection
argument_list|(
name|moveRow
operator|.
name|first
argument_list|,
name|moveRow
operator|.
name|second
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|startRow
argument_list|,
name|startColumn
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QModelIndex
name|newIndex
init|=
name|view
operator|.
name|moveCursor
argument_list|(
operator|(
name|QtTestTableView
operator|::
name|CursorAction
operator|)
name|cursorMoveAction
argument_list|,
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|modifier
argument_list|)
decl_stmt|;
comment|// expected fails, task 119433
if|if
condition|(
name|newIndex
operator|.
name|row
argument_list|()
operator|==
operator|-
literal|1
condition|)
return|return;
name|QCOMPARE
argument_list|(
name|newIndex
operator|.
name|row
argument_list|()
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newIndex
operator|.
name|column
argument_list|()
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveCursorStrikesBack_data
name|void
name|tst_QTableView
operator|::
name|moveCursorStrikesBack_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"disableRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"disableColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"span"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"cursorMoveActions"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Last column disabled. Task QTBUG-3878"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|6
operator|)
operator|<<
name|QRect
argument_list|()
operator|<<
literal|0
operator|<<
literal|5
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|)
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Last column disabled 2. Task QTBUG-3878"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|6
operator|)
operator|<<
name|QRect
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|)
operator|<<
literal|0
operator|<<
literal|5
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Span, anchor column hidden"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|)
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Span, anchor column disabled"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|)
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Span, anchor row hidden"
argument_list|)
operator|<<
literal|2
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|)
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Span, anchor row disabled"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|)
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Move through span right"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|3
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveRight
argument_list|)
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveRight
argument_list|)
operator|)
operator|<<
literal|3
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Move through span left"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveLeft
argument_list|)
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveLeft
argument_list|)
operator|)
operator|<<
literal|3
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Move through span down"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveDown
argument_list|)
operator|)
operator|<<
literal|5
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Move through span up"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
operator|<<
literal|5
operator|<<
literal|2
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveUp
argument_list|)
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveUp
argument_list|)
operator|)
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|IntList
name|fullList
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|7
condition|;
operator|++
name|i
control|)
name|fullList
operator|<<
name|i
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"All disabled, wrap forward. Timeout => FAIL"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|fullList
operator|<<
name|fullList
operator|<<
name|QRect
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MoveNext
argument_list|)
operator|)
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"All disabled, wrap backwards. Timeout => FAIL"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
name|fullList
operator|<<
name|fullList
operator|<<
name|QRect
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
name|int
argument_list|(
name|QtTestTableView
operator|::
name|MovePrevious
argument_list|)
operator|)
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveCursorStrikesBack
name|void
name|tst_QTableView
operator|::
name|moveCursorStrikesBack
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|disableRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|disableColumns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|span
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|cursorMoveActions
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
literal|7
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|hideRow
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hideColumn
argument_list|)
expr_stmt|;
if|if
condition|(
name|span
operator|.
name|height
argument_list|()
operator|&&
name|span
operator|.
name|width
argument_list|()
condition|)
name|view
operator|.
name|setSpan
argument_list|(
name|span
operator|.
name|top
argument_list|()
argument_list|,
name|span
operator|.
name|left
argument_list|()
argument_list|,
name|span
operator|.
name|height
argument_list|()
argument_list|,
name|span
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|startRow
argument_list|,
name|startColumn
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|int
name|row
decl|,
name|disableRows
control|)
name|model
operator|.
name|disableRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|int
name|column
decl|,
name|disableColumns
control|)
name|model
operator|.
name|disableColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
name|int
name|newRow
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|newColumn
init|=
operator|-
literal|1
decl_stmt|;
foreach|foreach
control|(
name|int
name|cursorMoveAction
decl|,
name|cursorMoveActions
control|)
block|{
name|QModelIndex
name|newIndex
init|=
name|view
operator|.
name|moveCursor
argument_list|(
operator|(
name|QtTestTableView
operator|::
name|CursorAction
operator|)
name|cursorMoveAction
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|newIndex
argument_list|)
expr_stmt|;
name|newRow
operator|=
name|newIndex
operator|.
name|row
argument_list|()
expr_stmt|;
name|newColumn
operator|=
name|newIndex
operator|.
name|column
argument_list|()
expr_stmt|;
block|}
comment|// expected fails, task 119433
if|if
condition|(
name|newRow
operator|==
operator|-
literal|1
condition|)
return|return;
name|QCOMPARE
argument_list|(
name|newRow
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newColumn
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideRows_data
name|void
name|tst_QTableView
operator|::
name|hideRows_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"showRow"
argument_list|)
expr_stmt|;
comment|// hide, then show
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideRow"
argument_list|)
expr_stmt|;
comment|// hide only
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"show row 0, hide row 3, no span"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"show row 0, hide row 3, span"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideRows
name|void
name|tst_QTableView
operator|::
name|hideRows
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|showRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|rowSpan
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|showRow
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
name|showRow
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|hideRow
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
name|hideRow
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|showRow
argument_list|(
name|showRow
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
name|showRow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
name|hideRow
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideColumns_data
name|void
name|tst_QTableView
operator|::
name|hideColumns_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"showColumn"
argument_list|)
expr_stmt|;
comment|// hide, then show
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideColumn"
argument_list|)
expr_stmt|;
comment|// hide only
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"show col 0, hide col 3, no span"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"show col 0, hide col 3, span"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideColumns
name|void
name|tst_QTableView
operator|::
name|hideColumns
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|showColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|rowSpan
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|showColumn
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isColumnHidden
argument_list|(
name|showColumn
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hideColumn
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isColumnHidden
argument_list|(
name|hideColumn
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|showColumn
argument_list|(
name|showColumn
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isColumnHidden
argument_list|(
name|showColumn
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isColumnHidden
argument_list|(
name|hideColumn
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selection_data
name|void
name|tst_QTableView
operator|::
name|selection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"moveRowFrom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"moveRowTo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"moveColumnFrom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"moveColumnTo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"width"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"height"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectedCount"
argument_list|)
expr_stmt|;
comment|// ### make this more detailed
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no span, no hidden, no moved, 3x3 select"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move row
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move col
operator|<<
literal|40
operator|<<
literal|40
comment|// cell size
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|80
operator|<<
literal|80
comment|// rect
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
comment|// command
operator|<<
literal|9
expr_stmt|;
comment|// selected count
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row span, no hidden, no moved, 3x3 select"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
literal|1
operator|<<
literal|1
comment|// pos
operator|<<
literal|2
operator|<<
literal|1
comment|// span
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move row
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move col
operator|<<
literal|40
operator|<<
literal|40
comment|// cell size
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|80
operator|<<
literal|80
comment|// rect
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
comment|// command
operator|<<
literal|8
expr_stmt|;
comment|// selected count
name|QTest
operator|::
name|newRow
argument_list|(
literal|"col span, no hidden, no moved, 3x3 select"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
literal|1
operator|<<
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|2
comment|// span
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move row
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move col
operator|<<
literal|40
operator|<<
literal|40
comment|// cell size
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|80
operator|<<
literal|80
comment|// rect
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
comment|// command
operator|<<
literal|8
expr_stmt|;
comment|// selected count
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no span, row hidden, no moved, 3x3 select"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move row
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move col
operator|<<
literal|40
operator|<<
literal|40
comment|// cell size
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|80
operator|<<
literal|80
comment|// rect
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
comment|// command
operator|<<
literal|9
expr_stmt|;
comment|// selected count
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no span, col hidden, no moved, 3x3 select"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
operator|-
literal|1
operator|<<
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move row
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move col
operator|<<
literal|40
operator|<<
literal|40
comment|// cell size
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|80
operator|<<
literal|80
comment|// rect
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
comment|// command
operator|<<
literal|9
expr_stmt|;
comment|// selected count
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no span, no hidden, row moved, 3x3 select"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
literal|1
operator|<<
literal|3
comment|// move row
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move col
operator|<<
literal|40
operator|<<
literal|40
comment|// cell size
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|80
operator|<<
literal|80
comment|// rect
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
comment|// command
operator|<<
literal|9
expr_stmt|;
comment|// selected count
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no span, no hidden, col moved, 3x3 select"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// move row
operator|<<
literal|1
operator|<<
literal|3
comment|// move col
operator|<<
literal|40
operator|<<
literal|40
comment|// cell size
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|80
operator|<<
literal|80
comment|// rect
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
comment|// command
operator|<<
literal|9
expr_stmt|;
comment|// selected count
block|}
end_function
begin_function
DECL|function|selection
name|void
name|tst_QTableView
operator|::
name|selection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|moveRowFrom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|moveRowTo
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|moveColumnFrom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|moveColumnTo
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|command
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectedCount
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|rowSpan
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|hideRow
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hideColumn
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|moveSection
argument_list|(
name|moveRowFrom
argument_list|,
name|moveRowTo
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|moveSection
argument_list|(
name|moveColumnFrom
argument_list|,
name|moveColumnTo
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHeight
argument_list|(
name|r
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnWidth
argument_list|(
name|c
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelection
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
argument_list|(
name|command
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|selectedCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectRow_data
name|void
name|tst_QTableView
operator|::
name|selectRow_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"mode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"behavior"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectedItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SingleSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SingleSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SingleSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SingleSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SingleSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SingleSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MultiSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|MultiSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MultiSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|MultiSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MultiSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|MultiSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ExtendedSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ExtendedSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ExtendedSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ExtendedSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ExtendedSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ExtendedSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ContiguousSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ContiguousSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ContiguousSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ContiguousSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ContiguousSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ContiguousSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectRow
name|void
name|tst_QTableView
operator|::
name|selectRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|behavior
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectedItems
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|SelectionMode
operator|)
name|mode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionBehavior
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|SelectionBehavior
operator|)
name|behavior
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
comment|//test we have 10 items selected
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|selectedItems
argument_list|)
expr_stmt|;
comment|//test that all 10 items are in the same row
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|selectedItems
operator|>
literal|0
operator|&&
name|i
operator|<
name|rowCount
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|row
argument_list|()
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectColumn_data
name|void
name|tst_QTableView
operator|::
name|selectColumn_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"mode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"behavior"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectedItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SingleSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SingleSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SingleSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SingleSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"SingleSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SingleSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MultiSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|MultiSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MultiSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|MultiSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MultiSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|MultiSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ExtendedSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ExtendedSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ExtendedSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ExtendedSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ExtendedSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ExtendedSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ContiguousSelection and SelectItems"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ContiguousSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectItems
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ContiguousSelection and SelectRows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ContiguousSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectRows
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ContiguousSelection and SelectColumns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ContiguousSelection
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|SelectColumns
operator|<<
literal|10
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectColumn
name|void
name|tst_QTableView
operator|::
name|selectColumn
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|behavior
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectedItems
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|SelectionMode
operator|)
name|mode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSelectionBehavior
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|SelectionBehavior
operator|)
name|behavior
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|selectedItems
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|selectedItems
operator|>
literal|0
operator|&&
name|i
operator|<
name|columnCount
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|column
argument_list|()
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QRect
argument_list|)
end_macro
begin_function
DECL|function|visualRect_data
name|void
name|tst_QTableView
operator|::
name|visualRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hideColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"expectedRect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0,0)"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|20
operator|<<
literal|30
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|29
argument_list|,
literal|19
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0,0) hidden row"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|20
operator|<<
literal|30
operator|<<
name|QRect
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0,0) hidden column"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|20
operator|<<
literal|30
operator|<<
name|QRect
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0,0) hidden row and column"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|20
operator|<<
literal|30
operator|<<
name|QRect
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0,0) out of bounds"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|20
operator|<<
literal|30
operator|<<
name|QRect
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(5,5), hidden row"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|5
operator|<<
operator|-
literal|1
operator|<<
literal|5
operator|<<
literal|5
operator|<<
literal|20
operator|<<
literal|30
operator|<<
name|QRect
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(9,9)"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|9
operator|<<
literal|9
operator|<<
literal|20
operator|<<
literal|30
operator|<<
name|QRect
argument_list|(
literal|30
operator|*
literal|9
argument_list|,
literal|20
operator|*
literal|9
argument_list|,
literal|29
argument_list|,
literal|19
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visualRect
name|void
name|tst_QTableView
operator|::
name|visualRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hideColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|expectedRect
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|// Make sure that it has 1 pixel between each cell.
name|view
operator|.
name|setGridStyle
argument_list|(
name|Qt
operator|::
name|SolidLine
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|resizeSection
argument_list|(
name|i
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|resizeSection
argument_list|(
name|i
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|hideRow
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hideColumn
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rect
argument_list|,
name|expectedRect
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fetchMore
name|void
name|tst_QTableView
operator|::
name|fetchMore
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
decl_stmt|;
name|model
operator|.
name|can_fetch_more
operator|=
literal|true
expr_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|fetch_more_count
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|fetch_more_count
operator|>
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|fetch_more_count
operator|=
literal|0
expr_stmt|;
comment|//reset
name|view
operator|.
name|scrollToTop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|fetch_more_count
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollToBottom
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|fetch_more_count
operator|>
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|fetch_more_count
operator|=
literal|0
expr_stmt|;
comment|//reset
name|view
operator|.
name|scrollToTop
argument_list|()
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|fetch_more_count
argument_list|,
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|64
condition|;
operator|++
name|i
control|)
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|view
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|63
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|fetch_more_count
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setHeaders
name|void
name|tst_QTableView
operator|::
name|setHeaders
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
comment|// Make sure we don't delete ourselves
name|view
operator|.
name|setVerticalHeader
argument_list|(
name|view
operator|.
name|verticalHeader
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|count
argument_list|()
expr_stmt|;
name|view
operator|.
name|setHorizontalHeader
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|count
argument_list|()
expr_stmt|;
comment|// Try passing around a header without it being deleted
name|QTableView
name|view2
decl_stmt|;
name|view2
operator|.
name|setVerticalHeader
argument_list|(
name|view
operator|.
name|verticalHeader
argument_list|()
argument_list|)
expr_stmt|;
name|view2
operator|.
name|setHorizontalHeader
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setHorizontalHeader
argument_list|(
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setVerticalHeader
argument_list|(
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
argument_list|)
expr_stmt|;
name|view2
operator|.
name|verticalHeader
argument_list|()
operator|->
name|count
argument_list|()
expr_stmt|;
name|view2
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|count
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeRowsToContents_data
name|void
name|tst_QTableView
operator|::
name|resizeRowsToContents_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"showGrid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"cellWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"cellHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10 grid shown 40x40"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|false
operator|<<
literal|40
operator|<<
literal|40
operator|<<
literal|40
operator|<<
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10 grid not shown 40x40"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|true
operator|<<
literal|40
operator|<<
literal|40
operator|<<
literal|41
operator|<<
literal|41
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeRowsToContents
name|void
name|tst_QTableView
operator|::
name|resizeRowsToContents
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|showGrid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|cellWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|cellHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|columnWidth
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|QtTestItemDelegate
name|delegate
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|view
operator|.
name|setShowGrid
argument_list|(
name|showGrid
argument_list|)
expr_stmt|;
comment|// the grid will add to the row height
name|delegate
operator|.
name|hint
operator|=
name|QSize
argument_list|(
name|cellWidth
argument_list|,
name|cellHeight
argument_list|)
expr_stmt|;
name|QSignalSpy
name|resizedSpy
argument_list|(
name|view
operator|.
name|verticalHeader
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|sectionResized
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|.
name|resizeRowsToContents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|resizedSpy
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
block|{
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowHeight
argument_list|(
name|r
argument_list|)
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|resizeColumnsToContents_data
name|void
name|tst_QTableView
operator|::
name|resizeColumnsToContents_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"showGrid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"cellWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"cellHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10 grid shown 40x40"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|false
operator|<<
literal|40
operator|<<
literal|40
operator|<<
literal|40
operator|<<
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10 grid not shown 40x40"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|true
operator|<<
literal|40
operator|<<
literal|40
operator|<<
literal|41
operator|<<
literal|41
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeColumnsToContents
name|void
name|tst_QTableView
operator|::
name|resizeColumnsToContents
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|showGrid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|cellWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|cellHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|rowHeight
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|QtTestItemDelegate
name|delegate
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|view
operator|.
name|setShowGrid
argument_list|(
name|showGrid
argument_list|)
expr_stmt|;
comment|// the grid will add to the row height
name|delegate
operator|.
name|hint
operator|=
name|QSize
argument_list|(
name|cellWidth
argument_list|,
name|cellHeight
argument_list|)
expr_stmt|;
name|QSignalSpy
name|resizedSpy
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|sectionResized
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|.
name|resizeColumnsToContents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|resizedSpy
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|model
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidth
argument_list|(
name|c
argument_list|)
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowViewportPosition_data
name|void
name|tst_QTableView
operator|::
name|rowViewportPosition_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"verticalScrollMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"verticalScrollValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowViewportPosition"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 0, scroll per item 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 1, scroll per item, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 1, scroll per item, 1"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 5, scroll per item, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|5
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 5, scroll per item, 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|5
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 9, scroll per item, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|9
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 9, scroll per item, 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|5
operator|<<
literal|4
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 0, scroll per pixel 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 1, scroll per pixel, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 1, scroll per pixel, 1"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|1
operator|*
literal|40
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 5, scroll per pixel, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|5
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 5, scroll per pixel, 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|5
operator|*
literal|40
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 9, scroll per pixel, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|9
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row 9, scroll per pixel, 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|5
operator|*
literal|40
operator|<<
literal|4
operator|*
literal|40
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowViewportPosition
name|void
name|tst_QTableView
operator|::
name|rowViewportPosition
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|verticalScrollMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|verticalScrollValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowViewportPosition
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|2
operator|*
name|rowHeight
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHeight
argument_list|(
name|r
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|view
operator|.
name|setVerticalScrollMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|ScrollMode
operator|)
name|verticalScrollMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|verticalScrollValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowViewportPosition
argument_list|(
name|row
argument_list|)
argument_list|,
name|rowViewportPosition
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowAt_data
name|void
name|tst_QTableView
operator|::
name|rowAt_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"hiddenRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"coordinate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row at 100"
argument_list|)
operator|<<
literal|5
operator|<<
literal|40
operator|<<
name|IntList
argument_list|()
operator|<<
literal|100
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row at 180"
argument_list|)
operator|<<
literal|5
operator|<<
literal|40
operator|<<
name|IntList
argument_list|()
operator|<<
literal|180
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row at 20"
argument_list|)
operator|<<
literal|5
operator|<<
literal|40
operator|<<
name|IntList
argument_list|()
operator|<<
literal|20
operator|<<
literal|0
expr_stmt|;
comment|// ### expand the dataset to include hidden rows
block|}
end_function
begin_function
DECL|function|rowAt
name|void
name|tst_QTableView
operator|::
name|rowAt
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|hiddenRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|coordinate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|2
operator|*
name|rowHeight
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHeight
argument_list|(
name|r
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hiddenRows
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|view
operator|.
name|hideRow
argument_list|(
name|hiddenRows
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowAt
argument_list|(
name|coordinate
argument_list|)
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowHeight_data
name|void
name|tst_QTableView
operator|::
name|rowHeight_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"rowHeights"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|BoolList
argument_list|>
argument_list|(
literal|"hiddenRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"increasing"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|20
operator|<<
literal|30
operator|<<
literal|40
operator|<<
literal|50
operator|<<
literal|60
operator|)
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decreasing"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|60
operator|<<
literal|50
operator|<<
literal|40
operator|<<
literal|30
operator|<<
literal|20
operator|)
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"random"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|87
operator|<<
literal|34
operator|<<
literal|68
operator|<<
literal|91
operator|<<
literal|27
operator|)
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
comment|// ### expand the dataset to include hidden rows
block|}
end_function
begin_function
DECL|function|rowHeight
name|void
name|tst_QTableView
operator|::
name|rowHeight
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|rowHeights
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|BoolList
argument_list|,
name|hiddenRows
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
block|{
name|view
operator|.
name|setRowHeight
argument_list|(
name|r
argument_list|,
name|rowHeights
operator|.
name|at
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRowHidden
argument_list|(
name|r
argument_list|,
name|hiddenRows
operator|.
name|at
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
block|{
if|if
condition|(
name|hiddenRows
operator|.
name|at
argument_list|(
name|r
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowHeight
argument_list|(
name|r
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowHeight
argument_list|(
name|r
argument_list|)
argument_list|,
name|rowHeights
operator|.
name|at
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|columnViewportPosition_data
name|void
name|tst_QTableView
operator|::
name|columnViewportPosition_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"horizontalScrollMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"horizontalScrollValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnViewportPosition"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 0, scroll per item 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 1, scroll per item, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 1, scroll per item, 1"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 5, scroll per item, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|5
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 5, scroll per item, 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|5
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 9, scroll per item, 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|0
operator|<<
literal|9
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 9, scroll per item, 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|5
operator|<<
literal|4
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 0, scroll per pixel 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 1, scroll per pixel 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 1, scroll per pixel 1"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|1
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|1
operator|*
literal|40
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 5, scroll per pixel 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|5
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 5, scroll per pixel 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|5
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|5
operator|*
literal|40
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 9, scroll per pixel 0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|0
operator|<<
literal|9
operator|*
literal|40
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column 9, scroll per pixel 5"
argument_list|)
operator|<<
literal|10
operator|<<
literal|40
operator|<<
literal|9
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
literal|5
operator|*
literal|40
operator|<<
literal|4
operator|*
literal|40
expr_stmt|;
block|}
end_function
begin_function
DECL|function|columnViewportPosition
name|void
name|tst_QTableView
operator|::
name|columnViewportPosition
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|horizontalScrollMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|horizontalScrollValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnViewportPosition
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
literal|1
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|2
operator|*
name|columnWidth
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnWidth
argument_list|(
name|c
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|view
operator|.
name|setHorizontalScrollMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|ScrollMode
operator|)
name|horizontalScrollMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|horizontalScrollValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnViewportPosition
argument_list|(
name|column
argument_list|)
argument_list|,
name|columnViewportPosition
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|columnAt_data
name|void
name|tst_QTableView
operator|::
name|columnAt_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"hiddenColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"coordinate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column at 100"
argument_list|)
operator|<<
literal|5
operator|<<
literal|40
operator|<<
name|IntList
argument_list|()
operator|<<
literal|100
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column at 180"
argument_list|)
operator|<<
literal|5
operator|<<
literal|40
operator|<<
name|IntList
argument_list|()
operator|<<
literal|180
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"column at 20"
argument_list|)
operator|<<
literal|5
operator|<<
literal|40
operator|<<
name|IntList
argument_list|()
operator|<<
literal|20
operator|<<
literal|0
expr_stmt|;
comment|// ### expand the dataset to include hidden coumns
block|}
end_function
begin_function
DECL|function|columnAt
name|void
name|tst_QTableView
operator|::
name|columnAt
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|hiddenColumns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|coordinate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
literal|1
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|2
operator|*
name|columnWidth
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnWidth
argument_list|(
name|c
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hiddenColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|view
operator|.
name|hideColumn
argument_list|(
name|hiddenColumns
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnAt
argument_list|(
name|coordinate
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|columnWidth_data
name|void
name|tst_QTableView
operator|::
name|columnWidth_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"columnWidths"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|BoolList
argument_list|>
argument_list|(
literal|"hiddenColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"increasing"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|20
operator|<<
literal|30
operator|<<
literal|40
operator|<<
literal|50
operator|<<
literal|60
operator|)
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decreasing"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|60
operator|<<
literal|50
operator|<<
literal|40
operator|<<
literal|30
operator|<<
literal|20
operator|)
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"random"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|87
operator|<<
literal|34
operator|<<
literal|68
operator|<<
literal|91
operator|<<
literal|27
operator|)
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
comment|// ### expand the dataset to include hidden columns
block|}
end_function
begin_function
DECL|function|columnWidth
name|void
name|tst_QTableView
operator|::
name|columnWidth
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|columnWidths
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|BoolList
argument_list|,
name|hiddenColumns
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
literal|1
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
block|{
name|view
operator|.
name|setColumnWidth
argument_list|(
name|c
argument_list|,
name|columnWidths
operator|.
name|at
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setColumnHidden
argument_list|(
name|c
argument_list|,
name|hiddenColumns
operator|.
name|at
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
block|{
if|if
condition|(
name|hiddenColumns
operator|.
name|at
argument_list|(
name|c
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidth
argument_list|(
name|c
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidth
argument_list|(
name|c
argument_list|)
argument_list|,
name|columnWidths
operator|.
name|at
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|hiddenRow_data
name|void
name|tst_QTableView
operator|::
name|hiddenRow_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|BoolList
argument_list|>
argument_list|(
literal|"hiddenRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"first hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"last hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"none hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"all hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hiddenRow
name|void
name|tst_QTableView
operator|::
name|hiddenRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|BoolList
argument_list|,
name|hiddenRows
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHidden
argument_list|(
name|r
argument_list|,
name|hiddenRows
operator|.
name|at
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|isRowHidden
argument_list|(
name|r
argument_list|)
argument_list|,
name|hiddenRows
operator|.
name|at
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHidden
argument_list|(
name|r
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isRowHidden
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hiddenColumn_data
name|void
name|tst_QTableView
operator|::
name|hiddenColumn_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|BoolList
argument_list|>
argument_list|(
literal|"hiddenColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"first hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"last hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"none hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"all hidden"
argument_list|)
operator|<<
literal|5
operator|<<
operator|(
name|BoolList
argument_list|()
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hiddenColumn
name|void
name|tst_QTableView
operator|::
name|hiddenColumn
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|BoolList
argument_list|,
name|hiddenColumns
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
literal|1
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isColumnHidden
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnHidden
argument_list|(
name|c
argument_list|,
name|hiddenColumns
operator|.
name|at
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|QCOMPARE
argument_list|(
name|view
operator|.
name|isColumnHidden
argument_list|(
name|c
argument_list|)
argument_list|,
name|hiddenColumns
operator|.
name|at
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnHidden
argument_list|(
name|c
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|isColumnHidden
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sortingEnabled_data
name|void
name|tst_QTableView
operator|::
name|sortingEnabled_data
parameter_list|()
block|{
comment|//    QTest::addColumn<int>("columnCount");
block|}
end_function
begin_function
DECL|function|sortingEnabled
name|void
name|tst_QTableView
operator|::
name|sortingEnabled
parameter_list|()
block|{
comment|//    QFETCH(int, columnCount);
block|}
end_function
begin_function
DECL|function|scrollTo_data
name|void
name|tst_QTableView
operator|::
name|scrollTo_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"verticalScrollMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"horizontalScrollMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hiddenRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hiddenColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"horizontalScroll"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"verticalScroll"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"scrollHint"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedHorizontalScroll"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedVerticalScroll"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, no span, no scroll, per item"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ScrollPerItem
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ScrollPerItem
operator|<<
literal|10
operator|<<
literal|10
comment|// table
operator|<<
literal|80
operator|<<
literal|80
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
literal|0
operator|<<
literal|0
comment|// cell
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|PositionAtTop
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, no span, no scroll, per pixel"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ScrollPerPixel
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ScrollPerPixel
operator|<<
literal|10
operator|<<
literal|10
comment|// table
operator|<<
literal|80
operator|<<
literal|80
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
literal|0
operator|<<
literal|0
comment|// cell
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|PositionAtTop
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hidden, no span, no scroll, per item"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ScrollPerItem
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|ScrollPerItem
operator|<<
literal|10
operator|<<
literal|10
comment|// table
operator|<<
literal|80
operator|<<
literal|80
comment|// size
operator|<<
literal|3
operator|<<
literal|3
comment|// hide
operator|<<
literal|5
operator|<<
literal|5
comment|// cell
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
operator|(
name|int
operator|)
name|QAbstractItemView
operator|::
name|PositionAtTop
operator|<<
literal|4
operator|<<
literal|4
expr_stmt|;
comment|// expected
block|}
end_function
begin_function
DECL|function|scrollTo
name|void
name|tst_QTableView
operator|::
name|scrollTo
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|horizontalScrollMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|verticalScrollMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hiddenRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hiddenColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|horizontalScroll
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|verticalScroll
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|scrollHint
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedHorizontalScroll
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedVerticalScroll
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QWidget
name|toplevel
decl_stmt|;
name|QtTestTableView
name|view
argument_list|(
operator|&
name|toplevel
argument_list|)
decl_stmt|;
name|toplevel
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// resizing to this size will ensure that there can ONLY_BE_ONE_CELL inside the view.
name|QSize
name|forcedSize
argument_list|(
name|columnWidth
operator|*
literal|2
argument_list|,
name|rowHeight
operator|*
literal|2
argument_list|)
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
name|forcedSize
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|toplevel
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|size
argument_list|()
argument_list|,
name|forcedSize
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|rowSpan
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|hiddenRow
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hiddenColumn
argument_list|)
expr_stmt|;
name|view
operator|.
name|setHorizontalScrollMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|ScrollMode
operator|)
name|horizontalScrollMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setVerticalScrollMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|ScrollMode
operator|)
name|verticalScrollMode
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHeight
argument_list|(
name|r
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnWidth
argument_list|(
name|c
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|150
argument_list|)
expr_stmt|;
comment|// ### needed to pass the test
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|horizontalScroll
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|verticalScroll
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|index
argument_list|,
operator|(
name|QAbstractItemView
operator|::
name|ScrollHint
operator|)
name|scrollHint
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
name|expectedVerticalScroll
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
argument_list|,
name|expectedHorizontalScroll
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|indexAt_data
name|void
name|tst_QTableView
operator|::
name|indexAt_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowHeight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnWidth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hiddenRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hiddenColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"horizontalScroll"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"verticalScroll"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, no span, no scroll, (20,20)"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
literal|20
operator|<<
literal|20
comment|// point
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"row hidden, no span, no scroll, at (20,20)"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
literal|0
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
literal|20
operator|<<
literal|20
comment|// point
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"col hidden, no span, no scroll, at (20,20)"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
operator|-
literal|1
operator|<<
literal|0
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
literal|20
operator|<<
literal|20
comment|// point
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, row span, no scroll, at (60,20)"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
literal|0
operator|<<
literal|0
comment|// pos
operator|<<
literal|2
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
literal|20
operator|<<
literal|60
comment|// point
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, col span, no scroll, at (60,20)"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
literal|0
operator|<<
literal|0
comment|// pos
operator|<<
literal|1
operator|<<
literal|2
comment|// span
operator|<<
literal|0
operator|<<
literal|0
comment|// scroll
operator|<<
literal|60
operator|<<
literal|20
comment|// point
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, no span, scroll (5,0), at (20,20)"
argument_list|)
operator|<<
literal|20
operator|<<
literal|20
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|5
operator|<<
literal|0
comment|// scroll
operator|<<
literal|20
operator|<<
literal|20
comment|// point
operator|<<
literal|0
operator|<<
literal|5
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, no span, scroll (0,5), at (20,20)"
argument_list|)
operator|<<
literal|20
operator|<<
literal|20
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|0
operator|<<
literal|5
comment|// scroll
operator|<<
literal|20
operator|<<
literal|20
comment|// point
operator|<<
literal|5
operator|<<
literal|0
expr_stmt|;
comment|// expected
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no hidden, no span, scroll (5,5), at (20,20)"
argument_list|)
operator|<<
literal|20
operator|<<
literal|20
comment|// dim
operator|<<
literal|40
operator|<<
literal|40
comment|// size
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// hide
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
comment|// pos
operator|<<
literal|1
operator|<<
literal|1
comment|// span
operator|<<
literal|5
operator|<<
literal|5
comment|// scroll
operator|<<
literal|20
operator|<<
literal|20
comment|// point
operator|<<
literal|5
operator|<<
literal|5
expr_stmt|;
comment|// expected
block|}
end_function
begin_function
DECL|function|indexAt
name|void
name|tst_QTableView
operator|::
name|indexAt
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hiddenRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hiddenColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|horizontalScroll
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|verticalScroll
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|x
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QWidget
name|toplevel
decl_stmt|;
name|QtTestTableView
name|view
argument_list|(
operator|&
name|toplevel
argument_list|)
decl_stmt|;
name|toplevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|toplevel
argument_list|)
argument_list|)
expr_stmt|;
comment|//some styles change the scroll mode in their polish
name|view
operator|.
name|setHorizontalScrollMode
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
expr_stmt|;
name|view
operator|.
name|setVerticalScrollMode
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|rowSpan
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
name|hiddenRow
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hiddenColumn
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHeight
argument_list|(
name|r
argument_list|,
name|rowHeight
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnWidth
argument_list|(
name|c
argument_list|,
name|columnWidth
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|horizontalScroll
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|verticalScroll
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
name|expectedRow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|,
name|expectedColumn
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|span_data
name|void
name|tst_QTableView
operator|::
name|span_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hiddenRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hiddenColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"clear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"top left 2x2"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"top left 1x2"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"top left 2x1"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|false
expr_stmt|;
comment|/* This makes no sens.     QTest::newRow("top left 2x0")<< 10<< 10<< -1<< -1<< 0<< 0<< 2<< 0<< 2<< 0<< false;      QTest::newRow("top left 0x2")<< 10<< 10<< -1<< -1<< 0<< 0<< 0<< 2<< 0<< 2<< false;*/
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid 2x2"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"top left 2x2"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bottom right 2x2"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|8
operator|<<
literal|8
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid span 2x2"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|8
operator|<<
literal|8
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid span 3x3"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|6
operator|<<
literal|6
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|span
name|void
name|tst_QTableView
operator|::
name|span
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hiddenRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hiddenColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumnSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|clear
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|rowSpan
argument_list|,
name|columnSpan
argument_list|)
expr_stmt|;
if|if
condition|(
name|clear
condition|)
block|{
name|model
operator|.
name|removeLastRow
argument_list|()
expr_stmt|;
name|model
operator|.
name|removeLastRow
argument_list|()
expr_stmt|;
name|view
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
name|view
operator|.
name|hideRow
argument_list|(
name|hiddenRow
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
name|hiddenColumn
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
argument_list|,
name|expectedRowSpan
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
argument_list|,
name|expectedColumnSpan
argument_list|)
expr_stmt|;
if|if
condition|(
name|hiddenRow
operator|>
operator|-
literal|1
condition|)
block|{
name|QModelIndex
name|hidden
init|=
name|model
operator|.
name|index
argument_list|(
name|hiddenRow
argument_list|,
name|columnCount
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isIndexHidden
argument_list|(
name|hidden
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hiddenColumn
operator|>
operator|-
literal|1
condition|)
block|{
name|QModelIndex
name|hidden
init|=
name|model
operator|.
name|index
argument_list|(
name|rowCount
operator|-
literal|1
argument_list|,
name|hiddenColumn
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isIndexHidden
argument_list|(
name|hidden
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|clearSpans
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|VERIFY_SPANS_CONSISTENCY
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
block|}
end_function
begin_typedef
DECL|typedef|SpanList
typedef|typedef
name|QVector
argument_list|<
name|QRect
argument_list|>
name|SpanList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|SpanList
argument_list|)
end_macro
begin_function
DECL|function|spans_data
name|void
name|tst_QTableView
operator|::
name|spans_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|SpanList
argument_list|>
argument_list|(
literal|"spans"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hideRowLastRowOfFirstSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"pos"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRowSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumnSpan"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1x3 span, query 3,0"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|<<
literal|1
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1x3 span, query 3,1"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
literal|1
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1x3 span, query 3,2"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|<<
literal|1
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two 1x2 spans at the same column, query at 3,0"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two 1x2 spans at the same column, query at 4,0"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"how to order spans (1,1)"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
literal|3
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"how to order spans (2,1)"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
literal|3
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"how to order spans (3,1)"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
literal|3
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"how to order spans (1,2)"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"how to order spans (2,2)"
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
comment|//no hidden row
operator|<<
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"spans with hidden rows"
argument_list|)
operator|<<
literal|3
operator|<<
literal|2
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|)
operator|<<
literal|true
comment|//we hide the last row of the first span
operator|<<
name|QPoint
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTBUG-6004: No failing assertion, then it passes."
argument_list|)
operator|<<
literal|5
operator|<<
literal|5
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTBUG-6004 (follow-up): No failing assertion, then it passes."
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QTBUG-9631: remove one span"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
operator|(
name|SpanList
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spans
name|void
name|tst_QTableView
operator|::
name|spans
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|SpanList
argument_list|,
name|spans
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hideRowLastRowOfFirstSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRowSpan
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumnSpan
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|spans
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QRect
name|sp
init|=
name|spans
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
name|sp
operator|.
name|x
argument_list|()
argument_list|,
name|sp
operator|.
name|y
argument_list|()
argument_list|,
name|sp
operator|.
name|width
argument_list|()
argument_list|,
name|sp
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hideRowLastRowOfFirstSpan
condition|)
block|{
name|view
operator|.
name|setRowHidden
argument_list|(
name|spans
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|bottom
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//we check that the span didn't break the visual rects of the model indexes
name|QRect
name|first
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|spans
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|top
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|next
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|spans
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|bottom
argument_list|()
operator|+
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|first
operator|.
name|intersected
argument_list|(
name|next
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
name|pos
operator|.
name|x
argument_list|()
argument_list|,
name|pos
operator|.
name|y
argument_list|()
argument_list|)
argument_list|,
name|expectedColumnSpan
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
name|pos
operator|.
name|x
argument_list|()
argument_list|,
name|pos
operator|.
name|y
argument_list|()
argument_list|)
argument_list|,
name|expectedRowSpan
argument_list|)
expr_stmt|;
name|VERIFY_SPANS_CONSISTENCY
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spansAfterRowInsertion
name|void
name|tst_QTableView
operator|::
name|spansAfterRowInsertion
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
comment|// Insertion before the span only shifts the span.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Insertion happens before the given row, so it only shifts the span also.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertRows
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Insertion inside the span expands it.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertRows
argument_list|(
literal|8
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Insertion after the span does nothing to it.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertRows
argument_list|(
literal|12
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|VERIFY_SPANS_CONSISTENCY
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spansAfterColumnInsertion
name|void
name|tst_QTableView
operator|::
name|spansAfterColumnInsertion
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
comment|// Insertion before the span only shifts the span.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Insertion happens before the given column, so it only shifts the span also.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertColumns
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Insertion inside the span expands it.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertColumns
argument_list|(
literal|8
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// Insertion after the span does nothing to it.
name|view
operator|.
name|model
argument_list|()
operator|->
name|insertColumns
argument_list|(
literal|12
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|VERIFY_SPANS_CONSISTENCY
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spansAfterRowRemoval
name|void
name|tst_QTableView
operator|::
name|spansAfterRowRemoval
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QRect
argument_list|>
name|spans
decl_stmt|;
name|spans
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|6
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QRect
name|span
decl|,
name|spans
control|)
name|view
operator|.
name|setSpan
argument_list|(
name|span
operator|.
name|top
argument_list|()
argument_list|,
name|span
operator|.
name|left
argument_list|()
argument_list|,
name|span
operator|.
name|height
argument_list|()
argument_list|,
name|span
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|model
argument_list|()
operator|->
name|removeRows
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QRect
argument_list|>
name|expectedSpans
decl_stmt|;
name|expectedSpans
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|6
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QRect
name|span
decl|,
name|expectedSpans
control|)
block|{
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
name|span
operator|.
name|top
argument_list|()
argument_list|,
name|span
operator|.
name|left
argument_list|()
argument_list|)
argument_list|,
name|span
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
name|span
operator|.
name|top
argument_list|()
argument_list|,
name|span
operator|.
name|left
argument_list|()
argument_list|)
argument_list|,
name|span
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|VERIFY_SPANS_CONSISTENCY
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|spansAfterColumnRemoval
name|void
name|tst_QTableView
operator|::
name|spansAfterColumnRemoval
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|// Same set as above just swapping columns and rows.
name|QList
argument_list|<
name|QRect
argument_list|>
name|spans
decl_stmt|;
name|spans
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|6
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QRect
name|span
decl|,
name|spans
control|)
name|view
operator|.
name|setSpan
argument_list|(
name|span
operator|.
name|left
argument_list|()
argument_list|,
name|span
operator|.
name|top
argument_list|()
argument_list|,
name|span
operator|.
name|width
argument_list|()
argument_list|,
name|span
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|model
argument_list|()
operator|->
name|removeColumns
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QRect
argument_list|>
name|expectedSpans
decl_stmt|;
name|expectedSpans
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|6
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QRect
name|span
decl|,
name|expectedSpans
control|)
block|{
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnSpan
argument_list|(
name|span
operator|.
name|left
argument_list|()
argument_list|,
name|span
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|span
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rowSpan
argument_list|(
name|span
operator|.
name|left
argument_list|()
argument_list|,
name|span
operator|.
name|top
argument_list|()
argument_list|)
argument_list|,
name|span
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|VERIFY_SPANS_CONSISTENCY
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|Model
class|class
name|Model
super|:
specifier|public
name|QAbstractTableModel
block|{
name|Q_OBJECT
public|public:
DECL|function|Model
name|Model
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractTableModel
argument_list|(
name|parent
argument_list|)
block|{     }
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|rows
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|columns
return|;
block|}
DECL|function|data
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|,
name|int
parameter_list|)
specifier|const
block|{
return|return
name|QVariant
argument_list|()
return|;
block|}
DECL|function|res
name|void
name|res
parameter_list|()
block|{
name|reset
argument_list|()
expr_stmt|;
block|}
DECL|member|rows
name|int
name|rows
decl_stmt|;
DECL|member|columns
name|int
name|columns
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|checkHeaderReset
name|void
name|tst_QTableView
operator|::
name|checkHeaderReset
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
name|Model
name|m
decl_stmt|;
name|m
operator|.
name|rows
operator|=
literal|3
expr_stmt|;
name|m
operator|.
name|columns
operator|=
literal|3
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|m
operator|.
name|rows
operator|=
literal|4
expr_stmt|;
name|m
operator|.
name|columns
operator|=
literal|4
expr_stmt|;
name|m
operator|.
name|res
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkHeaderMinSize
name|void
name|tst_QTableView
operator|::
name|checkHeaderMinSize
parameter_list|()
block|{
comment|//tests if the minimumsize is of a header is taken into account
comment|//while computing QTableView geometry. For that we test the position of the
comment|//viewport.
name|QTableView
name|view
decl_stmt|;
name|QStringListModel
name|m
decl_stmt|;
name|m
operator|.
name|setStringList
argument_list|(
name|QStringList
argument_list|()
operator|<<
name|QLatin1String
argument_list|(
literal|"one cell is enough"
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
comment|//setting the minimum height on the horizontal header
comment|//and the minimum width on the vertical header
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setMinimumHeight
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|setMinimumWidth
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|y
argument_list|()
operator|>=
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|minimumHeight
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|x
argument_list|()
operator|>=
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|minimumWidth
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeToContents
name|void
name|tst_QTableView
operator|::
name|resizeToContents
parameter_list|()
block|{
comment|//checks that the resize to contents is consistent
name|QTableWidget
name|table
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QTableWidget
name|table2
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QTableWidget
name|table3
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|table
operator|.
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"A Lot of text here: BLA BLA BLA"
argument_list|)
argument_list|)
expr_stmt|;
name|table2
operator|.
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"A Lot of text here: BLA BLA BLA"
argument_list|)
argument_list|)
expr_stmt|;
name|table3
operator|.
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"A Lot of text here: BLA BLA BLA"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|table2
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|table
operator|.
name|verticalHeader
argument_list|()
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|table2
operator|.
name|verticalHeader
argument_list|()
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|table
operator|.
name|columnCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|table
operator|.
name|resizeColumnToContents
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|table
operator|.
name|rowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|table
operator|.
name|resizeRowToContents
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|table2
operator|.
name|resizeColumnsToContents
argument_list|()
expr_stmt|;
name|table2
operator|.
name|resizeRowsToContents
argument_list|()
expr_stmt|;
name|table3
operator|.
name|resizeColumnsToContents
argument_list|()
expr_stmt|;
name|table3
operator|.
name|resizeRowsToContents
argument_list|()
expr_stmt|;
comment|//now let's check the row/col sizes
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|table
operator|.
name|columnCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|QCOMPARE
argument_list|(
name|table
operator|.
name|columnWidth
argument_list|(
name|i
argument_list|)
argument_list|,
name|table2
operator|.
name|columnWidth
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table2
operator|.
name|columnWidth
argument_list|(
name|i
argument_list|)
argument_list|,
name|table3
operator|.
name|columnWidth
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|table
operator|.
name|rowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|QCOMPARE
argument_list|(
name|table
operator|.
name|rowHeight
argument_list|(
name|i
argument_list|)
argument_list|,
name|table2
operator|.
name|rowHeight
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table2
operator|.
name|rowHeight
argument_list|(
name|i
argument_list|)
argument_list|,
name|table3
operator|.
name|rowHeight
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function_decl
name|QT_BEGIN_NAMESPACE
specifier|extern
name|bool
name|Q_GUI_EXPORT
name|qt_tab_all_widgets
parameter_list|()
function_decl|;
end_function_decl
begin_comment
comment|// qapplication.cpp
end_comment
begin_function
name|QT_END_NAMESPACE
DECL|function|tabFocus
name|void
name|tst_QTableView
operator|::
name|tabFocus
parameter_list|()
block|{
if|if
condition|(
operator|!
name|qt_tab_all_widgets
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"This test requires full keyboard control to be enabled."
argument_list|)
expr_stmt|;
comment|// QTableView enables tabKeyNavigation by default, but you should be able
comment|// to change focus on an empty table view, or on a table view that doesn't
comment|// have this property set.
name|QWidget
name|window
decl_stmt|;
name|QTableView
modifier|*
name|view
init|=
operator|new
name|QTableView
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
comment|// window
name|QVERIFY
argument_list|(
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
comment|// tab to view
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// tab to edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// backtab to view
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// backtab to edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QStandardItemModel
modifier|*
name|model
init|=
operator|new
name|QStandardItemModel
decl_stmt|;
name|view
operator|->
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
comment|// backtab to view
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// backtab to edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|"Hei"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|"Hei"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|"Hei"
argument_list|)
argument_list|)
expr_stmt|;
comment|// backtab to view
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// backtab to edit doesn't work
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|setTabKeyNavigation
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// backtab to edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|model
expr_stmt|;
block|}
end_function
begin_class
DECL|class|BigModel
class|class
name|BigModel
super|:
specifier|public
name|QAbstractTableModel
block|{
name|Q_OBJECT
public|public:
DECL|function|data
specifier|virtual
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|,
name|int
name|role
init|=
name|Qt
operator|::
name|DisplayRole
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|role
operator|==
name|Qt
operator|::
name|DisplayRole
condition|)
return|return
name|QString
argument_list|(
literal|"%1 - %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|)
return|;
return|return
name|QVariant
argument_list|()
return|;
block|}
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
name|Q_UNUSED
argument_list|(
name|parent
argument_list|)
expr_stmt|;
return|return
literal|10000000
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|parent
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
name|Q_UNUSED
argument_list|(
name|parent
argument_list|)
expr_stmt|;
return|return
literal|20000000
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|bigModel
name|void
name|tst_QTableView
operator|::
name|bigModel
parameter_list|()
block|{
comment|//should not crash
name|QTableView
name|view
decl_stmt|;
name|BigModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
literal|10002
argument_list|,
literal|10002
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|1000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|10010
argument_list|,
literal|10010
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectionSignal
name|void
name|tst_QTableView
operator|::
name|selectionSignal
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|checkSignalOrder
operator|=
literal|true
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentIndex
name|void
name|tst_QTableView
operator|::
name|setCurrentIndex
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|// submit() slot should be called in model when current row changes
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|submit_count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|submit_count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|submit_count
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|submit_count
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|submit_count
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|submit_count
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|task173773_EventFilter
class|class
name|task173773_EventFilter
super|:
specifier|public
name|QObject
block|{
DECL|member|paintEventCount_
name|int
name|paintEventCount_
decl_stmt|;
public|public:
DECL|function|task173773_EventFilter
name|task173773_EventFilter
parameter_list|()
member_init_list|:
name|paintEventCount_
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|paintEventCount
name|int
name|paintEventCount
parameter_list|()
specifier|const
block|{
return|return
name|paintEventCount_
return|;
block|}
private|private:
DECL|function|eventFilter
name|bool
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|obj
parameter_list|,
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|obj
argument_list|)
expr_stmt|;
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Paint
condition|)
operator|++
name|paintEventCount_
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|task173773_updateVerticalHeader
name|void
name|tst_QTableView
operator|::
name|task173773_updateVerticalHeader
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QSortFilterProxyModel
name|proxyModel
decl_stmt|;
name|proxyModel
operator|.
name|setSourceModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|proxyModel
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|sortByColumn
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|task173773_EventFilter
name|eventFilter
decl_stmt|;
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|viewport
argument_list|()
operator|->
name|installEventFilter
argument_list|(
operator|&
name|eventFilter
argument_list|)
expr_stmt|;
name|view
operator|.
name|sortByColumn
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// ### note: this test may occasionally pass even if the bug is present!
name|QVERIFY
argument_list|(
name|eventFilter
operator|.
name|paintEventCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task227953_setRootIndex
name|void
name|tst_QTableView
operator|::
name|task227953_setRootIndex
parameter_list|()
block|{
name|QTableView
name|tableView
decl_stmt|;
comment|//model = tree with two items with tables as children
name|QStandardItemModel
name|model
decl_stmt|;
name|QStandardItem
name|item1
decl_stmt|,
name|item2
decl_stmt|;
name|model
operator|.
name|appendColumn
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|item1
operator|<<
operator|&
name|item2
argument_list|)
expr_stmt|;
comment|//setup the first table as a child of the first item
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
literal|40
condition|;
operator|++
name|row
control|)
block|{
name|item1
operator|.
name|appendRow
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"row %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|row
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//setup the second table as a child of the second item
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
literal|10
condition|;
operator|++
name|row
control|)
block|{
name|item2
operator|.
name|appendRow
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"row %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|row
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|tableView
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|//show the first 10 rows of the first table
name|QModelIndex
name|root
init|=
name|model
operator|.
name|indexFromItem
argument_list|(
operator|&
name|item1
argument_list|)
decl_stmt|;
name|tableView
operator|.
name|setRootIndex
argument_list|(
name|root
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|10
init|;
name|i
operator|!=
literal|40
condition|;
operator|++
name|i
control|)
block|{
name|tableView
operator|.
name|setRowHidden
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|tableView
operator|.
name|verticalHeader
argument_list|()
operator|->
name|count
argument_list|()
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tableView
operator|.
name|verticalHeader
argument_list|()
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|30
argument_list|)
expr_stmt|;
comment|//show the first 10 rows of the second table
name|tableView
operator|.
name|setRootIndex
argument_list|(
name|model
operator|.
name|indexFromItem
argument_list|(
operator|&
name|item2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tableView
operator|.
name|verticalHeader
argument_list|()
operator|->
name|count
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tableView
operator|.
name|verticalHeader
argument_list|()
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|tableView
operator|.
name|verticalHeader
argument_list|()
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task240266_veryBigColumn
name|void
name|tst_QTableView
operator|::
name|task240266_veryBigColumn
parameter_list|()
block|{
name|QTableView
name|table
decl_stmt|;
name|table
operator|.
name|setFixedSize
argument_list|(
literal|500
argument_list|,
literal|300
argument_list|)
expr_stmt|;
comment|//just to make sure we have the 2 first columns visible
name|QStandardItemModel
name|model
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|table
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|table
operator|.
name|setColumnWidth
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|//normal column
name|table
operator|.
name|setColumnWidth
argument_list|(
literal|1
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|//normal column
name|table
operator|.
name|setColumnWidth
argument_list|(
literal|2
argument_list|,
literal|9000
argument_list|)
expr_stmt|;
comment|//very big column
name|table
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|table
argument_list|)
argument_list|)
expr_stmt|;
comment|//some styles change the scroll mode in their polish
name|table
operator|.
name|setHorizontalScrollMode
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
expr_stmt|;
name|table
operator|.
name|setVerticalScrollMode
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
expr_stmt|;
name|QScrollBar
modifier|*
name|scroll
init|=
name|table
operator|.
name|horizontalScrollBar
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|scroll
operator|->
name|minimum
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|scroll
operator|->
name|maximum
argument_list|()
argument_list|,
name|model
operator|.
name|columnCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|scroll
operator|->
name|singleStep
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//1 is not always a very correct value for pageStep. Ideally this should be dynamic.
comment|//Maybe something for Qt 5 ;-)
name|QCOMPARE
argument_list|(
name|scroll
operator|->
name|pageStep
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task248688_autoScrollNavigation
name|void
name|tst_QTableView
operator|::
name|task248688_autoScrollNavigation
parameter_list|()
block|{
comment|//we make sure that when navigating with the keyboard the view is correctly scrolled
comment|//to the current item
name|QStandardItemModel
name|model
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideColumn
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|view
operator|.
name|hideRow
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
block|{
if|if
condition|(
name|view
operator|.
name|isRowHidden
argument_list|(
name|r
argument_list|)
condition|)
continue|continue;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|model
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
block|{
if|if
condition|(
name|view
operator|.
name|isColumnHidden
argument_list|(
name|c
argument_list|)
condition|)
continue|continue;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|contains
argument_list|(
name|view
operator|.
name|visualRect
argument_list|(
name|index
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|mouseWheel_data
name|void
name|tst_QTableView
operator|::
name|mouseWheel_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"scrollMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"delta"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"horizontalPositon"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"verticalPosition"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scroll up per item"
argument_list|)
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
literal|120
operator|<<
literal|10
operator|-
name|qApp
operator|->
name|wheelScrollLines
argument_list|()
operator|<<
literal|10
operator|-
name|qApp
operator|->
name|wheelScrollLines
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scroll down per item"
argument_list|)
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerItem
argument_list|)
operator|<<
operator|-
literal|120
operator|<<
literal|10
operator|+
name|qApp
operator|->
name|wheelScrollLines
argument_list|()
operator|<<
literal|10
operator|+
name|qApp
operator|->
name|wheelScrollLines
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scroll down per pixel"
argument_list|)
operator|<<
name|int
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
operator|<<
operator|-
literal|120
operator|<<
literal|10
operator|+
name|qApp
operator|->
name|wheelScrollLines
argument_list|()
operator|*
literal|89
operator|<<
literal|10
operator|+
name|qApp
operator|->
name|wheelScrollLines
argument_list|()
operator|*
literal|28
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mouseWheel
name|void
name|tst_QTableView
operator|::
name|mouseWheel
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|QSKIP
argument_list|(
literal|"Since different Windows CE versions sport different taskbars, we skip this test"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|int
argument_list|,
name|scrollMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|delta
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|horizontalPositon
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|verticalPosition
argument_list|)
expr_stmt|;
name|QtTestTableModel
name|model
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|QtTestTableView
name|view
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
literal|100
condition|;
operator|++
name|r
control|)
name|view
operator|.
name|setRowHeight
argument_list|(
name|r
argument_list|,
literal|50
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
literal|100
condition|;
operator|++
name|c
control|)
name|view
operator|.
name|setColumnWidth
argument_list|(
name|c
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|topLevel
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setHorizontalScrollMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|ScrollMode
operator|)
name|scrollMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|setVerticalScrollMode
argument_list|(
operator|(
name|QAbstractItemView
operator|::
name|ScrollMode
operator|)
name|scrollMode
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QPoint
name|pos
init|=
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|geometry
argument_list|()
operator|.
name|center
argument_list|()
decl_stmt|;
name|QWheelEvent
name|verticalEvent
argument_list|(
name|pos
argument_list|,
name|delta
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QWheelEvent
name|horizontalEvent
argument_list|(
name|pos
argument_list|,
name|delta
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|horizontalEvent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|-
name|horizontalPositon
argument_list|)
operator|<
literal|10
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|verticalEvent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|-
name|verticalPosition
argument_list|)
operator|<
literal|10
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addColumnWhileEditing
name|void
name|tst_QTableView
operator|::
name|addColumnWhileEditing
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|last
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|9
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|openPersistentEditor
argument_list|(
name|last
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|last
argument_list|)
expr_stmt|;
comment|//let's see if the editor is moved to the right location
comment|//after adding a column
name|model
operator|.
name|setColumnCount
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QLineEdit
argument_list|>
name|editor
init|=
name|qFindChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editor
operator|->
name|geometry
argument_list|()
argument_list|,
name|view
operator|.
name|visualRect
argument_list|(
name|last
argument_list|)
argument_list|)
expr_stmt|;
comment|//let's see if the editor is moved to the right location
comment|//after removing a column
name|view
operator|.
name|scrollTo
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
name|model
operator|.
name|columnCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setColumnCount
argument_list|(
name|model
operator|.
name|columnCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editor
operator|->
name|geometry
argument_list|()
argument_list|,
name|view
operator|.
name|visualRect
argument_list|(
name|last
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task259308_scrollVerticalHeaderSwappedSections
name|void
name|tst_QTableView
operator|::
name|task259308_scrollVerticalHeaderSwappedSections
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|setRowCount
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|model
operator|.
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|row
control|)
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|model
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|col
control|)
block|{
specifier|const
name|QModelIndex
modifier|&
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|idx
argument_list|,
name|QVariant
argument_list|(
name|row
argument_list|)
argument_list|,
name|Qt
operator|::
name|EditRole
argument_list|)
expr_stmt|;
block|}
name|QTableView
name|tv
decl_stmt|;
name|tv
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|tv
operator|.
name|show
argument_list|()
expr_stmt|;
name|tv
operator|.
name|verticalHeader
argument_list|()
operator|->
name|swapSections
argument_list|(
literal|0
argument_list|,
name|model
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|tv
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|tv
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|tv
argument_list|,
name|Qt
operator|::
name|Key_PageUp
argument_list|)
expr_stmt|;
comment|// PageUp won't scroll when at top
name|QTRY_COMPARE
argument_list|(
name|tv
operator|.
name|rowAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|tv
operator|.
name|verticalHeader
argument_list|()
operator|->
name|logicalIndex
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|newRow
init|=
name|tv
operator|.
name|rowAt
argument_list|(
name|tv
operator|.
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|newRow
operator|==
name|tv
operator|.
name|rowAt
argument_list|(
name|tv
operator|.
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
operator|-
literal|1
argument_list|)
condition|)
comment|// Overlapping row
name|newRow
operator|++
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|tv
argument_list|,
name|Qt
operator|::
name|Key_PageDown
argument_list|)
expr_stmt|;
comment|// Scroll down and check current
name|QTRY_COMPARE
argument_list|(
name|tv
operator|.
name|currentIndex
argument_list|()
operator|.
name|row
argument_list|()
argument_list|,
name|newRow
argument_list|)
expr_stmt|;
name|tv
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|tv
argument_list|,
name|Qt
operator|::
name|Key_PageDown
argument_list|)
expr_stmt|;
comment|// PageDown won't scroll when at the bottom
name|QTRY_COMPARE
argument_list|(
name|tv
operator|.
name|rowAt
argument_list|(
name|tv
operator|.
name|viewport
argument_list|()
operator|->
name|height
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|tv
operator|.
name|verticalHeader
argument_list|()
operator|->
name|logicalIndex
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
template|template
parameter_list|<
name|typename
name|T
parameter_list|>
struct|struct
DECL|struct|ValueSaver
name|ValueSaver
block|{
DECL|member|var
DECL|member|value
name|T
modifier|&
name|var
decl_stmt|,
name|value
decl_stmt|;
DECL|function|ValueSaver
name|ValueSaver
parameter_list|(
name|T
modifier|&
name|v
parameter_list|)
member_init_list|:
name|var
argument_list|(
name|v
argument_list|)
member_init_list|,
name|value
argument_list|(
name|v
argument_list|)
block|{ }
DECL|function|~ValueSaver
name|~
name|ValueSaver
parameter_list|()
block|{
name|var
operator|=
name|value
expr_stmt|;
block|}
block|}
struct|;
end_struct
begin_function
DECL|function|task191545_dragSelectRows
name|void
name|tst_QTableView
operator|::
name|task191545_dragSelectRows
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QTableView
name|table
decl_stmt|;
name|table
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|table
operator|.
name|setSelectionBehavior
argument_list|(
name|QAbstractItemView
operator|::
name|SelectItems
argument_list|)
expr_stmt|;
name|table
operator|.
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|ExtendedSelection
argument_list|)
expr_stmt|;
name|table
operator|.
name|setMinimumSize
argument_list|(
literal|1000
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|table
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|ValueSaver
argument_list|<
name|Qt
operator|::
name|KeyboardModifiers
argument_list|>
name|saver
argument_list|(
name|QApplicationPrivate
operator|::
name|modifier_buttons
argument_list|)
decl_stmt|;
name|QApplicationPrivate
operator|::
name|modifier_buttons
operator|=
name|Qt
operator|::
name|ControlModifier
expr_stmt|;
block|{
name|QRect
name|cellRect
init|=
name|table
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QHeaderView
modifier|*
name|vHeader
init|=
name|table
operator|.
name|verticalHeader
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|vHeaderVp
init|=
name|vHeader
operator|->
name|viewport
argument_list|()
decl_stmt|;
name|QPoint
name|rowPos
argument_list|(
name|cellRect
operator|.
name|center
argument_list|()
argument_list|)
decl_stmt|;
name|QMouseEvent
name|rowPressEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|rowPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|vHeaderVp
argument_list|,
operator|&
name|rowPressEvent
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|rowPos
operator|.
name|setY
argument_list|(
name|rowPos
operator|.
name|y
argument_list|()
operator|+
name|cellRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QMouseEvent
name|moveEvent
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|rowPos
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|vHeaderVp
argument_list|,
operator|&
name|moveEvent
argument_list|)
expr_stmt|;
block|}
name|QMouseEvent
name|rowReleaseEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|,
name|rowPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|vHeaderVp
argument_list|,
operator|&
name|rowReleaseEvent
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|3
operator|+
name|i
argument_list|,
literal|0
argument_list|,
name|table
operator|.
name|rootIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|vHeader
operator|->
name|selectionModel
argument_list|()
operator|->
name|selectedRows
argument_list|()
operator|.
name|contains
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|{
name|QRect
name|cellRect
init|=
name|table
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
decl_stmt|;
name|QHeaderView
modifier|*
name|hHeader
init|=
name|table
operator|.
name|horizontalHeader
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|hHeaderVp
init|=
name|hHeader
operator|->
name|viewport
argument_list|()
decl_stmt|;
name|QPoint
name|colPos
argument_list|(
operator|(
name|cellRect
operator|.
name|left
argument_list|()
operator|+
name|cellRect
operator|.
name|right
argument_list|()
operator|)
operator|/
literal|2
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|QMouseEvent
name|colPressEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|colPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|hHeaderVp
argument_list|,
operator|&
name|colPressEvent
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|colPos
operator|.
name|setX
argument_list|(
name|colPos
operator|.
name|x
argument_list|()
operator|+
name|cellRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QMouseEvent
name|moveEvent
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|colPos
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|hHeaderVp
argument_list|,
operator|&
name|moveEvent
argument_list|)
expr_stmt|;
block|}
name|QMouseEvent
name|colReleaseEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|,
name|colPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|hHeaderVp
argument_list|,
operator|&
name|colReleaseEvent
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|3
operator|+
name|i
argument_list|,
name|table
operator|.
name|rootIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|hHeader
operator|->
name|selectionModel
argument_list|()
operator|->
name|selectedColumns
argument_list|()
operator|.
name|contains
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|{
name|QRect
name|cellRect
init|=
name|table
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|tableVp
init|=
name|table
operator|.
name|viewport
argument_list|()
decl_stmt|;
name|QPoint
name|cellPos
init|=
name|cellRect
operator|.
name|center
argument_list|()
decl_stmt|;
name|QMouseEvent
name|cellPressEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|cellPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|tableVp
argument_list|,
operator|&
name|cellPressEvent
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
operator|++
name|i
control|)
block|{
name|cellPos
operator|.
name|setX
argument_list|(
name|cellPos
operator|.
name|x
argument_list|()
operator|+
name|cellRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|cellPos
operator|.
name|setY
argument_list|(
name|cellPos
operator|.
name|y
argument_list|()
operator|+
name|cellRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QMouseEvent
name|moveEvent
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|cellPos
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|tableVp
argument_list|,
operator|&
name|moveEvent
argument_list|)
expr_stmt|;
block|}
name|QMouseEvent
name|cellReleaseEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|,
name|cellPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|tableVp
argument_list|,
operator|&
name|cellReleaseEvent
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
operator|++
name|i
control|)
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|6
condition|;
operator|++
name|j
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|2
operator|+
name|i
argument_list|,
literal|2
operator|+
name|j
argument_list|,
name|table
operator|.
name|rootIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|.
name|selectionModel
argument_list|()
operator|->
name|isSelected
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|{
name|QRect
name|cellRect
init|=
name|table
operator|.
name|visualRect
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|tableVp
init|=
name|table
operator|.
name|viewport
argument_list|()
decl_stmt|;
name|QPoint
name|cellPos
init|=
name|cellRect
operator|.
name|center
argument_list|()
decl_stmt|;
name|QMouseEvent
name|cellPressEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|cellPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|tableVp
argument_list|,
operator|&
name|cellPressEvent
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
operator|++
name|i
control|)
block|{
name|cellPos
operator|.
name|setX
argument_list|(
name|cellPos
operator|.
name|x
argument_list|()
operator|+
name|cellRect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|cellPos
operator|.
name|setY
argument_list|(
name|cellPos
operator|.
name|y
argument_list|()
operator|+
name|cellRect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QMouseEvent
name|moveEvent
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|cellPos
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|tableVp
argument_list|,
operator|&
name|moveEvent
argument_list|)
expr_stmt|;
block|}
name|QMouseEvent
name|cellReleaseEvent
argument_list|(
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|,
name|cellPos
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|tableVp
argument_list|,
operator|&
name|cellReleaseEvent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
operator|++
name|i
control|)
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|6
condition|;
operator|++
name|j
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|3
operator|+
name|i
argument_list|,
literal|3
operator|+
name|j
argument_list|,
name|table
operator|.
name|rootIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|table
operator|.
name|selectionModel
argument_list|()
operator|->
name|isSelected
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|task234926_setHeaderSorting
name|void
name|tst_QTableView
operator|::
name|task234926_setHeaderSorting
parameter_list|()
block|{
name|QStringListModel
name|model
decl_stmt|;
name|QStringList
name|data
decl_stmt|;
name|data
operator|<<
literal|"orange"
operator|<<
literal|"apple"
operator|<<
literal|"banana"
operator|<<
literal|"lemon"
operator|<<
literal|"pumpkin"
expr_stmt|;
name|QStringList
name|sortedDataA
init|=
name|data
decl_stmt|;
name|QStringList
name|sortedDataD
init|=
name|data
decl_stmt|;
name|qSort
argument_list|(
name|sortedDataA
argument_list|)
expr_stmt|;
name|qSort
argument_list|(
name|sortedDataD
operator|.
name|begin
argument_list|()
argument_list|,
name|sortedDataD
operator|.
name|end
argument_list|()
argument_list|,
name|qGreater
argument_list|<
name|QString
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|QTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|//    view.show();
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|stringList
argument_list|()
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|sortByColumn
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|stringList
argument_list|()
argument_list|,
name|sortedDataA
argument_list|)
expr_stmt|;
name|view
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setSortIndicator
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|stringList
argument_list|()
argument_list|,
name|sortedDataD
argument_list|)
expr_stmt|;
name|QHeaderView
modifier|*
name|h
init|=
operator|new
name|QHeaderView
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
decl_stmt|;
name|h
operator|->
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setHorizontalHeader
argument_list|(
name|h
argument_list|)
expr_stmt|;
name|h
operator|->
name|setSortIndicator
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|stringList
argument_list|()
argument_list|,
name|sortedDataA
argument_list|)
expr_stmt|;
name|h
operator|->
name|setSortIndicator
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|stringList
argument_list|()
argument_list|,
name|sortedDataD
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_5062_spansInconsistency
name|void
name|tst_QTableView
operator|::
name|taskQTBUG_5062_spansInconsistency
parameter_list|()
block|{
specifier|const
name|int
name|nRows
init|=
literal|5
decl_stmt|;
specifier|const
name|int
name|nColumns
init|=
literal|5
decl_stmt|;
name|QtTestTableModel
name|model
argument_list|(
name|nRows
argument_list|,
name|nColumns
argument_list|)
decl_stmt|;
name|QtTestTableView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nRows
condition|;
operator|++
name|i
control|)
name|view
operator|.
name|setSpan
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|nColumns
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSpan
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|VERIFY_SPANS_CONSISTENCY
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_4516_clickOnRichTextLabel
name|void
name|tst_QTableView
operator|::
name|taskQTBUG_4516_clickOnRichTextLabel
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QLabel
name|label
argument_list|(
literal|"rich text"
argument_list|)
decl_stmt|;
name|label
operator|.
name|setTextFormat
argument_list|(
name|Qt
operator|::
name|RichText
argument_list|)
expr_stmt|;
name|view
operator|.
name|setIndexWidget
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
operator|&
name|label
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|label
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|changeHeaderData
name|void
name|tst_QTableView
operator|::
name|changeHeaderData
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|text
init|=
literal|"long long long text"
decl_stmt|;
specifier|const
name|int
name|textWidth
init|=
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|fontMetrics
argument_list|()
operator|.
name|width
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|width
argument_list|()
operator|<
name|textWidth
argument_list|)
expr_stmt|;
name|model
operator|.
name|setHeaderData
argument_list|(
literal|2
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|//leave time for layout
name|QVERIFY
argument_list|(
name|view
operator|.
name|verticalHeader
argument_list|()
operator|->
name|width
argument_list|()
operator|>
name|textWidth
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_5237_wheelEventOnHeader
name|void
name|tst_QTableView
operator|::
name|taskQTBUG_5237_wheelEventOnHeader
parameter_list|()
block|{
name|QTableView
name|view
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|500
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|sbValueBefore
init|=
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
decl_stmt|;
name|QHeaderView
modifier|*
name|header
init|=
name|view
operator|.
name|verticalHeader
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
name|header
argument_list|)
expr_stmt|;
name|QWheelEvent
name|wheelEvent
argument_list|(
name|header
operator|->
name|geometry
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
operator|-
literal|720
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|header
operator|->
name|viewport
argument_list|()
argument_list|,
operator|&
name|wheelEvent
argument_list|)
expr_stmt|;
name|int
name|sbValueAfter
init|=
name|view
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|sbValueBefore
operator|!=
name|sbValueAfter
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TestTableView
class|class
name|TestTableView
super|:
specifier|public
name|QTableView
block|{
name|Q_OBJECT
public|public:
DECL|function|TestTableView
name|TestTableView
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QTableView
argument_list|(
name|parent
argument_list|)
block|{
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|(
name|QModelIndex
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|openEditor
argument_list|(
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|~TestTableView
name|~
name|TestTableView
parameter_list|()
block|{}
public|public
name|slots
public|:
DECL|function|onDataChanged
name|void
name|onDataChanged
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
argument_list|()
operator|->
name|rowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|setRowHidden
argument_list|(
name|i
argument_list|,
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|model
argument_list|()
operator|->
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|openEditor
name|void
name|openEditor
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
block|{
name|openPersistentEditor
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|taskQTBUG_8585_crashForNoGoodReason
name|void
name|tst_QTableView
operator|::
name|taskQTBUG_8585_crashForNoGoodReason
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|model
operator|.
name|insertColumn
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|20
condition|;
name|i
operator|++
control|)
block|{
name|model
operator|.
name|insertRow
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|TestTableView
name|w
decl_stmt|;
name|w
operator|.
name|setMouseTracking
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|w
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|,
operator|&
name|w
argument_list|,
name|SLOT
argument_list|(
name|onDataChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|QTest
operator|::
name|mouseMove
argument_list|(
name|w
operator|.
name|viewport
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|model
argument_list|()
operator|->
name|setData
argument_list|(
name|w
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
name|w
operator|.
name|viewport
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|TableView7774
class|class
name|TableView7774
super|:
specifier|public
name|QTableView
block|{
public|public:
DECL|function|visualRegionForSelection
name|QRegion
name|visualRegionForSelection
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
name|selection
parameter_list|)
specifier|const
block|{
return|return
name|QTableView
operator|::
name|visualRegionForSelection
argument_list|(
name|selection
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|taskQTBUG_7774_RtoLVisualRegionForSelection
name|void
name|tst_QTableView
operator|::
name|taskQTBUG_7774_RtoLVisualRegionForSelection
parameter_list|()
block|{
name|TableView7774
name|view
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QItemSelectionRange
name|range
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
name|model
operator|.
name|columnCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|QItemSelection
name|selection
decl_stmt|;
name|selection
operator|<<
name|range
expr_stmt|;
name|QRegion
name|region
init|=
name|view
operator|.
name|visualRegionForSelection
argument_list|(
name|selection
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|region
operator|.
name|rects
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|view
operator|.
name|visualRect
argument_list|(
name|range
operator|.
name|topLeft
argument_list|()
argument_list|)
operator||
name|view
operator|.
name|visualRect
argument_list|(
name|range
operator|.
name|bottomRight
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_8777_scrollToSpans
name|void
name|tst_QTableView
operator|::
name|taskQTBUG_8777_scrollToSpans
parameter_list|()
block|{
name|QTableWidget
name|table
argument_list|(
literal|75
argument_list|,
literal|5
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
name|i
operator|++
control|)
name|table
operator|.
name|setSpan
argument_list|(
literal|2
operator|+
name|i
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|table
operator|.
name|setCurrentCell
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|45
condition|;
operator|++
name|i
control|)
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|table
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|table
operator|.
name|verticalScrollBar
argument_list|()
operator|->
name|value
argument_list|()
operator|>
literal|10
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_10169_sizeHintForRow
name|void
name|tst_QTableView
operator|::
name|taskQTBUG_10169_sizeHintForRow
parameter_list|()
block|{
name|QtTestTableView
name|tableView
decl_stmt|;
name|QStandardItemModel
name|model
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|"Word wrapping text goes here."
argument_list|)
expr_stmt|;
name|tableView
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|tableView
operator|.
name|verticalHeader
argument_list|()
operator|->
name|setSectionResizeMode
argument_list|(
name|QHeaderView
operator|::
name|ResizeToContents
argument_list|)
expr_stmt|;
specifier|const
name|int
name|orderedHeight
init|=
name|tableView
operator|.
name|sizeHintForRow
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|tableView
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|moveSection
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
specifier|const
name|int
name|reorderedHeight
init|=
name|tableView
operator|.
name|sizeHintForRow
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|//the order of the columns shouldn't matter.
name|QCOMPARE
argument_list|(
name|orderedHeight
argument_list|,
name|reorderedHeight
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|viewOptions
name|void
name|tst_QTableView
operator|::
name|viewOptions
parameter_list|()
block|{
name|QtTestTableView
name|view
decl_stmt|;
name|QStyleOptionViewItem
name|options
init|=
name|view
operator|.
name|viewOptions
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|options
operator|.
name|showDecorationSelected
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTableView
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtableview.moc"
end_include
end_unit
