begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qtreewidget.h>
end_include
begin_include
include|#
directive|include
file|<qtreewidgetitemiterator.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qeventloop.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_class
DECL|class|tst_QTreeWidgetItemIterator
class|class
name|tst_QTreeWidgetItemIterator
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QTreeWidgetItemIterator
parameter_list|()
constructor_decl|;
name|~
name|tst_QTreeWidgetItemIterator
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|postincrement
parameter_list|()
function_decl|;
name|void
name|preincrement
parameter_list|()
function_decl|;
name|void
name|postdecrement
parameter_list|()
function_decl|;
name|void
name|predecrement
parameter_list|()
function_decl|;
name|void
name|plus_eq_data
parameter_list|()
function_decl|;
name|void
name|plus_eq
parameter_list|()
function_decl|;
name|void
name|minus_eq_data
parameter_list|()
function_decl|;
name|void
name|minus_eq
parameter_list|()
function_decl|;
name|void
name|iteratorflags_data
parameter_list|()
function_decl|;
name|void
name|iteratorflags
parameter_list|()
function_decl|;
name|void
name|updateIfModifiedFromWidget_data
parameter_list|()
function_decl|;
name|void
name|updateIfModifiedFromWidget
parameter_list|()
function_decl|;
name|void
name|constructIteratorWithItem_data
parameter_list|()
function_decl|;
name|void
name|constructIteratorWithItem
parameter_list|()
function_decl|;
name|void
name|updateIteratorAfterDeletedItem_and_ContinueIteration_data
parameter_list|()
function_decl|;
name|void
name|updateIteratorAfterDeletedItem_and_ContinueIteration
parameter_list|()
function_decl|;
name|void
name|initializeIterator
parameter_list|()
function_decl|;
name|void
name|sortingEnabled
parameter_list|()
function_decl|;
private|private:
DECL|member|testWidget
name|QTreeWidget
modifier|*
name|testWidget
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QTreeWidgetItemIterator
name|tst_QTreeWidgetItemIterator
operator|::
name|tst_QTreeWidgetItemIterator
parameter_list|()
member_init_list|:
name|testWidget
argument_list|(
literal|0
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QTreeWidgetItemIterator
name|tst_QTreeWidgetItemIterator
operator|::
name|~
name|tst_QTreeWidgetItemIterator
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|initTestCase
parameter_list|()
block|{
name|testWidget
operator|=
operator|new
name|QTreeWidget
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|clear
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
comment|/**      * These are default:      *      *           Qt::ItemIsSelectable      *          |Qt::ItemIsUserCheckable      *          |Qt::ItemIsEnabled      *          |Qt::ItemIsDragEnabled      *          |Qt::ItemIsDropEnabled      *      */
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
literal|16
condition|;
operator|++
name|i
control|)
block|{
name|QTreeWidgetItem
modifier|*
name|top
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|topS
init|=
name|QLatin1String
argument_list|(
literal|"top"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|top
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
name|topS
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|i
condition|)
block|{
case|case
literal|0
case|:
name|testWidget
operator|->
name|setItemHidden
argument_list|(
name|top
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|testWidget
operator|->
name|setItemHidden
argument_list|(
name|top
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|testWidget
operator|->
name|setItemSelected
argument_list|(
name|top
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|testWidget
operator|->
name|setItemSelected
argument_list|(
name|top
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsSelectable
argument_list|)
expr_stmt|;
break|break;
case|case
literal|5
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|6
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsDragEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|7
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|8
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsDropEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|9
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|10
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|11
case|:
name|top
operator|->
name|setFlags
argument_list|(
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
literal|12
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsEditable
argument_list|)
expr_stmt|;
break|break;
case|case
literal|13
case|:
name|top
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|14
case|:
name|top
operator|->
name|setCheckState
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Checked
argument_list|)
expr_stmt|;
break|break;
case|case
literal|15
case|:
name|top
operator|->
name|setCheckState
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Unchecked
argument_list|)
expr_stmt|;
break|break;
case|case
literal|16
case|:
name|top
operator|->
name|setCheckState
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|PartiallyChecked
argument_list|)
expr_stmt|;
break|break;
block|}
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<=
literal|16
condition|;
operator|++
name|j
control|)
block|{
name|QTreeWidgetItem
modifier|*
name|child
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|top
argument_list|)
decl_stmt|;
name|child
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
name|topS
operator|+
name|QLatin1String
argument_list|(
literal|",child"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|j
condition|)
block|{
case|case
literal|0
case|:
name|testWidget
operator|->
name|setItemHidden
argument_list|(
name|child
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|testWidget
operator|->
name|setItemHidden
argument_list|(
name|child
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|testWidget
operator|->
name|setItemSelected
argument_list|(
name|child
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|testWidget
operator|->
name|setItemSelected
argument_list|(
name|child
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsSelectable
argument_list|)
expr_stmt|;
break|break;
case|case
literal|5
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|6
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsDragEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|7
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|8
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsDropEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|9
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|10
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|11
case|:
name|child
operator|->
name|setFlags
argument_list|(
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
literal|12
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
operator||
name|Qt
operator|::
name|ItemIsEditable
argument_list|)
expr_stmt|;
break|break;
case|case
literal|13
case|:
name|child
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
break|break;
case|case
literal|14
case|:
name|child
operator|->
name|setCheckState
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Checked
argument_list|)
expr_stmt|;
break|break;
case|case
literal|15
case|:
name|child
operator|->
name|setCheckState
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Unchecked
argument_list|)
expr_stmt|;
break|break;
case|case
literal|16
case|:
name|child
operator|->
name|setCheckState
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|PartiallyChecked
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
operator|delete
name|testWidget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|iteratorflags_data
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|iteratorflags_data
parameter_list|()
block|{
comment|/*   // Should preferably test for all these flags (and combinations).....          All           = 0x00000000,         Hidden        = 0x00000001,         NotHidden     = 0x00000002,         Selected      = 0x00000004,         Unselected    = 0x00000008,         Selectable    = 0x00000010,         NotSelectable = 0x00000020,         DragEnabled   = 0x00000040,         DragDisabled  = 0x00000080,         DropEnabled   = 0x00000100,         DropDisabled  = 0x00000200,         HasChildren   = 0x00000400,         NoChildren    = 0x00000800,         Checked       = 0x00001000,         NotChecked    = 0x00002000,         Enabled       = 0x00004000,         Disabled      = 0x00008000,         Editable      = 0x00010000,         NotEditable   = 0x00020000 */
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"start"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"iteratorflags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"matches"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match all"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0"
operator|<<
literal|"top0,child0"
operator|<<
literal|"top0,child1"
operator|<<
literal|"top0,child2"
operator|<<
literal|"top0,child3"
operator|<<
literal|"top0,child4"
operator|<<
literal|"top0,child5"
operator|<<
literal|"top0,child6"
operator|<<
literal|"top0,child7"
operator|<<
literal|"top0,child8"
operator|<<
literal|"top0,child9"
operator|<<
literal|"top0,child10"
operator|<<
literal|"top0,child11"
operator|<<
literal|"top0,child12"
operator|<<
literal|"top0,child13"
operator|<<
literal|"top0,child14"
operator|<<
literal|"top0,child15"
operator|<<
literal|"top0,child16"
operator|<<
literal|"top1"
operator|<<
literal|"top1,child0"
operator|<<
literal|"top1,child1"
operator|<<
literal|"top1,child2"
operator|<<
literal|"top1,child3"
operator|<<
literal|"top1,child4"
operator|<<
literal|"top1,child5"
operator|<<
literal|"top1,child6"
operator|<<
literal|"top1,child7"
operator|<<
literal|"top1,child8"
operator|<<
literal|"top1,child9"
operator|<<
literal|"top1,child10"
operator|<<
literal|"top1,child11"
operator|<<
literal|"top1,child12"
operator|<<
literal|"top1,child13"
operator|<<
literal|"top1,child14"
operator|<<
literal|"top1,child15"
operator|<<
literal|"top1,child16"
operator|<<
literal|"top2"
operator|<<
literal|"top2,child0"
operator|<<
literal|"top2,child1"
operator|<<
literal|"top2,child2"
operator|<<
literal|"top2,child3"
operator|<<
literal|"top2,child4"
operator|<<
literal|"top2,child5"
operator|<<
literal|"top2,child6"
operator|<<
literal|"top2,child7"
operator|<<
literal|"top2,child8"
operator|<<
literal|"top2,child9"
operator|<<
literal|"top2,child10"
operator|<<
literal|"top2,child11"
operator|<<
literal|"top2,child12"
operator|<<
literal|"top2,child13"
operator|<<
literal|"top2,child14"
operator|<<
literal|"top2,child15"
operator|<<
literal|"top2,child16"
operator|<<
literal|"top3"
operator|<<
literal|"top3,child0"
operator|<<
literal|"top3,child1"
operator|<<
literal|"top3,child2"
operator|<<
literal|"top3,child3"
operator|<<
literal|"top3,child4"
operator|<<
literal|"top3,child5"
operator|<<
literal|"top3,child6"
operator|<<
literal|"top3,child7"
operator|<<
literal|"top3,child8"
operator|<<
literal|"top3,child9"
operator|<<
literal|"top3,child10"
operator|<<
literal|"top3,child11"
operator|<<
literal|"top3,child12"
operator|<<
literal|"top3,child13"
operator|<<
literal|"top3,child14"
operator|<<
literal|"top3,child15"
operator|<<
literal|"top3,child16"
operator|<<
literal|"top4"
operator|<<
literal|"top4,child0"
operator|<<
literal|"top4,child1"
operator|<<
literal|"top4,child2"
operator|<<
literal|"top4,child3"
operator|<<
literal|"top4,child4"
operator|<<
literal|"top4,child5"
operator|<<
literal|"top4,child6"
operator|<<
literal|"top4,child7"
operator|<<
literal|"top4,child8"
operator|<<
literal|"top4,child9"
operator|<<
literal|"top4,child10"
operator|<<
literal|"top4,child11"
operator|<<
literal|"top4,child12"
operator|<<
literal|"top4,child13"
operator|<<
literal|"top4,child14"
operator|<<
literal|"top4,child15"
operator|<<
literal|"top4,child16"
operator|<<
literal|"top5"
operator|<<
literal|"top5,child0"
operator|<<
literal|"top5,child1"
operator|<<
literal|"top5,child2"
operator|<<
literal|"top5,child3"
operator|<<
literal|"top5,child4"
operator|<<
literal|"top5,child5"
operator|<<
literal|"top5,child6"
operator|<<
literal|"top5,child7"
operator|<<
literal|"top5,child8"
operator|<<
literal|"top5,child9"
operator|<<
literal|"top5,child10"
operator|<<
literal|"top5,child11"
operator|<<
literal|"top5,child12"
operator|<<
literal|"top5,child13"
operator|<<
literal|"top5,child14"
operator|<<
literal|"top5,child15"
operator|<<
literal|"top5,child16"
operator|<<
literal|"top6"
operator|<<
literal|"top6,child0"
operator|<<
literal|"top6,child1"
operator|<<
literal|"top6,child2"
operator|<<
literal|"top6,child3"
operator|<<
literal|"top6,child4"
operator|<<
literal|"top6,child5"
operator|<<
literal|"top6,child6"
operator|<<
literal|"top6,child7"
operator|<<
literal|"top6,child8"
operator|<<
literal|"top6,child9"
operator|<<
literal|"top6,child10"
operator|<<
literal|"top6,child11"
operator|<<
literal|"top6,child12"
operator|<<
literal|"top6,child13"
operator|<<
literal|"top6,child14"
operator|<<
literal|"top6,child15"
operator|<<
literal|"top6,child16"
operator|<<
literal|"top7"
operator|<<
literal|"top7,child0"
operator|<<
literal|"top7,child1"
operator|<<
literal|"top7,child2"
operator|<<
literal|"top7,child3"
operator|<<
literal|"top7,child4"
operator|<<
literal|"top7,child5"
operator|<<
literal|"top7,child6"
operator|<<
literal|"top7,child7"
operator|<<
literal|"top7,child8"
operator|<<
literal|"top7,child9"
operator|<<
literal|"top7,child10"
operator|<<
literal|"top7,child11"
operator|<<
literal|"top7,child12"
operator|<<
literal|"top7,child13"
operator|<<
literal|"top7,child14"
operator|<<
literal|"top7,child15"
operator|<<
literal|"top7,child16"
operator|<<
literal|"top8"
operator|<<
literal|"top8,child0"
operator|<<
literal|"top8,child1"
operator|<<
literal|"top8,child2"
operator|<<
literal|"top8,child3"
operator|<<
literal|"top8,child4"
operator|<<
literal|"top8,child5"
operator|<<
literal|"top8,child6"
operator|<<
literal|"top8,child7"
operator|<<
literal|"top8,child8"
operator|<<
literal|"top8,child9"
operator|<<
literal|"top8,child10"
operator|<<
literal|"top8,child11"
operator|<<
literal|"top8,child12"
operator|<<
literal|"top8,child13"
operator|<<
literal|"top8,child14"
operator|<<
literal|"top8,child15"
operator|<<
literal|"top8,child16"
operator|<<
literal|"top9"
operator|<<
literal|"top9,child0"
operator|<<
literal|"top9,child1"
operator|<<
literal|"top9,child2"
operator|<<
literal|"top9,child3"
operator|<<
literal|"top9,child4"
operator|<<
literal|"top9,child5"
operator|<<
literal|"top9,child6"
operator|<<
literal|"top9,child7"
operator|<<
literal|"top9,child8"
operator|<<
literal|"top9,child9"
operator|<<
literal|"top9,child10"
operator|<<
literal|"top9,child11"
operator|<<
literal|"top9,child12"
operator|<<
literal|"top9,child13"
operator|<<
literal|"top9,child14"
operator|<<
literal|"top9,child15"
operator|<<
literal|"top9,child16"
operator|<<
literal|"top10"
operator|<<
literal|"top10,child0"
operator|<<
literal|"top10,child1"
operator|<<
literal|"top10,child2"
operator|<<
literal|"top10,child3"
operator|<<
literal|"top10,child4"
operator|<<
literal|"top10,child5"
operator|<<
literal|"top10,child6"
operator|<<
literal|"top10,child7"
operator|<<
literal|"top10,child8"
operator|<<
literal|"top10,child9"
operator|<<
literal|"top10,child10"
operator|<<
literal|"top10,child11"
operator|<<
literal|"top10,child12"
operator|<<
literal|"top10,child13"
operator|<<
literal|"top10,child14"
operator|<<
literal|"top10,child15"
operator|<<
literal|"top10,child16"
operator|<<
literal|"top11"
operator|<<
literal|"top11,child0"
operator|<<
literal|"top11,child1"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top11,child3"
operator|<<
literal|"top11,child4"
operator|<<
literal|"top11,child5"
operator|<<
literal|"top11,child6"
operator|<<
literal|"top11,child7"
operator|<<
literal|"top11,child8"
operator|<<
literal|"top11,child9"
operator|<<
literal|"top11,child10"
operator|<<
literal|"top11,child11"
operator|<<
literal|"top11,child12"
operator|<<
literal|"top11,child13"
operator|<<
literal|"top11,child14"
operator|<<
literal|"top11,child15"
operator|<<
literal|"top11,child16"
operator|<<
literal|"top12"
operator|<<
literal|"top12,child0"
operator|<<
literal|"top12,child1"
operator|<<
literal|"top12,child2"
operator|<<
literal|"top12,child3"
operator|<<
literal|"top12,child4"
operator|<<
literal|"top12,child5"
operator|<<
literal|"top12,child6"
operator|<<
literal|"top12,child7"
operator|<<
literal|"top12,child8"
operator|<<
literal|"top12,child9"
operator|<<
literal|"top12,child10"
operator|<<
literal|"top12,child11"
operator|<<
literal|"top12,child12"
operator|<<
literal|"top12,child13"
operator|<<
literal|"top12,child14"
operator|<<
literal|"top12,child15"
operator|<<
literal|"top12,child16"
operator|<<
literal|"top13"
operator|<<
literal|"top13,child0"
operator|<<
literal|"top13,child1"
operator|<<
literal|"top13,child2"
operator|<<
literal|"top13,child3"
operator|<<
literal|"top13,child4"
operator|<<
literal|"top13,child5"
operator|<<
literal|"top13,child6"
operator|<<
literal|"top13,child7"
operator|<<
literal|"top13,child8"
operator|<<
literal|"top13,child9"
operator|<<
literal|"top13,child10"
operator|<<
literal|"top13,child11"
operator|<<
literal|"top13,child12"
operator|<<
literal|"top13,child13"
operator|<<
literal|"top13,child14"
operator|<<
literal|"top13,child15"
operator|<<
literal|"top13,child16"
operator|<<
literal|"top14"
operator|<<
literal|"top14,child0"
operator|<<
literal|"top14,child1"
operator|<<
literal|"top14,child2"
operator|<<
literal|"top14,child3"
operator|<<
literal|"top14,child4"
operator|<<
literal|"top14,child5"
operator|<<
literal|"top14,child6"
operator|<<
literal|"top14,child7"
operator|<<
literal|"top14,child8"
operator|<<
literal|"top14,child9"
operator|<<
literal|"top14,child10"
operator|<<
literal|"top14,child11"
operator|<<
literal|"top14,child12"
operator|<<
literal|"top14,child13"
operator|<<
literal|"top14,child14"
operator|<<
literal|"top14,child15"
operator|<<
literal|"top14,child16"
operator|<<
literal|"top15"
operator|<<
literal|"top15,child0"
operator|<<
literal|"top15,child1"
operator|<<
literal|"top15,child2"
operator|<<
literal|"top15,child3"
operator|<<
literal|"top15,child4"
operator|<<
literal|"top15,child5"
operator|<<
literal|"top15,child6"
operator|<<
literal|"top15,child7"
operator|<<
literal|"top15,child8"
operator|<<
literal|"top15,child9"
operator|<<
literal|"top15,child10"
operator|<<
literal|"top15,child11"
operator|<<
literal|"top15,child12"
operator|<<
literal|"top15,child13"
operator|<<
literal|"top15,child14"
operator|<<
literal|"top15,child15"
operator|<<
literal|"top15,child16"
operator|<<
literal|"top16"
operator|<<
literal|"top16,child0"
operator|<<
literal|"top16,child1"
operator|<<
literal|"top16,child2"
operator|<<
literal|"top16,child3"
operator|<<
literal|"top16,child4"
operator|<<
literal|"top16,child5"
operator|<<
literal|"top16,child6"
operator|<<
literal|"top16,child7"
operator|<<
literal|"top16,child8"
operator|<<
literal|"top16,child9"
operator|<<
literal|"top16,child10"
operator|<<
literal|"top16,child11"
operator|<<
literal|"top16,child12"
operator|<<
literal|"top16,child13"
operator|<<
literal|"top16,child14"
operator|<<
literal|"top16,child15"
operator|<<
literal|"top16,child16"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match hidden"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|Hidden
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0"
operator|<<
literal|"top0,child0"
comment|// fails due to hidden row
operator|<<
literal|"top1,child0"
operator|<<
literal|"top2,child0"
operator|<<
literal|"top3,child0"
operator|<<
literal|"top4,child0"
operator|<<
literal|"top5,child0"
operator|<<
literal|"top6,child0"
operator|<<
literal|"top7,child0"
operator|<<
literal|"top8,child0"
operator|<<
literal|"top9,child0"
operator|<<
literal|"top10,child0"
operator|<<
literal|"top11,child0"
operator|<<
literal|"top12,child0"
operator|<<
literal|"top13,child0"
operator|<<
literal|"top14,child0"
operator|<<
literal|"top15,child0"
operator|<<
literal|"top16,child0"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match not hidden"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|NotHidden
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0,child1"
operator|<<
literal|"top0,child2"
operator|<<
literal|"top0,child3"
operator|<<
literal|"top0,child4"
operator|<<
literal|"top0,child5"
operator|<<
literal|"top0,child6"
operator|<<
literal|"top0,child7"
operator|<<
literal|"top0,child8"
operator|<<
literal|"top0,child9"
operator|<<
literal|"top0,child10"
operator|<<
literal|"top0,child11"
operator|<<
literal|"top0,child12"
operator|<<
literal|"top0,child13"
operator|<<
literal|"top0,child14"
operator|<<
literal|"top0,child15"
operator|<<
literal|"top0,child16"
operator|<<
literal|"top1"
operator|<<
literal|"top1,child1"
operator|<<
literal|"top1,child2"
operator|<<
literal|"top1,child3"
operator|<<
literal|"top1,child4"
operator|<<
literal|"top1,child5"
operator|<<
literal|"top1,child6"
operator|<<
literal|"top1,child7"
operator|<<
literal|"top1,child8"
operator|<<
literal|"top1,child9"
operator|<<
literal|"top1,child10"
operator|<<
literal|"top1,child11"
operator|<<
literal|"top1,child12"
operator|<<
literal|"top1,child13"
operator|<<
literal|"top1,child14"
operator|<<
literal|"top1,child15"
operator|<<
literal|"top1,child16"
operator|<<
literal|"top2"
operator|<<
literal|"top2,child1"
operator|<<
literal|"top2,child2"
operator|<<
literal|"top2,child3"
operator|<<
literal|"top2,child4"
operator|<<
literal|"top2,child5"
operator|<<
literal|"top2,child6"
operator|<<
literal|"top2,child7"
operator|<<
literal|"top2,child8"
operator|<<
literal|"top2,child9"
operator|<<
literal|"top2,child10"
operator|<<
literal|"top2,child11"
operator|<<
literal|"top2,child12"
operator|<<
literal|"top2,child13"
operator|<<
literal|"top2,child14"
operator|<<
literal|"top2,child15"
operator|<<
literal|"top2,child16"
operator|<<
literal|"top3"
operator|<<
literal|"top3,child1"
operator|<<
literal|"top3,child2"
operator|<<
literal|"top3,child3"
operator|<<
literal|"top3,child4"
operator|<<
literal|"top3,child5"
operator|<<
literal|"top3,child6"
operator|<<
literal|"top3,child7"
operator|<<
literal|"top3,child8"
operator|<<
literal|"top3,child9"
operator|<<
literal|"top3,child10"
operator|<<
literal|"top3,child11"
operator|<<
literal|"top3,child12"
operator|<<
literal|"top3,child13"
operator|<<
literal|"top3,child14"
operator|<<
literal|"top3,child15"
operator|<<
literal|"top3,child16"
operator|<<
literal|"top4"
operator|<<
literal|"top4,child1"
operator|<<
literal|"top4,child2"
operator|<<
literal|"top4,child3"
operator|<<
literal|"top4,child4"
operator|<<
literal|"top4,child5"
operator|<<
literal|"top4,child6"
operator|<<
literal|"top4,child7"
operator|<<
literal|"top4,child8"
operator|<<
literal|"top4,child9"
operator|<<
literal|"top4,child10"
operator|<<
literal|"top4,child11"
operator|<<
literal|"top4,child12"
operator|<<
literal|"top4,child13"
operator|<<
literal|"top4,child14"
operator|<<
literal|"top4,child15"
operator|<<
literal|"top4,child16"
operator|<<
literal|"top5"
operator|<<
literal|"top5,child1"
operator|<<
literal|"top5,child2"
operator|<<
literal|"top5,child3"
operator|<<
literal|"top5,child4"
operator|<<
literal|"top5,child5"
operator|<<
literal|"top5,child6"
operator|<<
literal|"top5,child7"
operator|<<
literal|"top5,child8"
operator|<<
literal|"top5,child9"
operator|<<
literal|"top5,child10"
operator|<<
literal|"top5,child11"
operator|<<
literal|"top5,child12"
operator|<<
literal|"top5,child13"
operator|<<
literal|"top5,child14"
operator|<<
literal|"top5,child15"
operator|<<
literal|"top5,child16"
operator|<<
literal|"top6"
operator|<<
literal|"top6,child1"
operator|<<
literal|"top6,child2"
operator|<<
literal|"top6,child3"
operator|<<
literal|"top6,child4"
operator|<<
literal|"top6,child5"
operator|<<
literal|"top6,child6"
operator|<<
literal|"top6,child7"
operator|<<
literal|"top6,child8"
operator|<<
literal|"top6,child9"
operator|<<
literal|"top6,child10"
operator|<<
literal|"top6,child11"
operator|<<
literal|"top6,child12"
operator|<<
literal|"top6,child13"
operator|<<
literal|"top6,child14"
operator|<<
literal|"top6,child15"
operator|<<
literal|"top6,child16"
operator|<<
literal|"top7"
operator|<<
literal|"top7,child1"
operator|<<
literal|"top7,child2"
operator|<<
literal|"top7,child3"
operator|<<
literal|"top7,child4"
operator|<<
literal|"top7,child5"
operator|<<
literal|"top7,child6"
operator|<<
literal|"top7,child7"
operator|<<
literal|"top7,child8"
operator|<<
literal|"top7,child9"
operator|<<
literal|"top7,child10"
operator|<<
literal|"top7,child11"
operator|<<
literal|"top7,child12"
operator|<<
literal|"top7,child13"
operator|<<
literal|"top7,child14"
operator|<<
literal|"top7,child15"
operator|<<
literal|"top7,child16"
operator|<<
literal|"top8"
operator|<<
literal|"top8,child1"
operator|<<
literal|"top8,child2"
operator|<<
literal|"top8,child3"
operator|<<
literal|"top8,child4"
operator|<<
literal|"top8,child5"
operator|<<
literal|"top8,child6"
operator|<<
literal|"top8,child7"
operator|<<
literal|"top8,child8"
operator|<<
literal|"top8,child9"
operator|<<
literal|"top8,child10"
operator|<<
literal|"top8,child11"
operator|<<
literal|"top8,child12"
operator|<<
literal|"top8,child13"
operator|<<
literal|"top8,child14"
operator|<<
literal|"top8,child15"
operator|<<
literal|"top8,child16"
operator|<<
literal|"top9"
operator|<<
literal|"top9,child1"
operator|<<
literal|"top9,child2"
operator|<<
literal|"top9,child3"
operator|<<
literal|"top9,child4"
operator|<<
literal|"top9,child5"
operator|<<
literal|"top9,child6"
operator|<<
literal|"top9,child7"
operator|<<
literal|"top9,child8"
operator|<<
literal|"top9,child9"
operator|<<
literal|"top9,child10"
operator|<<
literal|"top9,child11"
operator|<<
literal|"top9,child12"
operator|<<
literal|"top9,child13"
operator|<<
literal|"top9,child14"
operator|<<
literal|"top9,child15"
operator|<<
literal|"top9,child16"
operator|<<
literal|"top10"
operator|<<
literal|"top10,child1"
operator|<<
literal|"top10,child2"
operator|<<
literal|"top10,child3"
operator|<<
literal|"top10,child4"
operator|<<
literal|"top10,child5"
operator|<<
literal|"top10,child6"
operator|<<
literal|"top10,child7"
operator|<<
literal|"top10,child8"
operator|<<
literal|"top10,child9"
operator|<<
literal|"top10,child10"
operator|<<
literal|"top10,child11"
operator|<<
literal|"top10,child12"
operator|<<
literal|"top10,child13"
operator|<<
literal|"top10,child14"
operator|<<
literal|"top10,child15"
operator|<<
literal|"top10,child16"
operator|<<
literal|"top11"
operator|<<
literal|"top11,child1"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top11,child3"
operator|<<
literal|"top11,child4"
operator|<<
literal|"top11,child5"
operator|<<
literal|"top11,child6"
operator|<<
literal|"top11,child7"
operator|<<
literal|"top11,child8"
operator|<<
literal|"top11,child9"
operator|<<
literal|"top11,child10"
operator|<<
literal|"top11,child11"
operator|<<
literal|"top11,child12"
operator|<<
literal|"top11,child13"
operator|<<
literal|"top11,child14"
operator|<<
literal|"top11,child15"
operator|<<
literal|"top11,child16"
operator|<<
literal|"top12"
operator|<<
literal|"top12,child1"
operator|<<
literal|"top12,child2"
operator|<<
literal|"top12,child3"
operator|<<
literal|"top12,child4"
operator|<<
literal|"top12,child5"
operator|<<
literal|"top12,child6"
operator|<<
literal|"top12,child7"
operator|<<
literal|"top12,child8"
operator|<<
literal|"top12,child9"
operator|<<
literal|"top12,child10"
operator|<<
literal|"top12,child11"
operator|<<
literal|"top12,child12"
operator|<<
literal|"top12,child13"
operator|<<
literal|"top12,child14"
operator|<<
literal|"top12,child15"
operator|<<
literal|"top12,child16"
operator|<<
literal|"top13"
operator|<<
literal|"top13,child1"
operator|<<
literal|"top13,child2"
operator|<<
literal|"top13,child3"
operator|<<
literal|"top13,child4"
operator|<<
literal|"top13,child5"
operator|<<
literal|"top13,child6"
operator|<<
literal|"top13,child7"
operator|<<
literal|"top13,child8"
operator|<<
literal|"top13,child9"
operator|<<
literal|"top13,child10"
operator|<<
literal|"top13,child11"
operator|<<
literal|"top13,child12"
operator|<<
literal|"top13,child13"
operator|<<
literal|"top13,child14"
operator|<<
literal|"top13,child15"
operator|<<
literal|"top13,child16"
operator|<<
literal|"top14"
operator|<<
literal|"top14,child1"
operator|<<
literal|"top14,child2"
operator|<<
literal|"top14,child3"
operator|<<
literal|"top14,child4"
operator|<<
literal|"top14,child5"
operator|<<
literal|"top14,child6"
operator|<<
literal|"top14,child7"
operator|<<
literal|"top14,child8"
operator|<<
literal|"top14,child9"
operator|<<
literal|"top14,child10"
operator|<<
literal|"top14,child11"
operator|<<
literal|"top14,child12"
operator|<<
literal|"top14,child13"
operator|<<
literal|"top14,child14"
operator|<<
literal|"top14,child15"
operator|<<
literal|"top14,child16"
operator|<<
literal|"top15"
operator|<<
literal|"top15,child1"
operator|<<
literal|"top15,child2"
operator|<<
literal|"top15,child3"
operator|<<
literal|"top15,child4"
operator|<<
literal|"top15,child5"
operator|<<
literal|"top15,child6"
operator|<<
literal|"top15,child7"
operator|<<
literal|"top15,child8"
operator|<<
literal|"top15,child9"
operator|<<
literal|"top15,child10"
operator|<<
literal|"top15,child11"
operator|<<
literal|"top15,child12"
operator|<<
literal|"top15,child13"
operator|<<
literal|"top15,child14"
operator|<<
literal|"top15,child15"
operator|<<
literal|"top15,child16"
operator|<<
literal|"top16"
operator|<<
literal|"top16,child1"
operator|<<
literal|"top16,child2"
operator|<<
literal|"top16,child3"
operator|<<
literal|"top16,child4"
operator|<<
literal|"top16,child5"
operator|<<
literal|"top16,child6"
operator|<<
literal|"top16,child7"
operator|<<
literal|"top16,child8"
operator|<<
literal|"top16,child9"
operator|<<
literal|"top16,child10"
operator|<<
literal|"top16,child11"
operator|<<
literal|"top16,child12"
operator|<<
literal|"top16,child13"
operator|<<
literal|"top16,child14"
operator|<<
literal|"top16,child15"
operator|<<
literal|"top16,child16"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match selected"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|Selected
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0,child2"
operator|<<
literal|"top1,child2"
operator|<<
literal|"top2"
operator|<<
literal|"top2,child2"
operator|<<
literal|"top3,child2"
operator|<<
literal|"top4,child2"
operator|<<
literal|"top5,child2"
operator|<<
literal|"top6,child2"
operator|<<
literal|"top7,child2"
operator|<<
literal|"top8,child2"
operator|<<
literal|"top9,child2"
operator|<<
literal|"top10,child2"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top12,child2"
operator|<<
literal|"top13,child2"
operator|<<
literal|"top14,child2"
operator|<<
literal|"top15,child2"
operator|<<
literal|"top16,child2"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match selectable"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|Selectable
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0"
operator|<<
literal|"top0,child0"
operator|<<
literal|"top0,child1"
operator|<<
literal|"top0,child2"
operator|<<
literal|"top0,child3"
operator|<<
literal|"top0,child4"
operator|<<
literal|"top0,child14"
operator|<<
literal|"top0,child15"
operator|<<
literal|"top0,child16"
operator|<<
literal|"top1"
operator|<<
literal|"top1,child0"
operator|<<
literal|"top1,child1"
operator|<<
literal|"top1,child2"
operator|<<
literal|"top1,child3"
operator|<<
literal|"top1,child4"
operator|<<
literal|"top1,child14"
operator|<<
literal|"top1,child15"
operator|<<
literal|"top1,child16"
operator|<<
literal|"top2"
operator|<<
literal|"top2,child0"
operator|<<
literal|"top2,child1"
operator|<<
literal|"top2,child2"
operator|<<
literal|"top2,child3"
operator|<<
literal|"top2,child4"
operator|<<
literal|"top2,child14"
operator|<<
literal|"top2,child15"
operator|<<
literal|"top2,child16"
operator|<<
literal|"top3"
operator|<<
literal|"top3,child0"
operator|<<
literal|"top3,child1"
operator|<<
literal|"top3,child2"
operator|<<
literal|"top3,child3"
operator|<<
literal|"top3,child4"
operator|<<
literal|"top3,child14"
operator|<<
literal|"top3,child15"
operator|<<
literal|"top3,child16"
operator|<<
literal|"top4"
operator|<<
literal|"top4,child0"
operator|<<
literal|"top4,child1"
operator|<<
literal|"top4,child2"
operator|<<
literal|"top4,child3"
operator|<<
literal|"top4,child4"
operator|<<
literal|"top4,child14"
operator|<<
literal|"top4,child15"
operator|<<
literal|"top4,child16"
comment|/* "top5"*/
operator|<<
literal|"top5,child0"
operator|<<
literal|"top5,child1"
operator|<<
literal|"top5,child2"
operator|<<
literal|"top5,child3"
operator|<<
literal|"top5,child4"
operator|<<
literal|"top5,child14"
operator|<<
literal|"top5,child15"
operator|<<
literal|"top5,child16"
comment|/* "top6"*/
operator|<<
literal|"top6,child0"
operator|<<
literal|"top6,child1"
operator|<<
literal|"top6,child2"
operator|<<
literal|"top6,child3"
operator|<<
literal|"top6,child4"
operator|<<
literal|"top6,child14"
operator|<<
literal|"top6,child15"
operator|<<
literal|"top6,child16"
comment|/* "top7"*/
operator|<<
literal|"top7,child0"
operator|<<
literal|"top7,child1"
operator|<<
literal|"top7,child2"
operator|<<
literal|"top7,child3"
operator|<<
literal|"top7,child4"
operator|<<
literal|"top7,child14"
operator|<<
literal|"top7,child15"
operator|<<
literal|"top7,child16"
comment|/* "top8"*/
operator|<<
literal|"top8,child0"
operator|<<
literal|"top8,child1"
operator|<<
literal|"top8,child2"
operator|<<
literal|"top8,child3"
operator|<<
literal|"top8,child4"
operator|<<
literal|"top8,child14"
operator|<<
literal|"top8,child15"
operator|<<
literal|"top8,child16"
comment|/* "top9"*/
operator|<<
literal|"top9,child0"
operator|<<
literal|"top9,child1"
operator|<<
literal|"top9,child2"
operator|<<
literal|"top9,child3"
operator|<<
literal|"top9,child4"
operator|<<
literal|"top9,child14"
operator|<<
literal|"top9,child15"
operator|<<
literal|"top9,child16"
comment|/* "top10*/
operator|<<
literal|"top10,child0"
operator|<<
literal|"top10,child1"
operator|<<
literal|"top10,child2"
operator|<<
literal|"top10,child3"
operator|<<
literal|"top10,child4"
operator|<<
literal|"top10,child14"
operator|<<
literal|"top10,child15"
operator|<<
literal|"top10,child16"
comment|/* "top11*/
operator|<<
literal|"top11,child0"
operator|<<
literal|"top11,child1"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top11,child3"
operator|<<
literal|"top11,child4"
operator|<<
literal|"top11,child14"
operator|<<
literal|"top11,child15"
operator|<<
literal|"top11,child16"
comment|/* "top12*/
operator|<<
literal|"top12,child0"
operator|<<
literal|"top12,child1"
operator|<<
literal|"top12,child2"
operator|<<
literal|"top12,child3"
operator|<<
literal|"top12,child4"
operator|<<
literal|"top12,child14"
operator|<<
literal|"top12,child15"
operator|<<
literal|"top12,child16"
comment|/* "top13*/
operator|<<
literal|"top13,child0"
operator|<<
literal|"top13,child1"
operator|<<
literal|"top13,child2"
operator|<<
literal|"top13,child3"
operator|<<
literal|"top13,child4"
operator|<<
literal|"top13,child14"
operator|<<
literal|"top13,child15"
operator|<<
literal|"top13,child16"
operator|<<
literal|"top14"
operator|<<
literal|"top14,child0"
operator|<<
literal|"top14,child1"
operator|<<
literal|"top14,child2"
operator|<<
literal|"top14,child3"
operator|<<
literal|"top14,child4"
operator|<<
literal|"top14,child14"
operator|<<
literal|"top14,child15"
operator|<<
literal|"top14,child16"
operator|<<
literal|"top15"
operator|<<
literal|"top15,child0"
operator|<<
literal|"top15,child1"
operator|<<
literal|"top15,child2"
operator|<<
literal|"top15,child3"
operator|<<
literal|"top15,child4"
operator|<<
literal|"top15,child14"
operator|<<
literal|"top15,child15"
operator|<<
literal|"top15,child16"
operator|<<
literal|"top16"
operator|<<
literal|"top16,child0"
operator|<<
literal|"top16,child1"
operator|<<
literal|"top16,child2"
operator|<<
literal|"top16,child3"
operator|<<
literal|"top16,child4"
operator|<<
literal|"top16,child14"
operator|<<
literal|"top16,child15"
operator|<<
literal|"top16,child16"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match DragEnabled"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|DragEnabled
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0"
operator|<<
literal|"top0,child0"
operator|<<
literal|"top0,child1"
operator|<<
literal|"top0,child2"
operator|<<
literal|"top0,child3"
operator|<<
literal|"top0,child6"
operator|<<
literal|"top0,child14"
operator|<<
literal|"top0,child15"
operator|<<
literal|"top0,child16"
operator|<<
literal|"top1"
operator|<<
literal|"top1,child0"
operator|<<
literal|"top1,child1"
operator|<<
literal|"top1,child2"
operator|<<
literal|"top1,child3"
operator|<<
literal|"top1,child6"
operator|<<
literal|"top1,child14"
operator|<<
literal|"top1,child15"
operator|<<
literal|"top1,child16"
operator|<<
literal|"top2"
operator|<<
literal|"top2,child0"
operator|<<
literal|"top2,child1"
operator|<<
literal|"top2,child2"
operator|<<
literal|"top2,child3"
operator|<<
literal|"top2,child6"
operator|<<
literal|"top2,child14"
operator|<<
literal|"top2,child15"
operator|<<
literal|"top2,child16"
operator|<<
literal|"top3"
operator|<<
literal|"top3,child0"
operator|<<
literal|"top3,child1"
operator|<<
literal|"top3,child2"
operator|<<
literal|"top3,child3"
operator|<<
literal|"top3,child6"
operator|<<
literal|"top3,child14"
operator|<<
literal|"top3,child15"
operator|<<
literal|"top3,child16"
comment|/* "top4"*/
operator|<<
literal|"top4,child0"
operator|<<
literal|"top4,child1"
operator|<<
literal|"top4,child2"
operator|<<
literal|"top4,child3"
operator|<<
literal|"top4,child6"
operator|<<
literal|"top4,child14"
operator|<<
literal|"top4,child15"
operator|<<
literal|"top4,child16"
comment|/* "top5"*/
operator|<<
literal|"top5,child0"
operator|<<
literal|"top5,child1"
operator|<<
literal|"top5,child2"
operator|<<
literal|"top5,child3"
operator|<<
literal|"top5,child6"
operator|<<
literal|"top5,child14"
operator|<<
literal|"top5,child15"
operator|<<
literal|"top5,child16"
operator|<<
literal|"top6"
operator|<<
literal|"top6,child0"
operator|<<
literal|"top6,child1"
operator|<<
literal|"top6,child2"
operator|<<
literal|"top6,child3"
operator|<<
literal|"top6,child6"
operator|<<
literal|"top6,child14"
operator|<<
literal|"top6,child15"
operator|<<
literal|"top6,child16"
comment|/* "top7"*/
operator|<<
literal|"top7,child0"
operator|<<
literal|"top7,child1"
operator|<<
literal|"top7,child2"
operator|<<
literal|"top7,child3"
operator|<<
literal|"top7,child6"
operator|<<
literal|"top7,child14"
operator|<<
literal|"top7,child15"
operator|<<
literal|"top7,child16"
comment|/* "top8"*/
operator|<<
literal|"top8,child0"
operator|<<
literal|"top8,child1"
operator|<<
literal|"top8,child2"
operator|<<
literal|"top8,child3"
operator|<<
literal|"top8,child6"
operator|<<
literal|"top8,child14"
operator|<<
literal|"top8,child15"
operator|<<
literal|"top8,child16"
comment|/* "top9"*/
operator|<<
literal|"top9,child0"
operator|<<
literal|"top9,child1"
operator|<<
literal|"top9,child2"
operator|<<
literal|"top9,child3"
operator|<<
literal|"top9,child6"
operator|<<
literal|"top9,child14"
operator|<<
literal|"top9,child15"
operator|<<
literal|"top9,child16"
comment|/* "top10*/
operator|<<
literal|"top10,child0"
operator|<<
literal|"top10,child1"
operator|<<
literal|"top10,child2"
operator|<<
literal|"top10,child3"
operator|<<
literal|"top10,child6"
operator|<<
literal|"top10,child14"
operator|<<
literal|"top10,child15"
operator|<<
literal|"top10,child16"
comment|/* "top11*/
operator|<<
literal|"top11,child0"
operator|<<
literal|"top11,child1"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top11,child3"
operator|<<
literal|"top11,child6"
operator|<<
literal|"top11,child14"
operator|<<
literal|"top11,child15"
operator|<<
literal|"top11,child16"
comment|/* "top12*/
operator|<<
literal|"top12,child0"
operator|<<
literal|"top12,child1"
operator|<<
literal|"top12,child2"
operator|<<
literal|"top12,child3"
operator|<<
literal|"top12,child6"
operator|<<
literal|"top12,child14"
operator|<<
literal|"top12,child15"
operator|<<
literal|"top12,child16"
comment|/* "top13*/
operator|<<
literal|"top13,child0"
operator|<<
literal|"top13,child1"
operator|<<
literal|"top13,child2"
operator|<<
literal|"top13,child3"
operator|<<
literal|"top13,child6"
operator|<<
literal|"top13,child14"
operator|<<
literal|"top13,child15"
operator|<<
literal|"top13,child16"
operator|<<
literal|"top14"
operator|<<
literal|"top14,child0"
operator|<<
literal|"top14,child1"
operator|<<
literal|"top14,child2"
operator|<<
literal|"top14,child3"
operator|<<
literal|"top14,child6"
operator|<<
literal|"top14,child14"
operator|<<
literal|"top14,child15"
operator|<<
literal|"top14,child16"
operator|<<
literal|"top15"
operator|<<
literal|"top15,child0"
operator|<<
literal|"top15,child1"
operator|<<
literal|"top15,child2"
operator|<<
literal|"top15,child3"
operator|<<
literal|"top15,child6"
operator|<<
literal|"top15,child14"
operator|<<
literal|"top15,child15"
operator|<<
literal|"top15,child16"
operator|<<
literal|"top16"
operator|<<
literal|"top16,child0"
operator|<<
literal|"top16,child1"
operator|<<
literal|"top16,child2"
operator|<<
literal|"top16,child3"
operator|<<
literal|"top16,child6"
operator|<<
literal|"top16,child14"
operator|<<
literal|"top16,child15"
operator|<<
literal|"top16,child16"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match DragDisabled"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|DragDisabled
operator|<<
operator|(
name|QStringList
argument_list|()
comment|/* top0  */
operator|<<
literal|"top0,child4"
operator|<<
literal|"top0,child5"
operator|<<
literal|"top0,child7"
operator|<<
literal|"top0,child8"
operator|<<
literal|"top0,child9"
operator|<<
literal|"top0,child10"
operator|<<
literal|"top0,child11"
operator|<<
literal|"top0,child12"
operator|<<
literal|"top0,child13"
comment|/* top1  */
operator|<<
literal|"top1,child4"
operator|<<
literal|"top1,child5"
operator|<<
literal|"top1,child7"
operator|<<
literal|"top1,child8"
operator|<<
literal|"top1,child9"
operator|<<
literal|"top1,child10"
operator|<<
literal|"top1,child11"
operator|<<
literal|"top1,child12"
operator|<<
literal|"top1,child13"
comment|/* top2  */
operator|<<
literal|"top2,child4"
operator|<<
literal|"top2,child5"
operator|<<
literal|"top2,child7"
operator|<<
literal|"top2,child8"
operator|<<
literal|"top2,child9"
operator|<<
literal|"top2,child10"
operator|<<
literal|"top2,child11"
operator|<<
literal|"top2,child12"
operator|<<
literal|"top2,child13"
comment|/* top3  */
operator|<<
literal|"top3,child4"
operator|<<
literal|"top3,child5"
operator|<<
literal|"top3,child7"
operator|<<
literal|"top3,child8"
operator|<<
literal|"top3,child9"
operator|<<
literal|"top3,child10"
operator|<<
literal|"top3,child11"
operator|<<
literal|"top3,child12"
operator|<<
literal|"top3,child13"
operator|<<
literal|"top4"
operator|<<
literal|"top4,child4"
operator|<<
literal|"top4,child5"
operator|<<
literal|"top4,child7"
operator|<<
literal|"top4,child8"
operator|<<
literal|"top4,child9"
operator|<<
literal|"top4,child10"
operator|<<
literal|"top4,child11"
operator|<<
literal|"top4,child12"
operator|<<
literal|"top4,child13"
operator|<<
literal|"top5"
operator|<<
literal|"top5,child4"
operator|<<
literal|"top5,child5"
operator|<<
literal|"top5,child7"
operator|<<
literal|"top5,child8"
operator|<<
literal|"top5,child9"
operator|<<
literal|"top5,child10"
operator|<<
literal|"top5,child11"
operator|<<
literal|"top5,child12"
operator|<<
literal|"top5,child13"
comment|/* "top6"*/
operator|<<
literal|"top6,child4"
operator|<<
literal|"top6,child5"
operator|<<
literal|"top6,child7"
operator|<<
literal|"top6,child8"
operator|<<
literal|"top6,child9"
operator|<<
literal|"top6,child10"
operator|<<
literal|"top6,child11"
operator|<<
literal|"top6,child12"
operator|<<
literal|"top6,child13"
operator|<<
literal|"top7"
operator|<<
literal|"top7,child4"
operator|<<
literal|"top7,child5"
operator|<<
literal|"top7,child7"
operator|<<
literal|"top7,child8"
operator|<<
literal|"top7,child9"
operator|<<
literal|"top7,child10"
operator|<<
literal|"top7,child11"
operator|<<
literal|"top7,child12"
operator|<<
literal|"top7,child13"
operator|<<
literal|"top8"
operator|<<
literal|"top8,child4"
operator|<<
literal|"top8,child5"
operator|<<
literal|"top8,child7"
operator|<<
literal|"top8,child8"
operator|<<
literal|"top8,child9"
operator|<<
literal|"top8,child10"
operator|<<
literal|"top8,child11"
operator|<<
literal|"top8,child12"
operator|<<
literal|"top8,child13"
operator|<<
literal|"top9"
operator|<<
literal|"top9,child4"
operator|<<
literal|"top9,child5"
operator|<<
literal|"top9,child7"
operator|<<
literal|"top9,child8"
operator|<<
literal|"top9,child9"
operator|<<
literal|"top9,child10"
operator|<<
literal|"top9,child11"
operator|<<
literal|"top9,child12"
operator|<<
literal|"top9,child13"
operator|<<
literal|"top10"
operator|<<
literal|"top10,child4"
operator|<<
literal|"top10,child5"
operator|<<
literal|"top10,child7"
operator|<<
literal|"top10,child8"
operator|<<
literal|"top10,child9"
operator|<<
literal|"top10,child10"
operator|<<
literal|"top10,child11"
operator|<<
literal|"top10,child12"
operator|<<
literal|"top10,child13"
operator|<<
literal|"top11"
operator|<<
literal|"top11,child4"
operator|<<
literal|"top11,child5"
operator|<<
literal|"top11,child7"
operator|<<
literal|"top11,child8"
operator|<<
literal|"top11,child9"
operator|<<
literal|"top11,child10"
operator|<<
literal|"top11,child11"
operator|<<
literal|"top11,child12"
operator|<<
literal|"top11,child13"
operator|<<
literal|"top12"
operator|<<
literal|"top12,child4"
operator|<<
literal|"top12,child5"
operator|<<
literal|"top12,child7"
operator|<<
literal|"top12,child8"
operator|<<
literal|"top12,child9"
operator|<<
literal|"top12,child10"
operator|<<
literal|"top12,child11"
operator|<<
literal|"top12,child12"
operator|<<
literal|"top12,child13"
operator|<<
literal|"top13"
operator|<<
literal|"top13,child4"
operator|<<
literal|"top13,child5"
operator|<<
literal|"top13,child7"
operator|<<
literal|"top13,child8"
operator|<<
literal|"top13,child9"
operator|<<
literal|"top13,child10"
operator|<<
literal|"top13,child11"
operator|<<
literal|"top13,child12"
operator|<<
literal|"top13,child13"
comment|/* top14 */
operator|<<
literal|"top14,child4"
operator|<<
literal|"top14,child5"
operator|<<
literal|"top14,child7"
operator|<<
literal|"top14,child8"
operator|<<
literal|"top14,child9"
operator|<<
literal|"top14,child10"
operator|<<
literal|"top14,child11"
operator|<<
literal|"top14,child12"
operator|<<
literal|"top14,child13"
comment|/* top15  */
operator|<<
literal|"top15,child4"
operator|<<
literal|"top15,child5"
operator|<<
literal|"top15,child7"
operator|<<
literal|"top15,child8"
operator|<<
literal|"top15,child9"
operator|<<
literal|"top15,child10"
operator|<<
literal|"top15,child11"
operator|<<
literal|"top15,child12"
operator|<<
literal|"top15,child13"
comment|/* top16  */
operator|<<
literal|"top16,child4"
operator|<<
literal|"top16,child5"
operator|<<
literal|"top16,child7"
operator|<<
literal|"top16,child8"
operator|<<
literal|"top16,child9"
operator|<<
literal|"top16,child10"
operator|<<
literal|"top16,child11"
operator|<<
literal|"top16,child12"
operator|<<
literal|"top16,child13"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match DropEnabled"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|DropEnabled
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0"
operator|<<
literal|"top0,child0"
operator|<<
literal|"top0,child1"
operator|<<
literal|"top0,child2"
operator|<<
literal|"top0,child3"
operator|<<
literal|"top0,child8"
operator|<<
literal|"top0,child14"
operator|<<
literal|"top0,child15"
operator|<<
literal|"top0,child16"
operator|<<
literal|"top1"
operator|<<
literal|"top1,child0"
operator|<<
literal|"top1,child1"
operator|<<
literal|"top1,child2"
operator|<<
literal|"top1,child3"
operator|<<
literal|"top1,child8"
operator|<<
literal|"top1,child14"
operator|<<
literal|"top1,child15"
operator|<<
literal|"top1,child16"
operator|<<
literal|"top2"
operator|<<
literal|"top2,child0"
operator|<<
literal|"top2,child1"
operator|<<
literal|"top2,child2"
operator|<<
literal|"top2,child3"
operator|<<
literal|"top2,child8"
operator|<<
literal|"top2,child14"
operator|<<
literal|"top2,child15"
operator|<<
literal|"top2,child16"
operator|<<
literal|"top3"
operator|<<
literal|"top3,child0"
operator|<<
literal|"top3,child1"
operator|<<
literal|"top3,child2"
operator|<<
literal|"top3,child3"
operator|<<
literal|"top3,child8"
operator|<<
literal|"top3,child14"
operator|<<
literal|"top3,child15"
operator|<<
literal|"top3,child16"
comment|/* "top4"*/
operator|<<
literal|"top4,child0"
operator|<<
literal|"top4,child1"
operator|<<
literal|"top4,child2"
operator|<<
literal|"top4,child3"
operator|<<
literal|"top4,child8"
operator|<<
literal|"top4,child14"
operator|<<
literal|"top4,child15"
operator|<<
literal|"top4,child16"
comment|/* "top5"*/
operator|<<
literal|"top5,child0"
operator|<<
literal|"top5,child1"
operator|<<
literal|"top5,child2"
operator|<<
literal|"top5,child3"
operator|<<
literal|"top5,child8"
operator|<<
literal|"top5,child14"
operator|<<
literal|"top5,child15"
operator|<<
literal|"top5,child16"
comment|/* "top6"*/
operator|<<
literal|"top6,child0"
operator|<<
literal|"top6,child1"
operator|<<
literal|"top6,child2"
operator|<<
literal|"top6,child3"
operator|<<
literal|"top6,child8"
operator|<<
literal|"top6,child14"
operator|<<
literal|"top6,child15"
operator|<<
literal|"top6,child16"
comment|/* "top7"*/
operator|<<
literal|"top7,child0"
operator|<<
literal|"top7,child1"
operator|<<
literal|"top7,child2"
operator|<<
literal|"top7,child3"
operator|<<
literal|"top7,child8"
operator|<<
literal|"top7,child14"
operator|<<
literal|"top7,child15"
operator|<<
literal|"top7,child16"
operator|<<
literal|"top8"
operator|<<
literal|"top8,child0"
operator|<<
literal|"top8,child1"
operator|<<
literal|"top8,child2"
operator|<<
literal|"top8,child3"
operator|<<
literal|"top8,child8"
operator|<<
literal|"top8,child14"
operator|<<
literal|"top8,child15"
operator|<<
literal|"top8,child16"
comment|/* "top9"*/
operator|<<
literal|"top9,child0"
operator|<<
literal|"top9,child1"
operator|<<
literal|"top9,child2"
operator|<<
literal|"top9,child3"
operator|<<
literal|"top9,child8"
operator|<<
literal|"top9,child14"
operator|<<
literal|"top9,child15"
operator|<<
literal|"top9,child16"
comment|/* "top10*/
operator|<<
literal|"top10,child0"
operator|<<
literal|"top10,child1"
operator|<<
literal|"top10,child2"
operator|<<
literal|"top10,child3"
operator|<<
literal|"top10,child8"
operator|<<
literal|"top10,child14"
operator|<<
literal|"top10,child15"
operator|<<
literal|"top10,child16"
comment|/* "top11*/
operator|<<
literal|"top11,child0"
operator|<<
literal|"top11,child1"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top11,child3"
operator|<<
literal|"top11,child8"
operator|<<
literal|"top11,child14"
operator|<<
literal|"top11,child15"
operator|<<
literal|"top11,child16"
comment|/* "top12*/
operator|<<
literal|"top12,child0"
operator|<<
literal|"top12,child1"
operator|<<
literal|"top12,child2"
operator|<<
literal|"top12,child3"
operator|<<
literal|"top12,child8"
operator|<<
literal|"top12,child14"
operator|<<
literal|"top12,child15"
operator|<<
literal|"top12,child16"
comment|/* "top13*/
operator|<<
literal|"top13,child0"
operator|<<
literal|"top13,child1"
operator|<<
literal|"top13,child2"
operator|<<
literal|"top13,child3"
operator|<<
literal|"top13,child8"
operator|<<
literal|"top13,child14"
operator|<<
literal|"top13,child15"
operator|<<
literal|"top13,child16"
operator|<<
literal|"top14"
operator|<<
literal|"top14,child0"
operator|<<
literal|"top14,child1"
operator|<<
literal|"top14,child2"
operator|<<
literal|"top14,child3"
operator|<<
literal|"top14,child8"
operator|<<
literal|"top14,child14"
operator|<<
literal|"top14,child15"
operator|<<
literal|"top14,child16"
operator|<<
literal|"top15"
operator|<<
literal|"top15,child0"
operator|<<
literal|"top15,child1"
operator|<<
literal|"top15,child2"
operator|<<
literal|"top15,child3"
operator|<<
literal|"top15,child8"
operator|<<
literal|"top15,child14"
operator|<<
literal|"top15,child15"
operator|<<
literal|"top15,child16"
operator|<<
literal|"top16"
operator|<<
literal|"top16,child0"
operator|<<
literal|"top16,child1"
operator|<<
literal|"top16,child2"
operator|<<
literal|"top16,child3"
operator|<<
literal|"top16,child8"
operator|<<
literal|"top16,child14"
operator|<<
literal|"top16,child15"
operator|<<
literal|"top16,child16"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match HasChildren"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|HasChildren
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0"
operator|<<
literal|"top1"
operator|<<
literal|"top2"
operator|<<
literal|"top3"
operator|<<
literal|"top4"
operator|<<
literal|"top5"
operator|<<
literal|"top6"
operator|<<
literal|"top7"
operator|<<
literal|"top8"
operator|<<
literal|"top9"
operator|<<
literal|"top10"
operator|<<
literal|"top11"
operator|<<
literal|"top12"
operator|<<
literal|"top13"
operator|<<
literal|"top14"
operator|<<
literal|"top15"
operator|<<
literal|"top16"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match Checked"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|Checked
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0,child14"
operator|<<
literal|"top0,child16"
operator|<<
literal|"top1,child14"
operator|<<
literal|"top1,child16"
operator|<<
literal|"top2,child14"
operator|<<
literal|"top2,child16"
operator|<<
literal|"top3,child14"
operator|<<
literal|"top3,child16"
operator|<<
literal|"top4,child14"
operator|<<
literal|"top4,child16"
operator|<<
literal|"top5,child14"
operator|<<
literal|"top5,child16"
operator|<<
literal|"top6,child14"
operator|<<
literal|"top6,child16"
operator|<<
literal|"top7,child14"
operator|<<
literal|"top7,child16"
operator|<<
literal|"top8,child14"
operator|<<
literal|"top8,child16"
operator|<<
literal|"top9,child14"
operator|<<
literal|"top9,child16"
operator|<<
literal|"top10,child14"
operator|<<
literal|"top10,child16"
operator|<<
literal|"top11,child14"
operator|<<
literal|"top11,child16"
operator|<<
literal|"top12,child14"
operator|<<
literal|"top12,child16"
operator|<<
literal|"top13,child14"
operator|<<
literal|"top13,child16"
operator|<<
literal|"top14"
operator|<<
literal|"top14,child14"
operator|<<
literal|"top14,child16"
operator|<<
literal|"top15,child14"
operator|<<
literal|"top15,child16"
operator|<<
literal|"top16"
operator|<<
literal|"top16,child14"
operator|<<
literal|"top16,child16"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match NotChecked"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|NotChecked
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0"
operator|<<
literal|"top0,child0"
operator|<<
literal|"top0,child1"
operator|<<
literal|"top0,child2"
operator|<<
literal|"top0,child3"
operator|<<
literal|"top0,child4"
operator|<<
literal|"top0,child5"
operator|<<
literal|"top0,child6"
operator|<<
literal|"top0,child7"
operator|<<
literal|"top0,child8"
operator|<<
literal|"top0,child9"
operator|<<
literal|"top0,child10"
operator|<<
literal|"top0,child11"
operator|<<
literal|"top0,child12"
operator|<<
literal|"top0,child13"
operator|<<
literal|"top0,child15"
operator|<<
literal|"top1"
operator|<<
literal|"top1,child0"
operator|<<
literal|"top1,child1"
operator|<<
literal|"top1,child2"
operator|<<
literal|"top1,child3"
operator|<<
literal|"top1,child4"
operator|<<
literal|"top1,child5"
operator|<<
literal|"top1,child6"
operator|<<
literal|"top1,child7"
operator|<<
literal|"top1,child8"
operator|<<
literal|"top1,child9"
operator|<<
literal|"top1,child10"
operator|<<
literal|"top1,child11"
operator|<<
literal|"top1,child12"
operator|<<
literal|"top1,child13"
operator|<<
literal|"top1,child15"
operator|<<
literal|"top2"
operator|<<
literal|"top2,child0"
operator|<<
literal|"top2,child1"
operator|<<
literal|"top2,child2"
operator|<<
literal|"top2,child3"
operator|<<
literal|"top2,child4"
operator|<<
literal|"top2,child5"
operator|<<
literal|"top2,child6"
operator|<<
literal|"top2,child7"
operator|<<
literal|"top2,child8"
operator|<<
literal|"top2,child9"
operator|<<
literal|"top2,child10"
operator|<<
literal|"top2,child11"
operator|<<
literal|"top2,child12"
operator|<<
literal|"top2,child13"
operator|<<
literal|"top2,child15"
operator|<<
literal|"top3"
operator|<<
literal|"top3,child0"
operator|<<
literal|"top3,child1"
operator|<<
literal|"top3,child2"
operator|<<
literal|"top3,child3"
operator|<<
literal|"top3,child4"
operator|<<
literal|"top3,child5"
operator|<<
literal|"top3,child6"
operator|<<
literal|"top3,child7"
operator|<<
literal|"top3,child8"
operator|<<
literal|"top3,child9"
operator|<<
literal|"top3,child10"
operator|<<
literal|"top3,child11"
operator|<<
literal|"top3,child12"
operator|<<
literal|"top3,child13"
operator|<<
literal|"top3,child15"
operator|<<
literal|"top4"
operator|<<
literal|"top4,child0"
operator|<<
literal|"top4,child1"
operator|<<
literal|"top4,child2"
operator|<<
literal|"top4,child3"
operator|<<
literal|"top4,child4"
operator|<<
literal|"top4,child5"
operator|<<
literal|"top4,child6"
operator|<<
literal|"top4,child7"
operator|<<
literal|"top4,child8"
operator|<<
literal|"top4,child9"
operator|<<
literal|"top4,child10"
operator|<<
literal|"top4,child11"
operator|<<
literal|"top4,child12"
operator|<<
literal|"top4,child13"
operator|<<
literal|"top4,child15"
operator|<<
literal|"top5"
operator|<<
literal|"top5,child0"
operator|<<
literal|"top5,child1"
operator|<<
literal|"top5,child2"
operator|<<
literal|"top5,child3"
operator|<<
literal|"top5,child4"
operator|<<
literal|"top5,child5"
operator|<<
literal|"top5,child6"
operator|<<
literal|"top5,child7"
operator|<<
literal|"top5,child8"
operator|<<
literal|"top5,child9"
operator|<<
literal|"top5,child10"
operator|<<
literal|"top5,child11"
operator|<<
literal|"top5,child12"
operator|<<
literal|"top5,child13"
operator|<<
literal|"top5,child15"
operator|<<
literal|"top6"
operator|<<
literal|"top6,child0"
operator|<<
literal|"top6,child1"
operator|<<
literal|"top6,child2"
operator|<<
literal|"top6,child3"
operator|<<
literal|"top6,child4"
operator|<<
literal|"top6,child5"
operator|<<
literal|"top6,child6"
operator|<<
literal|"top6,child7"
operator|<<
literal|"top6,child8"
operator|<<
literal|"top6,child9"
operator|<<
literal|"top6,child10"
operator|<<
literal|"top6,child11"
operator|<<
literal|"top6,child12"
operator|<<
literal|"top6,child13"
operator|<<
literal|"top6,child15"
operator|<<
literal|"top7"
operator|<<
literal|"top7,child0"
operator|<<
literal|"top7,child1"
operator|<<
literal|"top7,child2"
operator|<<
literal|"top7,child3"
operator|<<
literal|"top7,child4"
operator|<<
literal|"top7,child5"
operator|<<
literal|"top7,child6"
operator|<<
literal|"top7,child7"
operator|<<
literal|"top7,child8"
operator|<<
literal|"top7,child9"
operator|<<
literal|"top7,child10"
operator|<<
literal|"top7,child11"
operator|<<
literal|"top7,child12"
operator|<<
literal|"top7,child13"
operator|<<
literal|"top7,child15"
operator|<<
literal|"top8"
operator|<<
literal|"top8,child0"
operator|<<
literal|"top8,child1"
operator|<<
literal|"top8,child2"
operator|<<
literal|"top8,child3"
operator|<<
literal|"top8,child4"
operator|<<
literal|"top8,child5"
operator|<<
literal|"top8,child6"
operator|<<
literal|"top8,child7"
operator|<<
literal|"top8,child8"
operator|<<
literal|"top8,child9"
operator|<<
literal|"top8,child10"
operator|<<
literal|"top8,child11"
operator|<<
literal|"top8,child12"
operator|<<
literal|"top8,child13"
operator|<<
literal|"top8,child15"
operator|<<
literal|"top9"
operator|<<
literal|"top9,child0"
operator|<<
literal|"top9,child1"
operator|<<
literal|"top9,child2"
operator|<<
literal|"top9,child3"
operator|<<
literal|"top9,child4"
operator|<<
literal|"top9,child5"
operator|<<
literal|"top9,child6"
operator|<<
literal|"top9,child7"
operator|<<
literal|"top9,child8"
operator|<<
literal|"top9,child9"
operator|<<
literal|"top9,child10"
operator|<<
literal|"top9,child11"
operator|<<
literal|"top9,child12"
operator|<<
literal|"top9,child13"
operator|<<
literal|"top9,child15"
operator|<<
literal|"top10"
operator|<<
literal|"top10,child0"
operator|<<
literal|"top10,child1"
operator|<<
literal|"top10,child2"
operator|<<
literal|"top10,child3"
operator|<<
literal|"top10,child4"
operator|<<
literal|"top10,child5"
operator|<<
literal|"top10,child6"
operator|<<
literal|"top10,child7"
operator|<<
literal|"top10,child8"
operator|<<
literal|"top10,child9"
operator|<<
literal|"top10,child10"
operator|<<
literal|"top10,child11"
operator|<<
literal|"top10,child12"
operator|<<
literal|"top10,child13"
operator|<<
literal|"top10,child15"
operator|<<
literal|"top11"
operator|<<
literal|"top11,child0"
operator|<<
literal|"top11,child1"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top11,child3"
operator|<<
literal|"top11,child4"
operator|<<
literal|"top11,child5"
operator|<<
literal|"top11,child6"
operator|<<
literal|"top11,child7"
operator|<<
literal|"top11,child8"
operator|<<
literal|"top11,child9"
operator|<<
literal|"top11,child10"
operator|<<
literal|"top11,child11"
operator|<<
literal|"top11,child12"
operator|<<
literal|"top11,child13"
operator|<<
literal|"top11,child15"
operator|<<
literal|"top12"
operator|<<
literal|"top12,child0"
operator|<<
literal|"top12,child1"
operator|<<
literal|"top12,child2"
operator|<<
literal|"top12,child3"
operator|<<
literal|"top12,child4"
operator|<<
literal|"top12,child5"
operator|<<
literal|"top12,child6"
operator|<<
literal|"top12,child7"
operator|<<
literal|"top12,child8"
operator|<<
literal|"top12,child9"
operator|<<
literal|"top12,child10"
operator|<<
literal|"top12,child11"
operator|<<
literal|"top12,child12"
operator|<<
literal|"top12,child13"
operator|<<
literal|"top12,child15"
operator|<<
literal|"top13"
operator|<<
literal|"top13,child0"
operator|<<
literal|"top13,child1"
operator|<<
literal|"top13,child2"
operator|<<
literal|"top13,child3"
operator|<<
literal|"top13,child4"
operator|<<
literal|"top13,child5"
operator|<<
literal|"top13,child6"
operator|<<
literal|"top13,child7"
operator|<<
literal|"top13,child8"
operator|<<
literal|"top13,child9"
operator|<<
literal|"top13,child10"
operator|<<
literal|"top13,child11"
operator|<<
literal|"top13,child12"
operator|<<
literal|"top13,child13"
operator|<<
literal|"top13,child15"
comment|/* "top14"*/
operator|<<
literal|"top14,child0"
operator|<<
literal|"top14,child1"
operator|<<
literal|"top14,child2"
operator|<<
literal|"top14,child3"
operator|<<
literal|"top14,child4"
operator|<<
literal|"top14,child5"
operator|<<
literal|"top14,child6"
operator|<<
literal|"top14,child7"
operator|<<
literal|"top14,child8"
operator|<<
literal|"top14,child9"
operator|<<
literal|"top14,child10"
operator|<<
literal|"top14,child11"
operator|<<
literal|"top14,child12"
operator|<<
literal|"top14,child13"
operator|<<
literal|"top14,child15"
operator|<<
literal|"top15"
operator|<<
literal|"top15,child0"
operator|<<
literal|"top15,child1"
operator|<<
literal|"top15,child2"
operator|<<
literal|"top15,child3"
operator|<<
literal|"top15,child4"
operator|<<
literal|"top15,child5"
operator|<<
literal|"top15,child6"
operator|<<
literal|"top15,child7"
operator|<<
literal|"top15,child8"
operator|<<
literal|"top15,child9"
operator|<<
literal|"top15,child10"
operator|<<
literal|"top15,child11"
operator|<<
literal|"top15,child12"
operator|<<
literal|"top15,child13"
operator|<<
literal|"top15,child15"
comment|/* "top16"*/
operator|<<
literal|"top16,child0"
operator|<<
literal|"top16,child1"
operator|<<
literal|"top16,child2"
operator|<<
literal|"top16,child3"
operator|<<
literal|"top16,child4"
operator|<<
literal|"top16,child5"
operator|<<
literal|"top16,child6"
operator|<<
literal|"top16,child7"
operator|<<
literal|"top16,child8"
operator|<<
literal|"top16,child9"
operator|<<
literal|"top16,child10"
operator|<<
literal|"top16,child11"
operator|<<
literal|"top16,child12"
operator|<<
literal|"top16,child13"
operator|<<
literal|"top16,child15"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match Disabled"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|Disabled
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0,child11"
operator|<<
literal|"top1,child11"
operator|<<
literal|"top2,child11"
operator|<<
literal|"top3,child11"
operator|<<
literal|"top4,child11"
operator|<<
literal|"top5,child11"
operator|<<
literal|"top6,child11"
operator|<<
literal|"top7,child11"
operator|<<
literal|"top8,child11"
operator|<<
literal|"top9,child11"
operator|<<
literal|"top10,child11"
operator|<<
literal|"top11"
operator|<<
literal|"top11,child0"
operator|<<
literal|"top11,child1"
operator|<<
literal|"top11,child2"
operator|<<
literal|"top11,child3"
operator|<<
literal|"top11,child4"
operator|<<
literal|"top11,child5"
operator|<<
literal|"top11,child6"
operator|<<
literal|"top11,child7"
operator|<<
literal|"top11,child8"
operator|<<
literal|"top11,child9"
operator|<<
literal|"top11,child10"
operator|<<
literal|"top11,child11"
operator|<<
literal|"top11,child12"
operator|<<
literal|"top11,child13"
operator|<<
literal|"top11,child14"
operator|<<
literal|"top11,child15"
operator|<<
literal|"top11,child16"
operator|<<
literal|"top12,child11"
operator|<<
literal|"top13,child11"
operator|<<
literal|"top14,child11"
operator|<<
literal|"top15,child11"
operator|<<
literal|"top16,child11"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match Editable"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|Editable
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"top0,child12"
operator|<<
literal|"top1,child12"
operator|<<
literal|"top2,child12"
operator|<<
literal|"top3,child12"
operator|<<
literal|"top4,child12"
operator|<<
literal|"top5,child12"
operator|<<
literal|"top6,child12"
operator|<<
literal|"top7,child12"
operator|<<
literal|"top8,child12"
operator|<<
literal|"top9,child12"
operator|<<
literal|"top10,child12"
operator|<<
literal|"top11,child12"
operator|<<
literal|"top12"
operator|<<
literal|"top12,child12"
operator|<<
literal|"top13,child12"
operator|<<
literal|"top14,child12"
operator|<<
literal|"top15,child12"
operator|<<
literal|"top16,child12"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive Hidden|NotHidden"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|Hidden
operator||
name|QTreeWidgetItemIterator
operator|::
name|NotHidden
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive Selected|Unselected"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|Selected
operator||
name|QTreeWidgetItemIterator
operator|::
name|Unselected
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive Selectable|NotSelectable"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|Selectable
operator||
name|QTreeWidgetItemIterator
operator|::
name|NotSelectable
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive DragEnabled|DragDisabled"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|DragEnabled
operator||
name|QTreeWidgetItemIterator
operator|::
name|DragDisabled
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive DropEnabled|DropDisabled"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|DropEnabled
operator||
name|QTreeWidgetItemIterator
operator|::
name|DropDisabled
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive HasChildren|NoChildren"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|HasChildren
operator||
name|QTreeWidgetItemIterator
operator|::
name|NoChildren
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive Checked|NotChecked"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|Checked
operator||
name|QTreeWidgetItemIterator
operator|::
name|NotChecked
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive Disabled|Enabled"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|Disabled
operator||
name|QTreeWidgetItemIterator
operator|::
name|Enabled
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Match mutually exclusive Editable|NotEditable"
argument_list|)
operator|<<
literal|0
operator|<<
call|(
name|int
call|)
argument_list|(
name|QTreeWidgetItemIterator
operator|::
name|Editable
operator||
name|QTreeWidgetItemIterator
operator|::
name|NotEditable
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|iteratorflags
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|iteratorflags
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|iteratorflags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|matches
argument_list|)
expr_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|IteratorFlags
argument_list|(
name|iteratorflags
argument_list|)
argument_list|)
decl_stmt|;
name|it
operator|+=
name|start
expr_stmt|;
name|int
name|iMatch
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|*
name|it
operator|&&
name|iMatch
operator|<
name|matches
operator|.
name|count
argument_list|()
condition|)
block|{
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
name|it
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|matches
index|[
name|iMatch
index|]
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
operator|++
name|iMatch
expr_stmt|;
block|}
comment|// Make sure the expected result does not contain *more* items than the actual result.
name|QCOMPARE
argument_list|(
name|iMatch
argument_list|,
name|matches
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|preincrement
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|preincrement
parameter_list|()
block|{
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|All
argument_list|)
decl_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
operator|(
operator|++
name|it
operator|)
decl_stmt|;
comment|// should be the second one
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|postincrement
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|postincrement
parameter_list|()
block|{
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|All
argument_list|)
decl_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
operator|(
name|it
operator|++
operator|)
decl_stmt|;
comment|// should be the first one
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"top0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|predecrement
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|predecrement
parameter_list|()
block|{
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|All
argument_list|)
decl_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
operator|(
operator|++
name|it
operator|)
decl_stmt|;
comment|// should be the second one
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|=
operator|*
operator|(
operator|--
name|it
operator|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"top0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|postdecrement
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|postdecrement
parameter_list|()
block|{
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|All
argument_list|)
decl_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
operator|(
name|it
operator|++
operator|)
decl_stmt|;
comment|// should be the first one
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"top0"
argument_list|)
argument_list|)
expr_stmt|;
comment|//Iterator points to second one
name|item
operator|=
operator|*
operator|(
name|it
operator|--
operator|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|plus_eq_data
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|plus_eq_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"start"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"addition"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"iteratorflags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expecteditem"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"+=0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"+=1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"+=2"
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"+=(-1)"
argument_list|)
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"+=(-2)"
argument_list|)
operator|<<
literal|3
operator|<<
operator|-
literal|2
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|plus_eq
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|plus_eq
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|addition
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|iteratorflags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expecteditem
argument_list|)
expr_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|IteratorFlags
argument_list|(
name|iteratorflags
argument_list|)
argument_list|)
decl_stmt|;
name|it
operator|+=
name|start
expr_stmt|;
name|it
operator|+=
name|addition
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
name|it
decl_stmt|;
name|QVERIFY
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|expecteditem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minus_eq_data
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|minus_eq_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"start"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"subtraction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"iteratorflags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expecteditem"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0-=0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2-=1"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4-=2"
argument_list|)
operator|<<
literal|4
operator|<<
literal|2
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0-=(-1)"
argument_list|)
operator|<<
literal|0
operator|<<
operator|-
literal|1
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0-=(-2)"
argument_list|)
operator|<<
literal|0
operator|<<
operator|-
literal|2
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"18-=1"
argument_list|)
operator|<<
literal|18
operator|<<
literal|1
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0,child16"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1-=1"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
name|QString
argument_list|(
literal|"top0"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minus_eq
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|minus_eq
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|subtraction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|iteratorflags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expecteditem
argument_list|)
expr_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|IteratorFlags
argument_list|(
name|iteratorflags
argument_list|)
argument_list|)
decl_stmt|;
name|it
operator|+=
name|start
expr_stmt|;
name|it
operator|-=
name|subtraction
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
name|it
decl_stmt|;
comment|// should be the first one
name|QVERIFY
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|expecteditem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateIfModifiedFromWidget_data
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|updateIfModifiedFromWidget_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"topLevelItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"childItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"grandChildItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"iteratorflags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"removeindex"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expecteditemindex"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expecteditemvalue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedUpdatedCurrent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expecteditemIsNull"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 3, check 1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|3
operator|<<
literal|1
operator|<<
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 1, check 0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 2, check 2"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|2
operator|<<
literal|2
operator|<<
name|QString
argument_list|(
literal|"top0,child2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top0,child2"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 0, check 0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove top1, check top1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|13
operator|<<
literal|13
operator|<<
name|QString
argument_list|(
literal|"top2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top2"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove top0, check top1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|0
operator|<<
literal|13
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove (top0,child1), check (top0,child1)"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|5
operator|<<
literal|5
operator|<<
name|QString
argument_list|(
literal|"top0,child2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top0,child2"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove (t0,c0) check (t0,c0)"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove (t0,c1) check (t0,c1)"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|5
operator|<<
literal|5
operator|<<
name|QString
argument_list|(
literal|"top0,child2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top0,child2"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove (t0) check (t0,c1)"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|0
operator|<<
literal|4
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove (t0) check (t0,c0,g1)"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|0
operator|<<
literal|3
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove (top2), check if top2 is null"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|2
operator|*
literal|13
operator|<<
literal|2
operator|*
literal|13
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove last item, check if iterator::current returns 0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|2
operator|<<
literal|2
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"remove 1, iterator points to 3, should move to 1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|All
operator|<<
literal|1
operator|<<
literal|3
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|populate3Levels
specifier|static
name|void
name|populate3Levels
parameter_list|(
name|QTreeWidget
modifier|&
name|tw
parameter_list|,
name|int
name|topLevelItems
parameter_list|,
name|int
name|childItems
parameter_list|,
name|int
name|grandChildItems
parameter_list|)
block|{
for|for
control|(
name|int
name|i1
init|=
literal|0
init|;
name|i1
operator|<
name|topLevelItems
condition|;
operator|++
name|i1
control|)
block|{
name|QTreeWidgetItem
modifier|*
name|top
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
operator|&
name|tw
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|top1S
init|=
name|QLatin1String
argument_list|(
literal|"top"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i1
argument_list|)
decl_stmt|;
name|top
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
name|top1S
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i2
init|=
literal|0
init|;
name|i2
operator|<
name|childItems
condition|;
operator|++
name|i2
control|)
block|{
name|QTreeWidgetItem
modifier|*
name|child
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|top
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|childS
init|=
name|top1S
operator|+
name|QLatin1String
argument_list|(
literal|",child"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i2
argument_list|)
decl_stmt|;
name|child
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
name|childS
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i3
init|=
literal|0
init|;
name|i3
operator|<
name|grandChildItems
condition|;
operator|++
name|i3
control|)
block|{
name|QTreeWidgetItem
modifier|*
name|grandChild
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|grandChild
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
name|childS
operator|+
name|QLatin1String
argument_list|(
literal|",grandchild"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i3
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|updateIfModifiedFromWidget
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|updateIfModifiedFromWidget
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|topLevelItems
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|childItems
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|grandChildItems
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|iteratorflags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|removeindex
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expecteditemindex
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expecteditemvalue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedUpdatedCurrent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expecteditemIsNull
argument_list|)
expr_stmt|;
name|QTreeWidget
name|tw
decl_stmt|;
name|tw
operator|.
name|clear
argument_list|()
expr_stmt|;
name|tw
operator|.
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|populate3Levels
argument_list|(
name|tw
argument_list|,
name|topLevelItems
argument_list|,
name|childItems
argument_list|,
name|grandChildItems
argument_list|)
expr_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
operator|&
name|tw
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|IteratorFlags
argument_list|(
name|iteratorflags
argument_list|)
argument_list|)
decl_stmt|;
name|it
operator|+=
name|expecteditemindex
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
literal|0
decl_stmt|;
name|QTreeWidgetItemIterator
name|itRemove
argument_list|(
operator|&
name|tw
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|IteratorFlags
argument_list|(
name|iteratorflags
argument_list|)
argument_list|)
decl_stmt|;
name|itRemove
operator|+=
name|removeindex
expr_stmt|;
name|item
operator|=
operator|*
name|itRemove
expr_stmt|;
name|QVERIFY
argument_list|(
name|item
argument_list|)
expr_stmt|;
operator|delete
name|item
expr_stmt|;
name|item
operator|=
operator|*
name|it
expr_stmt|;
if|if
condition|(
name|expecteditemIsNull
condition|)
block|{
name|QVERIFY
argument_list|(
operator|!
name|item
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|expecteditemvalue
argument_list|)
expr_stmt|;
name|item
operator|=
operator|*
name|itRemove
expr_stmt|;
if|if
condition|(
name|expectedUpdatedCurrent
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QVERIFY
argument_list|(
operator|!
name|item
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|expectedUpdatedCurrent
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|updateIteratorAfterDeletedItem_and_ContinueIteration_data
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|updateIteratorAfterDeletedItem_and_ContinueIteration_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"topLevelItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"childItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"grandChildItems"
argument_list|)
expr_stmt|;
comment|// Populate the tree data
comment|// we have one iterator pointing to an item in the tree.
comment|// This iterator will be updated if we delete the item it is pointing to.
comment|//
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"removeindex"
argument_list|)
expr_stmt|;
comment|// The index of the node we want to remove
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"iterator_initial_index"
argument_list|)
expr_stmt|;
comment|// The new expected index of
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"iterator_advance_after_removal"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"iterator_new_value"
argument_list|)
expr_stmt|;
comment|// The new current item value of the iterator
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 13, it points to 25, it-=1. We should get top0,child2,grandchild2"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|13
operator|<<
literal|25
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"top0,child2,grandchild2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 0, it points to 12, it+=1. We should get top1,child0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|12
operator|<<
literal|1
operator|<<
name|QString
argument_list|(
literal|"top1,child0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 0, it points to 12, it-=1. We should get 0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|12
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 0, it points to 1, it+=1. We should get top2"
argument_list|)
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|QString
argument_list|(
literal|"top2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 2, it points to 1, it+=0. We should get top1"
argument_list|)
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 2, it points to 1, it+=1. We should get top3"
argument_list|)
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|QString
argument_list|(
literal|"top3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 1, it points to 2, it+=1. We should get top0,child2"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|<<
name|QString
argument_list|(
literal|"top0,child2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 1, it points to 2, it+=0. We should get top0,child1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Remove 1, it points to 2, it-=1. We should get top0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"top0"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateIteratorAfterDeletedItem_and_ContinueIteration
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|updateIteratorAfterDeletedItem_and_ContinueIteration
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|topLevelItems
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|childItems
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|grandChildItems
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|removeindex
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|iterator_initial_index
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|iterator_advance_after_removal
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|iterator_new_value
argument_list|)
expr_stmt|;
name|QTreeWidget
name|tw
decl_stmt|;
name|tw
operator|.
name|clear
argument_list|()
expr_stmt|;
name|tw
operator|.
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|populate3Levels
argument_list|(
name|tw
argument_list|,
name|topLevelItems
argument_list|,
name|childItems
argument_list|,
name|grandChildItems
argument_list|)
expr_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
operator|&
name|tw
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|All
argument_list|)
decl_stmt|;
name|it
operator|+=
name|iterator_initial_index
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
literal|0
decl_stmt|;
name|QTreeWidgetItemIterator
name|itRemove
argument_list|(
operator|&
name|tw
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|All
argument_list|)
decl_stmt|;
name|itRemove
operator|+=
name|removeindex
expr_stmt|;
name|item
operator|=
operator|*
name|itRemove
expr_stmt|;
name|QVERIFY
argument_list|(
name|item
argument_list|)
expr_stmt|;
operator|delete
name|item
expr_stmt|;
name|it
operator|+=
name|iterator_advance_after_removal
expr_stmt|;
if|if
condition|(
name|iterator_new_value
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QCOMPARE
argument_list|(
operator|(
operator|*
name|it
operator|)
argument_list|,
operator|(
name|QTreeWidgetItem
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
operator|(
operator|*
name|it
operator|)
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|iterator_new_value
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|constructIteratorWithItem_data
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|constructIteratorWithItem_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"indextoitem"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"iteratorflags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expecteditem"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"index 0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"index 1"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top0,child0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"index 2"
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"index 30"
argument_list|)
operator|<<
literal|30
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top1,child11"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"305 (last item)"
argument_list|)
operator|<<
literal|305
operator|<<
literal|0
operator|<<
name|QString
argument_list|(
literal|"top16,child16"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"index 0, advance to next matching node"
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|int
operator|)
name|QTreeWidgetItemIterator
operator|::
name|NotHidden
operator|<<
name|QString
argument_list|(
literal|"top0,child1"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructIteratorWithItem
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|constructIteratorWithItem
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|indextoitem
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|iteratorflags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expecteditem
argument_list|)
expr_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|it
operator|+=
name|indextoitem
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|*
name|it
decl_stmt|;
name|QTreeWidgetItemIterator
name|it2
argument_list|(
name|item
argument_list|,
name|QTreeWidgetItemIterator
operator|::
name|IteratorFlags
argument_list|(
name|iteratorflags
argument_list|)
argument_list|)
decl_stmt|;
name|QTreeWidgetItem
modifier|*
name|item2
init|=
operator|*
name|it2
decl_stmt|;
name|QVERIFY
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|text
argument_list|(
literal|0
argument_list|)
argument_list|,
name|expecteditem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initializeIterator
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|initializeIterator
parameter_list|()
block|{
name|QTreeWidget
name|tw
decl_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
operator|&
name|tw
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
operator|*
name|it
operator|)
argument_list|,
cast|static_cast
argument_list|<
name|QTreeWidgetItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sortingEnabled
name|void
name|tst_QTreeWidgetItemIterator
operator|::
name|sortingEnabled
parameter_list|()
block|{
name|QTreeWidget
modifier|*
name|tree
init|=
operator|new
name|QTreeWidget
decl_stmt|;
name|tree
operator|->
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|tree
operator|->
name|headerItem
argument_list|()
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
literal|"Id"
argument_list|)
expr_stmt|;
name|tree
operator|->
name|headerItem
argument_list|()
operator|->
name|setText
argument_list|(
literal|1
argument_list|,
literal|"Color"
argument_list|)
expr_stmt|;
name|tree
operator|->
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tree
operator|->
name|sortByColumn
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|second
init|=
operator|new
name|QTreeWidgetItem
decl_stmt|;
name|second
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|second
operator|->
name|setText
argument_list|(
literal|1
argument_list|,
literal|"second"
argument_list|)
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|first
init|=
operator|new
name|QTreeWidgetItem
decl_stmt|;
name|first
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|first
operator|->
name|setText
argument_list|(
literal|1
argument_list|,
literal|"first"
argument_list|)
expr_stmt|;
name|tree
operator|->
name|addTopLevelItem
argument_list|(
name|second
argument_list|)
expr_stmt|;
name|tree
operator|->
name|addTopLevelItem
argument_list|(
name|first
argument_list|)
expr_stmt|;
name|QTreeWidgetItemIterator
name|it
argument_list|(
name|tree
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|*
name|it
argument_list|,
name|first
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|*
name|it
argument_list|,
name|second
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTreeWidgetItemIterator
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtreewidgetitemiterator.moc"
end_include
end_unit
