begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qeventloop.h>
end_include
begin_include
include|#
directive|include
file|<qlist.h>
end_include
begin_include
include|#
directive|include
file|<qpair.h>
end_include
begin_include
include|#
directive|include
file|<qheaderview.h>
end_include
begin_include
include|#
directive|include
file|<qtablewidget.h>
end_include
begin_class
DECL|class|QObjectTableItem
class|class
name|QObjectTableItem
super|:
specifier|public
name|QObject
super|,
specifier|public
name|QTableWidgetItem
block|{
name|Q_OBJECT
block|}
class|;
end_class
begin_class
DECL|class|tst_QTableWidget
class|class
name|tst_QTableWidget
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QTableWidget
parameter_list|()
constructor_decl|;
name|~
name|tst_QTableWidget
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|void
name|clearContents
parameter_list|()
function_decl|;
name|void
name|rowCount
parameter_list|()
function_decl|;
name|void
name|columnCount
parameter_list|()
function_decl|;
name|void
name|itemAssignment
parameter_list|()
function_decl|;
name|void
name|item_data
parameter_list|()
function_decl|;
name|void
name|item
parameter_list|()
function_decl|;
name|void
name|takeItem_data
parameter_list|()
function_decl|;
name|void
name|takeItem
parameter_list|()
function_decl|;
name|void
name|selectedItems_data
parameter_list|()
function_decl|;
name|void
name|selectedItems
parameter_list|()
function_decl|;
name|void
name|removeRow_data
parameter_list|()
function_decl|;
name|void
name|removeRow
parameter_list|()
function_decl|;
name|void
name|removeColumn_data
parameter_list|()
function_decl|;
name|void
name|removeColumn
parameter_list|()
function_decl|;
name|void
name|insertRow_data
parameter_list|()
function_decl|;
name|void
name|insertRow
parameter_list|()
function_decl|;
name|void
name|insertColumn_data
parameter_list|()
function_decl|;
name|void
name|insertColumn
parameter_list|()
function_decl|;
name|void
name|itemStreaming_data
parameter_list|()
function_decl|;
name|void
name|itemStreaming
parameter_list|()
function_decl|;
name|void
name|itemOwnership
parameter_list|()
function_decl|;
name|void
name|sortItems_data
parameter_list|()
function_decl|;
name|void
name|sortItems
parameter_list|()
function_decl|;
name|void
name|setItemWithSorting_data
parameter_list|()
function_decl|;
name|void
name|setItemWithSorting
parameter_list|()
function_decl|;
name|void
name|itemData
parameter_list|()
function_decl|;
name|void
name|setItemData
parameter_list|()
function_decl|;
name|void
name|cellWidget
parameter_list|()
function_decl|;
name|void
name|task231094
parameter_list|()
function_decl|;
name|void
name|task219380_removeLastRow
parameter_list|()
function_decl|;
name|void
name|task262056_sortDuplicate
parameter_list|()
function_decl|;
name|void
name|itemWithHeaderItems
parameter_list|()
function_decl|;
name|void
name|mimeData
parameter_list|()
function_decl|;
name|void
name|selectedRowAfterSorting
parameter_list|()
function_decl|;
private|private:
DECL|member|testWidget
name|QTableWidget
modifier|*
name|testWidget
decl_stmt|;
block|}
class|;
end_class
begin_typedef
DECL|typedef|IntPair
typedef|typedef
name|QPair
argument_list|<
name|int
argument_list|,
name|int
argument_list|>
name|IntPair
typedef|;
end_typedef
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_typedef
DECL|typedef|IntIntList
typedef|typedef
name|QList
argument_list|<
name|IntPair
argument_list|>
name|IntIntList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QTableWidgetSelectionRange
argument_list|)
end_macro
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QTableWidget
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QTableWidget
name|obj1
decl_stmt|;
comment|// int QTableWidget::rowCount()
comment|// void QTableWidget::setRowCount(int)
name|obj1
operator|.
name|setRowCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setRowCount
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// Row count can never be negative
comment|//    obj1.setRowCount(INT_MAX);
comment|//    QCOMPARE(INT_MAX, obj1.rowCount());
name|obj1
operator|.
name|setRowCount
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|100
argument_list|,
name|obj1
operator|.
name|rowCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QTableWidget::columnCount()
comment|// void QTableWidget::setColumnCount(int)
name|obj1
operator|.
name|setColumnCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setColumnCount
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// Column count can never be negative
name|obj1
operator|.
name|setColumnCount
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1000
argument_list|,
name|obj1
operator|.
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
comment|//    obj1.setColumnCount(INT_MAX);
comment|//    QCOMPARE(INT_MAX, obj1.columnCount());
comment|// QTableWidgetItem * QTableWidget::currentItem()
comment|// void QTableWidget::setCurrentItem(QTableWidgetItem *)
name|QTableWidgetItem
modifier|*
name|var3
init|=
operator|new
name|QTableWidgetItem
argument_list|(
literal|"0,0"
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|var3
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setItem
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"1,1"
argument_list|)
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setItem
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"2,2"
argument_list|)
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setItem
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"3,3"
argument_list|)
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentItem
argument_list|(
name|var3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var3
argument_list|,
name|obj1
operator|.
name|currentItem
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentItem
argument_list|(
operator|(
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|currentItem
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// const QTableWidgetItem * QTableWidget::itemPrototype()
comment|// void QTableWidget::setItemPrototype(const QTableWidgetItem *)
specifier|const
name|QTableWidgetItem
modifier|*
name|var4
init|=
operator|new
name|QTableWidgetItem
decl_stmt|;
name|obj1
operator|.
name|setItemPrototype
argument_list|(
name|var4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var4
argument_list|,
name|obj1
operator|.
name|itemPrototype
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setItemPrototype
argument_list|(
operator|(
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
specifier|const
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|itemPrototype
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QTableWidget
name|tst_QTableWidget
operator|::
name|tst_QTableWidget
parameter_list|()
member_init_list|:
name|testWidget
argument_list|(
literal|0
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QTableWidget
name|tst_QTableWidget
operator|::
name|~
name|tst_QTableWidget
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QTableWidget
operator|::
name|initTestCase
parameter_list|()
block|{
name|testWidget
operator|=
operator|new
name|QTableWidget
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QTableWidget
operator|::
name|cleanupTestCase
parameter_list|()
block|{
operator|delete
name|testWidget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QTableWidget
operator|::
name|init
parameter_list|()
block|{
name|testWidget
operator|->
name|clear
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
literal|5
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|testWidget
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|row
control|)
name|testWidget
operator|->
name|showRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|column
init|=
literal|0
init|;
name|column
operator|<
name|testWidget
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|column
control|)
name|testWidget
operator|->
name|showColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QTableWidget
operator|::
name|cleanup
parameter_list|()
block|{  }
end_function
begin_function
DECL|function|clearContents
name|void
name|tst_QTableWidget
operator|::
name|clearContents
parameter_list|()
block|{
name|QTableWidgetItem
modifier|*
name|item
init|=
operator|new
name|QTableWidgetItem
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|horizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|clearContents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|horizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|tst_QTableWidget
operator|::
name|clear
parameter_list|()
block|{
name|QTableWidgetItem
modifier|*
name|item
init|=
operator|new
name|QTableWidgetItem
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setItemSelected
argument_list|(
name|item
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|==
name|item
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isItemSelected
argument_list|(
name|item
argument_list|)
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QObjectTableItem
argument_list|>
name|bla
init|=
operator|new
name|QObjectTableItem
argument_list|()
decl_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|bla
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|bla
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|selectedItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowCount
name|void
name|tst_QTableWidget
operator|::
name|rowCount
parameter_list|()
block|{
name|int
name|rowCountBefore
init|=
literal|5
decl_stmt|;
name|int
name|rowCountAfter
init|=
literal|10
decl_stmt|;
name|int
name|rowCount
init|=
name|testWidget
operator|->
name|rowCount
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rowCount
argument_list|,
name|rowCountBefore
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCountAfter
argument_list|)
expr_stmt|;
name|rowCount
operator|=
name|testWidget
operator|->
name|rowCount
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rowCount
argument_list|,
name|rowCountAfter
argument_list|)
expr_stmt|;
name|QPersistentModelIndex
name|index
argument_list|(
name|testWidget
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
name|rowCountAfter
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
name|testWidget
operator|->
name|rootIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
name|rowCountAfter
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCountBefore
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|rowCountBefore
operator|=
name|testWidget
operator|->
name|rowCount
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCountBefore
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|columnCount
name|void
name|tst_QTableWidget
operator|::
name|columnCount
parameter_list|()
block|{
name|int
name|columnCountBefore
init|=
literal|5
decl_stmt|;
name|int
name|columnCountAfter
init|=
literal|10
decl_stmt|;
name|int
name|columnCount
init|=
name|testWidget
operator|->
name|columnCount
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|columnCount
argument_list|,
name|columnCountBefore
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCountAfter
argument_list|)
expr_stmt|;
name|columnCount
operator|=
name|testWidget
operator|->
name|columnCount
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|columnCount
argument_list|,
name|columnCountAfter
argument_list|)
expr_stmt|;
name|QPersistentModelIndex
name|index
argument_list|(
name|testWidget
operator|->
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
name|columnCountAfter
operator|-
literal|1
argument_list|,
name|testWidget
operator|->
name|rootIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|,
name|columnCountAfter
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCountBefore
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|index
operator|.
name|column
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|index
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|columnCountBefore
operator|=
name|testWidget
operator|->
name|columnCount
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCountBefore
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemAssignment
name|void
name|tst_QTableWidget
operator|::
name|itemAssignment
parameter_list|()
block|{
name|QTableWidgetItem
name|itemInWidget
argument_list|(
literal|"inWidget"
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|&
name|itemInWidget
argument_list|)
expr_stmt|;
name|itemInWidget
operator|.
name|setFlags
argument_list|(
name|itemInWidget
operator|.
name|flags
argument_list|()
operator||
name|Qt
operator|::
name|ItemIsUserTristate
argument_list|)
expr_stmt|;
name|QTableWidgetItem
name|itemOutsideWidget
argument_list|(
literal|"outsideWidget"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|itemInWidget
operator|.
name|tableWidget
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemInWidget
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"inWidget"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|itemInWidget
operator|.
name|flags
argument_list|()
operator|&
name|Qt
operator|::
name|ItemIsUserTristate
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|itemOutsideWidget
operator|.
name|tableWidget
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemOutsideWidget
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"outsideWidget"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|itemOutsideWidget
operator|.
name|flags
argument_list|()
operator|&
name|Qt
operator|::
name|ItemIsUserTristate
operator|)
argument_list|)
expr_stmt|;
name|itemOutsideWidget
operator|=
name|itemInWidget
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|itemOutsideWidget
operator|.
name|tableWidget
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|itemOutsideWidget
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"inWidget"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|itemOutsideWidget
operator|.
name|flags
argument_list|()
operator|&
name|Qt
operator|::
name|ItemIsUserTristate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|item_data
name|void
name|tst_QTableWidget
operator|::
name|item_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expectItem"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0x0 take [0,0]"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0x0 take [4,4]"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4 take [0,0]"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4 take [4,4]"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4 take [2,2]"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|item
name|void
name|tst_QTableWidget
operator|::
name|item
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|expectItem
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|testWidget
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|testWidget
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
name|testWidget
operator|->
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|r
operator|*
name|c
operator|+
name|c
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|testWidget
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|testWidget
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|r
operator|*
name|c
operator|+
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|QTableWidgetItem
modifier|*
name|item
init|=
name|testWidget
operator|->
name|item
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|!
operator|!
name|item
argument_list|,
name|expectItem
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectItem
condition|)
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|row
operator|*
name|column
operator|+
name|column
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|takeItem_data
name|void
name|tst_QTableWidget
operator|::
name|takeItem_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expectItem"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0x0 take [0,0]"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0x0 take [4,4]"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4 take [0,0]"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4 take [4,4]"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4 take [2,2]"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|takeItem
name|void
name|tst_QTableWidget
operator|::
name|takeItem
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|expectItem
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|testWidget
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|testWidget
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
name|testWidget
operator|->
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|r
operator|*
name|c
operator|+
name|c
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|testWidget
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|testWidget
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|r
operator|*
name|c
operator|+
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|QTableWidgetItem
modifier|*
name|item
init|=
name|testWidget
operator|->
name|takeItem
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|!
operator|!
name|item
argument_list|,
name|expectItem
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectItem
condition|)
block|{
name|QCOMPARE
argument_list|(
name|item
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|row
operator|*
name|column
operator|+
name|column
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|item
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|takeItem
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectedItems_data
name|void
name|tst_QTableWidget
operator|::
name|selectedItems_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntIntList
argument_list|>
argument_list|(
literal|"createItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"hiddenRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"hiddenColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTableWidgetSelectionRange
argument_list|>
argument_list|(
literal|"selectionRange"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntIntList
argument_list|>
argument_list|(
literal|"expectedItems"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 empty cells, no hidden rows/columns, none selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntIntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|()
operator|<<
name|IntIntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 empty cells,no hidden rows/columnms, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntIntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntIntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 (1,1) exists, no hidden rows/columnms, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 (1,1) exists, row 1 hidden, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntIntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 (1,1) exists, column 1 hidden, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntIntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 all exists, no hidden rows/columns, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 all exists, row 1 hidden, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 all exists, column 1 hidden, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|IntIntList
argument_list|()
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 none exists, no hidden rows/columns, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntIntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntIntList
argument_list|()
expr_stmt|;
comment|//<< (IntIntList()
comment|//<< IntPair(0,0)<< IntPair(0,1)<< IntPair(0,2)
comment|//<< IntPair(1,0)<< IntPair(1,1)<< IntPair(1,2)
comment|//<< IntPair(2,0)<< IntPair(2,1)<< IntPair(2,2));
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 none exists,  row 1 hidden, all selected, filling empty cells"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntIntList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntIntList
argument_list|()
expr_stmt|;
comment|//<< (IntIntList()
comment|//<< IntPair(0,0)<< IntPair(0,1)<< IntPair(0,2)
comment|//<< IntPair(2,0)<< IntPair(2,1)<< IntPair(2,2));
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3 none exists,  column 1 hidden, all selected"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|IntIntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|QTableWidgetSelectionRange
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
name|IntIntList
argument_list|()
expr_stmt|;
comment|//<< (IntIntList()
comment|//<< IntPair(0,0)<< IntPair(0,2)
comment|//<< IntPair(1,0)<< IntPair(1,2)
comment|//<< IntPair(2,0)<< IntPair(2,2));
block|}
end_function
begin_function
DECL|function|selectedItems
name|void
name|tst_QTableWidget
operator|::
name|selectedItems
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntIntList
argument_list|,
name|createItems
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|hiddenRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|hiddenColumns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTableWidgetSelectionRange
argument_list|,
name|selectionRange
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntIntList
argument_list|,
name|expectedItems
argument_list|)
expr_stmt|;
comment|// set dimensions and test they are ok
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
comment|// create and set items
foreach|foreach
control|(
name|IntPair
name|intPair
decl|,
name|createItems
control|)
block|{
name|testWidget
operator|->
name|setItem
argument_list|(
name|intPair
operator|.
name|first
argument_list|,
name|intPair
operator|.
name|second
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QString
argument_list|(
literal|"Item %1 %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|intPair
operator|.
name|first
argument_list|)
operator|.
name|arg
argument_list|(
name|intPair
operator|.
name|second
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// hide rows/columns
foreach|foreach
control|(
name|int
name|row
decl|,
name|hiddenRows
control|)
name|testWidget
operator|->
name|setRowHidden
argument_list|(
name|row
argument_list|,
literal|true
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|int
name|column
decl|,
name|hiddenColumns
control|)
name|testWidget
operator|->
name|setColumnHidden
argument_list|(
name|column
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// make sure we don't have any previous selections hanging around
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|selectedItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|// select range and check that it is set correctly
name|testWidget
operator|->
name|setRangeSelected
argument_list|(
name|selectionRange
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|selectionRange
operator|.
name|topRow
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|topRow
argument_list|()
argument_list|,
name|selectionRange
operator|.
name|topRow
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|bottomRow
argument_list|()
argument_list|,
name|selectionRange
operator|.
name|bottomRow
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|leftColumn
argument_list|()
argument_list|,
name|selectionRange
operator|.
name|leftColumn
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|rightColumn
argument_list|()
argument_list|,
name|selectionRange
operator|.
name|rightColumn
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|selectedRanges
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
comment|// check that the correct number of items and the expected items are there
name|QList
argument_list|<
name|QTableWidgetItem
modifier|*
argument_list|>
name|selectedItems
init|=
name|testWidget
operator|->
name|selectedItems
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selectedItems
operator|.
name|count
argument_list|()
argument_list|,
name|expectedItems
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|IntPair
name|intPair
decl|,
name|expectedItems
control|)
name|QVERIFY
argument_list|(
name|selectedItems
operator|.
name|contains
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
name|intPair
operator|.
name|first
argument_list|,
name|intPair
operator|.
name|second
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check that setItemSelected agrees with selectedItems
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|testWidget
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|row
control|)
block|{
name|bool
name|hidden
init|=
literal|false
decl_stmt|;
foreach|foreach
control|(
name|int
name|hiddenRow
decl|,
name|hiddenRows
control|)
block|{
if|if
condition|(
name|hiddenRow
operator|==
name|row
condition|)
block|{
name|hidden
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|hidden
condition|)
continue|continue;
for|for
control|(
name|int
name|column
init|=
literal|0
init|;
name|column
operator|<
name|testWidget
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|column
control|)
block|{
foreach|foreach
control|(
name|int
name|hiddenColumn
decl|,
name|hiddenColumns
control|)
block|{
if|if
condition|(
name|hiddenColumn
operator|==
name|column
condition|)
block|{
name|hidden
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|hidden
condition|)
continue|continue;
name|QTableWidgetItem
modifier|*
name|item
init|=
name|testWidget
operator|->
name|item
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|&&
name|testWidget
operator|->
name|isItemSelected
argument_list|(
name|item
argument_list|)
condition|)
name|QVERIFY
argument_list|(
name|selectedItems
operator|.
name|contains
argument_list|(
name|item
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|removeRow_data
name|void
name|tst_QTableWidget
operator|::
name|removeRow_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Empty"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1x1:0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:2"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRow
name|void
name|tst_QTableWidget
operator|::
name|removeRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
comment|// set dimensions and test they are ok
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
comment|// fill table with items
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|testWidget
operator|->
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
literal|":"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove and compare the results
name|testWidget
operator|->
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
comment|// check if the correct items were removed
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|expectedRowCount
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|expectedColumnCount
condition|;
operator|++
name|c
control|)
if|if
condition|(
name|r
operator|<
name|row
condition|)
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
literal|":"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|r
operator|+
literal|1
argument_list|)
operator|+
literal|":"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumn_data
name|void
name|tst_QTableWidget
operator|::
name|removeColumn_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Empty"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1x1:0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:2"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumn
name|void
name|tst_QTableWidget
operator|::
name|removeColumn
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
comment|// set dimensions and test they are ok
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
comment|// fill table with items
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
name|testWidget
operator|->
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
literal|":"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove and compare the results
name|testWidget
operator|->
name|removeColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
comment|// check if the correct items were removed
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|expectedRowCount
condition|;
operator|++
name|r
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|expectedColumnCount
condition|;
operator|++
name|c
control|)
if|if
condition|(
name|c
operator|<
name|column
condition|)
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
literal|":"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|r
argument_list|)
operator|+
literal|":"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|c
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRow_data
name|void
name|tst_QTableWidget
operator|::
name|insertRow_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Empty"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1x1:0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:-1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|4
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|4
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:2"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|4
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:3"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:4"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|3
operator|<<
literal|3
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertRow
name|void
name|tst_QTableWidget
operator|::
name|insertRow
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
comment|// set dimensions and test they are ok
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
comment|// insert and compare the results
name|testWidget
operator|->
name|insertRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertColumn_data
name|void
name|tst_QTableWidget
operator|::
name|insertColumn_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedColumnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Empty"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1x1:0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:-1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|3
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:0"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:1"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:2"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:3"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3x3:4"
argument_list|)
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|3
operator|<<
literal|3
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertColumn
name|void
name|tst_QTableWidget
operator|::
name|insertColumn
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
comment|// set dimensions and test they are ok
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
comment|// insert and compare the results
name|testWidget
operator|->
name|insertColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|rowCount
argument_list|()
argument_list|,
name|expectedRowCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|columnCount
argument_list|()
argument_list|,
name|expectedColumnCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemStreaming_data
name|void
name|tst_QTableWidget
operator|::
name|itemStreaming_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toolTip"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Data"
argument_list|)
operator|<<
literal|"item text"
operator|<<
literal|"tool tip text"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemStreaming
name|void
name|tst_QTableWidget
operator|::
name|itemStreaming
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toolTip
argument_list|)
expr_stmt|;
name|QTableWidgetItem
name|item
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|.
name|toolTip
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|item
operator|.
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|item
operator|.
name|setToolTip
argument_list|(
name|toolTip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|.
name|text
argument_list|()
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|.
name|toolTip
argument_list|()
argument_list|,
name|toolTip
argument_list|)
expr_stmt|;
name|QByteArray
name|buffer
decl_stmt|;
name|QDataStream
name|out
argument_list|(
operator|&
name|buffer
argument_list|,
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
decl_stmt|;
name|out
operator|<<
name|item
expr_stmt|;
name|QTableWidgetItem
name|item2
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|.
name|toolTip
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buffer
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QDataStream
name|in
argument_list|(
operator|&
name|buffer
argument_list|,
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
decl_stmt|;
name|in
operator|>>
name|item2
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|.
name|text
argument_list|()
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|.
name|toolTip
argument_list|()
argument_list|,
name|toolTip
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemOwnership
name|void
name|tst_QTableWidget
operator|::
name|itemOwnership
parameter_list|()
block|{
name|QPointer
argument_list|<
name|QObjectTableItem
argument_list|>
name|item
decl_stmt|;
name|QPointer
argument_list|<
name|QObjectTableItem
argument_list|>
name|headerItem
decl_stmt|;
comment|//delete from outside
name|item
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
operator|delete
name|item
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
operator|(
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
comment|//delete vertical headeritem from outside
name|headerItem
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setVerticalHeaderItem
argument_list|(
literal|0
argument_list|,
name|headerItem
argument_list|)
expr_stmt|;
operator|delete
name|headerItem
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|verticalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
comment|//delete horizontal headeritem from outside
name|headerItem
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
name|headerItem
argument_list|)
expr_stmt|;
operator|delete
name|headerItem
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|horizontalHeaderItem
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QTableWidgetItem
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
comment|//setItem
name|item
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|item
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|//setHorizontalHeaderItem
name|headerItem
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
name|headerItem
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|headerItem
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|//setVerticalHeaderItem
name|headerItem
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setVerticalHeaderItem
argument_list|(
literal|0
argument_list|,
name|headerItem
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setVerticalHeaderItem
argument_list|(
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|headerItem
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|//takeItem
name|item
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|takeItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|item
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|item
expr_stmt|;
comment|// removeRow
name|item
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|headerItem
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setVerticalHeaderItem
argument_list|(
literal|0
argument_list|,
name|headerItem
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|removeRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|item
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|headerItem
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// removeColumn
name|item
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|headerItem
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setHorizontalHeaderItem
argument_list|(
literal|0
argument_list|,
name|headerItem
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|removeColumn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|item
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|headerItem
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// clear
name|item
operator|=
operator|new
name|QObjectTableItem
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|item
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sortItems_data
name|void
name|tst_QTableWidget
operator|::
name|sortItems_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortOrder"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"initial"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"rows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"initialHidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"expectedHidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascending"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"descending"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty table"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"half-empty table"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty column, should not sort."
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|3
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"descending with null cell, the null cell should be placed at the bottom"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|0
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|0
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|1
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascending with null cell, the null cell should be placed at the bottom"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|0
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|0
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascending with null cells, the null cells should be placed at the bottom"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|0
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|0
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|0
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|0
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascending... Check a bug in PersistentIndexes"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"3"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"2"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|<<
literal|"4"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"1"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"1"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"2"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|<<
literal|"3"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"4"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|0
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascending with some null cells inbetween"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|0
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|0
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|0
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|0
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|<<
name|IntList
argument_list|()
operator|<<
name|IntList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascending hidden"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"descending hidden"
argument_list|)
operator|<<
literal|4
operator|<<
literal|5
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"3"
operator|<<
literal|"d"
operator|<<
literal|"k"
operator|<<
literal|"o"
operator|<<
literal|"6"
operator|<<
literal|"2"
operator|<<
literal|"c"
operator|<<
literal|"9"
operator|<<
literal|"y"
operator|<<
literal|"8"
operator|<<
literal|"1"
operator|<<
literal|"b"
operator|<<
literal|"7"
operator|<<
literal|"3"
operator|<<
literal|"u"
operator|<<
literal|"0"
operator|<<
literal|"a"
operator|<<
literal|"o"
operator|<<
literal|"8"
operator|<<
literal|"k"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|3
operator|<<
literal|1
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sortItems
name|void
name|tst_QTableWidget
operator|::
name|sortItems
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortOrder
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|initial
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|rows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|initialHidden
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|expectedHidden
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setColumnCount
argument_list|(
name|columnCount
argument_list|)
expr_stmt|;
name|QAbstractItemModel
modifier|*
name|model
init|=
name|testWidget
operator|->
name|model
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QPersistentModelIndex
argument_list|>
name|persistent
decl_stmt|;
name|int
name|ti
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
block|{
name|QString
name|str
init|=
name|initial
operator|.
name|at
argument_list|(
name|ti
operator|++
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|str
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|testWidget
operator|->
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|str
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|testWidget
operator|->
name|item
argument_list|(
name|r
argument_list|,
name|sortColumn
argument_list|)
condition|)
name|persistent
operator|<<
name|model
operator|->
name|index
argument_list|(
name|r
argument_list|,
name|sortColumn
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|h
init|=
literal|0
init|;
name|h
operator|<
name|initialHidden
operator|.
name|count
argument_list|()
condition|;
operator|++
name|h
control|)
name|testWidget
operator|->
name|hideRow
argument_list|(
name|initialHidden
operator|.
name|at
argument_list|(
name|h
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|verticalHeader
argument_list|()
operator|->
name|hiddenSectionCount
argument_list|()
argument_list|,
name|initialHidden
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|sortItems
argument_list|(
name|sortColumn
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|SortOrder
argument_list|>
argument_list|(
name|sortOrder
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|te
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rows
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|columnCount
condition|;
operator|++
name|j
control|)
block|{
name|QString
name|value
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|itm
init|=
name|testWidget
operator|->
name|item
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
decl_stmt|;
if|if
condition|(
name|itm
condition|)
block|{
name|value
operator|=
name|itm
operator|->
name|text
argument_list|()
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|value
argument_list|,
name|expected
operator|.
name|at
argument_list|(
name|te
operator|++
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|persistent
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|row
argument_list|()
argument_list|,
name|rows
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
comment|//qDebug()<< "persistent"<< persistent.at(i).row()
comment|//<< "expected"<< rows.at(i);
block|}
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|expectedHidden
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isRowHidden
argument_list|(
name|expectedHidden
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setItemWithSorting_data
name|void
name|tst_QTableWidget
operator|::
name|setItemWithSorting_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortOrder"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"initialValues"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"newValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"expectedValues"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"expectedRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"reorderingExpected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x1 no change (ascending)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"1"
operator|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"2"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x1 no change (descending)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"1"
operator|<<
literal|"0"
operator|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"2"
operator|<<
literal|"0"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x1 reorder (ascending)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"1"
operator|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"1"
operator|<<
literal|"2"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x1 reorder (descending)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"1"
operator|<<
literal|"0"
operator|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"2"
operator|<<
literal|"1"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x2 no change (ascending)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"00"
operator|<<
literal|"1"
operator|<<
literal|"11"
operator|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"00"
operator|<<
literal|"2"
operator|<<
literal|"11"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x2 reorder (ascending)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"0"
operator|<<
literal|"00"
operator|<<
literal|"1"
operator|<<
literal|"11"
operator|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"2"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"1"
operator|<<
literal|"11"
operator|<<
literal|"2"
operator|<<
literal|"00"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x2 reorder (ascending, sortColumn = 1)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|1
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"00"
operator|<<
literal|"0"
operator|<<
literal|"11"
operator|<<
literal|"1"
operator|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|"2"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"11"
operator|<<
literal|"1"
operator|<<
literal|"00"
operator|<<
literal|"2"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2x2 no change (column != sortColumn)"
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|1
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"00"
operator|<<
literal|"0"
operator|<<
literal|"11"
operator|<<
literal|"1"
operator|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|"22"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"22"
operator|<<
literal|"0"
operator|<<
literal|"11"
operator|<<
literal|"1"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8x4 reorder (ascending, sortColumn = 3)"
argument_list|)
operator|<<
literal|8
operator|<<
literal|4
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|3
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"q"
operator|<<
literal|"v"
operator|<<
literal|"u"
operator|<<
literal|"0"
operator|<<
literal|"e"
operator|<<
literal|"j"
operator|<<
literal|"i"
operator|<<
literal|"10"
operator|<<
literal|"h"
operator|<<
literal|"d"
operator|<<
literal|"c"
operator|<<
literal|"12"
operator|<<
literal|"k"
operator|<<
literal|"g"
operator|<<
literal|"f"
operator|<<
literal|"14"
operator|<<
literal|"w"
operator|<<
literal|"y"
operator|<<
literal|"x"
operator|<<
literal|"2"
operator|<<
literal|"t"
operator|<<
literal|"s"
operator|<<
literal|"o"
operator|<<
literal|"4"
operator|<<
literal|"z"
operator|<<
literal|"p"
operator|<<
literal|"r"
operator|<<
literal|"6"
operator|<<
literal|"n"
operator|<<
literal|"m"
operator|<<
literal|"l"
operator|<<
literal|"8"
operator|)
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|"5"
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"q"
operator|<<
literal|"v"
operator|<<
literal|"u"
operator|<<
literal|"0"
operator|<<
literal|"e"
operator|<<
literal|"j"
operator|<<
literal|"i"
operator|<<
literal|"10"
operator|<<
literal|"k"
operator|<<
literal|"g"
operator|<<
literal|"f"
operator|<<
literal|"14"
operator|<<
literal|"w"
operator|<<
literal|"y"
operator|<<
literal|"x"
operator|<<
literal|"2"
operator|<<
literal|"t"
operator|<<
literal|"s"
operator|<<
literal|"o"
operator|<<
literal|"4"
operator|<<
literal|"h"
operator|<<
literal|"d"
operator|<<
literal|"c"
operator|<<
literal|"5"
operator|<<
literal|"z"
operator|<<
literal|"p"
operator|<<
literal|"r"
operator|<<
literal|"6"
operator|<<
literal|"n"
operator|<<
literal|"m"
operator|<<
literal|"l"
operator|<<
literal|"8"
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|5
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|6
operator|<<
literal|7
operator|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setItemWithSorting
name|void
name|tst_QTableWidget
operator|::
name|setItemWithSorting
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortOrder
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|initialValues
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|newValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|expectedValues
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|expectedRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|reorderingExpected
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QTableWidget
name|w
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QAbstractItemModel
modifier|*
name|model
init|=
name|w
operator|.
name|model
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QPersistentModelIndex
argument_list|>
name|persistent
decl_stmt|;
name|int
name|ti
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
block|{
name|QString
name|str
init|=
name|initialValues
operator|.
name|at
argument_list|(
name|ti
operator|++
argument_list|)
decl_stmt|;
name|w
operator|.
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|str
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|persistent
operator|<<
name|model
operator|->
name|index
argument_list|(
name|r
argument_list|,
name|sortColumn
argument_list|)
expr_stmt|;
block|}
name|w
operator|.
name|sortItems
argument_list|(
name|sortColumn
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|SortOrder
argument_list|>
argument_list|(
name|sortOrder
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QSignalSpy
name|dataChangedSpy
argument_list|(
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|layoutChangedSpy
argument_list|(
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|layoutChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
block|{
comment|// set a new item
name|QTableWidgetItem
modifier|*
name|item
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|newValue
argument_list|)
decl_stmt|;
name|w
operator|.
name|setItem
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// change the data of existing item
name|QTableWidgetItem
modifier|*
name|item
init|=
name|w
operator|.
name|item
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|item
operator|->
name|setText
argument_list|(
name|newValue
argument_list|)
expr_stmt|;
block|}
name|ti
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rowCount
condition|;
operator|++
name|r
control|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|columnCount
condition|;
operator|++
name|c
control|)
block|{
name|QString
name|str
init|=
name|expectedValues
operator|.
name|at
argument_list|(
name|ti
operator|++
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|item
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
operator|->
name|text
argument_list|()
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|persistent
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
block|{
name|QCOMPARE
argument_list|(
name|persistent
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|row
argument_list|()
argument_list|,
name|expectedRows
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|i
init|=
operator|(
name|persistent
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|row
argument_list|()
operator|*
name|columnCount
operator|)
operator|+
name|sortColumn
decl_stmt|;
name|QCOMPARE
argument_list|(
name|persistent
operator|.
name|at
argument_list|(
name|k
argument_list|)
operator|.
name|data
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedValues
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|==
literal|0
condition|)
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
name|reorderingExpected
condition|?
literal|0
else|:
literal|1
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layoutChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
name|reorderingExpected
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|itemData
name|void
name|tst_QTableWidget
operator|::
name|itemData
parameter_list|()
block|{
name|QTableWidget
name|widget
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|()
argument_list|)
expr_stmt|;
name|QTableWidgetItem
modifier|*
name|item
init|=
name|widget
operator|.
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|->
name|setFlags
argument_list|(
name|item
operator|->
name|flags
argument_list|()
operator||
name|Qt
operator|::
name|ItemIsEditable
argument_list|)
expr_stmt|;
name|item
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|,
name|QString
argument_list|(
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|CheckStateRole
argument_list|,
name|Qt
operator|::
name|PartiallyChecked
argument_list|)
expr_stmt|;
name|item
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
operator|+
literal|0
argument_list|,
name|QString
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
operator|+
literal|1
argument_list|,
name|QString
argument_list|(
literal|"2"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
operator|+
literal|2
argument_list|,
name|QString
argument_list|(
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
operator|+
literal|3
argument_list|,
name|QString
argument_list|(
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|QMap
argument_list|<
name|int
argument_list|,
name|QVariant
argument_list|>
name|flags
init|=
name|widget
operator|.
name|model
argument_list|()
operator|->
name|itemData
argument_list|(
name|widget
operator|.
name|model
argument_list|()
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|flags
operator|.
name|count
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|flags
index|[
operator|(
name|Qt
operator|::
name|UserRole
operator|+
literal|0
operator|)
index|]
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setItemData
name|void
name|tst_QTableWidget
operator|::
name|setItemData
parameter_list|()
block|{
name|QTableWidget
name|table
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|table
operator|.
name|setSortingEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QSignalSpy
name|dataChangedSpy
argument_list|(
name|table
operator|.
name|model
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|item
init|=
operator|new
name|QTableWidgetItem
decl_stmt|;
name|table
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QModelIndex
name|idx
init|=
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|dataChangedSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QMap
argument_list|<
name|int
argument_list|,
name|QVariant
argument_list|>
name|data
decl_stmt|;
name|data
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|,
name|QLatin1String
argument_list|(
literal|"Display"
argument_list|)
argument_list|)
expr_stmt|;
name|data
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|ToolTipRole
argument_list|,
name|QLatin1String
argument_list|(
literal|"ToolTip"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|model
argument_list|()
operator|->
name|setItemData
argument_list|(
name|idx
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|idx
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Display"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|idx
argument_list|,
name|Qt
operator|::
name|ToolTipRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"ToolTip"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|idx
argument_list|,
name|qvariant_cast
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
name|dataChangedSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|model
argument_list|()
operator|->
name|setItemData
argument_list|(
name|idx
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|data
operator|.
name|clear
argument_list|()
expr_stmt|;
name|data
operator|.
name|insert
argument_list|(
name|Qt
operator|::
name|DisplayRole
argument_list|,
name|QLatin1String
argument_list|(
literal|"dizplaye"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|model
argument_list|()
operator|->
name|setItemData
argument_list|(
name|idx
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|model
argument_list|()
operator|->
name|data
argument_list|(
name|idx
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"dizplaye"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cellWidget
name|void
name|tst_QTableWidget
operator|::
name|cellWidget
parameter_list|()
block|{
name|QTableWidget
name|table
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QWidget
name|widget
decl_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|cellWidget
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setCellWidget
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|cellWidget
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
operator|&
name|widget
argument_list|)
expr_stmt|;
name|table
operator|.
name|removeCellWidget
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|cellWidget
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task231094
name|void
name|tst_QTableWidget
operator|::
name|task231094
parameter_list|()
block|{
name|QTableWidget
name|tw
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|3
condition|;
name|x
operator|++
control|)
block|{
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
literal|5
condition|;
name|y
operator|++
control|)
block|{
name|QTableWidgetItem
modifier|*
name|twi
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|QLatin1String
argument_list|(
literal|"1"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|y
operator|==
literal|1
condition|)
name|twi
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|ItemIsEnabled
argument_list|)
expr_stmt|;
else|else
name|twi
operator|->
name|setFlags
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|tw
operator|.
name|setItem
argument_list|(
name|y
argument_list|,
name|x
argument_list|,
name|twi
argument_list|)
expr_stmt|;
block|}
block|}
name|tw
operator|.
name|setCurrentCell
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|.
name|currentRow
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|.
name|currentColumn
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//this would provoke a end-less loop
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|tw
argument_list|,
literal|'1'
argument_list|)
expr_stmt|;
comment|//all the items are disabled: the current item shouldn't have changed
name|QCOMPARE
argument_list|(
name|tw
operator|.
name|currentRow
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tw
operator|.
name|currentColumn
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task219380_removeLastRow
name|void
name|tst_QTableWidget
operator|::
name|task219380_removeLastRow
parameter_list|()
block|{
name|testWidget
operator|->
name|setColumnCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QTableWidgetItem
name|item
decl_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
literal|18
argument_list|,
literal|0
argument_list|,
operator|&
name|item
argument_list|)
expr_stmt|;
comment|//we put the item in the second last row
name|testWidget
operator|->
name|openPersistentEditor
argument_list|(
operator|&
name|item
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|scrollToBottom
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|removeRow
argument_list|(
literal|19
argument_list|)
expr_stmt|;
comment|//we remove the last row
comment|//we make sure the editor is at the cell position
name|QTRY_COMPARE
argument_list|(
name|testWidget
operator|->
name|cellWidget
argument_list|(
literal|18
argument_list|,
literal|0
argument_list|)
operator|->
name|geometry
argument_list|()
argument_list|,
name|testWidget
operator|->
name|visualItemRect
argument_list|(
operator|&
name|item
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task262056_sortDuplicate
name|void
name|tst_QTableWidget
operator|::
name|task262056_sortDuplicate
parameter_list|()
block|{
name|testWidget
operator|->
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setRowCount
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setSortingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QStringList
name|items
init|=
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"AAA"
operator|<<
literal|"BBB"
operator|<<
literal|"CCC"
operator|<<
literal|"CCC"
operator|<<
literal|"DDD"
expr|\
operator|<<
literal|"EEE"
operator|<<
literal|"FFF"
operator|<<
literal|"GGG"
operator|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|QTableWidgetItem
modifier|*
name|twi
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|items
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|twi
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setItem
argument_list|(
name|i
argument_list|,
literal|1
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QString
argument_list|(
literal|"item %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|testWidget
operator|->
name|sortItems
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|AscendingOrder
argument_list|)
expr_stmt|;
name|QSignalSpy
name|layoutChangedSpy
argument_list|(
name|testWidget
operator|->
name|model
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|layoutChanged
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|item
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|layoutChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemWithHeaderItems
name|void
name|tst_QTableWidget
operator|::
name|itemWithHeaderItems
parameter_list|()
block|{
comment|// Need a separate testcase for this because the tst_QTableWidget::item testcase
comment|// does creates QTableWidgetItems for each available cell in the table. We're testing
comment|// the case of not all available cells having a QTableWidgetItem set.
name|QTableWidget
name|table
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|item0_0
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|QTableWidgetItem
operator|::
name|UserType
argument_list|)
decl_stmt|;
name|table
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|item0_0
argument_list|)
expr_stmt|;
name|QTableWidgetItem
modifier|*
name|item1_0
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|QTableWidgetItem
operator|::
name|UserType
argument_list|)
decl_stmt|;
name|table
operator|.
name|setItem
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|item1_0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|item
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QTableWidgetItem
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TestTableWidget
class|class
name|TestTableWidget
super|:
specifier|public
name|QTableWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|TestTableWidget
name|TestTableWidget
parameter_list|(
name|int
name|rows
parameter_list|,
name|int
name|columns
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QTableWidget
argument_list|(
name|rows
argument_list|,
name|columns
argument_list|,
name|parent
argument_list|)
block|{     }
using|using
name|QTableWidget
operator|::
name|mimeData
using|;
using|using
name|QTableWidget
operator|::
name|indexFromItem
using|;
block|}
class|;
end_class
begin_function
DECL|function|mimeData
name|void
name|tst_QTableWidget
operator|::
name|mimeData
parameter_list|()
block|{
name|TestTableWidget
name|table
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|10
condition|;
operator|++
name|x
control|)
block|{
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
literal|10
condition|;
operator|++
name|y
control|)
block|{
name|QTableWidgetItem
modifier|*
name|item
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|QStringLiteral
argument_list|(
literal|"123"
argument_list|)
argument_list|)
decl_stmt|;
name|table
operator|.
name|setItem
argument_list|(
name|y
argument_list|,
name|x
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
block|}
name|QList
argument_list|<
name|QTableWidgetItem
modifier|*
argument_list|>
name|tableWidgetItemList
decl_stmt|;
name|QModelIndexList
name|modelIndexList
decl_stmt|;
comment|// do these checks more than once to ensure that the "cached indexes" work as expected
name|QVERIFY
argument_list|(
operator|!
name|table
operator|.
name|mimeData
argument_list|(
name|tableWidgetItemList
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|table
operator|.
name|model
argument_list|()
operator|->
name|mimeData
argument_list|(
name|modelIndexList
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|table
operator|.
name|model
argument_list|()
operator|->
name|mimeData
argument_list|(
name|modelIndexList
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|table
operator|.
name|mimeData
argument_list|(
name|tableWidgetItemList
argument_list|)
argument_list|)
expr_stmt|;
name|tableWidgetItemList
operator|<<
name|table
operator|.
name|item
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|modelIndexList
operator|<<
name|table
operator|.
name|indexFromItem
argument_list|(
name|table
operator|.
name|item
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QMimeData
modifier|*
name|data
decl_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|=
name|table
operator|.
name|mimeData
argument_list|(
name|tableWidgetItemList
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|data
expr_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|=
name|table
operator|.
name|model
argument_list|()
operator|->
name|mimeData
argument_list|(
name|modelIndexList
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|data
expr_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|=
name|table
operator|.
name|model
argument_list|()
operator|->
name|mimeData
argument_list|(
name|modelIndexList
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|data
expr_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|=
name|table
operator|.
name|mimeData
argument_list|(
name|tableWidgetItemList
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|data
expr_stmt|;
comment|// check the saved data is actually the same
name|QMimeData
modifier|*
name|data2
decl_stmt|;
name|data
operator|=
name|table
operator|.
name|mimeData
argument_list|(
name|tableWidgetItemList
argument_list|)
expr_stmt|;
name|data2
operator|=
name|table
operator|.
name|model
argument_list|()
operator|->
name|mimeData
argument_list|(
name|modelIndexList
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|format
init|=
name|QStringLiteral
argument_list|(
literal|"application/x-qabstractitemmodeldatalist"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|->
name|hasFormat
argument_list|(
name|format
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|data2
operator|->
name|hasFormat
argument_list|(
name|format
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|data
operator|->
name|data
argument_list|(
name|format
argument_list|)
argument_list|,
name|data2
operator|->
name|data
argument_list|(
name|format
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|data
expr_stmt|;
operator|delete
name|data2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectedRowAfterSorting
name|void
name|tst_QTableWidget
operator|::
name|selectedRowAfterSorting
parameter_list|()
block|{
name|TestTableWidget
name|table
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|table
operator|.
name|setSelectionBehavior
argument_list|(
name|QAbstractItemView
operator|::
name|SelectRows
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
literal|3
condition|;
name|r
operator|++
control|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
literal|3
condition|;
name|c
operator|++
control|)
name|table
operator|.
name|setItem
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QStringLiteral
argument_list|(
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QHeaderView
modifier|*
name|localHorizontalHeader
init|=
name|table
operator|.
name|horizontalHeader
argument_list|()
decl_stmt|;
name|localHorizontalHeader
operator|->
name|setSortIndicator
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|DescendingOrder
argument_list|)
expr_stmt|;
name|table
operator|.
name|setProperty
argument_list|(
literal|"sortingEnabled"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|table
operator|.
name|selectRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|table
operator|.
name|item
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|->
name|setText
argument_list|(
literal|"9"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|table
operator|.
name|selectedItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QTableWidgetItem
modifier|*
name|item
decl|,
name|table
operator|.
name|selectedItems
argument_list|()
control|)
block|{
name|QCOMPARE
argument_list|(
name|item
operator|->
name|row
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTableWidget
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtablewidget.moc"
end_include
end_unit
