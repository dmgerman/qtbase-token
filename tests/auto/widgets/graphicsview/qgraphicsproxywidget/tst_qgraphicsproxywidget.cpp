begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<private/qgraphicsproxywidget_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qlayoutengine_p.h>
end_include
begin_comment
comment|// qSmartMin functions...
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_MAC
argument_list|)
end_if
begin_include
include|#
directive|include
file|<QMacStyle>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"../../../qtest-config.h"
end_include
begin_function
DECL|function|sendMouseMove
specifier|static
name|void
name|sendMouseMove
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|point
parameter_list|,
name|Qt
operator|::
name|MouseButton
name|button
init|=
name|Qt
operator|::
name|NoButton
parameter_list|)
block|{
name|QMouseEvent
name|event
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|point
argument_list|,
name|widget
operator|->
name|mapToGlobal
argument_list|(
name|point
argument_list|)
argument_list|,
name|button
argument_list|,
name|button
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|widget
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*     Notes:      1) The proxy and the widget geometries are linked.        proxy resize => widget resize => stop (no livelock)        widget resize => proxy resize => stop (no livelock)      2) As far as possible, the properties are linked.        proxy enable => widget enable => stop        widget disabled => proxy disabled => stop      3) Windowed state is linked        Windowed proxy state => windowed widget state => stop        Windowed widget state => windowed proxy state => stop */
end_comment
begin_class
DECL|class|EventSpy
class|class
name|EventSpy
super|:
specifier|public
name|QObject
block|{
public|public:
DECL|function|EventSpy
name|EventSpy
parameter_list|(
name|QObject
modifier|*
name|receiver
parameter_list|)
block|{
name|receiver
operator|->
name|installEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|member|counts
name|QMap
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|,
name|int
argument_list|>
name|counts
decl_stmt|;
protected|protected:
DECL|function|eventFilter
name|bool
name|eventFilter
parameter_list|(
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
operator|++
name|counts
index|[
name|event
operator|->
name|type
argument_list|()
index|]
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|tst_QGraphicsProxyWidget
class|class
name|tst_QGraphicsProxyWidget
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|qgraphicsproxywidget_data
parameter_list|()
function_decl|;
name|void
name|qgraphicsproxywidget
parameter_list|()
function_decl|;
name|void
name|paint
parameter_list|()
function_decl|;
name|void
name|paint_2
parameter_list|()
function_decl|;
name|void
name|setWidget_data
parameter_list|()
function_decl|;
name|void
name|setWidget
parameter_list|()
function_decl|;
name|void
name|eventFilter_data
parameter_list|()
function_decl|;
name|void
name|eventFilter
parameter_list|()
function_decl|;
name|void
name|focusInEvent_data
parameter_list|()
function_decl|;
name|void
name|focusInEvent
parameter_list|()
function_decl|;
name|void
name|focusInEventNoWidget
parameter_list|()
function_decl|;
name|void
name|focusNextPrevChild_data
parameter_list|()
function_decl|;
name|void
name|focusNextPrevChild
parameter_list|()
function_decl|;
name|void
name|focusOutEvent_data
parameter_list|()
function_decl|;
name|void
name|focusOutEvent
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QTEST_NO_CURSOR
name|void
name|hoverEnterLeaveEvent_data
parameter_list|()
function_decl|;
name|void
name|hoverEnterLeaveEvent
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|hoverMoveEvent_data
parameter_list|()
function_decl|;
name|void
name|hoverMoveEvent
parameter_list|()
function_decl|;
name|void
name|keyPressEvent_data
parameter_list|()
function_decl|;
name|void
name|keyPressEvent
parameter_list|()
function_decl|;
name|void
name|keyReleaseEvent_data
parameter_list|()
function_decl|;
name|void
name|keyReleaseEvent
parameter_list|()
function_decl|;
name|void
name|mouseDoubleClickEvent_data
parameter_list|()
function_decl|;
name|void
name|mouseDoubleClickEvent
parameter_list|()
function_decl|;
name|void
name|mousePressReleaseEvent_data
parameter_list|()
function_decl|;
name|void
name|mousePressReleaseEvent
parameter_list|()
function_decl|;
name|void
name|resizeEvent_data
parameter_list|()
function_decl|;
name|void
name|resizeEvent
parameter_list|()
function_decl|;
name|void
name|paintEvent
parameter_list|()
function_decl|;
name|void
name|wheelEvent
parameter_list|()
function_decl|;
name|void
name|sizeHint_data
parameter_list|()
function_decl|;
name|void
name|sizeHint
parameter_list|()
function_decl|;
name|void
name|sizePolicy
parameter_list|()
function_decl|;
name|void
name|minimumSize
parameter_list|()
function_decl|;
name|void
name|maximumSize
parameter_list|()
function_decl|;
name|void
name|scrollUpdate
parameter_list|()
function_decl|;
name|void
name|setWidget_simple
parameter_list|()
function_decl|;
name|void
name|setWidget_ownership
parameter_list|()
function_decl|;
name|void
name|resize_simple_data
parameter_list|()
function_decl|;
name|void
name|resize_simple
parameter_list|()
function_decl|;
name|void
name|symmetricMove
parameter_list|()
function_decl|;
name|void
name|symmetricResize
parameter_list|()
function_decl|;
name|void
name|symmetricEnabled
parameter_list|()
function_decl|;
name|void
name|symmetricVisible
parameter_list|()
function_decl|;
name|void
name|tabFocus_simpleWidget
parameter_list|()
function_decl|;
name|void
name|tabFocus_simpleTwoWidgets
parameter_list|()
function_decl|;
name|void
name|tabFocus_complexWidget
parameter_list|()
function_decl|;
name|void
name|tabFocus_complexTwoWidgets
parameter_list|()
function_decl|;
name|void
name|setFocus_simpleWidget
parameter_list|()
function_decl|;
name|void
name|setFocus_simpleTwoWidgets
parameter_list|()
function_decl|;
name|void
name|setFocus_complexTwoWidgets
parameter_list|()
function_decl|;
name|void
name|popup_basic
parameter_list|()
function_decl|;
name|void
name|popup_subwidget
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QTEST_NO_CURSOR
name|void
name|changingCursor_basic
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|tooltip_basic
parameter_list|()
function_decl|;
name|void
name|childPos_data
parameter_list|()
function_decl|;
name|void
name|childPos
parameter_list|()
function_decl|;
name|void
name|autoShow
parameter_list|()
function_decl|;
name|void
name|windowOpacity
parameter_list|()
function_decl|;
name|void
name|stylePropagation
parameter_list|()
function_decl|;
name|void
name|palettePropagation
parameter_list|()
function_decl|;
name|void
name|fontPropagation
parameter_list|()
function_decl|;
name|void
name|dontCrashWhenDie
parameter_list|()
function_decl|;
name|void
name|createProxyForChildWidget
parameter_list|()
function_decl|;
name|void
name|actionsContextMenu
parameter_list|()
function_decl|;
name|void
name|actionsContextMenu_data
parameter_list|()
function_decl|;
name|void
name|deleteProxyForChildWidget
parameter_list|()
function_decl|;
name|void
name|bypassGraphicsProxyWidget_data
parameter_list|()
function_decl|;
name|void
name|bypassGraphicsProxyWidget
parameter_list|()
function_decl|;
name|void
name|dragDrop
parameter_list|()
function_decl|;
name|void
name|windowFlags_data
parameter_list|()
function_decl|;
name|void
name|windowFlags
parameter_list|()
function_decl|;
name|void
name|comboboxWindowFlags
parameter_list|()
function_decl|;
name|void
name|updateAndDelete
parameter_list|()
function_decl|;
name|void
name|inputMethod
parameter_list|()
function_decl|;
name|void
name|clickFocus
parameter_list|()
function_decl|;
name|void
name|windowFrameMargins
parameter_list|()
function_decl|;
name|void
name|QTBUG_6986_sendMouseEventToAlienWidget
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Subclass that exposes the protected functions.
end_comment
begin_class
DECL|class|SubQGraphicsProxyWidget
class|class
name|SubQGraphicsProxyWidget
super|:
specifier|public
name|QGraphicsProxyWidget
block|{
public|public:
DECL|function|SubQGraphicsProxyWidget
name|SubQGraphicsProxyWidget
parameter_list|(
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsProxyWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|paintCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|keyPress
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|focusOut
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|call_eventFilter
name|bool
name|call_eventFilter
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|eventFilter
argument_list|(
name|object
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|function|call_focusInEvent
name|void
name|call_focusInEvent
parameter_list|(
name|QFocusEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|focusInEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_focusNextPrevChild
name|bool
name|call_focusNextPrevChild
parameter_list|(
name|bool
name|next
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|focusNextPrevChild
argument_list|(
name|next
argument_list|)
return|;
block|}
DECL|function|call_focusOutEvent
name|void
name|call_focusOutEvent
parameter_list|(
name|QFocusEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|focusOutEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_hideEvent
name|void
name|call_hideEvent
parameter_list|(
name|QHideEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|hideEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_hoverEnterEvent
name|void
name|call_hoverEnterEvent
parameter_list|(
name|QGraphicsSceneHoverEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|hoverEnterEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_hoverLeaveEvent
name|void
name|call_hoverLeaveEvent
parameter_list|(
name|QGraphicsSceneHoverEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|hoverLeaveEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_hoverMoveEvent
name|void
name|call_hoverMoveEvent
parameter_list|(
name|QGraphicsSceneHoverEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|hoverMoveEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_keyPressEvent
name|void
name|call_keyPressEvent
parameter_list|(
name|QKeyEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|keyPressEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_keyReleaseEvent
name|void
name|call_keyReleaseEvent
parameter_list|(
name|QKeyEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|keyReleaseEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_mouseDoubleClickEvent
name|void
name|call_mouseDoubleClickEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|mouseDoubleClickEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_mouseMoveEvent
name|void
name|call_mouseMoveEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|mouseMoveEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_mousePressEvent
name|void
name|call_mousePressEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|mousePressEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_mouseReleaseEvent
name|void
name|call_mouseReleaseEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|mouseReleaseEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_resizeEvent
name|void
name|call_resizeEvent
parameter_list|(
name|QGraphicsSceneResizeEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|resizeEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|call_sizeHint
name|QSizeF
name|call_sizeHint
parameter_list|(
name|Qt
operator|::
name|SizeHint
name|which
parameter_list|,
name|QSizeF
specifier|const
modifier|&
name|constraint
init|=
name|QSizeF
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|sizeHint
argument_list|(
name|which
argument_list|,
name|constraint
argument_list|)
return|;
block|}
DECL|function|call_showEvent
name|void
name|call_showEvent
parameter_list|(
name|QShowEvent
modifier|*
name|event
parameter_list|)
block|{
return|return
name|SubQGraphicsProxyWidget
operator|::
name|showEvent
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|)
block|{
name|paintCount
operator|++
expr_stmt|;
name|QGraphicsProxyWidget
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
DECL|function|focusOutEvent
name|void
name|focusOutEvent
parameter_list|(
name|QFocusEvent
modifier|*
name|event
parameter_list|)
block|{
name|focusOut
operator|++
expr_stmt|;
name|QGraphicsProxyWidget
operator|::
name|focusOutEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|function|eventFilter
name|bool
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|KeyPress
operator|&&
name|object
operator|==
name|widget
argument_list|()
condition|)
name|keyPress
operator|++
expr_stmt|;
return|return
name|QGraphicsProxyWidget
operator|::
name|eventFilter
argument_list|(
name|object
argument_list|,
name|event
argument_list|)
return|;
block|}
DECL|member|paintCount
name|int
name|paintCount
decl_stmt|;
DECL|member|keyPress
name|int
name|keyPress
decl_stmt|;
DECL|member|focusOut
name|int
name|focusOut
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|WheelWidget
class|class
name|WheelWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|WheelWidget
name|WheelWidget
parameter_list|()
member_init_list|:
name|wheelEventCalled
argument_list|(
literal|false
argument_list|)
block|{
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|WheelFocus
argument_list|)
expr_stmt|;
block|}
DECL|function|wheelEvent
specifier|virtual
name|void
name|wheelEvent
parameter_list|(
name|QWheelEvent
modifier|*
name|event
parameter_list|)
block|{
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
name|wheelEventCalled
operator|=
literal|true
expr_stmt|;
block|}
DECL|member|wheelEventCalled
name|bool
name|wheelEventCalled
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// This will be called before the first test function is executed.
end_comment
begin_comment
comment|// It is only called once.
end_comment
begin_function
DECL|function|initTestCase
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|initTestCase
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//disable magic for WindowsCE
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_comment
comment|// This will be called after the last test function is executed.
end_comment
begin_comment
comment|// It is only called once.
end_comment
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_comment
comment|// This will be called before each test function is executed.
end_comment
begin_function
DECL|function|init
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_comment
comment|// This will be called after every test function.
end_comment
begin_function
DECL|function|cleanup
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|qgraphicsproxywidget_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|qgraphicsproxywidget_data
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|qgraphicsproxywidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|qgraphicsproxywidget
parameter_list|()
block|{
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|proxy
operator|.
name|paint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|.
name|type
argument_list|()
operator|==
name|QGraphicsProxyWidget
operator|::
name|Type
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|widget
argument_list|()
argument_list|)
expr_stmt|;
name|QEvent
name|event
argument_list|(
name|QEvent
operator|::
name|None
argument_list|)
decl_stmt|;
name|proxy
operator|.
name|call_eventFilter
argument_list|(
literal|0
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QFocusEvent
name|focusEvent
argument_list|(
name|QEvent
operator|::
name|FocusIn
argument_list|)
decl_stmt|;
name|focusEvent
operator|.
name|ignore
argument_list|()
expr_stmt|;
name|proxy
operator|.
name|call_focusInEvent
argument_list|(
operator|&
name|focusEvent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|focusEvent
operator|.
name|isAccepted
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|call_focusNextPrevChild
argument_list|(
literal|false
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|call_focusNextPrevChild
argument_list|(
literal|true
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_focusOutEvent
argument_list|(
operator|&
name|focusEvent
argument_list|)
expr_stmt|;
name|QHideEvent
name|hideEvent
decl_stmt|;
name|proxy
operator|.
name|call_hideEvent
argument_list|(
operator|&
name|hideEvent
argument_list|)
expr_stmt|;
name|QGraphicsSceneHoverEvent
name|hoverEvent
decl_stmt|;
name|proxy
operator|.
name|call_hoverEnterEvent
argument_list|(
operator|&
name|hoverEvent
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_hoverLeaveEvent
argument_list|(
operator|&
name|hoverEvent
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_hoverMoveEvent
argument_list|(
operator|&
name|hoverEvent
argument_list|)
expr_stmt|;
name|QKeyEvent
name|keyEvent
argument_list|(
name|QEvent
operator|::
name|KeyPress
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|proxy
operator|.
name|call_keyPressEvent
argument_list|(
operator|&
name|keyEvent
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_keyReleaseEvent
argument_list|(
operator|&
name|keyEvent
argument_list|)
expr_stmt|;
name|QGraphicsSceneMouseEvent
name|mouseEvent
decl_stmt|;
name|proxy
operator|.
name|call_mouseDoubleClickEvent
argument_list|(
operator|&
name|mouseEvent
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_mouseMoveEvent
argument_list|(
operator|&
name|mouseEvent
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_mousePressEvent
argument_list|(
operator|&
name|mouseEvent
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_mouseReleaseEvent
argument_list|(
operator|&
name|mouseEvent
argument_list|)
expr_stmt|;
name|QGraphicsSceneResizeEvent
name|resizeEvent
decl_stmt|;
name|proxy
operator|.
name|call_resizeEvent
argument_list|(
operator|&
name|resizeEvent
argument_list|)
expr_stmt|;
name|QShowEvent
name|showEvent
decl_stmt|;
name|proxy
operator|.
name|call_showEvent
argument_list|(
operator|&
name|showEvent
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_sizeHint
argument_list|(
name|Qt
operator|::
name|PreferredSize
argument_list|,
name|QSizeF
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// public void paint(QPainter* painter, QStyleOptionGraphicsItem const* option, QWidget* widget)
end_comment
begin_function
DECL|function|paint
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|paint
parameter_list|()
block|{
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|proxy
operator|.
name|paint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MyProxyWidget
class|class
name|MyProxyWidget
super|:
specifier|public
name|QGraphicsProxyWidget
block|{
public|public:
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
comment|// Make sure QGraphicsProxyWidget::paint does not modify the render hints set on the painter.
name|painter
operator|->
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|Antialiasing
operator||
name|QPainter
operator|::
name|SmoothPixmapTransform
operator||
name|QPainter
operator|::
name|NonCosmeticDefaultPen
operator||
name|QPainter
operator|::
name|TextAntialiasing
argument_list|)
expr_stmt|;
specifier|const
name|QPainter
operator|::
name|RenderHints
name|oldRenderHints
init|=
name|painter
operator|->
name|renderHints
argument_list|()
decl_stmt|;
name|QGraphicsProxyWidget
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|->
name|renderHints
argument_list|()
argument_list|,
name|oldRenderHints
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|paint_2
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|paint_2
parameter_list|()
block|{
name|MyProxyWidget
modifier|*
name|proxyWidget
init|=
operator|new
name|MyProxyWidget
decl_stmt|;
name|proxyWidget
operator|->
name|setWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxyWidget
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setSceneRect
argument_list|(
name|scene
operator|.
name|itemsBoundingRect
argument_list|()
argument_list|)
expr_stmt|;
comment|// Trigger repaint.
name|QPixmap
name|pixmap
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
operator|.
name|toRect
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|scene
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setWidget_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|setWidget_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"widgetExists"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"insertWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasParent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"proxyHasParent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setWidget(0)"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setWidget(widget)"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setWidget(widgetWParent)"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setWidget(1), setWidget(0)"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setWidget(1), setWidget(widget)"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setWidget(1), setWidget(widgetWParent)"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"p setWidget(0)"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"p setWidget(widget)"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"p setWidget(widgetWParent)"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"p setWidget(1), setWidget(0)"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"p setWidget(1), setWidget(widget)"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"p setWidget(1), setWidget(widgetWParent)"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_comment
comment|// public void setWidget(QWidget* widget)
end_comment
begin_function
DECL|function|setWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|setWidget
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|widgetExists
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|insertWidget
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasParent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|proxyHasParent
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|SubQGraphicsProxyWidget
argument_list|>
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|SubQGraphicsProxyWidget
name|parentProxy
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
operator|&
name|parentProxy
argument_list|)
expr_stmt|;
if|if
condition|(
name|proxyHasParent
condition|)
name|proxy
operator|->
name|setParent
argument_list|(
operator|&
name|parentProxy
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QWidget
argument_list|>
name|existingSubWidget
init|=
operator|new
name|QWidget
decl_stmt|;
name|proxy
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|widgetExists
condition|)
block|{
name|existingSubWidget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|existingSubWidget
argument_list|)
expr_stmt|;
block|}
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
ifndef|#
directive|ifndef
name|QTEST_NO_CURSOR
name|widget
operator|->
name|setCursor
argument_list|(
name|Qt
operator|::
name|IBeamCursor
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|widget
operator|->
name|setPalette
argument_list|(
name|QPalette
argument_list|(
name|Qt
operator|::
name|magenta
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|QCleanlooksStyle
name|cleanlooksStyle
decl_stmt|;
name|widget
operator|->
name|setStyle
argument_list|(
operator|&
name|cleanlooksStyle
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setFont
argument_list|(
name|QFont
argument_list|(
literal|"Times"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|widget
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|widget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|325
argument_list|,
literal|241
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setMinimumSize
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setMaximumSize
argument_list|(
literal|1000
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|TabFocus
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setContentsMargins
argument_list|(
literal|10
argument_list|,
literal|29
argument_list|,
literal|19
argument_list|,
literal|81
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setFocus
argument_list|(
name|Qt
operator|::
name|TabFocusReason
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|widget
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
name|parentWidget
decl_stmt|;
if|if
condition|(
name|hasParent
condition|)
name|widget
operator|->
name|setParent
argument_list|(
operator|&
name|parentWidget
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|subWidget
init|=
name|insertWidget
condition|?
name|widget
else|:
literal|0
decl_stmt|;
name|bool
name|shouldBeInsertable
init|=
operator|!
name|hasParent
operator|&&
name|subWidget
decl_stmt|;
if|if
condition|(
name|shouldBeInsertable
condition|)
name|subWidget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|subWidget
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldBeInsertable
condition|)
block|{
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
argument_list|,
name|subWidget
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|subWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|subWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|acceptHoverEvents
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QTEST_NO_CURSOR
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasCursor
argument_list|()
argument_list|)
expr_stmt|;
comment|// These should match
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|widget
operator|->
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|//###QCOMPARE(proxy->palette(), widget->palette());
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|layoutDirection
argument_list|()
argument_list|,
name|widget
operator|->
name|layoutDirection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|style
argument_list|()
argument_list|,
name|widget
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|isVisible
argument_list|()
argument_list|,
name|widget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|isEnabled
argument_list|()
argument_list|,
name|widget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|flags
argument_list|()
operator|&
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|effectiveSizeHint
argument_list|(
name|Qt
operator|::
name|MinimumSize
argument_list|)
operator|.
name|toSize
argument_list|()
argument_list|,
name|qSmartMinSize
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|minimumSize
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|qSmartMinSize
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|maximumSize
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|1000
argument_list|,
literal|2000
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|effectiveSizeHint
argument_list|(
name|Qt
operator|::
name|PreferredSize
argument_list|)
operator|.
name|toSize
argument_list|()
argument_list|,
name|qSmartMinSize
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|widget
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|rect
argument_list|()
operator|.
name|toRect
argument_list|()
argument_list|,
name|widget
operator|->
name|rect
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|focusPolicy
argument_list|()
argument_list|,
name|Qt
operator|::
name|WheelFocus
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|acceptsHoverEvents
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// to get widget enter events
name|int
name|left
decl_stmt|,
name|top
decl_stmt|,
name|right
decl_stmt|,
name|bottom
decl_stmt|;
name|widget
operator|->
name|getContentsMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
name|qreal
name|rleft
decl_stmt|,
name|rtop
decl_stmt|,
name|rright
decl_stmt|,
name|rbottom
decl_stmt|;
name|proxy
operator|->
name|getContentsMargins
argument_list|(
operator|&
name|rleft
argument_list|,
operator|&
name|rtop
argument_list|,
operator|&
name|rright
argument_list|,
operator|&
name|rbottom
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|qreal
operator|)
name|left
argument_list|,
name|rleft
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|qreal
operator|)
name|top
argument_list|,
name|rtop
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|qreal
operator|)
name|right
argument_list|,
name|rright
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|qreal
operator|)
name|bottom
argument_list|,
name|rbottom
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// proxy shouldn't mess with the widget if it can't insert it.
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|acceptHoverEvents
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|subWidget
condition|)
block|{
name|QVERIFY
argument_list|(
operator|!
name|subWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|subWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|)
expr_stmt|;
comment|// reset
name|subWidget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|widgetExists
condition|)
block|{
name|QCOMPARE
argument_list|(
name|existingSubWidget
operator|->
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|existingSubWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|existingSubWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasParent
condition|)
name|widget
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
if|if
condition|(
name|shouldBeInsertable
condition|)
name|QVERIFY
argument_list|(
operator|!
name|proxy
argument_list|)
expr_stmt|;
operator|delete
name|existingSubWidget
expr_stmt|;
if|if
condition|(
operator|!
name|shouldBeInsertable
condition|)
block|{
name|QVERIFY
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
operator|delete
name|proxy
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|proxy
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QEvent::Type
argument_list|)
end_macro
begin_function
DECL|function|eventFilter_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|eventFilter_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
literal|"eventType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"fromObject"
argument_list|)
expr_stmt|;
comment|// big grin evil
name|QTest
operator|::
name|newRow
argument_list|(
literal|"none"
argument_list|)
operator|<<
name|QEvent
operator|::
name|None
operator|<<
literal|false
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|bool
name|fromObject
init|=
operator|(
name|i
operator|==
literal|0
operator|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"resize %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|Resize
operator|<<
name|fromObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"move %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|Move
operator|<<
name|fromObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"hide %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|Hide
operator|<<
name|fromObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"show %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|Show
operator|<<
name|fromObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"enabled %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|EnabledChange
operator|<<
name|fromObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"focusIn %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|FocusIn
operator|<<
name|fromObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"focusOut %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|FocusOut
operator|<<
name|fromObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"keyPress %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fromObject
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|QEvent
operator|::
name|KeyPress
operator|<<
name|fromObject
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// protected bool eventFilter(QObject* object, QEvent* event)
end_comment
begin_function
DECL|function|eventFilter
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|eventFilter
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|,
name|eventType
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|fromObject
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QEvent
name|windowActivate
argument_list|(
name|QEvent
operator|::
name|WindowActivate
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|windowActivate
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
decl_stmt|;
name|widget
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|TabFocus
argument_list|)
expr_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// mirror whatever is happening to the widget
comment|// don't get in a loop
switch|switch
condition|(
name|eventType
condition|)
block|{
case|case
name|QEvent
operator|::
name|None
case|:
block|{
name|QEvent
name|event
argument_list|(
name|QEvent
operator|::
name|None
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|call_eventFilter
argument_list|(
name|widget
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QEvent
operator|::
name|Resize
case|:
block|{
name|QSize
name|newSize
init|=
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
if|if
condition|(
name|fromObject
condition|)
block|{
name|widget
operator|->
name|resize
argument_list|(
name|newSize
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|proxy
operator|->
name|resize
argument_list|(
name|newSize
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|newSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|size
argument_list|()
argument_list|,
name|newSize
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QEvent
operator|::
name|Move
case|:
block|{
name|QPoint
name|newPoint
init|=
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
if|if
condition|(
name|fromObject
condition|)
block|{
name|widget
operator|->
name|move
argument_list|(
name|newPoint
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|proxy
operator|->
name|setPos
argument_list|(
name|newPoint
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|pos
argument_list|()
operator|.
name|toPoint
argument_list|()
argument_list|,
name|newPoint
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|pos
argument_list|()
argument_list|,
name|newPoint
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QEvent
operator|::
name|Hide
case|:
block|{
comment|// A hide event can only come from a widget
if|if
condition|(
name|fromObject
condition|)
block|{
name|widget
operator|->
name|setFocus
argument_list|(
name|Qt
operator|::
name|TabFocusReason
argument_list|)
expr_stmt|;
name|widget
operator|->
name|hide
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|QHideEvent
name|event
decl_stmt|;
name|proxy
operator|->
name|call_eventFilter
argument_list|(
name|widget
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QEvent
operator|::
name|Show
case|:
block|{
comment|// A show event can either come from a widget or somewhere else
name|widget
operator|->
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|fromObject
condition|)
block|{
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|QShowEvent
name|event
decl_stmt|;
name|proxy
operator|->
name|call_eventFilter
argument_list|(
name|widget
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|QEvent
operator|::
name|EnabledChange
case|:
block|{
name|widget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|fromObject
condition|)
block|{
name|widget
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|isEnabled
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|isEnabled
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QEvent
name|event
argument_list|(
name|QEvent
operator|::
name|EnabledChange
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|call_eventFilter
argument_list|(
name|widget
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
comment|// match the widget not the event
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|isEnabled
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|QEvent
operator|::
name|FocusIn
case|:
block|{
if|if
condition|(
name|fromObject
condition|)
block|{
name|widget
operator|->
name|setFocus
argument_list|(
name|Qt
operator|::
name|TabFocusReason
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|QEvent
operator|::
name|FocusOut
case|:
block|{
name|widget
operator|->
name|setFocus
argument_list|(
name|Qt
operator|::
name|TabFocusReason
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|fromObject
condition|)
block|{
name|widget
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
case|case
name|QEvent
operator|::
name|KeyPress
case|:
block|{
if|if
condition|(
name|fromObject
condition|)
block|{
name|QTest
operator|::
name|keyPress
argument_list|(
name|widget
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QKeyEvent
name|event
argument_list|(
name|QEvent
operator|::
name|KeyPress
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|call_eventFilter
argument_list|(
name|widget
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|keyPress
argument_list|,
literal|1
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
break|break;
block|}
block|}
end_function
begin_function
DECL|function|focusInEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|focusInEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"widgetHasFocus"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"widgetCanHaveFocus"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no focus, can't get"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no focus, can get"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"has focus, can't get"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"has focus, can get"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
comment|// ### add test for widget having a focusNextPrevChild
block|}
end_function
begin_comment
comment|// protected void focusInEvent(QFocusEvent* event)
end_comment
begin_function
DECL|function|focusInEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|focusInEvent
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WIN
comment|// Fails on Windows due QPlatformWindow::isActive() check required for embedded native widgets.
comment|// Since the test is apparently broken anyway, just skip it.
name|QSKIP
argument_list|(
literal|"Broken test."
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// ### This test is just plain old broken
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|widgetHasFocus
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|widgetCanHaveFocus
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QEvent
name|windowActivate
argument_list|(
name|QEvent
operator|::
name|WindowActivate
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|windowActivate
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|proxy
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|widgetCanHaveFocus
condition|)
name|widget
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|WheelFocus
argument_list|)
expr_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
name|widgetHasFocus
condition|)
name|widget
operator|->
name|setFocus
argument_list|(
name|Qt
operator|::
name|TabFocusReason
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//<- shouldn't need to do this
comment|// ### This test is just plain old broken - sending a focus in event
comment|// does not cause items to gain input focus. The widget has focus
comment|// because the proxy has focus, not because it got this event.
name|QFocusEvent
name|event
argument_list|(
name|QEvent
operator|::
name|FocusIn
argument_list|,
name|Qt
operator|::
name|TabFocusReason
argument_list|)
decl_stmt|;
name|event
operator|.
name|ignore
argument_list|()
expr_stmt|;
name|proxy
operator|->
name|call_focusInEvent
argument_list|(
operator|&
name|event
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|->
name|hasFocus
argument_list|()
argument_list|,
name|widgetCanHaveFocus
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusInEventNoWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|focusInEventNoWidget
parameter_list|()
block|{
name|QGraphicsView
name|view
decl_stmt|;
name|QGraphicsScene
name|scene
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|proxy
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|proxy
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//<- shouldn't need to do this
name|QFocusEvent
name|event
argument_list|(
name|QEvent
operator|::
name|FocusIn
argument_list|,
name|Qt
operator|::
name|TabFocusReason
argument_list|)
decl_stmt|;
name|event
operator|.
name|ignore
argument_list|()
expr_stmt|;
comment|//should not crash
name|proxy
operator|->
name|call_focusInEvent
argument_list|(
operator|&
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusNextPrevChild_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|focusNextPrevChild_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasScene"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"next"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"focusNextPrevChild"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
literal|2
condition|;
operator|++
name|k
control|)
block|{
name|bool
name|next
init|=
operator|(
name|i
operator|==
literal|0
operator|)
decl_stmt|;
name|bool
name|hasWidget
init|=
operator|(
name|j
operator|==
literal|0
operator|)
decl_stmt|;
name|bool
name|hasScene
init|=
operator|(
name|k
operator|==
literal|0
operator|)
decl_stmt|;
name|bool
name|result
init|=
name|hasScene
operator|&&
name|hasWidget
decl_stmt|;
name|QString
name|name
init|=
name|QString
argument_list|(
literal|"Forward: %1, hasWidget: %2, hasScene: %3, result: %4"
argument_list|)
operator|.
name|arg
argument_list|(
name|next
argument_list|)
operator|.
name|arg
argument_list|(
name|hasWidget
argument_list|)
operator|.
name|arg
argument_list|(
name|hasScene
argument_list|)
operator|.
name|arg
argument_list|(
name|result
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|name
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|hasWidget
operator|<<
name|hasScene
operator|<<
name|next
operator|<<
name|result
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_comment
comment|// protected bool focusNextPrevChild(bool next)
end_comment
begin_function
DECL|function|focusNextPrevChild
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|focusNextPrevChild
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|next
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|focusNextPrevChild
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasScene
argument_list|)
expr_stmt|;
comment|// If a widget has its own focusNextPrevChild we need to respect it
comment|// otherwise respect the scene
comment|// Respect the widget over the scene!
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|QLabel
modifier|*
name|widget
init|=
operator|new
name|QLabel
decl_stmt|;
comment|// I can't believe designer adds this much junk!
name|widget
operator|->
name|setText
argument_list|(
literal|"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\"> p, li { white-space: pre-wrap; }</style></head><body style=\" font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;\"><p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"http://www.slashdot.org\"><span style=\" text-decoration: underline; color:#0000ff;\">old</span></a> foo<a href=\"http://www.reddit.org\"><span style=\" text-decoration: underline; color:#0000ff;\">new</span></a></p></body></html>"
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setTextInteractionFlags
argument_list|(
name|Qt
operator|::
name|TextBrowserInteraction
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasScene
condition|)
block|{
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// widget should take precedence over scene so make scene.focusNextPrevChild return false
comment|// so we know that a true can only come from the widget
if|if
condition|(
operator|!
operator|(
name|hasWidget
operator|&&
name|hasScene
operator|)
condition|)
block|{
name|QGraphicsTextItem
modifier|*
name|item
init|=
operator|new
name|QGraphicsTextItem
argument_list|(
literal|"Foo"
argument_list|)
decl_stmt|;
name|item
operator|->
name|setTextInteractionFlags
argument_list|(
name|Qt
operator|::
name|TextBrowserInteraction
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|40
argument_list|)
expr_stmt|;
block|}
name|scene
operator|.
name|setFocusItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|call_focusNextPrevChild
argument_list|(
name|next
argument_list|)
argument_list|,
name|focusNextPrevChild
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasScene
condition|)
operator|delete
name|proxy
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusOutEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|focusOutEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"call"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget, focus to other widget"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget, focusOutCalled"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget, focus to other widget"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget, focusOutCalled"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_comment
comment|// protected void focusOutEvent(QFocusEvent* event)
end_comment
begin_function
DECL|function|focusOutEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|focusOutEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|call
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|view
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|view
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|WheelFocus
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|proxy
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"widget, focus to other widget"
argument_list|,
literal|"Widget should have focus but doesn't"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"widget, focusOutCalled"
argument_list|,
literal|"Widget should have focus but doesn't"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|hasFocus
argument_list|()
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|call
condition|)
block|{
name|QWidget
modifier|*
name|other
init|=
operator|new
name|QLineEdit
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|other
operator|->
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|other
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|other
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|other
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|focusOut
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|hasFocus
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
block|{
comment|/*             ### Test doesn't make sense             QFocusEvent focusEvent(QEvent::FocusOut);             proxy->call_focusOutEvent(&focusEvent);             QCOMPARE(focusEvent.isAccepted(), hasWidget);             qApp->processEvents();             QCOMPARE(proxy->paintCount, hasWidget ? 1 : 0);             */
block|}
block|{
comment|/*             ### Test doesn't make sense             proxy->setFlag(QGraphicsItem::ItemIsFocusable, false);             QFocusEvent focusEvent(QEvent::FocusOut);             proxy->call_focusOutEvent(&focusEvent);             QCOMPARE(focusEvent.isAccepted(), hasWidget);             qApp->processEvents();             QCOMPARE(proxy->paintCount, 0);             */
block|}
block|}
block|}
end_function
begin_class
DECL|class|EventLogger
class|class
name|EventLogger
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|EventLogger
name|EventLogger
parameter_list|()
member_init_list|:
name|QWidget
argument_list|()
member_init_list|,
name|enterCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|leaveCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|moveCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|hoverEnter
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|hoverLeave
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|hoverMove
argument_list|(
literal|0
argument_list|)
block|{
name|installEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|function|enterEvent
name|void
name|enterEvent
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
name|enterCount
operator|++
expr_stmt|;
name|QWidget
operator|::
name|enterEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|function|leaveEvent
name|void
name|leaveEvent
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
name|leaveCount
operator|++
expr_stmt|;
name|QWidget
operator|::
name|leaveEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|function|mouseMoveEvent
name|void
name|mouseMoveEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|event
operator|->
name|setAccepted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|moveCount
operator|++
expr_stmt|;
name|QWidget
operator|::
name|mouseMoveEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|member|enterCount
name|int
name|enterCount
decl_stmt|;
DECL|member|leaveCount
name|int
name|leaveCount
decl_stmt|;
DECL|member|moveCount
name|int
name|moveCount
decl_stmt|;
DECL|member|hoverEnter
name|int
name|hoverEnter
decl_stmt|;
DECL|member|hoverLeave
name|int
name|hoverLeave
decl_stmt|;
DECL|member|hoverMove
name|int
name|hoverMove
decl_stmt|;
protected|protected:
DECL|function|eventFilter
name|bool
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|event
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QEvent
operator|::
name|HoverEnter
case|:
name|hoverEnter
operator|++
expr_stmt|;
break|break;
case|case
name|QEvent
operator|::
name|HoverLeave
case|:
name|hoverLeave
operator|++
expr_stmt|;
break|break;
case|case
name|QEvent
operator|::
name|HoverMove
case|:
name|hoverMove
operator|++
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|QWidget
operator|::
name|eventFilter
argument_list|(
name|object
argument_list|,
name|event
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_ifndef
ifndef|#
directive|ifndef
name|QTEST_NO_CURSOR
end_ifndef
begin_function
DECL|function|hoverEnterLeaveEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|hoverEnterLeaveEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hoverEnabled"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget, no hover"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget, no hover"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget, hover"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget, hover"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_comment
comment|// protected void hoverEnterEvent(QGraphicsSceneHoverEvent* event)
end_comment
begin_function
DECL|function|hoverEnterLeaveEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|hoverEnterLeaveEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hoverEnabled
argument_list|)
expr_stmt|;
comment|// proxy should translate this into events that the widget would expect
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
comment|//do not let the window manager move the window while we are moving the mouse on it
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|EventLogger
modifier|*
name|widget
init|=
operator|new
name|EventLogger
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
name|hoverEnabled
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setMouseTracking
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
operator|&
name|view
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
comment|// in
name|QTest
operator|::
name|mouseMove
argument_list|(
operator|&
name|view
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_UnderMouse
argument_list|)
argument_list|,
name|hasWidget
condition|?
literal|true
else|:
literal|false
argument_list|)
expr_stmt|;
comment|// ### this attribute isn't supported
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|enterCount
argument_list|,
name|hasWidget
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|hoverEnter
argument_list|,
operator|(
name|hasWidget
operator|&&
name|hoverEnabled
operator|)
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
comment|// does not work on all platforms
comment|//QCOMPARE(widget->moveCount, 0);
comment|// out
name|QTest
operator|::
name|mouseMove
argument_list|(
operator|&
name|view
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
comment|// QTRY_COMPARE(widget->testAttribute(Qt::WA_UnderMouse), false);
comment|// ### this attribute isn't supported
name|QTRY_COMPARE
argument_list|(
name|widget
operator|->
name|leaveCount
argument_list|,
name|hasWidget
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|->
name|hoverLeave
argument_list|,
operator|(
name|hasWidget
operator|&&
name|hoverEnabled
operator|)
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
comment|// does not work on all platforms
comment|//QCOMPARE(widget->moveCount, 0);
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|hoverMoveEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|hoverMoveEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hoverEnabled"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"mouseTracking"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"mouseDown"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
literal|2
condition|;
operator|++
name|k
control|)
block|{
for|for
control|(
name|int
name|l
init|=
literal|0
init|;
name|l
operator|<
literal|2
condition|;
operator|++
name|l
control|)
block|{
name|bool
name|hasWidget
init|=
operator|(
name|i
operator|==
literal|0
operator|)
decl_stmt|;
name|bool
name|hoverEnabled
init|=
operator|(
name|j
operator|==
literal|0
operator|)
decl_stmt|;
name|bool
name|mouseTracking
init|=
operator|(
name|k
operator|==
literal|0
operator|)
decl_stmt|;
name|bool
name|mouseDown
init|=
operator|(
name|l
operator|==
literal|0
operator|)
decl_stmt|;
name|QString
name|name
init|=
name|QString
argument_list|(
literal|"hasWidget:%1, hover:%2, mouseTracking:%3, mouseDown: %4"
argument_list|)
operator|.
name|arg
argument_list|(
name|hasWidget
argument_list|)
operator|.
name|arg
argument_list|(
name|hoverEnabled
argument_list|)
operator|.
name|arg
argument_list|(
name|mouseTracking
argument_list|)
operator|.
name|arg
argument_list|(
name|mouseDown
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|name
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|hasWidget
operator|<<
name|hoverEnabled
operator|<<
name|mouseTracking
operator|<<
name|mouseDown
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_function
begin_comment
comment|// protected void hoverMoveEvent(QGraphicsSceneHoverEvent* event)
end_comment
begin_function
DECL|function|hoverMoveEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|hoverMoveEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hoverEnabled
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|mouseTracking
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|mouseDown
argument_list|)
expr_stmt|;
name|QSKIP
argument_list|(
literal|"Ambiguous test..."
argument_list|)
expr_stmt|;
comment|// proxy should translate the move events to what the widget would expect
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|proxy
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ### remove me!!!
name|EventLogger
modifier|*
name|widget
init|=
operator|new
name|EventLogger
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Hover
argument_list|,
name|hoverEnabled
argument_list|)
expr_stmt|;
if|if
condition|(
name|mouseTracking
condition|)
name|widget
operator|->
name|setMouseTracking
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
comment|// in
name|QTest
operator|::
name|mouseMove
argument_list|(
operator|&
name|view
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|12
argument_list|)
expr_stmt|;
if|if
condition|(
name|mouseDown
condition|)
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
comment|// move a little bit
name|QTest
operator|::
name|mouseMove
argument_list|(
operator|&
name|view
argument_list|,
name|QPoint
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|->
name|hoverEnter
argument_list|,
operator|(
name|hasWidget
operator|&&
name|hoverEnabled
operator|)
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|moveCount
argument_list|,
operator|(
name|hasWidget
operator|&&
name|mouseTracking
operator|)
operator|||
operator|(
name|hasWidget
operator|&&
name|mouseDown
operator|)
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyPressEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|keyPressEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_comment
comment|// protected void keyPressEvent(QKeyEvent* event)
end_comment
begin_function
DECL|function|keyPressEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|keyPressEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|view
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|proxy
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ### remove me!!!
name|QLineEdit
modifier|*
name|widget
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
block|{
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
name|proxy
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|->
name|text
argument_list|()
argument_list|,
name|hasWidget
condition|?
name|QString
argument_list|(
literal|"x"
argument_list|)
else|:
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyReleaseEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|keyReleaseEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_comment
comment|// protected void keyReleaseEvent(QKeyEvent* event)
end_comment
begin_function
DECL|function|keyReleaseEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|keyReleaseEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|view
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|proxy
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ### remove me!!!
name|QPushButton
modifier|*
name|widget
init|=
operator|new
name|QPushButton
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|widget
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
block|{
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
name|proxy
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Space
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Space
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
operator|(
name|hasWidget
operator|)
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mouseDoubleClickEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|mouseDoubleClickEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_comment
comment|// protected void mouseDoubleClickEvent(QGraphicsSceneMouseEvent* event)
end_comment
begin_function
DECL|function|mouseDoubleClickEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|mouseDoubleClickEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|view
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|proxy
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ### remove me!!!
name|QLineEdit
modifier|*
name|widget
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|widget
operator|->
name|setText
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
block|{
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
name|proxy
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
literal|15
argument_list|,
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
literal|15
argument_list|,
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
literal|15
argument_list|,
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
literal|15
argument_list|,
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
literal|15
argument_list|,
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|->
name|selectedText
argument_list|()
argument_list|,
name|hasWidget
condition|?
name|QString
argument_list|(
literal|"foo"
argument_list|)
else|:
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mousePressReleaseEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|mousePressReleaseEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_comment
comment|// protected void mousePressEvent(QGraphicsSceneMouseEvent* event)
end_comment
begin_function
DECL|function|mousePressReleaseEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|mousePressReleaseEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|proxy
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// ### remove me!!!
name|QPushButton
modifier|*
name|widget
init|=
operator|new
name|QPushButton
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|widget
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
block|{
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
name|proxy
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
operator|(
name|hasWidget
operator|)
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeEvent_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|resizeEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"widget"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no widget"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_comment
comment|// protected void resizeEvent(QGraphicsSceneResizeEvent* event)
end_comment
begin_function
DECL|function|resizeEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|resizeEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|proxy
operator|.
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QSize
name|newSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QGraphicsSceneResizeEvent
name|event
decl_stmt|;
name|event
operator|.
name|setOldSize
argument_list|(
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setNewSize
argument_list|(
name|newSize
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|call_resizeEvent
argument_list|(
operator|&
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|size
argument_list|()
argument_list|,
name|newSize
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|paintEvent
parameter_list|()
block|{
comment|//we test that calling update on a widget inside a QGraphicsView is triggering a repaint
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
decl_stmt|;
comment|//showing the widget here seems to create a bug in Graphics View
comment|//this bug prevents the widget from being updated
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
operator|&
name|proxy
argument_list|)
expr_stmt|;
comment|//make sure we flush all the paint events
name|QTRY_VERIFY
argument_list|(
name|proxy
operator|.
name|paintCount
operator|>
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|paintCount
operator|=
literal|0
expr_stmt|;
name|w
operator|->
name|update
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|proxy
operator|.
name|paintCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//the widget should have been painted now
block|}
end_function
begin_function
DECL|function|wheelEvent
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|wheelEvent
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|WheelWidget
modifier|*
name|wheelWidget
init|=
operator|new
name|WheelWidget
argument_list|()
decl_stmt|;
name|wheelWidget
operator|->
name|setFixedSize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|wheelWidget
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QGraphicsSceneWheelEvent
name|event
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneWheel
argument_list|)
decl_stmt|;
name|event
operator|.
name|setScenePos
argument_list|(
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setAccepted
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|wheelWidget
operator|->
name|wheelEventCalled
operator|=
literal|false
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|event
operator|.
name|isAccepted
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|wheelWidget
operator|->
name|wheelEventCalled
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Qt::SizeHint
argument_list|)
end_macro
begin_function
DECL|function|sizeHint_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|sizeHint_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|Qt
operator|::
name|SizeHint
argument_list|>
argument_list|(
literal|"which"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSizeF
argument_list|>
argument_list|(
literal|"constraint"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSizeF
argument_list|>
argument_list|(
literal|"sizeHint"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasWidget"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|bool
name|hasWidget
init|=
operator|(
name|i
operator|==
literal|0
operator|)
decl_stmt|;
comment|// ### What should these do?
name|QTest
operator|::
name|newRow
argument_list|(
literal|"min"
argument_list|)
operator|<<
name|Qt
operator|::
name|MinimumSize
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|hasWidget
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pre"
argument_list|)
operator|<<
name|Qt
operator|::
name|PreferredSize
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|hasWidget
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"max"
argument_list|)
operator|<<
name|Qt
operator|::
name|MaximumSize
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|hasWidget
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mindes"
argument_list|)
operator|<<
name|Qt
operator|::
name|MinimumDescent
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|hasWidget
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nsize"
argument_list|)
operator|<<
name|Qt
operator|::
name|NSizeHints
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|QSizeF
argument_list|()
operator|<<
name|hasWidget
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// protected QSizeF sizeHint(Qt::SizeHint which, QSizeF const& constraint = QSizeF()) const
end_comment
begin_function
DECL|function|sizeHint
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|sizeHint
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|Qt
operator|::
name|SizeHint
argument_list|,
name|which
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSizeF
argument_list|,
name|constraint
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSizeF
argument_list|,
name|sizeHint
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasWidget
argument_list|)
expr_stmt|;
name|QSKIP
argument_list|(
literal|"Broken test"
argument_list|)
expr_stmt|;
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|proxy
operator|.
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|call_sizeHint
argument_list|(
name|which
argument_list|,
name|constraint
argument_list|)
argument_list|,
name|sizeHint
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hasWidget
condition|)
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizePolicy
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|sizePolicy
parameter_list|()
block|{
for|for
control|(
name|int
name|p
init|=
literal|0
init|;
name|p
operator|<
literal|2
condition|;
operator|++
name|p
control|)
block|{
name|bool
name|hasWidget
init|=
operator|(
name|p
operator|==
literal|0
condition|?
literal|true
else|:
literal|false
operator|)
decl_stmt|;
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|QSizePolicy
name|proxyPol
argument_list|(
name|QSizePolicy
operator|::
name|Maximum
argument_list|,
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
decl_stmt|;
name|proxy
operator|.
name|setSizePolicy
argument_list|(
name|proxyPol
argument_list|)
expr_stmt|;
name|QSizePolicy
name|widgetPol
argument_list|(
name|QSizePolicy
operator|::
name|Fixed
argument_list|,
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
decl_stmt|;
name|widget
operator|->
name|setSizePolicy
argument_list|(
name|widgetPol
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|sizePolicy
argument_list|()
argument_list|,
name|proxyPol
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|sizePolicy
argument_list|()
argument_list|,
name|widgetPol
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
block|{
name|proxy
operator|.
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|sizePolicy
argument_list|()
argument_list|,
name|widgetPol
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|sizePolicy
argument_list|()
argument_list|,
name|proxyPol
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|sizePolicy
argument_list|()
argument_list|,
name|widgetPol
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setSizePolicy
argument_list|(
name|widgetPol
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setSizePolicy
argument_list|(
name|proxyPol
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasWidget
condition|)
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|sizePolicy
argument_list|()
argument_list|,
name|proxyPol
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|sizePolicy
argument_list|()
argument_list|,
name|widgetPol
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|minimumSize
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|minimumSize
parameter_list|()
block|{
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|QSize
name|minSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|widget
operator|->
name|setMinimumSize
argument_list|(
name|minSize
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|resize
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|minSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|minimumSize
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|minSize
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setMinimumSize
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|minimumSize
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maximumSize
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|maximumSize
parameter_list|()
block|{
name|SubQGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|QSize
name|maxSize
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
decl_stmt|;
name|widget
operator|->
name|setMaximumSize
argument_list|(
name|maxSize
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|maxSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|maximumSize
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|maxSize
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setMaximumSize
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|maximumSize
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|View
class|class
name|View
super|:
specifier|public
name|QGraphicsView
block|{
public|public:
DECL|function|View
name|View
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsView
argument_list|(
name|scene
argument_list|,
name|parent
argument_list|)
member_init_list|,
name|npaints
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|member|paintEventRegion
name|QRegion
name|paintEventRegion
decl_stmt|;
DECL|member|npaints
name|int
name|npaints
decl_stmt|;
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|event
parameter_list|)
block|{
operator|++
name|npaints
expr_stmt|;
name|paintEventRegion
operator|+=
name|event
operator|->
name|region
argument_list|()
expr_stmt|;
name|QGraphicsView
operator|::
name|paintEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|ScrollWidget
class|class
name|ScrollWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|ScrollWidget
name|ScrollWidget
parameter_list|()
member_init_list|:
name|npaints
argument_list|(
literal|0
argument_list|)
block|{
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
block|}
DECL|member|paintEventRegion
name|QRegion
name|paintEventRegion
decl_stmt|;
DECL|member|npaints
name|int
name|npaints
decl_stmt|;
public|public
name|slots
public|:
DECL|function|updateScroll
name|void
name|updateScroll
parameter_list|()
block|{
name|update
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|scroll
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|event
parameter_list|)
block|{
operator|++
name|npaints
expr_stmt|;
name|paintEventRegion
operator|+=
name|event
operator|->
name|region
argument_list|()
expr_stmt|;
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|event
operator|->
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|scrollUpdate
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|scrollUpdate
parameter_list|()
block|{
name|ScrollWidget
modifier|*
name|widget
init|=
operator|new
name|ScrollWidget
decl_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|addWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|View
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|.
name|npaints
operator|>=
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|widget
operator|->
name|paintEventRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
name|widget
operator|->
name|npaints
operator|=
literal|0
expr_stmt|;
name|view
operator|.
name|paintEventRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
name|view
operator|.
name|npaints
operator|=
literal|0
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
name|widget
argument_list|,
name|SLOT
argument_list|(
name|updateScroll
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|npaints
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// QRect(0, 0, 200, 12) is the first update, expanded (-2, -2, 2, 2)
comment|// QRect(0, 12, 102, 10) is the scroll update, expanded (-2, -2, 2, 2),
comment|// intersected with the above update.
name|QCOMPARE
argument_list|(
name|view
operator|.
name|paintEventRegion
operator|.
name|rects
argument_list|()
argument_list|,
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|,
literal|12
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|12
argument_list|,
literal|102
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|npaints
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|paintEventRegion
operator|.
name|rects
argument_list|()
argument_list|,
name|QVector
argument_list|<
name|QRect
argument_list|>
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|,
literal|12
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|12
argument_list|,
literal|102
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setWidget_simple
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|setWidget_simple
parameter_list|()
block|{
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|lineEdit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
argument_list|)
expr_stmt|;
comment|// Size hints
comment|// ### size hints are tested in a different test
comment|// QCOMPARE(proxy.effectiveSizeHint(Qt::MinimumSize).toSize(), lineEdit->minimumSizeHint());
comment|// QCOMPARE(proxy.effectiveSizeHint(Qt::MaximumSize).toSize(), lineEdit->maximumSize());
comment|// QCOMPARE(proxy.effectiveSizeHint(Qt::PreferredSize).toSize(), lineEdit->sizeHint());
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|minimumSizeHint
argument_list|()
operator|.
name|expandedTo
argument_list|(
name|lineEdit
operator|->
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|lineEdit
operator|->
name|rect
argument_list|()
decl_stmt|;
name|rect
operator|.
name|setSize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
operator|.
name|expandedTo
argument_list|(
name|lineEdit
operator|->
name|minimumSizeHint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|rect
argument_list|()
operator|.
name|toRect
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// Properties
comment|// QCOMPARE(proxy.focusPolicy(), lineEdit->focusPolicy());
comment|// QCOMPARE(proxy.palette(), lineEdit->palette());
ifndef|#
directive|ifndef
name|QTEST_NO_CURSOR
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|layoutDirection
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|layoutDirection
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|style
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|font
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isEnabled
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isVisible
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setWidget_ownership
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|setWidget_ownership
parameter_list|()
block|{
name|QPointer
argument_list|<
name|QLineEdit
argument_list|>
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QPointer
argument_list|<
name|QLineEdit
argument_list|>
name|lineEdit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QVERIFY
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
block|{
comment|// Create a proxy and transfer ownership to it
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|widget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
name|lineEdit
argument_list|)
expr_stmt|;
comment|// Remove the widget without destroying it.
name|proxy
operator|.
name|setWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|widget
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
comment|// Assign the widget again and switch to another widget.
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|widget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
name|lineEdit2
argument_list|)
expr_stmt|;
comment|// Assign the first widget, and destroy the proxy.
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|lineEdit
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|lineEdit2
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QPointer
argument_list|<
name|QGraphicsProxyWidget
argument_list|>
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|lineEdit2
argument_list|)
decl_stmt|;
operator|delete
name|lineEdit2
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resize_simple_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|resize_simple_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSizeF
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"200, 200"
argument_list|)
operator|<<
name|QSizeF
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_PROCESSOR_ARM
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1000, 1000"
argument_list|)
operator|<<
name|QSizeF
argument_list|(
literal|1000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
comment|// Since 4.5, 10000x10000 runs out of memory.
comment|// QTest::newRow("10000, 10000")<< QSizeF(10000, 10000);
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|resize_simple
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|resize_simple
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSizeF
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|(
name|int
operator|)
name|size
operator|.
name|width
argument_list|()
argument_list|,
operator|(
name|int
operator|)
name|size
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|()
argument_list|)
expr_stmt|;
comment|// The proxy resizes itself, the line edit follows
name|proxy
operator|.
name|resize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|,
name|widget
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// The line edit resizes itself, the proxy follows (no loopback/live lock)
name|QSize
name|doubleSize
init|=
name|size
operator|.
name|toSize
argument_list|()
operator|*
literal|2
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
name|doubleSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|size
argument_list|()
argument_list|,
name|doubleSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|size
argument_list|()
argument_list|,
name|proxy
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|symmetricMove
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|symmetricMove
parameter_list|()
block|{
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|show
argument_list|()
expr_stmt|;
name|proxy
operator|.
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|pos
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|move
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|pos
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|symmetricResize
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|symmetricResize
parameter_list|()
block|{
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|show
argument_list|()
expr_stmt|;
name|proxy
operator|.
name|resize
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|256
argument_list|,
literal|256
argument_list|)
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|resize
argument_list|(
literal|512
argument_list|,
literal|512
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|size
argument_list|()
argument_list|,
name|QSizeF
argument_list|(
literal|512
argument_list|,
literal|512
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|size
argument_list|()
argument_list|,
name|QSize
argument_list|(
literal|512
argument_list|,
literal|512
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|symmetricVisible
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|symmetricVisible
parameter_list|()
block|{
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isVisible
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isVisible
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isVisible
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isVisible
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isVisible
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|symmetricEnabled
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|symmetricEnabled
parameter_list|()
block|{
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isEnabled
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isEnabled
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isEnabled
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isEnabled
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|isEnabled
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabFocus_simpleWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|tabFocus_simpleWidget
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|editProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|editProxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|edit
argument_list|)
decl_stmt|;
comment|// Tab into line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into right dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Backtab into line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Backtab into left dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
operator|delete
name|view
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabFocus_simpleTwoWidgets
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|tabFocus_simpleTwoWidgets
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|editProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|editProxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|editProxy2
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|edit2
argument_list|)
decl_stmt|;
name|editProxy2
operator|->
name|show
argument_list|()
expr_stmt|;
name|editProxy2
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
name|editProxy
operator|->
name|rect
argument_list|()
operator|.
name|height
argument_list|()
operator|*
literal|1.1
argument_list|)
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy2
argument_list|(
name|edit2
argument_list|)
decl_stmt|;
comment|// Tab into line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into second line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into right dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Backtab into line edit 2
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Backtab into line edit 1
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Backtab into left dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
operator|delete
name|view
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabFocus_complexWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|tabFocus_complexWidget
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit1
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit1
operator|->
name|setText
argument_list|(
literal|"QLineEdit 1"
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 2"
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|vlayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit1
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit2
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|box
init|=
operator|new
name|QGroupBox
argument_list|(
literal|"QGroupBox"
argument_list|)
decl_stmt|;
name|box
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setLayout
argument_list|(
name|vlayout
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|box
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|edit1
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy2
argument_list|(
name|edit2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpyBox
argument_list|(
name|box
argument_list|)
decl_stmt|;
comment|// Tab into group box
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Tab into line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|edit1
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into line edit 2
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|edit2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into right dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|rightDial
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Backtab into line edit 2
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Backtab into line edit 1
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit1
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Backtab into line box
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|box
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// Backtab into left dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
operator|delete
name|view
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabFocus_complexTwoWidgets
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|tabFocus_complexTwoWidgets
parameter_list|()
block|{
comment|// ### add event spies to this test.
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit1
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit1
operator|->
name|setText
argument_list|(
literal|"QLineEdit 1"
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 2"
argument_list|)
expr_stmt|;
name|QFontComboBox
modifier|*
name|fontComboBox
init|=
operator|new
name|QFontComboBox
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vlayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit1
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|fontComboBox
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit2
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|box
init|=
operator|new
name|QGroupBox
argument_list|(
literal|"QGroupBox"
argument_list|)
decl_stmt|;
name|box
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setLayout
argument_list|(
name|vlayout
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit1_2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit1_2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 1_2"
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2_2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit2_2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 2_2"
argument_list|)
expr_stmt|;
name|QFontComboBox
modifier|*
name|fontComboBox2
init|=
operator|new
name|QFontComboBox
decl_stmt|;
name|vlayout
operator|=
operator|new
name|QVBoxLayout
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit1_2
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|fontComboBox2
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit2_2
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|box_2
init|=
operator|new
name|QGroupBox
argument_list|(
literal|"QGroupBox 2"
argument_list|)
decl_stmt|;
name|box_2
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box_2
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box_2
operator|->
name|setLayout
argument_list|(
name|vlayout
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|box
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy_2
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|box_2
argument_list|)
decl_stmt|;
name|proxy_2
operator|->
name|setPos
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|width
argument_list|()
operator|*
literal|1.2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy_2
operator|->
name|show
argument_list|()
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|view
operator|->
name|rotate
argument_list|(
literal|45
argument_list|)
expr_stmt|;
name|view
operator|->
name|scale
argument_list|(
literal|0.5
argument_list|,
literal|0.5
argument_list|)
expr_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|edit1
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy2
argument_list|(
name|edit2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy3
argument_list|(
name|fontComboBox
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy1_2
argument_list|(
name|edit1_2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy2_2
argument_list|(
name|edit2_2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy2_3
argument_list|(
name|fontComboBox2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpyBox
argument_list|(
name|box
argument_list|)
decl_stmt|;
comment|// Tab into group box
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Tab into line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|edit1
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab to the font combobox
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|fontComboBox
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy3
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy3
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Tab into line edit 2
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|edit2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy3
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Tab into right box
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|box_2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Tab into right top line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit1_2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy1_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy1_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into right font combobox
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|fontComboBox2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy1_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy1_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_3
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_3
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into right bottom line edit
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit2_2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy1_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy1_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_3
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_3
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Tab into right dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|rightDial
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Backtab into line edit 2
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit2_2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into the right font combobox
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|fontComboBox2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into line edit 1
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit1_2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into line box
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|box_2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into line edit 2
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rightDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit2
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into the font combobox
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|fontComboBox
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into line edit 1
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|fontComboBox
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit1
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into line box
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|box
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
comment|// Backtab into left dial
name|QTest
operator|::
name|keyPress
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|hasFocus
argument_list|()
expr_stmt|;
operator|delete
name|view
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setFocus_simpleWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|setFocus_simpleWidget
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|editProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|editProxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|&
name|window
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|edit
argument_list|)
decl_stmt|;
comment|// Calling setFocus for the line edit when the view doesn't have input
comment|// focus does not steal focus from the dial. The edit, proxy and scene
comment|// have focus but only in their own little space.
name|edit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Clearing focus is a local operation.
name|edit
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|scene
operator|.
name|clearFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Symmetry
name|editProxy
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|view
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setFocus_simpleTwoWidgets
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|setFocus_simpleTwoWidgets
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|editProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|editProxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|edit2Proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|edit2
argument_list|)
decl_stmt|;
name|edit2Proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|edit2Proxy
operator|->
name|setPos
argument_list|(
name|editProxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|width
argument_list|()
operator|*
literal|1.01
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|&
name|window
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|view
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|edit2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|editProxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit2Proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|view
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setFocus_complexTwoWidgets
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|setFocus_complexTwoWidgets
parameter_list|()
block|{
comment|// ### add event spies to this test.
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit1
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit1
operator|->
name|setText
argument_list|(
literal|"QLineEdit 1"
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 2"
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|vlayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit1
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit2
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|box
init|=
operator|new
name|QGroupBox
argument_list|(
literal|"QGroupBox"
argument_list|)
decl_stmt|;
name|box
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setLayout
argument_list|(
name|vlayout
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit1_2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit1_2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 1_2"
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2_2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit2_2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 2_2"
argument_list|)
expr_stmt|;
name|vlayout
operator|=
operator|new
name|QVBoxLayout
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit1_2
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit2_2
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|box_2
init|=
operator|new
name|QGroupBox
argument_list|(
literal|"QGroupBox 2"
argument_list|)
decl_stmt|;
name|box_2
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box_2
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box_2
operator|->
name|setLayout
argument_list|(
name|vlayout
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|box
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy_2
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|box_2
argument_list|)
decl_stmt|;
name|proxy_2
operator|->
name|setPos
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|width
argument_list|()
operator|*
literal|1.2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy_2
operator|->
name|show
argument_list|()
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|&
name|window
argument_list|)
expr_stmt|;
name|leftDial
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|leftDial
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|edit1
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy2
argument_list|(
name|edit2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpyBox
argument_list|(
name|box
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy_2
argument_list|(
name|edit1_2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy2_2
argument_list|(
name|edit2_2
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpyBox_2
argument_list|(
name|box_2
argument_list|)
decl_stmt|;
name|view
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|edit1
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|scene
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|edit2_2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit2_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|box
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit2_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|edit2_2
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit2_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit1
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|box_2
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpy2_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|eventSpyBox_2
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|view
expr_stmt|;
block|}
end_function
begin_function
DECL|function|popup_basic
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|popup_basic
parameter_list|()
block|{
comment|// ProxyWidget should automatically create proxy's when the widget creates a child
name|QGraphicsScene
modifier|*
name|scene
init|=
operator|new
name|QGraphicsScene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignTop
argument_list|)
expr_stmt|;
name|view
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|480
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|QComboBox
modifier|*
name|box
init|=
operator|new
name|QComboBox
decl_stmt|;
name|box
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|320
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|box
operator|->
name|addItems
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"monday"
operator|<<
literal|"tuesday"
operator|<<
literal|"wednesday"
operator|<<
literal|"thursday"
operator|<<
literal|"saturday"
operator|<<
literal|"sunday"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|scene
operator|->
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|->
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|pos
argument_list|()
argument_list|,
name|QPointF
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|125
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|box
operator|->
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|child
init|=
operator|(
name|QGraphicsProxyWidget
operator|*
operator|)
operator|(
name|proxy
operator|->
name|childItems
argument_list|()
operator|)
index|[
literal|0
index|]
decl_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|->
name|isWidget
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|->
name|widget
argument_list|()
argument_list|)
expr_stmt|;
name|QStyleOptionComboBox
name|opt
decl_stmt|;
name|opt
operator|.
name|initFrom
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|opt
operator|.
name|editable
operator|=
name|box
operator|->
name|isEditable
argument_list|()
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ComboBox_Popup
argument_list|,
operator|&
name|opt
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"Does not work due to SH_Combobox_Popup"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|widget
argument_list|()
operator|->
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|box
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|proxy
operator|->
name|pos
argument_list|()
argument_list|,
name|QPointF
argument_list|(
name|box
operator|->
name|pos
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|x
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|box
operator|->
name|x
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|y
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|box
operator|->
name|rect
argument_list|()
operator|.
name|bottom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_WIN
comment|// The popup's coordinates on Windows are in global space,
comment|// regardless.
name|QCOMPARE
argument_list|(
name|child
operator|->
name|widget
argument_list|()
operator|->
name|x
argument_list|()
argument_list|,
name|box
operator|->
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|widget
argument_list|()
operator|->
name|y
argument_list|()
argument_list|,
name|box
operator|->
name|rect
argument_list|()
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|geometry
argument_list|()
operator|.
name|toRect
argument_list|()
argument_list|,
name|child
operator|->
name|widget
argument_list|()
operator|->
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|12
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|popup_subwidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|popup_subwidget
parameter_list|()
block|{
name|QGroupBox
modifier|*
name|groupBox
init|=
operator|new
name|QGroupBox
decl_stmt|;
name|groupBox
operator|->
name|setTitle
argument_list|(
literal|"GroupBox"
argument_list|)
expr_stmt|;
name|groupBox
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QComboBox
modifier|*
name|box
init|=
operator|new
name|QComboBox
decl_stmt|;
name|box
operator|->
name|addItems
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"monday"
operator|<<
literal|"tuesday"
operator|<<
literal|"wednesday"
operator|<<
literal|"thursday"
operator|<<
literal|"saturday"
operator|<<
literal|"sunday"
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|(
literal|"QLineEdit"
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|(
literal|"QLineEdit"
argument_list|)
argument_list|)
expr_stmt|;
name|groupBox
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|groupBoxProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|groupBox
argument_list|)
decl_stmt|;
name|groupBox
operator|->
name|show
argument_list|()
expr_stmt|;
name|groupBox
operator|->
name|move
argument_list|(
literal|10000
argument_list|,
literal|10000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupBox
operator|->
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|10000
argument_list|,
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupBoxProxy
operator|->
name|pos
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|10000
argument_list|,
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|box
operator|->
name|showPopup
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|groupBoxProxy
operator|->
name|childItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QStyleOptionComboBox
name|opt
decl_stmt|;
name|opt
operator|.
name|initFrom
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|opt
operator|.
name|editable
operator|=
name|box
operator|->
name|isEditable
argument_list|()
expr_stmt|;
if|if
condition|(
name|box
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ComboBox_Popup
argument_list|,
operator|&
name|opt
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"Does not work due to SH_Combobox_Popup"
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|child
init|=
operator|(
name|QGraphicsProxyWidget
operator|*
operator|)
operator|(
name|groupBoxProxy
operator|->
name|childItems
argument_list|()
operator|)
index|[
literal|0
index|]
decl_stmt|;
name|QWidget
modifier|*
name|popup
init|=
name|child
operator|->
name|widget
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|popup
operator|->
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|box
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|popup
operator|->
name|x
argument_list|()
argument_list|,
name|box
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|()
argument_list|)
operator|.
name|x
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|popup
operator|->
name|y
argument_list|()
argument_list|,
name|QRect
argument_list|(
name|box
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|()
argument_list|)
argument_list|,
name|box
operator|->
name|size
argument_list|()
argument_list|)
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|popup
operator|->
name|size
argument_list|()
argument_list|,
name|child
operator|->
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QTEST_NO_CURSOR
end_ifndef
begin_function
DECL|function|changingCursor_basic
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|changingCursor_basic
parameter_list|()
block|{
comment|// Confirm that mouse events are working properly by checking that
comment|// when moving the mouse over a line edit it will change the cursor into the I
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|SubQGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|SubQGraphicsProxyWidget
decl_stmt|;
name|QLineEdit
modifier|*
name|widget
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
comment|// in
name|QTest
operator|::
name|mouseMove
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sendMouseMove
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|mapToScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|Qt
operator|::
name|IBeamCursor
argument_list|)
expr_stmt|;
comment|// out
name|QTest
operator|::
name|mouseMove
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|sendMouseMove
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|Qt
operator|::
name|ArrowCursor
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|tooltip_basic
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|tooltip_basic
parameter_list|()
block|{
name|QString
name|toolTip
init|=
literal|"Qt rocks!"
decl_stmt|;
name|QString
name|toolTip2
init|=
literal|"Qt rocks even more!"
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"button"
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|QGraphicsProxyWidget
decl_stmt|;
name|QGraphicsProxyWidgetPrivate
modifier|*
name|proxyd
init|=
cast|static_cast
argument_list|<
name|QGraphicsProxyWidgetPrivate
operator|*
argument_list|>
argument_list|(
name|QGraphicsItemPrivate
operator|::
name|get
argument_list|(
name|proxy
argument_list|)
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|proxyd
operator|->
name|lastWidgetUnderMouse
operator|=
name|button
expr_stmt|;
comment|// force widget under mouse
name|QVERIFY
argument_list|(
name|button
operator|->
name|toolTip
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|toolTip
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that setting the tooltip on the proxy also set it on the widget
name|proxy
operator|->
name|setToolTip
argument_list|(
name|toolTip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|toolTip
argument_list|()
argument_list|,
name|toolTip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|button
operator|->
name|toolTip
argument_list|()
argument_list|,
name|toolTip
argument_list|)
expr_stmt|;
comment|// Check that setting the tooltip on the widget also set it on the proxy
name|button
operator|->
name|setToolTip
argument_list|(
name|toolTip2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|toolTip
argument_list|()
argument_list|,
name|toolTip2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|button
operator|->
name|toolTip
argument_list|()
argument_list|,
name|toolTip2
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setFixedSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QHelpEvent
name|helpEvent
argument_list|(
name|QEvent
operator|::
name|ToolTip
argument_list|,
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|,
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|mapToGlobal
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|helpEvent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|350
argument_list|)
expr_stmt|;
name|bool
name|foundView
init|=
literal|false
decl_stmt|;
name|bool
name|foundTipLabel
init|=
literal|false
decl_stmt|;
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|QApplication
operator|::
name|topLevelWidgets
argument_list|()
control|)
block|{
if|if
condition|(
name|widget
operator|==
operator|&
name|view
condition|)
name|foundView
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QTipLabel"
argument_list|)
condition|)
name|foundTipLabel
operator|=
literal|true
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|foundView
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|foundTipLabel
argument_list|)
expr_stmt|;
block|}
block|{
name|QHelpEvent
name|helpEvent
argument_list|(
name|QEvent
operator|::
name|ToolTip
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|,
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|mapToGlobal
argument_list|(
name|view
operator|.
name|mapFromScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|helpEvent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|350
argument_list|)
expr_stmt|;
name|bool
name|foundView
init|=
literal|false
decl_stmt|;
name|bool
name|foundTipLabel
init|=
literal|false
decl_stmt|;
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|QApplication
operator|::
name|topLevelWidgets
argument_list|()
control|)
block|{
if|if
condition|(
name|widget
operator|==
operator|&
name|view
condition|)
name|foundView
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|widget
operator|->
name|inherits
argument_list|(
literal|"QTipLabel"
argument_list|)
condition|)
name|foundTipLabel
operator|=
literal|true
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|foundView
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|foundTipLabel
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|childPos_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|childPos_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"moveCombo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"comboPos"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPointF
argument_list|>
argument_list|(
literal|"proxyPos"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|()
operator|<<
name|QPointF
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
literal|1000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|1000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
literal|10000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|10000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
operator|-
literal|10000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|10000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"6"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
operator|-
literal|1000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|1000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"7"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
operator|-
literal|100
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8"
argument_list|)
operator|<<
literal|true
operator|<<
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|()
operator|<<
name|QPointF
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
literal|1000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|1000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
literal|10000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|10000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
operator|-
literal|10000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|10000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"6-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
operator|-
literal|1000
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|1000
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"7-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
operator|-
literal|100
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8-"
argument_list|)
operator|<<
literal|false
operator|<<
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|childPos
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|childPos
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QSKIP
argument_list|(
literal|"This test is not reliable on IRIX."
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|moveCombo
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|comboPos
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPointF
argument_list|,
name|proxyPos
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QComboBox
modifier|*
name|box
init|=
operator|new
name|QComboBox
decl_stmt|;
name|box
operator|->
name|addItem
argument_list|(
literal|"Item 1"
argument_list|)
expr_stmt|;
name|box
operator|->
name|addItem
argument_list|(
literal|"Item 2"
argument_list|)
expr_stmt|;
name|box
operator|->
name|addItem
argument_list|(
literal|"Item 3"
argument_list|)
expr_stmt|;
name|box
operator|->
name|addItem
argument_list|(
literal|"Item 4"
argument_list|)
expr_stmt|;
if|if
condition|(
name|moveCombo
condition|)
name|box
operator|->
name|move
argument_list|(
name|comboPos
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|box
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|moveCombo
condition|)
name|proxy
operator|->
name|setPos
argument_list|(
name|proxyPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|pos
argument_list|()
argument_list|,
name|proxyPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|box
operator|->
name|pos
argument_list|()
argument_list|,
name|comboPos
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|box
operator|->
name|showPopup
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QWidget
modifier|*
name|menu
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|QObject
modifier|*
name|child
decl|,
name|box
operator|->
name|children
argument_list|()
control|)
block|{
if|if
condition|(
operator|(
name|menu
operator|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|child
argument_list|)
operator|)
condition|)
break|break;
block|}
name|QVERIFY
argument_list|(
name|menu
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|menu
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|menu
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxyChild
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|child
decl|,
name|proxy
operator|->
name|childItems
argument_list|()
control|)
block|{
if|if
condition|(
name|child
operator|->
name|isWidget
argument_list|()
operator|&&
operator|(
name|proxyChild
operator|=
name|qobject_cast
argument_list|<
name|QGraphicsProxyWidget
operator|*
argument_list|>
argument_list|(
cast|static_cast
argument_list|<
name|QGraphicsWidget
operator|*
argument_list|>
argument_list|(
name|child
argument_list|)
argument_list|)
operator|)
condition|)
break|break;
block|}
name|QVERIFY
argument_list|(
name|proxyChild
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxyChild
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|qreal
name|expectedXPosition
init|=
literal|0.0
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_STYLE_MAC
argument_list|)
comment|// The Mac style wants the popup to show up at QPoint(4 - 11, 1).
comment|// See QMacStyle::subControlRect SC_ComboBoxListBoxPopup.
if|if
condition|(
name|qobject_cast
argument_list|<
name|QMacStyle
operator|*
argument_list|>
argument_list|(
name|QApplication
operator|::
name|style
argument_list|()
argument_list|)
condition|)
name|expectedXPosition
operator|=
name|qreal
argument_list|(
literal|4
operator|-
literal|11
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|proxyChild
operator|->
name|pos
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|expectedXPosition
argument_list|)
expr_stmt|;
name|menu
operator|->
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|autoShow
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|autoShow
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy1
init|=
name|scene
operator|.
name|addWidget
argument_list|(
operator|new
name|QPushButton
argument_list|(
literal|"Button1"
argument_list|)
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|button2
init|=
operator|new
name|QPushButton
argument_list|(
literal|"Button2"
argument_list|)
decl_stmt|;
name|button2
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy2
init|=
operator|new
name|QGraphicsProxyWidget
argument_list|()
decl_stmt|;
name|proxy2
operator|->
name|setWidget
argument_list|(
name|button2
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy2
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy1
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy2
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QList<QRectF>
argument_list|)
end_macro
begin_function
DECL|function|windowOpacity
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|windowOpacity
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|widget
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|setCacheMode
argument_list|(
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QList
argument_list|<
name|QRectF
argument_list|>
argument_list|>
argument_list|(
literal|"QList<QRectF>"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|signalSpy
argument_list|(
operator|&
name|scene
argument_list|,
name|SIGNAL
argument_list|(
name|changed
argument_list|(
specifier|const
name|QList
argument_list|<
name|QRectF
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|EventSpy
name|eventSpy
argument_list|(
name|widget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setWindowOpacity
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// Make sure setWindowOpacity triggers an update on the scene,
comment|// and not on the widget or the proxy itself. The entire proxy needs an update
comment|// in case it has a window decoration. Update: QGraphicsItem::CacheMode is
comment|// disabled on platforms without alpha channel support in QPixmap (e.g.,
comment|// X11 without XRender).
name|int
name|paints
init|=
literal|0
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|paints
operator|=
operator|!
name|X11
operator|->
name|use_xrender
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|UpdateRequest
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|eventSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|Paint
index|]
argument_list|,
name|paints
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
specifier|const
name|QList
argument_list|<
name|QVariant
argument_list|>
name|arguments
init|=
name|signalSpy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
specifier|const
name|QList
argument_list|<
name|QRectF
argument_list|>
name|updateRects
init|=
name|qvariant_cast
argument_list|<
name|QList
argument_list|<
name|QRectF
argument_list|>
argument_list|>
argument_list|(
name|arguments
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|updateRects
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|updateRects
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|proxy
operator|->
name|sceneBoundingRect
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stylePropagation
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|stylePropagation
parameter_list|()
block|{
name|QPointer
argument_list|<
name|QWindowsStyle
argument_list|>
name|windowsStyle
init|=
operator|new
name|QWindowsStyle
decl_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|edit
argument_list|)
expr_stmt|;
name|EventSpy
name|editSpy
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|EventSpy
name|proxySpy
argument_list|(
operator|&
name|proxy
argument_list|)
decl_stmt|;
comment|// Widget to proxy
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|style
argument_list|()
argument_list|,
name|QApplication
operator|::
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setStyle
argument_list|(
name|windowsStyle
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|style
argument_list|()
argument_list|,
operator|(
name|QStyle
operator|*
operator|)
name|windowsStyle
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|style
argument_list|()
argument_list|,
name|QApplication
operator|::
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|style
argument_list|()
argument_list|,
name|QApplication
operator|::
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|windowsStyle
argument_list|)
expr_stmt|;
comment|// not deleted
comment|// Proxy to widget
name|proxy
operator|.
name|setStyle
argument_list|(
name|windowsStyle
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|style
argument_list|()
argument_list|,
operator|(
name|QStyle
operator|*
operator|)
name|windowsStyle
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|StyleChange
index|]
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|style
argument_list|()
argument_list|,
name|QApplication
operator|::
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|style
argument_list|()
argument_list|,
name|QApplication
operator|::
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|windowsStyle
argument_list|)
expr_stmt|;
comment|// not deleted
operator|delete
name|windowsStyle
expr_stmt|;
block|}
end_function
begin_function
DECL|function|palettePropagation
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|palettePropagation
parameter_list|()
block|{
comment|// Construct a palette with an unlikely setup
name|QPalette
name|lineEditPalette
init|=
name|QApplication
operator|::
name|palette
argument_list|(
literal|"QLineEdit"
argument_list|)
decl_stmt|;
name|QPalette
name|palette
init|=
name|lineEditPalette
decl_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|edit
argument_list|)
expr_stmt|;
name|EventSpy
name|editSpy
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|EventSpy
name|proxySpy
argument_list|(
operator|&
name|proxy
argument_list|)
decl_stmt|;
comment|// Widget to proxy (no change)
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|palette
argument_list|()
argument_list|,
name|QPalette
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setPalette
argument_list|(
name|QPalette
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|palette
argument_list|()
argument_list|,
name|QPalette
argument_list|()
argument_list|)
expr_stmt|;
comment|// Proxy to widget
name|proxy
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|palette
argument_list|()
argument_list|,
name|palette
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|palette
argument_list|()
argument_list|,
name|proxy
operator|.
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setPalette
argument_list|(
name|QPalette
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetPalette
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|PaletteChange
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|palette
argument_list|()
argument_list|,
name|lineEditPalette
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fontPropagation
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|fontPropagation
parameter_list|()
block|{
comment|// Construct a font with an unlikely setup
name|QGraphicsScene
name|scene
decl_stmt|;
name|QFont
name|lineEditFont
init|=
name|QApplication
operator|::
name|font
argument_list|(
literal|"QLineEdit"
argument_list|)
decl_stmt|;
name|QFont
name|font
init|=
name|lineEditFont
decl_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
literal|43
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QGraphicsProxyWidget
name|proxy
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|edit
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
operator|&
name|proxy
argument_list|)
expr_stmt|;
name|EventSpy
name|editSpy
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|EventSpy
name|proxySpy
argument_list|(
operator|&
name|proxy
argument_list|)
decl_stmt|;
comment|// Widget to proxy (no change)
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|font
argument_list|()
argument_list|,
name|lineEditFont
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setFont
argument_list|(
name|QFont
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|font
argument_list|()
argument_list|,
name|lineEditFont
argument_list|)
expr_stmt|;
comment|// Proxy to widget
name|proxy
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// wait for QEvent::Polish
name|QVERIFY
argument_list|(
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|font
argument_list|()
argument_list|,
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|font
argument_list|()
argument_list|,
name|proxy
operator|.
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setFont
argument_list|(
name|QFont
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|editSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FontChange
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|font
argument_list|()
argument_list|,
name|lineEditFont
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|edit2
argument_list|)
expr_stmt|;
operator|delete
name|edit
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit2
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MainWidget
class|class
name|MainWidget
super|:
specifier|public
name|QMainWindow
block|{
name|Q_OBJECT
public|public:
DECL|function|MainWidget
name|MainWidget
parameter_list|()
member_init_list|:
name|QMainWindow
argument_list|()
block|{
name|view
operator|=
operator|new
name|QGraphicsView
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|scene
operator|=
operator|new
name|QGraphicsScene
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|QGraphicsWidget
argument_list|()
expr_stmt|;
name|widget
operator|=
operator|new
name|QGraphicsProxyWidget
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|layout
operator|=
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addItem
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|item
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"Push me"
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|setCentralWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|scene
operator|->
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|view
operator|->
name|setScene
argument_list|(
name|scene
argument_list|)
expr_stmt|;
name|scene
operator|->
name|setFocusItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|layout
operator|->
name|activate
argument_list|()
expr_stmt|;
block|}
DECL|member|view
name|QGraphicsView
modifier|*
name|view
decl_stmt|;
DECL|member|scene
name|QGraphicsScene
modifier|*
name|scene
decl_stmt|;
DECL|member|item
name|QGraphicsWidget
modifier|*
name|item
decl_stmt|;
DECL|member|layout
name|QGraphicsLinearLayout
modifier|*
name|layout
decl_stmt|;
DECL|member|widget
name|QGraphicsProxyWidget
modifier|*
name|widget
decl_stmt|;
DECL|member|button
name|QPushButton
modifier|*
name|button
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|dontCrashWhenDie
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|dontCrashWhenDie
parameter_list|()
block|{
name|MainWidget
modifier|*
name|w
init|=
operator|new
name|MainWidget
argument_list|()
decl_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
name|w
operator|->
name|view
operator|->
name|viewport
argument_list|()
argument_list|,
name|w
operator|->
name|view
operator|->
name|mapFromScene
argument_list|(
name|w
operator|->
name|widget
operator|->
name|mapToScene
argument_list|(
name|w
operator|->
name|widget
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|w
operator|->
name|item
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createProxyForChildWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|createProxyForChildWidget
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit1
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit1
operator|->
name|setText
argument_list|(
literal|"QLineEdit 1"
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|edit2
operator|->
name|setText
argument_list|(
literal|"QLineEdit 2"
argument_list|)
expr_stmt|;
name|QCheckBox
modifier|*
name|checkbox
init|=
operator|new
name|QCheckBox
argument_list|(
literal|"QCheckBox"
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vlayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit1
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|edit2
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|addWidget
argument_list|(
name|checkbox
argument_list|)
expr_stmt|;
name|vlayout
operator|->
name|insertStretch
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|box
init|=
operator|new
name|QGroupBox
argument_list|(
literal|"QGroupBox"
argument_list|)
decl_stmt|;
name|box
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|box
operator|->
name|setLayout
argument_list|(
name|vlayout
argument_list|)
expr_stmt|;
name|QDial
modifier|*
name|leftDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QDial
modifier|*
name|rightDial
init|=
operator|new
name|QDial
decl_stmt|;
name|QWidget
name|window
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|leftDial
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|rightDial
argument_list|)
expr_stmt|;
name|window
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|graphicsProxyWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkbox
operator|->
name|graphicsProxyWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|windowProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|graphicsProxyWidget
argument_list|()
operator|==
name|windowProxy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|->
name|graphicsProxyWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkbox
operator|->
name|graphicsProxyWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QGraphicsProxyWidget
argument_list|>
name|checkboxProxy
init|=
name|windowProxy
operator|->
name|createProxyForChildWidget
argument_list|(
name|checkbox
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|boxProxy
init|=
name|box
operator|->
name|graphicsProxyWidget
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|boxProxy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkbox
operator|->
name|graphicsProxyWidget
argument_list|()
operator|==
name|checkboxProxy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkboxProxy
operator|->
name|parentItem
argument_list|()
operator|==
name|boxProxy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|boxProxy
operator|->
name|parentItem
argument_list|()
operator|==
name|windowProxy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkboxProxy
operator|->
name|mapToScene
argument_list|(
name|QPointF
argument_list|()
argument_list|)
operator|==
name|checkbox
operator|->
name|mapTo
argument_list|(
operator|&
name|window
argument_list|,
name|QPoint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkboxProxy
operator|->
name|size
argument_list|()
operator|==
name|checkbox
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|boxProxy
operator|->
name|size
argument_list|()
operator|==
name|box
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|window
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|windowProxy
operator|->
name|size
argument_list|()
operator|==
name|QSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkboxProxy
operator|->
name|mapToScene
argument_list|(
name|QPointF
argument_list|()
argument_list|)
operator|==
name|checkbox
operator|->
name|mapTo
argument_list|(
operator|&
name|window
argument_list|,
name|QPoint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkboxProxy
operator|->
name|size
argument_list|()
operator|==
name|checkbox
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|boxProxy
operator|->
name|size
argument_list|()
operator|==
name|box
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|checkbox
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|checkboxProxy
operator|->
name|mapToScene
argument_list|(
name|QPointF
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|checkboxProxy
operator|->
name|mapToScene
argument_list|(
name|QPointF
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|boxProxy
operator|->
name|setWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkbox
operator|->
name|graphicsProxyWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|->
name|graphicsProxyWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|checkboxProxy
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|boxProxy
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ContextMenuWidget
class|class
name|ContextMenuWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|ContextMenuWidget
name|ContextMenuWidget
parameter_list|()
member_init_list|:
name|embeddedPopup
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|gotContextMenuEvent
argument_list|(
literal|false
argument_list|)
block|{ }
DECL|member|embeddedPopup
name|bool
name|embeddedPopup
decl_stmt|;
DECL|member|gotContextMenuEvent
name|bool
name|gotContextMenuEvent
decl_stmt|;
protected|protected:
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|ContextMenu
condition|)
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|checkMenu
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|QWidget
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|contextMenuEvent
name|void
name|contextMenuEvent
parameter_list|(
name|QContextMenuEvent
modifier|*
parameter_list|)
block|{
name|gotContextMenuEvent
operator|=
literal|true
expr_stmt|;
block|}
private|private
name|slots
private|:
DECL|function|checkMenu
name|void
name|checkMenu
parameter_list|()
block|{
if|if
condition|(
name|qFindChild
argument_list|<
name|QMenu
operator|*
argument_list|>
argument_list|(
name|this
argument_list|)
condition|)
name|embeddedPopup
operator|=
literal|true
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|actionsContextMenu_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|actionsContextMenu_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"actionsContextMenu"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hasFocus"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"without actionsContextMenu and with focus"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"without actionsContextMenu and without focus"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"with actionsContextMenu and focus"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"with actionsContextMenu without focus"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|actionsContextMenu
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|actionsContextMenu
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hasFocus
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|actionsContextMenu
argument_list|)
expr_stmt|;
name|ContextMenuWidget
modifier|*
name|widget
init|=
operator|new
name|ContextMenuWidget
decl_stmt|;
if|if
condition|(
name|actionsContextMenu
condition|)
block|{
name|widget
operator|->
name|addAction
argument_list|(
operator|new
name|QAction
argument_list|(
literal|"item 1"
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|addAction
argument_list|(
operator|new
name|QAction
argument_list|(
literal|"item 2"
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|addAction
argument_list|(
operator|new
name|QAction
argument_list|(
literal|"item 3"
argument_list|,
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setContextMenuPolicy
argument_list|(
name|Qt
operator|::
name|ActionsContextMenu
argument_list|)
expr_stmt|;
block|}
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasFocus
condition|)
name|scene
operator|.
name|addWidget
argument_list|(
name|widget
argument_list|)
operator|->
name|setFocus
argument_list|()
expr_stmt|;
else|else
name|scene
operator|.
name|addWidget
argument_list|(
name|widget
argument_list|)
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QContextMenuEvent
name|contextMenuEvent
argument_list|(
name|QContextMenuEvent
operator|::
name|Mouse
argument_list|,
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|mapToGlobal
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|rect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|contextMenuEvent
operator|.
name|accept
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
operator|&
name|contextMenuEvent
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasFocus
condition|)
block|{
if|if
condition|(
name|actionsContextMenu
condition|)
block|{
comment|//actionsContextMenu embedded popup but no contextMenuEvent (widget has focus)
name|QVERIFY
argument_list|(
name|widget
operator|->
name|embeddedPopup
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|gotContextMenuEvent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//no embedded popup but contextMenuEvent (widget has focus)
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|embeddedPopup
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|gotContextMenuEvent
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|//qgraphicsproxywidget doesn't have the focus, the widget must not receive any contextMenuEvent and must not create any QMenu
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|embeddedPopup
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|gotContextMenuEvent
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|deleteProxyForChildWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|deleteProxyForChildWidget
parameter_list|()
block|{
name|QDialog
name|dialog
decl_stmt|;
name|dialog
operator|.
name|resize
argument_list|(
literal|320
argument_list|,
literal|120
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|move
argument_list|(
literal|80
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|setSceneRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|640
argument_list|,
literal|480
argument_list|)
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QComboBox
modifier|*
name|combo
init|=
operator|new
name|QComboBox
decl_stmt|;
name|combo
operator|->
name|addItems
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"red"
operator|<<
literal|"green"
operator|<<
literal|"blue"
operator|<<
literal|"white"
operator|<<
literal|"black"
operator|<<
literal|"yellow"
operator|<<
literal|"cyan"
operator|<<
literal|"magenta"
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setLayout
argument_list|(
operator|new
name|QVBoxLayout
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|combo
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
operator|&
name|dialog
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//just don't crash
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
operator|delete
name|combo
expr_stmt|;
block|}
end_function
begin_function
DECL|function|bypassGraphicsProxyWidget_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|bypassGraphicsProxyWidget_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"bypass"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"autoembed"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bypass"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|bypassGraphicsProxyWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|bypassGraphicsProxyWidget
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|bypass
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|widget
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
argument_list|,
name|widget
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|WindowFlags
name|flags
decl_stmt|;
name|flags
operator||=
name|Qt
operator|::
name|Dialog
expr_stmt|;
if|if
condition|(
name|bypass
condition|)
name|flags
operator||=
name|Qt
operator|::
name|BypassGraphicsProxyWidget
expr_stmt|;
name|QFileDialog
modifier|*
name|dialog
init|=
operator|new
name|QFileDialog
argument_list|(
name|widget
argument_list|,
name|flags
argument_list|)
decl_stmt|;
name|dialog
operator|->
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|DontUseNativeDialog
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dialog
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|bypass
condition|?
literal|0
else|:
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|bypass
condition|)
name|QCOMPARE
argument_list|(
operator|(
operator|(
name|QGraphicsProxyWidget
operator|*
operator|)
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|first
argument_list|()
operator|)
operator|->
name|widget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
name|dialog
argument_list|)
expr_stmt|;
name|dialog
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
operator|delete
name|dialog
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeDndEvent
specifier|static
name|void
name|makeDndEvent
parameter_list|(
name|QGraphicsSceneDragDropEvent
modifier|*
name|event
parameter_list|,
name|QGraphicsView
modifier|*
name|view
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|pos
parameter_list|)
block|{
name|event
operator|->
name|setScenePos
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|event
operator|->
name|setScreenPos
argument_list|(
name|view
operator|->
name|mapToGlobal
argument_list|(
name|view
operator|->
name|mapFromScene
argument_list|(
name|pos
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|->
name|setButtons
argument_list|(
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|event
operator|->
name|setModifiers
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|event
operator|->
name|setPossibleActions
argument_list|(
name|Qt
operator|::
name|CopyAction
argument_list|)
expr_stmt|;
name|event
operator|->
name|setProposedAction
argument_list|(
name|Qt
operator|::
name|CopyAction
argument_list|)
expr_stmt|;
name|event
operator|->
name|setDropAction
argument_list|(
name|Qt
operator|::
name|CopyAction
argument_list|)
expr_stmt|;
name|event
operator|->
name|setWidget
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|setSource
argument_list|(
name|view
operator|->
name|viewport
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|ignore
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dragDrop
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|dragDrop
parameter_list|()
block|{
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
decl_stmt|;
comment|// acceptDrops(false)
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
comment|// acceptDrops(true)
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|buttonProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|button
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|editProxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|buttonProxy
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editProxy
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|button
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|60
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QMimeData
name|data
decl_stmt|;
name|data
operator|.
name|setText
argument_list|(
literal|"hei"
argument_list|)
expr_stmt|;
block|{
name|QGraphicsSceneDragDropEvent
name|event
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneDragEnter
argument_list|)
decl_stmt|;
name|makeDndEvent
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|view
argument_list|,
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setMimeData
argument_list|(
operator|&
name|data
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|event
operator|.
name|isAccepted
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QGraphicsSceneDragDropEvent
name|event
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneDragMove
argument_list|)
decl_stmt|;
name|makeDndEvent
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|view
argument_list|,
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setMimeData
argument_list|(
operator|&
name|data
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|event
operator|.
name|isAccepted
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QGraphicsSceneDragDropEvent
name|event
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneDragMove
argument_list|)
decl_stmt|;
name|makeDndEvent
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|view
argument_list|,
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|75
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setMimeData
argument_list|(
operator|&
name|data
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|event
operator|.
name|isAccepted
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QGraphicsSceneDragDropEvent
name|event
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneDrop
argument_list|)
decl_stmt|;
name|makeDndEvent
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|view
argument_list|,
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|75
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setMimeData
argument_list|(
operator|&
name|data
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|event
operator|.
name|isAccepted
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|edit
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"hei"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowFlags_data
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|windowFlags_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"proxyFlags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"widgetFlags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"resultingProxyFlags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"resultingWidgetFlags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"proxy(0) widget(0)"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"proxy(window)"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
operator|<<
literal|0
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"proxy(window) widget(window)"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"proxy(0) widget(window)"
argument_list|)
operator|<<
name|int
argument_list|(
literal|0
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
operator|<<
name|int
argument_list|(
literal|0
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowFlags
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|windowFlags
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|proxyFlags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|widgetFlags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|resultingProxyFlags
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|resultingWidgetFlags
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|WindowFlags
name|proxyWFlags
init|=
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|proxyFlags
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|WindowFlags
name|widgetWFlags
init|=
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|widgetFlags
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|WindowFlags
name|resultingProxyWFlags
init|=
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|resultingProxyFlags
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|WindowFlags
name|resultingWidgetWFlags
init|=
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|resultingWidgetFlags
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
name|proxy
argument_list|(
literal|0
argument_list|,
name|proxyWFlags
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|proxy
operator|.
name|windowFlags
argument_list|()
operator|&
name|proxyWFlags
operator|)
operator|==
name|proxyWFlags
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|,
name|widgetWFlags
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|widget
operator|->
name|windowFlags
argument_list|()
operator|&
name|widgetWFlags
operator|)
operator|==
name|widgetWFlags
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|resultingProxyFlags
operator|==
literal|0
condition|)
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|.
name|windowFlags
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|(
name|proxy
operator|.
name|windowFlags
argument_list|()
operator|&
name|resultingProxyWFlags
operator|)
operator|==
name|resultingProxyWFlags
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|widget
operator|->
name|windowFlags
argument_list|()
operator|&
name|resultingWidgetWFlags
operator|)
operator|==
name|resultingWidgetWFlags
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comboboxWindowFlags
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|comboboxWindowFlags
parameter_list|()
block|{
name|QComboBox
modifier|*
name|comboBox
init|=
operator|new
name|QComboBox
decl_stmt|;
name|comboBox
operator|->
name|addItem
argument_list|(
literal|"Item 1"
argument_list|)
expr_stmt|;
name|comboBox
operator|->
name|addItem
argument_list|(
literal|"Item 2"
argument_list|)
expr_stmt|;
name|comboBox
operator|->
name|addItem
argument_list|(
literal|"Item 3"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|embedWidget
init|=
name|comboBox
decl_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|embedWidget
argument_list|)
decl_stmt|;
name|proxy
operator|->
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|Window
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|embedWidget
operator|->
name|isWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|isWindow
argument_list|()
argument_list|)
expr_stmt|;
name|comboBox
operator|->
name|showPopup
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QGraphicsItem
modifier|*
name|popupProxy
init|=
name|proxy
operator|->
name|childItems
argument_list|()
operator|.
name|first
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|popupProxy
operator|->
name|isWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
cast|static_cast
argument_list|<
name|QGraphicsWidget
operator|*
argument_list|>
argument_list|(
name|popupProxy
argument_list|)
operator|->
name|windowFlags
argument_list|()
operator|&
name|Qt
operator|::
name|Popup
operator|)
operator|==
name|Qt
operator|::
name|Popup
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateAndDelete
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|updateAndDelete
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_MAC
name|QSKIP
argument_list|(
literal|"Test case unstable on this platform, QTBUG-23700"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
operator|new
name|QPushButton
argument_list|(
literal|"Hello World"
argument_list|)
argument_list|)
decl_stmt|;
name|View
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|view
operator|.
name|npaints
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Wait a bit to clear all pending paint events
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
specifier|const
name|QRect
name|itemDeviceBoundingRect
init|=
name|proxy
operator|->
name|deviceTransform
argument_list|(
name|view
operator|.
name|viewportTransform
argument_list|()
argument_list|)
operator|.
name|mapRect
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
argument_list|)
operator|.
name|toRect
argument_list|()
decl_stmt|;
specifier|const
name|QRegion
name|expectedRegion
init|=
name|itemDeviceBoundingRect
operator|.
name|adjusted
argument_list|(
operator|-
literal|2
argument_list|,
operator|-
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|view
operator|.
name|npaints
operator|=
literal|0
expr_stmt|;
name|view
operator|.
name|paintEventRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
comment|// Update and hide.
name|proxy
operator|->
name|update
argument_list|()
expr_stmt|;
name|proxy
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|npaints
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|paintEventRegion
argument_list|,
name|expectedRegion
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|view
operator|.
name|npaints
operator|=
literal|0
expr_stmt|;
name|view
operator|.
name|paintEventRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
comment|// Update and delete.
name|proxy
operator|->
name|update
argument_list|()
expr_stmt|;
operator|delete
name|proxy
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|npaints
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|paintEventRegion
argument_list|,
name|expectedRegion
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|InputMethod_LineEdit
class|class
name|InputMethod_LineEdit
super|:
specifier|public
name|QLineEdit
block|{
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|InputMethod
condition|)
operator|++
name|inputMethodEvents
expr_stmt|;
return|return
name|QLineEdit
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
public|public:
DECL|member|inputMethodEvents
name|int
name|inputMethodEvents
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|inputMethod
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|inputMethod
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
comment|// check that the proxy is initialized with the correct input method sensitivity
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|lineEdit
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|,
operator|!
operator|!
name|i
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|lineEdit
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|!
operator|!
operator|(
name|proxy
operator|->
name|flags
argument_list|()
operator|&
name|QGraphicsItem
operator|::
name|ItemAcceptsInputMethod
operator|)
argument_list|,
operator|!
operator|!
name|i
argument_list|)
expr_stmt|;
block|}
comment|// check that input method events are only forwarded to widgets with focus
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|InputMethod_LineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|InputMethod_LineEdit
decl_stmt|;
name|lineEdit
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|lineEdit
argument_list|)
decl_stmt|;
if|if
condition|(
name|i
condition|)
name|lineEdit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|lineEdit
operator|->
name|inputMethodEvents
operator|=
literal|0
expr_stmt|;
name|QInputMethodEvent
name|event
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|proxy
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|inputMethodEvents
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|scene
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
decl_stmt|;
name|w
operator|->
name|setLayout
argument_list|(
operator|new
name|QVBoxLayout
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|lineEdit
operator|->
name|setEchoMode
argument_list|(
name|QLineEdit
operator|::
name|Password
argument_list|)
expr_stmt|;
name|w
operator|->
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|proxy
operator|->
name|flags
argument_list|()
operator|&
name|QGraphicsItem
operator|::
name|ItemAcceptsInputMethod
operator|)
argument_list|)
expr_stmt|;
name|lineEdit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|proxy
operator|->
name|flags
argument_list|()
operator|&
name|QGraphicsItem
operator|::
name|ItemAcceptsInputMethod
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clickFocus
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|clickFocus
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|setItemIndexMethod
argument_list|(
name|QGraphicsScene
operator|::
name|NoIndex
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
name|scene
operator|.
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|)
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
block|{
name|EventSpy
name|proxySpy
argument_list|(
name|proxy
argument_list|)
decl_stmt|;
name|EventSpy
name|widgetSpy
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
argument_list|)
decl_stmt|;
name|view
operator|.
name|setFrameStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPointF
name|lineEditCenter
init|=
name|proxy
operator|->
name|mapToScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
decl_stmt|;
comment|// Spontaneous mouse click sets focus on a clickable widget.
for|for
control|(
name|int
name|retry
init|=
literal|0
init|;
name|retry
operator|<
literal|50
operator|&&
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
condition|;
name|retry
operator|++
control|)
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|lineEditCenter
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setFocusItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Non-spontaneous mouse click sets focus if the widget has been clicked before
block|{
name|QGraphicsSceneMouseEvent
name|event
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneMousePress
argument_list|)
decl_stmt|;
name|event
operator|.
name|setScenePos
argument_list|(
name|lineEditCenter
argument_list|)
expr_stmt|;
name|event
operator|.
name|setButton
argument_list|(
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
name|scene
operator|.
name|setFocusItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|)
expr_stmt|;
comment|// resets focusWidget
block|{
name|QPointF
name|lineEditCenter
init|=
name|proxy
operator|->
name|mapToScene
argument_list|(
name|proxy
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
decl_stmt|;
name|EventSpy
name|proxySpy
argument_list|(
name|proxy
argument_list|)
decl_stmt|;
name|EventSpy
name|widgetSpy
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Non-spontaneous mouse click does not set focus on the embedded widget.
block|{
name|QGraphicsSceneMouseEvent
name|event
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneMousePress
argument_list|)
decl_stmt|;
name|event
operator|.
name|setScenePos
argument_list|(
name|lineEditCenter
argument_list|)
expr_stmt|;
name|event
operator|.
name|setButton
argument_list|(
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
operator|&
name|scene
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|scene
operator|.
name|setFocusItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusOut
index|]
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Spontaneous click on non-clickable widget does not give focus.
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|lineEditCenter
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// Multiple clicks should only result in one FocusIn.
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setFocusItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|lineEditCenter
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|lineEditCenter
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proxy
operator|->
name|widget
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgetSpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxySpy
operator|.
name|counts
index|[
name|QEvent
operator|::
name|FocusIn
index|]
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|windowFrameMargins
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|windowFrameMargins
parameter_list|()
block|{
comment|// Make sure the top margin is non-zero when passing Qt::Window.
name|QGraphicsProxyWidget
modifier|*
name|proxy
init|=
operator|new
name|QGraphicsProxyWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Window
argument_list|)
decl_stmt|;
name|qreal
name|left
decl_stmt|,
name|top
decl_stmt|,
name|right
decl_stmt|,
name|bottom
decl_stmt|;
name|proxy
operator|->
name|getWindowFrameMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|top
operator|>
literal|0
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
operator|new
name|QPushButton
argument_list|(
literal|"testtest"
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|getWindowFrameMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|top
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|getWindowFrameMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|top
operator|>
literal|0
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|unsetWindowFrameMargins
argument_list|()
expr_stmt|;
name|proxy
operator|->
name|getWindowFrameMargins
argument_list|(
operator|&
name|left
argument_list|,
operator|&
name|top
argument_list|,
operator|&
name|right
argument_list|,
operator|&
name|bottom
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|top
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|HoverButton
class|class
name|HoverButton
super|:
specifier|public
name|QPushButton
block|{
public|public:
DECL|function|HoverButton
name|HoverButton
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QPushButton
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|hoverLeaveReceived
argument_list|(
literal|false
argument_list|)
block|{}
DECL|member|hoverLeaveReceived
name|bool
name|hoverLeaveReceived
decl_stmt|;
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|QEvent
operator|::
name|HoverLeave
operator|==
name|e
operator|->
name|type
argument_list|()
condition|)
name|hoverLeaveReceived
operator|=
literal|true
expr_stmt|;
return|return
name|QPushButton
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|Scene
class|class
name|Scene
super|:
specifier|public
name|QGraphicsScene
block|{
name|Q_OBJECT
public|public:
DECL|function|Scene
name|Scene
parameter_list|()
block|{
name|QWidget
modifier|*
name|background
init|=
operator|new
name|QWidget
decl_stmt|;
name|background
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|hoverButton
operator|=
operator|new
name|HoverButton
expr_stmt|;
name|hoverButton
operator|->
name|setParent
argument_list|(
name|background
argument_list|)
expr_stmt|;
name|hoverButton
operator|->
name|setText
argument_list|(
literal|"Second button"
argument_list|)
expr_stmt|;
name|hoverButton
operator|->
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|200
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|addWidget
argument_list|(
name|background
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|hideButton
init|=
operator|new
name|QPushButton
argument_list|(
literal|"I'm a button with a very very long text"
argument_list|)
decl_stmt|;
name|hideButton
operator|->
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|400
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|topButton
operator|=
name|addWidget
argument_list|(
name|hideButton
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|hideButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|hideButton
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|topButton
operator|->
name|setFocus
argument_list|()
expr_stmt|;
block|}
DECL|member|topButton
name|QGraphicsProxyWidget
modifier|*
name|topButton
decl_stmt|;
DECL|member|hoverButton
name|HoverButton
modifier|*
name|hoverButton
decl_stmt|;
public|public
name|slots
public|:
DECL|function|hideButton
name|void
name|hideButton
parameter_list|()
block|{
name|QCursor
operator|::
name|setPos
argument_list|(
literal|600
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|topButton
operator|->
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|QTBUG_6986_sendMouseEventToAlienWidget
name|void
name|tst_QGraphicsProxyWidget
operator|::
name|QTBUG_6986_sendMouseEventToAlienWidget
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|QTEST_NO_CURSOR
argument_list|)
name|QSKIP
argument_list|(
literal|"Test case unstable on this platform"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QGraphicsView
name|view
decl_stmt|;
name|Scene
name|scene
decl_stmt|;
name|view
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|600
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QTest
operator|::
name|qWaitForWindowActive
argument_list|(
operator|&
name|view
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|QCursor
operator|::
name|setPos
argument_list|(
name|view
operator|.
name|mapToGlobal
argument_list|(
name|view
operator|.
name|mapFromScene
argument_list|(
name|scene
operator|.
name|topButton
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|view
operator|.
name|mapFromScene
argument_list|(
name|scene
operator|.
name|topButton
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|scene
operator|.
name|hoverButton
operator|->
name|hoverLeaveReceived
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QGraphicsProxyWidget
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qgraphicsproxywidget.moc"
end_include
end_unit
