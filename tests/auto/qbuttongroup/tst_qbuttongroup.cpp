begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|"qbuttongroup.h"
end_include
begin_include
include|#
directive|include
file|<qaction.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qdialog.h>
end_include
begin_include
include|#
directive|include
file|<qlayout.h>
end_include
begin_include
include|#
directive|include
file|<qgroupbox.h>
end_include
begin_include
include|#
directive|include
file|<qradiobutton.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbutton.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_MAC
end_ifdef
begin_include
include|#
directive|include
file|<qsettings.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"../../shared/util.h"
end_include
begin_class
DECL|class|SpecialRadioButton
class|class
name|SpecialRadioButton
super|:
specifier|public
name|QRadioButton
block|{
public|public:
DECL|function|SpecialRadioButton
name|SpecialRadioButton
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QRadioButton
argument_list|(
name|parent
argument_list|)
block|{ }
protected|protected:
DECL|function|focusInEvent
name|void
name|focusInEvent
parameter_list|(
name|QFocusEvent
modifier|*
parameter_list|)
block|{
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
name|this
argument_list|,
operator|new
name|QKeyEvent
argument_list|(
name|QEvent
operator|::
name|KeyPress
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_include
include|#
directive|include
file|<qbuttongroup.h>
end_include
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_class
DECL|class|tst_QButtonGroup
class|class
name|tst_QButtonGroup
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QButtonGroup
parameter_list|()
constructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|arrowKeyNavigation
parameter_list|()
function_decl|;
name|void
name|exclusive
parameter_list|()
function_decl|;
name|void
name|exclusiveWithActions
parameter_list|()
function_decl|;
name|void
name|testSignals
parameter_list|()
function_decl|;
name|void
name|checkedButton
parameter_list|()
function_decl|;
name|void
name|task106609
parameter_list|()
function_decl|;
name|void
name|autoIncrementId
parameter_list|()
function_decl|;
name|void
name|task209485_removeFromGroupInEventHandler_data
parameter_list|()
function_decl|;
name|void
name|task209485_removeFromGroupInEventHandler
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QButtonGroup
name|tst_QButtonGroup
operator|::
name|tst_QButtonGroup
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QButtonGroup
operator|::
name|initTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QButtonGroup
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QButtonGroup
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QButtonGroup
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
specifier|extern
name|bool
name|Q_GUI_EXPORT
name|qt_tab_all_widgets
decl_stmt|;
end_decl_stmt
begin_function
name|QT_END_NAMESPACE
DECL|function|arrowKeyNavigation
name|void
name|tst_QButtonGroup
operator|::
name|arrowKeyNavigation
parameter_list|()
block|{
if|if
condition|(
operator|!
name|qt_tab_all_widgets
condition|)
name|QSKIP
argument_list|(
literal|"This test requires full keyboard control to be enabled."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
name|QDialog
name|dlg
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QHBoxLayout
name|layout
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QGroupBox
name|g1
argument_list|(
literal|"1"
argument_list|,
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QHBoxLayout
name|g1layout
argument_list|(
operator|&
name|g1
argument_list|)
decl_stmt|;
name|QRadioButton
name|bt1
argument_list|(
literal|"Radio1"
argument_list|,
operator|&
name|g1
argument_list|)
decl_stmt|;
name|QPushButton
name|pb
argument_list|(
literal|"PB"
argument_list|,
operator|&
name|g1
argument_list|)
decl_stmt|;
name|QLineEdit
name|le
argument_list|(
operator|&
name|g1
argument_list|)
decl_stmt|;
name|QRadioButton
name|bt2
argument_list|(
literal|"Radio2"
argument_list|,
operator|&
name|g1
argument_list|)
decl_stmt|;
name|g1layout
operator|.
name|addWidget
argument_list|(
operator|&
name|bt1
argument_list|)
expr_stmt|;
name|g1layout
operator|.
name|addWidget
argument_list|(
operator|&
name|pb
argument_list|)
expr_stmt|;
name|g1layout
operator|.
name|addWidget
argument_list|(
operator|&
name|le
argument_list|)
expr_stmt|;
name|g1layout
operator|.
name|addWidget
argument_list|(
operator|&
name|bt2
argument_list|)
expr_stmt|;
comment|// create a mixed button group with radion buttons and push
comment|// buttons. Not very useful, but it tests borderline cases wrt
comment|// focus handling.
name|QButtonGroup
name|bgrp1
argument_list|(
operator|&
name|g1
argument_list|)
decl_stmt|;
name|bgrp1
operator|.
name|addButton
argument_list|(
operator|&
name|bt1
argument_list|)
expr_stmt|;
name|bgrp1
operator|.
name|addButton
argument_list|(
operator|&
name|pb
argument_list|)
expr_stmt|;
name|bgrp1
operator|.
name|addButton
argument_list|(
operator|&
name|bt2
argument_list|)
expr_stmt|;
name|QGroupBox
name|g2
argument_list|(
literal|"2"
argument_list|,
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QVBoxLayout
name|g2layout
argument_list|(
operator|&
name|g2
argument_list|)
decl_stmt|;
comment|// we don't need a button group here, because radio buttons are
comment|// auto exclusive, i.e. they group themselves in he same parent
comment|// widget.
name|QRadioButton
name|bt3
argument_list|(
literal|"Radio3"
argument_list|,
operator|&
name|g2
argument_list|)
decl_stmt|;
name|QRadioButton
name|bt4
argument_list|(
literal|"Radio4"
argument_list|,
operator|&
name|g2
argument_list|)
decl_stmt|;
name|g2layout
operator|.
name|addWidget
argument_list|(
operator|&
name|bt3
argument_list|)
expr_stmt|;
name|g2layout
operator|.
name|addWidget
argument_list|(
operator|&
name|bt4
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|g1
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|g2
argument_list|)
expr_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|dlg
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|dlg
argument_list|)
expr_stmt|;
name|bt1
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|bt1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt1
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pb
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|pb
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt2
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt2
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pb
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|pb
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt1
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pb
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|pb
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|le
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|le
operator|.
name|selectedText
argument_list|()
argument_list|,
name|le
operator|.
name|text
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|le
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt2
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt3
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt3
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt4
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt4
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt4
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt4
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt3
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|bt3
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|bt3
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|exclusiveWithActions
name|void
name|tst_QButtonGroup
operator|::
name|exclusiveWithActions
parameter_list|()
block|{
name|QDialog
name|dlg
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QHBoxLayout
name|layout
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|action1
init|=
operator|new
name|QAction
argument_list|(
literal|"Action 1"
argument_list|,
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|action1
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QAction
modifier|*
name|action2
init|=
operator|new
name|QAction
argument_list|(
literal|"Action 2"
argument_list|,
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|action2
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QAction
modifier|*
name|action3
init|=
operator|new
name|QAction
argument_list|(
literal|"Action 3"
argument_list|,
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|action3
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QToolButton
modifier|*
name|toolButton1
init|=
operator|new
name|QToolButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QToolButton
modifier|*
name|toolButton2
init|=
operator|new
name|QToolButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QToolButton
modifier|*
name|toolButton3
init|=
operator|new
name|QToolButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|toolButton1
operator|->
name|setDefaultAction
argument_list|(
name|action1
argument_list|)
expr_stmt|;
name|toolButton2
operator|->
name|setDefaultAction
argument_list|(
name|action2
argument_list|)
expr_stmt|;
name|toolButton3
operator|->
name|setDefaultAction
argument_list|(
name|action3
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|toolButton1
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|toolButton2
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|toolButton3
argument_list|)
expr_stmt|;
name|QButtonGroup
modifier|*
name|buttonGroup
init|=
operator|new
name|QButtonGroup
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|buttonGroup
operator|->
name|setExclusive
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|toolButton1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|toolButton2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|toolButton3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|toolButton1
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|action1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|toolButton2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|action2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|toolButton3
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|action3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|toolButton2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|action2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toolButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|action3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|exclusive
name|void
name|tst_QButtonGroup
operator|::
name|exclusive
parameter_list|()
block|{
name|QDialog
name|dlg
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QHBoxLayout
name|layout
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pushButton1
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pushButton2
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|pushButton3
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|pushButton1
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pushButton2
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pushButton3
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|pushButton1
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|pushButton2
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
name|pushButton3
argument_list|)
expr_stmt|;
name|QButtonGroup
modifier|*
name|buttonGroup
init|=
operator|new
name|QButtonGroup
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|buttonGroup
operator|->
name|setExclusive
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|pushButton1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|pushButton2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|pushButton3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|pushButton1
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|pushButton2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|pushButton3
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|pushButton2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pushButton2
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton1
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pushButton3
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSignals
name|void
name|tst_QButtonGroup
operator|::
name|testSignals
parameter_list|()
block|{
name|QButtonGroup
name|buttons
decl_stmt|;
name|QPushButton
name|pb1
decl_stmt|;
name|QPushButton
name|pb2
decl_stmt|;
name|QPushButton
name|pb3
decl_stmt|;
name|buttons
operator|.
name|addButton
argument_list|(
operator|&
name|pb1
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|addButton
argument_list|(
operator|&
name|pb2
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|addButton
argument_list|(
operator|&
name|pb3
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
literal|"QAbstractButton *"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|clickedSpy
argument_list|(
operator|&
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|clickedIdSpy
argument_list|(
operator|&
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|pressedSpy
argument_list|(
operator|&
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonPressed
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|pressedIdSpy
argument_list|(
operator|&
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonPressed
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|releasedSpy
argument_list|(
operator|&
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonReleased
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|releasedIdSpy
argument_list|(
operator|&
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonReleased
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|pb1
operator|.
name|animateClick
argument_list|()
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedIdSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|int
name|expectedId
init|=
operator|-
literal|2
decl_stmt|;
name|QVERIFY
argument_list|(
name|clickedIdSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
name|expectedId
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedIdSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pressedIdSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
name|expectedId
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|releasedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|releasedIdSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|releasedIdSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
name|expectedId
argument_list|)
expr_stmt|;
name|clickedSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|clickedIdSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|pressedSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|pressedIdSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|releasedSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|releasedIdSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|pb2
operator|.
name|animateClick
argument_list|()
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedIdSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|clickedIdSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
literal|23
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|pressedIdSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|pressedIdSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
literal|23
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|releasedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|releasedIdSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|releasedIdSpy
operator|.
name|takeFirst
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
literal|23
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task106609
name|void
name|tst_QButtonGroup
operator|::
name|task106609
parameter_list|()
block|{
comment|// task is:
comment|// sometimes, only one of the two signals in QButtonGroup get emitted
comment|// they get emitted when using the mouse, but when using the keyboard, only one is
comment|//
name|QDialog
name|dlg
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QButtonGroup
modifier|*
name|buttons
init|=
operator|new
name|QButtonGroup
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vbox
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|SpecialRadioButton
modifier|*
name|radio1
init|=
operator|new
name|SpecialRadioButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|radio1
operator|->
name|setText
argument_list|(
literal|"radio1"
argument_list|)
expr_stmt|;
name|SpecialRadioButton
modifier|*
name|radio2
init|=
operator|new
name|SpecialRadioButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|radio2
operator|->
name|setText
argument_list|(
literal|"radio2"
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|radio3
init|=
operator|new
name|QRadioButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|radio3
operator|->
name|setText
argument_list|(
literal|"radio3"
argument_list|)
expr_stmt|;
name|buttons
operator|->
name|addButton
argument_list|(
name|radio1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|radio1
argument_list|)
expr_stmt|;
name|buttons
operator|->
name|addButton
argument_list|(
name|radio2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|radio2
argument_list|)
expr_stmt|;
name|buttons
operator|->
name|addButton
argument_list|(
name|radio3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|radio3
argument_list|)
expr_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|dlg
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
literal|"QAbstractButton*"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy1
argument_list|(
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy2
argument_list|(
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|dlg
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|dlg
argument_list|)
argument_list|)
expr_stmt|;
name|radio1
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|radio1
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|//qDebug()<< "int:"<< spy2.count()<< "QAbstractButton*:"<< spy1.count();
name|QCOMPARE
argument_list|(
name|spy2
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy1
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkedButton
name|void
name|tst_QButtonGroup
operator|::
name|checkedButton
parameter_list|()
block|{
name|QButtonGroup
name|buttons
decl_stmt|;
name|buttons
operator|.
name|setExclusive
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QPushButton
name|pb1
decl_stmt|;
name|pb1
operator|.
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QPushButton
name|pb2
decl_stmt|;
name|pb2
operator|.
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|addButton
argument_list|(
operator|&
name|pb1
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|addButton
argument_list|(
operator|&
name|pb2
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|pb1
operator|.
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
operator|&
name|pb1
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
operator|&
name|pb2
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
operator|&
name|pb1
argument_list|)
expr_stmt|;
name|pb1
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|setExclusive
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|pb1
operator|.
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
operator|&
name|pb1
argument_list|)
expr_stmt|;
name|pb2
operator|.
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
operator|&
name|pb2
argument_list|)
expr_stmt|;
comment|// checked button cannot be unchecked
name|pb2
operator|.
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|.
name|checkedButton
argument_list|()
operator|==
operator|&
name|pb2
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|task209485_ButtonDeleter
class|class
name|task209485_ButtonDeleter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|task209485_ButtonDeleter
name|task209485_ButtonDeleter
parameter_list|(
name|QButtonGroup
modifier|*
name|group
parameter_list|,
name|bool
name|deleteButton
parameter_list|)
member_init_list|:
name|group
argument_list|(
name|group
argument_list|)
member_init_list|,
name|deleteButton
argument_list|(
name|deleteButton
argument_list|)
block|{
name|connect
argument_list|(
name|group
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
private|private
name|slots
private|:
DECL|function|buttonClicked
name|void
name|buttonClicked
parameter_list|(
name|int
parameter_list|)
block|{
if|if
condition|(
name|deleteButton
condition|)
name|group
operator|->
name|removeButton
argument_list|(
name|group
operator|->
name|buttons
argument_list|()
operator|.
name|first
argument_list|()
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|group
name|QButtonGroup
modifier|*
name|group
decl_stmt|;
DECL|member|deleteButton
name|bool
name|deleteButton
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|task209485_removeFromGroupInEventHandler_data
name|void
name|tst_QButtonGroup
operator|::
name|task209485_removeFromGroupInEventHandler_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"deleteButton"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"signalCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"buttonPress 1"
argument_list|)
operator|<<
literal|true
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"buttonPress 2"
argument_list|)
operator|<<
literal|false
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task209485_removeFromGroupInEventHandler
name|void
name|tst_QButtonGroup
operator|::
name|task209485_removeFromGroupInEventHandler
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|deleteButton
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|signalCount
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
literal|"QAbstractButton *"
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
decl_stmt|;
name|QButtonGroup
name|group
decl_stmt|;
name|group
operator|.
name|addButton
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|task209485_ButtonDeleter
name|buttonDeleter
argument_list|(
operator|&
name|group
argument_list|,
name|deleteButton
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy1
argument_list|(
operator|&
name|group
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy2
argument_list|(
operator|&
name|group
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// NOTE: Reintroducing the bug of this task will cause the following line to crash:
name|QTest
operator|::
name|mouseClick
argument_list|(
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy1
operator|.
name|count
argument_list|()
operator|+
name|spy2
operator|.
name|count
argument_list|()
argument_list|,
name|signalCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|autoIncrementId
name|void
name|tst_QButtonGroup
operator|::
name|autoIncrementId
parameter_list|()
block|{
name|QDialog
name|dlg
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QButtonGroup
modifier|*
name|buttons
init|=
operator|new
name|QButtonGroup
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vbox
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QRadioButton
modifier|*
name|radio1
init|=
operator|new
name|QRadioButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|radio1
operator|->
name|setText
argument_list|(
literal|"radio1"
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|radio2
init|=
operator|new
name|QRadioButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|radio2
operator|->
name|setText
argument_list|(
literal|"radio2"
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|radio3
init|=
operator|new
name|QRadioButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|radio3
operator|->
name|setText
argument_list|(
literal|"radio3"
argument_list|)
expr_stmt|;
name|buttons
operator|->
name|addButton
argument_list|(
name|radio1
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|radio1
argument_list|)
expr_stmt|;
name|buttons
operator|->
name|addButton
argument_list|(
name|radio2
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|radio2
argument_list|)
expr_stmt|;
name|buttons
operator|->
name|addButton
argument_list|(
name|radio3
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
name|radio3
argument_list|)
expr_stmt|;
name|radio1
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|->
name|id
argument_list|(
name|radio1
argument_list|)
operator|==
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|->
name|id
argument_list|(
name|radio2
argument_list|)
operator|==
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttons
operator|->
name|id
argument_list|(
name|radio3
argument_list|)
operator|==
operator|-
literal|4
argument_list|)
expr_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QButtonGroup
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qbuttongroup.moc"
end_include
end_unit
