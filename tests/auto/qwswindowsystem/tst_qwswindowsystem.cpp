begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_QWS
end_ifdef
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=gui/embedded/qwindowsystem_qws.h gui/embedded/qwindowsystem_qws.cpp
end_comment
begin_include
include|#
directive|include
file|<qwindowsystem_qws.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qdesktopwidget.h>
end_include
begin_include
include|#
directive|include
file|<qdirectpainter_qws.h>
end_include
begin_include
include|#
directive|include
file|<qscreen_qws.h>
end_include
begin_include
include|#
directive|include
file|<private/qwindowsurface_qws_p.h>
end_include
begin_class
DECL|class|tst_QWSWindowSystem
class|class
name|tst_QWSWindowSystem
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QWSWindowSystem
name|tst_QWSWindowSystem
parameter_list|()
block|{}
DECL|function|~tst_QWSWindowSystem
name|~
name|tst_QWSWindowSystem
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|showHideWindow
parameter_list|()
function_decl|;
name|void
name|raiseLowerWindow
parameter_list|()
function_decl|;
name|void
name|windowOpacity
parameter_list|()
function_decl|;
name|void
name|directPainter
parameter_list|()
function_decl|;
name|void
name|setMaxWindowRect
parameter_list|()
function_decl|;
name|void
name|initialGeometry
parameter_list|()
function_decl|;
name|void
name|WA_PaintOnScreen
parameter_list|()
function_decl|;
name|void
name|toplevelMove
parameter_list|()
function_decl|;
name|void
name|dontFlushUnitializedWindowSurfaces
parameter_list|()
function_decl|;
name|void
name|task188025_data
parameter_list|()
function_decl|;
name|void
name|task188025
parameter_list|()
function_decl|;
private|private:
name|QWSWindow
modifier|*
name|getWindow
parameter_list|(
name|int
name|windId
parameter_list|)
function_decl|;
DECL|member|bgColor
name|QColor
name|bgColor
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|ColorWidget
class|class
name|ColorWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|ColorWidget
name|ColorWidget
parameter_list|(
specifier|const
name|QColor
modifier|&
name|color
init|=
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|f
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
literal|0
argument_list|,
name|f
operator||
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
member_init_list|,
name|c
argument_list|(
name|color
argument_list|)
block|{}
DECL|function|color
name|QColor
name|color
parameter_list|()
block|{
return|return
name|c
return|;
block|}
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|QBrush
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|c
name|QColor
name|c
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|initTestCase
name|void
name|tst_QWSWindowSystem
operator|::
name|initTestCase
parameter_list|()
block|{
name|bgColor
operator|=
name|QColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QWSServer
modifier|*
name|server
init|=
name|QWSServer
operator|::
name|instance
argument_list|()
decl_stmt|;
name|server
operator|->
name|setBackground
argument_list|(
name|bgColor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getWindow
name|QWSWindow
modifier|*
name|tst_QWSWindowSystem
operator|::
name|getWindow
parameter_list|(
name|int
name|winId
parameter_list|)
block|{
name|QWSServer
modifier|*
name|server
init|=
name|QWSServer
operator|::
name|instance
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|QWSWindow
modifier|*
name|w
decl|,
name|server
operator|->
name|clientWindows
argument_list|()
control|)
block|{
if|if
condition|(
name|w
operator|->
name|winId
argument_list|()
operator|==
name|winId
condition|)
return|return
name|w
return|;
block|}
return|return
literal|0
return|;
block|}
end_function
begin_define
DECL|macro|VERIFY_COLOR
define|#
directive|define
name|VERIFY_COLOR
parameter_list|(
name|rect
parameter_list|,
name|color
parameter_list|)
value|{                                     \     const QPixmap pixmap = QPixmap::grabWindow(QDesktopWidget().winId(), \                                                rect.left(), rect.top(), \                                                rect.width(), rect.height()); \     QCOMPARE(pixmap.size(), rect.size());                               \     QPixmap expectedPixmap(pixmap);
comment|/* ensure equal formats */
value|\     expectedPixmap.fill(color);                                         \     QCOMPARE(pixmap, expectedPixmap);                                   \ }
end_define
begin_function
DECL|function|showHideWindow
name|void
name|tst_QWSWindowSystem
operator|::
name|showHideWindow
parameter_list|()
block|{
name|ColorWidget
name|w
decl_stmt|;
specifier|const
name|QRect
name|rect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QWSWindow
modifier|*
name|win
init|=
name|getWindow
argument_list|(
name|w
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|win
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|QCOMPARE
argument_list|(
name|win
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|raiseLowerWindow
name|void
name|tst_QWSWindowSystem
operator|::
name|raiseLowerWindow
parameter_list|()
block|{
specifier|const
name|QRect
name|rect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|ColorWidget
name|w1
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w1
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|w1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|ColorWidget
name|w2
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
decl_stmt|;
name|w2
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|w2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QWSWindow
modifier|*
name|win1
init|=
name|getWindow
argument_list|(
name|w1
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QWSWindow
modifier|*
name|win2
init|=
name|getWindow
argument_list|(
name|w2
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w2
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|w1
operator|.
name|raise
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w1
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|w1
operator|.
name|lower
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|requestedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w2
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowOpacity
name|void
name|tst_QWSWindowSystem
operator|::
name|windowOpacity
parameter_list|()
block|{
specifier|const
name|QRect
name|rect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|ColorWidget
name|w1
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w1
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|w1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QWidget
name|w2
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
decl_stmt|;
name|w2
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|w2
operator|.
name|show
argument_list|()
expr_stmt|;
name|w2
operator|.
name|raise
argument_list|()
expr_stmt|;
name|QWSWindow
modifier|*
name|win1
init|=
name|getWindow
argument_list|(
name|w1
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QWSWindow
modifier|*
name|win2
init|=
name|getWindow
argument_list|(
name|w2
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w2
operator|.
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|w2
operator|.
name|backgroundRole
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make w2 transparent so both widgets are shown.
name|w2
operator|.
name|setWindowOpacity
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w1
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|w2
operator|.
name|setWindowOpacity
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w2
operator|.
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|w2
operator|.
name|backgroundRole
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Use the palette to make w2 transparent
name|QPalette
name|palette
init|=
name|w2
operator|.
name|palette
argument_list|()
decl_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|All
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w1
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|All
argument_list|,
name|QPalette
operator|::
name|Background
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|QCOMPARE
argument_list|(
name|win1
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win2
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPainter
name|void
name|tst_QWSWindowSystem
operator|::
name|directPainter
parameter_list|()
block|{
specifier|const
name|QRect
name|rect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QWSWindow
modifier|*
name|win
init|=
name|getWindow
argument_list|(
name|w
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
comment|// reserve screen area using the static functions
name|QDirectPainter
operator|::
name|reserveRegion
argument_list|(
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDirectPainter
operator|::
name|reservedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QDirectPainter
operator|::
name|reserveRegion
argument_list|(
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDirectPainter
operator|::
name|reservedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
comment|// reserve screen area using a QDirectPainter object
block|{
name|QDirectPainter
name|dp
decl_stmt|;
name|dp
operator|.
name|setRegion
argument_list|(
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|dp
operator|.
name|lower
argument_list|()
expr_stmt|;
name|QWSWindow
modifier|*
name|dpWin
init|=
name|getWindow
argument_list|(
name|dp
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dpWin
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|lower
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dpWin
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|win
operator|->
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|rect
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setMaxWindowRect
name|void
name|tst_QWSWindowSystem
operator|::
name|setMaxWindowRect
parameter_list|()
block|{
name|QDesktopWidget
modifier|*
name|desktop
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|desktop
argument_list|,
name|SIGNAL
argument_list|(
name|workAreaResized
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|screenRect
init|=
name|desktop
operator|->
name|screenGeometry
argument_list|()
decl_stmt|;
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QWidget
name|w2
decl_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|frameGeometry
argument_list|()
argument_list|,
name|screenRect
argument_list|)
expr_stmt|;
name|QRect
name|available
init|=
name|QRect
argument_list|(
name|screenRect
operator|.
name|left
argument_list|()
argument_list|,
name|screenRect
operator|.
name|top
argument_list|()
argument_list|,
name|screenRect
operator|.
name|right
argument_list|()
operator|+
literal|1
argument_list|,
name|screenRect
operator|.
name|bottom
argument_list|()
operator|-
literal|20
operator|+
literal|1
argument_list|)
decl_stmt|;
name|QWSServer
operator|::
name|setMaxWindowRect
argument_list|(
name|available
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|desktop
operator|->
name|availableGeometry
argument_list|()
argument_list|,
name|available
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|frameGeometry
argument_list|()
argument_list|,
name|desktop
operator|->
name|availableGeometry
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QWSServer
operator|::
name|setMaxWindowRect
argument_list|(
name|screenRect
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|desktop
operator|->
name|availableGeometry
argument_list|()
argument_list|,
name|screenRect
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|frameGeometry
argument_list|()
argument_list|,
name|desktop
operator|->
name|availableGeometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initialGeometry
name|void
name|tst_QWSWindowSystem
operator|::
name|initialGeometry
parameter_list|()
block|{
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|rect
argument_list|(
literal|10
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|QCOMPARE
argument_list|(
name|w
operator|.
name|frameGeometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|WA_PaintOnScreen
name|void
name|tst_QWSWindowSystem
operator|::
name|WA_PaintOnScreen
parameter_list|()
block|{
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|QRect
name|rect
decl_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|=
name|QRect
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|QWSWindowSurface
modifier|*
name|surface
init|=
cast|static_cast
argument_list|<
name|QWSWindowSurface
operator|*
argument_list|>
argument_list|(
name|w
operator|.
name|windowSurface
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|surface
operator|->
name|key
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"OnScreen"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
comment|// move
name|rect
operator|=
name|QRect
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
comment|// resize
name|rect
operator|=
name|QRect
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|,
literal|60
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|VERIFY_COLOR
argument_list|(
name|rect
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|DummyMoveSurface
class|class
name|DummyMoveSurface
super|:
specifier|public
name|QWSSharedMemSurface
block|{
public|public:
DECL|function|DummyMoveSurface
name|DummyMoveSurface
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
member_init_list|:
name|QWSSharedMemSurface
argument_list|(
name|w
argument_list|)
block|{}
DECL|function|DummyMoveSurface
name|DummyMoveSurface
parameter_list|()
member_init_list|:
name|QWSSharedMemSurface
argument_list|()
block|{}
comment|// doesn't do any move
DECL|function|move
name|QRegion
name|move
parameter_list|(
specifier|const
name|QPoint
modifier|&
parameter_list|,
specifier|const
name|QRegion
modifier|&
parameter_list|)
block|{
return|return
name|QRegion
argument_list|()
return|;
block|}
DECL|function|key
name|QString
name|key
parameter_list|()
specifier|const
block|{
return|return
name|QLatin1String
argument_list|(
literal|"dummy"
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|DummyScreen
class|class
name|DummyScreen
super|:
specifier|public
name|QScreen
block|{
private|private:
DECL|member|s
name|QScreen
modifier|*
name|s
decl_stmt|;
public|public:
DECL|function|DummyScreen
name|DummyScreen
parameter_list|()
member_init_list|:
name|QScreen
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|s
argument_list|(
name|qt_screen
argument_list|)
block|{
name|qt_screen
operator|=
name|this
expr_stmt|;
name|w
operator|=
name|s
operator|->
name|width
argument_list|()
expr_stmt|;
name|h
operator|=
name|s
operator|->
name|height
argument_list|()
expr_stmt|;
name|dw
operator|=
name|s
operator|->
name|deviceWidth
argument_list|()
expr_stmt|;
name|dh
operator|=
name|s
operator|->
name|deviceHeight
argument_list|()
expr_stmt|;
name|d
operator|=
name|s
operator|->
name|depth
argument_list|()
expr_stmt|;
name|data
operator|=
name|s
operator|->
name|base
argument_list|()
expr_stmt|;
name|lstep
operator|=
name|s
operator|->
name|linestep
argument_list|()
expr_stmt|;
name|physWidth
operator|=
name|s
operator|->
name|physicalWidth
argument_list|()
expr_stmt|;
name|physHeight
operator|=
name|s
operator|->
name|physicalHeight
argument_list|()
expr_stmt|;
name|setPixelFormat
argument_list|(
name|s
operator|->
name|pixelFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|function|~DummyScreen
name|~
name|DummyScreen
parameter_list|()
block|{
name|qt_screen
operator|=
name|s
expr_stmt|;
block|}
DECL|function|initDevice
name|bool
name|initDevice
parameter_list|()
block|{
return|return
name|s
operator|->
name|initDevice
argument_list|()
return|;
block|}
DECL|function|connect
name|bool
name|connect
parameter_list|(
specifier|const
name|QString
modifier|&
name|displaySpec
parameter_list|)
block|{
return|return
name|s
operator|->
name|connect
argument_list|(
name|displaySpec
argument_list|)
return|;
block|}
DECL|function|disconnect
name|void
name|disconnect
parameter_list|()
block|{
name|s
operator|->
name|disconnect
argument_list|()
expr_stmt|;
block|}
DECL|function|setMode
name|void
name|setMode
parameter_list|(
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|d
parameter_list|)
block|{
name|s
operator|->
name|setMode
argument_list|(
name|w
argument_list|,
name|h
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
DECL|function|exposeRegion
name|void
name|exposeRegion
parameter_list|(
name|QRegion
name|r
parameter_list|,
name|int
name|changing
parameter_list|)
block|{
name|s
operator|->
name|exposeRegion
argument_list|(
name|r
argument_list|,
name|changing
argument_list|)
expr_stmt|;
block|}
DECL|function|blit
name|void
name|blit
parameter_list|(
specifier|const
name|QImage
modifier|&
name|img
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|topLeft
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|r
parameter_list|)
block|{
name|s
operator|->
name|blit
argument_list|(
name|img
argument_list|,
name|topLeft
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
DECL|function|solidFill
name|void
name|solidFill
parameter_list|(
specifier|const
name|QColor
modifier|&
name|color
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|)
block|{
name|s
operator|->
name|solidFill
argument_list|(
name|color
argument_list|,
name|region
argument_list|)
expr_stmt|;
block|}
DECL|function|createSurface
name|QWSWindowSurface
modifier|*
name|createSurface
parameter_list|(
specifier|const
name|QString
modifier|&
name|key
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|key
operator|==
name|QLatin1String
argument_list|(
literal|"dummy"
argument_list|)
condition|)
return|return
operator|new
name|DummyMoveSurface
return|;
return|return
name|s
operator|->
name|createSurface
argument_list|(
name|key
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|toplevelMove
name|void
name|tst_QWSWindowSystem
operator|::
name|toplevelMove
parameter_list|()
block|{
block|{
comment|// default move implementation, opaque window
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
name|w
operator|.
name|move
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
block|}
block|{
comment|// default move implementation, non-opaque window
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|setWindowOpacity
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|//        VERIFY_COLOR(QRect(50, 50, 50, 50), w.color());
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
name|w
operator|.
name|move
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|//        VERIFY_COLOR(QRect(100, 100, 50, 50), w.color());
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
block|}
name|DummyScreen
modifier|*
name|screen
init|=
operator|new
name|DummyScreen
decl_stmt|;
block|{
comment|// dummy accelerated move
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|setWindowSurface
argument_list|(
operator|new
name|DummyMoveSurface
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
name|w
operator|.
name|move
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// QEXPECT_FAIL("", "Task 169976", Continue);
comment|//VERIFY_COLOR(QRect(50, 50, 50, 50), w.color()); // unchanged
name|VERIFY_COLOR
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
comment|// unchanged
block|}
operator|delete
name|screen
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillWindowSurface
specifier|static
name|void
name|fillWindowSurface
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
specifier|const
name|QColor
modifier|&
name|color
parameter_list|)
block|{
name|QWindowSurface
modifier|*
name|s
init|=
name|w
operator|->
name|windowSurface
argument_list|()
decl_stmt|;
specifier|const
name|QRect
name|rect
init|=
name|s
operator|->
name|rect
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|s
operator|->
name|beginPaint
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QImage
modifier|*
name|img
init|=
name|s
operator|->
name|buffer
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|s
operator|->
name|endPaint
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dontFlushUnitializedWindowSurfaces
name|void
name|tst_QWSWindowSystem
operator|::
name|dontFlushUnitializedWindowSurfaces
parameter_list|()
block|{
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|r
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|QDirectPainter
name|p
argument_list|(
literal|0
argument_list|,
name|QDirectPainter
operator|::
name|ReservedSynchronous
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRegion
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// Opaque widget, tests the blitting path in QScreen::compose()
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
comment|// At this point w has a windowsurface but it's completely covered by
comment|// the directpainter so nothing will be painted here and the
comment|// windowsurface contains uninitialized data.
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|fillWindowSurface
argument_list|(
operator|&
name|w
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
comment|// fill with "uninitialized" data
name|p
operator|.
name|setRegion
argument_list|(
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|r
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
comment|// don't blit uninitialized data
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// get new clip region
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|w
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|,
name|QRegion
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// do paint
name|VERIFY_COLOR
argument_list|(
name|r
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|setRegion
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|{
comment|// Semi-transparent widget, tests the blending path in QScreen::compose()
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowOpacity
argument_list|(
literal|0.44
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|.
name|allocatedRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|fillWindowSurface
argument_list|(
operator|&
name|w
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
comment|// fill with "uninitialized" data
name|p
operator|.
name|setRegion
argument_list|(
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|r
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|w
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|,
name|QRegion
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// compose expected color
name|QImage
operator|::
name|Format
name|screenFormat
init|=
name|QScreen
operator|::
name|instance
argument_list|()
operator|->
name|pixelFormat
argument_list|()
decl_stmt|;
if|if
condition|(
name|screenFormat
operator|==
name|QImage
operator|::
name|Format_Invalid
condition|)
name|screenFormat
operator|=
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QImage
name|img
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|screenFormat
argument_list|)
decl_stmt|;
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|img
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|bgColor
argument_list|)
expr_stmt|;
name|p
operator|.
name|setOpacity
argument_list|(
name|w
operator|.
name|windowOpacity
argument_list|()
argument_list|)
expr_stmt|;
if|#
directive|if
literal|1
name|QImage
name|colorImage
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|screenFormat
argument_list|)
decl_stmt|;
block|{
name|QPainter
name|urk
argument_list|(
operator|&
name|colorImage
argument_list|)
decl_stmt|;
name|urk
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|colorImage
argument_list|)
expr_stmt|;
else|#
directive|else
name|p
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|w
operator|.
name|color
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
name|VERIFY_COLOR
argument_list|(
name|r
argument_list|,
name|img
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|task188025_data
name|void
name|tst_QWSWindowSystem
operator|::
name|task188025_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"windowFlags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"paintonscreen"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
operator||
name|Qt
operator|::
name|Window
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task188025
name|void
name|tst_QWSWindowSystem
operator|::
name|task188025
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|windowFlags
argument_list|)
expr_stmt|;
name|QRect
name|r
argument_list|(
operator|-
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|ColorWidget
name|w
argument_list|(
name|Qt
operator|::
name|red
argument_list|,
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|windowFlags
argument_list|)
argument_list|)
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// glib event loop workaround
specifier|const
name|QRect
name|visible
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|topLeft
init|=
name|w
operator|.
name|frameGeometry
argument_list|()
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|visible
operator|.
name|translated
argument_list|(
operator|-
name|topLeft
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|visible
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMask
argument_list|(
name|QRect
argument_list|(
literal|25
argument_list|,
literal|0
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|visible
operator|.
name|translated
argument_list|(
operator|-
name|topLeft
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|visible
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
comment|// extend widget to the right (mask prevents new geometry to be exposed)
name|r
operator|=
name|r
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|25
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|visible
operator|.
name|translated
argument_list|(
operator|-
name|topLeft
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|visible
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QWSWindowSystem
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qwswindowsystem.moc"
end_include
begin_else
else|#
directive|else
end_else
begin_comment
comment|// Q_WS_QWS
end_comment
begin_macro
name|QTEST_NOOP_MAIN
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
