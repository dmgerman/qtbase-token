begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
end_if
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_include
include|#
directive|include
file|<qdesktopwidget.h>
end_include
begin_include
include|#
directive|include
file|<qwindowsystem_qws.h>
end_include
begin_include
include|#
directive|include
file|<qscreen_qws.h>
end_include
begin_include
include|#
directive|include
file|<qscreendriverfactory_qws.h>
end_include
begin_include
include|#
directive|include
file|<qwsdisplay_qws.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT_NO_QWS_TRANSFORMED
end_ifdef
begin_undef
DECL|macro|QT_NO_QWS_TRANSFORMED
undef|#
directive|undef
name|QT_NO_QWS_TRANSFORMED
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qscreentransformed_qws.h>
end_include
begin_class
DECL|class|tst_QTransformedScreen
class|class
name|tst_QTransformedScreen
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QTransformedScreen
name|tst_QTransformedScreen
parameter_list|()
block|{}
DECL|function|~tst_QTransformedScreen
name|~
name|tst_QTransformedScreen
parameter_list|()
block|{ }
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|setTransformation_data
parameter_list|()
function_decl|;
name|void
name|setTransformation
parameter_list|()
function_decl|;
name|void
name|qwsDisplay_setTransformation
parameter_list|()
function_decl|;
private|private:
DECL|member|screen
name|QTransformedScreen
modifier|*
name|screen
decl_stmt|;
DECL|member|oldScreen
name|QScreen
modifier|*
name|oldScreen
decl_stmt|;
DECL|member|id
name|int
name|id
decl_stmt|;
block|}
class|;
end_class
begin_expr_stmt
DECL|variable|Transformation
name|Q_DECLARE_METATYPE
argument_list|(
name|QTransformedScreen
operator|::
name|Transformation
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function
DECL|function|initTestCase
name|void
name|tst_QTransformedScreen
operator|::
name|initTestCase
parameter_list|()
block|{
name|oldScreen
operator|=
name|qt_screen
expr_stmt|;
name|QVERIFY
argument_list|(
name|QScreenDriverFactory
operator|::
name|keys
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"Transformed"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QScreenDriverFactory
operator|::
name|keys
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"VNC"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|id
operator|=
literal|10
expr_stmt|;
name|screen
operator|=
cast|static_cast
argument_list|<
name|QTransformedScreen
operator|*
argument_list|>
argument_list|(
name|QScreenDriverFactory
operator|::
name|create
argument_list|(
literal|"Transformed"
argument_list|,
name|id
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|screen
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|screen
operator|->
name|connect
argument_list|(
name|QString
argument_list|(
literal|"Transformed:Rot90:VNC:%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|screen
operator|->
name|initDevice
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QTransformedScreen
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|screen
operator|->
name|shutdownDevice
argument_list|()
expr_stmt|;
name|screen
operator|->
name|disconnect
argument_list|()
expr_stmt|;
operator|delete
name|screen
expr_stmt|;
name|screen
operator|=
literal|0
expr_stmt|;
name|qt_screen
operator|=
name|oldScreen
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTransformation_data
name|void
name|tst_QTransformedScreen
operator|::
name|setTransformation_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransformedScreen
operator|::
name|Transformation
argument_list|>
argument_list|(
literal|"transformation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"swap"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Rot0"
argument_list|)
operator|<<
name|QTransformedScreen
operator|::
name|None
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Rot90"
argument_list|)
operator|<<
name|QTransformedScreen
operator|::
name|Rot90
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Rot180"
argument_list|)
operator|<<
name|QTransformedScreen
operator|::
name|Rot180
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Rot270"
argument_list|)
operator|<<
name|QTransformedScreen
operator|::
name|Rot270
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTransformation
name|void
name|tst_QTransformedScreen
operator|::
name|setTransformation
parameter_list|()
block|{
comment|// Not really failures but equal height and width makes this test useless
name|QVERIFY
argument_list|(
name|screen
operator|->
name|deviceWidth
argument_list|()
operator|!=
name|screen
operator|->
name|deviceHeight
argument_list|()
argument_list|)
expr_stmt|;
name|screen
operator|->
name|setTransformation
argument_list|(
name|QTransformedScreen
operator|::
name|None
argument_list|)
expr_stmt|;
name|int
name|dw
init|=
name|screen
operator|->
name|deviceWidth
argument_list|()
decl_stmt|;
name|int
name|dh
init|=
name|screen
operator|->
name|deviceHeight
argument_list|()
decl_stmt|;
name|int
name|mmw
init|=
name|screen
operator|->
name|physicalWidth
argument_list|()
decl_stmt|;
name|int
name|mmh
init|=
name|screen
operator|->
name|physicalHeight
argument_list|()
decl_stmt|;
name|QFETCH
argument_list|(
name|QTransformedScreen
operator|::
name|Transformation
argument_list|,
name|transformation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|swap
argument_list|)
expr_stmt|;
name|screen
operator|->
name|setTransformation
argument_list|(
name|transformation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|deviceWidth
argument_list|()
argument_list|,
name|dw
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|deviceHeight
argument_list|()
argument_list|,
name|dh
argument_list|)
expr_stmt|;
if|if
condition|(
name|swap
condition|)
block|{
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|width
argument_list|()
argument_list|,
name|dh
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|height
argument_list|()
argument_list|,
name|dw
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|physicalWidth
argument_list|()
argument_list|,
name|mmh
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|physicalHeight
argument_list|()
argument_list|,
name|mmw
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|width
argument_list|()
argument_list|,
name|dw
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|height
argument_list|()
argument_list|,
name|dh
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|physicalWidth
argument_list|()
argument_list|,
name|mmw
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|screen
operator|->
name|physicalHeight
argument_list|()
argument_list|,
name|mmh
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|qwsDisplay_setTransformation
name|void
name|tst_QTransformedScreen
operator|::
name|qwsDisplay_setTransformation
parameter_list|()
block|{
name|QDesktopWidget
modifier|*
name|desktop
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
decl_stmt|;
comment|// test maximized windows
block|{
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
specifier|const
name|int
name|screen
init|=
name|desktop
operator|->
name|screenNumber
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|desktop
operator|->
name|availableGeometry
argument_list|(
name|screen
argument_list|)
argument_list|,
name|w
operator|.
name|frameGeometry
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|QTransformedScreen
operator|::
name|None
init|;
name|i
operator|<=
name|QTransformedScreen
operator|::
name|Rot270
condition|;
operator|++
name|i
control|)
block|{
name|QWSDisplay
operator|::
name|instance
argument_list|()
operator|->
name|setTransformation
argument_list|(
name|i
argument_list|,
name|screen
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|desktop
operator|->
name|availableGeometry
argument_list|(
name|screen
argument_list|)
argument_list|,
name|w
operator|.
name|frameGeometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// test fullscreen windows
block|{
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
specifier|const
name|int
name|screen
init|=
name|desktop
operator|->
name|screenNumber
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|desktop
operator|->
name|screenGeometry
argument_list|(
name|screen
argument_list|)
argument_list|,
name|w
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|QTransformedScreen
operator|::
name|None
init|;
name|i
operator|<=
name|QTransformedScreen
operator|::
name|Rot270
condition|;
operator|++
name|i
control|)
block|{
name|QWSDisplay
operator|::
name|instance
argument_list|()
operator|->
name|setTransformation
argument_list|(
name|i
argument_list|,
name|screen
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|desktop
operator|->
name|screenGeometry
argument_list|(
name|screen
argument_list|)
argument_list|,
name|w
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTransformedScreen
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtransformedscreen.moc"
end_include
begin_else
else|#
directive|else
end_else
begin_comment
comment|// Q_WS_QWS
end_comment
begin_macro
name|QTEST_NOOP_MAIN
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
