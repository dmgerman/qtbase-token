begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_X11
end_ifdef
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QX11Info>
end_include
begin_class
DECL|class|tst_QX11Info
class|class
name|tst_QX11Info
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|staticFunctionsBeforeQApplication
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|staticFunctionsBeforeQApplication
name|void
name|tst_QX11Info
operator|::
name|staticFunctionsBeforeQApplication
parameter_list|()
block|{
name|QVERIFY
argument_list|(
operator|!
name|QApplication
operator|::
name|instance
argument_list|()
argument_list|)
expr_stmt|;
comment|// none of these functions should crash if QApplication hasn't
comment|// been constructed
name|Display
modifier|*
name|display
init|=
name|QX11Info
operator|::
name|display
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|display
argument_list|,
operator|(
name|Display
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|appClass
init|=
name|QX11Info
operator|::
name|appClass
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appClass
argument_list|,
operator|(
specifier|const
name|char
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|int
name|appScreen
init|=
name|QX11Info
operator|::
name|appScreen
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appScreen
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|int
name|appDepth
init|=
name|QX11Info
operator|::
name|appDepth
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appDepth
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|int
name|appCells
init|=
name|QX11Info
operator|::
name|appCells
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appCells
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|HANDLE
name|appColormap
init|=
name|QX11Info
operator|::
name|appColormap
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appColormap
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|HANDLE
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|void
modifier|*
name|appVisual
init|=
name|QX11Info
operator|::
name|appVisual
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appVisual
argument_list|,
cast|static_cast
argument_list|<
name|void
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|HANDLE
name|appRootWindow
init|=
name|QX11Info
operator|::
name|appRootWindow
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appRootWindow
argument_list|,
cast|static_cast
argument_list|<
name|Qt
operator|::
name|HANDLE
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|appDefaultColormap
init|=
name|QX11Info
operator|::
name|appDefaultColormap
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appDefaultColormap
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|bool
name|appDefaultVisual
init|=
name|QX11Info
operator|::
name|appDefaultVisual
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appDefaultVisual
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|int
name|appDpiX
init|=
name|QX11Info
operator|::
name|appDpiX
argument_list|()
decl_stmt|;
name|int
name|appDpiY
init|=
name|QX11Info
operator|::
name|appDpiY
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appDpiX
argument_list|,
literal|75
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|appDpiY
argument_list|,
literal|75
argument_list|)
expr_stmt|;
comment|// the setAppDpi{X,Y} calls do nothing if QApplication hasn't been
comment|// constructed
name|QX11Info
operator|::
name|setAppDpiX
argument_list|(
operator|-
literal|1
argument_list|,
literal|120
argument_list|)
expr_stmt|;
name|QX11Info
operator|::
name|setAppDpiY
argument_list|(
operator|-
literal|1
argument_list|,
literal|120
argument_list|)
expr_stmt|;
name|appDpiX
operator|=
name|QX11Info
operator|::
name|appDpiX
argument_list|()
expr_stmt|;
name|appDpiY
operator|=
name|QX11Info
operator|::
name|appDpiY
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|appDpiX
argument_list|,
literal|75
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|appDpiY
argument_list|,
literal|75
argument_list|)
expr_stmt|;
name|unsigned
name|long
name|appTime
init|=
name|QX11Info
operator|::
name|appTime
argument_list|()
decl_stmt|;
name|unsigned
name|long
name|appUserTime
init|=
name|QX11Info
operator|::
name|appUserTime
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|appTime
argument_list|,
literal|0ul
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|appTime
argument_list|,
literal|0ul
argument_list|)
expr_stmt|;
comment|// setApp*Time do nothing without QApplication
name|QX11Info
operator|::
name|setAppTime
argument_list|(
literal|1234
argument_list|)
expr_stmt|;
name|QX11Info
operator|::
name|setAppUserTime
argument_list|(
literal|5678
argument_list|)
expr_stmt|;
name|appTime
operator|=
name|QX11Info
operator|::
name|appTime
argument_list|()
expr_stmt|;
name|appUserTime
operator|=
name|QX11Info
operator|::
name|appUserTime
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|appTime
argument_list|,
literal|0ul
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|appTime
argument_list|,
literal|0ul
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QX11Info
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qx11info.moc"
end_include
begin_else
else|#
directive|else
end_else
begin_comment
comment|// !Q_WS_X11
end_comment
begin_macro
name|QTEST_NOOP_MAIN
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
