begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qwindow.h>
end_include
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_class
DECL|class|tst_QWindow
class|class
name|tst_QWindow
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|mapGlobal
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|mapGlobal
name|void
name|tst_QWindow
operator|::
name|mapGlobal
parameter_list|()
block|{
name|QWindow
name|a
decl_stmt|;
name|QWindow
name|b
argument_list|(
operator|&
name|a
argument_list|)
decl_stmt|;
name|QWindow
name|c
argument_list|(
operator|&
name|b
argument_list|)
decl_stmt|;
name|a
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|b
operator|.
name|setGeometry
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|c
operator|.
name|setGeometry
argument_list|(
literal|40
argument_list|,
literal|40
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|130
argument_list|,
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|170
argument_list|,
literal|170
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|90
argument_list|,
literal|90
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_include
include|#
directive|include
file|<tst_qwindow.moc>
end_include
begin_expr_stmt
DECL|variable|tst_QWindow
name|QTEST_MAIN
argument_list|(
name|tst_QWindow
argument_list|)
expr_stmt|;
end_expr_stmt
end_unit
