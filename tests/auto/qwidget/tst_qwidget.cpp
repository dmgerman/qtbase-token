begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT3_SUPPORT
argument_list|)
end_if
begin_include
include|#
directive|include
file|<q3hbox.h>
end_include
begin_include
include|#
directive|include
file|<q3textedit.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qboxlayout.h>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qbitmap.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qeventloop.h>
end_include
begin_include
include|#
directive|include
file|<qlabel.h>
end_include
begin_include
include|#
directive|include
file|<qlayout.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qlistview.h>
end_include
begin_include
include|#
directive|include
file|<qmessagebox.h>
end_include
begin_include
include|#
directive|include
file|<qpainter.h>
end_include
begin_include
include|#
directive|include
file|<qpoint.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qstyle.h>
end_include
begin_include
include|#
directive|include
file|<qwidget.h>
end_include
begin_include
include|#
directive|include
file|<qwindowsstyle.h>
end_include
begin_include
include|#
directive|include
file|<qinputcontext.h>
end_include
begin_include
include|#
directive|include
file|<qdesktopwidget.h>
end_include
begin_include
include|#
directive|include
file|<private/qwidget_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qapplication_p.h>
end_include
begin_include
include|#
directive|include
file|<qcalendarwidget.h>
end_include
begin_include
include|#
directive|include
file|<qmainwindow.h>
end_include
begin_include
include|#
directive|include
file|<qdockwidget.h>
end_include
begin_include
include|#
directive|include
file|<qtoolbar.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpaintengine.h>
end_include
begin_include
include|#
directive|include
file|<private/qbackingstore_p.h>
end_include
begin_include
include|#
directive|include
file|<qmenubar.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGraphicsView>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGraphicsProxyWidget>
end_include
begin_include
include|#
directive|include
file|"../../shared/util.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_S60
end_ifdef
begin_include
include|#
directive|include
file|<avkon.hrh>
end_include
begin_comment
comment|// EEikStatusPaneUidTitle
end_comment
begin_include
include|#
directive|include
file|<akntitle.h>
end_include
begin_comment
comment|// CAknTitlePane
end_comment
begin_include
include|#
directive|include
file|<akncontext.h>
end_include
begin_comment
comment|// CAknContextPane
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
end_ifdef
begin_include
include|#
directive|include
file|<eikspane.h>
end_include
begin_comment
comment|// CEikStatusPane
end_comment
begin_include
include|#
directive|include
file|<eikbtgpc.h>
end_include
begin_comment
comment|// CEikButtonGroupContainer
end_comment
begin_include
include|#
directive|include
file|<eikenv.h>
end_include
begin_comment
comment|// CEikonEnv
end_comment
begin_include
include|#
directive|include
file|<eikaufty.h>
end_include
begin_comment
comment|// MEikAppUiFactory
end_comment
begin_include
include|#
directive|include
file|<eikmenub.h>
end_include
begin_comment
comment|// CEikMenuBar
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_QWS
end_ifdef
begin_include
include|#
directive|include
file|<qscreen_qws.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// I *MUST* have QtTest afterwards or this test won't work with newer headers
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
end_if
begin_include
include|#
directive|include
file|<private/qt_mac_p.h>
end_include
begin_undef
DECL|macro|verify
undef|#
directive|undef
name|verify
end_undef
begin_include
include|#
directive|include
file|"tst_qwidget_mac_helpers.h"
end_include
begin_comment
comment|// Abstract the ObjC stuff out so not everyone must run an ObjC++ compile.
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
end_if
begin_include
include|#
directive|include
file|<qt_windows.h>
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_define
DECL|macro|Q_CHECK_PAINTEVENTS
define|#
directive|define
name|Q_CHECK_PAINTEVENTS
define|\
value|if (::SwitchDesktop(::GetThreadDesktop(::GetCurrentThreadId())) == 0) \         QSKIP("desktop is not visible, this test would fail", SkipSingle);
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|Q_CHECK_PAINTEVENTS
define|#
directive|define
name|Q_CHECK_PAINTEVENTS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
end_elif
begin_include
include|#
directive|include
file|<private/qt_x11_p.h>
end_include
begin_include
include|#
directive|include
file|<qx11info_x11.h>
end_include
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
end_elif
begin_include
include|#
directive|include
file|<qwindowsystem_qws.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
end_if
begin_define
DECL|macro|Q_CHECK_PAINTEVENTS
define|#
directive|define
name|Q_CHECK_PAINTEVENTS
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE_WM
argument_list|)
end_if
begin_include
include|#
directive|include
file|<qguifunctions_wince.h>
end_include
begin_comment
comment|// taken from qguifunctions_wce.cpp
end_comment
begin_define
DECL|macro|SPI_GETPLATFORMTYPE
define|#
directive|define
name|SPI_GETPLATFORMTYPE
value|257
end_define
begin_function
DECL|function|qt_wince_is_platform
name|bool
name|qt_wince_is_platform
parameter_list|(
specifier|const
name|QString
modifier|&
name|platformString
parameter_list|)
block|{
name|wchar_t
name|tszPlatform
index|[
literal|64
index|]
decl_stmt|;
if|if
condition|(
name|SystemParametersInfo
argument_list|(
name|SPI_GETPLATFORMTYPE
argument_list|,
sizeof|sizeof
argument_list|(
name|tszPlatform
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
operator|*
name|tszPlatform
argument_list|)
argument_list|,
name|tszPlatform
argument_list|,
literal|0
argument_list|)
condition|)
if|if
condition|(
literal|0
operator|==
name|_tcsicmp
argument_list|(
cast|reinterpret_cast
argument_list|<
specifier|const
name|wchar_t
operator|*
argument_list|>
argument_list|(
name|platformString
operator|.
name|utf16
argument_list|()
argument_list|)
argument_list|,
name|tszPlatform
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|qt_wince_is_smartphone
name|bool
name|qt_wince_is_smartphone
parameter_list|()
block|{
return|return
name|qt_wince_is_platform
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Smartphone"
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_MAC
end_ifdef
begin_include
include|#
directive|include
file|<Security/AuthSession.h>
end_include
begin_function
DECL|function|macHasAccessToWindowsServer
name|bool
name|macHasAccessToWindowsServer
parameter_list|()
block|{
name|SecuritySessionId
name|mySession
decl_stmt|;
name|SessionAttributeBits
name|sessionInfo
decl_stmt|;
name|SessionGetInfo
argument_list|(
name|callerSecuritySession
argument_list|,
operator|&
name|mySession
argument_list|,
operator|&
name|sessionInfo
argument_list|)
expr_stmt|;
return|return
operator|(
name|sessionInfo
operator|&
name|sessionHasGraphicAccess
operator|)
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Bool
argument_list|)
end_if
begin_undef
DECL|macro|Bool
undef|#
directive|undef
name|Bool
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_class
DECL|class|tst_QWidget
class|class
name|tst_QWidget
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QWidget
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QWidget
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|fontPropagation
parameter_list|()
function_decl|;
name|void
name|fontPropagation2
parameter_list|()
function_decl|;
name|void
name|palettePropagation
parameter_list|()
function_decl|;
name|void
name|palettePropagation2
parameter_list|()
function_decl|;
name|void
name|enabledPropagation
parameter_list|()
function_decl|;
name|void
name|acceptDropsPropagation
parameter_list|()
function_decl|;
name|void
name|isEnabledTo
parameter_list|()
function_decl|;
name|void
name|visible
parameter_list|()
function_decl|;
name|void
name|visible_setWindowOpacity
parameter_list|()
function_decl|;
name|void
name|isVisibleTo
parameter_list|()
function_decl|;
name|void
name|isHidden
parameter_list|()
function_decl|;
name|void
name|fonts
parameter_list|()
function_decl|;
name|void
name|mapToGlobal
parameter_list|()
function_decl|;
name|void
name|mapFromAndTo_data
parameter_list|()
function_decl|;
name|void
name|mapFromAndTo
parameter_list|()
function_decl|;
name|void
name|checkFocus
parameter_list|()
function_decl|;
name|void
name|focusChainOnHide
parameter_list|()
function_decl|;
name|void
name|focusChainOnReparent
parameter_list|()
function_decl|;
name|void
name|setTabOrder
parameter_list|()
function_decl|;
name|void
name|activation
parameter_list|()
function_decl|;
name|void
name|reparent
parameter_list|()
function_decl|;
name|void
name|windowState
parameter_list|()
function_decl|;
name|void
name|showMaximized
parameter_list|()
function_decl|;
name|void
name|showFullScreen
parameter_list|()
function_decl|;
name|void
name|showMinimized
parameter_list|()
function_decl|;
name|void
name|showMinimizedKeepsFocus
parameter_list|()
function_decl|;
name|void
name|icon
parameter_list|()
function_decl|;
name|void
name|hideWhenFocusWidgetIsChild
parameter_list|()
function_decl|;
name|void
name|normalGeometry
parameter_list|()
function_decl|;
name|void
name|setGeometry
parameter_list|()
function_decl|;
name|void
name|windowOpacity
parameter_list|()
function_decl|;
name|void
name|raise
parameter_list|()
function_decl|;
name|void
name|lower
parameter_list|()
function_decl|;
name|void
name|stackUnder
parameter_list|()
function_decl|;
name|void
name|testContentsPropagation
parameter_list|()
function_decl|;
name|void
name|saveRestoreGeometry
parameter_list|()
function_decl|;
name|void
name|restoreVersion1Geometry_data
parameter_list|()
function_decl|;
name|void
name|restoreVersion1Geometry
parameter_list|()
function_decl|;
name|void
name|windowTitle
parameter_list|()
function_decl|;
name|void
name|windowModified
parameter_list|()
function_decl|;
name|void
name|windowIconText
parameter_list|()
function_decl|;
name|void
name|widgetAt
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|void
name|retainHIView
parameter_list|()
function_decl|;
name|void
name|sheetOpacity
parameter_list|()
function_decl|;
name|void
name|setMask
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|optimizedResizeMove
parameter_list|()
function_decl|;
name|void
name|optimizedResize_topLevel
parameter_list|()
function_decl|;
name|void
name|resizeEvent
parameter_list|()
function_decl|;
name|void
name|task110173
parameter_list|()
function_decl|;
name|void
name|testDeletionInEventHandlers
parameter_list|()
function_decl|;
name|void
name|childDeletesItsSibling
parameter_list|()
function_decl|;
name|void
name|setMinimumSize
parameter_list|()
function_decl|;
name|void
name|setMaximumSize
parameter_list|()
function_decl|;
name|void
name|setFixedSize
parameter_list|()
function_decl|;
name|void
name|ensureCreated
parameter_list|()
function_decl|;
name|void
name|winIdChangeEvent
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
name|void
name|reparentCausesChildWinIdChange
parameter_list|()
function_decl|;
else|#
directive|else
name|void
name|persistentWinId
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|showNativeChild
parameter_list|()
function_decl|;
name|void
name|qobject_castInDestroyedSlot
parameter_list|()
function_decl|;
name|void
name|showHideEvent_data
parameter_list|()
function_decl|;
name|void
name|showHideEvent
parameter_list|()
function_decl|;
name|void
name|lostUpdatesOnHide
parameter_list|()
function_decl|;
name|void
name|update
parameter_list|()
function_decl|;
name|void
name|isOpaque
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|Q_WS_MAC
name|void
name|scroll
parameter_list|()
function_decl|;
endif|#
directive|endif
comment|// tests QWidget::setGeometry() on windows only
name|void
name|setWindowGeometry_data
parameter_list|()
function_decl|;
name|void
name|setWindowGeometry
parameter_list|()
function_decl|;
comment|// tests QWidget::move() and resize() on windows only
name|void
name|windowMoveResize_data
parameter_list|()
function_decl|;
name|void
name|windowMoveResize
parameter_list|()
function_decl|;
name|void
name|moveChild_data
parameter_list|()
function_decl|;
name|void
name|moveChild
parameter_list|()
function_decl|;
name|void
name|showAndMoveChild
parameter_list|()
function_decl|;
name|void
name|subtractOpaqueSiblings
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_WS_WIN
name|void
name|getDC
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|Q_OS_WINCE
name|void
name|setGeometry_win
parameter_list|()
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
name|void
name|setLocale
parameter_list|()
function_decl|;
name|void
name|deleteStyle
parameter_list|()
function_decl|;
name|void
name|multipleToplevelFocusCheck
parameter_list|()
function_decl|;
name|void
name|setFocus
parameter_list|()
function_decl|;
name|void
name|setCursor
parameter_list|()
function_decl|;
name|void
name|setToolTip
parameter_list|()
function_decl|;
name|void
name|testWindowIconChangeEventPropagation
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|void
name|minAndMaxSizeWithX11BypassWindowManagerHint
parameter_list|()
function_decl|;
name|void
name|showHideShow
parameter_list|()
function_decl|;
name|void
name|clean_qt_x11_enforce_cursor
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|compatibilityChildInsertedEvents
parameter_list|()
function_decl|;
name|void
name|render
parameter_list|()
function_decl|;
name|void
name|renderInvisible
parameter_list|()
function_decl|;
name|void
name|renderWithPainter
parameter_list|()
function_decl|;
name|void
name|render_task188133
parameter_list|()
function_decl|;
name|void
name|render_task211796
parameter_list|()
function_decl|;
name|void
name|render_task217815
parameter_list|()
function_decl|;
name|void
name|render_windowOpacity
parameter_list|()
function_decl|;
name|void
name|render_systemClip
parameter_list|()
function_decl|;
name|void
name|render_systemClip2_data
parameter_list|()
function_decl|;
name|void
name|render_systemClip2
parameter_list|()
function_decl|;
name|void
name|render_systemClip3_data
parameter_list|()
function_decl|;
name|void
name|render_systemClip3
parameter_list|()
function_decl|;
name|void
name|render_task252837
parameter_list|()
function_decl|;
name|void
name|render_worldTransform
parameter_list|()
function_decl|;
name|void
name|setContentsMargins
parameter_list|()
function_decl|;
name|void
name|moveWindowInShowEvent_data
parameter_list|()
function_decl|;
name|void
name|moveWindowInShowEvent
parameter_list|()
function_decl|;
name|void
name|repaintWhenChildDeleted
parameter_list|()
function_decl|;
name|void
name|hideOpaqueChildWhileHidden
parameter_list|()
function_decl|;
name|void
name|updateWhileMinimized
parameter_list|()
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
name|void
name|alienWidgets
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|adjustSize
parameter_list|()
function_decl|;
name|void
name|adjustSize_data
parameter_list|()
function_decl|;
name|void
name|updateGeometry
parameter_list|()
function_decl|;
name|void
name|updateGeometry_data
parameter_list|()
function_decl|;
name|void
name|sendUpdateRequestImmediately
parameter_list|()
function_decl|;
name|void
name|painterRedirection
parameter_list|()
function_decl|;
name|void
name|doubleRepaint
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|Q_WS_MAC
name|void
name|resizeInPaintEvent
parameter_list|()
function_decl|;
name|void
name|opaqueChildren
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|setMaskInResizeEvent
parameter_list|()
function_decl|;
name|void
name|moveInResizeEvent
parameter_list|()
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
comment|// We don't support immediate repaint right after show on
comment|// other platforms. Must be compatible with Qt 4.3.
name|void
name|immediateRepaintAfterShow
parameter_list|()
function_decl|;
name|void
name|immediateRepaintAfterInvalidateBuffer
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|effectiveWinId
parameter_list|()
function_decl|;
name|void
name|effectiveWinId2
parameter_list|()
function_decl|;
name|void
name|customDpi
parameter_list|()
function_decl|;
name|void
name|customDpiProperty
parameter_list|()
function_decl|;
name|void
name|quitOnCloseAttribute
parameter_list|()
function_decl|;
name|void
name|moveRect
parameter_list|()
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
name|void
name|gdiPainting
parameter_list|()
function_decl|;
name|void
name|paintOnScreenPossible
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|reparentStaticWidget
parameter_list|()
function_decl|;
name|void
name|QTBUG6883_reparentStaticWidget2
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|void
name|updateOutsideSurfaceClip
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|translucentWidget
parameter_list|()
function_decl|;
name|void
name|setClearAndResizeMask
parameter_list|()
function_decl|;
name|void
name|maskedUpdate
parameter_list|()
function_decl|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_QPA
argument_list|)
name|void
name|syntheticEnterLeave
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_4055_sendSyntheticEnterLeave
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|windowFlags
parameter_list|()
function_decl|;
name|void
name|initialPosForDontShowOnScreenWidgets
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|void
name|paintOutsidePaintEvent
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|updateOnDestroyedSignal
parameter_list|()
function_decl|;
name|void
name|toplevelLineEditFocus
parameter_list|()
function_decl|;
name|void
name|inputFocus_task257832
parameter_list|()
function_decl|;
name|void
name|focusWidget_task254563
parameter_list|()
function_decl|;
name|void
name|rectOutsideCoordinatesLimit_task144779
parameter_list|()
function_decl|;
name|void
name|setGraphicsEffect
parameter_list|()
function_decl|;
name|void
name|destroyBackingStore
parameter_list|()
function_decl|;
name|void
name|destroyBackingStoreWhenHidden
parameter_list|()
function_decl|;
name|void
name|activateWindow
parameter_list|()
function_decl|;
name|void
name|openModal_taskQTBUG_5804
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
name|void
name|cbaVisibility
parameter_list|()
function_decl|;
name|void
name|fullScreenWindowModeTransitions
parameter_list|()
function_decl|;
name|void
name|maximizedWindowModeTransitions
parameter_list|()
function_decl|;
name|void
name|minimizedWindowModeTransitions
parameter_list|()
function_decl|;
name|void
name|normalWindowModeTransitions
parameter_list|()
function_decl|;
name|void
name|focusSwitchClosesPopupMenu
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|focusProxyAndInputMethods
parameter_list|()
function_decl|;
name|void
name|scrollWithoutBackingStore
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_7532_tabOrderWithFocusProxy
parameter_list|()
function_decl|;
name|void
name|movedAndResizedAttributes
parameter_list|()
function_decl|;
name|void
name|childAt
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|void
name|childAt_unifiedToolBar
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
name|void
name|taskQTBUG_11373
parameter_list|()
function_decl|;
endif|#
directive|endif
comment|// QT_MAC_USE_COCOA
endif|#
directive|endif
name|void
name|nativeChildFocus
parameter_list|()
function_decl|;
private|private:
name|bool
name|ensureScreenSize
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
DECL|member|testWidget
name|QWidget
modifier|*
name|testWidget
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|ensureScreenSize
name|bool
name|tst_QWidget
operator|::
name|ensureScreenSize
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
block|{
name|QSize
name|available
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|available
operator|=
name|QDesktopWidget
argument_list|()
operator|.
name|availableGeometry
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
if|if
condition|(
name|available
operator|.
name|width
argument_list|()
operator|<
name|width
operator|||
name|available
operator|.
name|height
argument_list|()
operator|<
name|height
condition|)
block|{
name|QScreen
modifier|*
name|screen
init|=
name|QScreen
operator|::
name|instance
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|screen
condition|)
return|return
literal|false
return|;
name|screen
operator|->
name|setMode
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|screen
operator|->
name|depth
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
comment|// Q_WS_QWS
name|available
operator|=
name|QDesktopWidget
argument_list|()
operator|.
name|availableGeometry
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
return|return
operator|(
name|available
operator|.
name|width
argument_list|()
operator|>=
name|width
operator|&&
name|available
operator|.
name|height
argument_list|()
operator|>=
name|height
operator|)
return|;
block|}
end_function
begin_class
DECL|class|MyInputContext
class|class
name|MyInputContext
super|:
specifier|public
name|QInputContext
block|{
public|public:
DECL|function|MyInputContext
name|MyInputContext
parameter_list|()
member_init_list|:
name|QInputContext
argument_list|()
block|{}
DECL|function|identifierName
name|QString
name|identifierName
parameter_list|()
block|{
return|return
name|QString
argument_list|(
literal|"NoName"
argument_list|)
return|;
block|}
DECL|function|language
name|QString
name|language
parameter_list|()
block|{
return|return
name|QString
argument_list|(
literal|"NoLanguage"
argument_list|)
return|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{}
DECL|function|isComposing
name|bool
name|isComposing
parameter_list|()
specifier|const
block|{
return|return
literal|false
return|;
block|}
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QWidget
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QWidget
name|obj1
decl_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|obj1
argument_list|)
decl_stmt|;
comment|// QStyle * QWidget::style()
comment|// void QWidget::setStyle(QStyle *)
name|QWindowsStyle
modifier|*
name|var1
init|=
operator|new
name|QWindowsStyle
decl_stmt|;
name|obj1
operator|.
name|setStyle
argument_list|(
name|var1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QStyle
operator|*
argument_list|>
argument_list|(
name|var1
argument_list|)
argument_list|,
name|obj1
operator|.
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setStyle
argument_list|(
operator|(
name|QStyle
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|var1
operator|!=
name|obj1
operator|.
name|style
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|obj1
operator|.
name|style
argument_list|()
argument_list|)
expr_stmt|;
comment|// style can never be 0 for a widget
comment|// int QWidget::minimumWidth()
comment|// void QWidget::setMinimumWidth(int)
name|obj1
operator|.
name|setMinimumWidth
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|minimumWidth
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimumWidth
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|minimumWidth
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// A widgets width can never be less than 0
name|obj1
operator|.
name|setMinimumWidth
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_WS_QWS
comment|//QWS doesn't allow toplevels to be bigger than the screen
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|minimumWidth
argument_list|()
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
comment|// The largest minimum size should only be as big as the maximium
endif|#
directive|endif
name|child1
operator|.
name|setMinimumWidth
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|minimumWidth
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setMinimumWidth
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|minimumWidth
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// A widgets width can never be less than 0
name|child1
operator|.
name|setMinimumWidth
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|minimumWidth
argument_list|()
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
comment|// The largest minimum size should only be as big as the maximium
comment|// int QWidget::minimumHeight()
comment|// void QWidget::setMinimumHeight(int)
name|obj1
operator|.
name|setMinimumHeight
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|minimumHeight
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimumHeight
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|minimumHeight
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// A widgets height can never be less than 0
name|obj1
operator|.
name|setMinimumHeight
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_WS_QWS
comment|//QWS doesn't allow toplevels to be bigger than the screen
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|minimumHeight
argument_list|()
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
comment|// The largest minimum size should only be as big as the maximium
endif|#
directive|endif
name|child1
operator|.
name|setMinimumHeight
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|minimumHeight
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setMinimumHeight
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|minimumHeight
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// A widgets height can never be less than 0
name|child1
operator|.
name|setMinimumHeight
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|minimumHeight
argument_list|()
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
comment|// The largest minimum size should only be as big as the maximium
comment|// int QWidget::maximumWidth()
comment|// void QWidget::setMaximumWidth(int)
name|obj1
operator|.
name|setMaximumWidth
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|maximumWidth
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMaximumWidth
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|maximumWidth
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// A widgets width can never be less than 0
name|obj1
operator|.
name|setMaximumWidth
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|maximumWidth
argument_list|()
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
comment|// QWIDGETSIZE_MAX is the abs max, not INT_MAX
comment|// int QWidget::maximumHeight()
comment|// void QWidget::setMaximumHeight(int)
name|obj1
operator|.
name|setMaximumHeight
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|maximumHeight
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMaximumHeight
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|maximumHeight
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// A widgets height can never be less than 0
name|obj1
operator|.
name|setMaximumHeight
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|maximumHeight
argument_list|()
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
comment|// QWIDGETSIZE_MAX is the abs max, not INT_MAX
comment|// back to normal
name|obj1
operator|.
name|setMinimumWidth
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMinimumHeight
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMaximumWidth
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setMaximumHeight
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
comment|// const QPalette& QWidget::palette()
comment|// void QWidget::setPalette(const QPalette&)
name|QPalette
name|var6
decl_stmt|;
name|obj1
operator|.
name|setPalette
argument_list|(
name|var6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var6
argument_list|,
name|obj1
operator|.
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setPalette
argument_list|(
name|QPalette
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPalette
argument_list|()
argument_list|,
name|obj1
operator|.
name|palette
argument_list|()
argument_list|)
expr_stmt|;
comment|// const QFont& QWidget::font()
comment|// void QWidget::setFont(const QFont&)
name|QFont
name|var7
decl_stmt|;
name|obj1
operator|.
name|setFont
argument_list|(
name|var7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var7
argument_list|,
name|obj1
operator|.
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setFont
argument_list|(
name|QFont
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QFont
argument_list|()
argument_list|,
name|obj1
operator|.
name|font
argument_list|()
argument_list|)
expr_stmt|;
comment|// qreal QWidget::windowOpacity()
comment|// void QWidget::setWindowOpacity(qreal)
name|obj1
operator|.
name|setWindowOpacity
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0.0
argument_list|,
name|obj1
operator|.
name|windowOpacity
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setWindowOpacity
argument_list|(
literal|1.1f
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1.0
argument_list|,
name|obj1
operator|.
name|windowOpacity
argument_list|()
argument_list|)
expr_stmt|;
comment|// 1.0 is the fullest opacity possible
comment|// QWidget * QWidget::focusProxy()
comment|// void QWidget::setFocusProxy(QWidget *)
name|QWidget
modifier|*
name|var9
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|obj1
operator|.
name|setFocusProxy
argument_list|(
name|var9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var9
argument_list|,
name|obj1
operator|.
name|focusProxy
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setFocusProxy
argument_list|(
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|focusProxy
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|var9
expr_stmt|;
comment|// const QRect& QWidget::geometry()
comment|// void QWidget::setGeometry(const QRect&)
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QRect
name|var10
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setGeometry
argument_list|(
name|var10
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|obj1
operator|.
name|geometry
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var10
argument_list|,
name|obj1
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setGeometry
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|obj1
operator|.
name|geometry
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|obj1
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
comment|// QLayout * QWidget::layout()
comment|// void QWidget::setLayout(QLayout *)
name|QBoxLayout
modifier|*
name|var11
init|=
operator|new
name|QBoxLayout
argument_list|(
name|QBoxLayout
operator|::
name|LeftToRight
argument_list|)
decl_stmt|;
name|obj1
operator|.
name|setLayout
argument_list|(
name|var11
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QLayout
operator|*
argument_list|>
argument_list|(
name|var11
argument_list|)
argument_list|,
name|obj1
operator|.
name|layout
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setLayout
argument_list|(
operator|(
name|QLayout
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QLayout
operator|*
argument_list|>
argument_list|(
name|var11
argument_list|)
argument_list|,
name|obj1
operator|.
name|layout
argument_list|()
argument_list|)
expr_stmt|;
comment|// You cannot set a 0-pointer layout, that keeps the current
operator|delete
name|var11
expr_stmt|;
comment|// This will remove the layout from the widget
name|QCOMPARE
argument_list|(
operator|(
name|QLayout
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|layout
argument_list|()
argument_list|)
expr_stmt|;
comment|// bool QWidget::acceptDrops()
comment|// void QWidget::setAcceptDrops(bool)
name|obj1
operator|.
name|setAcceptDrops
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
comment|// QInputContext * QWidget::inputContext()
comment|// void QWidget::setInputContext(QInputContext *)
name|MyInputContext
modifier|*
name|var13
init|=
operator|new
name|MyInputContext
decl_stmt|;
name|obj1
operator|.
name|setInputContext
argument_list|(
name|var13
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|QInputContext
operator|*
operator|)
literal|0
argument_list|,
name|obj1
operator|.
name|inputContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// The widget by default doesn't have the WA_InputMethodEnabled attribute
name|obj1
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setInputContext
argument_list|(
name|var13
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QInputContext
operator|*
argument_list|>
argument_list|(
name|var13
argument_list|)
argument_list|,
name|obj1
operator|.
name|inputContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// QWidget takes ownership, so check parent
name|QCOMPARE
argument_list|(
name|var13
operator|->
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check self assignment
name|obj1
operator|.
name|setInputContext
argument_list|(
name|obj1
operator|.
name|inputContext
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QInputContext
operator|*
argument_list|>
argument_list|(
name|var13
argument_list|)
argument_list|,
name|obj1
operator|.
name|inputContext
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setInputContext
argument_list|(
operator|(
name|QInputContext
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|inputContext
argument_list|()
argument_list|,
name|obj1
operator|.
name|inputContext
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|inputContext
argument_list|()
operator|!=
name|var13
argument_list|)
expr_stmt|;
comment|// bool QWidget::autoFillBackground()
comment|// void QWidget::setAutoFillBackground(bool)
name|obj1
operator|.
name|setAutoFillBackground
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|autoFillBackground
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|autoFillBackground
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|var1
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|obj1
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|FramelessWindowHint
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
argument_list|)
expr_stmt|;
name|HWND
name|handle
init|=
name|obj1
operator|.
name|winId
argument_list|()
decl_stmt|;
name|long
name|flags
init|=
name|GetWindowLong
argument_list|(
name|handle
argument_list|,
name|GWL_STYLE
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|flags
operator|&
name|WS_POPUP
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_constructor
DECL|function|tst_QWidget
name|tst_QWidget
operator|::
name|tst_QWidget
parameter_list|()
block|{
name|QFont
name|font
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
literal|42
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setFont
argument_list|(
name|font
argument_list|,
literal|"QPropagationTestWidget"
argument_list|)
expr_stmt|;
name|QPalette
name|palette
decl_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|,
name|QColor
argument_list|(
literal|12
argument_list|,
literal|13
argument_list|,
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|,
name|QColor
argument_list|(
literal|21
argument_list|,
literal|22
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|,
literal|"QPropagationTestWidget"
argument_list|)
expr_stmt|;
name|testWidget
operator|=
literal|0
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~tst_QWidget
name|tst_QWidget
operator|::
name|~
name|tst_QWidget
parameter_list|()
block|{ }
end_destructor
begin_class
DECL|class|BezierViewer
class|class
name|BezierViewer
super|:
specifier|public
name|QWidget
block|{
public|public:
name|BezierViewer
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|,
specifier|const
name|char
modifier|*
name|name
init|=
literal|0
parameter_list|)
constructor_decl|;
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
function_decl|;
name|void
name|setPoints
parameter_list|(
specifier|const
name|QPolygonF
modifier|&
name|poly
parameter_list|)
function_decl|;
private|private:
DECL|member|points
name|QPolygonF
name|points
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|initTestCase
name|void
name|tst_QWidget
operator|::
name|initTestCase
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//disable magic for WindowsCE
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Create the test class
name|testWidget
operator|=
operator|new
name|BezierViewer
argument_list|(
literal|0
argument_list|,
literal|"testObject"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT3_SUPPORT
name|qApp
operator|->
name|setMainWidget
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QWidget
operator|::
name|cleanupTestCase
parameter_list|()
block|{
operator|delete
name|testWidget
expr_stmt|;
name|testWidget
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QWidget
operator|::
name|init
parameter_list|()
block|{
comment|// TODO: Add initialization code here.
comment|// This will be executed immediately before each test is run.
name|testWidget
operator|->
name|setFont
argument_list|(
name|QFont
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setPalette
argument_list|(
name|QPalette
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QWidget
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_comment
comment|// Helper class...
end_comment
begin_constructor
DECL|function|BezierViewer
name|BezierViewer
operator|::
name|BezierViewer
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|setObjectName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|QPalette
name|pal
decl_stmt|;
name|pal
operator|.
name|setColor
argument_list|(
name|backgroundRole
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|setPalette
argument_list|(
name|pal
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setPoints
name|void
name|BezierViewer
operator|::
name|setPoints
parameter_list|(
specifier|const
name|QPolygonF
modifier|&
name|a
parameter_list|)
block|{
name|points
operator|=
name|a
expr_stmt|;
block|}
end_function
begin_include
include|#
directive|include
file|"private/qbezier_p.h"
end_include
begin_function
DECL|function|paintEvent
name|void
name|BezierViewer
operator|::
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|points
operator|.
name|size
argument_list|()
operator|!=
literal|4
condition|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_CHECK_RANGE
argument_list|)
name|qWarning
argument_list|(
literal|"QPolygon::bezier: The array must have 4 control points"
argument_list|)
expr_stmt|;
endif|#
directive|endif
return|return;
block|}
comment|/* Calculate Bezier curve */
name|QPolygonF
name|bezier
init|=
name|QBezier
operator|::
name|fromPoints
argument_list|(
name|points
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|points
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|points
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|,
name|points
operator|.
name|at
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|toPolygon
argument_list|()
decl_stmt|;
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
comment|/* Calculate scale to fit in window */
name|QRectF
name|br
init|=
name|bezier
operator|.
name|boundingRect
argument_list|()
operator||
name|points
operator|.
name|boundingRect
argument_list|()
decl_stmt|;
name|QRectF
name|pr
init|=
name|rect
argument_list|()
decl_stmt|;
name|int
name|scl
init|=
name|qMax
argument_list|(
name|qMin
argument_list|(
name|pr
operator|.
name|width
argument_list|()
operator|/
name|br
operator|.
name|width
argument_list|()
argument_list|,
name|pr
operator|.
name|height
argument_list|()
operator|/
name|br
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|1.
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|border
init|=
name|scl
operator|-
literal|1
decl_stmt|;
comment|/* Scale Bezier curve vertices */
for|for
control|(
name|QPolygonF
operator|::
name|Iterator
name|it
init|=
name|bezier
operator|.
name|begin
argument_list|()
init|;
name|it
operator|!=
name|bezier
operator|.
name|end
argument_list|()
condition|;
operator|++
name|it
control|)
block|{
name|it
operator|->
name|setX
argument_list|(
operator|(
name|it
operator|->
name|x
argument_list|()
operator|-
name|br
operator|.
name|x
argument_list|()
operator|)
operator|*
name|scl
operator|+
name|border
argument_list|)
expr_stmt|;
name|it
operator|->
name|setY
argument_list|(
operator|(
name|it
operator|->
name|y
argument_list|()
operator|-
name|br
operator|.
name|y
argument_list|()
operator|)
operator|*
name|scl
operator|+
name|border
argument_list|)
expr_stmt|;
block|}
comment|/* Draw grid */
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
name|border
init|;
name|i
operator|<=
name|pr
operator|.
name|width
argument_list|()
condition|;
name|i
operator|+=
name|scl
control|)
block|{
name|painter
operator|.
name|drawLine
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|i
argument_list|,
name|pr
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|j
init|=
name|border
init|;
name|j
operator|<=
name|pr
operator|.
name|height
argument_list|()
condition|;
name|j
operator|+=
name|scl
control|)
block|{
name|painter
operator|.
name|drawLine
argument_list|(
literal|0
argument_list|,
name|j
argument_list|,
name|pr
operator|.
name|width
argument_list|()
argument_list|,
name|j
argument_list|)
expr_stmt|;
block|}
comment|/* Write number of vertices */
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setFont
argument_list|(
name|QFont
argument_list|(
literal|"Helvetica"
argument_list|,
literal|14
argument_list|,
name|QFont
operator|::
name|DemiBold
argument_list|,
name|TRUE
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|caption
decl_stmt|;
name|caption
operator|.
name|setNum
argument_list|(
name|bezier
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|caption
operator|+=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|" vertices"
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
literal|10
argument_list|,
name|pr
operator|.
name|height
argument_list|()
operator|-
literal|10
argument_list|,
name|caption
argument_list|)
expr_stmt|;
comment|/* Draw Bezier curve */
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPolyline
argument_list|(
name|bezier
argument_list|)
expr_stmt|;
comment|/* Scale and draw control points */
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|darkGreen
argument_list|)
expr_stmt|;
for|for
control|(
name|QPolygonF
operator|::
name|Iterator
name|p1
init|=
name|points
operator|.
name|begin
argument_list|()
init|;
name|p1
operator|!=
name|points
operator|.
name|end
argument_list|()
condition|;
operator|++
name|p1
control|)
block|{
name|int
name|x
init|=
operator|(
name|p1
operator|->
name|x
argument_list|()
operator|-
name|br
operator|.
name|x
argument_list|()
operator|)
operator|*
name|scl
operator|+
name|border
decl_stmt|;
name|int
name|y
init|=
operator|(
name|p1
operator|->
name|y
argument_list|()
operator|-
name|br
operator|.
name|y
argument_list|()
operator|)
operator|*
name|scl
operator|+
name|border
decl_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|x
operator|-
literal|4
argument_list|,
name|y
operator|-
literal|4
argument_list|,
name|x
operator|+
literal|4
argument_list|,
name|y
operator|+
literal|4
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|x
operator|+
literal|4
argument_list|,
name|y
operator|-
literal|4
argument_list|,
name|x
operator|-
literal|4
argument_list|,
name|y
operator|+
literal|4
argument_list|)
expr_stmt|;
block|}
comment|/* Draw vertices */
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
for|for
control|(
name|QPolygonF
operator|::
name|Iterator
name|p2
init|=
name|bezier
operator|.
name|begin
argument_list|()
init|;
name|p2
operator|!=
name|bezier
operator|.
name|end
argument_list|()
condition|;
operator|++
name|p2
control|)
name|painter
operator|.
name|drawEllipse
argument_list|(
name|p2
operator|->
name|x
argument_list|()
operator|-
literal|1
argument_list|,
name|p2
operator|->
name|y
argument_list|()
operator|-
literal|1
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fontPropagation
name|void
name|tst_QWidget
operator|::
name|fontPropagation
parameter_list|()
block|{
name|QFont
name|font
init|=
name|testWidget
operator|->
name|font
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|childWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|font
argument_list|,
name|childWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|font
operator|.
name|setBold
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|font
argument_list|,
name|testWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|font
argument_list|,
name|childWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QFont
name|newFont
init|=
name|font
decl_stmt|;
name|newFont
operator|.
name|setItalic
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setFont
argument_list|(
name|newFont
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|font
argument_list|,
name|testWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newFont
argument_list|,
name|grandChildWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|font
operator|.
name|setUnderline
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
comment|// the child and grand child should now have merged bold and
comment|// underline
name|newFont
operator|.
name|setUnderline
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newFont
argument_list|,
name|childWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newFont
argument_list|,
name|grandChildWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
comment|// make sure font propagation continues working after reparenting
name|font
operator|=
name|testWidget
operator|->
name|font
argument_list|()
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|one
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|two
init|=
operator|new
name|QWidget
argument_list|(
name|one
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|three
init|=
operator|new
name|QWidget
argument_list|(
name|two
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|four
init|=
operator|new
name|QWidget
argument_list|(
name|two
argument_list|)
decl_stmt|;
name|four
operator|->
name|setParent
argument_list|(
name|three
argument_list|)
expr_stmt|;
name|four
operator|->
name|move
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|font
argument_list|()
argument_list|,
name|one
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|one
operator|->
name|font
argument_list|()
argument_list|,
name|two
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|two
operator|->
name|font
argument_list|()
argument_list|,
name|three
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|three
operator|->
name|font
argument_list|()
argument_list|,
name|four
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|one
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|two
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|three
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|four
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|one
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|one
operator|->
name|font
argument_list|()
argument_list|,
name|two
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|two
operator|->
name|font
argument_list|()
argument_list|,
name|three
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|three
operator|->
name|font
argument_list|()
argument_list|,
name|four
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|one
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|two
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|three
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|four
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|two
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|two
operator|->
name|font
argument_list|()
argument_list|,
name|three
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|three
operator|->
name|font
argument_list|()
argument_list|,
name|four
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|two
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|three
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|four
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|three
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|three
operator|->
name|font
argument_list|()
argument_list|,
name|four
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|three
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|four
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|four
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|four
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|QPropagationTestWidget
class|class
name|QPropagationTestWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|QPropagationTestWidget
name|QPropagationTestWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{ }
block|}
class|;
end_class
begin_function
DECL|function|fontPropagation2
name|void
name|tst_QWidget
operator|::
name|fontPropagation2
parameter_list|()
block|{
comment|// ! Note, the code below is executed in tst_QWidget's constructor.
comment|// QFont font;
comment|// font.setBold(true);
comment|// font.setPointSize(42);
comment|// qApp->setFont(font, "QPropagationTestWidget");
name|QWidget
modifier|*
name|root
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|child0
init|=
operator|new
name|QWidget
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child1
init|=
operator|new
name|QWidget
argument_list|(
name|child0
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child2
init|=
operator|new
name|QPropagationTestWidget
argument_list|(
name|child1
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child3
init|=
operator|new
name|QWidget
argument_list|(
name|child2
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child4
init|=
operator|new
name|QWidget
argument_list|(
name|child3
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child5
init|=
operator|new
name|QWidget
argument_list|(
name|child4
argument_list|)
decl_stmt|;
name|root
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// Check that only the application fonts apply.
name|QCOMPARE
argument_list|(
name|root
operator|->
name|font
argument_list|()
argument_list|,
name|QApplication
operator|::
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|font
argument_list|()
argument_list|,
name|QApplication
operator|::
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|font
argument_list|()
argument_list|,
name|QApplication
operator|::
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child2
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child3
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child4
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child5
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
comment|// Set child0's font size to 15, and remove bold on child4.
name|QFont
name|font
decl_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|child0
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QFont
name|unboldFont
decl_stmt|;
name|unboldFont
operator|.
name|setBold
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|child4
operator|->
name|setFont
argument_list|(
name|unboldFont
argument_list|)
expr_stmt|;
comment|// Check that the above settings propagate correctly.
name|QCOMPARE
argument_list|(
name|root
operator|->
name|font
argument_list|()
argument_list|,
name|QApplication
operator|::
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child0
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child2
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child3
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child4
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child5
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
comment|// Replace the app font for child2. Italic should propagate
comment|// but the size should still be ignored. The previous bold
comment|// setting is gone.
name|QFont
name|italicSizeFont
decl_stmt|;
name|italicSizeFont
operator|.
name|setItalic
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|italicSizeFont
operator|.
name|setPointSize
argument_list|(
literal|33
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setFont
argument_list|(
name|italicSizeFont
argument_list|,
literal|"QPropagationTestWidget"
argument_list|)
expr_stmt|;
comment|// Check that this propagates correctly.
name|QCOMPARE
argument_list|(
name|root
operator|->
name|font
argument_list|()
argument_list|,
name|QApplication
operator|::
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child0
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child0
operator|->
name|font
argument_list|()
operator|.
name|italic
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|->
name|font
argument_list|()
operator|.
name|italic
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child2
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child2
operator|->
name|font
argument_list|()
operator|.
name|italic
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child3
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child3
operator|->
name|font
argument_list|()
operator|.
name|italic
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child4
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child4
operator|->
name|font
argument_list|()
operator|.
name|italic
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|font
argument_list|()
operator|.
name|pointSize
argument_list|()
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child5
operator|->
name|font
argument_list|()
operator|.
name|bold
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child5
operator|->
name|font
argument_list|()
operator|.
name|italic
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|palettePropagation
name|void
name|tst_QWidget
operator|::
name|palettePropagation
parameter_list|()
block|{
name|QPalette
name|palette
init|=
name|testWidget
operator|->
name|palette
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|childWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|palette
argument_list|,
name|childWidget
operator|->
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Base
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|palette
argument_list|,
name|testWidget
operator|->
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|palette
argument_list|,
name|childWidget
operator|->
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|QPalette
name|newPalette
init|=
name|palette
decl_stmt|;
name|newPalette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setPalette
argument_list|(
name|newPalette
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|palette
argument_list|,
name|testWidget
operator|->
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newPalette
argument_list|,
name|grandChildWidget
operator|->
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
comment|// the child and grand child should now have merged green
comment|// highlight and blue text
name|newPalette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newPalette
argument_list|,
name|childWidget
operator|->
name|palette
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newPalette
argument_list|,
name|grandChildWidget
operator|->
name|palette
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|palettePropagation2
name|void
name|tst_QWidget
operator|::
name|palettePropagation2
parameter_list|()
block|{
comment|// ! Note, the code below is executed in tst_QWidget's constructor.
comment|// QPalette palette;
comment|// font.setColor(QPalette::ToolTipBase, QColor(12, 13, 14));
comment|// font.setColor(QPalette::Text, QColor(21, 22, 23));
comment|// qApp->setPalette(palette, "QPropagationTestWidget");
name|QWidget
modifier|*
name|root
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|child0
init|=
operator|new
name|QWidget
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child1
init|=
operator|new
name|QWidget
argument_list|(
name|child0
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child2
init|=
operator|new
name|QPropagationTestWidget
argument_list|(
name|child1
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child3
init|=
operator|new
name|QWidget
argument_list|(
name|child2
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child4
init|=
operator|new
name|QWidget
argument_list|(
name|child3
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child5
init|=
operator|new
name|QWidget
argument_list|(
name|child4
argument_list|)
decl_stmt|;
name|root
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// These colors are unlikely to be imposed on the default palette of
comment|// QWidget ;-).
name|QColor
name|sysPalText
argument_list|(
literal|21
argument_list|,
literal|22
argument_list|,
literal|23
argument_list|)
decl_stmt|;
name|QColor
name|sysPalToolTipBase
argument_list|(
literal|12
argument_list|,
literal|13
argument_list|,
literal|14
argument_list|)
decl_stmt|;
name|QColor
name|overridePalText
argument_list|(
literal|42
argument_list|,
literal|43
argument_list|,
literal|44
argument_list|)
decl_stmt|;
name|QColor
name|overridePalToolTipBase
argument_list|(
literal|45
argument_list|,
literal|46
argument_list|,
literal|47
argument_list|)
decl_stmt|;
name|QColor
name|sysPalButton
argument_list|(
literal|99
argument_list|,
literal|98
argument_list|,
literal|97
argument_list|)
decl_stmt|;
comment|// Check that only the application fonts apply.
name|QPalette
name|appPal
init|=
name|QApplication
operator|::
name|palette
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|root
operator|->
name|palette
argument_list|()
argument_list|,
name|appPal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|palette
argument_list|()
argument_list|,
name|appPal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|palette
argument_list|()
argument_list|,
name|appPal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|sysPalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|sysPalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|sysPalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|sysPalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|sysPalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|sysPalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|sysPalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|sysPalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set child0's Text, and set ToolTipBase on child4.
name|QPalette
name|textPalette
decl_stmt|;
name|textPalette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|child0
operator|->
name|setPalette
argument_list|(
name|textPalette
argument_list|)
expr_stmt|;
name|QPalette
name|toolTipPalette
decl_stmt|;
name|toolTipPalette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|,
name|overridePalToolTipBase
argument_list|)
expr_stmt|;
name|child4
operator|->
name|setPalette
argument_list|(
name|toolTipPalette
argument_list|)
expr_stmt|;
comment|// Check that the above settings propagate correctly.
name|QCOMPARE
argument_list|(
name|root
operator|->
name|palette
argument_list|()
argument_list|,
name|appPal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|sysPalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|sysPalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|overridePalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|overridePalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
comment|// Replace the app palette for child2. Button should propagate but Text
comment|// should still be ignored. The previous ToolTipBase setting is gone.
name|QPalette
name|buttonPalette
decl_stmt|;
name|buttonPalette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|,
name|sysPalButton
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setPalette
argument_list|(
name|buttonPalette
argument_list|,
literal|"QPropagationTestWidget"
argument_list|)
expr_stmt|;
comment|// Check that the above settings propagate correctly.
name|QCOMPARE
argument_list|(
name|root
operator|->
name|palette
argument_list|()
argument_list|,
name|appPal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child0
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|sysPalButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|appPal
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child3
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|sysPalButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|overridePalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child4
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|sysPalButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|,
name|overridePalText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipBase
argument_list|)
argument_list|,
name|overridePalToolTipBase
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child5
operator|->
name|palette
argument_list|()
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|ToolTipText
argument_list|)
argument_list|,
name|sysPalButton
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|enabledPropagation
name|void
name|tst_QWidget
operator|::
name|enabledPropagation
parameter_list|()
block|{
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|childWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisabled
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setEnabled
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setDisabled
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setEnabled
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|acceptDropsPropagation
name|void
name|tst_QWidget
operator|::
name|acceptDropsPropagation
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_NO_DRAGANDDROP
name|QSKIP
argument_list|(
literal|"Drag'n drop disabled in this build"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
else|#
directive|else
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|childWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setAcceptDrops
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|acceptDrops
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_DropSiteRegistered
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|isEnabledTo
name|void
name|tst_QWidget
operator|::
name|isEnabledTo
parameter_list|()
block|{
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isEnabledTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isEnabledTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|setEnabled
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isEnabledTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isEnabledTo
argument_list|(
name|childWidget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isEnabledTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visible
name|void
name|tst_QWidget
operator|::
name|visible
parameter_list|()
block|{
comment|// Ensure that the testWidget is hidden for this test at the
comment|// start
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|childWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setLocale
name|void
name|tst_QWidget
operator|::
name|setLocale
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|setLocale
argument_list|(
name|QLocale
operator|::
name|Italian
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|Italian
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|Italian
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|unsetLocale
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|setLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setLocale
argument_list|(
name|QLocale
operator|::
name|Italian
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|Italian
argument_list|)
argument_list|)
expr_stmt|;
name|child1
operator|.
name|unsetLocale
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|child2
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|()
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|.
name|locale
argument_list|()
argument_list|,
name|QLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visible_setWindowOpacity
name|void
name|tst_QWidget
operator|::
name|visible_setWindowOpacity
parameter_list|()
block|{
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWindowOpacity
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
name|QVERIFY
argument_list|(
operator|::
name|IsWindowVisible
argument_list|(
name|testWidget
operator|->
name|winId
argument_list|()
argument_list|)
operator|==
name|FALSE
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|testWidget
operator|->
name|setWindowOpacity
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isVisibleTo
name|void
name|tst_QWidget
operator|::
name|isVisibleTo
parameter_list|()
block|{
comment|// Ensure that the testWidget is hidden for this test at the
comment|// start
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isVisibleTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
name|childWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isVisibleTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isVisibleTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isVisibleTo
argument_list|(
name|childWidget
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|childWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isVisibleTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isVisibleTo
argument_list|(
name|childWidget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isVisibleTo
argument_list|(
name|testWidget
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isHidden
name|void
name|tst_QWidget
operator|::
name|isHidden
parameter_list|()
block|{
comment|// Ensure that the testWidget is hidden for this test at the
comment|// start
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|testWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|childWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChildWidget
init|=
operator|new
name|QWidget
argument_list|(
name|childWidget
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChildWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|childWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|childWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|childWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|grandChildWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChildWidget
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fonts
name|void
name|tst_QWidget
operator|::
name|fonts
parameter_list|()
block|{
comment|// Tests setFont(), ownFont() and unsetFont()
name|QWidget
modifier|*
name|cleanTestWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QFont
name|originalFont
init|=
name|cleanTestWidget
operator|->
name|font
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|cleanTestWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|cleanTestWidget
operator|->
name|setFont
argument_list|(
name|QFont
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|cleanTestWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QFont
name|newFont
argument_list|(
literal|"times"
argument_list|,
literal|18
argument_list|)
decl_stmt|;
name|cleanTestWidget
operator|->
name|setFont
argument_list|(
name|newFont
argument_list|)
expr_stmt|;
name|newFont
operator|=
name|newFont
operator|.
name|resolve
argument_list|(
name|testWidget
operator|->
name|font
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cleanTestWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cleanTestWidget
operator|->
name|font
argument_list|()
operator|==
name|newFont
argument_list|)
expr_stmt|;
name|cleanTestWidget
operator|->
name|setFont
argument_list|(
name|QFont
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|cleanTestWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetFont
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cleanTestWidget
operator|->
name|font
argument_list|()
operator|==
name|originalFont
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapToGlobal
name|void
name|tst_QWidget
operator|::
name|mapToGlobal
parameter_list|()
block|{
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT3_SUPPORT
argument_list|)
name|QSKIP
argument_list|(
literal|"No Qt3 Support"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
else|#
directive|else
name|QPoint
name|vis
init|=
name|testWidget
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|vis
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// test in a layout and witha move
name|Q3HBox
modifier|*
name|qhb
init|=
operator|new
name|Q3HBox
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|qw
init|=
operator|new
name|QWidget
argument_list|(
name|qhb
argument_list|)
decl_stmt|;
name|qw
operator|->
name|move
argument_list|(
literal|6
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|QPoint
name|wVis
init|=
name|qw
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|qw
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qw
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|wVis
argument_list|)
expr_stmt|;
operator|delete
name|qhb
expr_stmt|;
endif|#
directive|endif
comment|// QT3_SUPPORT
block|}
end_function
begin_function
DECL|function|mapFromAndTo_data
name|void
name|tst_QWidget
operator|::
name|mapFromAndTo_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"windowHidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"subWindow1Hidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"subWindow2Hidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"subSubWindowHidden"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"windowMinimized"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"subWindow1Minimized"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 1 subsub 1"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 1 subsub 1"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 1 subsub 1"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 1 subsub 1"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 0 subsub 1"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 0 subsub 1"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 0 subsub 1"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 0 subsub 1"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 1 subsub 0"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 1 subsub 0"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 1 subsub 0"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 1 subsub 0"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 0 subsub 0"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 0 subsub 0"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 0 subsub 0"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 0 subsub 0"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 1 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 1 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 1 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 1 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 0 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 0 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 0 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 0 subsub 1 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 1 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 1 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 1 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 1 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 0 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 0 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 0 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 0 subsub 0 windowMinimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 1 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 1 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 1 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 1 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 0 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 0 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 0 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 0 subsub 1 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 1 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 1 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 1 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 1 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 1 sub2 0 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 1 sub2 0 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 1 sub1 0 sub2 0 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window 0 sub1 0 sub2 0 subsub 0 subWindow1Minimized"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapFromAndTo
name|void
name|tst_QWidget
operator|::
name|mapFromAndTo
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|windowHidden
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|subWindow1Hidden
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|subWindow2Hidden
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|subSubWindowHidden
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|windowMinimized
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|subWindow1Minimized
argument_list|)
expr_stmt|;
comment|// create a toplevel and two overlapping siblings
name|QWidget
name|window
decl_stmt|;
name|window
operator|.
name|setWindowFlags
argument_list|(
name|window
operator|.
name|windowFlags
argument_list|()
operator||
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|subWindow1
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|subWindow2
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|subSubWindow
init|=
operator|new
name|QWidget
argument_list|(
name|subWindow1
argument_list|)
decl_stmt|;
comment|// set their geometries
name|window
operator|.
name|setGeometry
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|subWindow1
operator|->
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|subWindow2
operator|->
name|setGeometry
argument_list|(
literal|75
argument_list|,
literal|75
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|subSubWindow
operator|->
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
comment|//still no proper minimizing
comment|//update visibility
if|if
condition|(
name|windowMinimized
condition|)
block|{
if|if
condition|(
operator|!
name|windowHidden
condition|)
block|{
name|window
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|window
operator|.
name|setVisible
argument_list|(
operator|!
name|windowHidden
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|subWindow1Minimized
condition|)
block|{
name|subWindow1
operator|->
name|hide
argument_list|()
expr_stmt|;
name|subWindow1
operator|->
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|subWindow1
operator|->
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|subWindow1
operator|->
name|setVisible
argument_list|(
operator|!
name|subWindow1Hidden
argument_list|)
expr_stmt|;
block|}
else|#
directive|else
name|Q_UNUSED
argument_list|(
name|windowHidden
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|subWindow1Hidden
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|windowMinimized
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|subWindow1Minimized
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|subWindow2
operator|->
name|setVisible
argument_list|(
operator|!
name|subWindow2Hidden
argument_list|)
expr_stmt|;
name|subSubWindow
operator|->
name|setVisible
argument_list|(
operator|!
name|subSubWindowHidden
argument_list|)
expr_stmt|;
comment|// window
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|90
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|90
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|210
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|210
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|90
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|90
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|210
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|210
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|90
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|90
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|210
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|210
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|90
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|90
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|210
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|200
argument_list|,
literal|210
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
comment|// first subwindow
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|160
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|140
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|140
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|260
argument_list|,
literal|250
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|250
argument_list|,
literal|260
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|150
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|160
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|140
argument_list|,
literal|150
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|140
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|260
argument_list|,
literal|250
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|250
argument_list|,
literal|260
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|60
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|60
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|40
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|160
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|60
argument_list|,
literal|50
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|60
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|40
argument_list|,
literal|50
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|40
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|150
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subWindow1
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|160
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
comment|// subsubwindow
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|160
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|170
argument_list|,
literal|160
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|170
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|160
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|260
argument_list|,
literal|260
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|270
argument_list|,
literal|260
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|260
argument_list|,
literal|270
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|160
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|170
argument_list|,
literal|160
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|170
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|150
argument_list|,
literal|160
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|160
argument_list|,
literal|150
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|260
argument_list|,
literal|260
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|270
argument_list|,
literal|260
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|260
argument_list|,
literal|270
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|120
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapToParent
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|120
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|120
argument_list|,
literal|110
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subSubWindow
operator|->
name|mapFromParent
argument_list|(
name|QPoint
argument_list|(
literal|110
argument_list|,
literal|120
argument_list|)
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusChainOnReparent
name|void
name|tst_QWidget
operator|::
name|focusChainOnReparent
parameter_list|()
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
modifier|*
name|child1
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child2
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child3
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child21
init|=
operator|new
name|QWidget
argument_list|(
name|child2
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child22
init|=
operator|new
name|QWidget
argument_list|(
name|child2
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child4
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|expectedOriginalChain
index|[
literal|8
index|]
init|=
block|{
operator|&
name|window
block|,
name|child1
block|,
name|child2
block|,
name|child3
block|,
name|child21
block|,
name|child22
block|,
name|child4
block|,
operator|&
name|window
block|}
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|&
name|window
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|w
argument_list|,
name|expectedOriginalChain
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|w
operator|=
name|w
operator|->
name|nextInFocusChain
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|7
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|w
operator|=
name|w
operator|->
name|previousInFocusChain
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
argument_list|,
name|expectedOriginalChain
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|QWidget
name|window2
decl_stmt|;
name|child2
operator|->
name|setParent
argument_list|(
operator|&
name|window2
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|expectedNewChain
index|[
literal|5
index|]
init|=
block|{
operator|&
name|window2
block|,
name|child2
block|,
name|child21
block|,
name|child22
block|,
operator|&
name|window2
block|}
decl_stmt|;
name|w
operator|=
operator|&
name|window2
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|w
argument_list|,
name|expectedNewChain
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|w
operator|=
name|w
operator|->
name|nextInFocusChain
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|4
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|w
operator|=
name|w
operator|->
name|previousInFocusChain
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
argument_list|,
name|expectedNewChain
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|QWidget
modifier|*
name|expectedOldChain
index|[
literal|5
index|]
init|=
block|{
operator|&
name|window
block|,
name|child1
block|,
name|child3
block|,
name|child4
block|,
operator|&
name|window
block|}
decl_stmt|;
name|w
operator|=
operator|&
name|window
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|w
argument_list|,
name|expectedOldChain
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|w
operator|=
name|w
operator|->
name|nextInFocusChain
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|4
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|w
operator|=
name|w
operator|->
name|previousInFocusChain
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
argument_list|,
name|expectedOldChain
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|focusChainOnHide
name|void
name|tst_QWidget
operator|::
name|focusChainOnHide
parameter_list|()
block|{
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
comment|// We do not want to get disturbed by other widgets
comment|// focus should move to the next widget in the focus chain when we hide it.
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|parent
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"Parent"
argument_list|)
argument_list|)
expr_stmt|;
name|parent
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"child"
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
operator|::
name|setTabOrder
argument_list|(
name|child
argument_list|,
name|parent
argument_list|)
expr_stmt|;
name|parent
operator|->
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|parent
operator|->
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|child
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|hasFocus
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|child
operator|->
name|hide
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|->
name|hasFocus
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
argument_list|,
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|parent
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
comment|//don't disturb later tests
block|}
end_function
begin_function
DECL|function|checkFocus
name|void
name|tst_QWidget
operator|::
name|checkFocus
parameter_list|()
block|{
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT3_SUPPORT
argument_list|)
name|QSKIP
argument_list|(
literal|"No Qt3 Support"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
else|#
directive|else
comment|// This is a very specific test for a specific bug, the bug was
comment|// that when setEnabled(FALSE) then setEnabled(TRUE) was called on
comment|// the parent of a child widget which had focus while hidden, then
comment|// when the widget was shown, the focus would be in the wrong place.
name|Q3HBox
name|widget
decl_stmt|;
name|QLineEdit
modifier|*
name|focusWidget
init|=
operator|new
name|QLineEdit
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
operator|new
name|QLineEdit
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
operator|new
name|QPushButton
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|focusWidget
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setEnabled
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setEnabled
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|widget
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
comment|// next call is necessary since the window manager may not give the focus to the widget when
comment|// it is shown, which causes the QVERIFY to fail
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
operator|==
name|focusWidget
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// QT3_SUPPORT
block|}
end_function
begin_class
DECL|class|Container
class|class
name|Container
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|member|box
name|QVBoxLayout
modifier|*
name|box
decl_stmt|;
DECL|function|Container
name|Container
parameter_list|()
block|{
name|box
operator|=
operator|new
name|QVBoxLayout
argument_list|(
name|this
argument_list|)
expr_stmt|;
comment|//(new QVBoxLayout(this))->setAutoAdd(true);
block|}
DECL|function|tab
name|void
name|tab
parameter_list|()
block|{
name|focusNextPrevChild
argument_list|(
name|TRUE
argument_list|)
expr_stmt|;
block|}
DECL|function|backTab
name|void
name|backTab
parameter_list|()
block|{
name|focusNextPrevChild
argument_list|(
name|FALSE
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|Composite
class|class
name|Composite
super|:
specifier|public
name|QFrame
block|{
public|public:
DECL|function|Composite
name|Composite
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|,
specifier|const
name|char
modifier|*
name|name
init|=
literal|0
parameter_list|)
member_init_list|:
name|QFrame
argument_list|(
name|parent
argument_list|)
block|{
name|setObjectName
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|//QHBoxLayout* hbox = new QHBoxLayout(this, 2, 0);
comment|//hbox->setAutoAdd(true);
name|QHBoxLayout
modifier|*
name|hbox
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|lineEdit
operator|=
operator|new
name|QLineEdit
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|hbox
operator|->
name|addWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|hbox
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|setFocusProxy
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|setTabOrder
argument_list|(
name|lineEdit
argument_list|,
name|button
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|lineEdit
name|QLineEdit
modifier|*
name|lineEdit
decl_stmt|;
DECL|member|button
name|QPushButton
modifier|*
name|button
decl_stmt|;
block|}
class|;
end_class
begin_define
DECL|macro|NUM_WIDGETS
define|#
directive|define
name|NUM_WIDGETS
value|4
end_define
begin_function
DECL|function|setTabOrder
name|void
name|tst_QWidget
operator|::
name|setTabOrder
parameter_list|()
block|{
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|Container
name|container
decl_stmt|;
name|Composite
modifier|*
name|comp
index|[
name|NUM_WIDGETS
index|]
decl_stmt|;
name|QLineEdit
modifier|*
name|firstEdit
init|=
operator|new
name|QLineEdit
argument_list|(
operator|&
name|container
argument_list|)
decl_stmt|;
name|container
operator|.
name|box
operator|->
name|addWidget
argument_list|(
name|firstEdit
argument_list|)
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|i
operator|=
literal|0
init|;
name|i
operator|<
name|NUM_WIDGETS
condition|;
name|i
operator|++
control|)
block|{
name|comp
index|[
name|i
index|]
operator|=
operator|new
name|Composite
argument_list|(
operator|&
name|container
argument_list|)
expr_stmt|;
name|container
operator|.
name|box
operator|->
name|addWidget
argument_list|(
name|comp
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|QLineEdit
modifier|*
name|lastEdit
init|=
operator|new
name|QLineEdit
argument_list|(
operator|&
name|container
argument_list|)
decl_stmt|;
name|container
operator|.
name|box
operator|->
name|addWidget
argument_list|(
name|lastEdit
argument_list|)
expr_stmt|;
name|container
operator|.
name|setTabOrder
argument_list|(
name|lastEdit
argument_list|,
name|comp
index|[
name|NUM_WIDGETS
operator|-
literal|1
index|]
argument_list|)
expr_stmt|;
for|for
control|(
name|i
operator|=
name|NUM_WIDGETS
operator|-
literal|1
init|;
name|i
operator|>
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|container
operator|.
name|setTabOrder
argument_list|(
name|comp
index|[
name|i
index|]
argument_list|,
name|comp
index|[
name|i
operator|-
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
name|container
operator|.
name|setTabOrder
argument_list|(
name|comp
index|[
literal|0
index|]
argument_list|,
name|firstEdit
argument_list|)
expr_stmt|;
name|int
name|current
init|=
name|NUM_WIDGETS
operator|-
literal|1
decl_stmt|;
name|lastEdit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|container
operator|.
name|show
argument_list|()
expr_stmt|;
name|container
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|container
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|container
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|lastEdit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|tab
argument_list|()
expr_stmt|;
do|do
block|{
name|QVERIFY
argument_list|(
name|comp
index|[
name|current
index|]
operator|->
name|focusProxy
argument_list|()
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|container
operator|.
name|tab
argument_list|()
expr_stmt|;
name|current
operator|--
expr_stmt|;
block|}
do|while
condition|(
name|current
operator|>=
literal|0
condition|)
do|;
name|QVERIFY
argument_list|(
name|firstEdit
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|activation
name|void
name|tst_QWidget
operator|::
name|activation
parameter_list|()
block|{
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
name|QSKIP
argument_list|(
literal|"This test is Windows-only."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|Q_CHECK_PAINTEVENTS
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|int
name|waitTime
init|=
literal|1000
decl_stmt|;
else|#
directive|else
name|int
name|waitTime
init|=
literal|100
decl_stmt|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QWidget
name|widget1
decl_stmt|;
name|widget1
operator|.
name|setWindowTitle
argument_list|(
literal|"Widget1"
argument_list|)
expr_stmt|;
name|QWidget
name|widget2
decl_stmt|;
name|widget2
operator|.
name|setWindowTitle
argument_list|(
literal|"Widget2"
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|show
argument_list|()
expr_stmt|;
name|widget2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|waitTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
operator|==
operator|&
name|widget2
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|waitTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
operator|==
operator|&
name|widget1
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|waitTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
operator|==
operator|&
name|widget2
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|waitTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
operator|==
operator|&
name|widget1
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|waitTime
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
if|if
condition|(
name|QSysInfo
operator|::
name|WindowsVersion
operator|>=
name|QSysInfo
operator|::
name|WV_VISTA
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"MS introduced new behavior after XP"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
name|waitTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
operator|==
operator|&
name|widget2
argument_list|)
expr_stmt|;
name|widget2
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|waitTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|activeWindow
argument_list|()
operator|==
operator|&
name|widget1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowState
name|void
name|tst_QWidget
operator|::
name|windowState
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_WS_X11
name|QSKIP
argument_list|(
literal|"Many window managers do not support window state properly, which causes this "
literal|"test to fail."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
else|#
directive|else
ifdef|#
directive|ifdef
name|Q_OS_WINCE_WM
name|QPoint
name|pos
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
decl_stmt|;
name|QSize
name|size
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
decl_stmt|;
if|if
condition|(
name|qt_wince_is_smartphone
argument_list|()
condition|)
block|{
comment|//small screen
name|pos
operator|=
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|size
operator|=
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_S60
argument_list|)
name|QPoint
name|pos
init|=
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QSize
name|size
init|=
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
else|#
directive|else
specifier|const
name|QPoint
name|pos
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
decl_stmt|;
specifier|const
name|QSize
name|size
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
decl_stmt|;
endif|#
directive|endif
name|QWidget
name|widget1
decl_stmt|;
name|widget1
operator|.
name|move
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|resize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowTitle
argument_list|(
literal|"Widget1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
define|#
directive|define
name|VERIFY_STATE
parameter_list|(
name|s
parameter_list|)
value|QCOMPARE(int(widget1.windowState()& stateMask), int(s))
specifier|const
name|int
name|stateMask
init|=
name|Qt
operator|::
name|WindowMaximized
operator||
name|Qt
operator|::
name|WindowMinimized
operator||
name|Qt
operator|::
name|WindowFullScreen
decl_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
operator|(
name|Qt
operator|::
name|WindowMinimized
operator||
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|&
operator|(
name|Qt
operator|::
name|WindowMinimized
operator||
name|Qt
operator|::
name|WindowMaximized
operator|)
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
operator|(
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMinimized
operator|)
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
operator|(
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
operator|(
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMaximized
operator||
name|Qt
operator|::
name|WindowMinimized
operator|)
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
operator|(
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|VERIFY_STATE
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|widget1
operator|.
name|setWindowState
argument_list|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|widget1
operator|.
name|windowState
argument_list|()
operator|&
name|stateMask
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget1
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|showMaximized
name|void
name|tst_QWidget
operator|::
name|showMaximized
parameter_list|()
block|{
name|QWidget
name|plain
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
decl_stmt|;
name|layout
operator|=
operator|new
name|QHBoxLayout
expr_stmt|;
name|QWidget
name|layouted
decl_stmt|;
name|QLineEdit
name|le
decl_stmt|;
name|QLineEdit
name|le2
decl_stmt|;
name|QLineEdit
name|le3
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|le
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|le2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|le3
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|plain
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|layouted
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_WS_S60
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_WS_QPA
argument_list|)
comment|//embedded may choose a different size to fit on the screen.
name|QCOMPARE
argument_list|(
name|layouted
operator|.
name|size
argument_list|()
argument_list|,
name|layouted
operator|.
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|layouted
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|QWidget
name|frame
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|frame
argument_list|)
decl_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|widget
operator|.
name|size
argument_list|()
operator|.
name|width
argument_list|()
operator|>
literal|20
operator|&&
name|widget
operator|.
name|size
argument_list|()
operator|.
name|height
argument_list|()
operator|>
literal|20
argument_list|)
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|QT3_SUPPORT
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
comment|//embedded respects max/min sizes by design -- maybe wrong design, but that's the way it is now.
block|{
name|Q3HBox
name|box
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|box
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setMinimumSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|box
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|Q3HBox
name|box
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|box
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setMaximumSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|box
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|.
name|isMaximized
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
endif|#
directive|endif
comment|// QT3_SUPPORT
block|}
end_function
begin_function
DECL|function|showFullScreen
name|void
name|tst_QWidget
operator|::
name|showFullScreen
parameter_list|()
block|{
name|QWidget
name|plain
decl_stmt|;
name|QHBoxLayout
modifier|*
name|layout
decl_stmt|;
name|QWidget
name|layouted
decl_stmt|;
name|QLineEdit
name|le
decl_stmt|;
name|QLineEdit
name|le2
decl_stmt|;
name|QLineEdit
name|le3
decl_stmt|;
name|layout
operator|=
operator|new
name|QHBoxLayout
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|le
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|le2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|&
name|le3
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|plain
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|layouted
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_WS_S60
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_WS_QPA
argument_list|)
comment|//embedded may choose a different size to fit on the screen.
name|QCOMPARE
argument_list|(
name|layouted
operator|.
name|size
argument_list|()
argument_list|,
name|layouted
operator|.
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|layouted
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|layouted
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|layouted
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layouted
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|QWidget
name|frame
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|frame
argument_list|)
decl_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|QT3_SUPPORT
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
comment|//embedded respects max/min sizes by design -- maybe wrong design, but that's the way it is now.
block|{
name|Q3HBox
name|box
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|box
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setMinimumSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|box
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|Q3HBox
name|box
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|box
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setMaximumSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|box
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|box
operator|.
name|isFullScreen
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
endif|#
directive|endif
comment|// QT3_SUPPORT
block|}
end_function
begin_class
DECL|class|ResizeWidget
class|class
name|ResizeWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|ResizeWidget
name|ResizeWidget
parameter_list|(
name|QWidget
modifier|*
name|p
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|p
argument_list|)
block|{
name|m_resizeEventCount
operator|=
literal|0
expr_stmt|;
block|}
protected|protected:
DECL|function|resizeEvent
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
name|e
parameter_list|)
block|{
name|QCOMPARE
argument_list|(
name|size
argument_list|()
argument_list|,
name|e
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|m_resizeEventCount
expr_stmt|;
block|}
public|public:
DECL|member|m_resizeEventCount
name|int
name|m_resizeEventCount
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|resizeEvent
name|void
name|tst_QWidget
operator|::
name|resizeEvent
parameter_list|()
block|{
block|{
name|QWidget
name|wParent
decl_stmt|;
name|ResizeWidget
name|wChild
argument_list|(
operator|&
name|wParent
argument_list|)
decl_stmt|;
name|wParent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wChild
operator|.
name|m_resizeEventCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// initial resize event before paint
name|wParent
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QSize
name|safeSize
argument_list|(
literal|640
argument_list|,
literal|480
argument_list|)
decl_stmt|;
if|if
condition|(
name|wChild
operator|.
name|size
argument_list|()
operator|==
name|safeSize
condition|)
name|safeSize
operator|.
name|setWidth
argument_list|(
literal|639
argument_list|)
expr_stmt|;
name|wChild
operator|.
name|resize
argument_list|(
name|safeSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wChild
operator|.
name|m_resizeEventCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|wParent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wChild
operator|.
name|m_resizeEventCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|{
name|ResizeWidget
name|wTopLevel
decl_stmt|;
name|wTopLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wTopLevel
operator|.
name|m_resizeEventCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// initial resize event before paint for toplevels
name|wTopLevel
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QSize
name|safeSize
argument_list|(
literal|640
argument_list|,
literal|480
argument_list|)
decl_stmt|;
if|if
condition|(
name|wTopLevel
operator|.
name|size
argument_list|()
operator|==
name|safeSize
condition|)
name|safeSize
operator|.
name|setWidth
argument_list|(
literal|639
argument_list|)
expr_stmt|;
name|wTopLevel
operator|.
name|resize
argument_list|(
name|safeSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wTopLevel
operator|.
name|m_resizeEventCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|wTopLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wTopLevel
operator|.
name|m_resizeEventCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|showMinimized
name|void
name|tst_QWidget
operator|::
name|showMinimized
parameter_list|()
block|{
name|QWidget
name|plain
decl_stmt|;
name|plain
operator|.
name|move
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|plain
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QPoint
name|pos
init|=
name|plain
operator|.
name|pos
argument_list|()
decl_stmt|;
name|plain
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|plain
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|plain
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|plain
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|plain
operator|.
name|pos
argument_list|()
argument_list|,
name|pos
argument_list|)
expr_stmt|;
name|plain
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|plain
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|plain
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|plain
operator|.
name|setGeometry
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|plain
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|plain
operator|.
name|geometry
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QWidget
name|frame
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|frame
argument_list|)
decl_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|showMinimizedKeepsFocus
name|void
name|tst_QWidget
operator|::
name|showMinimizedKeepsFocus
parameter_list|()
block|{
comment|//here we test that minimizing a widget and restoring it doesn't change the focus inside of it
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|,
name|child2
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child1
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
name|window
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|window
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
name|window
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
block|}
comment|//testing deletion of the focusWidget
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
operator|delete
name|child
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//testing reparenting the focus widget
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|child
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//testing setEnabled(false)
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|child
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//testing clearFocus
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
modifier|*
name|firstchild
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|firstchild
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|child
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|window
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|window
operator|.
name|isMinimized
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QWS does not implement showMinimized()"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QWS does not implement showMinimized()"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|window
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
if|if
condition|(
operator|!
name|macHasAccessToWindowsServer
argument_list|()
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"When not having WindowServer access, we lose focus."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
name|firstchild
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
if|if
condition|(
operator|!
name|macHasAccessToWindowsServer
argument_list|()
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"When not having WindowServer access, we lose focus."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|firstchild
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|reparent
name|void
name|tst_QWidget
operator|::
name|reparent
parameter_list|()
block|{
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|setWindowTitle
argument_list|(
literal|"Toplevel"
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setGeometry
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|,
literal|200
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|child
operator|.
name|setObjectName
argument_list|(
literal|"child"
argument_list|)
expr_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|180
argument_list|,
literal|130
argument_list|)
expr_stmt|;
name|QPalette
name|pal1
decl_stmt|;
name|pal1
operator|.
name|setColor
argument_list|(
name|child
operator|.
name|backgroundRole
argument_list|()
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|pal1
argument_list|)
expr_stmt|;
name|QWidget
name|childTLW
argument_list|(
operator|&
name|child
argument_list|,
name|Qt
operator|::
name|Window
argument_list|)
decl_stmt|;
name|childTLW
operator|.
name|setObjectName
argument_list|(
literal|"childTLW"
argument_list|)
expr_stmt|;
name|childTLW
operator|.
name|setGeometry
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QPalette
name|pal2
decl_stmt|;
name|pal2
operator|.
name|setColor
argument_list|(
name|childTLW
operator|.
name|backgroundRole
argument_list|()
argument_list|,
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|childTLW
operator|.
name|setPalette
argument_list|(
name|pal2
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|childTLW
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|parent
operator|.
name|move
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
else|#
directive|else
name|parent
operator|.
name|move
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QPoint
name|childPos
init|=
name|parent
operator|.
name|mapToGlobal
argument_list|(
name|child
operator|.
name|pos
argument_list|()
argument_list|)
decl_stmt|;
name|QPoint
name|tlwPos
init|=
name|childTLW
operator|.
name|pos
argument_list|()
decl_stmt|;
name|child
operator|.
name|setParent
argument_list|(
literal|0
argument_list|,
name|child
operator|.
name|windowFlags
argument_list|()
operator|&
operator|~
name|Qt
operator|::
name|WindowType_Mask
argument_list|)
expr_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
name|childPos
operator|.
name|x
argument_list|()
argument_list|,
name|childPos
operator|.
name|y
argument_list|()
argument_list|,
name|child
operator|.
name|width
argument_list|()
argument_list|,
name|child
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
comment|// On X11, the window manager will apply NorthWestGravity rules to 'child', which
comment|// means the top-left corner of the window frame will be placed at 'childPos',
comment|// causing this test to fail
else|#
directive|else
name|QCOMPARE
argument_list|(
name|child
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|,
name|childPos
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|childTLW
operator|.
name|pos
argument_list|()
argument_list|,
name|tlwPos
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_WIN
name|QWidget
name|childTLWChild
argument_list|(
operator|&
name|childTLW
argument_list|)
decl_stmt|;
name|childTLWChild
operator|.
name|setObjectName
argument_list|(
literal|"childTLWChild"
argument_list|)
expr_stmt|;
name|QWidget
name|grandChild
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|grandChild
operator|.
name|setObjectName
argument_list|(
literal|"grandChild"
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|160
argument_list|,
literal|110
argument_list|)
expr_stmt|;
name|QPalette
name|pal3
decl_stmt|;
name|pal3
operator|.
name|setColor
argument_list|(
name|grandChild
operator|.
name|backgroundRole
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|setPalette
argument_list|(
name|pal3
argument_list|)
expr_stmt|;
comment|//grandChild.setPaletteBackgroundColor(Qt::red);
name|QWidget
name|grandChildTLW
argument_list|(
operator|&
name|grandChild
argument_list|,
name|Qt
operator|::
name|Window
argument_list|)
decl_stmt|;
name|grandChildTLW
operator|.
name|setObjectName
argument_list|(
literal|"grandChildTLW"
argument_list|)
expr_stmt|;
name|grandChildTLW
operator|.
name|setGeometry
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QPalette
name|pal4
decl_stmt|;
name|pal4
operator|.
name|setColor
argument_list|(
name|grandChildTLW
operator|.
name|backgroundRole
argument_list|()
argument_list|,
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|grandChildTLW
operator|.
name|setPalette
argument_list|(
name|pal4
argument_list|)
expr_stmt|;
comment|//grandChildTLW.setPaletteBackgroundColor(Qt::yellow);
name|QWidget
name|grandChildTLWChild
argument_list|(
operator|&
name|grandChildTLW
argument_list|)
decl_stmt|;
name|grandChildTLWChild
operator|.
name|setObjectName
argument_list|(
literal|"grandChildTLWChild"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|childTLW
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|childTLWChild
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|grandChildTLW
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|grandChildTLWChild
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|childTLW
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|childTLWChild
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|grandChildTLW
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|grandChildTLWChild
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
name|child
operator|.
name|move
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// this appears to stabelize results
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|childTLW
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|childTLWChild
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|grandChildTLW
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|IsWindow
argument_list|(
name|grandChildTLWChild
operator|.
name|winId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|QSKIP
argument_list|(
literal|"This test makes only sense on Windows"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|icon
name|void
name|tst_QWidget
operator|::
name|icon
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
name|QSKIP
argument_list|(
literal|"Qt/Embedded does it differently"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
else|#
directive|else
name|QPixmap
name|p
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|p
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWindowIcon
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|windowIcon
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|windowIcon
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|windowIcon
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|windowIcon
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|hideWhenFocusWidgetIsChild
name|void
name|tst_QWidget
operator|::
name|hideWhenFocusWidgetIsChild
parameter_list|()
block|{
name|testWidget
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|QWidget
modifier|*
name|parentWidget
init|=
operator|new
name|QWidget
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|parentWidget
operator|->
name|setObjectName
argument_list|(
literal|"parentWidget"
argument_list|)
expr_stmt|;
name|parentWidget
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
argument_list|(
name|parentWidget
argument_list|)
decl_stmt|;
name|edit
operator|->
name|setObjectName
argument_list|(
literal|"edit1"
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|edit3
init|=
operator|new
name|QLineEdit
argument_list|(
name|parentWidget
argument_list|)
decl_stmt|;
name|edit3
operator|->
name|setObjectName
argument_list|(
literal|"edit3"
argument_list|)
expr_stmt|;
name|edit3
operator|->
name|move
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|parentWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QLineEdit
modifier|*
name|edit2
init|=
operator|new
name|QLineEdit
argument_list|(
name|testWidget
argument_list|)
decl_stmt|;
name|edit2
operator|->
name|setObjectName
argument_list|(
literal|"edit2"
argument_list|)
expr_stmt|;
name|edit2
operator|->
name|show
argument_list|()
expr_stmt|;
name|edit2
operator|->
name|move
argument_list|(
literal|110
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|edit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QString
name|actualFocusWidget
decl_stmt|,
name|expectedFocusWidget
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
if|if
condition|(
operator|!
name|qApp
operator|->
name|focusWidget
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"Your window manager is too broken for this test"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|)
expr_stmt|;
name|actualFocusWidget
operator|.
name|sprintf
argument_list|(
literal|"%p %s %s"
argument_list|,
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|qApp
operator|->
name|focusWidget
argument_list|()
operator|->
name|objectName
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|qApp
operator|->
name|focusWidget
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
expr_stmt|;
name|expectedFocusWidget
operator|.
name|sprintf
argument_list|(
literal|"%p %s %s"
argument_list|,
name|edit
argument_list|,
name|edit
operator|->
name|objectName
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|edit
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualFocusWidget
argument_list|,
name|expectedFocusWidget
argument_list|)
expr_stmt|;
name|parentWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|actualFocusWidget
operator|.
name|sprintf
argument_list|(
literal|"%p %s %s"
argument_list|,
name|qApp
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|qApp
operator|->
name|focusWidget
argument_list|()
operator|->
name|objectName
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|qApp
operator|->
name|focusWidget
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
expr_stmt|;
name|expectedFocusWidget
operator|.
name|sprintf
argument_list|(
literal|"%p %s %s"
argument_list|,
name|edit2
argument_list|,
name|edit2
operator|->
name|objectName
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|edit2
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualFocusWidget
argument_list|,
name|expectedFocusWidget
argument_list|)
expr_stmt|;
operator|delete
name|edit2
expr_stmt|;
operator|delete
name|parentWidget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|normalGeometry
name|void
name|tst_QWidget
operator|::
name|normalGeometry
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QSKIP
argument_list|(
literal|"4DWM issues on IRIX makes this test fail"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|setWindowTitle
argument_list|(
literal|"NormalGeometry parent"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|parent
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|normalGeometry
argument_list|()
argument_list|,
name|QRect
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setGeometry
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QRect
name|geom
init|=
name|parent
operator|.
name|geometry
argument_list|()
decl_stmt|;
comment|// ### the window manager places the top-left corner at
comment|// ### 100,100... making geom something like 102,124 (offset by
comment|// ### the frame/frame)... this indicates a rather large different
comment|// ### between how X11 and Windows works
comment|// QCOMPARE(geom, QRect(100, 100, 200, 200));
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
operator|!=
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
operator|!=
name|geom
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
operator|(
name|Qt
operator|::
name|WindowMinimized
operator||
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
comment|// ### when minimized and maximized at the same time, the geometry
comment|// ### does *NOT* have to be the normal geometry, it could be the
comment|// ### maximized geometry.
comment|// QCOMPARE(parent.geometry(), geom);
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMinimized
operator|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
operator|!=
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
operator|!=
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
operator|!=
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|parent
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|parent
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowMinimized
operator||
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|normalGeometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGeometry
name|void
name|tst_QWidget
operator|::
name|setGeometry
parameter_list|()
block|{
name|QWidget
name|tlw
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|tlw
argument_list|)
decl_stmt|;
name|QRect
name|tr
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|QRect
name|cr
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|tlw
operator|.
name|setGeometry
argument_list|(
name|tr
argument_list|)
expr_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|tlw
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tlw
operator|.
name|geometry
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|tr
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|geometry
argument_list|()
argument_list|,
name|cr
argument_list|)
expr_stmt|;
name|tlw
operator|.
name|setParent
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Window
operator||
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
name|tr
operator|=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|tr
operator|.
name|moveTopLeft
argument_list|(
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|tlw
operator|.
name|setGeometry
argument_list|(
name|tr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tlw
operator|.
name|geometry
argument_list|()
argument_list|,
name|tr
argument_list|)
expr_stmt|;
name|tlw
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
if|if
condition|(
name|tlw
operator|.
name|frameGeometry
argument_list|()
operator|!=
name|tlw
operator|.
name|geometry
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"Your window manager is too broken for this test"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tlw
operator|.
name|geometry
argument_list|()
argument_list|,
name|tr
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowOpacity
name|void
name|tst_QWidget
operator|::
name|windowOpacity
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|QSKIP
argument_list|(
literal|"Windows CE does not support windowOpacity"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QWidget
name|widget
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
comment|// Initial value should be 1.0
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
comment|// children should always return 1.0
name|QCOMPARE
argument_list|(
name|child
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowOpacity
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowOpacity
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowOpacity
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowOpacity
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowOpacity
argument_list|(
literal|2.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowOpacity
argument_list|(
literal|2.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowOpacity
argument_list|(
operator|-
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowOpacity
argument_list|(
operator|-
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|windowOpacity
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|UpdateWidget
class|class
name|UpdateWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|UpdateWidget
name|UpdateWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|reset
argument_list|()
expr_stmt|;
block|}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|e
parameter_list|)
block|{
name|paintedRegion
operator|+=
name|e
operator|->
name|region
argument_list|()
expr_stmt|;
operator|++
name|numPaintEvents
expr_stmt|;
if|if
condition|(
name|resizeInPaintEvent
condition|)
block|{
name|resizeInPaintEvent
operator|=
literal|false
expr_stmt|;
name|resize
argument_list|(
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|event
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QEvent
operator|::
name|ZOrderChange
case|:
operator|++
name|numZOrderChangeEvents
expr_stmt|;
break|break;
case|case
name|QEvent
operator|::
name|UpdateRequest
case|:
operator|++
name|numUpdateRequestEvents
expr_stmt|;
break|break;
case|case
name|QEvent
operator|::
name|ActivationChange
case|:
case|case
name|QEvent
operator|::
name|FocusIn
case|:
case|case
name|QEvent
operator|::
name|FocusOut
case|:
case|case
name|QEvent
operator|::
name|WindowActivate
case|:
case|case
name|QEvent
operator|::
name|WindowDeactivate
case|:
if|if
condition|(
operator|!
name|updateOnActivationChangeAndFocusIn
condition|)
return|return
literal|true
return|;
comment|// Filter out to avoid update() calls in QWidget.
break|break;
default|default:
break|break;
block|}
return|return
name|QWidget
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
name|numPaintEvents
operator|=
literal|0
expr_stmt|;
name|numZOrderChangeEvents
operator|=
literal|0
expr_stmt|;
name|numUpdateRequestEvents
operator|=
literal|0
expr_stmt|;
name|updateOnActivationChangeAndFocusIn
operator|=
literal|false
expr_stmt|;
name|resizeInPaintEvent
operator|=
literal|false
expr_stmt|;
name|paintedRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
block|}
DECL|member|numPaintEvents
name|int
name|numPaintEvents
decl_stmt|;
DECL|member|numZOrderChangeEvents
name|int
name|numZOrderChangeEvents
decl_stmt|;
DECL|member|numUpdateRequestEvents
name|int
name|numUpdateRequestEvents
decl_stmt|;
DECL|member|updateOnActivationChangeAndFocusIn
name|bool
name|updateOnActivationChangeAndFocusIn
decl_stmt|;
DECL|member|resizeInPaintEvent
name|bool
name|resizeInPaintEvent
decl_stmt|;
DECL|member|paintedRegion
name|QRegion
name|paintedRegion
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|lostUpdatesOnHide
name|void
name|tst_QWidget
operator|::
name|lostUpdatesOnHide
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|Q_WS_MAC
name|UpdateWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|raise
name|void
name|tst_QWidget
operator|::
name|raise
parameter_list|()
block|{
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|UpdateWidget
modifier|*
argument_list|>
name|allChildren
decl_stmt|;
name|UpdateWidget
modifier|*
name|child1
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child1
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child1
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child2
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child2
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child2
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child3
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child3
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child3
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child4
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child4
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child4
argument_list|)
expr_stmt|;
name|parent
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
if|if
condition|(
name|child1
operator|->
name|internalWinId
argument_list|()
condition|)
block|{
name|QSKIP
argument_list|(
literal|"Cocoa has no Z-Order for views, we hack it, but it results in paint events."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list1
decl_stmt|;
name|list1
operator|<<
name|child1
operator|<<
name|child2
operator|<<
name|child3
operator|<<
name|child4
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|allChildren
operator|.
name|count
argument_list|()
argument_list|,
name|list1
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedPaintEvents
init|=
name|child
operator|==
name|child4
condition|?
literal|1
else|:
literal|0
decl_stmt|;
if|if
condition|(
name|expectedPaintEvents
operator|==
literal|0
condition|)
block|{
name|QVERIFY
argument_list|(
name|child
operator|->
name|numPaintEvents
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// show() issues multiple paint events on some window managers
name|QTRY_VERIFY
argument_list|(
name|child
operator|->
name|numPaintEvents
operator|>=
name|expectedPaintEvents
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|child2
operator|->
name|raise
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedPaintEvents
init|=
name|child
operator|==
name|child2
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|int
name|expectedZOrderChangeEvents
init|=
name|child
operator|==
name|child2
condition|?
literal|1
else|:
literal|0
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
name|QSKIP
argument_list|(
literal|"Not yet sure why this fails."
argument_list|,
name|SkipSingle
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numPaintEvents
argument_list|,
name|expectedPaintEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
name|expectedZOrderChangeEvents
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list2
decl_stmt|;
name|list2
operator|<<
name|child1
operator|<<
name|child3
operator|<<
name|child4
operator|<<
name|child2
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list2
argument_list|)
expr_stmt|;
comment|// Creates a widget on top of all the children and checks that raising one of
comment|// the children underneath doesn't trigger a repaint on the covering widget.
name|QWidget
name|topLevel
decl_stmt|;
name|parent
operator|->
name|setParent
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|onTop
init|=
operator|new
name|UpdateWidget
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|onTop
operator|->
name|reset
argument_list|()
expr_stmt|;
name|onTop
operator|->
name|resize
argument_list|(
name|topLevel
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|onTop
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|onTop
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|onTop
operator|->
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|onTop
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// Reset all the children.
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|child3
operator|->
name|raise
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|onTop
operator|->
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|onTop
operator|->
name|numZOrderChangeEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list3
decl_stmt|;
name|list3
operator|<<
name|child1
operator|<<
name|child4
operator|<<
name|child2
operator|<<
name|child3
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list3
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedPaintEvents
init|=
literal|0
decl_stmt|;
name|int
name|expectedZOrderChangeEvents
init|=
name|child
operator|==
name|child3
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numPaintEvents
argument_list|,
name|expectedPaintEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
name|expectedZOrderChangeEvents
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|lower
name|void
name|tst_QWidget
operator|::
name|lower
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
name|QSKIP
argument_list|(
literal|"Cocoa has no Z-Order for views, we hack it, but it results in paint events."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|UpdateWidget
modifier|*
argument_list|>
name|allChildren
decl_stmt|;
name|UpdateWidget
modifier|*
name|child1
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child1
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child1
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child2
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child2
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child2
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child3
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child3
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child3
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child4
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child4
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child4
argument_list|)
expr_stmt|;
name|parent
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list1
decl_stmt|;
name|list1
operator|<<
name|child1
operator|<<
name|child2
operator|<<
name|child3
operator|<<
name|child4
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|allChildren
operator|.
name|count
argument_list|()
argument_list|,
name|list1
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedPaintEvents
init|=
name|child
operator|==
name|child4
condition|?
literal|1
else|:
literal|0
decl_stmt|;
if|if
condition|(
name|expectedPaintEvents
operator|==
literal|0
condition|)
block|{
name|QVERIFY
argument_list|(
name|child
operator|->
name|numPaintEvents
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// show() issues multiple paint events on some window managers
name|QTRY_VERIFY
argument_list|(
name|child
operator|->
name|numPaintEvents
operator|>=
name|expectedPaintEvents
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|child4
operator|->
name|lower
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedPaintEvents
init|=
name|child
operator|==
name|child3
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|int
name|expectedZOrderChangeEvents
init|=
name|child
operator|==
name|child4
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
name|expectedZOrderChangeEvents
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numPaintEvents
argument_list|,
name|expectedPaintEvents
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list2
decl_stmt|;
name|list2
operator|<<
name|child4
operator|<<
name|child1
operator|<<
name|child2
operator|<<
name|child3
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list2
argument_list|)
expr_stmt|;
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stackUnder
name|void
name|tst_QWidget
operator|::
name|stackUnder
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
name|QSKIP
argument_list|(
literal|"Cocoa has no Z-Order for views, we hack it, but it results in paint events."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|UpdateWidget
modifier|*
argument_list|>
name|allChildren
decl_stmt|;
name|UpdateWidget
modifier|*
name|child1
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child1
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child1
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child2
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child2
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child2
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child3
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child3
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child3
argument_list|)
expr_stmt|;
name|UpdateWidget
modifier|*
name|child4
init|=
operator|new
name|UpdateWidget
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|child4
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|allChildren
operator|.
name|append
argument_list|(
name|child4
argument_list|)
expr_stmt|;
name|parent
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|//glib workaround
endif|#
directive|endif
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list1
decl_stmt|;
name|list1
operator|<<
name|child1
operator|<<
name|child2
operator|<<
name|child3
operator|<<
name|child4
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list1
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedPaintEvents
init|=
name|child
operator|==
name|child4
condition|?
literal|1
else|:
literal|0
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
if|if
condition|(
name|expectedPaintEvents
operator|==
literal|1
operator|&&
name|child
operator|->
name|numPaintEvents
operator|==
literal|2
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|0
argument_list|,
literal|"Mac and Windows issues double repaints for Z-Order change"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numPaintEvents
argument_list|,
name|expectedPaintEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|child4
operator|->
name|stackUnder
argument_list|(
name|child2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list2
decl_stmt|;
name|list2
operator|<<
name|child1
operator|<<
name|child4
operator|<<
name|child2
operator|<<
name|child3
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list2
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedPaintEvents
init|=
name|child
operator|==
name|child3
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|int
name|expectedZOrderChangeEvents
init|=
name|child
operator|==
name|child4
condition|?
literal|1
else|:
literal|0
decl_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numPaintEvents
argument_list|,
name|expectedPaintEvents
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
name|expectedZOrderChangeEvents
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
name|child1
operator|->
name|stackUnder
argument_list|(
name|child3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|list3
decl_stmt|;
name|list3
operator|<<
name|child4
operator|<<
name|child2
operator|<<
name|child1
operator|<<
name|child3
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|->
name|children
argument_list|()
operator|==
name|list3
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|UpdateWidget
modifier|*
name|child
decl|,
name|allChildren
control|)
block|{
name|int
name|expectedZOrderChangeEvents
init|=
name|child
operator|==
name|child1
condition|?
literal|1
else|:
literal|0
decl_stmt|;
if|if
condition|(
name|child
operator|==
name|child3
condition|)
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|Q_WS_MAC
name|QEXPECT_FAIL
argument_list|(
literal|0
argument_list|,
literal|"See QTBUG-493"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|child
operator|->
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|child
operator|->
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QTRY_COMPARE
argument_list|(
name|child
operator|->
name|numZOrderChangeEvents
argument_list|,
name|expectedZOrderChangeEvents
argument_list|)
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
block|}
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawPolygon
name|void
name|drawPolygon
parameter_list|(
name|QPaintDevice
modifier|*
name|dev
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|dev
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|w
argument_list|,
name|h
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPolygon
name|a
decl_stmt|;
name|a
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPoint
argument_list|(
name|w
operator|/
literal|2
argument_list|,
name|h
operator|/
literal|2
argument_list|)
operator|<<
name|QPoint
argument_list|(
name|w
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPoint
argument_list|(
name|w
operator|/
literal|2
argument_list|,
name|h
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|DiagCrossPattern
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPolygon
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ContentsPropagationWidget
class|class
name|ContentsPropagationWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|ContentsPropagationWidget
name|ContentsPropagationWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|QWidget
modifier|*
name|child
init|=
name|this
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|32
condition|;
operator|++
name|i
control|)
block|{
name|child
operator|=
operator|new
name|QWidget
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|child
operator|->
name|setGeometry
argument_list|(
name|i
argument_list|,
name|i
argument_list|,
literal|400
operator|-
name|i
operator|*
literal|2
argument_list|,
literal|400
operator|-
name|i
operator|*
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|setContentsPropagation
name|void
name|setContentsPropagation
parameter_list|(
name|bool
name|enable
parameter_list|)
block|{
foreach|foreach
control|(
name|QObject
modifier|*
name|child
decl|,
name|children
argument_list|()
control|)
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|child
argument_list|)
operator|->
name|setAutoFillBackground
argument_list|(
operator|!
name|enable
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|int
name|w
init|=
name|width
argument_list|()
decl_stmt|,
name|h
init|=
name|height
argument_list|()
decl_stmt|;
name|drawPolygon
argument_list|(
name|this
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|()
specifier|const
block|{
return|return
name|QSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|testContentsPropagation
name|void
name|tst_QWidget
operator|::
name|testContentsPropagation
parameter_list|()
block|{
name|ContentsPropagationWidget
name|widget
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|widget
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
else|#
directive|else
name|widget
operator|.
name|setFixedSize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|widget
operator|.
name|setContentsPropagation
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QPixmap
name|widgetSnapshot
init|=
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|QPixmap
name|correct
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
decl_stmt|;
name|drawPolygon
argument_list|(
operator|&
name|correct
argument_list|,
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
comment|//correct.save("correct.png", "PNG");
comment|//widgetSnapshot.save("snap1.png", "PNG");
name|QVERIFY
argument_list|(
name|widgetSnapshot
operator|.
name|toImage
argument_list|()
operator|!=
name|correct
operator|.
name|toImage
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setContentsPropagation
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widgetSnapshot
operator|=
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
comment|//widgetSnapshot.save("snap2.png", "PNG");
name|QCOMPARE
argument_list|(
name|widgetSnapshot
argument_list|,
name|correct
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*     Test that saving and restoring window geometry with     saveGeometry() and restoreGeometry() works. */
end_comment
begin_function
DECL|function|saveRestoreGeometry
name|void
name|tst_QWidget
operator|::
name|saveRestoreGeometry
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QSKIP
argument_list|(
literal|"4DWM issues on IRIX makes this test fail"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
specifier|const
name|QPoint
name|position
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
specifier|const
name|QSize
name|size
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|QByteArray
name|savedGeometry
decl_stmt|;
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|move
argument_list|(
name|position
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|position
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|savedGeometry
operator|=
name|widget
operator|.
name|saveGeometry
argument_list|()
expr_stmt|;
block|}
block|{
name|QWidget
name|widget
decl_stmt|;
specifier|const
name|QByteArray
name|empty
decl_stmt|;
specifier|const
name|QByteArray
name|one
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
specifier|const
name|QByteArray
name|two
argument_list|(
literal|"ab"
argument_list|)
decl_stmt|;
specifier|const
name|QByteArray
name|three
argument_list|(
literal|"abc"
argument_list|)
decl_stmt|;
specifier|const
name|QByteArray
name|four
argument_list|(
literal|"abca"
argument_list|)
decl_stmt|;
specifier|const
name|QByteArray
name|garbage
argument_list|(
literal|"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|empty
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|one
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|two
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|three
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|four
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|garbage
argument_list|)
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|savedGeometry
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|position
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|position
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
block|}
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|move
argument_list|(
name|position
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QRect
name|geom
decl_stmt|;
comment|//Restore from Full screen
name|savedGeometry
operator|=
name|widget
operator|.
name|saveGeometry
argument_list|()
expr_stmt|;
name|geom
operator|=
name|widget
operator|.
name|geometry
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|savedGeometry
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
comment|//Restore to full screen
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|savedGeometry
operator|=
name|widget
operator|.
name|saveGeometry
argument_list|()
expr_stmt|;
name|geom
operator|=
name|widget
operator|.
name|geometry
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|400
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|savedGeometry
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowFullScreen
operator|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
comment|//Restore from Maximised
name|widget
operator|.
name|move
argument_list|(
name|position
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|savedGeometry
operator|=
name|widget
operator|.
name|saveGeometry
argument_list|()
expr_stmt|;
name|geom
operator|=
name|widget
operator|.
name|geometry
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
operator|!=
name|geom
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|savedGeometry
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
comment|//Restore to maximised
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|geom
operator|=
name|widget
operator|.
name|geometry
argument_list|()
expr_stmt|;
name|savedGeometry
operator|=
name|widget
operator|.
name|saveGeometry
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|savedGeometry
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|Qt
operator|::
name|WindowMaximized
operator|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|geom
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|restoreVersion1Geometry_data
name|void
name|tst_QWidget
operator|::
name|restoreVersion1Geometry_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"expectedWindowState"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"expectedPosition"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"expectedSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"expectedNormalGeometry"
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|position
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
specifier|const
name|QSize
name|size
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|normalGeometry
argument_list|(
literal|102
argument_list|,
literal|124
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"geometry.dat"
argument_list|)
operator|<<
literal|":geometry.dat"
operator|<<
name|uint
argument_list|(
name|Qt
operator|::
name|WindowNoState
argument_list|)
operator|<<
name|position
operator|<<
name|size
operator|<<
name|normalGeometry
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"geometry-maximized.dat"
argument_list|)
operator|<<
literal|":geometry-maximized.dat"
operator|<<
name|uint
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
operator|<<
name|position
operator|<<
name|size
operator|<<
name|normalGeometry
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"geometry-fullscreen.dat"
argument_list|)
operator|<<
literal|":geometry-fullscreen.dat"
operator|<<
name|uint
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
operator|<<
name|position
operator|<<
name|size
operator|<<
name|normalGeometry
expr_stmt|;
block|}
end_function
begin_comment
comment|/*     Test that the current version of restoreGeometry() can restore geometry     saved width saveGeometry() version 1.0. */
end_comment
begin_function
DECL|function|restoreVersion1Geometry
name|void
name|tst_QWidget
operator|::
name|restoreVersion1Geometry
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QSKIP
argument_list|(
literal|"4DWM issues on IRIX makes this test fail"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|expectedWindowState
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|expectedPosition
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|expectedSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|expectedNormalGeometry
argument_list|)
expr_stmt|;
comment|// WindowActive is uninteresting for this test
specifier|const
name|uint
name|WindowStateMask
init|=
name|Qt
operator|::
name|WindowFullScreen
operator||
name|Qt
operator|::
name|WindowMaximized
operator||
name|Qt
operator|::
name|WindowMinimized
decl_stmt|;
name|QFile
name|f
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|f
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
specifier|const
name|QByteArray
name|savedGeometry
init|=
name|f
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|savedGeometry
operator|.
name|count
argument_list|()
argument_list|,
literal|46
argument_list|)
expr_stmt|;
name|f
operator|.
name|close
argument_list|()
expr_stmt|;
name|QWidget
name|widget
decl_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|restoreGeometry
argument_list|(
name|savedGeometry
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|uint
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator|&
name|WindowStateMask
argument_list|)
argument_list|,
name|expectedWindowState
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectedWindowState
operator|==
name|Qt
operator|::
name|WindowNoState
condition|)
block|{
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|expectedPosition
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|expectedSize
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectedWindowState
operator|==
name|Qt
operator|::
name|WindowNoState
condition|)
block|{
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|expectedPosition
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|expectedSize
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectedWindowState
operator|!=
name|Qt
operator|::
name|WindowNoState
condition|)
block|{
comment|// restoring from maximized or fullscreen, we can only restore to the normal geometry
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|expectedNormalGeometry
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|expectedPosition
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|expectedSize
argument_list|)
expr_stmt|;
block|}
if|#
directive|if
literal|0
comment|// Code for saving a new geometry*.dat files
block|{         QWidget widgetToSave;         widgetToSave.move(expectedPosition);         widgetToSave.resize(expectedSize);         widgetToSave.show();
ifdef|#
directive|ifdef
name|Q_WS_X11
block|qt_x11_wait_for_window_manager(&widget);
endif|#
directive|endif
block|QTest::qWait(500);
comment|// stabilize
block|widgetToSave.setWindowState(Qt::WindowStates(expectedWindowState));         QTest::qWait(500);
comment|// stabilize
block|QByteArray geometryToSave = widgetToSave.saveGeometry();
comment|// Code for saving a new geometry.dat file.
block|f.setFileName(fileName.mid(1));         QVERIFY(f.open(QIODevice::WriteOnly));
comment|// did you forget to 'p4 edit *.dat'? :)
block|f.write(geometryToSave);         f.close();     }
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|widgetAt
name|void
name|tst_QWidget
operator|::
name|widgetAt
parameter_list|()
block|{
name|Q_CHECK_PAINTEVENTS
name|QWidget
modifier|*
name|w1
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
decl_stmt|;
name|w1
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|w1
operator|->
name|setObjectName
argument_list|(
literal|"w1"
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w2
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
operator||
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
decl_stmt|;
name|w2
operator|->
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|w2
operator|->
name|setObjectName
argument_list|(
literal|"w2"
argument_list|)
expr_stmt|;
name|w1
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QWidget
modifier|*
name|wr
decl_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|wr
operator|=
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wr
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"w1"
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|wr
operator|=
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wr
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"w2"
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|->
name|lower
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|wr
operator|=
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|)
argument_list|)
expr_stmt|;
specifier|const
name|bool
name|match
init|=
operator|(
name|wr
operator|->
name|objectName
argument_list|()
operator|==
name|QString
argument_list|(
literal|"w1"
argument_list|)
operator|)
decl_stmt|;
name|w2
operator|->
name|raise
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|match
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|wr
operator|=
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wr
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"w2"
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w3
init|=
operator|new
name|QWidget
argument_list|(
name|w2
argument_list|)
decl_stmt|;
name|w3
operator|->
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|w3
operator|->
name|setObjectName
argument_list|(
literal|"w3"
argument_list|)
expr_stmt|;
name|w3
operator|->
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|wr
operator|=
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wr
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"w3"
argument_list|)
argument_list|)
expr_stmt|;
name|w3
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_TransparentForMouseEvents
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|(
name|wr
operator|=
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|wr
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"w2"
argument_list|)
argument_list|)
expr_stmt|;
name|QRegion
name|rgn
init|=
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|w2
operator|->
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPoint
name|point
init|=
name|w2
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|rgn
operator|-=
name|QRect
argument_list|(
name|point
argument_list|,
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|->
name|setMask
argument_list|(
name|rgn
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Windows CE does only support rectangular regions"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
comment|//See also task 147191
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Symbian/S60 does only support rectangular regions"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
comment|//See also task 147191
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_QPA
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Window mask not implemented on Lighthouse"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|->
name|objectName
argument_list|()
argument_list|,
name|w1
operator|->
name|objectName
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|101
argument_list|,
literal|101
argument_list|)
operator|->
name|objectName
argument_list|()
argument_list|,
name|w2
operator|->
name|objectName
argument_list|()
argument_list|)
expr_stmt|;
name|QBitmap
name|bitmap
argument_list|(
name|w2
operator|->
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|bitmap
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|bitmap
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|color1
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|color0
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPoint
argument_list|(
name|w2
operator|->
name|mapFromGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|w2
operator|->
name|setMask
argument_list|(
name|bitmap
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Windows CE does only support rectangular regions"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
comment|//See also task 147191
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Symbian/S60 does only support rectangular regions"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
comment|//See also task 147191
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_QPA
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Window mask not implemented on Lighthouse"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_VERIFY
argument_list|(
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|==
name|w1
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|QApplication
operator|::
name|widgetAt
argument_list|(
literal|101
argument_list|,
literal|101
argument_list|)
operator|==
name|w2
argument_list|)
expr_stmt|;
operator|delete
name|w2
expr_stmt|;
operator|delete
name|w1
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
end_if
begin_function
DECL|function|getProperty
name|bool
name|getProperty
parameter_list|(
name|Display
modifier|*
name|display
parameter_list|,
name|Window
name|target
parameter_list|,
name|Atom
name|type
parameter_list|,
name|Atom
name|property
parameter_list|,
name|unsigned
name|char
modifier|*
modifier|*
name|data
parameter_list|,
name|unsigned
name|long
modifier|*
name|count
parameter_list|)
block|{
name|Atom
name|atom_return
decl_stmt|;
name|int
name|size
decl_stmt|;
name|unsigned
name|long
name|nitems
decl_stmt|,
name|bytes_left
decl_stmt|;
name|int
name|ret
init|=
name|XGetWindowProperty
argument_list|(
name|display
argument_list|,
name|target
argument_list|,
name|property
argument_list|,
literal|0l
argument_list|,
literal|1l
argument_list|,
literal|false
argument_list|,
name|type
argument_list|,
operator|&
name|atom_return
argument_list|,
operator|&
name|size
argument_list|,
operator|&
name|nitems
argument_list|,
operator|&
name|bytes_left
argument_list|,
name|data
argument_list|)
decl_stmt|;
if|if
condition|(
name|ret
operator|!=
name|Success
operator|||
name|nitems
operator|<
literal|1
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|bytes_left
operator|!=
literal|0
condition|)
block|{
name|XFree
argument_list|(
operator|*
name|data
argument_list|)
expr_stmt|;
name|unsigned
name|long
name|remain
init|=
operator|(
operator|(
name|size
operator|/
literal|8
operator|)
operator|*
name|nitems
operator|)
operator|+
name|bytes_left
decl_stmt|;
name|ret
operator|=
name|XGetWindowProperty
argument_list|(
name|display
argument_list|,
name|target
argument_list|,
name|property
argument_list|,
literal|0l
argument_list|,
name|remain
argument_list|,
literal|false
argument_list|,
name|type
argument_list|,
operator|&
name|atom_return
argument_list|,
operator|&
name|size
argument_list|,
operator|&
name|nitems
argument_list|,
operator|&
name|bytes_left
argument_list|,
name|data
argument_list|)
expr_stmt|;
if|if
condition|(
name|ret
operator|!=
name|Success
condition|)
return|return
literal|false
return|;
block|}
operator|*
name|count
operator|=
name|nitems
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|textPropertyToString
name|QString
name|textPropertyToString
parameter_list|(
name|Display
modifier|*
name|display
parameter_list|,
name|XTextProperty
modifier|&
name|text_prop
parameter_list|)
block|{
name|QString
name|ret
decl_stmt|;
if|if
condition|(
name|text_prop
operator|.
name|value
operator|&&
name|text_prop
operator|.
name|nitems
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|text_prop
operator|.
name|encoding
operator|==
name|XA_STRING
condition|)
block|{
name|ret
operator|=
cast|reinterpret_cast
argument_list|<
name|char
operator|*
argument_list|>
argument_list|(
name|text_prop
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|text_prop
operator|.
name|nitems
operator|=
name|strlen
argument_list|(
cast|reinterpret_cast
argument_list|<
name|char
operator|*
argument_list|>
argument_list|(
name|text_prop
operator|.
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|char
modifier|*
modifier|*
name|list
decl_stmt|;
name|int
name|num
decl_stmt|;
if|if
condition|(
name|XmbTextPropertyToTextList
argument_list|(
name|display
argument_list|,
operator|&
name|text_prop
argument_list|,
operator|&
name|list
argument_list|,
operator|&
name|num
argument_list|)
operator|==
name|Success
operator|&&
name|num
operator|>
literal|0
operator|&&
operator|*
name|list
condition|)
block|{
name|ret
operator|=
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
operator|*
name|list
argument_list|)
expr_stmt|;
name|XFreeStringList
argument_list|(
name|list
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|ret
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_S60
argument_list|)
end_if
begin_comment
comment|// Returns the application's status pane control, if not present returns NULL.
end_comment
begin_function
DECL|function|GetStatusPaneControl
specifier|static
name|CCoeControl
modifier|*
name|GetStatusPaneControl
parameter_list|(
name|TInt
name|aPaneId
parameter_list|)
block|{
specifier|const
name|TUid
name|paneUid
init|=
block|{
name|aPaneId
block|}
decl_stmt|;
name|CEikStatusPane
modifier|*
name|statusPane
init|=
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|StatusPane
argument_list|()
decl_stmt|;
if|if
condition|(
name|statusPane
operator|&&
name|statusPane
operator|->
name|PaneCapabilities
argument_list|(
name|paneUid
argument_list|)
operator|.
name|IsPresent
argument_list|()
condition|)
block|{
name|CCoeControl
modifier|*
name|control
init|=
name|NULL
decl_stmt|;
comment|// ControlL shouldn't leave because the pane is present
name|TRAPD
argument_list|(
name|err
argument_list|,
name|control
operator|=
name|statusPane
operator|->
name|ControlL
argument_list|(
name|paneUid
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|err
operator|!=
name|KErrNone
condition|?
name|NULL
else|:
name|control
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function
begin_comment
comment|// Returns the application's title pane, if not present returns NULL.
end_comment
begin_function
DECL|function|TitlePane
specifier|static
name|CAknTitlePane
modifier|*
name|TitlePane
parameter_list|()
block|{
return|return
cast|static_cast
argument_list|<
name|CAknTitlePane
operator|*
argument_list|>
argument_list|(
name|GetStatusPaneControl
argument_list|(
name|EEikStatusPaneUidTitle
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_comment
comment|// Returns the application's title pane, if not present returns NULL.
end_comment
begin_function
DECL|function|ContextPane
specifier|static
name|CAknContextPane
modifier|*
name|ContextPane
parameter_list|()
block|{
return|return
cast|static_cast
argument_list|<
name|CAknContextPane
operator|*
argument_list|>
argument_list|(
name|GetStatusPaneControl
argument_list|(
name|EEikStatusPaneUidContext
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|visibleWindowTitle
specifier|static
name|QString
name|visibleWindowTitle
parameter_list|(
name|QWidget
modifier|*
name|window
parameter_list|,
name|Qt
operator|::
name|WindowState
name|state
init|=
name|Qt
operator|::
name|WindowNoState
parameter_list|)
block|{
name|QString
name|vTitle
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_WIN
name|Q_UNUSED
argument_list|(
name|state
argument_list|)
expr_stmt|;
specifier|const
name|size_t
name|maxTitleLength
init|=
literal|256
decl_stmt|;
name|wchar_t
name|title
index|[
name|maxTitleLength
index|]
decl_stmt|;
name|GetWindowText
argument_list|(
name|window
operator|->
name|winId
argument_list|()
argument_list|,
name|title
argument_list|,
name|maxTitleLength
argument_list|)
expr_stmt|;
name|vTitle
operator|=
name|QString
operator|::
name|fromWCharArray
argument_list|(
name|title
argument_list|)
expr_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
comment|/*       We can't check what the window manager displays, but we can       check what we tell the window manager to display.  This will       have to do.     */
name|Atom
name|UTF8_STRING
init|=
name|XInternAtom
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
literal|"UTF8_STRING"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Atom
name|_NET_WM_NAME
init|=
name|XInternAtom
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
literal|"_NET_WM_NAME"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Atom
name|_NET_WM_ICON_NAME
init|=
name|XInternAtom
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
literal|"_NET_WM_ICON_NAME"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|uchar
modifier|*
name|data
init|=
literal|0
decl_stmt|;
name|ulong
name|length
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|state
operator|==
name|Qt
operator|::
name|WindowMinimized
condition|)
block|{
if|if
condition|(
name|getProperty
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
name|window
operator|->
name|winId
argument_list|()
argument_list|,
name|UTF8_STRING
argument_list|,
name|_NET_WM_ICON_NAME
argument_list|,
operator|&
name|data
argument_list|,
operator|&
name|length
argument_list|)
condition|)
block|{
name|vTitle
operator|=
name|QString
operator|::
name|fromUtf8
argument_list|(
operator|(
name|char
operator|*
operator|)
name|data
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|XFree
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|XTextProperty
name|text_prop
decl_stmt|;
if|if
condition|(
name|XGetWMIconName
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
name|window
operator|->
name|winId
argument_list|()
argument_list|,
operator|&
name|text_prop
argument_list|)
condition|)
block|{
name|vTitle
operator|=
name|textPropertyToString
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
name|text_prop
argument_list|)
expr_stmt|;
name|XFree
argument_list|(
operator|(
name|char
operator|*
operator|)
name|text_prop
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
if|if
condition|(
name|getProperty
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
name|window
operator|->
name|winId
argument_list|()
argument_list|,
name|UTF8_STRING
argument_list|,
name|_NET_WM_NAME
argument_list|,
operator|&
name|data
argument_list|,
operator|&
name|length
argument_list|)
condition|)
block|{
name|vTitle
operator|=
name|QString
operator|::
name|fromUtf8
argument_list|(
operator|(
name|char
operator|*
operator|)
name|data
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|XFree
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|XTextProperty
name|text_prop
decl_stmt|;
if|if
condition|(
name|XGetWMName
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
name|window
operator|->
name|winId
argument_list|()
argument_list|,
operator|&
name|text_prop
argument_list|)
condition|)
block|{
name|vTitle
operator|=
name|textPropertyToString
argument_list|(
name|window
operator|->
name|x11Info
argument_list|()
operator|.
name|display
argument_list|()
argument_list|,
name|text_prop
argument_list|)
expr_stmt|;
name|XFree
argument_list|(
operator|(
name|char
operator|*
operator|)
name|text_prop
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
name|vTitle
operator|=
name|nativeWindowTitle
argument_list|(
name|window
argument_list|,
name|state
argument_list|)
expr_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
if|if
condition|(
name|qwsServer
condition|)
block|{
specifier|const
name|QWSWindow
modifier|*
name|win
init|=
literal|0
decl_stmt|;
specifier|const
name|QList
argument_list|<
name|QWSWindow
modifier|*
argument_list|>
name|windows
init|=
name|qwsServer
operator|->
name|clientWindows
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|windows
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QWSWindow
modifier|*
name|w
init|=
name|windows
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|w
operator|->
name|winId
argument_list|()
operator|==
name|window
operator|->
name|winId
argument_list|()
condition|)
block|{
name|win
operator|=
name|w
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|win
condition|)
name|vTitle
operator|=
name|win
operator|->
name|caption
argument_list|()
expr_stmt|;
block|}
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_S60
argument_list|)
name|CAknTitlePane
modifier|*
name|titlePane
init|=
name|TitlePane
argument_list|()
decl_stmt|;
if|if
condition|(
name|titlePane
condition|)
block|{
specifier|const
name|TDesC
modifier|*
name|nTitle
init|=
name|titlePane
operator|->
name|Text
argument_list|()
decl_stmt|;
name|vTitle
operator|=
name|QString
operator|::
name|fromUtf16
argument_list|(
name|nTitle
operator|->
name|Ptr
argument_list|()
argument_list|,
name|nTitle
operator|->
name|Length
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
return|return
name|vTitle
return|;
block|}
end_function
begin_function
DECL|function|windowTitle
name|void
name|tst_QWidget
operator|::
name|windowTitle
parameter_list|()
block|{
name|QWidget
name|widget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|winId
argument_list|()
expr_stmt|;
comment|// Make sure the window is created...
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name *"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name *"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name[*]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name[*][*]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name[*][*][*]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name[*][*][*][*]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name[*][*]"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowIconText
name|void
name|tst_QWidget
operator|::
name|windowIconText
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
name|QSKIP
argument_list|(
literal|"Symbian/S60 windows don't have window icon text"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QWidget
name|widget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowIconText
argument_list|(
literal|"Application Minimized"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|0
argument_list|,
literal|"Qt/Embedded/WinCE does not implement showMinimized()"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
comment|//See task 147193 for WinCE
endif|#
directive|endif
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|,
name|Qt
operator|::
name|WindowMinimized
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Minimized"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name[*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowIconText
argument_list|(
literal|"Application Minimized[*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|0
argument_list|,
literal|"Qt/Embedded/WinCE does not implement showMinimized()"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
comment|//See task 147193 for WinCE
endif|#
directive|endif
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|,
name|Qt
operator|::
name|WindowMinimized
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Minimized"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
if|if
condition|(
name|widget
operator|.
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TitleBar_ModifyNotification
argument_list|,
literal|0
argument_list|,
operator|&
name|widget
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name*"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|0
argument_list|,
literal|"Qt/Embedded/WinCE does not implement showMinimized()"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
comment|//See task 147193 for WinCE
endif|#
directive|endif
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|,
name|Qt
operator|::
name|WindowMinimized
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Minimized"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|nativeWindowModified
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|,
name|Qt
operator|::
name|WindowMinimized
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Minimized*"
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|windowModified
name|void
name|tst_QWidget
operator|::
name|windowModified
parameter_list|()
block|{
name|QWidget
name|widget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_WS_MAC
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QWidget::setWindowModified: The window title does not contain a '[*]' placeholder"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|nativeWindowModified
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name[*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
if|if
condition|(
name|widget
operator|.
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TitleBar_ModifyNotification
argument_list|,
literal|0
argument_list|,
operator|&
name|widget
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name*"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application[*] Name[*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application* Name*"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application Name[*][*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application[*][*] Name[*][*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application[*] Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application[*] Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application[*] Name[*][*][*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application* Name[*]*"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowTitle
argument_list|(
literal|"Application[*][*][*] Name[*][*][*]"
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application[*]* Name[*]*"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|visibleWindowTitle
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"Application[*] Name[*]"
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|task110173
name|void
name|tst_QWidget
operator|::
name|task110173
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QPushButton
modifier|*
name|pb1
init|=
operator|new
name|QPushButton
argument_list|(
literal|"click"
argument_list|,
operator|&
name|w
argument_list|)
decl_stmt|;
name|pb1
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|ClickFocus
argument_list|)
expr_stmt|;
name|pb1
operator|->
name|move
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|pb2
init|=
operator|new
name|QPushButton
argument_list|(
literal|"push"
argument_list|,
operator|&
name|w
argument_list|)
decl_stmt|;
name|pb2
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|ClickFocus
argument_list|)
expr_stmt|;
name|pb2
operator|->
name|move
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|w
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|Widget
class|class
name|Widget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|Widget
name|Widget
parameter_list|()
member_init_list|:
name|deleteThis
argument_list|(
literal|false
argument_list|)
block|{
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
block|}
DECL|function|actionEvent
name|void
name|actionEvent
parameter_list|(
name|QActionEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|changeEvent
name|void
name|changeEvent
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|closeEvent
name|void
name|closeEvent
parameter_list|(
name|QCloseEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|hideEvent
name|void
name|hideEvent
parameter_list|(
name|QHideEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|focusOutEvent
name|void
name|focusOutEvent
parameter_list|(
name|QFocusEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|keyPressEvent
name|void
name|keyPressEvent
parameter_list|(
name|QKeyEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|keyReleaseEvent
name|void
name|keyReleaseEvent
parameter_list|(
name|QKeyEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|mouseDoubleClickEvent
name|void
name|mouseDoubleClickEvent
parameter_list|(
name|QMouseEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|mousePressEvent
name|void
name|mousePressEvent
parameter_list|(
name|QMouseEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|mouseReleaseEvent
name|void
name|mouseReleaseEvent
parameter_list|(
name|QMouseEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|mouseMoveEvent
name|void
name|mouseMoveEvent
parameter_list|(
name|QMouseEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|deleteThis
condition|)
operator|delete
name|this
expr_stmt|;
block|}
DECL|member|deleteThis
name|bool
name|deleteThis
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testDeletionInEventHandlers
name|void
name|tst_QWidget
operator|::
name|testDeletionInEventHandlers
parameter_list|()
block|{
comment|// closeEvent
name|QPointer
argument_list|<
name|Widget
argument_list|>
name|w
init|=
operator|new
name|Widget
decl_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|w
operator|->
name|close
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
comment|// focusOut (crashes)
comment|//w = new Widget;
comment|//w->show();
comment|//w->setFocus();
comment|//QVERIFY(qApp->focusWidget() == w);
comment|//w->deleteThis = true;
comment|//w->clearFocus();
comment|//QVERIFY(w == 0);
comment|// key press
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
comment|// key release
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|QTest
operator|::
name|keyRelease
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
comment|// mouse press
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
comment|// mouse release
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
comment|// mouse double click
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
name|w
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
comment|// hide event (crashes)
comment|//w = new Widget;
comment|//w->show();
comment|//w->deleteThis = true;
comment|//w->hide();
comment|//QVERIFY(w == 0);
comment|// action event
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|w
operator|->
name|addAction
argument_list|(
operator|new
name|QAction
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
comment|// change event
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|w
operator|->
name|setMouseTracking
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
name|w
operator|=
operator|new
name|Widget
expr_stmt|;
name|w
operator|->
name|setMouseTracking
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|w
operator|->
name|deleteThis
operator|=
literal|true
expr_stmt|;
name|QMouseEvent
name|me
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|w
argument_list|,
operator|&
name|me
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|==
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_MAC
end_ifdef
begin_comment
comment|/*     Test that retaining and releasing the HIView returned by QWidget::winId()     works even if the widget itself is deleted. */
end_comment
begin_function
DECL|function|retainHIView
name|void
name|tst_QWidget
operator|::
name|retainHIView
parameter_list|()
block|{
comment|// Single window
block|{
specifier|const
name|WidgetViewPair
name|window
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
operator|delete
name|window
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|window
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Child widget
block|{
specifier|const
name|WidgetViewPair
name|parent
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child
init|=
name|createAndRetain
argument_list|(
name|parent
operator|.
name|first
argument_list|)
decl_stmt|;
operator|delete
name|parent
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|parent
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Multiple children
block|{
specifier|const
name|WidgetViewPair
name|parent
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child1
init|=
name|createAndRetain
argument_list|(
name|parent
operator|.
name|first
argument_list|)
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child2
init|=
name|createAndRetain
argument_list|(
name|parent
operator|.
name|first
argument_list|)
decl_stmt|;
operator|delete
name|parent
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|parent
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child1
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child2
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Grandchild widget
block|{
specifier|const
name|WidgetViewPair
name|parent
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child
init|=
name|createAndRetain
argument_list|(
name|parent
operator|.
name|first
argument_list|)
decl_stmt|;
specifier|const
name|WidgetViewPair
name|grandchild
init|=
name|createAndRetain
argument_list|(
name|child
operator|.
name|first
argument_list|)
decl_stmt|;
operator|delete
name|parent
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|parent
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|grandchild
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Reparent child widget
block|{
specifier|const
name|WidgetViewPair
name|parent1
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|parent2
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child
init|=
name|createAndRetain
argument_list|(
name|parent1
operator|.
name|first
argument_list|)
decl_stmt|;
name|child
operator|.
name|first
operator|->
name|setParent
argument_list|(
name|parent2
operator|.
name|first
argument_list|)
expr_stmt|;
operator|delete
name|parent1
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|parent1
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|parent2
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|parent2
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Reparent window
block|{
specifier|const
name|WidgetViewPair
name|window1
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|window2
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child1
init|=
name|createAndRetain
argument_list|(
name|window1
operator|.
name|first
argument_list|)
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child2
init|=
name|createAndRetain
argument_list|(
name|window2
operator|.
name|first
argument_list|)
decl_stmt|;
name|window2
operator|.
name|first
operator|->
name|setParent
argument_list|(
name|window1
operator|.
name|first
argument_list|)
expr_stmt|;
operator|delete
name|window2
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|window2
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child2
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|window1
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|window1
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child1
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Delete child widget
block|{
specifier|const
name|WidgetViewPair
name|parent
init|=
name|createAndRetain
argument_list|()
decl_stmt|;
specifier|const
name|WidgetViewPair
name|child
init|=
name|createAndRetain
argument_list|(
name|parent
operator|.
name|first
argument_list|)
decl_stmt|;
operator|delete
name|child
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|child
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|parent
operator|.
name|first
expr_stmt|;
name|QVERIFY
argument_list|(
name|testAndRelease
argument_list|(
name|parent
operator|.
name|second
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|sheetOpacity
name|void
name|tst_QWidget
operator|::
name|sheetOpacity
parameter_list|()
block|{
name|QWidget
name|tmpWindow
decl_stmt|;
name|QWidget
name|sheet
argument_list|(
operator|&
name|tmpWindow
argument_list|,
name|Qt
operator|::
name|Sheet
argument_list|)
decl_stmt|;
name|tmpWindow
operator|.
name|show
argument_list|()
expr_stmt|;
name|sheet
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|sheet
operator|.
name|windowOpacity
argument_list|()
operator|*
literal|255
argument_list|)
argument_list|,
literal|242
argument_list|)
expr_stmt|;
comment|// 95%
name|sheet
operator|.
name|setParent
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Dialog
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|sheet
operator|.
name|windowOpacity
argument_list|()
operator|*
literal|255
argument_list|)
argument_list|,
literal|255
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MaskedPainter
class|class
name|MaskedPainter
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|member|mask
name|QRect
name|mask
decl_stmt|;
DECL|function|MaskedPainter
name|MaskedPainter
parameter_list|()
member_init_list|:
name|mask
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
block|{
name|setMask
argument_list|(
name|mask
argument_list|)
expr_stmt|;
block|}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|mask
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_comment
comment|/*     Verifies that the entire area inside the mask is painted red. */
end_comment
begin_function
DECL|function|verifyWidgetMask
name|bool
name|verifyWidgetMask
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QRect
name|mask
parameter_list|)
block|{
specifier|const
name|QImage
name|image
init|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|widget
operator|->
name|winId
argument_list|()
argument_list|)
operator|.
name|toImage
argument_list|()
decl_stmt|;
specifier|const
name|QImage
name|masked
init|=
name|image
operator|.
name|copy
argument_list|(
name|mask
argument_list|)
decl_stmt|;
name|QImage
name|red
argument_list|(
name|masked
argument_list|)
decl_stmt|;
name|red
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|masked
operator|==
name|red
operator|)
return|;
block|}
end_function
begin_function
DECL|function|setMask
name|void
name|tst_QWidget
operator|::
name|setMask
parameter_list|()
block|{
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
comment|// get this out of the way.
block|{
name|MaskedPainter
name|w
decl_stmt|;
name|w
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|verifyWidgetMask
argument_list|(
operator|&
name|w
argument_list|,
name|w
operator|.
name|mask
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|MaskedPainter
name|w
decl_stmt|;
name|w
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|w
operator|.
name|windowFlags
argument_list|()
operator||
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QRect
name|mask
init|=
name|w
operator|.
name|mask
decl_stmt|;
name|QVERIFY
argument_list|(
name|verifyWidgetMask
argument_list|(
operator|&
name|w
argument_list|,
name|mask
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|StaticWidget
class|class
name|StaticWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|member|partial
name|bool
name|partial
decl_stmt|;
DECL|member|gotPaintEvent
name|bool
name|gotPaintEvent
decl_stmt|;
DECL|member|paintedRegion
name|QRegion
name|paintedRegion
decl_stmt|;
DECL|function|StaticWidget
name|StaticWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|)
expr_stmt|;
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
comment|// Make sure we have an opaque palette.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
block|}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|e
parameter_list|)
block|{
name|paintedRegion
operator|+=
name|e
operator|->
name|region
argument_list|()
expr_stmt|;
name|gotPaintEvent
operator|=
literal|true
expr_stmt|;
comment|//        qDebug()<< "paint"<< e->region();
comment|// Look for a full update, set partial to false if found.
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|e
operator|->
name|region
argument_list|()
operator|.
name|rects
argument_list|()
control|)
block|{
name|partial
operator|=
operator|(
name|r
operator|!=
name|rect
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|partial
operator|==
literal|false
condition|)
break|break;
block|}
block|}
block|}
class|;
end_class
begin_comment
comment|/*     Test that widget resizes and moves can be done with minimal repaints when WA_StaticContents     and WA_OpaquePaintEvent is set. Test is mac-only for now. */
end_comment
begin_function
DECL|function|optimizedResizeMove
name|void
name|tst_QWidget
operator|::
name|optimizedResizeMove
parameter_list|()
block|{
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|resize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|StaticWidget
name|staticWidget
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
name|staticWidget
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|partial
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
name|staticWidget
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
name|staticWidget
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|partial
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
name|staticWidget
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
name|staticWidget
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|partial
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
name|staticWidget
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|resize
argument_list|(
name|staticWidget
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|partial
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|staticWidget
operator|.
name|move
argument_list|(
name|staticWidget
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|staticWidget
operator|.
name|gotPaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|staticWidget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|optimizedResize_topLevel
name|void
name|tst_QWidget
operator|::
name|optimizedResize_topLevel
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
name|QSKIP
argument_list|(
literal|"We do not yet have static contents support for *top-levels* on this platform"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|StaticWidget
name|topLevel
decl_stmt|;
name|topLevel
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|gotPaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|gotPaintEvent
operator|=
literal|false
expr_stmt|;
name|topLevel
operator|.
name|partial
operator|=
literal|false
expr_stmt|;
name|topLevel
operator|.
name|paintedRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_WS_WIN
name|topLevel
operator|.
name|resize
argument_list|(
name|topLevel
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
comment|// Static contents does not work when programmatically resizing
comment|// top-levels with QWidget::resize. We do some funky stuff in
comment|// setGeometry_sys. However, resizing it with the mouse or with
comment|// a native function call works (it basically has to go through
comment|// WM_RESIZE in QApplication). This is a corner case, though.
comment|// See task 243708
specifier|const
name|QRect
name|frame
init|=
name|topLevel
operator|.
name|frameGeometry
argument_list|()
decl_stmt|;
name|MoveWindow
argument_list|(
name|topLevel
operator|.
name|winId
argument_list|()
argument_list|,
name|frame
operator|.
name|x
argument_list|()
argument_list|,
name|frame
operator|.
name|y
argument_list|()
argument_list|,
name|frame
operator|.
name|width
argument_list|()
operator|+
literal|10
argument_list|,
name|frame
operator|.
name|height
argument_list|()
operator|+
literal|10
argument_list|,
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// Expected update region: New rect - old rect.
name|QRegion
name|expectedUpdateRegion
argument_list|(
name|topLevel
operator|.
name|rect
argument_list|()
argument_list|)
decl_stmt|;
name|expectedUpdateRegion
operator|-=
name|QRect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|topLevel
operator|.
name|size
argument_list|()
operator|-
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|gotPaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|partial
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|expectedUpdateRegion
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SiblingDeleter
class|class
name|SiblingDeleter
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|SiblingDeleter
specifier|inline
name|SiblingDeleter
parameter_list|(
name|QWidget
modifier|*
name|sibling
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|sibling
argument_list|(
name|sibling
argument_list|)
block|{}
DECL|function|~SiblingDeleter
specifier|inline
specifier|virtual
name|~
name|SiblingDeleter
parameter_list|()
block|{
operator|delete
name|sibling
expr_stmt|;
block|}
private|private:
DECL|member|sibling
name|QPointer
argument_list|<
name|QWidget
argument_list|>
name|sibling
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|childDeletesItsSibling
name|void
name|tst_QWidget
operator|::
name|childDeletesItsSibling
parameter_list|()
block|{
name|QWidget
modifier|*
name|commonParent
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QWidget
argument_list|>
name|child
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QWidget
argument_list|>
name|siblingDeleter
init|=
operator|new
name|SiblingDeleter
argument_list|(
name|child
argument_list|,
name|commonParent
argument_list|)
decl_stmt|;
name|child
operator|->
name|setParent
argument_list|(
name|commonParent
argument_list|)
expr_stmt|;
operator|delete
name|commonParent
expr_stmt|;
comment|// don't crash
name|QVERIFY
argument_list|(
operator|!
name|child
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|siblingDeleter
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_QWS
end_ifdef
begin_define
DECL|macro|SET_SAFE_SIZE
define|#
directive|define
name|SET_SAFE_SIZE
parameter_list|(
name|w
parameter_list|)
define|\
value|do { \         QSize safeSize(qt_screen->width() - 250, qt_screen->height() - 250);      \          if (!safeSize.isValid()) \              QSKIP("Screen size too small", SkipAll); \          if (defaultSize.width()> safeSize.width() || defaultSize.height()> safeSize.height()) { \              defaultSize = safeSize; \              w.resize(defaultSize); \              w.setAttribute(Qt::WA_Resized, false); \          } \     } while (false)
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|SET_SAFE_SIZE
define|#
directive|define
name|SET_SAFE_SIZE
parameter_list|(
name|w
parameter_list|)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|setMinimumSize
name|void
name|tst_QWidget
operator|::
name|setMinimumSize
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QSize
name|defaultSize
init|=
name|w
operator|.
name|size
argument_list|()
decl_stmt|;
name|SET_SAFE_SIZE
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMinimumSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMinimumSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMinimumSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|QSKIP
argument_list|(
literal|"Setting a minimum size larger than the desktop does not work"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QSize
name|nonDefaultSize
init|=
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|w
operator|.
name|setMinimumSize
argument_list|(
name|nonDefaultSize
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|height
argument_list|()
operator|>=
name|nonDefaultSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|width
argument_list|()
operator|>=
name|nonDefaultSize
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setMaximumSize
name|void
name|tst_QWidget
operator|::
name|setMaximumSize
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QSize
name|defaultSize
init|=
name|w
operator|.
name|size
argument_list|()
decl_stmt|;
name|SET_SAFE_SIZE
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMinimumSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMinimumSize
argument_list|(
name|defaultSize
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMaximumSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setMaximumSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
literal|0
comment|//we don't enforce maximum size on show, apparently
block|QSize nonDefaultSize = defaultSize - QSize(5,5);     w.setMaximumSize(nonDefaultSize);     w.show();     QTest::qWait(50);     qDebug()<< nonDefaultSize<< w.size();     QVERIFY(w.height()<= nonDefaultSize.height());     QVERIFY(w.width()<= nonDefaultSize.width());
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|setFixedSize
name|void
name|tst_QWidget
operator|::
name|setFixedSize
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QSize
name|defaultSize
init|=
name|w
operator|.
name|size
argument_list|()
decl_stmt|;
name|SET_SAFE_SIZE
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|w
operator|.
name|setFixedSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setFixedSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|minimumSize
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|maximumSize
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setFixedSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|size
argument_list|()
argument_list|,
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|w
operator|.
name|setFixedSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setFixedSize
argument_list|(
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|size
argument_list|()
operator|==
name|defaultSize
operator|+
name|QSize
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ensureCreated
name|void
name|tst_QWidget
operator|::
name|ensureCreated
parameter_list|()
block|{
block|{
name|QWidget
name|widget
decl_stmt|;
name|WId
name|widgetWinId
init|=
name|widget
operator|.
name|winId
argument_list|()
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|widgetWinId
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QWidget
name|window
decl_stmt|;
name|QDialog
name|dialog
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setWindowModality
argument_list|(
name|Qt
operator|::
name|NonModal
argument_list|)
expr_stmt|;
name|WId
name|dialogWinId
init|=
name|dialog
operator|.
name|winId
argument_list|()
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|dialogWinId
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QWidget
name|window
decl_stmt|;
name|QDialog
name|dialog
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setWindowModality
argument_list|(
name|Qt
operator|::
name|WindowModal
argument_list|)
expr_stmt|;
name|WId
name|dialogWinId
init|=
name|dialog
operator|.
name|winId
argument_list|()
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|dialogWinId
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QWidget
name|window
decl_stmt|;
name|QDialog
name|dialog
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setWindowModality
argument_list|(
name|Qt
operator|::
name|ApplicationModal
argument_list|)
expr_stmt|;
name|WId
name|dialogWinId
init|=
name|dialog
operator|.
name|winId
argument_list|()
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|dialogWinId
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dialog
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|WinIdChangeWidget
class|class
name|WinIdChangeWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|WinIdChangeWidget
name|WinIdChangeWidget
parameter_list|(
name|QWidget
modifier|*
name|p
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|p
argument_list|)
block|{      }
protected|protected:
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|WinIdChange
condition|)
block|{
name|m_winIdList
operator|.
name|append
argument_list|(
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
name|QWidget
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
public|public:
DECL|member|m_winIdList
name|QList
argument_list|<
name|WId
argument_list|>
name|m_winIdList
decl_stmt|;
DECL|function|winIdChangeEventCount
name|int
name|winIdChangeEventCount
parameter_list|()
specifier|const
block|{
return|return
name|m_winIdList
operator|.
name|count
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|winIdChangeEvent
name|void
name|tst_QWidget
operator|::
name|winIdChangeEvent
parameter_list|()
block|{
block|{
comment|// Transforming an alien widget into a native widget
name|WinIdChangeWidget
name|widget
decl_stmt|;
specifier|const
name|WId
name|winIdBefore
init|=
name|widget
operator|.
name|internalWinId
argument_list|()
decl_stmt|;
specifier|const
name|WId
name|winIdAfter
init|=
name|widget
operator|.
name|winId
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|winIdBefore
operator|!=
name|winIdAfter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Changing parent of a native widget
comment|// Should cause winId of child to change, on all platforms
name|QWidget
name|parent1
decl_stmt|,
name|parent2
decl_stmt|;
name|WinIdChangeWidget
name|child
argument_list|(
operator|&
name|parent1
argument_list|)
decl_stmt|;
specifier|const
name|WId
name|winIdBefore
init|=
name|child
operator|.
name|winId
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|parent2
argument_list|)
expr_stmt|;
specifier|const
name|WId
name|winIdAfter
init|=
name|child
operator|.
name|internalWinId
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|winIdBefore
operator|!=
name|winIdAfter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// winId is set to zero during reparenting
name|QVERIFY
argument_list|(
literal|0
operator|==
name|child
operator|.
name|m_winIdList
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Changing grandparent of a native widget
comment|// Should cause winId of grandchild to change only on Symbian
name|QWidget
name|grandparent1
decl_stmt|,
name|grandparent2
decl_stmt|;
name|QWidget
name|parent
argument_list|(
operator|&
name|grandparent1
argument_list|)
decl_stmt|;
name|WinIdChangeWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
specifier|const
name|WId
name|winIdBefore
init|=
name|child
operator|.
name|winId
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setParent
argument_list|(
operator|&
name|grandparent2
argument_list|)
expr_stmt|;
specifier|const
name|WId
name|winIdAfter
init|=
name|child
operator|.
name|internalWinId
argument_list|()
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
name|QVERIFY
argument_list|(
name|winIdBefore
operator|!=
name|winIdAfter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|winIdAfter
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
else|#
directive|else
name|QCOMPARE
argument_list|(
name|winIdBefore
argument_list|,
name|winIdAfter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
block|{
comment|// Changing parent of an alien widget
name|QWidget
name|parent1
decl_stmt|,
name|parent2
decl_stmt|;
name|WinIdChangeWidget
name|child
argument_list|(
operator|&
name|parent1
argument_list|)
decl_stmt|;
specifier|const
name|WId
name|winIdBefore
init|=
name|child
operator|.
name|internalWinId
argument_list|()
decl_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|parent2
argument_list|)
expr_stmt|;
specifier|const
name|WId
name|winIdAfter
init|=
name|child
operator|.
name|internalWinId
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|winIdBefore
argument_list|,
name|winIdAfter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Making native child widget into a top-level window
name|QWidget
name|parent
decl_stmt|;
name|WinIdChangeWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|.
name|winId
argument_list|()
expr_stmt|;
specifier|const
name|WId
name|winIdBefore
init|=
name|child
operator|.
name|internalWinId
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
specifier|const
name|Qt
operator|::
name|WindowFlags
name|flags
init|=
name|child
operator|.
name|windowFlags
argument_list|()
decl_stmt|;
name|child
operator|.
name|setWindowFlags
argument_list|(
name|flags
operator||
name|Qt
operator|::
name|Window
argument_list|)
expr_stmt|;
specifier|const
name|WId
name|winIdAfter
init|=
name|child
operator|.
name|internalWinId
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|winIdBefore
operator|!=
name|winIdAfter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|winIdChangeEventCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// winId is set to zero during reparenting
name|QVERIFY
argument_list|(
literal|0
operator|==
name|child
operator|.
name|m_winIdList
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
end_ifdef
begin_function
DECL|function|reparentCausesChildWinIdChange
name|void
name|tst_QWidget
operator|::
name|reparentCausesChildWinIdChange
parameter_list|()
block|{
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w1
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w2
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w3
init|=
operator|new
name|QWidget
decl_stmt|;
name|w1
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|WId
name|winId1
init|=
name|w1
operator|->
name|winId
argument_list|()
decl_stmt|;
name|WId
name|winId2
init|=
name|w2
operator|->
name|winId
argument_list|()
decl_stmt|;
name|WId
name|winId3
init|=
name|w3
operator|->
name|winId
argument_list|()
decl_stmt|;
comment|// reparenting causes winIds of the widget being reparented, and all of its children, to change
name|w1
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w1
operator|->
name|winId
argument_list|()
operator|!=
name|winId1
argument_list|)
expr_stmt|;
name|winId1
operator|=
name|w1
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w1
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w1
operator|->
name|winId
argument_list|()
operator|!=
name|winId1
argument_list|)
expr_stmt|;
name|winId1
operator|=
name|w1
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_else
else|#
directive|else
end_else
begin_function
DECL|function|persistentWinId
name|void
name|tst_QWidget
operator|::
name|persistentWinId
parameter_list|()
block|{
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w1
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w2
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|w3
init|=
operator|new
name|QWidget
decl_stmt|;
name|w1
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|WId
name|winId1
init|=
name|w1
operator|->
name|winId
argument_list|()
decl_stmt|;
name|WId
name|winId2
init|=
name|w2
operator|->
name|winId
argument_list|()
decl_stmt|;
name|WId
name|winId3
init|=
name|w3
operator|->
name|winId
argument_list|()
decl_stmt|;
comment|// reparenting should change the winId of the widget being reparented, but not of its children
name|w1
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w1
operator|->
name|winId
argument_list|()
operator|!=
name|winId1
argument_list|)
expr_stmt|;
name|winId1
operator|=
name|w1
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
argument_list|,
name|winId2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
argument_list|,
name|winId3
argument_list|)
expr_stmt|;
name|w1
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w1
operator|->
name|winId
argument_list|()
operator|!=
name|winId1
argument_list|)
expr_stmt|;
name|winId1
operator|=
name|w1
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
argument_list|,
name|winId2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
argument_list|,
name|winId3
argument_list|)
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
argument_list|,
name|winId3
argument_list|)
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
argument_list|,
name|winId3
argument_list|)
expr_stmt|;
name|w2
operator|->
name|setParent
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|->
name|winId
argument_list|()
operator|!=
name|winId2
argument_list|)
expr_stmt|;
name|winId2
operator|=
name|w2
operator|->
name|winId
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
argument_list|,
name|winId3
argument_list|)
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
name|w3
operator|->
name|setParent
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w3
operator|->
name|winId
argument_list|()
operator|!=
name|winId3
argument_list|)
expr_stmt|;
name|winId3
operator|=
name|w3
operator|->
name|winId
argument_list|()
expr_stmt|;
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_OS_SYMBIAN
end_comment
begin_function
DECL|function|showNativeChild
name|void
name|tst_QWidget
operator|::
name|showNativeChild
parameter_list|()
block|{
name|QWidget
name|topLevel
decl_stmt|;
name|topLevel
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|child
operator|.
name|winId
argument_list|()
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ShowHideEventWidget
class|class
name|ShowHideEventWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|member|numberOfShowEvents
DECL|member|numberOfHideEvents
name|int
name|numberOfShowEvents
decl_stmt|,
name|numberOfHideEvents
decl_stmt|;
DECL|function|ShowHideEventWidget
name|ShowHideEventWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|numberOfShowEvents
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|numberOfHideEvents
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|function|create
name|void
name|create
parameter_list|()
block|{
name|QWidget
operator|::
name|create
argument_list|()
expr_stmt|;
block|}
DECL|function|showEvent
name|void
name|showEvent
parameter_list|(
name|QShowEvent
modifier|*
parameter_list|)
block|{
operator|++
name|numberOfShowEvents
expr_stmt|;
block|}
DECL|function|hideEvent
name|void
name|hideEvent
parameter_list|(
name|QHideEvent
modifier|*
parameter_list|)
block|{
operator|++
name|numberOfHideEvents
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|showHideEvent_data
name|void
name|tst_QWidget
operator|::
name|showHideEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"show"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hide"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"create"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedShowEvents"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedHideEvents"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window: only show"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window: show/hide"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window: show/hide/create"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window: hide/create"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window: only hide"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"window: nothing"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showHideEvent
name|void
name|tst_QWidget
operator|::
name|showHideEvent
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|show
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hide
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|create
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedShowEvents
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedHideEvents
argument_list|)
expr_stmt|;
name|ShowHideEventWidget
name|widget
decl_stmt|;
if|if
condition|(
name|show
condition|)
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
name|hide
condition|)
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|create
operator|&&
operator|!
name|widget
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
condition|)
name|widget
operator|.
name|create
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numberOfShowEvents
argument_list|,
name|expectedShowEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numberOfHideEvents
argument_list|,
name|expectedHideEvents
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|update
name|void
name|tst_QWidget
operator|::
name|update
parameter_list|()
block|{
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// Wait for the initStuff to do it's stuff.
name|Q_CHECK_PAINTEVENTS
name|UpdateWidget
name|w
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|w
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|paintedRegion
argument_list|,
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|UpdateWidget
name|child
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|QPoint
name|childOffset
init|=
name|child
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
comment|// widgets are transparent by default, so both should get repaints
block|{
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|w
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|paintedRegion
argument_list|,
name|child
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|childOffset
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|w
operator|.
name|update
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|w
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|paintedRegion
argument_list|,
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QPalette
name|opaquePalette
init|=
name|child
operator|.
name|palette
argument_list|()
decl_stmt|;
name|opaquePalette
operator|.
name|setColor
argument_list|(
name|child
operator|.
name|backgroundRole
argument_list|()
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|)
expr_stmt|;
comment|// setting an opaque background on the child should prevent paint-events
comment|// for the parent in the child area
block|{
name|child
operator|.
name|setPalette
argument_list|(
name|opaquePalette
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|w
operator|.
name|update
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QRegion
name|expectedVisible
init|=
name|QRegion
argument_list|(
name|w
operator|.
name|rect
argument_list|()
argument_list|)
operator|-
name|child
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|childOffset
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|expectedVisible
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|paintedRegion
argument_list|,
name|expectedVisible
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
if|if
condition|(
name|QApplicationPrivate
operator|::
name|graphics_system_name
operator|!=
name|QLatin1String
argument_list|(
literal|"raster"
argument_list|)
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|0
argument_list|,
literal|"Cocoa compositor says to paint this."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|update
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
comment|// overlapping sibling
name|UpdateWidget
name|sibling
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|sibling
operator|.
name|setGeometry
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|sibling
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sibling
operator|.
name|reset
argument_list|()
expr_stmt|;
specifier|const
name|QPoint
name|siblingOffset
init|=
name|sibling
operator|.
name|mapToParent
argument_list|(
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|sibling
operator|.
name|update
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// child is opaque, sibling transparent
block|{
name|QCOMPARE
argument_list|(
name|sibling
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sibling
operator|.
name|paintedRegion
argument_list|,
name|sibling
operator|.
name|visibleRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
operator|.
name|translated
argument_list|(
name|childOffset
argument_list|)
argument_list|,
name|child
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|childOffset
argument_list|)
operator|&
name|sibling
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|siblingOffset
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|paintedRegion
argument_list|,
name|w
operator|.
name|visibleRegion
argument_list|()
operator|&
name|sibling
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|siblingOffset
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|paintedRegion
argument_list|,
operator|(
name|w
operator|.
name|visibleRegion
argument_list|()
operator|-
name|child
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|childOffset
argument_list|)
operator|)
operator|&
name|sibling
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|siblingOffset
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sibling
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sibling
operator|.
name|setPalette
argument_list|(
name|opaquePalette
argument_list|)
expr_stmt|;
name|sibling
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|sibling
operator|.
name|update
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// child opaque, sibling opaque
block|{
name|QCOMPARE
argument_list|(
name|sibling
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sibling
operator|.
name|paintedRegion
argument_list|,
name|sibling
operator|.
name|visibleRegion
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
if|if
condition|(
name|child
operator|.
name|internalWinId
argument_list|()
condition|)
comment|// child is native
name|QEXPECT_FAIL
argument_list|(
literal|0
argument_list|,
literal|"Cocoa compositor paints child and sibling"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|)
operator|-
name|sibling
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|siblingOffset
operator|-
name|childOffset
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|visibleRegion
argument_list|()
argument_list|,
name|QRegion
argument_list|(
name|w
operator|.
name|rect
argument_list|()
argument_list|)
operator|-
name|child
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|childOffset
argument_list|)
operator|-
name|sibling
operator|.
name|visibleRegion
argument_list|()
operator|.
name|translated
argument_list|(
name|siblingOffset
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|isOpaque
specifier|static
specifier|inline
name|bool
name|isOpaque
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
operator|!
name|widget
condition|)
return|return
literal|false
return|;
return|return
name|qt_widget_private
argument_list|(
name|widget
argument_list|)
operator|->
name|isOpaque
return|;
block|}
end_function
begin_function
DECL|function|isOpaque
name|void
name|tst_QWidget
operator|::
name|isOpaque
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|Q_WS_MAC
name|QWidget
name|w
decl_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|isOpaque
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|QPalette
name|palette
decl_stmt|;
comment|// background color
name|palette
operator|=
name|child
operator|.
name|palette
argument_list|()
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|child
operator|.
name|backgroundRole
argument_list|()
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|child
operator|.
name|backgroundRole
argument_list|()
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
comment|// Qt::WA_OpaquePaintEvent
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
comment|// Qt::WA_NoSystemBackground
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoSystemBackground
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoSystemBackground
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|isOpaque
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoSystemBackground
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoSystemBackground
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|isOpaque
argument_list|(
operator|&
name|w
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QPalette
name|palette
init|=
name|QApplication
operator|::
name|palette
argument_list|()
decl_stmt|;
name|QPalette
name|old
init|=
name|palette
decl_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QWidget
name|widget
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|isOpaque
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setPalette
argument_list|(
name|old
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|::
name|isOpaque
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
name|old
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|)
operator|.
name|alpha
argument_list|()
operator|==
literal|255
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|Q_WS_MAC
end_ifndef
begin_comment
comment|/*     Test that scrolling of a widget invalidates the correct regions */
end_comment
begin_function
DECL|function|scroll
name|void
name|tst_QWidget
operator|::
name|scroll
parameter_list|()
block|{
name|UpdateWidget
name|updateWidget
decl_stmt|;
name|updateWidget
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|updateWidget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|updateWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|updateWidget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|updateWidget
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
block|{
name|updateWidget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|updateWidget
operator|.
name|scroll
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QRegion
name|dirty
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|500
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|490
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|updateWidget
operator|.
name|paintedRegion
argument_list|,
name|dirty
argument_list|)
expr_stmt|;
block|}
block|{
name|updateWidget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|updateWidget
operator|.
name|update
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|updateWidget
operator|.
name|scroll
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QRegion
name|dirty
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|500
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|updateWidget
operator|.
name|paintedRegion
argument_list|,
name|dirty
argument_list|)
expr_stmt|;
block|}
block|{
name|updateWidget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|updateWidget
operator|.
name|update
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|updateWidget
operator|.
name|scroll
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QRegion
name|dirty
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|)
argument_list|)
decl_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|150
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|60
argument_list|,
literal|110
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|50
argument_list|,
literal|100
argument_list|,
literal|60
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|50
argument_list|,
literal|110
argument_list|,
literal|10
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|updateWidget
operator|.
name|paintedRegion
argument_list|,
name|dirty
argument_list|)
expr_stmt|;
block|}
block|{
name|updateWidget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|updateWidget
operator|.
name|update
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|updateWidget
operator|.
name|scroll
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QRegion
name|dirty
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|dirty
operator|+=
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|100
argument_list|,
literal|110
argument_list|,
literal|10
argument_list|,
literal|90
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|updateWidget
operator|.
name|paintedRegion
argument_list|,
name|dirty
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|DestroyedSlotChecker
class|class
name|DestroyedSlotChecker
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|member|wasQWidget
name|bool
name|wasQWidget
decl_stmt|;
DECL|function|DestroyedSlotChecker
name|DestroyedSlotChecker
parameter_list|()
member_init_list|:
name|wasQWidget
argument_list|(
literal|false
argument_list|)
block|{     }
public|public
name|slots
public|:
DECL|function|destroyedSlot
name|void
name|destroyedSlot
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|)
block|{
name|wasQWidget
operator|=
operator|(
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
operator|!=
literal|0
operator|||
name|object
operator|->
name|isWidgetType
argument_list|()
operator|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_comment
comment|/*     Test that qobject_cast<QWidget*> returns 0 in a slot     connected to QObject::destroyed. */
end_comment
begin_function
DECL|function|qobject_castInDestroyedSlot
name|void
name|tst_QWidget
operator|::
name|qobject_castInDestroyedSlot
parameter_list|()
block|{
name|DestroyedSlotChecker
name|checker
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|widget
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
operator|&
name|checker
argument_list|,
name|SLOT
argument_list|(
name|destroyedSlot
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
name|QVERIFY
argument_list|(
name|checker
operator|.
name|wasQWidget
operator|==
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QList<QRect>
argument_list|)
end_macro
begin_function
DECL|function|setWindowGeometry_data
name|void
name|tst_QWidget
operator|::
name|setWindowGeometry_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|>
argument_list|(
literal|"rects"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"windowFlags"
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|>
name|rects
decl_stmt|;
name|rects
operator|<<
operator|(
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|50
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|()
operator|<<
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|50
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|50
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|50
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
operator|)
operator|<<
operator|(
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|50
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|adjusted
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|130
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|100
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
operator|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|windowFlags
decl_stmt|;
name|windowFlags
operator|<<
literal|0
operator|<<
name|Qt
operator|::
name|FramelessWindowHint
ifdef|#
directive|ifdef
name|Q_WS_X11
operator|<<
name|Qt
operator|::
name|X11BypassWindowManagerHint
endif|#
directive|endif
expr_stmt|;
foreach|foreach
control|(
name|QList
argument_list|<
name|QRect
argument_list|>
name|l
decl|,
name|rects
control|)
block|{
name|QRect
name|rect
init|=
name|l
operator|.
name|first
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|int
name|windowFlag
decl|,
name|windowFlags
control|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"%1,%2 %3x%4, flags %5"
argument_list|)
operator|.
name|arg
argument_list|(
name|rect
operator|.
name|x
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|rect
operator|.
name|y
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|rect
operator|.
name|width
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|rect
operator|.
name|height
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|windowFlag
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|)
operator|.
name|toAscii
argument_list|()
argument_list|)
operator|<<
name|l
operator|<<
name|windowFlag
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|setWindowGeometry
name|void
name|tst_QWidget
operator|::
name|setWindowGeometry
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_WS_X11
comment|//Since WindowManager operation are all assync, and we have no way to know if the window
comment|// manager has finished playing with the window geometry, this test can't be reliable.
name|QSKIP
argument_list|(
literal|"Window Manager behaviour are too random for this test"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|,
name|rects
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|windowFlags
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|rects
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
block|{
comment|// test setGeometry() without actually showing the window
name|QWidget
name|widget
decl_stmt|;
if|if
condition|(
name|windowFlags
operator|!=
literal|0
condition|)
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|windowFlags
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// setGeometry() without showing
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
block|}
block|{
comment|// setGeometry() first, then show()
name|QWidget
name|widget
decl_stmt|;
if|if
condition|(
name|windowFlags
operator|!=
literal|0
condition|)
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|windowFlags
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// setGeometry() while shown
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// now hide
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// setGeometry() after hide()
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// show() again, geometry() should still be the same
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// final hide(), again geometry() should be unchanged
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
block|{
comment|// show() first, then setGeometry()
name|QWidget
name|widget
decl_stmt|;
if|if
condition|(
name|windowFlags
operator|!=
literal|0
condition|)
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|windowFlags
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// setGeometry() while shown
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// now hide
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// setGeometry() after hide()
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// show() again, geometry() should still be the same
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
comment|// final hide(), again geometry() should be unchanged
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_function
DECL|function|setGeometry_win
name|void
name|tst_QWidget
operator|::
name|setGeometry_win
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|600
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QRect
name|geom
init|=
name|widget
operator|.
name|normalGeometry
argument_list|()
decl_stmt|;
name|widget
operator|.
name|close
argument_list|()
expr_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
name|geom
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setWindowState
argument_list|(
name|widget
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|RECT
name|rt
decl_stmt|;
operator|::
name|GetWindowRect
argument_list|(
name|widget
operator|.
name|internalWinId
argument_list|()
argument_list|,
operator|&
name|rt
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rt
operator|.
name|left
operator|<=
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rt
operator|.
name|top
operator|<=
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|windowMoveResize_data
name|void
name|tst_QWidget
operator|::
name|windowMoveResize_data
parameter_list|()
block|{
name|setWindowGeometry_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|windowMoveResize
name|void
name|tst_QWidget
operator|::
name|windowMoveResize
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_WS_X11
comment|//Since WindowManager operation are all assync, and we have no way to know if the window
comment|// manager has finished playing with the window geometry, this test can't be reliable.
name|QSKIP
argument_list|(
literal|"Window Manager behaviour are too random for this test"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QSKIP
argument_list|(
literal|"4DWM issues on IRIX makes this test fail"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|QRect
argument_list|>
argument_list|,
name|rects
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|windowFlags
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|rects
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
block|{
comment|// test setGeometry() without actually showing the window
name|QWidget
name|widget
decl_stmt|;
if|if
condition|(
name|windowFlags
operator|!=
literal|0
condition|)
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|windowFlags
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|move
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// move() without showing
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|{
comment|// move() first, then show()
name|QWidget
name|widget
decl_stmt|;
if|if
condition|(
name|windowFlags
operator|!=
literal|0
condition|)
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|windowFlags
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|move
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_MAC_USE_COCOA
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|"130,50 0x0, flags 0"
argument_list|,
literal|"Showing a window with 0x0 size shifts it up."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// move() while shown
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
ifdef|#
directive|ifdef
name|Q_WS_X11
if|if
condition|(
operator|(
name|widget
operator|.
name|width
argument_list|()
operator|==
literal|0
operator|||
name|widget
operator|.
name|height
argument_list|()
operator|==
literal|0
operator|)
operator|&&
name|r
operator|.
name|width
argument_list|()
operator|!=
literal|0
operator|&&
name|r
operator|.
name|height
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|QEXPECT_FAIL
argument_list|(
literal|"130,100 0x200, flags 0"
argument_list|,
literal|"First resize after show of zero-sized gets wrong win_gravity."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"100,50 200x0, flags 0"
argument_list|,
literal|"First resize after show of zero-sized gets wrong win_gravity."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"130,50 0x0, flags 0"
argument_list|,
literal|"First resize after show of zero-sized gets wrong win_gravity."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|widget
operator|.
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|move
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// now hide
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// move() after hide()
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
operator|&&
name|defined
argument_list|(
name|QT_MAC_USE_COCOA
argument_list|)
if|if
condition|(
name|r
operator|.
name|width
argument_list|()
operator|==
literal|0
operator|&&
name|r
operator|.
name|height
argument_list|()
operator|>
literal|0
condition|)
block|{
name|widget
operator|.
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|move
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// show() again, pos() should be the same
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// final hide(), again pos() should be unchanged
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// show() first, then move()
name|QWidget
name|widget
decl_stmt|;
if|if
condition|(
name|windowFlags
operator|!=
literal|0
condition|)
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowFlags
argument_list|(
name|windowFlags
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|widget
operator|.
name|move
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// move() while shown
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|move
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// now hide
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// move() after hide()
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|rects
control|)
block|{
name|widget
operator|.
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
operator|&&
name|defined
argument_list|(
name|QT_MAC_USE_COCOA
argument_list|)
if|if
condition|(
name|r
operator|.
name|width
argument_list|()
operator|==
literal|0
operator|&&
name|r
operator|.
name|height
argument_list|()
operator|>
literal|0
condition|)
block|{
name|widget
operator|.
name|move
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|move
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// show() again, pos() should be the same
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// final hide(), again pos() should be unchanged
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|ColorWidget
class|class
name|ColorWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|ColorWidget
name|ColorWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|,
specifier|const
name|QColor
modifier|&
name|c
init|=
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|,
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
member_init_list|,
name|color
argument_list|(
name|c
argument_list|)
block|{
name|QPalette
name|opaquePalette
init|=
name|palette
argument_list|()
decl_stmt|;
name|opaquePalette
operator|.
name|setColor
argument_list|(
name|backgroundRole
argument_list|()
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|setPalette
argument_list|(
name|opaquePalette
argument_list|)
expr_stmt|;
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|e
parameter_list|)
block|{
name|r
operator|+=
name|e
operator|->
name|region
argument_list|()
expr_stmt|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
name|r
operator|=
name|QRegion
argument_list|()
expr_stmt|;
block|}
DECL|member|color
name|QColor
name|color
decl_stmt|;
DECL|member|r
name|QRegion
name|r
decl_stmt|;
block|}
class|;
end_class
begin_define
DECL|macro|VERIFY_COLOR
define|#
directive|define
name|VERIFY_COLOR
parameter_list|(
name|region
parameter_list|,
name|color
parameter_list|)
value|{                                   \     const QRegion r = QRegion(region);                                  \     for (int i = 0; i< r.rects().size(); ++i) {                        \         const QRect rect = r.rects().at(i);                             \         for (int t = 0; t< 5; t++) {                                   \             const QPixmap pixmap = QPixmap::grabWindow(QDesktopWidget().winId(), \                                                    rect.left(), rect.top(), \                                                    rect.width(), rect.height()); \             QCOMPARE(pixmap.size(), rect.size());                       \             QPixmap expectedPixmap(pixmap);
comment|/* ensure equal formats */
value|\             expectedPixmap.detach(); \             expectedPixmap.fill(color);                                 \             QImage image = pixmap.toImage();                          \             uint alphaCorrection = image.format() == QImage::Format_RGB32 ? 0xff000000 : 0; \             uint firstPixel = image.pixel(0,0) | alphaCorrection;        \             if ( firstPixel != QColor(color).rgb()&& t< 4 )          \             { QTest::qWait(200); continue; }                            \             QCOMPARE(firstPixel, QColor(color).rgb());                  \             QCOMPARE(pixmap, expectedPixmap);                           \             break;                                                      \         }                                                               \     }                                                                   \ }
end_define
begin_function
DECL|function|moveChild_data
name|void
name|tst_QWidget
operator|::
name|moveChild_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"offset"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right"
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"down"
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left"
argument_list|)
operator|<<
name|QPoint
argument_list|(
operator|-
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"up"
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|0
argument_list|,
operator|-
literal|20
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveChild
name|void
name|tst_QWidget
operator|::
name|moveChild
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|ColorWidget
name|parent
decl_stmt|;
comment|// prevent custom styles
name|parent
operator|.
name|setStyle
argument_list|(
operator|new
name|QWindowsStyle
argument_list|)
expr_stmt|;
name|ColorWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_WINCE
name|parent
operator|.
name|setGeometry
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|parent
argument_list|)
operator|.
name|topLeft
argument_list|()
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|parent
operator|.
name|setGeometry
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|child
operator|.
name|setGeometry
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QPoint
name|childOffset
init|=
name|child
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|tlwOffset
init|=
name|parent
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|QTRY_COMPARE
argument_list|(
name|parent
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|parent
operator|.
name|rect
argument_list|()
argument_list|)
operator|-
name|child
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|child
operator|.
name|geometry
argument_list|()
operator|.
name|translated
argument_list|(
name|tlwOffset
argument_list|)
argument_list|,
name|child
operator|.
name|color
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|QRegion
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|)
operator|-
name|child
operator|.
name|geometry
argument_list|()
operator|.
name|translated
argument_list|(
name|tlwOffset
argument_list|)
argument_list|,
name|parent
operator|.
name|color
argument_list|)
expr_stmt|;
name|parent
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// move
specifier|const
name|QRect
name|oldGeometry
init|=
name|child
operator|.
name|geometry
argument_list|()
decl_stmt|;
name|QPoint
name|pos
init|=
name|child
operator|.
name|pos
argument_list|()
operator|+
name|offset
decl_stmt|;
name|child
operator|.
name|move
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|pos
argument_list|,
name|child
operator|.
name|pos
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|oldGeometry
argument_list|)
operator|-
name|child
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
comment|// should be scrolled in backingstore
name|QCOMPARE
argument_list|(
name|child
operator|.
name|r
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|VERIFY_COLOR
argument_list|(
name|child
operator|.
name|geometry
argument_list|()
operator|.
name|translated
argument_list|(
name|tlwOffset
argument_list|)
argument_list|,
name|child
operator|.
name|color
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|QRegion
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|)
operator|-
name|child
operator|.
name|geometry
argument_list|()
operator|.
name|translated
argument_list|(
name|tlwOffset
argument_list|)
argument_list|,
name|parent
operator|.
name|color
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showAndMoveChild
name|void
name|tst_QWidget
operator|::
name|showAndMoveChild
parameter_list|()
block|{
name|QWidget
name|parent
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
decl_stmt|;
comment|// prevent custom styles
name|parent
operator|.
name|setStyle
argument_list|(
operator|new
name|QWindowsStyle
argument_list|)
expr_stmt|;
name|QDesktopWidget
name|desktop
decl_stmt|;
name|QRect
name|desktopDimensions
init|=
name|desktop
operator|.
name|availableGeometry
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|parent
operator|.
name|setGeometry
argument_list|(
name|desktopDimensions
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
specifier|const
name|QPoint
name|tlwOffset
init|=
name|parent
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|.
name|resize
argument_list|(
name|desktopDimensions
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|desktopDimensions
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Ensure that the child is repainted correctly when moved right after show.
comment|// NB! Do NOT processEvents() (or qWait()) in between show() and move().
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|child
operator|.
name|move
argument_list|(
name|desktopDimensions
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|desktopDimensions
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|child
operator|.
name|geometry
argument_list|()
operator|.
name|translated
argument_list|(
name|tlwOffset
argument_list|)
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|VERIFY_COLOR
argument_list|(
name|QRegion
argument_list|(
name|parent
operator|.
name|geometry
argument_list|()
argument_list|)
operator|-
name|child
operator|.
name|geometry
argument_list|()
operator|.
name|translated
argument_list|(
name|tlwOffset
argument_list|)
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|subtractOpaqueSiblings
name|void
name|tst_QWidget
operator|::
name|subtractOpaqueSiblings
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
name|QSKIP
argument_list|(
literal|"Cocoa only has rect granularity."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
else|#
directive|else
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|ColorWidget
modifier|*
name|large
init|=
operator|new
name|ColorWidget
argument_list|(
operator|&
name|w
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
name|large
operator|->
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|ColorWidget
modifier|*
name|medium
init|=
operator|new
name|ColorWidget
argument_list|(
name|large
argument_list|,
name|Qt
operator|::
name|gray
argument_list|)
decl_stmt|;
name|medium
operator|->
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|ColorWidget
modifier|*
name|tall
init|=
operator|new
name|ColorWidget
argument_list|(
operator|&
name|w
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
decl_stmt|;
name|tall
operator|->
name|setGeometry
argument_list|(
literal|100
argument_list|,
literal|30
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|large
operator|->
name|reset
argument_list|()
expr_stmt|;
name|medium
operator|->
name|reset
argument_list|()
expr_stmt|;
name|tall
operator|->
name|reset
argument_list|()
expr_stmt|;
name|medium
operator|->
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// QWidgetPrivate::subtractOpaqueSiblings() should prevent parts of medium
comment|// to be repainted and tall from be repainted at all.
name|QTRY_COMPARE
argument_list|(
name|large
operator|->
name|r
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|tall
operator|->
name|r
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|medium
operator|->
name|r
operator|.
name|translated
argument_list|(
name|medium
operator|->
name|mapTo
argument_list|(
operator|&
name|w
argument_list|,
name|QPoint
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|QRegion
argument_list|(
name|medium
operator|->
name|geometry
argument_list|()
operator|.
name|translated
argument_list|(
name|large
operator|->
name|pos
argument_list|()
argument_list|)
argument_list|)
operator|-
name|tall
operator|->
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|deleteStyle
name|void
name|tst_QWidget
operator|::
name|deleteStyle
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setStyle
argument_list|(
operator|new
name|QWindowsStyle
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
operator|delete
name|widget
operator|.
name|style
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_WIN
end_ifdef
begin_function
DECL|function|getDC
name|void
name|tst_QWidget
operator|::
name|getDC
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|HDC
name|dc
init|=
name|widget
operator|.
name|getDC
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|dc
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|releaseDC
argument_list|(
name|dc
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|TopLevelFocusCheck
class|class
name|TopLevelFocusCheck
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|member|edit
name|QLineEdit
modifier|*
name|edit
decl_stmt|;
DECL|function|TopLevelFocusCheck
name|TopLevelFocusCheck
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|edit
operator|=
operator|new
name|QLineEdit
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|edit
operator|->
name|hide
argument_list|()
expr_stmt|;
name|edit
operator|->
name|installEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|mouseDoubleClickEvent
name|void
name|mouseDoubleClickEvent
parameter_list|(
name|QMouseEvent
modifier|*
comment|/*event*/
parameter_list|)
block|{
name|edit
operator|->
name|show
argument_list|()
expr_stmt|;
name|edit
operator|->
name|setFocus
argument_list|(
name|Qt
operator|::
name|OtherFocusReason
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|}
DECL|function|eventFilter
name|bool
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|obj
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|edit
operator|&&
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|FocusOut
condition|)
block|{
name|edit
operator|->
name|hide
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|multipleToplevelFocusCheck
name|void
name|tst_QWidget
operator|::
name|multipleToplevelFocusCheck
parameter_list|()
block|{
name|TopLevelFocusCheck
name|w1
decl_stmt|;
name|TopLevelFocusCheck
name|w2
decl_stmt|;
name|w1
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|w1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w1
argument_list|)
expr_stmt|;
name|w2
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|w2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|w1
argument_list|)
expr_stmt|;
name|w1
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
operator|&
name|w1
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|w1
operator|.
name|edit
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|w2
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|w2
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|w2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"embedded toplevels take focus anyway"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
operator|&
name|w2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|w2
operator|.
name|edit
argument_list|)
argument_list|)
expr_stmt|;
name|w1
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|w1
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
operator|&
name|w1
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|w1
operator|.
name|edit
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|w2
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|w2
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|w2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setFocus
name|void
name|tst_QWidget
operator|::
name|setFocus
parameter_list|()
block|{
block|{
comment|// move focus to another window
name|testWidget
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
if|if
condition|(
name|testWidget
operator|->
name|focusWidget
argument_list|()
condition|)
name|testWidget
operator|->
name|focusWidget
argument_list|()
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
else|else
name|testWidget
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
comment|// window and children never shown, nobody gets focus
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child1
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
name|child2
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child2
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// window and children show, but window not active, nobody gets focus
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child1
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
name|child2
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child2
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// note: window may be active, but we don't want it to be
name|testWidget
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
if|if
condition|(
name|testWidget
operator|->
name|focusWidget
argument_list|()
condition|)
name|testWidget
operator|->
name|focusWidget
argument_list|()
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
else|else
name|testWidget
operator|->
name|clearFocus
argument_list|()
expr_stmt|;
name|child1
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// window and children show, but window *is* active, children get focus
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child1
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
name|child2
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child2
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
else|#
directive|else
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|child1
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
block|}
block|{
comment|// window shown and active, children created, don't get focus, but get focus when shown
name|QWidget
name|window
decl_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
else|#
directive|else
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QWidget
name|child1
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child1
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
name|child2
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child2
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child1
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|child1
argument_list|)
expr_stmt|;
name|child1
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child1
argument_list|)
expr_stmt|;
name|child2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|&
name|child2
argument_list|)
expr_stmt|;
block|}
block|{
comment|// window shown and active, children created, don't get focus,
comment|// even after setFocus(), hide(), then show()
name|QWidget
name|window
decl_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
else|#
directive|else
name|window
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QWidget
name|child1
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child1
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|QWidget
name|child2
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child2
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child1
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child1
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child2
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|child2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child2
operator|.
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|EventSpy
class|class
name|EventSpy
super|:
specifier|public
name|QObject
block|{
public|public:
DECL|function|EventSpy
name|EventSpy
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QEvent
operator|::
name|Type
name|event
parameter_list|)
member_init_list|:
name|m_widget
argument_list|(
name|widget
argument_list|)
member_init_list|,
name|eventToSpy
argument_list|(
name|event
argument_list|)
member_init_list|,
name|m_count
argument_list|(
literal|0
argument_list|)
block|{
if|if
condition|(
name|m_widget
condition|)
name|m_widget
operator|->
name|installEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|function|widget
name|QWidget
modifier|*
name|widget
parameter_list|()
specifier|const
block|{
return|return
name|m_widget
return|;
block|}
DECL|function|count
name|int
name|count
parameter_list|()
specifier|const
block|{
return|return
name|m_count
return|;
block|}
DECL|function|clear
name|void
name|clear
parameter_list|()
block|{
name|m_count
operator|=
literal|0
expr_stmt|;
block|}
protected|protected:
DECL|function|eventFilter
name|bool
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|eventToSpy
condition|)
operator|++
name|m_count
expr_stmt|;
return|return
name|QObject
operator|::
name|eventFilter
argument_list|(
name|object
argument_list|,
name|event
argument_list|)
return|;
block|}
private|private:
DECL|member|m_widget
name|QWidget
modifier|*
name|m_widget
decl_stmt|;
DECL|member|eventToSpy
name|QEvent
operator|::
name|Type
name|eventToSpy
decl_stmt|;
DECL|member|m_count
name|int
name|m_count
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|setCursor
name|void
name|tst_QWidget
operator|::
name|setCursor
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_NO_CURSOR
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|window
operator|.
name|setCursor
argument_list|(
name|window
operator|.
name|cursor
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// do it again, but with window show()n
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|window
operator|.
name|setCursor
argument_list|(
name|window
operator|.
name|cursor
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|window
operator|.
name|setCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// same thing again, just with window show()n
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|window
operator|.
name|setCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// reparenting child should not cause the WA_SetCursor to become set
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|window2
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|window
operator|.
name|setCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|QCursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|window2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window2
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|window2
operator|.
name|setCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window2
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// again, with windows show()n
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|window2
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|window
operator|.
name|setCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|QCursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|window2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window2
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|window2
operator|.
name|show
argument_list|()
expr_stmt|;
name|window2
operator|.
name|setCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|,
name|window2
operator|.
name|cursor
argument_list|()
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test if CursorChange is sent
block|{
name|QWidget
name|widget
decl_stmt|;
name|EventSpy
name|spy
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|CursorChange
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setCursor
argument_list|(
name|QCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|widget
operator|.
name|unsetCursor
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|setToolTip
name|void
name|tst_QWidget
operator|::
name|setToolTip
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|EventSpy
name|spy
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ToolTipChange
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|toolTip
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setToolTip
argument_list|(
name|QString
argument_list|(
literal|"Hello"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|toolTip
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hello"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setToolTip
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|toolTip
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE_WM
name|QSKIP
argument_list|(
literal|"Mouse over doesn't work on Windows mobile."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
for|for
control|(
name|int
name|pass
init|=
literal|0
init|;
name|pass
operator|<
literal|2
condition|;
operator|++
name|pass
control|)
block|{
name|QWidget
modifier|*
name|popup
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Popup
argument_list|)
decl_stmt|;
name|popup
operator|->
name|resize
argument_list|(
literal|150
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QFrame
modifier|*
name|frame
init|=
operator|new
name|QFrame
argument_list|(
name|popup
argument_list|)
decl_stmt|;
name|frame
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|frame
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Box
operator||
name|QFrame
operator|::
name|Plain
argument_list|)
expr_stmt|;
name|EventSpy
name|spy1
argument_list|(
name|frame
argument_list|,
name|QEvent
operator|::
name|ToolTip
argument_list|)
decl_stmt|;
name|EventSpy
name|spy2
argument_list|(
name|popup
argument_list|,
name|QEvent
operator|::
name|ToolTip
argument_list|)
decl_stmt|;
name|frame
operator|->
name|setMouseTracking
argument_list|(
name|pass
operator|==
literal|0
condition|?
literal|false
else|:
literal|true
argument_list|)
expr_stmt|;
name|frame
operator|->
name|setToolTip
argument_list|(
name|QLatin1String
argument_list|(
literal|"TOOLTIP FRAME"
argument_list|)
argument_list|)
expr_stmt|;
name|popup
operator|->
name|setToolTip
argument_list|(
name|QLatin1String
argument_list|(
literal|"TOOLTIP POPUP"
argument_list|)
argument_list|)
expr_stmt|;
name|popup
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|popup
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseMove
argument_list|(
name|frame
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|900
argument_list|)
expr_stmt|;
comment|// delay is 700
name|QCOMPARE
argument_list|(
name|spy1
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy2
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|pass
operator|==
literal|0
condition|)
name|QTest
operator|::
name|qWait
argument_list|(
literal|2200
argument_list|)
expr_stmt|;
comment|// delay is 2000
name|QTest
operator|::
name|mouseMove
argument_list|(
name|popup
argument_list|)
expr_stmt|;
operator|delete
name|popup
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testWindowIconChangeEventPropagation
name|void
name|tst_QWidget
operator|::
name|testWindowIconChangeEventPropagation
parameter_list|()
block|{
comment|// Create widget hierarchy.
name|QWidget
name|topLevelWidget
decl_stmt|;
name|QWidget
name|topLevelChild
argument_list|(
operator|&
name|topLevelWidget
argument_list|)
decl_stmt|;
name|QDialog
name|dialog
argument_list|(
operator|&
name|topLevelWidget
argument_list|)
decl_stmt|;
name|QWidget
name|dialogChild
argument_list|(
operator|&
name|dialog
argument_list|)
decl_stmt|;
name|QWidgetList
name|widgets
decl_stmt|;
name|widgets
operator|<<
operator|&
name|topLevelWidget
operator|<<
operator|&
name|topLevelChild
operator|<<
operator|&
name|dialog
operator|<<
operator|&
name|dialogChild
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widgets
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// Create spy lists.
name|QList
argument_list|<
name|EventSpy
modifier|*
argument_list|>
name|applicationEventSpies
decl_stmt|;
name|QList
argument_list|<
name|EventSpy
modifier|*
argument_list|>
name|widgetEventSpies
decl_stmt|;
foreach|foreach
control|(
name|QWidget
modifier|*
name|widget
decl|,
name|widgets
control|)
block|{
name|applicationEventSpies
operator|.
name|append
argument_list|(
operator|new
name|EventSpy
argument_list|(
name|widget
argument_list|,
name|QEvent
operator|::
name|ApplicationWindowIconChange
argument_list|)
argument_list|)
expr_stmt|;
name|widgetEventSpies
operator|.
name|append
argument_list|(
operator|new
name|EventSpy
argument_list|(
name|widget
argument_list|,
name|QEvent
operator|::
name|WindowIconChange
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// QApplication::setWindowIcon
specifier|const
name|QIcon
name|windowIcon
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|standardIcon
argument_list|(
name|QStyle
operator|::
name|SP_TitleBarMenuButton
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|setWindowIcon
argument_list|(
name|windowIcon
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|widgets
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
comment|// Check QEvent::ApplicationWindowIconChange
name|EventSpy
modifier|*
name|spy
init|=
name|applicationEventSpies
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
name|spy
operator|->
name|widget
argument_list|()
decl_stmt|;
if|if
condition|(
name|widget
operator|->
name|isWindow
argument_list|()
condition|)
block|{
name|QCOMPARE
argument_list|(
name|spy
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|windowIcon
argument_list|()
argument_list|,
name|windowIcon
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|spy
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|spy
operator|->
name|clear
argument_list|()
expr_stmt|;
comment|// Check QEvent::WindowIconChange
name|spy
operator|=
name|widgetEventSpies
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|spy
operator|->
name|clear
argument_list|()
expr_stmt|;
block|}
comment|// Set icon on a top-level widget.
name|topLevelWidget
operator|.
name|setWindowIcon
argument_list|(
operator|*
operator|new
name|QIcon
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|widgets
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
comment|// Check QEvent::ApplicationWindowIconChange
name|EventSpy
modifier|*
name|spy
init|=
name|applicationEventSpies
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|spy
operator|->
name|clear
argument_list|()
expr_stmt|;
comment|// Check QEvent::WindowIconChange
name|spy
operator|=
name|widgetEventSpies
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
name|spy
operator|->
name|widget
argument_list|()
decl_stmt|;
if|if
condition|(
name|widget
operator|==
operator|&
name|topLevelWidget
condition|)
block|{
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|windowIcon
argument_list|()
argument_list|,
name|QIcon
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|topLevelWidget
operator|.
name|isAncestorOf
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|QCOMPARE
argument_list|(
name|spy
operator|->
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|spy
operator|->
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|spy
operator|->
name|clear
argument_list|()
expr_stmt|;
block|}
comment|// Cleanup.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|widgets
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
operator|delete
name|applicationEventSpies
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
operator|delete
name|widgetEventSpies
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|qApp
operator|->
name|setWindowIcon
argument_list|(
name|QIcon
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_X11
end_ifdef
begin_function
DECL|function|minAndMaxSizeWithX11BypassWindowManagerHint
name|void
name|tst_QWidget
operator|::
name|minAndMaxSizeWithX11BypassWindowManagerHint
parameter_list|()
block|{
comment|// Same size as in QWidget::create_sys().
specifier|const
name|QSize
name|desktopSize
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|size
argument_list|()
decl_stmt|;
specifier|const
name|QSize
name|originalSize
argument_list|(
name|desktopSize
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|desktopSize
operator|.
name|height
argument_list|()
operator|*
literal|4
operator|/
literal|10
argument_list|)
decl_stmt|;
block|{
comment|// Maximum size.
name|QWidget
name|widget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
decl_stmt|;
specifier|const
name|QSize
name|newMaximumSize
init|=
name|widget
operator|.
name|size
argument_list|()
operator|.
name|boundedTo
argument_list|(
name|originalSize
argument_list|)
operator|-
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setMaximumSize
argument_list|(
name|newMaximumSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|newMaximumSize
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|newMaximumSize
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Minimum size.
name|QWidget
name|widget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
decl_stmt|;
specifier|const
name|QSize
name|newMinimumSize
init|=
name|widget
operator|.
name|size
argument_list|()
operator|.
name|expandedTo
argument_list|(
name|originalSize
argument_list|)
operator|+
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setMinimumSize
argument_list|(
name|newMinimumSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|newMinimumSize
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|newMinimumSize
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|ShowHideShowWidget
class|class
name|ShowHideShowWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
DECL|member|state
name|int
name|state
decl_stmt|;
public|public:
DECL|member|gotExpectedMapNotify
name|bool
name|gotExpectedMapNotify
decl_stmt|;
DECL|function|ShowHideShowWidget
name|ShowHideShowWidget
parameter_list|()
member_init_list|:
name|state
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|gotExpectedMapNotify
argument_list|(
literal|false
argument_list|)
block|{
name|startTimer
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
DECL|function|timerEvent
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
parameter_list|)
block|{
switch|switch
condition|(
name|state
operator|++
condition|)
block|{
case|case
literal|0
case|:
name|show
argument_list|()
expr_stmt|;
break|break;
case|case
literal|1
case|:
emit|emit
name|done
argument_list|()
emit|;
break|break;
block|}
block|}
DECL|function|x11Event
name|bool
name|x11Event
parameter_list|(
name|XEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|state
operator|==
literal|1
operator|&&
name|event
operator|->
name|type
operator|==
name|MapNotify
condition|)
name|gotExpectedMapNotify
operator|=
literal|true
expr_stmt|;
return|return
literal|false
return|;
block|}
signals|signals:
name|void
name|done
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|showHideShow
name|void
name|tst_QWidget
operator|::
name|showHideShow
parameter_list|()
block|{
name|ShowHideShowWidget
name|w
decl_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|w
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QEventLoop
name|eventLoop
decl_stmt|;
name|connect
argument_list|(
operator|&
name|w
argument_list|,
name|SIGNAL
argument_list|(
name|done
argument_list|()
argument_list|)
argument_list|,
operator|&
name|eventLoop
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|eventLoop
operator|.
name|exec
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|gotExpectedMapNotify
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clean_qt_x11_enforce_cursor
name|void
name|tst_QWidget
operator|::
name|clean_qt_x11_enforce_cursor
parameter_list|()
block|{
block|{
name|QWidget
name|window
decl_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_SetCursor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCursor
operator|::
name|setPos
argument_list|(
name|window
operator|.
name|geometry
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
block|}
name|QGraphicsScene
name|scene
decl_stmt|;
name|QLineEdit
modifier|*
name|edit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|scene
operator|.
name|addWidget
argument_list|(
name|edit
argument_list|)
expr_stmt|;
comment|// If the test didn't crash, then it passed.
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|EventRecorder
class|class
name|EventRecorder
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|typedef|EventList
typedef|typedef
name|QList
argument_list|<
name|QPair
argument_list|<
name|QWidget
modifier|*
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|>
name|EventList
typedef|;
DECL|function|EventRecorder
name|EventRecorder
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{ }
DECL|function|eventList
name|EventList
name|eventList
parameter_list|()
block|{
return|return
name|events
return|;
block|}
DECL|function|clear
name|void
name|clear
parameter_list|()
block|{
name|events
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|function|eventFilter
name|bool
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
name|QWidget
modifier|*
name|widget
init|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
decl_stmt|;
if|if
condition|(
name|widget
operator|&&
operator|!
name|event
operator|->
name|spontaneous
argument_list|()
condition|)
name|events
operator|.
name|append
argument_list|(
name|qMakePair
argument_list|(
name|widget
argument_list|,
name|event
operator|->
name|type
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
private|private:
DECL|member|events
name|EventList
name|events
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|compatibilityChildInsertedEvents
name|void
name|tst_QWidget
operator|::
name|compatibilityChildInsertedEvents
parameter_list|()
block|{
name|EventRecorder
operator|::
name|EventList
name|expected
decl_stmt|;
name|bool
name|accessibilityEnabled
init|=
literal|false
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_MAC_USE_COCOA
argument_list|)
name|accessibilityEnabled
operator|=
name|AXAPIEnabled
argument_list|()
expr_stmt|;
endif|#
directive|endif
comment|// Move away the cursor; otherwise it might result in an enter event if it's
comment|// inside the widget when the widget is shown.
name|QCursor
operator|::
name|setPos
argument_list|(
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|{
comment|// no children created, not shown
name|QWidget
name|widget
decl_stmt|;
name|EventRecorder
name|spy
decl_stmt|;
name|widget
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|PolishRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Polish
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// no children, shown
name|QWidget
name|widget
decl_stmt|;
name|EventRecorder
name|spy
decl_stmt|;
name|widget
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|WinIdChange
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Polish
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Move
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Resize
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Show
argument_list|)
expr_stmt|;
if|if
condition|(
name|accessibilityEnabled
condition|)
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|AccessibilityPrepare
argument_list|)
expr_stmt|;
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ShowToParent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|PolishRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_MAC_USE_CARBON
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
if|if
condition|(
name|QApplicationPrivate
operator|::
name|graphics_system_name
operator|==
name|QLatin1String
argument_list|(
literal|"raster"
argument_list|)
condition|)
endif|#
directive|endif
comment|// QT_MAC_USE_COCOA
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|UpdateRequest
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// !QT_MAC_USE_CARBON
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 2 children, not shown
name|QWidget
name|widget
decl_stmt|;
name|EventRecorder
name|spy
decl_stmt|;
name|widget
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|QWidget
name|child2
decl_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
ifdef|#
directive|ifdef
name|QT_HAS_QT3SUPPORT
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInsertedRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInserted
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInserted
argument_list|)
endif|#
directive|endif
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|PolishRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Polish
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildPolished
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildPolished
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 2 children, widget shown
name|QWidget
name|widget
decl_stmt|;
name|EventRecorder
name|spy
decl_stmt|;
name|widget
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|QWidget
name|child2
decl_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|WinIdChange
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Polish
argument_list|)
ifdef|#
directive|ifdef
name|QT_HAS_QT3SUPPORT
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInserted
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInserted
argument_list|)
endif|#
directive|endif
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildPolished
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildPolished
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Move
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Resize
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Show
argument_list|)
expr_stmt|;
if|if
condition|(
name|accessibilityEnabled
condition|)
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|AccessibilityPrepare
argument_list|)
expr_stmt|;
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ShowToParent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
ifdef|#
directive|ifdef
name|QT_HAS_QT3SUPPORT
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInsertedRequest
argument_list|)
endif|#
directive|endif
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|PolishRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_MAC_USE_CARBON
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
if|if
condition|(
name|QApplicationPrivate
operator|::
name|graphics_system_name
operator|==
name|QLatin1String
argument_list|(
literal|"raster"
argument_list|)
condition|)
endif|#
directive|endif
comment|// QT_MAC_USE_COCOA
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|UpdateRequest
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// !QT_MAC_USE_CARBON
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 2 children, but one is reparented away, not shown
name|QWidget
name|widget
decl_stmt|;
name|EventRecorder
name|spy
decl_stmt|;
name|widget
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|QWidget
name|child2
decl_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildRemoved
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
ifdef|#
directive|ifdef
name|QT_HAS_QT3SUPPORT
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInsertedRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInserted
argument_list|)
endif|#
directive|endif
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|PolishRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Polish
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildPolished
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 2 children, but one is reparented away, then widget is shown
name|QWidget
name|widget
decl_stmt|;
name|EventRecorder
name|spy
decl_stmt|;
name|widget
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|QWidget
name|child2
decl_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildRemoved
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|WinIdChange
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Polish
argument_list|)
ifdef|#
directive|ifdef
name|QT_HAS_QT3SUPPORT
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInserted
argument_list|)
endif|#
directive|endif
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildPolished
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Move
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Resize
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Show
argument_list|)
expr_stmt|;
if|if
condition|(
name|accessibilityEnabled
condition|)
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|AccessibilityPrepare
argument_list|)
expr_stmt|;
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ShowToParent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventRecorder
operator|::
name|EventList
argument_list|()
ifdef|#
directive|ifdef
name|QT_HAS_QT3SUPPORT
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|ChildInsertedRequest
argument_list|)
endif|#
directive|endif
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|PolishRequest
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_MAC_USE_CARBON
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
if|if
condition|(
name|QApplicationPrivate
operator|::
name|graphics_system_name
operator|==
name|QLatin1String
argument_list|(
literal|"raster"
argument_list|)
condition|)
endif|#
directive|endif
comment|// QT_MAC_USE_COCOA
name|expected
operator|<<
name|qMakePair
argument_list|(
operator|&
name|widget
argument_list|,
name|QEvent
operator|::
name|UpdateRequest
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// !QT_MAC_USE_CARBON
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|RenderWidget
class|class
name|RenderWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|RenderWidget
name|RenderWidget
parameter_list|(
name|QWidget
modifier|*
name|source
parameter_list|)
member_init_list|:
name|source
argument_list|(
name|source
argument_list|)
member_init_list|,
name|ellipse
argument_list|(
literal|false
argument_list|)
block|{}
DECL|function|setEllipseEnabled
name|void
name|setEllipseEnabled
parameter_list|(
name|bool
name|enable
init|=
literal|true
parameter_list|)
block|{
name|ellipse
operator|=
name|enable
expr_stmt|;
name|update
argument_list|()
expr_stmt|;
block|}
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|ellipse
condition|)
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QRegion
name|regionToRender
init|=
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|source
operator|->
name|width
argument_list|()
argument_list|,
name|source
operator|->
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
decl_stmt|;
name|source
operator|->
name|render
argument_list|(
name|this
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|30
argument_list|)
argument_list|,
name|regionToRender
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|source
operator|->
name|render
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
private|private:
DECL|member|source
name|QWidget
modifier|*
name|source
decl_stmt|;
DECL|member|ellipse
name|bool
name|ellipse
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|render
name|void
name|tst_QWidget
operator|::
name|render
parameter_list|()
block|{
return|return;
name|QCalendarWidget
name|source
decl_stmt|;
comment|// disable anti-aliasing to eliminate potential differences when subpixel antialiasing
comment|// is enabled on the screen
name|QFont
name|f
decl_stmt|;
name|f
operator|.
name|setStyleStrategy
argument_list|(
name|QFont
operator|::
name|NoAntialias
argument_list|)
expr_stmt|;
name|source
operator|.
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|source
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|source
argument_list|)
expr_stmt|;
comment|// Render the entire source into target.
name|RenderWidget
name|target
argument_list|(
operator|&
name|source
argument_list|)
decl_stmt|;
name|target
operator|.
name|resize
argument_list|(
name|source
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|target
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QImage
name|sourceImage
init|=
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|source
argument_list|)
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QImage
name|targetImage
init|=
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|target
argument_list|)
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sourceImage
argument_list|,
name|targetImage
argument_list|)
expr_stmt|;
comment|// Fill target.rect() will Qt::red and render
comment|// QRegion(0, 0, source->width(), source->height() / 2, QRegion::Ellipse)
comment|// of source into target with offset (0, 30).
name|target
operator|.
name|setEllipseEnabled
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|sendPostedEvents
argument_list|()
expr_stmt|;
name|targetImage
operator|=
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|target
argument_list|)
operator|.
name|toImage
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sourceImage
operator|!=
name|targetImage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetImage
operator|.
name|pixel
argument_list|(
name|target
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetImage
operator|.
name|pixel
argument_list|(
name|target
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
literal|30
argument_list|)
argument_list|,
name|sourceImage
operator|.
name|pixel
argument_list|(
name|source
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test that a child widget properly fills its background
block|{
name|QWidget
name|window
decl_stmt|;
name|window
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|// prevent custom styles
name|window
operator|.
name|setStyle
argument_list|(
operator|new
name|QWindowsStyle
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child
operator|.
name|resize
argument_list|(
name|window
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|child
argument_list|)
argument_list|,
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|window
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Check that the target offset is correct.
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
comment|// prevent custom styles
name|widget
operator|.
name|setStyle
argument_list|(
operator|new
name|QWindowsStyle
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
comment|// Target offset (0, 0)
name|widget
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|,
name|QPoint
argument_list|()
argument_list|,
name|QRect
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|99
argument_list|,
literal|99
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
comment|// Target offset (20, 20).
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|,
name|QPoint
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|QRect
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|19
argument_list|,
literal|19
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|119
argument_list|,
literal|119
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// On Windows the active palette is used instead of the inactive palette even
end_comment
begin_comment
comment|// though the widget is invisible. This is probably related to task 178507/168682,
end_comment
begin_comment
comment|// but for the renderInvisible test it doesn't matter, we're mostly interested
end_comment
begin_comment
comment|// in testing the geometry so just workaround the palette issue for now.
end_comment
begin_function
DECL|function|workaroundPaletteIssue
specifier|static
name|void
name|workaroundPaletteIssue
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
ifndef|#
directive|ifndef
name|Q_WS_WIN
return|return;
endif|#
directive|endif
if|if
condition|(
operator|!
name|widget
condition|)
return|return;
name|QWidget
modifier|*
name|navigationBar
init|=
name|qFindChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|,
name|QLatin1String
argument_list|(
literal|"qt_calendar_navigationbar"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|navigationBar
argument_list|)
expr_stmt|;
name|QPalette
name|palette
init|=
name|navigationBar
operator|->
name|palette
argument_list|()
decl_stmt|;
specifier|const
name|QColor
name|background
init|=
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|navigationBar
operator|->
name|backgroundRole
argument_list|()
argument_list|)
decl_stmt|;
specifier|const
name|QColor
name|highlightedText
init|=
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Inactive
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|)
decl_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|navigationBar
operator|->
name|backgroundRole
argument_list|()
argument_list|,
name|background
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Active
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|highlightedText
argument_list|)
expr_stmt|;
name|navigationBar
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//#define RENDER_DEBUG
end_comment
begin_function
DECL|function|renderInvisible
name|void
name|tst_QWidget
operator|::
name|renderInvisible
parameter_list|()
block|{
name|QCalendarWidget
modifier|*
name|calendar
init|=
operator|new
name|QCalendarWidget
decl_stmt|;
comment|// disable anti-aliasing to eliminate potential differences when subpixel antialiasing
comment|// is enabled on the screen
name|QFont
name|f
decl_stmt|;
name|f
operator|.
name|setStyleStrategy
argument_list|(
name|QFont
operator|::
name|NoAntialias
argument_list|)
expr_stmt|;
name|calendar
operator|->
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|calendar
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|calendar
argument_list|)
expr_stmt|;
comment|// Create a dummy focus widget to get rid of focus rect in reference image.
name|QLineEdit
name|dummyFocusWidget
decl_stmt|;
name|dummyFocusWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|dummyFocusWidget
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|120
argument_list|)
expr_stmt|;
comment|// Create normal reference image.
specifier|const
name|QSize
name|calendarSize
init|=
name|calendar
operator|->
name|size
argument_list|()
decl_stmt|;
name|QImage
name|referenceImage
argument_list|(
name|calendarSize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|render
argument_list|(
operator|&
name|referenceImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|referenceImage
operator|.
name|save
argument_list|(
literal|"referenceImage.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
operator|!
name|referenceImage
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// Create resized reference image.
specifier|const
name|QSize
name|calendarSizeResized
init|=
name|calendar
operator|->
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|resize
argument_list|(
name|calendarSizeResized
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QImage
name|referenceImageResized
argument_list|(
name|calendarSizeResized
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|render
argument_list|(
operator|&
name|referenceImageResized
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|referenceImageResized
operator|.
name|save
argument_list|(
literal|"referenceImageResized.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
operator|!
name|referenceImageResized
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// Explicitly hide the calendar.
name|calendar
operator|->
name|hide
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|workaroundPaletteIssue
argument_list|(
name|calendar
argument_list|)
expr_stmt|;
block|{
comment|// Make sure we get the same image when the calendar is explicitly hidden.
name|QImage
name|testImage
argument_list|(
name|calendarSizeResized
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"explicitlyHiddenCalendarResized.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testImage
argument_list|,
name|referenceImageResized
argument_list|)
expr_stmt|;
block|}
comment|// Now that we have reference images we can delete the source and re-create
comment|// the calendar and check that we get the same images from a calendar which has never
comment|// been visible, laid out or created (Qt::WA_WState_Created).
operator|delete
name|calendar
expr_stmt|;
name|calendar
operator|=
operator|new
name|QCalendarWidget
expr_stmt|;
name|calendar
operator|->
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|workaroundPaletteIssue
argument_list|(
name|calendar
argument_list|)
expr_stmt|;
block|{
comment|// Never been visible, created or laid out.
name|QImage
name|testImage
argument_list|(
name|calendarSize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"neverBeenVisibleCreatedOrLaidOut.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testImage
argument_list|,
name|referenceImage
argument_list|)
expr_stmt|;
block|}
name|calendar
operator|->
name|hide
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
block|{
comment|// Calendar explicitly hidden.
name|QImage
name|testImage
argument_list|(
name|calendarSize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"explicitlyHiddenCalendar.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testImage
argument_list|,
name|referenceImage
argument_list|)
expr_stmt|;
block|}
comment|// Get navigation bar and explicitly hide it.
name|QWidget
modifier|*
name|navigationBar
init|=
name|qFindChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|calendar
argument_list|,
name|QLatin1String
argument_list|(
literal|"qt_calendar_navigationbar"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|navigationBar
argument_list|)
expr_stmt|;
name|navigationBar
operator|->
name|hide
argument_list|()
expr_stmt|;
block|{
comment|// Check that the navigation bar isn't drawn when rendering the entire calendar.
name|QImage
name|testImage
argument_list|(
name|calendarSize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"calendarWithoutNavigationBar.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
name|testImage
operator|!=
name|referenceImage
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Make sure the navigation bar renders correctly even though it's hidden.
name|QImage
name|testImage
argument_list|(
name|navigationBar
operator|->
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|navigationBar
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"explicitlyHiddenNavigationBar.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testImage
argument_list|,
name|referenceImage
operator|.
name|copy
argument_list|(
name|navigationBar
operator|->
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Get next month button.
name|QWidget
modifier|*
name|nextMonthButton
init|=
name|qFindChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|navigationBar
argument_list|,
name|QLatin1String
argument_list|(
literal|"qt_calendar_nextmonth"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|nextMonthButton
argument_list|)
expr_stmt|;
block|{
comment|// Render next month button.
comment|// Fill test image with correct background color.
name|QImage
name|testImage
argument_list|(
name|nextMonthButton
operator|->
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|navigationBar
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|,
name|QPoint
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|,
name|QWidget
operator|::
name|RenderFlags
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"nextMonthButtonBackground.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Set the button's background color to Qt::transparent; otherwise it will fill the
comment|// background with QPalette::Window.
specifier|const
name|QPalette
name|originalPalette
init|=
name|nextMonthButton
operator|->
name|palette
argument_list|()
decl_stmt|;
name|QPalette
name|palette
init|=
name|originalPalette
decl_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|nextMonthButton
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
comment|// Render the button on top of the background.
name|nextMonthButton
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"nextMonthButton.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
specifier|const
name|QRect
name|buttonRect
argument_list|(
name|nextMonthButton
operator|->
name|mapTo
argument_list|(
name|calendar
argument_list|,
name|QPoint
argument_list|()
argument_list|)
argument_list|,
name|nextMonthButton
operator|->
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|testImage
argument_list|,
name|referenceImage
operator|.
name|copy
argument_list|(
name|buttonRect
argument_list|)
argument_list|)
expr_stmt|;
comment|// Restore palette.
name|nextMonthButton
operator|->
name|setPalette
argument_list|(
name|originalPalette
argument_list|)
expr_stmt|;
block|}
comment|// Navigation bar isn't explicitly hidden anymore.
name|navigationBar
operator|->
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|calendar
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now, completely mess up the layout. This will trigger an update on the layout
comment|// when the calendar is visible or shown, but it's not. QWidget::render must therefore
comment|// make sure the layout is activated before rendering.
name|QVERIFY
argument_list|(
operator|!
name|calendar
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|calendar
operator|->
name|resize
argument_list|(
name|calendarSizeResized
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|{
comment|// Make sure we get an image equal to the resized reference image.
name|QImage
name|testImage
argument_list|(
name|calendarSizeResized
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|calendar
operator|->
name|render
argument_list|(
operator|&
name|testImage
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|testImage
operator|.
name|save
argument_list|(
literal|"calendarResized.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testImage
argument_list|,
name|referenceImageResized
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Make sure we lay out the widget correctly the first time it's rendered.
name|QCalendarWidget
name|calendar
decl_stmt|;
specifier|const
name|QSize
name|calendarSize
init|=
name|calendar
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QImage
name|image
argument_list|(
literal|2
operator|*
name|calendarSize
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|calendar
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|calendarSize
operator|.
name|height
argument_list|()
init|;
name|i
operator|<
literal|2
operator|*
name|calendarSize
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
for|for
control|(
name|int
name|j
init|=
name|calendarSize
operator|.
name|width
argument_list|()
init|;
name|j
operator|<
literal|2
operator|*
name|calendarSize
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Ensure that we don't call adjustSize() on invisible top-levels if render() is called
comment|// right after widgets have been added/removed to/from its layout.
name|QWidget
name|topLevel
decl_stmt|;
name|topLevel
operator|.
name|setLayout
argument_list|(
operator|new
name|QVBoxLayout
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|topLevel
operator|.
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
specifier|const
name|QSize
name|initialSize
init|=
name|topLevel
operator|.
name|size
argument_list|()
decl_stmt|;
name|QPixmap
name|pixmap
argument_list|(
name|topLevel
operator|.
name|sizeHint
argument_list|()
argument_list|)
decl_stmt|;
name|topLevel
operator|.
name|render
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
comment|// triggers adjustSize()
specifier|const
name|QSize
name|finalSize
init|=
name|topLevel
operator|.
name|size
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|finalSize
operator|!=
name|initialSize
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|layout
argument_list|()
operator|->
name|removeWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|size
argument_list|()
argument_list|,
name|finalSize
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|render
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|size
argument_list|()
argument_list|,
name|finalSize
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|size
argument_list|()
argument_list|,
name|finalSize
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|render
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|size
argument_list|()
argument_list|,
name|finalSize
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|renderWithPainter
name|void
name|tst_QWidget
operator|::
name|renderWithPainter
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
comment|// prevent custom styles
name|widget
operator|.
name|setStyle
argument_list|(
operator|new
name|QWindowsStyle
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|70
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
comment|// Render the entire widget onto the image.
name|QImage
name|image
argument_list|(
name|QSize
argument_list|(
literal|70
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Translate painter (10, 10).
name|painter
operator|.
name|save
argument_list|()
expr_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
name|painter
operator|.
name|restore
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|i
operator|<
literal|10
operator|||
name|j
operator|<
literal|10
condition|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Pass target offset (10, 10) (the same as QPainter::translate).
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|i
operator|<
literal|10
operator|||
name|j
operator|<
literal|10
condition|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Translate (10, 10) and pass target offset (10, 10).
name|painter
operator|.
name|save
argument_list|()
expr_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|.
name|restore
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|i
operator|<
literal|20
operator|||
name|j
operator|<
literal|20
condition|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Rotate painter 90 degrees.
name|painter
operator|.
name|save
argument_list|()
expr_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
name|painter
operator|.
name|restore
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Translate and rotate.
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|40
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|painter
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|painter
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|i
operator|>=
literal|10
operator|&&
name|j
operator|>=
literal|0
operator|&&
name|j
operator|<
literal|10
condition|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Make sure QWidget::render does not modify the render hints set on the painter.
name|painter
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|Antialiasing
operator||
name|QPainter
operator|::
name|SmoothPixmapTransform
operator||
name|QPainter
operator|::
name|NonCosmeticDefaultPen
operator||
name|QPainter
operator|::
name|TextAntialiasing
argument_list|)
expr_stmt|;
name|QPainter
operator|::
name|RenderHints
name|oldRenderHints
init|=
name|painter
operator|.
name|renderHints
argument_list|()
decl_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|renderHints
argument_list|()
argument_list|,
name|oldRenderHints
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|render_task188133
name|void
name|tst_QWidget
operator|::
name|render_task188133
parameter_list|()
block|{
name|QMainWindow
name|mainWindow
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|QT3_SUPPORT
argument_list|)
name|mainWindow
operator|.
name|setCentralWidget
argument_list|(
operator|new
name|Q3TextEdit
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Make sure QWidget::render does not trigger QWidget::repaint/update
comment|// and asserts for Qt::WA_WState_Created.
name|QPixmap
name|pixmap
init|=
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|mainWindow
argument_list|)
decl_stmt|;
block|}
end_function
begin_function
DECL|function|render_task211796
name|void
name|tst_QWidget
operator|::
name|render_task211796
parameter_list|()
block|{
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
parameter_list|)
block|{
name|QPixmap
name|pixmap
argument_list|(
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|render
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
block|}
block|}
class|;
block|{
comment|// Please don't die in a resize recursion.
name|MyWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
block|{
comment|// Same check with a deeper hierarchy.
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|MyWidget
name|grandChild
decl_stmt|;
name|grandChild
operator|.
name|setParent
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|render_task217815
name|void
name|tst_QWidget
operator|::
name|render_task217815
parameter_list|()
block|{
comment|// Make sure we don't change the size of the widget when calling
comment|// render() and the widget has an explicit size set.
comment|// This was a problem on Windows because we called createWinId(),
comment|// which in turn enforced the size to be bigger than the smallest
comment|// possible native window size (which is (115,something) on WinXP).
name|QWidget
name|widget
decl_stmt|;
specifier|const
name|QSize
name|explicitSize
argument_list|(
literal|80
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|explicitSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|explicitSize
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
name|explicitSize
argument_list|)
decl_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|explicitSize
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|render_windowOpacity
name|void
name|tst_QWidget
operator|::
name|render_windowOpacity
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|QSKIP
argument_list|(
literal|"Window Opacity is not supported on Windows CE"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
specifier|const
name|qreal
name|opacity
init|=
literal|0.5
decl_stmt|;
block|{
comment|// Check that the painter opacity effects the widget drawing.
name|QWidget
name|topLevel
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|child
operator|.
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QPixmap
name|expected
argument_list|(
name|child
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
if|if
condition|(
name|expected
operator|.
name|depth
argument_list|()
operator|<
literal|24
condition|)
block|{
name|QSKIP
argument_list|(
literal|"This test won't give correct results with dithered pixmaps"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|expected
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|expected
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|child
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmap
name|result
argument_list|(
name|child
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|painter
operator|.
name|begin
argument_list|(
operator|&
name|result
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|child
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Combine the opacity set on the painter with the widget opacity.
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|opacity
argument_list|()
argument_list|,
name|opacity
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
block|}
name|qreal
name|opacity
decl_stmt|;
block|}
class|;
name|MyWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|widget
operator|.
name|opacity
operator|=
name|opacity
expr_stmt|;
name|widget
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QPixmap
name|expected
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|expected
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|pixmap
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QPainter
name|pixmapPainter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|pixmapPainter
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|pixmapPainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|widget
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPixmap
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QPixmap
name|result
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|result
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|painter
operator|.
name|begin
argument_list|(
operator|&
name|result
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setOpacity
argument_list|(
name|opacity
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|render_systemClip
name|void
name|tst_QWidget
operator|::
name|render_systemClip
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPaintEngine
modifier|*
name|paintEngine
init|=
name|image
operator|.
name|paintEngine
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|paintEngine
argument_list|)
expr_stmt|;
name|paintEngine
operator|->
name|setSystemClip
argument_list|(
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
comment|// Make sure we're using the same paint engine and has the right clip set.
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|paintEngine
argument_list|()
argument_list|,
name|paintEngine
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|paintEngine
operator|->
name|systemClip
argument_list|()
argument_list|,
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
comment|// Translate painter outside system clip.
name|painter
operator|.
name|translate
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|image
operator|.
name|save
argument_list|(
literal|"outside_systemclip.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// All pixels should be red.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Restore painter and refill image with red.
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|.
name|translate
argument_list|(
operator|-
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Set transform on the painter.
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|shear
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|image
operator|.
name|save
argument_list|(
literal|"blue_triangle.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// We should now have a blue triangle starting at scan line 1, and the rest should be red.
comment|// rrrrrrrrrr
comment|// brrrrrrrrr
comment|// bbrrrrrrrr
comment|// bbbrrrrrrr
comment|// bbbbrrrrrr
comment|// rrrrrrrrrr
comment|// ...
ifndef|#
directive|ifndef
name|Q_WS_MAC
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|i
operator|<
literal|50
operator|&&
name|j
operator|<
name|i
condition|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|#
directive|else
comment|// We don't paint directly on the image on the Mac, so we cannot do the pixel comparison
comment|// as above due to QPainter::SmoothPixmapTransform. We therefore need to generate an
comment|// expected image by first painting on a pixmap, and then draw the pixmap onto
comment|// the image using QPainter::SmoothPixmapTransform. Then we can compare pixels :)
comment|// The check is basically the same, except that it takes the smoothening into account.
name|QPixmap
name|pixmap
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
specifier|const
name|QRegion
name|sysClip
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|pixmap
argument_list|,
name|QPoint
argument_list|()
argument_list|,
name|sysClip
argument_list|)
expr_stmt|;
name|QImage
name|expectedImage
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|expectedImage
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|expectedImage
operator|.
name|paintEngine
argument_list|()
operator|->
name|setSystemClip
argument_list|(
name|sysClip
argument_list|)
expr_stmt|;
name|QPainter
name|expectedImagePainter
argument_list|(
operator|&
name|expectedImage
argument_list|)
decl_stmt|;
name|expectedImagePainter
operator|.
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|shear
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// NB! This is the important part (SmoothPixmapTransform).
name|expectedImagePainter
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|)
expr_stmt|;
name|expectedImagePainter
operator|.
name|drawPixmap
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pixmap
argument_list|)
expr_stmt|;
name|expectedImagePainter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|expectedImage
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|render_systemClip2_data
name|void
name|tst_QWidget
operator|::
name|render_systemClip2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"autoFillBackground"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"usePaintEvent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"expectedColor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Only auto-fill background"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Only draw in paintEvent"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auto-fill background and draw in paintEvent"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|render_systemClip2
name|void
name|tst_QWidget
operator|::
name|render_systemClip2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|autoFillBackground
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|usePaintEvent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|expectedColor
argument_list|)
expr_stmt|;
name|Q_ASSERT_X
argument_list|(
name|expectedColor
operator|!=
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
argument_list|,
name|Q_FUNC_INFO
argument_list|,
literal|"Qt::red is the reference color for the image, pick another color"
argument_list|)
expr_stmt|;
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|bool
name|usePaintEvent
decl_stmt|;
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|usePaintEvent
condition|)
name|QPainter
argument_list|(
name|this
argument_list|)
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
block|}
block|}
class|;
name|MyWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|usePaintEvent
operator|=
name|usePaintEvent
expr_stmt|;
name|widget
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
comment|// NB! widget.setAutoFillBackground(autoFillBackground) won't do the
comment|// trick here since the widget is a top-level. The background is filled
comment|// regardless, unless Qt::WA_OpaquePaintEvent or Qt::WA_NoSystemBackground
comment|// is set. We therefore use the opaque attribute to turn off auto-fill.
if|if
condition|(
operator|!
name|autoFillBackground
condition|)
name|widget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPaintEngine
modifier|*
name|paintEngine
init|=
name|image
operator|.
name|paintEngine
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|paintEngine
argument_list|)
expr_stmt|;
name|QRegion
name|systemClip
argument_list|(
name|QRegion
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|systemClip
operator|+=
name|QRegion
argument_list|(
literal|90
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|paintEngine
operator|->
name|setSystemClip
argument_list|(
name|systemClip
argument_list|)
expr_stmt|;
comment|// Render entire widget directly onto device.
name|widget
operator|.
name|render
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|image
operator|.
name|save
argument_list|(
literal|"systemclip_with_device.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// All pixels within the system clip should now be
comment|// the expectedColor, and the rest should be red.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|systemClip
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|expectedColor
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Refill image with red.
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|paintEngine
operator|->
name|setSystemClip
argument_list|(
name|systemClip
argument_list|)
expr_stmt|;
comment|// Do the same with an untransformed painter.
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
comment|//Make sure we're using the same paint engine and has the right clip set.
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|paintEngine
argument_list|()
argument_list|,
name|paintEngine
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|paintEngine
operator|->
name|systemClip
argument_list|()
argument_list|,
name|systemClip
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|image
operator|.
name|save
argument_list|(
literal|"systemclip_with_untransformed_painter.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// All pixels within the system clip should now be
comment|// the expectedColor, and the rest should be red.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
if|if
condition|(
name|systemClip
operator|.
name|contains
argument_list|(
name|QPoint
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|expectedColor
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|render_systemClip3_data
name|void
name|tst_QWidget
operator|::
name|render_systemClip3_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"useSystemClip"
argument_list|)
expr_stmt|;
comment|// Reference: http://en.wikipedia.org/wiki/Flag_of_Norway
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Norwegian Civil Flag"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|220
argument_list|,
literal|160
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Norwegian War Flag"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|270
argument_list|,
literal|160
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_comment
comment|// This test ensures that the current engine clip (systemClip + painter clip)
end_comment
begin_comment
comment|// is preserved after QPainter::setClipRegion(..., Qt::ReplaceClip);
end_comment
begin_function
DECL|function|render_systemClip3
name|void
name|tst_QWidget
operator|::
name|render_systemClip3
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|useSystemClip
argument_list|)
expr_stmt|;
comment|// Calculate the inner/outer cross of the flag.
name|QRegion
name|outerCross
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|outerCross
operator|-=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|60
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|outerCross
operator|-=
name|QRect
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
operator|-
literal|100
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|outerCross
operator|-=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|60
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|outerCross
operator|-=
name|QRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|size
operator|.
name|width
argument_list|()
operator|-
literal|100
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|QRegion
name|innerCross
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|innerCross
operator|-=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|70
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|innerCross
operator|-=
name|QRect
argument_list|(
literal|90
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
operator|-
literal|90
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|innerCross
operator|-=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|90
argument_list|,
literal|70
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|innerCross
operator|-=
name|QRect
argument_list|(
literal|90
argument_list|,
literal|90
argument_list|,
name|size
operator|.
name|width
argument_list|()
operator|-
literal|90
argument_list|,
literal|70
argument_list|)
expr_stmt|;
specifier|const
name|QRegion
name|redArea
argument_list|(
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
operator|-
name|outerCross
argument_list|)
decl_stmt|;
specifier|const
name|QRegion
name|whiteArea
argument_list|(
name|outerCross
operator|-
name|innerCross
argument_list|)
decl_stmt|;
specifier|const
name|QRegion
name|blueArea
argument_list|(
name|innerCross
argument_list|)
decl_stmt|;
name|QRegion
name|systemClip
decl_stmt|;
comment|// Okay, here's the image that should look like a Norwegian civil/war flag in the end.
name|QImage
name|flag
argument_list|(
name|size
argument_list|,
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
decl_stmt|;
name|flag
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|useSystemClip
condition|)
block|{
name|QPainterPath
name|warClip
argument_list|(
name|QPoint
argument_list|(
name|size
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|warClip
operator|.
name|lineTo
argument_list|(
name|size
operator|.
name|width
argument_list|()
operator|-
literal|110
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|warClip
operator|.
name|lineTo
argument_list|(
name|size
operator|.
name|width
argument_list|()
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|warClip
operator|.
name|lineTo
argument_list|(
name|size
operator|.
name|width
argument_list|()
operator|-
literal|110
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|warClip
operator|.
name|lineTo
argument_list|(
name|size
operator|.
name|width
argument_list|()
argument_list|,
literal|160
argument_list|)
expr_stmt|;
name|warClip
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|systemClip
operator|=
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
operator|-
name|QRegion
argument_list|(
name|warClip
operator|.
name|toFillPolygon
argument_list|()
operator|.
name|toPolygon
argument_list|()
argument_list|)
expr_stmt|;
name|flag
operator|.
name|paintEngine
argument_list|()
operator|->
name|setSystemClip
argument_list|(
name|systemClip
argument_list|)
expr_stmt|;
block|}
name|QPainter
name|painter
argument_list|(
operator|&
name|flag
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|size
argument_list|)
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
comment|// Fill image background with red.
name|painter
operator|.
name|setClipRegion
argument_list|(
name|outerCross
argument_list|)
expr_stmt|;
comment|// Limit widget painting to inside the outer cross.
comment|// Here's the widget that's supposed to draw the inner/outer cross of the flag.
comment|// The outer cross (white) should be drawn when the background is auto-filled, and
comment|// the inner cross (blue) should be drawn in the paintEvent.
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
comment|// Be evil and try to paint outside the outer cross. This should not be
comment|// possible since the shared painter is clipped to the outer cross.
name|painter
operator|.
name|setClipRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|60
argument_list|,
literal|60
argument_list|,
name|Qt
operator|::
name|ReplaceClip
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setClipRegion
argument_list|(
name|clip
argument_list|,
name|Qt
operator|::
name|ReplaceClip
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
block|}
name|QRegion
name|clip
decl_stmt|;
block|}
class|;
name|MyWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|clip
operator|=
name|innerCross
expr_stmt|;
name|widget
operator|.
name|setFixedSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|flag
operator|.
name|save
argument_list|(
literal|"flag.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Let's make sure we got a Norwegian flag.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|flag
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|flag
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
specifier|const
name|QPoint
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
decl_stmt|;
specifier|const
name|QRgb
name|pixelValue
init|=
name|flag
operator|.
name|pixel
argument_list|(
name|pixel
argument_list|)
decl_stmt|;
if|if
condition|(
name|useSystemClip
operator|&&
operator|!
name|systemClip
operator|.
name|contains
argument_list|(
name|pixel
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|pixelValue
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|redArea
operator|.
name|contains
argument_list|(
name|pixel
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|pixelValue
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|whiteArea
operator|.
name|contains
argument_list|(
name|pixel
argument_list|)
condition|)
name|QCOMPARE
argument_list|(
name|pixelValue
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|pixelValue
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|render_task252837
name|void
name|tst_QWidget
operator|::
name|render_task252837
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
comment|// Please do not crash.
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|render_worldTransform
name|void
name|tst_QWidget
operator|::
name|render_worldTransform
parameter_list|()
block|{
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
comment|// Make sure world transform is identity.
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|worldTransform
argument_list|()
argument_list|,
name|QTransform
argument_list|()
argument_list|)
expr_stmt|;
comment|// Make sure device transform is correct.
specifier|const
name|QPoint
name|widgetOffset
init|=
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|QTransform
name|expectedDeviceTransform
init|=
name|QTransform
operator|::
name|fromTranslate
argument_list|(
literal|105
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|expectedDeviceTransform
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|expectedDeviceTransform
operator|.
name|translate
argument_list|(
name|widgetOffset
operator|.
name|x
argument_list|()
argument_list|,
name|widgetOffset
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|deviceTransform
argument_list|()
argument_list|,
name|expectedDeviceTransform
argument_list|)
expr_stmt|;
comment|// Set new world transform.
name|QTransform
name|newWorldTransform
init|=
name|QTransform
operator|::
name|fromTranslate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|newWorldTransform
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setWorldTransform
argument_list|(
name|newWorldTransform
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|worldTransform
argument_list|()
argument_list|,
name|newWorldTransform
argument_list|)
expr_stmt|;
comment|// Again, check device transform.
name|expectedDeviceTransform
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|expectedDeviceTransform
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|deviceTransform
argument_list|()
argument_list|,
name|expectedDeviceTransform
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|)
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
block|}
block|}
class|;
name|MyWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setFixedSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MyWidget
name|child
decl_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|child
operator|.
name|move
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|child
operator|.
name|setFixedSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QImage
name|image
argument_list|(
name|QSize
argument_list|(
literal|110
argument_list|,
literal|110
argument_list|)
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|painter
operator|.
name|translate
argument_list|(
literal|105
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|painter
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
specifier|const
name|QTransform
name|worldTransform
init|=
name|painter
operator|.
name|worldTransform
argument_list|()
decl_stmt|;
specifier|const
name|QTransform
name|deviceTransform
init|=
name|painter
operator|.
name|deviceTransform
argument_list|()
decl_stmt|;
comment|// Render widgets onto image.
name|widget
operator|.
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|image
operator|.
name|save
argument_list|(
literal|"render_worldTransform_image.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Ensure the transforms are unchanged after render.
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|worldTransform
argument_list|()
argument_list|,
name|painter
operator|.
name|worldTransform
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|deviceTransform
argument_list|()
argument_list|,
name|painter
operator|.
name|deviceTransform
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
comment|// Paint expected image.
name|QImage
name|expected
argument_list|(
name|QSize
argument_list|(
literal|110
argument_list|,
literal|110
argument_list|)
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|expected
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|expectedPainter
argument_list|(
operator|&
name|expected
argument_list|)
decl_stmt|;
name|expectedPainter
operator|.
name|translate
argument_list|(
literal|105
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|save
argument_list|()
expr_stmt|;
name|expectedPainter
operator|.
name|fillRect
argument_list|(
name|widget
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|)
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|restore
argument_list|()
expr_stmt|;
name|expectedPainter
operator|.
name|translate
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|fillRect
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|translate
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|)
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|expectedPainter
operator|.
name|end
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|RENDER_DEBUG
name|expected
operator|.
name|save
argument_list|(
literal|"render_worldTransform_expected.png"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|image
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setContentsMargins
name|void
name|tst_QWidget
operator|::
name|setContentsMargins
parameter_list|()
block|{
name|QLabel
name|label
argument_list|(
literal|"why does it always rain on me?"
argument_list|)
decl_stmt|;
name|QSize
name|oldSize
init|=
name|label
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|label
operator|.
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Sunken
operator||
name|QFrame
operator|::
name|Box
argument_list|)
expr_stmt|;
name|QSize
name|newSize
init|=
name|label
operator|.
name|sizeHint
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|oldSize
operator|!=
name|newSize
argument_list|)
expr_stmt|;
name|QLabel
name|label2
argument_list|(
literal|"why does it always rain on me?"
argument_list|)
decl_stmt|;
name|label2
operator|.
name|show
argument_list|()
expr_stmt|;
name|label2
operator|.
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Sunken
operator||
name|QFrame
operator|::
name|Box
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newSize
argument_list|,
name|label2
operator|.
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
name|QLabel
name|label3
argument_list|(
literal|"why does it always rain on me?"
argument_list|)
decl_stmt|;
name|label3
operator|.
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Sunken
operator||
name|QFrame
operator|::
name|Box
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|newSize
argument_list|,
name|label3
operator|.
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveWindowInShowEvent_data
name|void
name|tst_QWidget
operator|::
name|moveWindowInShowEvent_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"initial"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"position"
argument_list|)
expr_stmt|;
name|QPoint
name|p
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1"
argument_list|)
operator|<<
name|p
operator|<<
operator|(
name|p
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2"
argument_list|)
operator|<<
operator|(
name|p
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|)
operator|<<
name|p
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveWindowInShowEvent
name|void
name|tst_QWidget
operator|::
name|moveWindowInShowEvent
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QSKIP
argument_list|(
literal|"4DWM issues on IRIX makes this test fail"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|initial
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|position
argument_list|)
expr_stmt|;
class|class
name|MoveWindowInShowEventWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|QPoint
name|position
decl_stmt|;
name|void
name|showEvent
parameter_list|(
name|QShowEvent
modifier|*
parameter_list|)
block|{
name|move
argument_list|(
name|position
argument_list|)
expr_stmt|;
block|}
block|}
class|;
name|MoveWindowInShowEventWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
name|QSize
argument_list|(
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|size
argument_list|()
operator|/
literal|3
argument_list|)
operator|.
name|expandedTo
argument_list|(
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// move to this position in showEvent()
name|widget
operator|.
name|position
operator|=
name|position
expr_stmt|;
comment|// put the widget in it's starting position
name|widget
operator|.
name|move
argument_list|(
name|initial
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|initial
argument_list|)
expr_stmt|;
comment|// show it
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// it should have moved
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|position
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|repaintWhenChildDeleted
name|void
name|tst_QWidget
operator|::
name|repaintWhenChildDeleted
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_WS_WIN
if|if
condition|(
name|QSysInfo
operator|::
name|WindowsVersion
operator|&
name|QSysInfo
operator|::
name|WV_VISTA
condition|)
block|{
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|ColorWidget
name|w
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_WS_S60
argument_list|)
name|QPoint
name|startPoint
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|w
argument_list|)
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|startPoint
operator|.
name|rx
argument_list|()
operator|+=
literal|50
expr_stmt|;
name|startPoint
operator|.
name|ry
argument_list|()
operator|+=
literal|50
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|QRect
argument_list|(
name|startPoint
argument_list|,
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|w
operator|.
name|setGeometry
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
literal|110
argument_list|,
literal|110
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|w
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|w
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|r
operator|=
name|QRegion
argument_list|()
expr_stmt|;
block|{
specifier|const
name|QPoint
name|tlwOffset
init|=
name|w
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|ColorWidget
name|child
argument_list|(
operator|&
name|w
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
decl_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|r
operator|=
name|QRegion
argument_list|()
expr_stmt|;
block|}
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|w
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// task 175114
end_comment
begin_function
DECL|function|hideOpaqueChildWhileHidden
name|void
name|tst_QWidget
operator|::
name|hideOpaqueChildWhileHidden
parameter_list|()
block|{
name|ColorWidget
name|w
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
decl_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_WS_S60
argument_list|)
name|QPoint
name|startPoint
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|w
argument_list|)
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|startPoint
operator|.
name|rx
argument_list|()
operator|+=
literal|50
expr_stmt|;
name|startPoint
operator|.
name|ry
argument_list|()
operator|+=
literal|50
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|QRect
argument_list|(
name|startPoint
argument_list|,
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|w
operator|.
name|setGeometry
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
literal|110
argument_list|,
literal|110
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|ColorWidget
name|child
argument_list|(
operator|&
name|w
argument_list|,
name|Qt
operator|::
name|blue
argument_list|)
decl_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|ColorWidget
name|child2
argument_list|(
operator|&
name|child
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
decl_stmt|;
name|child2
operator|.
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|60
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child2
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|child2
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|r
operator|=
name|QRegion
argument_list|()
expr_stmt|;
name|child2
operator|.
name|r
operator|=
name|QRegion
argument_list|()
expr_stmt|;
name|w
operator|.
name|r
operator|=
name|QRegion
argument_list|()
expr_stmt|;
name|child
operator|.
name|hide
argument_list|()
expr_stmt|;
name|child2
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|child
operator|.
name|geometry
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|r
argument_list|,
name|QRegion
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|.
name|r
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateWhileMinimized
name|void
name|tst_QWidget
operator|::
name|updateWhileMinimized
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
name|QSKIP
argument_list|(
literal|"This test doesn't make sense without support for showMinimized()"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|UpdateWidget
name|widget
decl_stmt|;
comment|// Filter out activation change and focus events to avoid update() calls in QWidget.
name|widget
operator|.
name|updateOnActivationChangeAndFocusIn
operator|=
literal|false
expr_stmt|;
name|widget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|widget
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|150
argument_list|)
expr_stmt|;
comment|// Minimize window.
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|110
argument_list|)
expr_stmt|;
name|widget
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// The widget is not visible on the screen (but isVisible() still returns true).
comment|// Make sure update requests are discarded until the widget is shown again.
name|widget
operator|.
name|update
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Restore window.
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
end_if
begin_class
DECL|class|PaintOnScreenWidget
class|class
name|PaintOnScreenWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|PaintOnScreenWidget
name|PaintOnScreenWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|f
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|,
name|f
argument_list|)
block|{     }
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
comment|// This is the only way to enable PaintOnScreen on Windows.
DECL|function|paintEngine
name|QPaintEngine
modifier|*
name|paintEngine
parameter_list|()
specifier|const
block|{
return|return
literal|0
return|;
block|}
endif|#
directive|endif
block|}
class|;
end_class
begin_function
DECL|function|alienWidgets
name|void
name|tst_QWidget
operator|::
name|alienWidgets
parameter_list|()
block|{
name|qApp
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|AA_DontCreateNativeWidgetSiblings
argument_list|)
expr_stmt|;
name|QWidget
name|parent
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|QWidget
name|grandChild
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|QWidget
name|greatGrandChild
argument_list|(
operator|&
name|grandChild
argument_list|)
decl_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Verify that the WA_WState_Created attribute is set
comment|// and the top-level is the only native window.
name|QVERIFY
argument_list|(
name|parent
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChild
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|greatGrandChild
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|greatGrandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
comment|// Enforce native windows all the way up in the parent hierarchy
comment|// if not WA_DontCreateNativeAncestors is set.
name|grandChild
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontCreateNativeAncestors
argument_list|)
expr_stmt|;
name|greatGrandChild
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|greatGrandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
block|{
comment|// Ensure that hide() on an ancestor of a widget with
comment|// Qt::WA_DontCreateNativeAncestors still gets unmapped
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontCreateNativeAncestors
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Mapped
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Mapped
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Enforce a native window when calling QWidget::winId.
name|QVERIFY
argument_list|(
name|child
operator|.
name|winId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that paint on screen widgets (incl. children) are native.
name|PaintOnScreenWidget
name|paintOnScreen
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|QWidget
name|paintOnScreenChild
argument_list|(
operator|&
name|paintOnScreen
argument_list|)
decl_stmt|;
name|paintOnScreen
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintOnScreen
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|paintOnScreen
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|paintOnScreen
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|paintOnScreenChild
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|paintOnScreenChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|paintOnScreen
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintOnScreen
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintOnScreen
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintOnScreenChild
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintOnScreenChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that widgets with the Qt::MSWindowsOwnDC attribute set
comment|// are native.
name|QWidget
name|msWindowsOwnDC
argument_list|(
operator|&
name|parent
argument_list|,
name|Qt
operator|::
name|MSWindowsOwnDC
argument_list|)
decl_stmt|;
name|msWindowsOwnDC
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|msWindowsOwnDC
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|msWindowsOwnDC
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|msWindowsOwnDC
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
block|{
comment|// Enforce a native window when calling QWidget::handle() (on X11) or QWidget::getDC() (on Windows).
name|QWidget
name|widget
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|widget
operator|.
name|handle
argument_list|()
expr_stmt|;
else|#
directive|else
name|widget
operator|.
name|getDC
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
name|widget
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|Q_WS_X11
ifndef|#
directive|ifndef
name|QT_NO_XRENDER
block|{
comment|// Enforce a native window when calling QWidget::x11PictureHandle().
name|QWidget
name|widget
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|x11PictureHandle
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|{
comment|// Make sure we don't create native windows when setting Qt::WA_X11NetWmWindowType attributes
comment|// on alien widgets (see task 194231).
name|QWidget
name|dummy
decl_stmt|;
name|QVERIFY
argument_list|(
name|dummy
operator|.
name|winId
argument_list|()
argument_list|)
expr_stmt|;
name|QWidget
name|widget
argument_list|(
operator|&
name|dummy
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_X11NetWmWindowTypeToolBar
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|{
comment|// Make sure we create native ancestors when setting Qt::WA_PaintOnScreen before show().
name|QWidget
name|topLevel
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|QWidget
name|grandChild
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|PaintOnScreenWidget
name|greatGrandChild
argument_list|(
operator|&
name|grandChild
argument_list|)
decl_stmt|;
name|greatGrandChild
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|greatGrandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|greatGrandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Ensure that widgets reparented into Qt::WA_PaintOnScreen widgets become native.
name|QWidget
name|topLevel
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|PaintOnScreenWidget
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|widget
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|dummy
init|=
operator|new
name|QWidget
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|grandChild
init|=
operator|new
name|QWidget
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|dummy2
init|=
operator|new
name|QWidget
argument_list|(
name|grandChild
argument_list|)
decl_stmt|;
name|child
operator|->
name|setParent
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|topLevel
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dummy
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChild
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dummy2
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|topLevel
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dummy
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dummy
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChild
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|grandChild
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dummy2
operator|->
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dummy2
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Ensure that ancestors of a Qt::WA_PaintOnScreen widget stay native
comment|// if they are re-created (typically in QWidgetPrivate::setParent_sys) (task 210822).
name|QWidget
name|window
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|QWidget
name|grandChild
decl_stmt|;
name|grandChild
operator|.
name|setWindowTitle
argument_list|(
literal|"This causes the widget to be created"
argument_list|)
expr_stmt|;
name|PaintOnScreenWidget
name|paintOnScreenWidget
decl_stmt|;
name|paintOnScreenWidget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|paintOnScreenWidget
operator|.
name|setParent
argument_list|(
operator|&
name|grandChild
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|setParent
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|window
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChild
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|grandChild
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintOnScreenWidget
operator|.
name|internalWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|paintOnScreenWidget
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Ensure that all siblings are native unless Qt::AA_DontCreateNativeWidgetSiblings is set.
name|qApp
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|AA_DontCreateNativeWidgetSiblings
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QWidget
name|mainWindow
decl_stmt|;
name|QWidget
modifier|*
name|toolBar
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|mainWindow
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|dockWidget
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|mainWindow
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|centralWidget
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|mainWindow
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|button
init|=
operator|new
name|QWidget
argument_list|(
name|centralWidget
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|mdiArea
init|=
operator|new
name|QWidget
argument_list|(
name|centralWidget
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|horizontalScroll
init|=
operator|new
name|QWidget
argument_list|(
name|mdiArea
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|verticalScroll
init|=
operator|new
name|QWidget
argument_list|(
name|mdiArea
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|viewport
init|=
operator|new
name|QWidget
argument_list|(
name|mdiArea
argument_list|)
decl_stmt|;
name|viewport
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
expr_stmt|;
name|mainWindow
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Ensure that the viewport and its siblings are native:
name|QVERIFY
argument_list|(
name|verticalScroll
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|verticalScroll
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|horizontalScroll
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
comment|// Ensure that the mdi area and its siblings are native:
name|QVERIFY
argument_list|(
name|mdiArea
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|button
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
comment|// Ensure that the central widget and its siblings are native:
name|QVERIFY
argument_list|(
name|centralWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dockWidget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolBar
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_WS_WIN / Q_WS_X11
end_comment
begin_class
DECL|class|ASWidget
class|class
name|ASWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|ASWidget
name|ASWidget
parameter_list|(
name|QSize
name|sizeHint
parameter_list|,
name|QSizePolicy
name|sizePolicy
parameter_list|,
name|bool
name|layout
parameter_list|,
name|bool
name|hfwLayout
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|mySizeHint
argument_list|(
name|sizeHint
argument_list|)
block|{
name|setSizePolicy
argument_list|(
name|sizePolicy
argument_list|)
expr_stmt|;
if|if
condition|(
name|layout
condition|)
block|{
name|QSizePolicy
name|sp
init|=
name|QSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|,
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
decl_stmt|;
name|sp
operator|.
name|setHeightForWidth
argument_list|(
name|hfwLayout
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|vbox
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|vbox
operator|->
name|setMargin
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|vbox
operator|->
name|addWidget
argument_list|(
operator|new
name|ASWidget
argument_list|(
name|sizeHint
operator|+
name|QSize
argument_list|(
literal|30
argument_list|,
literal|20
argument_list|)
argument_list|,
name|sp
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|vbox
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|()
specifier|const
block|{
if|if
condition|(
name|layout
argument_list|()
condition|)
return|return
name|layout
argument_list|()
operator|->
name|totalSizeHint
argument_list|()
return|;
return|return
name|mySizeHint
return|;
block|}
DECL|function|heightForWidth
name|int
name|heightForWidth
parameter_list|(
name|int
name|width
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|sizePolicy
argument_list|()
operator|.
name|hasHeightForWidth
argument_list|()
condition|)
block|{
return|return
name|width
operator|*
literal|2
return|;
block|}
else|else
block|{
return|return
operator|-
literal|1
return|;
block|}
block|}
DECL|member|mySizeHint
name|QSize
name|mySizeHint
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|adjustSize_data
name|void
name|tst_QWidget
operator|::
name|adjustSize_data
parameter_list|()
block|{
specifier|const
name|int
name|MagicW
init|=
literal|200
decl_stmt|;
specifier|const
name|int
name|MagicH
init|=
literal|100
decl_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"sizeHint"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"hPolicy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"vPolicy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hfwSP"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"layout"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hfwLayout"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"haveParent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"expectedSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
name|qMax
argument_list|(
literal|6
argument_list|,
name|MagicH
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
name|qMax
argument_list|(
literal|10
argument_list|,
name|MagicH
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|35
argument_list|,
literal|26
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|35
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|100000
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"6"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|100000
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"7"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|100000
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|100000
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"9"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
name|qMax
argument_list|(
literal|5
argument_list|,
name|MagicW
argument_list|)
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
comment|/* or 10 would be OK too, since hfw contradicts sizeHint() */
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|35
argument_list|,
literal|26
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|35
argument_list|,
literal|70
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"6c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
comment|/* or 80002 would be OK too, since hfw contradicts sizeHint() */
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"7c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|40001
operator|+
literal|30
argument_list|,
literal|30001
operator|+
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|40001
argument_list|,
literal|30001
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|40001
operator|+
literal|30
argument_list|,
literal|80002
operator|+
literal|60
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"9c"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|adjustSize
name|void
name|tst_QWidget
operator|::
name|adjustSize
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|sizeHint
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|hPolicy
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|vPolicy
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hfwSP
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|layout
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hfwLayout
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|haveParent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|expectedSize
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|parent
init|=
operator|new
name|QWidget
decl_stmt|;
name|QSizePolicy
name|sp
init|=
name|QSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Policy
argument_list|(
name|hPolicy
argument_list|)
argument_list|,
name|QSizePolicy
operator|::
name|Policy
argument_list|(
name|vPolicy
argument_list|)
argument_list|)
decl_stmt|;
name|sp
operator|.
name|setHeightForWidth
argument_list|(
name|hfwSP
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|ASWidget
argument_list|(
name|sizeHint
argument_list|,
name|sp
argument_list|,
name|layout
argument_list|,
name|hfwLayout
argument_list|,
name|haveParent
condition|?
name|parent
else|:
literal|0
argument_list|)
decl_stmt|;
name|child
operator|->
name|resize
argument_list|(
literal|123
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|child
operator|->
name|adjustSize
argument_list|()
expr_stmt|;
if|if
condition|(
name|expectedSize
operator|==
name|QSize
argument_list|(
literal|100000
argument_list|,
literal|100000
argument_list|)
condition|)
block|{
name|QVERIFY
argument_list|(
name|child
operator|->
name|size
argument_list|()
operator|.
name|width
argument_list|()
operator|<
name|sizeHint
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|->
name|size
argument_list|()
operator|.
name|height
argument_list|()
operator|<
name|sizeHint
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
if|if
condition|(
operator|!
name|haveParent
condition|)
block|{
specifier|const
name|QRect
modifier|&
name|desktopRect
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
decl_stmt|;
name|expectedSize
operator|.
name|setWidth
argument_list|(
name|qMin
argument_list|(
name|expectedSize
operator|.
name|width
argument_list|()
argument_list|,
name|desktopRect
operator|.
name|width
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|expectedSize
operator|.
name|setHeight
argument_list|(
name|qMin
argument_list|(
name|expectedSize
operator|.
name|height
argument_list|()
argument_list|,
name|desktopRect
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|child
operator|->
name|size
argument_list|()
argument_list|,
name|expectedSize
argument_list|)
expr_stmt|;
block|}
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TestLayout
class|class
name|TestLayout
super|:
specifier|public
name|QVBoxLayout
block|{
name|Q_OBJECT
public|public:
DECL|function|TestLayout
name|TestLayout
parameter_list|(
name|QWidget
modifier|*
name|w
init|=
literal|0
parameter_list|)
member_init_list|:
name|QVBoxLayout
argument_list|(
name|w
argument_list|)
block|{
name|invalidated
operator|=
literal|false
expr_stmt|;
block|}
DECL|function|invalidate
name|void
name|invalidate
parameter_list|()
block|{
name|invalidated
operator|=
literal|true
expr_stmt|;
block|}
DECL|member|invalidated
name|bool
name|invalidated
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|updateGeometry_data
name|void
name|tst_QWidget
operator|::
name|updateGeometry_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"minSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"shouldInvalidate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"maxSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"shouldInvalidate2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"verticalSizePolicy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"shouldInvalidate3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"setVisible"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"shouldInvalidate4"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setMinimumSize"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
operator|<<
name|QSize
argument_list|()
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setMaximumSize"
argument_list|)
operator|<<
name|QSize
argument_list|()
operator|<<
literal|false
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setMinimumSize, then maximumSize to a different size"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setMinimumSize, then maximumSize to the same size"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setMinimumSize, then maximumSize to the same size and then hide it"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
literal|true
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Change sizePolicy"
argument_list|)
operator|<<
name|QSize
argument_list|()
operator|<<
literal|false
operator|<<
name|QSize
argument_list|()
operator|<<
literal|false
operator|<<
name|int
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateGeometry
name|void
name|tst_QWidget
operator|::
name|updateGeometry
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|minSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|shouldInvalidate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|maxSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|shouldInvalidate2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|verticalSizePolicy
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|shouldInvalidate3
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|setVisible
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|shouldInvalidate4
argument_list|)
expr_stmt|;
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|TestLayout
modifier|*
name|lout
init|=
operator|new
name|TestLayout
argument_list|()
decl_stmt|;
name|parent
operator|.
name|setLayout
argument_list|(
name|lout
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|lout
operator|->
name|addWidget
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|lout
operator|->
name|invalidated
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|minSize
operator|.
name|isValid
argument_list|()
condition|)
name|child
operator|->
name|setMinimumSize
argument_list|(
name|minSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lout
operator|->
name|invalidated
argument_list|,
name|shouldInvalidate
argument_list|)
expr_stmt|;
name|lout
operator|->
name|invalidated
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|maxSize
operator|.
name|isValid
argument_list|()
condition|)
name|child
operator|->
name|setMaximumSize
argument_list|(
name|maxSize
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lout
operator|->
name|invalidated
argument_list|,
name|shouldInvalidate2
argument_list|)
expr_stmt|;
name|lout
operator|->
name|invalidated
operator|=
literal|false
expr_stmt|;
name|child
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|,
operator|(
name|QSizePolicy
operator|::
name|Policy
operator|)
name|verticalSizePolicy
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldInvalidate3
condition|)
name|QCOMPARE
argument_list|(
name|lout
operator|->
name|invalidated
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|lout
operator|->
name|invalidated
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|setVisible
condition|)
name|child
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lout
operator|->
name|invalidated
argument_list|,
name|shouldInvalidate4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendUpdateRequestImmediately
name|void
name|tst_QWidget
operator|::
name|sendUpdateRequestImmediately
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_WS_MAC
if|if
condition|(
operator|!
name|QApplicationPrivate
operator|::
name|graphicsSystem
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"We only send update requests on the Mac when passing -graphicssystem"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|UpdateWidget
name|updateWidget
decl_stmt|;
name|updateWidget
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|updateWidget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|//glib workaround
endif|#
directive|endif
name|updateWidget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|updateWidget
operator|.
name|numUpdateRequestEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|updateWidget
operator|.
name|repaint
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|updateWidget
operator|.
name|numUpdateRequestEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|RedirectedWidget
class|class
name|RedirectedWidget
super|:
specifier|public
name|QWidget
block|{
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
comment|// Verify that the widget has a redirection set. The widget is redirected to
comment|// the backing store on all platforms using it; otherwise to itself if the wrect
comment|// does not start in (0, 0) or it has a mask set.
name|QPaintDevice
modifier|*
name|oldRedirection
init|=
name|QPainter
operator|::
name|redirected
argument_list|(
name|this
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|Q_WS_MAC
name|QVERIFY
argument_list|(
name|oldRedirection
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QImage
name|image
argument_list|(
name|size
argument_list|()
argument_list|,
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|image
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|painter
operator|.
name|device
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QPaintDevice
operator|*
argument_list|>
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QPainter
operator|::
name|setRedirected
argument_list|(
name|this
argument_list|,
operator|&
name|image
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|redirected
argument_list|(
name|this
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QPaintDevice
operator|*
argument_list|>
argument_list|(
operator|&
name|image
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QPainter
operator|::
name|restoreRedirected
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|redirected
argument_list|(
name|this
argument_list|)
argument_list|,
name|oldRedirection
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|image
operator|.
name|height
argument_list|()
condition|;
operator|++
name|i
control|)
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|image
operator|.
name|width
argument_list|()
condition|;
operator|++
name|j
control|)
name|QCOMPARE
argument_list|(
name|image
operator|.
name|pixel
argument_list|(
name|j
argument_list|,
name|i
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_comment
comment|// Test to make sure we're compatible in the particular case where QPainter::setRedirected
end_comment
begin_comment
comment|// actually works. It has been broken for all other cases since Qt 4.1.4 (backing store).
end_comment
begin_comment
comment|// QWidget::render is the modern and more powerful way of doing the same.
end_comment
begin_function
DECL|function|painterRedirection
name|void
name|tst_QWidget
operator|::
name|painterRedirection
parameter_list|()
block|{
name|RedirectedWidget
name|widget
decl_stmt|;
comment|// Set FramelessWindowHint and mask to trigger internal painter redirection on the Mac.
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|widget
operator|.
name|windowFlags
argument_list|()
operator||
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setMask
argument_list|(
name|QRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setFixedSize
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QPixmap
name|pixmap
argument_list|(
name|widget
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|QPainter
operator|::
name|setRedirected
argument_list|(
operator|&
name|widget
argument_list|,
operator|&
name|pixmap
argument_list|,
name|QPoint
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|repaint
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QPainter
operator|::
name|redirected
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QPaintDevice
operator|*
argument_list|>
argument_list|(
operator|&
name|pixmap
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|doubleRepaint
name|void
name|tst_QWidget
operator|::
name|doubleRepaint
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QSKIP
argument_list|(
literal|"4DWM issues on IRIX makes this test fail"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
if|if
condition|(
operator|!
name|macHasAccessToWindowsServer
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"Not having window server access causes the wrong number of repaints to be issues"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|UpdateWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|StrongFocus
argument_list|)
expr_stmt|;
comment|// Filter out activation change and focus events to avoid update() calls in QWidget.
name|widget
operator|.
name|updateOnActivationChangeAndFocusIn
operator|=
literal|false
expr_stmt|;
comment|// Show: 1 repaint
name|int
name|expectedRepaints
init|=
literal|1
decl_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
name|expectedRepaints
argument_list|)
expr_stmt|;
name|widget
operator|.
name|numPaintEvents
operator|=
literal|0
expr_stmt|;
comment|// Minmize: Should not trigger a repaint.
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|numPaintEvents
operator|=
literal|0
expr_stmt|;
comment|// Restore: Should not trigger a repaint.
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|Q_WS_MAC
end_ifndef
begin_comment
comment|// This test only makes sense on the Mac when passing -graphicssystem.
end_comment
begin_function
DECL|function|resizeInPaintEvent
name|void
name|tst_QWidget
operator|::
name|resizeInPaintEvent
parameter_list|()
block|{
name|QWidget
name|window
decl_stmt|;
name|UpdateWidget
name|widget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|widget
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resizeInPaintEvent
operator|=
literal|true
expr_stmt|;
comment|// This will call resize in the paintEvent, which in turn will call
comment|// invalidateBuffer() and a new update request should be posted.
name|widget
operator|.
name|repaint
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|widget
operator|.
name|numPaintEvents
operator|=
literal|0
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// Make sure the resize triggers another update.
name|QTRY_COMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|opaqueChildren
name|void
name|tst_QWidget
operator|::
name|opaqueChildren
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
operator|-
literal|700
argument_list|,
operator|-
literal|700
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QWidget
name|grandChild
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|grandChild
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QWidget
name|greatGrandChild
argument_list|(
operator|&
name|grandChild
argument_list|)
decl_stmt|;
name|greatGrandChild
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|greatGrandChild
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|greatGrandChild
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Opaque child widget.
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// Child, grandChild and greatGrandChild are outside the ancestor clip.
name|QRegion
name|expectedOpaqueRegion
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qt_widget_private
argument_list|(
operator|&
name|grandChild
argument_list|)
operator|->
name|getOpaqueChildren
argument_list|()
argument_list|,
name|expectedOpaqueRegion
argument_list|)
expr_stmt|;
comment|// Now they are all inside the ancestor clip.
name|child
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qt_widget_private
argument_list|(
operator|&
name|grandChild
argument_list|)
operator|->
name|getOpaqueChildren
argument_list|()
argument_list|,
name|expectedOpaqueRegion
argument_list|)
expr_stmt|;
comment|// Set mask on greatGrandChild.
specifier|const
name|QRegion
name|mask
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|greatGrandChild
operator|.
name|setMask
argument_list|(
name|mask
argument_list|)
expr_stmt|;
name|expectedOpaqueRegion
operator|&=
name|mask
operator|.
name|translated
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qt_widget_private
argument_list|(
operator|&
name|grandChild
argument_list|)
operator|->
name|getOpaqueChildren
argument_list|()
argument_list|,
name|expectedOpaqueRegion
argument_list|)
expr_stmt|;
comment|// Make greatGrandChild "transparent".
name|greatGrandChild
operator|.
name|setAutoFillBackground
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qt_widget_private
argument_list|(
operator|&
name|grandChild
argument_list|)
operator|->
name|getOpaqueChildren
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|MaskSetWidget
class|class
name|MaskSetWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|MaskSetWidget
name|MaskSetWidget
parameter_list|(
name|QWidget
modifier|*
name|p
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|p
argument_list|)
block|{}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|event
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|paintedRegion
operator|+=
name|event
operator|->
name|region
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|event
operator|->
name|region
argument_list|()
operator|.
name|rects
argument_list|()
control|)
name|p
operator|.
name|fillRect
argument_list|(
name|r
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
block|}
DECL|function|resizeEvent
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
parameter_list|)
block|{
name|setMask
argument_list|(
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|()
argument_list|,
literal|10
argument_list|)
operator|.
name|normalized
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|member|paintedRegion
name|QRegion
name|paintedRegion
decl_stmt|;
public|public
name|slots
public|:
DECL|function|resizeDown
name|void
name|resizeDown
parameter_list|()
block|{
name|setGeometry
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|resizeUp
name|void
name|resizeUp
parameter_list|()
block|{
name|setGeometry
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|50
argument_list|,
literal|150
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|setMaskInResizeEvent
name|void
name|tst_QWidget
operator|::
name|setMaskInResizeEvent
parameter_list|()
block|{
name|UpdateWidget
name|w
decl_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|w
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|FramelessWindowHint
operator||
name|Qt
operator|::
name|WindowStaysOnTopHint
argument_list|)
expr_stmt|;
name|w
operator|.
name|raise
argument_list|()
expr_stmt|;
name|MaskSetWidget
name|testWidget
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|testWidget
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|setMask
argument_list|(
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|w
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|testWidget
operator|.
name|paintedRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
operator|&
name|testWidget
argument_list|,
name|SLOT
argument_list|(
name|resizeDown
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QRegion
name|expectedParentUpdate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
decl_stmt|;
comment|// Old testWidget area.
name|expectedParentUpdate
operator|+=
name|testWidget
operator|.
name|geometry
argument_list|()
expr_stmt|;
comment|// New testWidget area.
name|QCOMPARE
argument_list|(
name|w
operator|.
name|paintedRegion
argument_list|,
name|expectedParentUpdate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|.
name|paintedRegion
argument_list|,
name|testWidget
operator|.
name|mask
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|paintedRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
comment|// Now resize the widget again, but in the oposite direction
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
operator|&
name|testWidget
argument_list|,
name|SLOT
argument_list|(
name|resizeUp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|testWidget
operator|.
name|paintedRegion
argument_list|,
name|testWidget
operator|.
name|mask
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MoveInResizeWidget
class|class
name|MoveInResizeWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|MoveInResizeWidget
name|MoveInResizeWidget
parameter_list|(
name|QWidget
modifier|*
name|p
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|p
argument_list|)
block|{
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
block|}
DECL|function|resizeEvent
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
parameter_list|)
block|{
name|move
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
specifier|static
name|bool
name|firstTime
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|firstTime
condition|)
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|250
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|resizeMe
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|firstTime
operator|=
literal|false
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|resizeMe
name|void
name|resizeMe
parameter_list|()
block|{
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|moveInResizeEvent
name|void
name|tst_QWidget
operator|::
name|moveInResizeEvent
parameter_list|()
block|{
name|MoveInResizeWidget
name|testWidget
decl_stmt|;
name|testWidget
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|testWidget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|testWidget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|QRect
name|expectedGeometry
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QTRY_COMPARE
argument_list|(
name|testWidget
operator|.
name|geometry
argument_list|()
argument_list|,
name|expectedGeometry
argument_list|)
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
end_if
begin_function
DECL|function|immediateRepaintAfterShow
name|void
name|tst_QWidget
operator|::
name|immediateRepaintAfterShow
parameter_list|()
block|{
name|UpdateWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|// On X11 in particular, we are now waiting for a MapNotify event before
comment|// syncing the backing store. However, if someone request a repaint()
comment|// we must repaint immediately regardless of the current state.
name|widget
operator|.
name|numPaintEvents
operator|=
literal|0
expr_stmt|;
name|widget
operator|.
name|repaint
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|immediateRepaintAfterInvalidateBuffer
name|void
name|tst_QWidget
operator|::
name|immediateRepaintAfterInvalidateBuffer
parameter_list|()
block|{
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|UpdateWidget
decl_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
name|widget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
cast|static_cast
argument_list|<
name|UpdateWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|->
name|numPaintEvents
operator|=
literal|0
expr_stmt|;
comment|// Marks the area covered by the widget as dirty in the backing store and
comment|// posts an UpdateRequest event.
name|qt_widget_private
argument_list|(
name|widget
argument_list|)
operator|->
name|invalidateBuffer
argument_list|(
name|widget
operator|->
name|rect
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|UpdateWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|->
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// The entire widget is already dirty, but this time we want to update immediately
comment|// by calling repaint(), and thus we have to repaint the widget and not wait for
comment|// the UpdateRequest to be sent when we get back to the event loop.
name|widget
operator|->
name|repaint
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|UpdateWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|->
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|effectiveWinId
name|void
name|tst_QWidget
operator|::
name|effectiveWinId
parameter_list|()
block|{
name|QWidget
name|parent
decl_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
comment|// Shouldn't crash.
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|effectiveWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|.
name|effectiveWinId
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|.
name|effectiveWinId
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|effectiveWinId
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|effectiveWinId2
name|void
name|tst_QWidget
operator|::
name|effectiveWinId2
parameter_list|()
block|{
name|QWidget
name|parent
decl_stmt|;
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|WinIdChange
condition|)
block|{
comment|// Shouldn't crash.
name|effectiveWinId
argument_list|()
expr_stmt|;
block|}
return|return
name|QWidget
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
class|;
name|MyWidget
name|child
decl_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|child
operator|.
name|setParent
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|CustomWidget
class|class
name|CustomWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|member|metricCallCount
specifier|mutable
name|int
name|metricCallCount
decl_stmt|;
DECL|function|CustomWidget
name|CustomWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|metricCallCount
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|metric
specifier|virtual
name|int
name|metric
parameter_list|(
name|PaintDeviceMetric
name|metric
parameter_list|)
specifier|const
block|{
operator|++
name|metricCallCount
expr_stmt|;
return|return
name|QWidget
operator|::
name|metric
argument_list|(
name|metric
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|customDpi
name|void
name|tst_QWidget
operator|::
name|customDpi
parameter_list|()
block|{
name|QWidget
modifier|*
name|topLevel
init|=
operator|new
name|QWidget
decl_stmt|;
name|CustomWidget
modifier|*
name|custom
init|=
operator|new
name|CustomWidget
argument_list|(
name|topLevel
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
name|custom
argument_list|)
decl_stmt|;
name|custom
operator|->
name|metricCallCount
operator|=
literal|0
expr_stmt|;
name|topLevel
operator|->
name|logicalDpiX
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|custom
operator|->
name|metricCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|custom
operator|->
name|logicalDpiX
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|custom
operator|->
name|metricCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|child
operator|->
name|logicalDpiX
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_S60
comment|// QWidget::metric is not recursive on Symbian
name|QCOMPARE
argument_list|(
name|custom
operator|->
name|metricCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
else|#
directive|else
name|QCOMPARE
argument_list|(
name|custom
operator|->
name|metricCallCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
endif|#
directive|endif
operator|delete
name|topLevel
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customDpiProperty
name|void
name|tst_QWidget
operator|::
name|customDpiProperty
parameter_list|()
block|{
name|QWidget
modifier|*
name|topLevel
init|=
operator|new
name|QWidget
decl_stmt|;
name|QWidget
modifier|*
name|middle
init|=
operator|new
name|CustomWidget
argument_list|(
name|topLevel
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
name|middle
argument_list|)
decl_stmt|;
specifier|const
name|int
name|initialDpiX
init|=
name|topLevel
operator|->
name|logicalDpiX
argument_list|()
decl_stmt|;
specifier|const
name|int
name|initialDpiY
init|=
name|topLevel
operator|->
name|logicalDpiY
argument_list|()
decl_stmt|;
name|middle
operator|->
name|setProperty
argument_list|(
literal|"_q_customDpiX"
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|middle
operator|->
name|setProperty
argument_list|(
literal|"_q_customDpiY"
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|->
name|logicalDpiX
argument_list|()
argument_list|,
name|initialDpiX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|->
name|logicalDpiY
argument_list|()
argument_list|,
name|initialDpiY
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|middle
operator|->
name|logicalDpiX
argument_list|()
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|middle
operator|->
name|logicalDpiY
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|logicalDpiX
argument_list|()
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|logicalDpiY
argument_list|()
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|middle
operator|->
name|setProperty
argument_list|(
literal|"_q_customDpiX"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|middle
operator|->
name|setProperty
argument_list|(
literal|"_q_customDpiY"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|->
name|logicalDpiX
argument_list|()
argument_list|,
name|initialDpiX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|->
name|logicalDpiY
argument_list|()
argument_list|,
name|initialDpiY
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|middle
operator|->
name|logicalDpiX
argument_list|()
argument_list|,
name|initialDpiX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|middle
operator|->
name|logicalDpiY
argument_list|()
argument_list|,
name|initialDpiY
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|logicalDpiX
argument_list|()
argument_list|,
name|initialDpiX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|logicalDpiY
argument_list|()
argument_list|,
name|initialDpiY
argument_list|)
expr_stmt|;
operator|delete
name|topLevel
expr_stmt|;
block|}
end_function
begin_function
DECL|function|quitOnCloseAttribute
name|void
name|tst_QWidget
operator|::
name|quitOnCloseAttribute
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|Tool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|Popup
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|ToolTip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|SplashScreen
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|SubWindow
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|w
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|Dialog
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|Tool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveRect
name|void
name|tst_QWidget
operator|::
name|moveRect
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setUpdatesEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|child
operator|.
name|setUpdatesEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|child
operator|.
name|move
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// Don't crash.
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_WIN
end_ifdef
begin_class
DECL|class|GDIWidget
class|class
name|GDIWidget
super|:
specifier|public
name|QDialog
block|{
public|public:
DECL|function|GDIWidget
name|GDIWidget
parameter_list|()
block|{
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
block|}
DECL|function|paintEngine
name|QPaintEngine
modifier|*
name|paintEngine
parameter_list|()
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|HDC
name|hdc
init|=
name|getDC
argument_list|()
decl_stmt|;
name|SelectObject
argument_list|(
name|hdc
argument_list|,
name|CreateSolidBrush
argument_list|(
name|RGB
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Rectangle
argument_list|(
name|hdc
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|releaseDC
argument_list|(
name|hdc
argument_list|)
expr_stmt|;
name|QImage
name|im
init|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|winId
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|()
argument_list|,
name|height
argument_list|()
argument_list|)
operator|.
name|toImage
argument_list|()
decl_stmt|;
name|color
operator|=
name|im
operator|.
name|pixel
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|accept
argument_list|()
expr_stmt|;
block|}
DECL|function|sizeHint
name|QSize
name|sizeHint
parameter_list|()
specifier|const
block|{
return|return
name|QSize
argument_list|(
literal|400
argument_list|,
literal|300
argument_list|)
return|;
block|}
DECL|member|color
name|QColor
name|color
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|gdiPainting
name|void
name|tst_QWidget
operator|::
name|gdiPainting
parameter_list|()
block|{
name|GDIWidget
name|w
decl_stmt|;
name|w
operator|.
name|exec
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|color
argument_list|,
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintOnScreenPossible
name|void
name|tst_QWidget
operator|::
name|paintOnScreenPossible
parameter_list|()
block|{
name|QWidget
name|w1
decl_stmt|;
name|w1
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w1
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
argument_list|)
expr_stmt|;
name|GDIWidget
name|w2
decl_stmt|;
name|w2
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|reparentStaticWidget
name|void
name|tst_QWidget
operator|::
name|reparentStaticWidget
parameter_list|()
block|{
name|QWidget
name|window1
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|window1
argument_list|)
decl_stmt|;
name|child
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|)
expr_stmt|;
name|child
operator|->
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChild
init|=
operator|new
name|QWidget
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|grandChild
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|)
expr_stmt|;
name|window1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window1
argument_list|)
expr_stmt|;
name|QWidget
name|window2
decl_stmt|;
name|window2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|window2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
comment|// Reparent into another top-level.
name|child
operator|->
name|setParent
argument_list|(
operator|&
name|window2
argument_list|)
expr_stmt|;
name|child
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// Please don't crash.
name|window1
operator|.
name|resize
argument_list|(
name|window1
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
comment|// Make sure we move all static children even though
comment|// the reparented widget itself is non-static.
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|child
operator|->
name|setParent
argument_list|(
operator|&
name|window1
argument_list|)
expr_stmt|;
name|child
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// Please don't crash.
name|window2
operator|.
name|resize
argument_list|(
name|window2
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|child
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|child
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
comment|// Please don't crash.
name|child
operator|->
name|resize
argument_list|(
name|child
operator|->
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|window2
operator|.
name|resize
argument_list|(
name|window2
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|siblingOfGrandChild
init|=
operator|new
name|QWidget
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|siblingOfGrandChild
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
comment|// Nothing should happen when reparenting within the same top-level.
name|grandChild
operator|->
name|setParent
argument_list|(
name|siblingOfGrandChild
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QWidget
name|paintOnScreen
decl_stmt|;
name|paintOnScreen
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|paintOnScreen
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|paintOnScreen
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|child
operator|->
name|setParent
argument_list|(
operator|&
name|paintOnScreen
argument_list|)
expr_stmt|;
name|child
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
comment|// Please don't crash.
name|paintOnScreen
operator|.
name|resize
argument_list|(
name|paintOnScreen
operator|.
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG6883_reparentStaticWidget2
name|void
name|tst_QWidget
operator|::
name|QTBUG6883_reparentStaticWidget2
parameter_list|()
block|{
name|QMainWindow
name|mw
decl_stmt|;
name|QDockWidget
modifier|*
name|one
init|=
operator|new
name|QDockWidget
argument_list|(
literal|"one"
argument_list|,
operator|&
name|mw
argument_list|)
decl_stmt|;
name|mw
operator|.
name|addDockWidget
argument_list|(
name|Qt
operator|::
name|LeftDockWidgetArea
argument_list|,
name|one
argument_list|,
name|Qt
operator|::
name|Vertical
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|child
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_StaticContents
argument_list|)
expr_stmt|;
name|child
operator|->
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|one
operator|->
name|setWidget
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|QToolBar
modifier|*
name|mainTools
init|=
name|mw
operator|.
name|addToolBar
argument_list|(
literal|"Main Tools"
argument_list|)
decl_stmt|;
name|mainTools
operator|->
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|)
expr_stmt|;
name|mw
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|mw
argument_list|)
expr_stmt|;
name|one
operator|->
name|setFloating
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
comment|//do not crash
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_QWS
end_ifdef
begin_function
DECL|function|updateOutsideSurfaceClip
name|void
name|tst_QWidget
operator|::
name|updateOutsideSurfaceClip
parameter_list|()
block|{
name|UpdateWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|widget
operator|.
name|raise
argument_list|()
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|widget
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Move widget partially outside buffer and change the surface clip.
name|widget
operator|.
name|move
argument_list|(
operator|-
literal|50
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// Update region is outside the surface clip and should not trigger a repaint.
name|widget
operator|.
name|update
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Now, move the widget back so that the update region is inside the clip
comment|// and make sure we get a repaint of the dirty area.
name|widget
operator|.
name|move
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|ColorRedWidget
class|class
name|ColorRedWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|ColorRedWidget
name|ColorRedWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|,
name|Qt
operator|::
name|FramelessWindowHint
operator||
name|Qt
operator|::
name|WindowStaysOnTopHint
operator||
name|Qt
operator|::
name|ToolTip
argument_list|)
block|{     }
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|translucentWidget
name|void
name|tst_QWidget
operator|::
name|translucentWidget
parameter_list|()
block|{
name|QPixmap
name|pm
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|pm
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|ColorRedWidget
name|label
decl_stmt|;
name|label
operator|.
name|setFixedSize
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|label
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_TranslucentBackground
argument_list|)
expr_stmt|;
name|label
operator|.
name|move
argument_list|(
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|label
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|label
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QPixmap
name|widgetSnapshot
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_WIN
name|QWidget
modifier|*
name|desktopWidget
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|screen
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|QSysInfo
operator|::
name|windowsVersion
argument_list|()
operator|>=
name|QSysInfo
operator|::
name|WV_VISTA
condition|)
name|widgetSnapshot
operator|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|desktopWidget
operator|->
name|winId
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|label
operator|.
name|width
argument_list|()
argument_list|,
name|label
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
else|else
endif|#
directive|endif
name|widgetSnapshot
operator|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|label
operator|.
name|winId
argument_list|()
argument_list|)
expr_stmt|;
name|QImage
name|actual
init|=
name|widgetSnapshot
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QImage
name|expected
init|=
name|pm
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_RGB32
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|actual
operator|.
name|size
argument_list|()
argument_list|,
name|expected
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actual
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MaskResizeTestWidget
class|class
name|MaskResizeTestWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|MaskResizeTestWidget
name|MaskResizeTestWidget
parameter_list|(
name|QWidget
modifier|*
name|p
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|p
argument_list|)
block|{
name|setMask
argument_list|(
name|QRegion
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
operator|.
name|normalized
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|event
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|paintedRegion
operator|+=
name|event
operator|->
name|region
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QRect
name|r
decl|,
name|event
operator|->
name|region
argument_list|()
operator|.
name|rects
argument_list|()
control|)
name|p
operator|.
name|fillRect
argument_list|(
name|r
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
block|}
DECL|member|paintedRegion
name|QRegion
name|paintedRegion
decl_stmt|;
public|public
name|slots
public|:
DECL|function|enlargeMask
name|void
name|enlargeMask
parameter_list|()
block|{
name|QRegion
name|newMask
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
operator|.
name|normalized
argument_list|()
argument_list|)
decl_stmt|;
name|setMask
argument_list|(
name|newMask
argument_list|)
expr_stmt|;
block|}
DECL|function|shrinkMask
name|void
name|shrinkMask
parameter_list|()
block|{
name|QRegion
name|newMask
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
operator|.
name|normalized
argument_list|()
argument_list|)
decl_stmt|;
name|setMask
argument_list|(
name|newMask
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|setClearAndResizeMask
name|void
name|tst_QWidget
operator|::
name|setClearAndResizeMask
parameter_list|()
block|{
name|UpdateWidget
name|topLevel
decl_stmt|;
name|topLevel
operator|.
name|resize
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Mask top-level widget
specifier|const
name|QRegion
name|topLevelMask
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
decl_stmt|;
name|topLevel
operator|.
name|setMask
argument_list|(
name|topLevelMask
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|mask
argument_list|()
argument_list|,
name|topLevelMask
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
comment|// We don't control what's happening on other platforms.
comment|// and ensure that the top-level doesn't get any update.
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|topLevel
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Clear top-level mask
name|topLevel
operator|.
name|clearMask
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|mask
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QRegion
name|outsideOldMask
argument_list|(
name|topLevel
operator|.
name|rect
argument_list|()
argument_list|)
decl_stmt|;
name|outsideOldMask
operator|-=
name|topLevelMask
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
comment|// We don't control what's happening on other platforms.
comment|// and ensure that the top-level gets an update for the area outside the old mask.
name|QTRY_VERIFY
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|outsideOldMask
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|UpdateWidget
name|child
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// NB! Opaque child.
name|child
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|child
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|topLevel
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Mask child widget with a mask that is smaller than the rect
specifier|const
name|QRegion
name|childMask
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|child
operator|.
name|setMask
argument_list|(
name|childMask
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|mask
argument_list|()
argument_list|,
name|childMask
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
comment|// and ensure that the child widget doesn't get any update.
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// Mac always issues a full update when calling setMask, and we cannot force it to not do so.
if|if
condition|(
name|child
operator|.
name|internalWinId
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
else|else
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// and the parent widget gets an update for the newly exposed area.
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QRegion
name|expectedParentExpose
argument_list|(
name|child
operator|.
name|rect
argument_list|()
argument_list|)
decl_stmt|;
name|expectedParentExpose
operator|-=
name|childMask
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|expectedParentExpose
argument_list|)
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|topLevel
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Clear child widget mask
name|child
operator|.
name|clearMask
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|mask
argument_list|()
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// and ensure that that the child widget gets an update for the area outside the old mask.
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|outsideOldMask
operator|=
name|child
operator|.
name|rect
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// Mac always issues a full update when calling setMask, and we cannot force it to not do so.
if|if
condition|(
operator|!
name|child
operator|.
name|internalWinId
argument_list|()
condition|)
endif|#
directive|endif
name|outsideOldMask
operator|-=
name|childMask
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|outsideOldMask
argument_list|)
expr_stmt|;
comment|// and the parent widget doesn't get any update.
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|topLevel
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// Mask child widget with a mask that is bigger than the rect
name|child
operator|.
name|setMask
argument_list|(
name|QRegion
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1000
argument_list|,
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// Mac always issues a full update when calling setMask, and we cannot force it to not do so.
if|if
condition|(
name|child
operator|.
name|internalWinId
argument_list|()
condition|)
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
else|else
endif|#
directive|endif
comment|// and ensure that we don't get any updates at all.
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// ...and the same applies when clearing the mask.
name|child
operator|.
name|clearMask
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// Mac always issues a full update when calling setMask, and we cannot force it to not do so.
if|if
condition|(
name|child
operator|.
name|internalWinId
argument_list|()
condition|)
name|QTRY_VERIFY
argument_list|(
name|child
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
else|else
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QWidget
name|resizeParent
decl_stmt|;
name|MaskResizeTestWidget
name|resizeChild
argument_list|(
operator|&
name|resizeParent
argument_list|)
decl_stmt|;
name|resizeParent
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|resizeParent
operator|.
name|raise
argument_list|()
expr_stmt|;
name|resizeParent
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowStaysOnTopHint
argument_list|)
expr_stmt|;
name|resizeChild
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QPalette
name|pal
init|=
name|resizeParent
operator|.
name|palette
argument_list|()
decl_stmt|;
name|pal
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|resizeParent
operator|.
name|setPalette
argument_list|(
name|pal
argument_list|)
expr_stmt|;
name|resizeParent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|resizeParent
argument_list|)
expr_stmt|;
comment|// Disable the size grip on the Mac; otherwise it'll be included when grabbing the window.
name|resizeParent
operator|.
name|setFixedSize
argument_list|(
name|resizeParent
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|resizeChild
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|resizeChild
operator|.
name|paintedRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|100
argument_list|,
operator|&
name|resizeChild
argument_list|,
name|SLOT
argument_list|(
name|shrinkMask
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// Mac always issues a full update when calling setMask, and we cannot force it to not do so.
if|if
condition|(
name|child
operator|.
name|internalWinId
argument_list|()
condition|)
name|QTRY_COMPARE
argument_list|(
name|resizeChild
operator|.
name|paintedRegion
argument_list|,
name|resizeChild
operator|.
name|mask
argument_list|()
argument_list|)
expr_stmt|;
else|else
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|resizeChild
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|resizeChild
operator|.
name|paintedRegion
operator|=
name|QRegion
argument_list|()
expr_stmt|;
specifier|const
name|QRegion
name|oldMask
init|=
name|resizeChild
operator|.
name|mask
argument_list|()
decl_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
operator|&
name|resizeChild
argument_list|,
name|SLOT
argument_list|(
name|enlargeMask
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
comment|// Mac always issues a full update when calling setMask, and we cannot force it to not do so.
if|if
condition|(
name|child
operator|.
name|internalWinId
argument_list|()
condition|)
name|QTRY_COMPARE
argument_list|(
name|resizeChild
operator|.
name|paintedRegion
argument_list|,
name|resizeChild
operator|.
name|mask
argument_list|()
argument_list|)
expr_stmt|;
else|else
endif|#
directive|endif
name|QTRY_COMPARE
argument_list|(
name|resizeChild
operator|.
name|paintedRegion
argument_list|,
name|resizeChild
operator|.
name|mask
argument_list|()
operator|-
name|oldMask
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maskedUpdate
name|void
name|tst_QWidget
operator|::
name|maskedUpdate
parameter_list|()
block|{
name|UpdateWidget
name|topLevel
decl_stmt|;
name|topLevel
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
specifier|const
name|QRegion
name|topLevelMask
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|70
argument_list|,
literal|70
argument_list|)
decl_stmt|;
name|topLevel
operator|.
name|setMask
argument_list|(
name|topLevelMask
argument_list|)
expr_stmt|;
name|UpdateWidget
name|child
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|child
operator|.
name|setGeometry
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|180
argument_list|,
literal|180
argument_list|)
expr_stmt|;
specifier|const
name|QRegion
name|childMask
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|child
operator|.
name|setMask
argument_list|(
name|childMask
argument_list|)
expr_stmt|;
name|UpdateWidget
name|grandChild
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|grandChild
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
specifier|const
name|QRegion
name|grandChildMask
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|grandChild
operator|.
name|setMask
argument_list|(
name|grandChildMask
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|topLevel
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|topLevel
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
DECL|macro|RESET_WIDGETS
define|#
directive|define
name|RESET_WIDGETS
define|\
value|topLevel.reset(); \     child.reset(); \     grandChild.reset();
DECL|macro|CLEAR_MASK
define|#
directive|define
name|CLEAR_MASK
parameter_list|(
name|widget
parameter_list|)
define|\
value|widget.clearMask(); \     QTest::qWait(100); \     RESET_WIDGETS;
comment|// All widgets are transparent at this point, so any call to update() will result
comment|// in composition, i.e. the update propagates to ancestors and children.
comment|// TopLevel update.
name|RESET_WIDGETS
expr_stmt|;
name|topLevel
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|topLevelMask
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|childMask
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|grandChildMask
argument_list|)
expr_stmt|;
comment|// Child update.
name|RESET_WIDGETS
expr_stmt|;
name|child
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|childMask
operator|.
name|translated
argument_list|(
name|child
operator|.
name|pos
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|childMask
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|grandChildMask
argument_list|)
expr_stmt|;
comment|// GrandChild update.
name|RESET_WIDGETS
expr_stmt|;
name|grandChild
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|grandChildMask
operator|.
name|translated
argument_list|(
name|grandChild
operator|.
name|mapTo
argument_list|(
operator|&
name|topLevel
argument_list|,
name|QPoint
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|grandChildMask
operator|.
name|translated
argument_list|(
name|grandChild
operator|.
name|pos
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|grandChildMask
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
name|child
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|)
expr_stmt|;
comment|// All widgets are now opaque, which means no composition, i.e.
comment|// the update does not propate to ancestors and children.
comment|// TopLevel update.
name|RESET_WIDGETS
expr_stmt|;
name|topLevel
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QRegion
name|expectedTopLevelUpdate
init|=
name|topLevelMask
decl_stmt|;
name|expectedTopLevelUpdate
operator|-=
name|childMask
operator|.
name|translated
argument_list|(
name|child
operator|.
name|pos
argument_list|()
argument_list|)
expr_stmt|;
comment|// Subtract opaque children.
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|expectedTopLevelUpdate
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
comment|// Child update.
name|RESET_WIDGETS
expr_stmt|;
name|child
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QRegion
name|expectedChildUpdate
init|=
name|childMask
decl_stmt|;
name|expectedChildUpdate
operator|-=
name|grandChildMask
operator|.
name|translated
argument_list|(
name|grandChild
operator|.
name|pos
argument_list|()
argument_list|)
expr_stmt|;
comment|// Subtract oapque children.
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|expectedChildUpdate
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
comment|// GrandChild update.
name|RESET_WIDGETS
expr_stmt|;
name|grandChild
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|grandChildMask
argument_list|)
expr_stmt|;
comment|// GrandChild update.
name|CLEAR_MASK
argument_list|(
name|grandChild
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QRegion
name|expectedGrandChildUpdate
init|=
name|grandChild
operator|.
name|rect
argument_list|()
decl_stmt|;
comment|// Clip with parent's mask.
name|expectedGrandChildUpdate
operator|&=
name|childMask
operator|.
name|translated
argument_list|(
operator|-
name|grandChild
operator|.
name|pos
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|expectedGrandChildUpdate
argument_list|)
expr_stmt|;
comment|// GrandChild update.
name|CLEAR_MASK
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|expectedGrandChildUpdate
operator|=
name|grandChild
operator|.
name|rect
argument_list|()
expr_stmt|;
comment|// Clip with parent's mask.
name|expectedGrandChildUpdate
operator|&=
name|topLevelMask
operator|.
name|translated
argument_list|(
operator|-
name|grandChild
operator|.
name|mapTo
argument_list|(
operator|&
name|topLevel
argument_list|,
name|QPoint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|expectedGrandChildUpdate
argument_list|)
expr_stmt|;
comment|// Child update.
name|RESET_WIDGETS
expr_stmt|;
name|child
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|expectedChildUpdate
operator|=
name|child
operator|.
name|rect
argument_list|()
expr_stmt|;
comment|// Clip with parent's mask.
name|expectedChildUpdate
operator|&=
name|topLevelMask
operator|.
name|translated
argument_list|(
operator|-
name|child
operator|.
name|pos
argument_list|()
argument_list|)
expr_stmt|;
name|expectedChildUpdate
operator|-=
name|grandChild
operator|.
name|geometry
argument_list|()
expr_stmt|;
comment|// Subtract opaque children.
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|expectedChildUpdate
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
comment|// GrandChild update.
name|CLEAR_MASK
argument_list|(
name|topLevel
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|update
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|topLevel
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|grandChild
operator|.
name|paintedRegion
argument_list|,
name|QRegion
argument_list|(
name|grandChild
operator|.
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Full update.
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_QPA
argument_list|)
end_if
begin_function
DECL|function|syntheticEnterLeave
name|void
name|tst_QWidget
operator|::
name|syntheticEnterLeave
parameter_list|()
block|{
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|MyWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|numEnterEvents
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|numLeaveEvents
argument_list|(
literal|0
argument_list|)
block|{}
name|void
name|enterEvent
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
operator|++
name|numEnterEvents
expr_stmt|;
block|}
name|void
name|leaveEvent
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
operator|++
name|numLeaveEvents
expr_stmt|;
block|}
name|int
name|numEnterEvents
decl_stmt|;
name|int
name|numLeaveEvents
decl_stmt|;
block|}
class|;
name|QCursor
operator|::
name|setPos
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|MyWidget
name|window
decl_stmt|;
name|window
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|WindowStaysOnTopHint
argument_list|)
expr_stmt|;
name|window
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|MyWidget
modifier|*
name|child1
init|=
operator|new
name|MyWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child1
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|child1
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child1
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|child1
operator|->
name|setCursor
argument_list|(
name|Qt
operator|::
name|OpenHandCursor
argument_list|)
expr_stmt|;
name|MyWidget
modifier|*
name|child2
init|=
operator|new
name|MyWidget
argument_list|(
operator|&
name|window
argument_list|)
decl_stmt|;
name|child2
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|MyWidget
modifier|*
name|grandChild
init|=
operator|new
name|MyWidget
argument_list|(
name|child2
argument_list|)
decl_stmt|;
name|grandChild
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setCursor
argument_list|(
name|Qt
operator|::
name|WaitCursor
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
name|window
operator|.
name|raise
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|window
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|300
argument_list|)
expr_stmt|;
DECL|macro|RESET_EVENT_COUNTS
define|#
directive|define
name|RESET_EVENT_COUNTS
define|\
value|window.numEnterEvents = 0; \     window.numLeaveEvents = 0; \     child1->numEnterEvents = 0; \     child1->numLeaveEvents = 0; \     child2->numEnterEvents = 0; \     child2->numLeaveEvents = 0; \     grandChild->numEnterEvents = 0; \     grandChild->numLeaveEvents = 0;
comment|// Position the cursor in the middle of the window.
specifier|const
name|QPoint
name|globalPos
init|=
name|window
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|QCursor
operator|::
name|setPos
argument_list|(
name|globalPos
argument_list|)
expr_stmt|;
comment|// Enter child2 and grandChild.
name|QTest
operator|::
name|qWait
argument_list|(
literal|300
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE_WM
name|QSKIP
argument_list|(
literal|"Windows Mobile has no proper cursor support"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|window
operator|.
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|grandChild
operator|->
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// This event arrives asynchronously
name|QTRY_COMPARE
argument_list|(
name|window
operator|.
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|grandChild
operator|->
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numEnterEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|RESET_EVENT_COUNTS
expr_stmt|;
name|child2
operator|->
name|hide
argument_list|()
expr_stmt|;
comment|// Leave child2 and grandChild, enter child1.
name|QCOMPARE
argument_list|(
name|window
operator|.
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|numLeaveEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|grandChild
operator|->
name|numLeaveEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|numEnterEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|numEnterEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|grandChild
operator|->
name|numEnterEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|RESET_EVENT_COUNTS
expr_stmt|;
name|child2
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// Leave child1, enter child2 and grandChild.
name|QCOMPARE
argument_list|(
name|window
operator|.
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|grandChild
operator|->
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numLeaveEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|numEnterEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child2
operator|->
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|grandChild
operator|->
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numEnterEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|RESET_EVENT_COUNTS
expr_stmt|;
operator|delete
name|child2
expr_stmt|;
comment|// Enter child1 (and do not send leave events to child2 and grandChild).
name|QCOMPARE
argument_list|(
name|window
operator|.
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numLeaveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|window
operator|.
name|numEnterEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child1
operator|->
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_4055_sendSyntheticEnterLeave
name|void
name|tst_QWidget
operator|::
name|taskQTBUG_4055_sendSyntheticEnterLeave
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE_WM
name|QSKIP
argument_list|(
literal|"Windows Mobile has no proper cursor support"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
class|class
name|SELParent
super|:
specifier|public
name|QWidget
block|{
public|public:
name|SELParent
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{ }
name|void
name|mousePressEvent
parameter_list|(
name|QMouseEvent
modifier|*
parameter_list|)
block|{
name|child
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
name|QWidget
modifier|*
name|child
decl_stmt|;
block|}
class|;
class|class
name|SELChild
super|:
specifier|public
name|QWidget
block|{
public|public:
name|SELChild
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|numEnterEvents
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|numMouseMoveEvents
argument_list|(
literal|0
argument_list|)
block|{}
name|void
name|enterEvent
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
operator|++
name|numEnterEvents
expr_stmt|;
block|}
name|void
name|mouseMoveEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|QCOMPARE
argument_list|(
name|event
operator|->
name|button
argument_list|()
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|event
operator|->
name|buttons
argument_list|()
argument_list|,
name|Qt
operator|::
name|MouseButtons
argument_list|(
name|Qt
operator|::
name|NoButton
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|numMouseMoveEvents
expr_stmt|;
block|}
name|void
name|reset
parameter_list|()
block|{
name|numEnterEvents
operator|=
name|numMouseMoveEvents
operator|=
literal|0
expr_stmt|;
block|}
name|int
name|numEnterEvents
decl_stmt|,
name|numMouseMoveEvents
decl_stmt|;
block|}
class|;
name|QCursor
operator|::
name|setPos
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|SELParent
name|parent
decl_stmt|;
name|parent
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|SELChild
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|QCursor
operator|::
name|setPos
argument_list|(
name|child
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure the cursor has entered the child.
name|QTRY_VERIFY
argument_list|(
name|child
operator|.
name|numEnterEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|child
operator|.
name|hide
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Make sure the child gets enter event and no mouse move event.
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numMouseMoveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child
operator|.
name|hide
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|setMouseTracking
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Make sure the child gets enter event and mouse move event.
comment|// Note that we verify event->button() and event->buttons()
comment|// in SELChild::mouseMoveEvent().
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numMouseMoveEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Sending synthetic enter/leave trough the parent's mousePressEvent handler.
name|parent
operator|.
name|child
operator|=
operator|&
name|child
expr_stmt|;
name|child
operator|.
name|hide
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|parent
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
comment|// Make sure the child gets enter event and one mouse move event.
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numMouseMoveEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|child
operator|.
name|hide
argument_list|()
expr_stmt|;
name|child
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|.
name|setMouseTracking
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|parent
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
comment|// Make sure the child gets enter event and no mouse move event.
name|QTRY_COMPARE
argument_list|(
name|child
operator|.
name|numEnterEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|numMouseMoveEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|windowFlags
name|void
name|tst_QWidget
operator|::
name|windowFlags
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|setWindowFlags
argument_list|(
name|w
operator|.
name|windowFlags
argument_list|()
operator||
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|windowFlags
argument_list|()
operator|&
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initialPosForDontShowOnScreenWidgets
name|void
name|tst_QWidget
operator|::
name|initialPosForDontShowOnScreenWidgets
parameter_list|()
block|{
block|{
comment|// Check default position.
specifier|const
name|QPoint
name|expectedPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
expr_stmt|;
name|widget
operator|.
name|winId
argument_list|()
expr_stmt|;
comment|// Make sure create_sys is called.
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|expectedPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|,
name|expectedPos
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Explicitly move to a position.
specifier|const
name|QPoint
name|expectedPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_DontShowOnScreen
argument_list|)
expr_stmt|;
name|widget
operator|.
name|move
argument_list|(
name|expectedPos
argument_list|)
expr_stmt|;
name|widget
operator|.
name|winId
argument_list|()
expr_stmt|;
comment|// Make sure create_sys is called.
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|pos
argument_list|()
argument_list|,
name|expectedPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|,
name|expectedPos
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_X11
end_ifdef
begin_function
DECL|function|paintOutsidePaintEvent
name|void
name|tst_QWidget
operator|::
name|paintOutsidePaintEvent
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QWidget
name|child1
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|child1
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|child1
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QWidget
name|child2
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|child2
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|60
argument_list|)
expr_stmt|;
specifier|const
name|QPixmap
name|before
init|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|widget
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
comment|// Child 1 should be clipped by child 2, so nothing should change.
name|child1
operator|.
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOutsidePaintEvent
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|child1
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|child1
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|XSync
argument_list|(
name|QX11Info
operator|::
name|display
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Flush output buffer.
name|QTest
operator|::
name|qWait
argument_list|(
literal|60
argument_list|)
expr_stmt|;
specifier|const
name|QPixmap
name|after
init|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|widget
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|before
argument_list|,
name|after
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|MyEvilObject
class|class
name|MyEvilObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|MyEvilObject
name|MyEvilObject
parameter_list|(
name|QWidget
modifier|*
name|widgetToCrash
parameter_list|)
member_init_list|:
name|QObject
argument_list|()
member_init_list|,
name|widget
argument_list|(
name|widgetToCrash
argument_list|)
block|{
name|connect
argument_list|(
name|widget
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|beEvil
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
DECL|member|widget
name|QWidget
modifier|*
name|widget
decl_stmt|;
private|private
name|slots
private|:
DECL|function|beEvil
name|void
name|beEvil
parameter_list|(
name|QObject
modifier|*
parameter_list|)
block|{
name|widget
operator|->
name|update
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|updateOnDestroyedSignal
name|void
name|tst_QWidget
operator|::
name|updateOnDestroyedSignal
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|child
operator|->
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_X11
name|qt_x11_wait_for_window_manager
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|// Please do not crash.
name|MyEvilObject
name|evil
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toplevelLineEditFocus
name|void
name|tst_QWidget
operator|::
name|toplevelLineEditFocus
parameter_list|()
block|{
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QLineEdit
name|w
decl_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|w
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|w
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusWidget_task254563
name|void
name|tst_QWidget
operator|::
name|focusWidget_task254563
parameter_list|()
block|{
comment|//having different visibility for widget is important
name|QWidget
name|top
decl_stmt|;
name|top
operator|.
name|show
argument_list|()
expr_stmt|;
name|QWidget
name|container
argument_list|(
operator|&
name|top
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|container
argument_list|)
decl_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|widget
operator|->
name|setFocus
argument_list|()
expr_stmt|;
comment|//set focus (will set the focus widget up to the toplevel to be 'widget')
name|container
operator|.
name|setFocus
argument_list|()
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
comment|// will call clearFocus but that doesn't help
name|QVERIFY
argument_list|(
name|top
operator|.
name|focusWidget
argument_list|()
operator|!=
name|widget
argument_list|)
expr_stmt|;
comment|//dangling pointer
block|}
end_function
begin_function
DECL|function|destroyBackingStore
name|void
name|tst_QWidget
operator|::
name|destroyBackingStore
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|UpdateWidget
name|w
decl_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|w
operator|.
name|numPaintEvents
operator|>
literal|0
argument_list|)
expr_stmt|;
name|w
operator|.
name|reset
argument_list|()
expr_stmt|;
name|w
operator|.
name|update
argument_list|()
expr_stmt|;
name|qt_widget_private
argument_list|(
operator|&
name|w
argument_list|)
operator|->
name|topData
argument_list|()
operator|->
name|backingStore
operator|.
name|create
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|w
operator|.
name|update
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Check one more time, because the second time around does more caching.
name|w
operator|.
name|update
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|numPaintEvents
argument_list|,
literal|2
argument_list|)
expr_stmt|;
else|#
directive|else
name|QSKIP
argument_list|(
literal|"Test case relies on developer build (AUTOTEST_EXPORT)"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_comment
comment|// Helper function
end_comment
begin_function
DECL|function|backingStore
name|QWidgetBackingStore
modifier|*
name|backingStore
parameter_list|(
name|QWidget
modifier|&
name|widget
parameter_list|)
block|{
name|QWidgetBackingStore
modifier|*
name|backingStore
init|=
literal|0
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
if|if
condition|(
name|QTLWExtra
modifier|*
name|topExtra
init|=
name|qt_widget_private
argument_list|(
operator|&
name|widget
argument_list|)
operator|->
name|maybeTopData
argument_list|()
condition|)
name|backingStore
operator|=
name|topExtra
operator|->
name|backingStore
operator|.
name|data
argument_list|()
expr_stmt|;
endif|#
directive|endif
return|return
name|backingStore
return|;
block|}
end_function
begin_comment
comment|// Wait for a condition to be true, timing out after 1 second
end_comment
begin_comment
comment|// This is used following calls to QWidget::show() and QWidget::hide(), which are
end_comment
begin_comment
comment|// expected to asynchronously trigger native window visibility events.
end_comment
begin_define
DECL|macro|WAIT_AND_VERIFY
define|#
directive|define
name|WAIT_AND_VERIFY
parameter_list|(
name|condition
parameter_list|)
define|\
value|do {                                                                        \         QTime start = QTime::currentTime();                                     \         while (!(condition)&& (start.elapsed()< 1000)) {                      \             qApp->processEvents();                                              \             QTest::qWait(50);                                                   \         }                                                                       \         if (!QTest::qVerify((condition), #condition, "", __FILE__, __LINE__))   \             return;                                                             \     } while (0)
end_define
begin_function
DECL|function|destroyBackingStoreWhenHidden
name|void
name|tst_QWidget
operator|::
name|destroyBackingStoreWhenHidden
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_BUILD_INTERNAL
name|QSKIP
argument_list|(
literal|"Test step requires access to Q_AUTOTEST_EXPORT"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|Q_OS_SYMBIAN
name|QSKIP
argument_list|(
literal|"Only Symbian destroys backing store when native window becomes invisible"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// 1. Single top-level QWidget
block|{
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|w
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|hide
argument_list|()
expr_stmt|;
name|WAIT_AND_VERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// 2. Two top-level widgets
block|{
name|QWidget
name|w1
decl_stmt|;
name|w1
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|w1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
name|w2
decl_stmt|;
name|w2
operator|.
name|setGeometry
argument_list|(
name|w1
operator|.
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|w1
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|w2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|w2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check that w1 deleted its backing store when obscured by w2
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
name|w2
operator|.
name|move
argument_list|(
name|w2
operator|.
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check that w1 recreates its backing store when partially revealed
name|WAIT_AND_VERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|w1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// 3. Native child widget
block|{
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QVBoxLayout
name|layout
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|layout
operator|.
name|setContentsMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setLayout
argument_list|(
operator|&
name|layout
argument_list|)
expr_stmt|;
name|child
operator|.
name|winId
argument_list|()
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
comment|// Check that child window does not obscure parent window
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Native child widget should share parent's backing store
name|QWidgetBackingStore
modifier|*
specifier|const
name|parentBs
init|=
name|backingStore
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|parentBs
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set margins to zero so that child widget totally obscures parent
name|layout
operator|.
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|WAIT_AND_VERIFY
argument_list|(
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Backing store should remain unchanged despite child window obscuring
comment|// parent window
name|QVERIFY
argument_list|(
name|parentBs
operator|==
name|backingStore
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// 4. Alien child widget which is made full-screen
block|{
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QVBoxLayout
name|layout
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|layout
operator|.
name|setContentsMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setLayout
argument_list|(
operator|&
name|layout
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
comment|// Check that child window does not obscure parent window
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Native child widget should share parent's backing store
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make child widget full screen
name|child
operator|.
name|setWindowFlags
argument_list|(
operator|(
name|child
operator|.
name|windowFlags
argument_list|()
operator||
name|Qt
operator|::
name|Window
operator|)
operator|^
name|Qt
operator|::
name|SubWindow
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowState
argument_list|(
name|child
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
comment|// Check that child window obscures parent window
name|QVERIFY
argument_list|(
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now that extent of child widget goes beyond parent's extent,
comment|// a new backing store should be created for the child widget.
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
comment|// Parent is obscured, therefore its backing store should be destroyed
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
comment|// Disable full screen
name|child
operator|.
name|setWindowFlags
argument_list|(
name|child
operator|.
name|windowFlags
argument_list|()
operator|^
operator|(
name|Qt
operator|::
name|Window
operator||
name|Qt
operator|::
name|SubWindow
operator|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowState
argument_list|(
name|child
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
comment|// Check that parent is now visible again
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Native child widget should once again share parent's backing store
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// 5. Native child widget which is made full-screen
block|{
name|QWidget
name|parent
decl_stmt|;
name|parent
operator|.
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QWidget
name|child
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QWidget
name|grandChild
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|grandChild
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|grandChild
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
name|QVBoxLayout
name|layout
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|layout
operator|.
name|setContentsMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|layout
operator|.
name|addWidget
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setLayout
argument_list|(
operator|&
name|layout
argument_list|)
expr_stmt|;
name|QVBoxLayout
name|childLayout
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|childLayout
operator|.
name|setContentsMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|childLayout
operator|.
name|addWidget
argument_list|(
operator|&
name|grandChild
argument_list|)
expr_stmt|;
name|child
operator|.
name|setLayout
argument_list|(
operator|&
name|childLayout
argument_list|)
expr_stmt|;
comment|// Ensure that this widget and all its ancestors are native
name|grandChild
operator|.
name|winId
argument_list|()
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
comment|// Check that child window does not obscure parent window
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Native child widget should share parent's backing store
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|grandChild
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make child widget full screen
name|child
operator|.
name|setWindowFlags
argument_list|(
operator|(
name|child
operator|.
name|windowFlags
argument_list|()
operator||
name|Qt
operator|::
name|Window
operator|)
operator|^
name|Qt
operator|::
name|SubWindow
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowState
argument_list|(
name|child
operator|.
name|windowState
argument_list|()
operator||
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Paint into the child to ensure that it gets a backing store
name|QPainter
name|painter
argument_list|(
operator|&
name|child
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|90
argument_list|,
literal|90
argument_list|)
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
comment|// Ensure that 'window hidden' event is received by parent
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|// Check that child window obscures parent window
name|QVERIFY
argument_list|(
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
operator|+
name|grandChild
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Now that extent of child widget goes beyond parent's extent,
comment|// a new backing store should be created for the child widget.
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
comment|// Parent is obscured, therefore its backing store should be destroyed
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
comment|// Disable full screen
name|child
operator|.
name|setWindowFlags
argument_list|(
name|child
operator|.
name|windowFlags
argument_list|()
operator|^
operator|(
name|Qt
operator|::
name|Window
operator||
name|Qt
operator|::
name|SubWindow
operator|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setWindowState
argument_list|(
name|child
operator|.
name|windowState
argument_list|()
operator|^
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|child
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|child
argument_list|)
expr_stmt|;
comment|// Check that parent is now visible again
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|child
operator|.
name|visibleRegion
argument_list|()
operator|+
name|grandChild
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Native child widget should once again share parent's backing store
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|grandChild
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// 6. Partial reveal followed by full reveal
block|{
name|QWidget
name|upper
decl_stmt|;
name|upper
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|upper
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|upper
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QWidget
name|lower
decl_stmt|;
name|lower
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|lower
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|lower
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|lower
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|lower
argument_list|)
expr_stmt|;
name|upper
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|upper
argument_list|)
expr_stmt|;
name|upper
operator|.
name|raise
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|upper
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|lower
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check that upper obscures lower
name|QVERIFY
argument_list|(
name|lower
operator|.
name|visibleRegion
argument_list|()
operator|.
name|subtracted
argument_list|(
name|upper
operator|.
name|visibleRegion
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// Partially reveal lower
name|upper
operator|.
name|move
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|// Completely reveal lower
name|upper
operator|.
name|hide
argument_list|()
expr_stmt|;
comment|// Hide lower widget - this should cause its backing store to be deleted
name|lower
operator|.
name|hide
argument_list|()
expr_stmt|;
comment|// Check that backing store was deleted
name|WAIT_AND_VERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|lower
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// 7. Reparenting of visible native child widget
block|{
name|QWidget
name|parent1
decl_stmt|;
name|parent1
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent1
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|parent1
operator|.
name|setGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|parent1
argument_list|)
decl_stmt|;
name|child
operator|->
name|winId
argument_list|()
expr_stmt|;
name|child
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|child
operator|->
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QWidget
name|parent2
decl_stmt|;
name|parent2
operator|.
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent2
operator|.
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|parent2
operator|.
name|setGeometry
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|parent1
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|parent1
argument_list|)
argument_list|)
expr_stmt|;
name|parent2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|0
operator|!=
name|backingStore
argument_list|(
name|parent2
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|->
name|setParent
argument_list|(
operator|&
name|parent2
argument_list|)
expr_stmt|;
name|child
operator|->
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|child
operator|->
name|show
argument_list|()
expr_stmt|;
name|parent1
operator|.
name|hide
argument_list|()
expr_stmt|;
name|WAIT_AND_VERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|parent1
argument_list|)
argument_list|)
expr_stmt|;
name|parent2
operator|.
name|hide
argument_list|()
expr_stmt|;
name|WAIT_AND_VERIFY
argument_list|(
literal|0
operator|==
name|backingStore
argument_list|(
name|parent2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_undef
DECL|macro|WAIT_AND_VERIFY
undef|#
directive|undef
name|WAIT_AND_VERIFY
end_undef
begin_function
DECL|function|rectOutsideCoordinatesLimit_task144779
name|void
name|tst_QWidget
operator|::
name|rectOutsideCoordinatesLimit_task144779
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE_WM
name|QSKIP
argument_list|(
literal|"Tables of 5000 elements do not make sense on Windows Mobile."
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QApplication
operator|::
name|setOverrideCursor
argument_list|(
name|Qt
operator|::
name|BlankCursor
argument_list|)
expr_stmt|;
comment|//keep the cursor out of screen grabs
name|QWidget
decl|main
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
decl_stmt|;
comment|//don't get confused by the size of the window frame
name|QPalette
name|palette
decl_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
expr|main
operator|.
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|QDesktopWidget
name|desktop
decl_stmt|;
name|QRect
name|desktopDimensions
init|=
name|desktop
operator|.
name|availableGeometry
argument_list|(
operator|&
expr|main
argument_list|)
decl_stmt|;
name|QSize
name|mainSize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
decl_stmt|;
name|mainSize
operator|=
name|mainSize
operator|.
name|boundedTo
argument_list|(
name|desktopDimensions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
expr|main
operator|.
name|resize
argument_list|(
name|mainSize
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|offsetWidget
init|=
operator|new
name|QWidget
argument_list|(
operator|&
expr|main
argument_list|)
decl_stmt|;
name|offsetWidget
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
operator|-
operator|(
literal|15000
operator|-
name|mainSize
operator|.
name|height
argument_list|()
operator|)
argument_list|,
name|mainSize
operator|.
name|width
argument_list|()
argument_list|,
literal|15000
argument_list|)
expr_stmt|;
comment|// big widget is too big for the coordinates, it must be limited by wrect
comment|// if wrect is not at the right position because of offsetWidget, bigwidget
comment|// is not painted correctly
name|QWidget
modifier|*
name|bigWidget
init|=
operator|new
name|QWidget
argument_list|(
name|offsetWidget
argument_list|)
decl_stmt|;
name|bigWidget
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|mainSize
operator|.
name|width
argument_list|()
argument_list|,
literal|50000
argument_list|)
expr_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|bigWidget
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|bigWidget
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
expr|main
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
expr|main
argument_list|)
expr_stmt|;
name|QPixmap
name|correct
argument_list|(
expr|main
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|correct
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|QPixmap
operator|::
name|grabWindow
argument_list|(
expr|main
operator|.
name|winId
argument_list|()
argument_list|)
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_RGB32
argument_list|)
argument_list|,
name|correct
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|QImage
operator|::
name|Format_RGB32
argument_list|)
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|restoreOverrideCursor
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|inputFocus_task257832
name|void
name|tst_QWidget
operator|::
name|inputFocus_task257832
parameter_list|()
block|{
name|QLineEdit
modifier|*
name|widget
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QInputContext
modifier|*
name|context
init|=
name|widget
operator|->
name|inputContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
name|QSKIP
argument_list|(
literal|"No input context"
argument_list|,
name|SkipSingle
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|widget
operator|->
name|winId
argument_list|()
expr_stmt|;
comment|// make sure, widget has been created
name|context
operator|->
name|setFocusWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|context
operator|->
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|context
operator|->
name|focusWidget
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGraphicsEffect
name|void
name|tst_QWidget
operator|::
name|setGraphicsEffect
parameter_list|()
block|{
comment|// Check that we don't have any effect by default.
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|graphicsEffect
argument_list|()
argument_list|)
expr_stmt|;
comment|// SetGet check.
name|QPointer
argument_list|<
name|QGraphicsEffect
argument_list|>
name|blurEffect
init|=
operator|new
name|QGraphicsBlurEffect
decl_stmt|;
name|widget
operator|->
name|setGraphicsEffect
argument_list|(
name|blurEffect
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|graphicsEffect
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QGraphicsEffect
operator|*
argument_list|>
argument_list|(
name|blurEffect
argument_list|)
argument_list|)
expr_stmt|;
comment|// Ensure the existing effect is deleted when setting a new one.
name|QPointer
argument_list|<
name|QGraphicsEffect
argument_list|>
name|shadowEffect
init|=
operator|new
name|QGraphicsDropShadowEffect
decl_stmt|;
name|widget
operator|->
name|setGraphicsEffect
argument_list|(
name|shadowEffect
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|blurEffect
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|->
name|graphicsEffect
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QGraphicsEffect
operator|*
argument_list|>
argument_list|(
name|shadowEffect
argument_list|)
argument_list|)
expr_stmt|;
name|blurEffect
operator|=
operator|new
name|QGraphicsBlurEffect
expr_stmt|;
comment|// Ensure the effect is uninstalled when setting it on a new target.
name|QWidget
modifier|*
name|anotherWidget
init|=
operator|new
name|QWidget
decl_stmt|;
name|anotherWidget
operator|->
name|setGraphicsEffect
argument_list|(
name|blurEffect
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setGraphicsEffect
argument_list|(
name|blurEffect
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|anotherWidget
operator|->
name|graphicsEffect
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|shadowEffect
argument_list|)
expr_stmt|;
comment|// Ensure the existing effect is deleted when deleting the widget.
operator|delete
name|widget
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|blurEffect
argument_list|)
expr_stmt|;
operator|delete
name|anotherWidget
expr_stmt|;
comment|// Ensure the effect is uninstalled when deleting it
name|widget
operator|=
operator|new
name|QWidget
expr_stmt|;
name|blurEffect
operator|=
operator|new
name|QGraphicsBlurEffect
expr_stmt|;
name|widget
operator|->
name|setGraphicsEffect
argument_list|(
name|blurEffect
argument_list|)
expr_stmt|;
operator|delete
name|blurEffect
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|graphicsEffect
argument_list|()
argument_list|)
expr_stmt|;
comment|// Ensure the existing effect is uninstalled and deleted when setting a null effect
name|blurEffect
operator|=
operator|new
name|QGraphicsBlurEffect
expr_stmt|;
name|widget
operator|->
name|setGraphicsEffect
argument_list|(
name|blurEffect
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setGraphicsEffect
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|widget
operator|->
name|graphicsEffect
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|blurEffect
argument_list|)
expr_stmt|;
operator|delete
name|widget
expr_stmt|;
block|}
end_function
begin_function
DECL|function|activateWindow
name|void
name|tst_QWidget
operator|::
name|activateWindow
parameter_list|()
block|{
comment|// Test case for task 260685
comment|// Create first mainwindow and set it active
name|QMainWindow
modifier|*
name|mainwindow
init|=
operator|new
name|QMainWindow
argument_list|()
decl_stmt|;
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|mainwindow
argument_list|)
decl_stmt|;
name|mainwindow
operator|->
name|setCentralWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|mainwindow
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|mainwindow
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|mainwindow
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|mainwindow
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
comment|// Create second mainwindow and set it active
name|QMainWindow
modifier|*
name|mainwindow2
init|=
operator|new
name|QMainWindow
argument_list|()
decl_stmt|;
name|QLabel
modifier|*
name|label2
init|=
operator|new
name|QLabel
argument_list|(
name|mainwindow2
argument_list|)
decl_stmt|;
name|mainwindow2
operator|->
name|setCentralWidget
argument_list|(
name|label2
argument_list|)
expr_stmt|;
name|mainwindow2
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|mainwindow2
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|mainwindow
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|mainwindow2
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
comment|// Revert first mainwindow back to visible active
name|mainwindow
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|mainwindow
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|mainwindow
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|mainwindow2
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|openModal_taskQTBUG_5804
name|void
name|tst_QWidget
operator|::
name|openModal_taskQTBUG_5804
parameter_list|()
block|{
class|class
name|Widget
super|:
specifier|public
name|QWidget
block|{
public|public:
name|Widget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{         }
name|~
name|Widget
parameter_list|()
block|{
name|QMessageBox
name|msgbox
decl_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|10
argument_list|,
operator|&
name|msgbox
argument_list|,
name|SLOT
argument_list|(
name|accept
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|msgbox
operator|.
name|exec
argument_list|()
expr_stmt|;
comment|//open a modal dialog
block|}
block|}
class|;
name|QWidget
modifier|*
name|win
init|=
operator|new
name|QWidget
decl_stmt|;
operator|new
name|Widget
argument_list|(
name|win
argument_list|)
expr_stmt|;
name|win
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|win
argument_list|)
expr_stmt|;
operator|delete
name|win
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
end_ifdef
begin_function
DECL|function|cbaVisibility
name|void
name|tst_QWidget
operator|::
name|cbaVisibility
parameter_list|()
block|{
comment|// Test case for task 261048
comment|// Create first mainwindow in fullsreen and activate it
name|QMainWindow
modifier|*
name|mainwindow
init|=
operator|new
name|QMainWindow
argument_list|()
decl_stmt|;
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|mainwindow
argument_list|)
decl_stmt|;
name|mainwindow
operator|->
name|setCentralWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|mainwindow
operator|->
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|mainwindow
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|mainwindow
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|mainwindow
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDesktopWidget
argument_list|()
operator|.
name|availableGeometry
argument_list|()
operator|.
name|size
argument_list|()
operator|==
name|mainwindow
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Create second mainwindow in maximized and activate it
name|QMainWindow
modifier|*
name|mainwindow2
init|=
operator|new
name|QMainWindow
argument_list|()
decl_stmt|;
name|QLabel
modifier|*
name|label2
init|=
operator|new
name|QLabel
argument_list|(
name|mainwindow2
argument_list|)
decl_stmt|;
name|mainwindow2
operator|->
name|setCentralWidget
argument_list|(
name|label2
argument_list|)
expr_stmt|;
name|mainwindow2
operator|->
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|mainwindow2
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|mainwindow2
operator|->
name|activateWindow
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|mainwindow
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mainwindow2
operator|->
name|isActiveWindow
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDesktopWidget
argument_list|()
operator|.
name|availableGeometry
argument_list|()
operator|.
name|size
argument_list|()
operator|==
name|mainwindow2
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Verify window decorations i.e. status pane and CBA are visible.
name|CEikStatusPane
modifier|*
name|statusPane
init|=
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|StatusPane
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|CEikButtonGroupContainer
modifier|*
name|buttonGroup
init|=
name|CEikButtonGroupContainer
operator|::
name|Current
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fullScreenWindowModeTransitions
name|void
name|tst_QWidget
operator|::
name|fullScreenWindowModeTransitions
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"test Button"
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|normalGeometry
init|=
name|widget
operator|.
name|normalGeometry
argument_list|()
decl_stmt|;
specifier|const
name|QRect
name|fullScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|screenGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|maximumScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|CEikStatusPane
modifier|*
name|statusPane
init|=
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|StatusPane
argument_list|()
decl_stmt|;
name|CEikButtonGroupContainer
modifier|*
name|buttonGroup
init|=
name|CEikButtonGroupContainer
operator|::
name|Current
argument_list|()
decl_stmt|;
comment|//Enter
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|//Exit
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|maximumScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maximizedWindowModeTransitions
name|void
name|tst_QWidget
operator|::
name|maximizedWindowModeTransitions
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"test Button"
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|normalGeometry
init|=
name|widget
operator|.
name|normalGeometry
argument_list|()
decl_stmt|;
specifier|const
name|QRect
name|fullScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|screenGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|maximumScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|CEikStatusPane
modifier|*
name|statusPane
init|=
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|StatusPane
argument_list|()
decl_stmt|;
name|CEikButtonGroupContainer
modifier|*
name|buttonGroup
init|=
name|CEikButtonGroupContainer
operator|::
name|Current
argument_list|()
decl_stmt|;
comment|//Enter
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|maximumScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|maximumScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|maximumScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|//Exit
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
comment|// Since showMinimized hides window decoration availableGeometry gives different value
comment|// than with decoration visible. Altual size does not really matter since widget is invisible.
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minimizedWindowModeTransitions
name|void
name|tst_QWidget
operator|::
name|minimizedWindowModeTransitions
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"test Button"
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|normalGeometry
init|=
name|widget
operator|.
name|normalGeometry
argument_list|()
decl_stmt|;
specifier|const
name|QRect
name|fullScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|screenGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|maximumScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|CEikStatusPane
modifier|*
name|statusPane
init|=
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|StatusPane
argument_list|()
decl_stmt|;
name|CEikButtonGroupContainer
modifier|*
name|buttonGroup
init|=
name|CEikButtonGroupContainer
operator|::
name|Current
argument_list|()
decl_stmt|;
comment|//Enter
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
comment|// Since showMinimized hides window decoration availableGeometry gives different value
comment|// than with decoration visible. Altual size does not really matter since widget is invisible.
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|widget
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|//Exit
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|maximumScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|normalWindowModeTransitions
name|void
name|tst_QWidget
operator|::
name|normalWindowModeTransitions
parameter_list|()
block|{
name|QWidget
name|widget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"test Button"
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
specifier|const
name|QRect
name|normalGeometry
init|=
name|widget
operator|.
name|normalGeometry
argument_list|()
decl_stmt|;
specifier|const
name|QRect
name|fullScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|screenGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|maximumScreenGeometry
init|=
name|qApp
operator|->
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|CEikStatusPane
modifier|*
name|statusPane
init|=
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|StatusPane
argument_list|()
decl_stmt|;
name|CEikButtonGroupContainer
modifier|*
name|buttonGroup
init|=
name|CEikButtonGroupContainer
operator|::
name|Current
argument_list|()
decl_stmt|;
comment|//Enter
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|//Exit
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|maximumScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|fullScreenGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|widget
operator|.
name|showMinimized
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|geometry
argument_list|()
argument_list|,
name|normalGeometry
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buttonGroup
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|statusPane
operator|->
name|IsVisible
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusSwitchClosesPopupMenu
name|void
name|tst_QWidget
operator|::
name|focusSwitchClosesPopupMenu
parameter_list|()
block|{
name|QMainWindow
name|mainWindow
decl_stmt|;
name|QAction
name|action
argument_list|(
literal|"Test action"
argument_list|,
operator|&
name|mainWindow
argument_list|)
decl_stmt|;
name|mainWindow
operator|.
name|menuBar
argument_list|()
operator|->
name|addAction
argument_list|(
operator|&
name|action
argument_list|)
expr_stmt|;
name|mainWindow
operator|.
name|show
argument_list|()
expr_stmt|;
name|QT_TRAP_THROWING
argument_list|(
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|MenuBar
argument_list|()
operator|->
name|TryDisplayMenuBarL
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|MenuBar
argument_list|()
operator|->
name|IsDisplayed
argument_list|()
argument_list|)
expr_stmt|;
comment|// Close the popup by opening a new window.
name|QMainWindow
name|mainWindow2
decl_stmt|;
name|QAction
name|action2
argument_list|(
literal|"Test action"
argument_list|,
operator|&
name|mainWindow2
argument_list|)
decl_stmt|;
name|mainWindow2
operator|.
name|menuBar
argument_list|()
operator|->
name|addAction
argument_list|(
operator|&
name|action2
argument_list|)
expr_stmt|;
name|mainWindow2
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|MenuBar
argument_list|()
operator|->
name|IsDisplayed
argument_list|()
argument_list|)
expr_stmt|;
name|QT_TRAP_THROWING
argument_list|(
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|MenuBar
argument_list|()
operator|->
name|TryDisplayMenuBarL
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|MenuBar
argument_list|()
operator|->
name|IsDisplayed
argument_list|()
argument_list|)
expr_stmt|;
comment|// Close the popup by switching focus.
name|mainWindow
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|CEikonEnv
operator|::
name|Static
argument_list|()
operator|->
name|AppUiFactory
argument_list|()
operator|->
name|MenuBar
argument_list|()
operator|->
name|IsDisplayed
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|InputContextTester
class|class
name|InputContextTester
super|:
specifier|public
name|QInputContext
block|{
name|Q_OBJECT
public|public:
DECL|function|identifierName
name|QString
name|identifierName
parameter_list|()
block|{
return|return
name|QString
argument_list|()
return|;
block|}
DECL|function|isComposing
name|bool
name|isComposing
parameter_list|()
specifier|const
block|{
return|return
literal|false
return|;
block|}
DECL|function|language
name|QString
name|language
parameter_list|()
block|{
return|return
name|QString
argument_list|()
return|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
operator|++
name|resets
expr_stmt|;
block|}
DECL|member|resets
name|int
name|resets
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|focusProxyAndInputMethods
name|void
name|tst_QWidget
operator|::
name|focusProxyAndInputMethods
parameter_list|()
block|{
name|InputContextTester
modifier|*
name|inputContext
init|=
operator|new
name|InputContextTester
decl_stmt|;
name|QWidget
modifier|*
name|toplevel
init|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
decl_stmt|;
name|toplevel
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|toplevel
operator|->
name|setInputContext
argument_list|(
name|inputContext
argument_list|)
expr_stmt|;
comment|// ownership is transferred
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
name|toplevel
argument_list|)
decl_stmt|;
name|child
operator|->
name|setFocusProxy
argument_list|(
name|toplevel
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|toplevel
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|WheelFocus
argument_list|)
expr_stmt|;
name|child
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|WheelFocus
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|child
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|toplevel
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|toplevel
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|toplevel
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setActiveWindow
argument_list|(
name|toplevel
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toplevel
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|->
name|hasFocus
argument_list|()
argument_list|)
expr_stmt|;
comment|// verify that toggling input methods on the child widget
comment|// correctly propagate to the focus proxy's input method
comment|// and that the input method gets the focus proxy passed
comment|// as the focus widget instead of the child widget.
comment|// otherwise input method queries go to the wrong widget
name|QCOMPARE
argument_list|(
name|inputContext
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|toplevel
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|inputContext
operator|->
name|focusWidget
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_InputMethodEnabled
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|inputContext
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|toplevel
argument_list|)
expr_stmt|;
name|child
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|inputContext
operator|->
name|focusWidget
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|inputContext
operator|->
name|focusWidget
argument_list|()
argument_list|,
name|toplevel
argument_list|)
expr_stmt|;
operator|delete
name|toplevel
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_class
DECL|class|scrollWidgetWBS
class|class
name|scrollWidgetWBS
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|deleteBackingStore
name|void
name|deleteBackingStore
parameter_list|()
block|{
cast|static_cast
argument_list|<
name|QWidgetPrivate
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|.
name|data
argument_list|()
argument_list|)
operator|->
name|topData
argument_list|()
operator|->
name|backingStore
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
DECL|function|enableBackingStore
name|void
name|enableBackingStore
parameter_list|()
block|{
if|if
condition|(
operator|!
cast|static_cast
argument_list|<
name|QWidgetPrivate
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|.
name|data
argument_list|()
argument_list|)
operator|->
name|maybeBackingStore
argument_list|()
condition|)
block|{
cast|static_cast
argument_list|<
name|QWidgetPrivate
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|.
name|data
argument_list|()
argument_list|)
operator|->
name|topData
argument_list|()
operator|->
name|backingStore
operator|.
name|create
argument_list|(
name|this
argument_list|)
expr_stmt|;
cast|static_cast
argument_list|<
name|QWidgetPrivate
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|.
name|data
argument_list|()
argument_list|)
operator|->
name|invalidateBuffer
argument_list|(
name|this
operator|->
name|rect
argument_list|()
argument_list|)
expr_stmt|;
name|repaint
argument_list|()
expr_stmt|;
block|}
block|}
block|}
class|;
end_class
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|scrollWithoutBackingStore
name|void
name|tst_QWidget
operator|::
name|scrollWithoutBackingStore
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|scrollWidgetWBS
name|scrollable
decl_stmt|;
name|scrollable
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QLabel
name|child
argument_list|(
name|QString
argument_list|(
literal|"@"
argument_list|)
argument_list|,
operator|&
name|scrollable
argument_list|)
decl_stmt|;
name|child
operator|.
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|scrollable
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|scrollable
argument_list|)
expr_stmt|;
name|scrollable
operator|.
name|scroll
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|scrollable
operator|.
name|deleteBackingStore
argument_list|()
expr_stmt|;
name|scrollable
operator|.
name|scroll
argument_list|(
operator|-
literal|25
argument_list|,
operator|-
literal|25
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|scrollable
operator|.
name|enableBackingStore
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|pos
argument_list|()
argument_list|,
name|QPoint
argument_list|(
literal|25
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|QSKIP
argument_list|(
literal|"Test case relies on developer build (AUTOTEST_EXPORT)"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|taskQTBUG_7532_tabOrderWithFocusProxy
name|void
name|tst_QWidget
operator|::
name|taskQTBUG_7532_tabOrderWithFocusProxy
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|TabFocus
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|fp
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|w
argument_list|)
decl_stmt|;
name|fp
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|TabFocus
argument_list|)
expr_stmt|;
name|w
operator|.
name|setFocusProxy
argument_list|(
name|fp
argument_list|)
expr_stmt|;
name|QWidget
operator|::
name|setTabOrder
argument_list|(
operator|&
name|w
argument_list|,
name|fp
argument_list|)
expr_stmt|;
comment|// No Q_ASSERT, then it's allright.
block|}
end_function
begin_function
DECL|function|movedAndResizedAttributes
name|void
name|tst_QWidget
operator|::
name|movedAndResizedAttributes
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"FixMe, QTBUG-8941 and QTBUG-8977"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
argument_list|)
expr_stmt|;
else|#
directive|else
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowMaximized
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowMinimized
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|showFullScreen
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|showNormal
argument_list|()
expr_stmt|;
name|w
operator|.
name|move
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"FixMe, QTBUG-8911"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
operator|!
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Moved
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w
operator|.
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_Resized
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|childAt
name|void
name|tst_QWidget
operator|::
name|childAt
parameter_list|()
block|{
name|QWidget
name|parent
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|FramelessWindowHint
argument_list|)
decl_stmt|;
name|parent
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|child
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|child
operator|->
name|setGeometry
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|160
argument_list|,
literal|160
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|grandChild
init|=
operator|new
name|QWidget
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|grandChild
operator|->
name|setPalette
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setGeometry
argument_list|(
operator|-
literal|20
argument_list|,
operator|-
literal|20
argument_list|,
literal|220
argument_list|,
literal|220
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|childAt
argument_list|(
literal|19
argument_list|,
literal|19
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|childAt
argument_list|(
literal|180
argument_list|,
literal|180
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|179
argument_list|,
literal|179
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_TransparentForMouseEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|179
argument_list|,
literal|179
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_TransparentForMouseEvents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|child
operator|->
name|setMask
argument_list|(
name|QRect
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|60
argument_list|,
literal|60
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|childAt
argument_list|(
literal|69
argument_list|,
literal|69
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|parent
operator|.
name|childAt
argument_list|(
literal|130
argument_list|,
literal|130
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|129
argument_list|,
literal|129
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_MouseNoMask
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|69
argument_list|,
literal|69
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|130
argument_list|,
literal|130
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|child
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_MouseNoMask
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_TransparentForMouseEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|70
argument_list|,
literal|70
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|129
argument_list|,
literal|129
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_TransparentForMouseEvents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setMask
argument_list|(
name|QRect
argument_list|(
literal|80
argument_list|,
literal|80
argument_list|,
literal|40
argument_list|,
literal|40
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|79
argument_list|,
literal|79
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|80
argument_list|,
literal|80
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|119
argument_list|,
literal|119
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|grandChild
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_MouseNoMask
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|79
argument_list|,
literal|79
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|childAt
argument_list|(
literal|120
argument_list|,
literal|120
argument_list|)
argument_list|,
name|grandChild
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_MAC
end_ifdef
begin_function
DECL|function|childAt_unifiedToolBar
name|void
name|tst_QWidget
operator|::
name|childAt_unifiedToolBar
parameter_list|()
block|{
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
decl_stmt|;
name|QToolBar
modifier|*
name|toolBar
init|=
operator|new
name|QToolBar
decl_stmt|;
name|toolBar
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"dummy"
argument_list|)
argument_list|)
expr_stmt|;
name|toolBar
operator|->
name|addWidget
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|QMainWindow
name|mainWindow
decl_stmt|;
name|mainWindow
operator|.
name|addToolBar
argument_list|(
name|toolBar
argument_list|)
expr_stmt|;
name|mainWindow
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// Calculate the top-left corner of the tool bar and the label (in mainWindow's coordinates).
name|QPoint
name|labelTopLeft
init|=
name|label
operator|->
name|mapTo
argument_list|(
operator|&
name|mainWindow
argument_list|,
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|QPoint
name|toolBarTopLeft
init|=
name|toolBar
operator|->
name|mapTo
argument_list|(
operator|&
name|mainWindow
argument_list|,
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|mainWindow
operator|.
name|childAt
argument_list|(
name|toolBarTopLeft
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|toolBar
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mainWindow
operator|.
name|childAt
argument_list|(
name|labelTopLeft
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|label
argument_list|)
argument_list|)
expr_stmt|;
comment|// Enable unified tool bars.
name|mainWindow
operator|.
name|setUnifiedTitleAndToolBarOnMac
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
comment|// The tool bar is now in the "non-client" area of QMainWindow, i.e.
comment|// outside the mainWindow's rect(), and since mapTo et al. doesn't work
comment|// in that case (see commit 35667fd45ada49269a5987c235fdedfc43e92bb8),
comment|// we use mapToGlobal/mapFromGlobal to re-calculate the corners.
name|QPoint
name|oldToolBarTopLeft
init|=
name|toolBarTopLeft
decl_stmt|;
name|toolBarTopLeft
operator|=
name|mainWindow
operator|.
name|mapFromGlobal
argument_list|(
name|toolBar
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolBarTopLeft
operator|!=
name|oldToolBarTopLeft
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|toolBarTopLeft
operator|.
name|y
argument_list|()
operator|<
literal|0
argument_list|)
expr_stmt|;
name|labelTopLeft
operator|=
name|mainWindow
operator|.
name|mapFromGlobal
argument_list|(
name|label
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mainWindow
operator|.
name|childAt
argument_list|(
name|toolBarTopLeft
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|toolBar
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mainWindow
operator|.
name|childAt
argument_list|(
name|labelTopLeft
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|label
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
end_ifdef
begin_function
DECL|function|taskQTBUG_11373
name|void
name|tst_QWidget
operator|::
name|taskQTBUG_11373
parameter_list|()
block|{
name|QMainWindow
modifier|*
name|myWindow
init|=
operator|new
name|QMainWindow
argument_list|()
decl_stmt|;
name|QWidget
modifier|*
name|center
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|myWindow
operator|->
name|setCentralWidget
argument_list|(
name|center
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|drawer
init|=
operator|new
name|QWidget
argument_list|(
name|myWindow
argument_list|,
name|Qt
operator|::
name|Drawer
argument_list|)
decl_stmt|;
name|drawer
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|drawer
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|myWindow
operator|->
name|show
argument_list|()
expr_stmt|;
name|myWindow
operator|->
name|raise
argument_list|()
expr_stmt|;
comment|// The drawer shouldn't be visible now.
name|QCOMPARE
argument_list|(
name|drawer
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|myWindow
operator|->
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowFullScreen
argument_list|)
expr_stmt|;
name|myWindow
operator|->
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowNoState
argument_list|)
expr_stmt|;
comment|// The drawer should still not be visible, since we haven't shown it.
name|QCOMPARE
argument_list|(
name|drawer
operator|->
name|isVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_MAC_USE_COCOA
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|nativeChildFocus
name|void
name|tst_QWidget
operator|::
name|nativeChildFocus
parameter_list|()
block|{
name|QWidget
name|w
decl_stmt|;
name|QLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|w
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|QLineEdit
modifier|*
name|p1
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QLineEdit
modifier|*
name|p2
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|p1
operator|->
name|setObjectName
argument_list|(
literal|"p1"
argument_list|)
expr_stmt|;
name|p2
operator|->
name|setObjectName
argument_list|(
literal|"p2"
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|w
operator|.
name|activateWindow
argument_list|()
expr_stmt|;
name|p1
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|p1
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
expr_stmt|;
name|p2
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NativeWindow
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|activeWindow
argument_list|()
argument_list|,
operator|&
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QApplication
operator|::
name|focusWidget
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|p1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QWidget
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qwidget.moc"
end_include
end_unit
