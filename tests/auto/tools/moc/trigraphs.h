begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|TRIGRAPHS_H
end_ifndef
begin_define
DECL|macro|TRIGRAPHS_H
define|#
directive|define
name|TRIGRAPHS_H
end_define
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_decl_stmt
name|namespace
name|AAA
block|{
struct|struct
name|BaseA
block|{}
struct|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|BBB
block|{
name|class
name|Foo
range|:
name|public
name|QObject
decl_stmt|,
name|public
decl|::
name|AAA
decl|::
name|BaseA
block|{
name|Q_OBJECT
name|Q_SIGNALS
range|:
comment|// don't turn ">>" into ">>"
name|void
name|foo
argument_list|(
name|QList
operator|<
name|QList
operator|<
name|int
operator|>
expr|>
argument_list|)
decl_stmt|;
name|void
name|foo2
argument_list|(
specifier|const
name|QList
operator|<
name|QList
operator|<
name|int
operator|>
expr|>
operator|&
argument_list|)
decl_stmt|;
comment|// don't turn "< :" into "<:"
name|void
name|bar
argument_list|(
name|QList
operator|<
operator|::
name|AAA
operator|::
name|BaseA
operator|*
operator|>
argument_list|)
decl_stmt|;
name|void
name|bar2
argument_list|(
specifier|const
name|QList
operator|<
operator|::
name|AAA
operator|::
name|BaseA
operator|*
operator|>
operator|&
argument_list|)
decl_stmt|;
name|void
name|bar3
argument_list|(
name|QList
operator|<
operator|::
name|AAA
operator|::
name|BaseA
specifier|const
operator|*
operator|>
argument_list|)
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// TRIGRAPHS_H
end_comment
end_unit
