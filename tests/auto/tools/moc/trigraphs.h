begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_decl_stmt
name|namespace
name|AAA
block|{
struct|struct
name|BaseA
block|{}
struct|;
block|}
end_decl_stmt
begin_decl_stmt
name|namespace
name|BBB
block|{
name|class
name|Foo
range|:
name|public
name|QObject
decl_stmt|,
name|public
decl|::
name|AAA
decl|::
name|BaseA
block|{
name|Q_OBJECT
name|Q_SIGNALS
range|:
comment|// don't turn ">>" into ">>"
name|void
name|foo
argument_list|(
name|QList
operator|<
name|QList
operator|<
name|int
operator|>
expr|>
argument_list|)
decl_stmt|;
name|void
name|foo2
argument_list|(
specifier|const
name|QList
operator|<
name|QList
operator|<
name|int
operator|>
expr|>
operator|&
argument_list|)
decl_stmt|;
comment|// don't turn "< :" into "<:"
name|void
name|bar
argument_list|(
name|QList
operator|<
operator|::
name|AAA
operator|::
name|BaseA
operator|*
operator|>
argument_list|)
decl_stmt|;
name|void
name|bar2
argument_list|(
specifier|const
name|QList
operator|<
operator|::
name|AAA
operator|::
name|BaseA
operator|*
operator|>
operator|&
argument_list|)
decl_stmt|;
name|void
name|bar3
argument_list|(
name|QList
operator|<
operator|::
name|AAA
operator|::
name|BaseA
specifier|const
operator|*
operator|>
argument_list|)
decl_stmt|;
block|}
empty_stmt|;
block|}
end_decl_stmt
end_unit
