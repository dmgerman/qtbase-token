begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Olivier Goffart. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|CXX11_ENUMS_H
end_ifndef
begin_define
DECL|macro|CXX11_ENUMS_H
define|#
directive|define
name|CXX11_ENUMS_H
end_define
begin_include
include|#
directive|include
file|<QtCore/QObject>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_COMPILER_CLASS_ENUM
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_MOC_RUN
argument_list|)
end_if
begin_decl_stmt
name|class
name|CXX11Enums
block|{
name|Q_GADGET
name|public
range|:     enum
name|class
name|EnumClass
block|{
name|A0
block|,
name|A1
block|,
name|A2
block|,
name|A3
block|}
decl_stmt|;
enum|enum
name|TypedEnum
enum|:
name|char
block|{
name|B0
block|,
name|B1
block|,
name|B2
block|,
name|B3
block|}
enum|;
name|enum
name|class
name|TypedEnumClass
range|:
name|char
block|{
name|C0
block|,
name|C1
block|,
name|C2
block|,
name|C3
block|}
decl_stmt|;
enum|enum
name|NormalEnum
block|{
name|D2
init|=
literal|2
block|,
name|D3
block|,
name|D0
init|=
literal|0
block|,
name|D1
block|}
enum|;
name|Q_ENUM
argument_list|(
argument|EnumClass
argument_list|)
name|Q_ENUM
argument_list|(
argument|TypedEnum
argument_list|)
name|Q_ENUM
argument_list|(
argument|TypedEnumClass
argument_list|)
name|Q_ENUM
argument_list|(
argument|NormalEnum
argument_list|)
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|// Also test the Q_ENUMS macro
end_comment
begin_decl_stmt
name|class
name|CXX11Enums2
block|{
name|Q_GADGET
name|public
range|:     enum
name|class
name|EnumClass
block|{
name|A0
block|,
name|A1
block|,
name|A2
block|,
name|A3
block|}
decl_stmt|;
enum|enum
name|TypedEnum
enum|:
name|char
block|{
name|B0
block|,
name|B1
block|,
name|B2
block|,
name|B3
block|}
enum|;
name|enum
name|class
name|TypedEnumClass
range|:
name|char
block|{
name|C0
block|,
name|C1
block|,
name|C2
block|,
name|C3
block|}
decl_stmt|;
enum|enum
name|NormalEnum
block|{
name|D2
init|=
literal|2
block|,
name|D3
block|,
name|D0
init|=
literal|0
block|,
name|D1
block|}
enum|;
name|Q_ENUMS
argument_list|(
argument|EnumClass TypedEnum TypedEnumClass NormalEnum
argument_list|)
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_else
else|#
directive|else
end_else
begin_comment
comment|//workaround to get the moc compiled code to compile
end_comment
begin_decl_stmt
name|class
name|CXX11Enums
block|{
name|Q_GADGET
name|public
range|:     struct
name|EnumClass
block|{ enum
block|{
name|A0
block|,
name|A1
block|,
name|A2
block|,
name|A3
block|}
block|; }
decl_stmt|;
struct|struct
name|TypedEnumClass
block|{
enum|enum
block|{
name|C0
block|,
name|C1
block|,
name|C2
block|,
name|C3
block|}
enum|;
block|}
struct|;
enum|enum
name|NormalEnum
block|{
name|D2
init|=
literal|2
block|,
name|D3
block|,
name|D0
init|=
literal|0
block|,
name|D1
block|}
enum|;
enum|enum
name|TypedEnum
block|{
name|B0
block|,
name|B1
block|,
name|B2
block|,
name|B3
block|}
enum|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|CXX11Enums2
range|:
name|public
name|CXX11Enums
block|{
name|Q_GADGET
block|}
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// CXX11_ENUMS_H
end_comment
end_unit
