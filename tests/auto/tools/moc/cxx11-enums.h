begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Olivier Goffart. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QObject>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_COMPILER_CLASS_ENUM
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_MOC_RUN
argument_list|)
end_if
begin_decl_stmt
name|class
name|CXX11Enums
block|{
name|Q_GADGET
name|public
range|:
name|Q_ENUMS
argument_list|(
argument|EnumClass TypedEnum TypedEnumClass NormalEnum
argument_list|)
range|enum
name|class
name|EnumClass
block|{
name|A0
block|,
name|A1
block|,
name|A2
block|,
name|A3
block|}
decl_stmt|;
enum|enum
name|TypedEnum
enum|:
name|char
block|{
name|B0
block|,
name|B1
block|,
name|B2
block|,
name|B3
block|}
enum|;
name|enum
name|class
name|TypedEnumClass
range|:
name|char
block|{
name|C0
block|,
name|C1
block|,
name|C2
block|,
name|C3
block|}
decl_stmt|;
enum|enum
name|NormalEnum
block|{
name|D2
init|=
literal|2
block|,
name|D3
block|,
name|D0
init|=
literal|0
block|,
name|D1
block|}
enum|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_else
else|#
directive|else
end_else
begin_comment
comment|//workaround to get the moc compiled code to compile
end_comment
begin_decl_stmt
name|class
name|CXX11Enums
block|{
name|Q_GADGET
name|public
range|:     struct
name|EnumClass
block|{ enum
block|{
name|A0
block|,
name|A1
block|,
name|A2
block|,
name|A3
block|}
block|; }
decl_stmt|;
struct|struct
name|TypedEnumClass
block|{
enum|enum
block|{
name|C0
block|,
name|C1
block|,
name|C2
block|,
name|C3
block|}
enum|;
block|}
struct|;
enum|enum
name|NormalEnum
block|{
name|D2
init|=
literal|2
block|,
name|D3
block|,
name|D0
init|=
literal|0
block|,
name|D1
block|}
enum|;
enum|enum
name|TypedEnum
block|{
name|B0
block|,
name|B1
block|,
name|B2
block|,
name|B3
block|}
enum|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
