begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Olivier Goffart<ogoffart@woboq.com> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|DOLLARS_H
end_ifndef
begin_define
DECL|macro|DOLLARS_H
define|#
directive|define
name|DOLLARS_H
end_define
begin_comment
comment|/* both GCC and clang allow $ in identifiers  * So moc should not throw a parse error if it parses a file that contains such identifiers  */
end_comment
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_define
DECL|macro|macro$1
define|#
directive|define
name|macro$1
value|function1
end_define
begin_define
DECL|macro|$macro2
define|#
directive|define
name|$macro2
value|function2
end_define
begin_decl_stmt
name|namespace
name|$NS
block|{
name|class
name|$CLS
range|:
name|public
name|QObject
block|{
name|Q_PROPERTY
argument_list|(
argument|int rich$ MEMBER m_$rich$
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|int money$$$ READ $$$money$$$ WRITE $$$setMoney$$$
argument_list|)
name|Q_OBJECT
name|int
name|m_$rich$
block|;
name|int
name|m_money
block|;
name|int
name|$$$money$$$
argument_list|()
block|{
return|return
name|m_money
return|;
block|}
name|int
name|$$$setMoney$$$
argument_list|(
argument|int m
argument_list|)
block|{
return|return
name|m_money
operator|=
name|m
return|;
block|}
name|Q_SIGNALS
operator|:
name|void
name|macro$1
argument_list|()
block|;
name|void
name|$macro2
argument_list|()
block|;
name|void
name|function$3
argument_list|(
name|$CLS
operator|*
name|cl$s
argument_list|)
block|;     }
decl_stmt|;
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// DOLLARS_H
end_comment
end_unit
