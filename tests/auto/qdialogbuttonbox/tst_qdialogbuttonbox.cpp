begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QPushButton>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QStyle>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QLayout>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QDialog>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QAction>
end_include
begin_include
include|#
directive|include
file|<qdialogbuttonbox.h>
end_include
begin_include
include|#
directive|include
file|<limits.h>
end_include
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QList<int>
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QDialogButtonBox::ButtonRole
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QDialogButtonBox::StandardButton
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QDialogButtonBox::StandardButtons
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QAbstractButton*
argument_list|)
end_macro
begin_class
DECL|class|tst_QDialogButtonBox
class|class
name|tst_QDialogButtonBox
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QDialogButtonBox
parameter_list|()
constructor_decl|;
name|~
name|tst_QDialogButtonBox
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|buttonClicked1
parameter_list|(
name|QAbstractButton
modifier|*
parameter_list|)
function_decl|;
name|void
name|acceptClicked
parameter_list|()
function_decl|;
name|void
name|rejectClicked
parameter_list|()
function_decl|;
name|void
name|helpRequestedClicked
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|standardButtons
parameter_list|()
function_decl|;
name|void
name|testConstructor1
parameter_list|()
function_decl|;
name|void
name|testConstrurtor2
parameter_list|()
function_decl|;
name|void
name|testConstrurtor2_data
parameter_list|()
function_decl|;
name|void
name|testConstructor3
parameter_list|()
function_decl|;
name|void
name|testConstructor3_data
parameter_list|()
function_decl|;
name|void
name|setOrientation_data
parameter_list|()
function_decl|;
name|void
name|setOrientation
parameter_list|()
function_decl|;
name|void
name|addButton1_data
parameter_list|()
function_decl|;
name|void
name|addButton1
parameter_list|()
function_decl|;
name|void
name|addButton2_data
parameter_list|()
function_decl|;
name|void
name|addButton2
parameter_list|()
function_decl|;
name|void
name|addButton3_data
parameter_list|()
function_decl|;
name|void
name|addButton3
parameter_list|()
function_decl|;
name|void
name|clear_data
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|void
name|removeButton_data
parameter_list|()
function_decl|;
name|void
name|removeButton
parameter_list|()
function_decl|;
name|void
name|buttonRole_data
parameter_list|()
function_decl|;
name|void
name|buttonRole
parameter_list|()
function_decl|;
name|void
name|setStandardButtons_data
parameter_list|()
function_decl|;
name|void
name|setStandardButtons
parameter_list|()
function_decl|;
name|void
name|layoutReuse
parameter_list|()
function_decl|;
comment|// Skip these tests, buttons is used in every test thus far.
comment|//    void buttons_data();
comment|//    void buttons();
name|void
name|testDelete
parameter_list|()
function_decl|;
name|void
name|testRemove
parameter_list|()
function_decl|;
name|void
name|testMultipleAdd
parameter_list|()
function_decl|;
name|void
name|testStandardButtonMapping_data
parameter_list|()
function_decl|;
name|void
name|testStandardButtonMapping
parameter_list|()
function_decl|;
name|void
name|testSignals_data
parameter_list|()
function_decl|;
name|void
name|testSignals
parameter_list|()
function_decl|;
name|void
name|testSignalOrder
parameter_list|()
function_decl|;
name|void
name|testDefaultButton_data
parameter_list|()
function_decl|;
name|void
name|testDefaultButton
parameter_list|()
function_decl|;
name|void
name|testS60SoftKeys
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|QT_SOFTKEYS_ENABLED
name|void
name|testSoftKeyReparenting
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|task191642_default
parameter_list|()
function_decl|;
private|private:
DECL|member|timeStamp
name|qint64
name|timeStamp
decl_stmt|;
DECL|member|buttonClicked1TimeStamp
name|qint64
name|buttonClicked1TimeStamp
decl_stmt|;
DECL|member|acceptTimeStamp
name|qint64
name|acceptTimeStamp
decl_stmt|;
DECL|member|rejectTimeStamp
name|qint64
name|rejectTimeStamp
decl_stmt|;
DECL|member|helpRequestedTimeStamp
name|qint64
name|helpRequestedTimeStamp
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QDialogButtonBox
name|tst_QDialogButtonBox
operator|::
name|tst_QDialogButtonBox
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QDialogButtonBox
name|tst_QDialogButtonBox
operator|::
name|~
name|tst_QDialogButtonBox
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|testConstructor1
name|void
name|tst_QDialogButtonBox
operator|::
name|testConstructor1
parameter_list|()
block|{
name|QDialogButtonBox
name|buttonbox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonbox
operator|.
name|orientation
argument_list|()
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonbox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|layoutReuse
name|void
name|tst_QDialogButtonBox
operator|::
name|layoutReuse
parameter_list|()
block|{
name|QDialogButtonBox
modifier|*
name|box
init|=
operator|new
name|QDialogButtonBox
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QLayout
argument_list|>
name|layout
init|=
name|box
operator|->
name|layout
argument_list|()
decl_stmt|;
name|box
operator|->
name|setCenterButtons
argument_list|(
operator|!
name|box
operator|->
name|centerButtons
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layout
operator|==
name|box
operator|->
name|layout
argument_list|()
argument_list|)
expr_stmt|;
name|QEvent
name|event
argument_list|(
name|QEvent
operator|::
name|StyleChange
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|box
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layout
operator|==
name|box
operator|->
name|layout
argument_list|()
argument_list|)
expr_stmt|;
name|box
operator|->
name|setOrientation
argument_list|(
name|box
operator|->
name|orientation
argument_list|()
operator|==
name|Qt
operator|::
name|Horizontal
condition|?
name|Qt
operator|::
name|Vertical
else|:
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layout
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|layout
operator|!=
name|box
operator|->
name|layout
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|box
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testConstrurtor2_data
name|void
name|tst_QDialogButtonBox
operator|::
name|testConstrurtor2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"orientation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testConstrurtor2
name|void
name|tst_QDialogButtonBox
operator|::
name|testConstrurtor2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|orientation
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|Orientation
name|orient
init|=
name|Qt
operator|::
name|Orientation
argument_list|(
name|orientation
argument_list|)
decl_stmt|;
name|QDialogButtonBox
name|buttonBox
argument_list|(
name|orient
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|orientation
argument_list|()
argument_list|,
name|orient
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testConstructor3_data
name|void
name|tst_QDialogButtonBox
operator|::
name|testConstructor3_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"orientation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|>
argument_list|(
literal|"buttons"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"buttonCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nothing"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|StandardButtons
operator|)
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"only 1"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"only 1.. twice"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Ok
operator|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"only 2"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator|)
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two different things"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|Save
operator||
name|QDialogButtonBox
operator|::
name|Close
operator|)
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"three"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator||
name|QDialogButtonBox
operator|::
name|Help
operator|)
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"everything"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|StandardButtons
operator|)
name|UINT_MAX
operator|<<
literal|18
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testConstructor3
name|void
name|tst_QDialogButtonBox
operator|::
name|testConstructor3
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|orientation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|,
name|buttons
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
argument_list|(
name|buttons
argument_list|,
operator|(
name|Qt
operator|::
name|Orientation
operator|)
name|orientation
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|buttonBox
operator|.
name|orientation
argument_list|()
argument_list|)
argument_list|,
name|orientation
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|"buttonCount"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOrientation_data
name|void
name|tst_QDialogButtonBox
operator|::
name|setOrientation_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"orientation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Horizontal"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Vertical"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setOrientation
name|void
name|tst_QDialogButtonBox
operator|::
name|setOrientation
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|orientation
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|buttonBox
operator|.
name|orientation
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
argument_list|)
expr_stmt|;
name|buttonBox
operator|.
name|setOrientation
argument_list|(
name|Qt
operator|::
name|Orientation
argument_list|(
name|orientation
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|buttonBox
operator|.
name|orientation
argument_list|()
argument_list|)
argument_list|,
name|orientation
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/* void tst_QDialogButtonBox::setLayoutPolicy_data() {     QTest::addColumn<int>("layoutPolicy");      QTest::newRow("win")<< int(QDialogButtonBox::WinLayout);     QTest::newRow("mac")<< int(QDialogButtonBox::MacLayout);     QTest::newRow("kde")<< int(QDialogButtonBox::KdeLayout);     QTest::newRow("gnome")<< int(QDialogButtonBox::GnomeLayout);  }  void tst_QDialogButtonBox::setLayoutPolicy() {     QFETCH(int, layoutPolicy);      QDialogButtonBox buttonBox;     QCOMPARE(int(buttonBox.layoutPolicy()),              int(buttonBox.style()->styleHint(QStyle::SH_DialogButtonLayout)));     buttonBox.setLayoutPolicy(QDialogButtonBox::ButtonLayout(layoutPolicy));     QCOMPARE(int(buttonBox.layoutPolicy()), layoutPolicy); } */
end_comment
begin_function
DECL|function|addButton1_data
name|void
name|tst_QDialogButtonBox
operator|::
name|addButton1_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|>
argument_list|(
literal|"role"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"totalCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"InvalidRole"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|InvalidRole
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"AcceptRole"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RejectRole"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|RejectRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"DestructiveRole"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|DestructiveRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ActionRole"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|ActionRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HelpRole"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|HelpRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"WackyValue"
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|ButtonRole
operator|)
operator|-
literal|1
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addButton1
name|void
name|tst_QDialogButtonBox
operator|::
name|addButton1
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|,
name|role
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|()
decl_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|,
name|role
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|"totalCount"
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QAbstractButton
modifier|*
argument_list|>
name|children
init|=
name|qFindChildren
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
operator|&
name|buttonBox
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|children
operator|.
name|count
argument_list|()
argument_list|,
literal|"totalCount"
argument_list|)
expr_stmt|;
operator|delete
name|button
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addButton2_data
name|void
name|tst_QDialogButtonBox
operator|::
name|addButton2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|>
argument_list|(
literal|"role"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"totalCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"InvalidRole"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|InvalidRole
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"AcceptRole"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RejectRole"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|RejectRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"DestructiveRole"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|DestructiveRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ActionRole"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|ActionRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HelpRole"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|HelpRole
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"WackyValue"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|ButtonRole
operator|)
operator|-
literal|1
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addButton2
name|void
name|tst_QDialogButtonBox
operator|::
name|addButton2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|,
name|role
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|text
argument_list|,
name|role
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|"totalCount"
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QAbstractButton
modifier|*
argument_list|>
name|children
init|=
name|qFindChildren
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
operator|&
name|buttonBox
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|children
operator|.
name|count
argument_list|()
argument_list|,
literal|"totalCount"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addButton3_data
name|void
name|tst_QDialogButtonBox
operator|::
name|addButton3_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|StandardButton
argument_list|>
argument_list|(
literal|"button"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"totalCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Ok"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Ok
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Open"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Open
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Save"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Save
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Cancel"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Cancel
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Close"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Close
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Discard"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Discard
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Apply"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Apply
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Reset"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Reset
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Help"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Help
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"noButton"
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|StandardButton
operator|)
literal|0
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addButton3
name|void
name|tst_QDialogButtonBox
operator|::
name|addButton3
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|StandardButton
argument_list|,
name|button
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|"totalCount"
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QAbstractButton
modifier|*
argument_list|>
name|children
init|=
name|qFindChildren
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
operator|&
name|buttonBox
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|children
operator|.
name|count
argument_list|()
argument_list|,
literal|"totalCount"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear_data
name|void
name|tst_QDialogButtonBox
operator|::
name|clear_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rolesToAdd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nothing"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"one"
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"all"
argument_list|)
operator|<<
name|int
argument_list|(
name|QDialogButtonBox
operator|::
name|NRoles
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|tst_QDialogButtonBox
operator|::
name|clear
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rolesToAdd
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|rolesToAdd
condition|;
operator|++
name|i
control|)
name|buttonBox
operator|.
name|addButton
argument_list|(
literal|"Happy"
argument_list|,
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|buttonBox
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QAbstractButton
modifier|*
argument_list|>
name|children
init|=
name|qFindChildren
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
operator|&
name|buttonBox
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|children
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeButton_data
name|void
name|tst_QDialogButtonBox
operator|::
name|removeButton_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|>
argument_list|(
literal|"roleToAdd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no button added"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|InvalidRole
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a button"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeButton
name|void
name|tst_QDialogButtonBox
operator|::
name|removeButton
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|,
name|roleToAdd
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"RemoveButton test"
argument_list|)
decl_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|,
name|roleToAdd
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|"expectedCount"
argument_list|)
expr_stmt|;
name|buttonBox
operator|.
name|removeButton
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|button
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testDelete
name|void
name|tst_QDialogButtonBox
operator|::
name|testDelete
parameter_list|()
block|{
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|deleteMe
init|=
operator|new
name|QPushButton
argument_list|(
literal|"Happy"
argument_list|)
decl_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|deleteMe
argument_list|,
name|QDialogButtonBox
operator|::
name|HelpRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QAbstractButton
modifier|*
argument_list|>
name|children
init|=
name|qFindChildren
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
operator|&
name|buttonBox
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|children
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|deleteMe
expr_stmt|;
name|children
operator|=
name|qFindChildren
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
operator|&
name|buttonBox
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|children
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testMultipleAdd
name|void
name|tst_QDialogButtonBox
operator|::
name|testMultipleAdd
parameter_list|()
block|{
comment|// Add a button into the thing multiple times.
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"Foo away"
argument_list|)
decl_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|,
name|QDialogButtonBox
operator|::
name|AcceptRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttonRole
argument_list|(
name|button
argument_list|)
argument_list|,
name|QDialogButtonBox
operator|::
name|AcceptRole
argument_list|)
expr_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|,
name|QDialogButtonBox
operator|::
name|AcceptRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttonRole
argument_list|(
name|button
argument_list|)
argument_list|,
name|QDialogButtonBox
operator|::
name|AcceptRole
argument_list|)
expr_stmt|;
comment|// Add it again with a different role
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|,
name|QDialogButtonBox
operator|::
name|RejectRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttonRole
argument_list|(
name|button
argument_list|)
argument_list|,
name|QDialogButtonBox
operator|::
name|RejectRole
argument_list|)
expr_stmt|;
comment|// Add it as an "invalid" role
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|,
name|QDialogButtonBox
operator|::
name|InvalidRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttonRole
argument_list|(
name|button
argument_list|)
argument_list|,
name|QDialogButtonBox
operator|::
name|RejectRole
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|buttonRole_data
name|void
name|tst_QDialogButtonBox
operator|::
name|buttonRole_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|>
argument_list|(
literal|"roleToAdd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|>
argument_list|(
literal|"expectedRole"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"AcceptRole stuff"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Nothing"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|InvalidRole
operator|<<
name|QDialogButtonBox
operator|::
name|InvalidRole
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad stuff"
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|ButtonRole
operator|)
operator|-
literal|1
operator|<<
name|QDialogButtonBox
operator|::
name|InvalidRole
expr_stmt|;
block|}
end_function
begin_function
DECL|function|buttonRole
name|void
name|tst_QDialogButtonBox
operator|::
name|buttonRole
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|,
name|roleToAdd
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QAbstractButton
modifier|*
name|button
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
literal|"Here's a button"
argument_list|,
name|roleToAdd
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|buttonRole
argument_list|(
name|button
argument_list|)
argument_list|,
literal|"expectedRole"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testStandardButtonMapping_data
name|void
name|tst_QDialogButtonBox
operator|::
name|testStandardButtonMapping_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|StandardButton
argument_list|>
argument_list|(
literal|"button"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|>
argument_list|(
literal|"expectedRole"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedText"
argument_list|)
expr_stmt|;
name|int
name|layoutPolicy
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_DialogButtonLayout
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Ok"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Ok
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"OK"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Open"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Open
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Open"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Save"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Save
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Save"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Cancel"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Cancel
operator|<<
name|QDialogButtonBox
operator|::
name|RejectRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Cancel"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Close"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Close
operator|<<
name|QDialogButtonBox
operator|::
name|RejectRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Close"
argument_list|)
expr_stmt|;
if|if
condition|(
name|layoutPolicy
operator|==
name|QDialogButtonBox
operator|::
name|MacLayout
condition|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Discard"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Discard
operator|<<
name|QDialogButtonBox
operator|::
name|DestructiveRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Don't Save"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|layoutPolicy
operator|==
name|QDialogButtonBox
operator|::
name|GnomeLayout
condition|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Discard"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Discard
operator|<<
name|QDialogButtonBox
operator|::
name|DestructiveRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Close without Saving"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Discard"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Discard
operator|<<
name|QDialogButtonBox
operator|::
name|DestructiveRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Discard"
argument_list|)
expr_stmt|;
block|}
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Apply"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Apply
operator|<<
name|QDialogButtonBox
operator|::
name|ApplyRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Apply"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Reset"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Reset
operator|<<
name|QDialogButtonBox
operator|::
name|ResetRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Reset"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QDialogButtonBox::Help"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|Help
operator|<<
name|QDialogButtonBox
operator|::
name|HelpRole
operator|<<
name|QDialogButtonBox
operator|::
name|tr
argument_list|(
literal|"Help"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testStandardButtonMapping
name|void
name|tst_QDialogButtonBox
operator|::
name|testStandardButtonMapping
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|StandardButton
argument_list|,
name|button
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QAbstractButton
modifier|*
name|theButton
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
name|button
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|buttonRole
argument_list|(
name|theButton
argument_list|)
argument_list|,
literal|"expectedRole"
argument_list|)
expr_stmt|;
name|QString
name|textWithoutMnemonic
init|=
name|theButton
operator|->
name|text
argument_list|()
operator|.
name|remove
argument_list|(
literal|"&"
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|textWithoutMnemonic
argument_list|,
literal|"expectedText"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSignals_data
name|void
name|tst_QDialogButtonBox
operator|::
name|testSignals_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|>
argument_list|(
literal|"buttonToClick"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"clicked2Count"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"acceptCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rejectCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"helpRequestedCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nothing"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|InvalidRole
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"accept"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|AcceptRole
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"reject"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|RejectRole
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"destructive"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|DestructiveRole
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Action"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|ActionRole
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Help"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|HelpRole
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSignals
name|void
name|tst_QDialogButtonBox
operator|::
name|testSignals
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|,
name|buttonToClick
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|qRegisterMetaType
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
literal|"QAbstractButton*"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|clicked2
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|accept
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|accepted
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|reject
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|rejected
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|helpRequested
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|helpRequested
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|clickMe
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|QDialogButtonBox
operator|::
name|AcceptRole
init|;
name|i
operator|<
name|QDialogButtonBox
operator|::
name|NRoles
condition|;
operator|++
name|i
control|)
block|{
name|QPushButton
modifier|*
name|button
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
argument_list|,
name|QDialogButtonBox
operator|::
name|ButtonRole
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|i
operator|==
name|buttonToClick
condition|)
name|clickMe
operator|=
name|button
expr_stmt|;
block|}
if|if
condition|(
name|clickMe
condition|)
block|{
name|clickMe
operator|->
name|animateClick
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
name|QTEST
argument_list|(
name|clicked2
operator|.
name|count
argument_list|()
argument_list|,
literal|"clicked2Count"
argument_list|)
expr_stmt|;
if|if
condition|(
name|clicked2
operator|.
name|count
argument_list|()
operator|>
literal|0
condition|)
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
name|clicked2
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QAbstractButton
operator|*
operator|)
name|clickMe
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|accept
operator|.
name|count
argument_list|()
argument_list|,
literal|"acceptCount"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|reject
operator|.
name|count
argument_list|()
argument_list|,
literal|"rejectCount"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|helpRequested
operator|.
name|count
argument_list|()
argument_list|,
literal|"helpRequestedCount"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSignalOrder
name|void
name|tst_QDialogButtonBox
operator|::
name|testSignalOrder
parameter_list|()
block|{
specifier|const
name|qint64
name|longLongZero
init|=
literal|0
decl_stmt|;
name|buttonClicked1TimeStamp
operator|=
name|acceptTimeStamp
operator|=
name|rejectTimeStamp
operator|=
name|helpRequestedTimeStamp
operator|=
name|timeStamp
operator|=
literal|0
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|connect
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|buttonClicked1
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|accepted
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|acceptClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|rejected
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|rejectClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|helpRequested
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|helpRequestedClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|acceptButton
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
literal|"OK"
argument_list|,
name|QDialogButtonBox
operator|::
name|AcceptRole
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|rejectButton
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
literal|"Cancel"
argument_list|,
name|QDialogButtonBox
operator|::
name|RejectRole
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|actionButton
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
literal|"Action This"
argument_list|,
name|QDialogButtonBox
operator|::
name|ActionRole
argument_list|)
decl_stmt|;
name|QPushButton
modifier|*
name|helpButton
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
literal|"Help Me!"
argument_list|,
name|QDialogButtonBox
operator|::
name|HelpRole
argument_list|)
decl_stmt|;
comment|// Try accept
name|acceptButton
operator|->
name|animateClick
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rejectTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|helpRequestedTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonClicked1TimeStamp
operator|<
name|acceptTimeStamp
argument_list|)
expr_stmt|;
name|acceptTimeStamp
operator|=
literal|0
expr_stmt|;
name|rejectButton
operator|->
name|animateClick
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|acceptTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|helpRequestedTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonClicked1TimeStamp
operator|<
name|rejectTimeStamp
argument_list|)
expr_stmt|;
name|rejectTimeStamp
operator|=
literal|0
expr_stmt|;
name|actionButton
operator|->
name|animateClick
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|acceptTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rejectTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|helpRequestedTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|helpButton
operator|->
name|animateClick
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|acceptTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rejectTimeStamp
argument_list|,
name|longLongZero
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buttonClicked1TimeStamp
operator|<
name|helpRequestedTimeStamp
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|buttonClicked1
name|void
name|tst_QDialogButtonBox
operator|::
name|buttonClicked1
parameter_list|(
name|QAbstractButton
modifier|*
parameter_list|)
block|{
name|buttonClicked1TimeStamp
operator|=
operator|++
name|timeStamp
expr_stmt|;
block|}
end_function
begin_function
DECL|function|acceptClicked
name|void
name|tst_QDialogButtonBox
operator|::
name|acceptClicked
parameter_list|()
block|{
name|acceptTimeStamp
operator|=
operator|++
name|timeStamp
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rejectClicked
name|void
name|tst_QDialogButtonBox
operator|::
name|rejectClicked
parameter_list|()
block|{
name|rejectTimeStamp
operator|=
operator|++
name|timeStamp
expr_stmt|;
block|}
end_function
begin_function
DECL|function|helpRequestedClicked
name|void
name|tst_QDialogButtonBox
operator|::
name|helpRequestedClicked
parameter_list|()
block|{
name|helpRequestedTimeStamp
operator|=
operator|++
name|timeStamp
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setStandardButtons_data
name|void
name|tst_QDialogButtonBox
operator|::
name|setStandardButtons_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|>
argument_list|(
literal|"buttonsToAdd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|>
argument_list|(
literal|"expectedResult"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Nothing"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|NoButton
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|NoButton
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Everything"
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|StandardButtons
operator|)
literal|0xffffffff
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Open
operator||
name|QDialogButtonBox
operator|::
name|Save
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator||
name|QDialogButtonBox
operator|::
name|Close
operator||
name|QDialogButtonBox
operator|::
name|Discard
operator||
name|QDialogButtonBox
operator|::
name|Apply
operator||
name|QDialogButtonBox
operator|::
name|Reset
operator||
name|QDialogButtonBox
operator|::
name|Help
operator||
name|QDialogButtonBox
operator|::
name|Yes
operator||
name|QDialogButtonBox
operator|::
name|YesToAll
operator||
name|QDialogButtonBox
operator|::
name|No
operator||
name|QDialogButtonBox
operator|::
name|NoToAll
operator||
name|QDialogButtonBox
operator|::
name|SaveAll
operator||
name|QDialogButtonBox
operator|::
name|Abort
operator||
name|QDialogButtonBox
operator|::
name|Retry
operator||
name|QDialogButtonBox
operator|::
name|Ignore
operator||
name|QDialogButtonBox
operator|::
name|RestoreDefaults
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Simple thing"
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|Help
argument_list|)
operator|<<
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|Help
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Standard thing"
argument_list|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator|)
operator|<<
operator|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setStandardButtons
name|void
name|tst_QDialogButtonBox
operator|::
name|setStandardButtons
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|,
name|buttonsToAdd
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|buttonBox
operator|.
name|setStandardButtons
argument_list|(
name|buttonsToAdd
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|buttonBox
operator|.
name|standardButtons
argument_list|()
argument_list|,
literal|"expectedResult"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|standardButtons
name|void
name|tst_QDialogButtonBox
operator|::
name|standardButtons
parameter_list|()
block|{
comment|// Test various cases of setting StandardButtons
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|standardButtons
argument_list|()
argument_list|,
name|QDialogButtonBox
operator|::
name|StandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|NoButton
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set some buttons
name|buttonBox
operator|.
name|setStandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|standardButtons
argument_list|()
argument_list|,
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
comment|// Now add a button
name|buttonBox
operator|.
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Apply
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|standardButtons
argument_list|()
argument_list|,
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator||
name|QDialogButtonBox
operator|::
name|Apply
argument_list|)
expr_stmt|;
comment|// Set the standard buttons to other things
name|buttonBox
operator|.
name|setStandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|Save
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator||
name|QDialogButtonBox
operator|::
name|Discard
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|standardButtons
argument_list|()
argument_list|,
name|QDialogButtonBox
operator|::
name|Save
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator||
name|QDialogButtonBox
operator|::
name|Discard
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// Add another button (not a standard one)
name|buttonBox
operator|.
name|addButton
argument_list|(
name|QLatin1String
argument_list|(
literal|"Help"
argument_list|)
argument_list|,
name|QDialogButtonBox
operator|::
name|HelpRole
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|standardButtons
argument_list|()
argument_list|,
name|QDialogButtonBox
operator|::
name|Save
operator||
name|QDialogButtonBox
operator|::
name|Cancel
operator||
name|QDialogButtonBox
operator|::
name|Discard
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox
operator|.
name|buttons
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// Finally, check if we construct with standard buttons that they show up.
name|QDialogButtonBox
name|buttonBox2
argument_list|(
name|QDialogButtonBox
operator|::
name|Open
operator||
name|QDialogButtonBox
operator|::
name|Reset
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buttonBox2
operator|.
name|standardButtons
argument_list|()
argument_list|,
name|QDialogButtonBox
operator|::
name|Open
operator||
name|QDialogButtonBox
operator|::
name|Reset
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testRemove
name|void
name|tst_QDialogButtonBox
operator|::
name|testRemove
parameter_list|()
block|{
comment|// Make sure that removing a button and clicking it, doesn't trigger any latent signals
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QSignalSpy
name|clicked
argument_list|(
operator|&
name|buttonBox
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QAbstractButton
modifier|*
name|button
init|=
name|buttonBox
operator|.
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
decl_stmt|;
name|buttonBox
operator|.
name|removeButton
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|->
name|animateClick
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clicked
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|button
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testDefaultButton_data
name|void
name|tst_QDialogButtonBox
operator|::
name|testDefaultButton_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"whenToSetDefault"
argument_list|)
expr_stmt|;
comment|// -1 Do nothing, 0 after accept, 1 before accept
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"buttonToBeDefault"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"indexThatIsDefault"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"do nothing First Accept implicit"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"First accept explicit before add"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"First accept explicit after add"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"second accept explicit before add"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"second accept explicit after add"
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"third accept explicit befare add"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"third accept explicit after add"
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|softKeyCount
specifier|static
name|int
name|softKeyCount
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|int
name|softkeyCount
init|=
literal|0
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_ACTION
name|QList
argument_list|<
name|QAction
modifier|*
argument_list|>
name|actions
init|=
name|widget
operator|->
name|actions
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|QAction
modifier|*
name|action
decl|,
name|actions
control|)
block|{
if|if
condition|(
name|action
operator|->
name|softKeyRole
argument_list|()
operator|!=
name|QAction
operator|::
name|NoSoftKey
condition|)
name|softkeyCount
operator|++
expr_stmt|;
block|}
endif|#
directive|endif
return|return
name|softkeyCount
return|;
block|}
end_function
begin_function
DECL|function|testS60SoftKeys
name|void
name|tst_QDialogButtonBox
operator|::
name|testS60SoftKeys
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_WS_S60
name|QDialog
name|dialog
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QDialogButtonBox
name|buttonBox
argument_list|(
operator|&
name|dialog
argument_list|)
decl_stmt|;
name|buttonBox
operator|.
name|setStandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|show
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_ACTION
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
operator|&
name|dialog
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QDialog
name|dialog2
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QDialogButtonBox
name|buttonBox2
argument_list|(
operator|&
name|dialog2
argument_list|)
decl_stmt|;
name|buttonBox2
operator|.
name|setStandardButtons
argument_list|(
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
name|dialog2
operator|.
name|show
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_ACTION
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
operator|&
name|dialog2
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
else|#
directive|else
name|QSKIP
argument_list|(
literal|"S60-specific test"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_SOFTKEYS_ENABLED
end_ifdef
begin_function
DECL|function|testSoftKeyReparenting
name|void
name|tst_QDialogButtonBox
operator|::
name|testSoftKeyReparenting
parameter_list|()
block|{
name|QDialog
name|dialog
decl_stmt|;
name|QDialogButtonBox
modifier|*
name|buttonBox
init|=
operator|new
name|QDialogButtonBox
decl_stmt|;
name|buttonBox
operator|->
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
expr_stmt|;
name|buttonBox
operator|->
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_ACTION
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
operator|&
name|dialog
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
name|buttonBox
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Were the softkeys re-parented correctly?
name|dialog
operator|.
name|setLayout
argument_list|(
operator|new
name|QVBoxLayout
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|buttonBox
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_ACTION
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
operator|&
name|dialog
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
name|buttonBox
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Softkeys are only added to QDialog, not QWidget
name|QWidget
modifier|*
name|nested
init|=
operator|new
name|QWidget
decl_stmt|;
name|nested
operator|->
name|setLayout
argument_list|(
operator|new
name|QVBoxLayout
argument_list|)
expr_stmt|;
name|nested
operator|->
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|buttonBox
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_ACTION
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
name|nested
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|softKeyCount
argument_list|(
name|buttonBox
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|testDefaultButton
name|void
name|tst_QDialogButtonBox
operator|::
name|testDefaultButton
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|whenToSetDefault
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|buttonToBeDefault
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|indexThatIsDefault
argument_list|)
expr_stmt|;
name|QDialogButtonBox
name|buttonBox
decl_stmt|;
name|QPushButton
modifier|*
name|buttonArray
index|[]
init|=
block|{
operator|new
name|QPushButton
argument_list|(
literal|"Foo"
argument_list|)
block|,
operator|new
name|QPushButton
argument_list|(
literal|"Bar"
argument_list|)
block|,
operator|new
name|QPushButton
argument_list|(
literal|"Baz"
argument_list|)
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|whenToSetDefault
operator|==
literal|1
operator|&&
name|i
operator|==
name|buttonToBeDefault
condition|)
name|buttonArray
index|[
name|i
index|]
operator|->
name|setDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|buttonBox
operator|.
name|addButton
argument_list|(
name|buttonArray
index|[
name|i
index|]
argument_list|,
name|QDialogButtonBox
operator|::
name|AcceptRole
argument_list|)
expr_stmt|;
if|if
condition|(
name|whenToSetDefault
operator|==
literal|0
operator|&&
name|i
operator|==
name|buttonToBeDefault
condition|)
name|buttonArray
index|[
name|i
index|]
operator|->
name|setDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|buttonBox
operator|.
name|show
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|==
name|indexThatIsDefault
condition|)
name|QVERIFY
argument_list|(
name|buttonArray
index|[
name|i
index|]
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|buttonArray
index|[
name|i
index|]
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|task191642_default
name|void
name|tst_QDialogButtonBox
operator|::
name|task191642_default
parameter_list|()
block|{
name|QDialog
name|dlg
decl_stmt|;
name|QPushButton
modifier|*
name|def
init|=
operator|new
name|QPushButton
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|QSignalSpy
name|clicked
argument_list|(
name|def
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|def
operator|->
name|setDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QDialogButtonBox
modifier|*
name|bb
init|=
operator|new
name|QDialogButtonBox
argument_list|(
operator|&
name|dlg
argument_list|)
decl_stmt|;
name|bb
operator|->
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
expr_stmt|;
name|bb
operator|->
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
name|bb
operator|->
name|addButton
argument_list|(
name|QDialogButtonBox
operator|::
name|Help
argument_list|)
expr_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|def
operator|->
name|isDefault
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
operator|&
name|dlg
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clicked
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDialogButtonBox
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdialogbuttonbox.moc"
end_include
end_unit
