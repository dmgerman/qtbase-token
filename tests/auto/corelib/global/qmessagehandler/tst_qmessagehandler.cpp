begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_class
DECL|class|tst_qmessagehandler
class|class
name|tst_qmessagehandler
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|cleanup
parameter_list|()
function_decl|;
name|void
name|defaultHandler
parameter_list|()
function_decl|;
name|void
name|installMessageHandler
parameter_list|()
function_decl|;
name|void
name|installMsgHandler
parameter_list|()
function_decl|;
name|void
name|installBothHandler
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_decl_stmt
DECL|variable|s_type
specifier|static
name|QtMsgType
name|s_type
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|s_file
specifier|const
name|char
modifier|*
name|s_file
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|s_line
name|int
name|s_line
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|s_function
specifier|const
name|char
modifier|*
name|s_function
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|s_message
specifier|static
name|QString
name|s_message
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|customMessageHandler
name|void
name|customMessageHandler
parameter_list|(
name|QtMsgType
name|type
parameter_list|,
specifier|const
name|QMessageLogContext
modifier|&
name|context
parameter_list|,
specifier|const
name|char
modifier|*
name|msg
parameter_list|)
block|{
name|s_type
operator|=
name|type
expr_stmt|;
name|s_file
operator|=
name|context
operator|.
name|file
expr_stmt|;
name|s_line
operator|=
name|context
operator|.
name|line
expr_stmt|;
name|s_function
operator|=
name|context
operator|.
name|function
expr_stmt|;
name|s_message
operator|=
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customMsgHandler
name|void
name|customMsgHandler
parameter_list|(
name|QtMsgType
name|type
parameter_list|,
specifier|const
name|char
modifier|*
name|msg
parameter_list|)
block|{
name|s_type
operator|=
name|type
expr_stmt|;
name|s_file
operator|=
literal|0
expr_stmt|;
name|s_line
operator|=
literal|0
expr_stmt|;
name|s_function
operator|=
literal|0
expr_stmt|;
name|s_message
operator|=
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_qmessagehandler
operator|::
name|cleanup
parameter_list|()
block|{
name|qInstallMsgHandler
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|qInstallMessageHandler
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|s_type
operator|=
name|QtFatalMsg
expr_stmt|;
name|s_file
operator|=
literal|0
expr_stmt|;
name|s_line
operator|=
literal|0
expr_stmt|;
name|s_function
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultHandler
name|void
name|tst_qmessagehandler
operator|::
name|defaultHandler
parameter_list|()
block|{
comment|// check that the default works
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"defaultHandler"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|(
literal|"defaultHandler"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|installMessageHandler
name|void
name|tst_qmessagehandler
operator|::
name|installMessageHandler
parameter_list|()
block|{
name|QMessageHandler
name|oldHandler
init|=
name|qInstallMessageHandler
argument_list|(
name|customMessageHandler
argument_list|)
decl_stmt|;
name|qDebug
argument_list|(
literal|"installMessageHandler"
argument_list|)
expr_stmt|;
name|int
name|line
init|=
name|__LINE__
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s_type
argument_list|,
name|QtDebugMsg
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_message
argument_list|,
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
literal|"installMessageHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_file
argument_list|,
name|__FILE__
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_function
argument_list|,
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_line
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|QMessageHandler
name|myHandler
init|=
name|qInstallMessageHandler
argument_list|(
name|oldHandler
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|void
operator|*
operator|)
name|myHandler
argument_list|,
operator|(
name|void
operator|*
operator|)
name|customMessageHandler
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|installMsgHandler
name|void
name|tst_qmessagehandler
operator|::
name|installMsgHandler
parameter_list|()
block|{
name|QtMsgHandler
name|oldHandler
init|=
name|qInstallMsgHandler
argument_list|(
name|customMsgHandler
argument_list|)
decl_stmt|;
name|qDebug
argument_list|(
literal|"installMsgHandler"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_type
argument_list|,
name|QtDebugMsg
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_message
argument_list|,
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
literal|"installMsgHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_file
argument_list|,
operator|(
specifier|const
name|char
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_function
argument_list|,
operator|(
specifier|const
name|char
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_line
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QtMsgHandler
name|myHandler
init|=
name|qInstallMsgHandler
argument_list|(
name|oldHandler
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|void
operator|*
operator|)
name|myHandler
argument_list|,
operator|(
name|void
operator|*
operator|)
name|customMsgHandler
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|installBothHandler
name|void
name|tst_qmessagehandler
operator|::
name|installBothHandler
parameter_list|()
block|{
name|qInstallMessageHandler
argument_list|(
name|customMessageHandler
argument_list|)
expr_stmt|;
name|qInstallMsgHandler
argument_list|(
name|customMsgHandler
argument_list|)
expr_stmt|;
name|qDebug
argument_list|(
literal|"installBothHandler"
argument_list|)
expr_stmt|;
name|int
name|line
init|=
name|__LINE__
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s_type
argument_list|,
name|QtDebugMsg
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_message
argument_list|,
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
literal|"installBothHandler"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_file
argument_list|,
name|__FILE__
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_function
argument_list|,
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s_line
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_qmessagehandler
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qmessagehandler.moc"
end_include
end_unit
