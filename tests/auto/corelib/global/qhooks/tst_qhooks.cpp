begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Volker Krause<volker.krause@kdab.com> ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/private/qhooks_p.h>
end_include
begin_class
DECL|class|tst_QHooks
class|class
name|tst_QHooks
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|testVersion
parameter_list|()
function_decl|;
name|void
name|testAddRemoveObject
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|testVersion
name|void
name|tst_QHooks
operator|::
name|testVersion
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|qtHookData
index|[
name|QHooks
operator|::
name|HookDataVersion
index|]
operator|>=
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qtHookData
index|[
name|QHooks
operator|::
name|HookDataSize
index|]
argument_list|,
operator|(
name|quintptr
operator|)
name|QHooks
operator|::
name|LastHookIndex
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qtHookData
index|[
name|QHooks
operator|::
name|QtVersion
index|]
argument_list|,
operator|(
name|quintptr
operator|)
name|QT_VERSION
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|objectCount
specifier|static
name|int
name|objectCount
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|objectAddHook
specifier|static
name|void
name|objectAddHook
parameter_list|(
name|QObject
modifier|*
parameter_list|)
block|{
operator|++
name|objectCount
expr_stmt|;
block|}
end_function
begin_function
DECL|function|objectRemoveHook
specifier|static
name|void
name|objectRemoveHook
parameter_list|(
name|QObject
modifier|*
parameter_list|)
block|{
operator|--
name|objectCount
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testAddRemoveObject
name|void
name|tst_QHooks
operator|::
name|testAddRemoveObject
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|qtHookData
index|[
name|QHooks
operator|::
name|AddQObject
index|]
argument_list|,
operator|(
name|quintptr
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qtHookData
index|[
name|QHooks
operator|::
name|RemoveQObject
index|]
argument_list|,
operator|(
name|quintptr
operator|)
literal|0
argument_list|)
expr_stmt|;
name|qtHookData
index|[
name|QHooks
operator|::
name|AddQObject
index|]
operator|=
operator|(
name|quintptr
operator|)
operator|&
name|objectAddHook
expr_stmt|;
name|qtHookData
index|[
name|QHooks
operator|::
name|RemoveQObject
index|]
operator|=
operator|(
name|quintptr
operator|)
operator|&
name|objectRemoveHook
expr_stmt|;
name|QCOMPARE
argument_list|(
name|objectCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|obj
init|=
operator|new
name|QObject
decl_stmt|;
name|QVERIFY
argument_list|(
name|objectCount
operator|>
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|obj
expr_stmt|;
name|QCOMPARE
argument_list|(
name|objectCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QHooks
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qhooks.moc"
end_include
end_unit
