begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtGui/QtGui>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QtWidgets>
end_include
begin_class
DECL|class|tst_QItemSelectionModel
class|class
name|tst_QItemSelectionModel
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QItemSelectionModel
parameter_list|()
constructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|clear_data
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|void
name|clearAndSelect
parameter_list|()
function_decl|;
name|void
name|toggleSelection
parameter_list|()
function_decl|;
name|void
name|select_data
parameter_list|()
function_decl|;
name|void
name|select
parameter_list|()
function_decl|;
name|void
name|persistentselections_data
parameter_list|()
function_decl|;
name|void
name|persistentselections
parameter_list|()
function_decl|;
name|void
name|resetModel
parameter_list|()
function_decl|;
name|void
name|removeRows_data
parameter_list|()
function_decl|;
name|void
name|removeRows
parameter_list|()
function_decl|;
name|void
name|removeColumns_data
parameter_list|()
function_decl|;
name|void
name|removeColumns
parameter_list|()
function_decl|;
name|void
name|modelLayoutChanged_data
parameter_list|()
function_decl|;
name|void
name|modelLayoutChanged
parameter_list|()
function_decl|;
name|void
name|selectedRows_data
parameter_list|()
function_decl|;
name|void
name|selectedRows
parameter_list|()
function_decl|;
name|void
name|selectedColumns_data
parameter_list|()
function_decl|;
name|void
name|selectedColumns
parameter_list|()
function_decl|;
name|void
name|setCurrentIndex
parameter_list|()
function_decl|;
name|void
name|splitOnInsert
parameter_list|()
function_decl|;
name|void
name|task196285_rowIntersectsSelection
parameter_list|()
function_decl|;
name|void
name|unselectable
parameter_list|()
function_decl|;
name|void
name|task220420_selectedIndexes
parameter_list|()
function_decl|;
name|void
name|task240734_layoutChanged
parameter_list|()
function_decl|;
name|void
name|merge_data
parameter_list|()
function_decl|;
name|void
name|merge
parameter_list|()
function_decl|;
name|void
name|task119433_isRowSelected
parameter_list|()
function_decl|;
name|void
name|task252069_rowIntersectsSelection
parameter_list|()
function_decl|;
name|void
name|task232634_childrenDeselectionSignal
parameter_list|()
function_decl|;
name|void
name|task260134_layoutChangedWithAllSelected
parameter_list|()
function_decl|;
name|void
name|QTBUG5671_layoutChangedWithAllSelected
parameter_list|()
function_decl|;
name|void
name|QTBUG2804_layoutChangedTreeSelection
parameter_list|()
function_decl|;
name|void
name|deselectRemovedMiddleRange
parameter_list|()
function_decl|;
name|void
name|rangeOperatorLessThan_data
parameter_list|()
function_decl|;
name|void
name|rangeOperatorLessThan
parameter_list|()
function_decl|;
name|void
name|testDifferentModels
parameter_list|()
function_decl|;
name|void
name|testValidRangesInSelectionsAfterReset
parameter_list|()
function_decl|;
name|void
name|testChainedSelectionClear
parameter_list|()
function_decl|;
name|void
name|testClearCurrentIndex
parameter_list|()
function_decl|;
private|private:
DECL|member|model
name|QAbstractItemModel
modifier|*
name|model
decl_stmt|;
DECL|member|selection
name|QItemSelectionModel
modifier|*
name|selection
decl_stmt|;
block|}
class|;
end_class
begin_function_decl
name|QDataStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QDataStream
modifier|&
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|QDataStream
modifier|&
name|operator
name|>>
parameter_list|(
name|QDataStream
modifier|&
parameter_list|,
name|QModelIndex
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|QDataStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QDataStream
modifier|&
parameter_list|,
specifier|const
name|QModelIndexList
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|QDataStream
modifier|&
name|operator
name|>>
parameter_list|(
name|QDataStream
modifier|&
parameter_list|,
name|QModelIndexList
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_typedef
DECL|typedef|IntPair
typedef|typedef
name|QPair
argument_list|<
name|int
argument_list|,
name|int
argument_list|>
name|IntPair
typedef|;
end_typedef
begin_typedef
DECL|typedef|PairList
typedef|typedef
name|QList
argument_list|<
name|IntPair
argument_list|>
name|PairList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|PairList
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QModelIndex
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QModelIndexList
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntList
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QItemSelection
argument_list|)
end_macro
begin_class
DECL|class|QStreamHelper
class|class
name|QStreamHelper
super|:
specifier|public
name|QAbstractItemModel
block|{
public|public:
DECL|function|QStreamHelper
name|QStreamHelper
parameter_list|()
block|{}
DECL|function|create
specifier|static
name|QModelIndex
name|create
parameter_list|(
name|int
name|row
init|=
operator|-
literal|1
parameter_list|,
name|int
name|column
init|=
operator|-
literal|1
parameter_list|,
name|void
modifier|*
name|data
init|=
literal|0
parameter_list|)
block|{
name|QStreamHelper
name|helper
decl_stmt|;
return|return
name|helper
operator|.
name|QAbstractItemModel
operator|::
name|createIndex
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|data
argument_list|)
return|;
block|}
DECL|function|index
name|QModelIndex
name|index
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|QModelIndex
argument_list|()
return|;
block|}
DECL|function|parent
name|QModelIndex
name|parent
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
name|QModelIndex
argument_list|()
return|;
block|}
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
literal|0
return|;
block|}
DECL|function|data
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|,
name|int
init|=
name|Qt
operator|::
name|DisplayRole
parameter_list|)
specifier|const
block|{
return|return
name|QVariant
argument_list|()
return|;
block|}
DECL|function|hasChildren
name|bool
name|hasChildren
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
literal|false
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|operator <<
name|QDataStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QDataStream
modifier|&
name|s
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|input
parameter_list|)
block|{
name|s
operator|<<
name|input
operator|.
name|row
argument_list|()
operator|<<
name|input
operator|.
name|column
argument_list|()
operator|<<
cast|reinterpret_cast
argument_list|<
name|qlonglong
argument_list|>
argument_list|(
name|input
operator|.
name|internalPointer
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_function
DECL|function|operator >>
name|QDataStream
modifier|&
name|operator
name|>>
parameter_list|(
name|QDataStream
modifier|&
name|s
parameter_list|,
name|QModelIndex
modifier|&
name|output
parameter_list|)
block|{
name|int
name|r
decl_stmt|,
name|c
decl_stmt|;
name|qlonglong
name|ptr
decl_stmt|;
name|s
operator|>>
name|r
expr_stmt|;
name|s
operator|>>
name|c
expr_stmt|;
name|s
operator|>>
name|ptr
expr_stmt|;
name|output
operator|=
name|QStreamHelper
operator|::
name|create
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
cast|reinterpret_cast
argument_list|<
name|void
operator|*
argument_list|>
argument_list|(
name|ptr
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_function
DECL|function|operator <<
name|QDataStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QDataStream
modifier|&
name|s
parameter_list|,
specifier|const
name|QModelIndexList
modifier|&
name|input
parameter_list|)
block|{
name|s
operator|<<
name|input
operator|.
name|count
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|input
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|s
operator|<<
name|input
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_function
DECL|function|operator >>
name|QDataStream
modifier|&
name|operator
name|>>
parameter_list|(
name|QDataStream
modifier|&
name|s
parameter_list|,
name|QModelIndexList
modifier|&
name|output
parameter_list|)
block|{
name|QModelIndex
name|tmpIndex
decl_stmt|;
name|int
name|count
decl_stmt|;
name|s
operator|>>
name|count
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
block|{
name|s
operator|>>
name|tmpIndex
expr_stmt|;
name|output
operator|<<
name|tmpIndex
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
end_function
begin_constructor
DECL|function|tst_QItemSelectionModel
name|tst_QItemSelectionModel
operator|::
name|tst_QItemSelectionModel
parameter_list|()
member_init_list|:
name|model
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|selection
argument_list|(
literal|0
argument_list|)
block|{ }
end_constructor
begin_comment
comment|/*   This test usually uses a model with a 5x5 table   -------------------------------------------   |  0,0  |  0,1    |  0,2  |  0,3    |  0,4  |   -------------------------------------------   |  1,0  |  1,1    |  1,2  |  1,3    |  1,4  |   -------------------------------------------   |  2,0  |  2,1    |  2,2  |  2,3    |  2,4  |   -------------------------------------------   |  3,0  |  3,1    |  3,2  |  3,3    |  3,4  |   -------------------------------------------   |  4,0  |  4,1    |  4,2  |  4,3    |  4,4  |   -------------------------------------------    ...that for each row has a children in a new 5x5 table ad infinitum.  */
end_comment
begin_function
DECL|function|initTestCase
name|void
name|tst_QItemSelectionModel
operator|::
name|initTestCase
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|QItemSelection
argument_list|>
argument_list|(
literal|"QItemSelection"
argument_list|)
expr_stmt|;
name|model
operator|=
operator|new
name|QStandardItemModel
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QModelIndex
name|parent
init|=
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|model
operator|->
name|insertRows
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
name|parent
argument_list|)
expr_stmt|;
name|model
operator|->
name|insertColumns
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
name|parent
argument_list|)
expr_stmt|;
name|selection
operator|=
operator|new
name|QItemSelectionModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QItemSelectionModel
operator|::
name|cleanupTestCase
parameter_list|()
block|{
operator|delete
name|selection
expr_stmt|;
operator|delete
name|model
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QItemSelectionModel
operator|::
name|init
parameter_list|()
block|{
name|selection
operator|->
name|clear
argument_list|()
expr_stmt|;
while|while
condition|(
name|model
operator|->
name|rowCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
operator|>
literal|5
condition|)
name|model
operator|->
name|removeRow
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
name|model
operator|->
name|rowCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
operator|<
literal|5
condition|)
name|model
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear_data
name|void
name|tst_QItemSelectionModel
operator|::
name|clear_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QModelIndexList
argument_list|>
argument_list|(
literal|"indexList"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"commandList"
argument_list|)
expr_stmt|;
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (1, 0): Select|Rows"
argument_list|)
operator|<<
name|index
operator|<<
name|command
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (1, 0): Select|Columns"
argument_list|)
operator|<<
name|index
operator|<<
name|command
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|SelectCurrent
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0), (1, 1) and (2, 2): Select, Select, SelectCurrent"
argument_list|)
operator|<<
name|index
operator|<<
name|command
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0), (1, 1) and (1, 1): Select, Select, Toggle"
argument_list|)
operator|<<
name|index
operator|<<
name|command
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"child (0, 0) of (0, 0): Select|Rows"
argument_list|)
operator|<<
name|index
operator|<<
name|command
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|clear
name|void
name|tst_QItemSelectionModel
operator|::
name|clear
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QModelIndexList
argument_list|,
name|indexList
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|commandList
argument_list|)
expr_stmt|;
comment|// do selections
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|indexList
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|selection
operator|->
name|select
argument_list|(
name|indexList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
operator|(
name|QItemSelectionModel
operator|::
name|SelectionFlags
operator|)
name|commandList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// test that we have selected items
name|QVERIFY
argument_list|(
operator|!
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|selection
operator|->
name|clear
argument_list|()
expr_stmt|;
comment|// test that they were all cleared
name|QVERIFY
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearAndSelect
name|void
name|tst_QItemSelectionModel
operator|::
name|clearAndSelect
parameter_list|()
block|{
comment|// populate selectionmodel
name|selection
operator|->
name|select
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
comment|// ClearAndSelect with empty selection
name|QItemSelection
name|emptySelection
decl_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|emptySelection
argument_list|,
name|QItemSelectionModel
operator|::
name|ClearAndSelect
argument_list|)
expr_stmt|;
comment|// verify the selectionmodel is empty
name|QVERIFY
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
operator|==
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toggleSelection
name|void
name|tst_QItemSelectionModel
operator|::
name|toggleSelection
parameter_list|()
block|{
comment|//test the toggle selection and checks whether selectedIndex
comment|//and hasSelection returns the correct value
name|selection
operator|->
name|clearSelection
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
operator|==
literal|false
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
comment|// populate selectionmodel
name|selection
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
operator|==
literal|true
argument_list|)
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
operator|==
literal|false
argument_list|)
expr_stmt|;
comment|// populate selectionmodel with rows
name|selection
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Toggle
operator||
name|QItemSelectionModel
operator|::
name|Rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|->
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
operator|==
literal|true
argument_list|)
expr_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Toggle
operator||
name|QItemSelectionModel
operator|::
name|Rows
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
operator|==
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|select_data
name|void
name|tst_QItemSelectionModel
operator|::
name|select_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QModelIndexList
argument_list|>
argument_list|(
literal|"indexList"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"useRanges"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"commandList"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QModelIndexList
argument_list|>
argument_list|(
literal|"expectedList"
argument_list|)
expr_stmt|;
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"child (0, 0) of (0, 0): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Deselect
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0): Deselect"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0): Toggle"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (0, 0): Select and Toggle"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Deselect
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (0, 0): Select and Deselect"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and child (0, 0) of (0, 0): Select and ClearAndSelect"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Deselect
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 4, 0) and (0, 1 to 4, 1) and (0, 0 to 4, 1): Select and Select and Deselect"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (4, 4): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (4, 4): Select and ClearAndSelect"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (4, 4): Select|Rows"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|QModelIndex
name|parent
init|=
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
name|parent
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|parent
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"child (0, 0) and (4, 4) of (0, 0): Select|Rows"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0) and (4, 4): Select|Columns"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"child (0, 0) and (4, 4) of (0, 0): Select|Columns"
argument_list|)
operator|<<
name|index
operator|<<
literal|false
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 4, 0): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to child 0, 0): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"child (0, 0) of (0, 0) to child (0, 0) of (1, 0): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 4, 4): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 4, 0): Select|Rows"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 0, 4): Select|Columns"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 4, 4): Select|Rows"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
operator|)
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 4, 4): Select|Columns"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 2 to 4, 2) and (2, 0 to 2, 4): Select"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|SelectCurrent
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 2 to 4, 2) and (2, 0 to 2, 4): Select and SelectCurrent"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 2 to 4, 2) and (2, 0 to 2, 4): Select and Toggle"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Deselect
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 2 to 4, 2) and (2, 0 to 2, 4): Select and Deselect"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (0, 0 to 0, 0): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (0, 1 to 0, 1): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (0, 2 to 0, 2): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (1, 0 to 1, 0): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (1, 1 to 1, 1): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (1, 2 to 1, 2): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (2, 0 to 2, 0): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (2, 1 to 2, 1): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|index
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Select
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|Toggle
expr_stmt|;
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"(0, 0 to 2, 2) and (2, 2 to 2, 2): Select and Toggle at selection boundary"
argument_list|)
operator|<<
name|index
operator|<<
literal|true
operator|<<
name|command
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QModelIndexList
name|indexes
decl_stmt|;
name|IntList
name|commands
decl_stmt|;
name|QModelIndexList
name|expected
decl_stmt|;
name|indexes
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// press 0
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// release 0
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// press 1
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// release 1
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// press 2
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// release 2
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// press 3
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// release 3
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|// press 2 again
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
comment|// move 2
name|commands
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|NoUpdate
operator|)
comment|// press 0
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Toggle
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
comment|// release 0
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|NoUpdate
operator|)
comment|// press 1
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Toggle
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
comment|// release 1
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|NoUpdate
operator|)
comment|// press 2
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Toggle
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
comment|// release 2
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|NoUpdate
operator|)
comment|// press 3
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Toggle
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
comment|// release 3
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|NoUpdate
operator|)
comment|// press 2 again
operator|<<
operator|(
name|QItemSelectionModel
operator|::
name|Toggle
comment|/*Current*/
operator||
name|QItemSelectionModel
operator|::
name|Rows
operator|)
expr_stmt|;
comment|// move 2
name|expected
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
comment|/*<< model->index(2, 0, QModelIndex())<< model->index(2, 1, QModelIndex())<< model->index(2, 2, QModelIndex())<< model->index(2, 3, QModelIndex())<< model->index(2, 4, QModelIndex())           */
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
operator|<<
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simulated treeview multiselection behavior"
argument_list|)
operator|<<
name|indexes
operator|<<
literal|true
operator|<<
name|commands
operator|<<
name|expected
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|select
name|void
name|tst_QItemSelectionModel
operator|::
name|select
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QModelIndexList
argument_list|,
name|indexList
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|useRanges
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|commandList
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QModelIndexList
argument_list|,
name|expectedList
argument_list|)
expr_stmt|;
name|int
name|lastCommand
init|=
literal|0
decl_stmt|;
comment|// do selections
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|commandList
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|useRanges
condition|)
block|{
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexList
operator|.
name|at
argument_list|(
literal|2
operator|*
name|i
argument_list|)
argument_list|,
name|indexList
operator|.
name|at
argument_list|(
literal|2
operator|*
name|i
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|,
operator|(
name|QItemSelectionModel
operator|::
name|SelectionFlags
operator|)
name|commandList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|selection
operator|->
name|select
argument_list|(
name|indexList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
operator|(
name|QItemSelectionModel
operator|::
name|SelectionFlags
operator|)
name|commandList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lastCommand
operator|=
name|commandList
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|QModelIndexList
name|selectedList
init|=
name|selection
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
operator|!=
name|selectedList
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// test that the number of indices are as expected
name|QVERIFY2
argument_list|(
name|selectedList
operator|.
name|count
argument_list|()
operator|==
name|expectedList
operator|.
name|count
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"expected indices: %1 actual indices: %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|expectedList
operator|.
name|count
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|selectedList
operator|.
name|count
argument_list|()
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
comment|// test existence of each index
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedList
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QVERIFY2
argument_list|(
name|selectedList
operator|.
name|contains
argument_list|(
name|expectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"expected index(%1, %2) not found in selectedIndexes()"
argument_list|)
operator|.
name|arg
argument_list|(
name|expectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|row
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|expectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|column
argument_list|()
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test that isSelected agrees
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|indexList
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QModelIndex
name|idx
init|=
name|indexList
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|selection
operator|->
name|isSelected
argument_list|(
name|idx
argument_list|)
operator|==
name|selectedList
operator|.
name|contains
argument_list|(
name|idx
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"isSelected(index: %1, %2) does not match selectedIndexes()"
argument_list|)
operator|.
name|arg
argument_list|(
name|idx
operator|.
name|row
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|idx
operator|.
name|column
argument_list|()
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//for now we assume Rows/Columns flag is the same for all commands, therefore we just check lastCommand
comment|// test that isRowSelected agrees
if|if
condition|(
name|lastCommand
operator|&
name|QItemSelectionModel
operator|::
name|Rows
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectedList
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|QVERIFY2
argument_list|(
name|selection
operator|->
name|isRowSelected
argument_list|(
name|selectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|row
argument_list|()
argument_list|,
name|model
operator|->
name|parent
argument_list|(
name|selectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"isRowSelected(row: %1) does not match selectedIndexes()"
argument_list|)
operator|.
name|arg
argument_list|(
name|selectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|row
argument_list|()
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// test that isColumnSelected agrees
if|if
condition|(
name|lastCommand
operator|&
name|QItemSelectionModel
operator|::
name|Columns
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectedList
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|QVERIFY2
argument_list|(
name|selection
operator|->
name|isColumnSelected
argument_list|(
name|selectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|column
argument_list|()
argument_list|,
name|model
operator|->
name|parent
argument_list|(
name|selectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"isColumnSelected(column: %1) does not match selectedIndexes()"
argument_list|)
operator|.
name|arg
argument_list|(
name|selectedList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|column
argument_list|()
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|persistentselections_data
name|void
name|tst_QItemSelectionModel
operator|::
name|persistentselections_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|PairList
argument_list|>
argument_list|(
literal|"indexList"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"commandList"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"insertRows"
argument_list|)
expr_stmt|;
comment|// start, count
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"insertColumns"
argument_list|)
expr_stmt|;
comment|// start, count
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"deleteRows"
argument_list|)
expr_stmt|;
comment|// start, count
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"deleteColumns"
argument_list|)
expr_stmt|;
comment|// start, count
name|QTest
operator|::
name|addColumn
argument_list|<
name|PairList
argument_list|>
argument_list|(
literal|"expectedList"
argument_list|)
expr_stmt|;
name|PairList
name|index
decl_stmt|,
name|expected
decl_stmt|;
name|IntList
name|command
decl_stmt|,
name|insertRows
decl_stmt|,
name|insertColumns
decl_stmt|,
name|deleteRows
decl_stmt|,
name|deleteColumns
decl_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|deleteRows
operator|<<
literal|4
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0). Delete last row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|deleteRows
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0). Delete first row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|deleteRows
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (1, 0). Delete first row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|insertRows
operator|<<
literal|5
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0). Append row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|insertRows
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0). Insert before first row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|insertRows
operator|<<
literal|5
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0) to (4, 0). Append row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|insertRows
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0) to (4, 0). Insert before first row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|deleteRows
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0) to (4, 0). Delete first row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|deleteRows
operator|<<
literal|4
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0) to (4, 0). Delete last row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|deleteRows
operator|<<
literal|1
operator|<<
literal|3
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0) to (4, 0). Deleting all but first and last row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
name|index
operator|.
name|clear
argument_list|()
expr_stmt|;
name|expected
operator|.
name|clear
argument_list|()
expr_stmt|;
name|command
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|insertColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteRows
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deleteColumns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|index
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|command
operator|<<
name|QItemSelectionModel
operator|::
name|ClearAndSelect
expr_stmt|;
name|insertRows
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|expected
operator|<<
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
comment|// the inserted row should not be selected
operator|<<
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|)
operator|<<
name|IntPair
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ClearAndSelect (0, 0) to (4, 0). Insert after first row."
argument_list|)
operator|<<
name|index
operator|<<
name|command
operator|<<
name|insertRows
operator|<<
name|insertColumns
operator|<<
name|deleteRows
operator|<<
name|deleteColumns
operator|<<
name|expected
expr_stmt|;
block|}
end_function
begin_function
DECL|function|persistentselections
name|void
name|tst_QItemSelectionModel
operator|::
name|persistentselections
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|PairList
argument_list|,
name|indexList
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|commandList
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|insertRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|insertColumns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|deleteRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|deleteColumns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|PairList
argument_list|,
name|expectedList
argument_list|)
expr_stmt|;
comment|// make sure the model is sane (5x5)
name|QCOMPARE
argument_list|(
name|model
operator|->
name|rowCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|->
name|columnCount
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// do selections
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|commandList
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|indexList
operator|.
name|count
argument_list|()
operator|==
name|commandList
operator|.
name|count
argument_list|()
condition|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|->
name|index
argument_list|(
name|indexList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|first
argument_list|,
name|indexList
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|second
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|index
argument_list|,
operator|(
name|QItemSelectionModel
operator|::
name|SelectionFlags
operator|)
name|commandList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QModelIndex
name|tl
init|=
name|model
operator|->
name|index
argument_list|(
name|indexList
operator|.
name|at
argument_list|(
literal|2
operator|*
name|i
argument_list|)
operator|.
name|first
argument_list|,
name|indexList
operator|.
name|at
argument_list|(
literal|2
operator|*
name|i
argument_list|)
operator|.
name|second
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QModelIndex
name|br
init|=
name|model
operator|->
name|index
argument_list|(
name|indexList
operator|.
name|at
argument_list|(
literal|2
operator|*
name|i
operator|+
literal|1
argument_list|)
operator|.
name|first
argument_list|,
name|indexList
operator|.
name|at
argument_list|(
literal|2
operator|*
name|i
operator|+
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|selection
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|tl
argument_list|,
name|br
argument_list|)
argument_list|,
operator|(
name|QItemSelectionModel
operator|::
name|SelectionFlags
operator|)
name|commandList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// test that we have selected items
name|QVERIFY
argument_list|(
operator|!
name|selection
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selection
operator|->
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
comment|// insert/delete row and/or columns
if|if
condition|(
name|insertRows
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
name|model
operator|->
name|insertRows
argument_list|(
name|insertRows
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|insertRows
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|insertColumns
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
name|model
operator|->
name|insertColumns
argument_list|(
name|insertColumns
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|insertColumns
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|deleteRows
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
name|model
operator|->
name|removeRows
argument_list|(
name|deleteRows
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|deleteRows
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|deleteColumns
operator|.
name|count
argument_list|()
operator|>
literal|1
condition|)
name|model
operator|->
name|removeColumns
argument_list|(
name|deleteColumns
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|deleteColumns
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
comment|// check that the selected items are the correct number and indexes
name|QModelIndexList
name|selectedList
init|=
name|selection
operator|->
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selectedList
operator|.
name|count
argument_list|()
argument_list|,
name|expectedList
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|IntPair
name|pair
decl|,
name|expectedList
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|->
name|index
argument_list|(
name|pair
operator|.
name|first
argument_list|,
name|pair
operator|.
name|second
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|selectedList
operator|.
name|contains
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// "make reset public"-model
end_comment
begin_class
DECL|class|MyStandardItemModel
class|class
name|MyStandardItemModel
super|:
specifier|public
name|QStandardItemModel
block|{
name|Q_OBJECT
public|public:
DECL|function|MyStandardItemModel
specifier|inline
name|MyStandardItemModel
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|)
member_init_list|:
name|QStandardItemModel
argument_list|(
name|i1
argument_list|,
name|i2
argument_list|)
block|{}
DECL|function|reset
specifier|inline
name|void
name|reset
parameter_list|()
block|{
name|QStandardItemModel
operator|::
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|resetModel
name|void
name|tst_QItemSelectionModel
operator|::
name|resetModel
parameter_list|()
block|{
name|MyStandardItemModel
name|model
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QTreeView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|reset
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selection
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|hasSelection
argument_list|()
operator|==
literal|false
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// make sure we don't get an "old selection"
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|userType
argument_list|()
argument_list|,
name|qMetaTypeId
argument_list|<
name|QItemSelection
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qvariant_cast
argument_list|<
name|QItemSelection
argument_list|>
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows_data
name|void
name|tst_QItemSelectionModel
operator|::
name|removeRows_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectTop"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectLeft"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectBottom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectRight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"removeTop"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"removeBottom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedTop"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedLeft"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedBottom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4<0,1><1,1>"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeRows
name|void
name|tst_QItemSelectionModel
operator|::
name|removeRows
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectTop
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectLeft
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectBottom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectRight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|removeTop
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|removeBottom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedTop
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedLeft
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedBottom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRight
argument_list|)
expr_stmt|;
name|MyStandardItemModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selections
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|selections
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|tl
init|=
name|model
operator|.
name|index
argument_list|(
name|selectTop
argument_list|,
name|selectLeft
argument_list|)
decl_stmt|;
name|QModelIndex
name|br
init|=
name|model
operator|.
name|index
argument_list|(
name|selectBottom
argument_list|,
name|selectRight
argument_list|)
decl_stmt|;
name|selections
operator|.
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|tl
argument_list|,
name|br
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|ClearAndSelect
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|tl
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|br
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeRows
argument_list|(
name|removeTop
argument_list|,
name|removeBottom
operator|-
name|removeTop
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|tl
operator|=
name|model
operator|.
name|index
argument_list|(
name|expectedTop
argument_list|,
name|expectedLeft
argument_list|)
expr_stmt|;
name|br
operator|=
name|model
operator|.
name|index
argument_list|(
name|expectedBottom
argument_list|,
name|expectedRight
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|tl
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|br
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns_data
name|void
name|tst_QItemSelectionModel
operator|::
name|removeColumns_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectTop"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectLeft"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectBottom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"selectRight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"removeLeft"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"removeRight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedTop"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedLeft"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedBottom"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedRight"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4x4<0,1><1,1>"
argument_list|)
operator|<<
literal|4
operator|<<
literal|4
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeColumns
name|void
name|tst_QItemSelectionModel
operator|::
name|removeColumns
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectTop
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectLeft
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectBottom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|selectRight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|removeLeft
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|removeRight
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedTop
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedLeft
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedBottom
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedRight
argument_list|)
expr_stmt|;
name|MyStandardItemModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selections
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|selections
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|tl
init|=
name|model
operator|.
name|index
argument_list|(
name|selectTop
argument_list|,
name|selectLeft
argument_list|)
decl_stmt|;
name|QModelIndex
name|br
init|=
name|model
operator|.
name|index
argument_list|(
name|selectBottom
argument_list|,
name|selectRight
argument_list|)
decl_stmt|;
name|selections
operator|.
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|tl
argument_list|,
name|br
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|ClearAndSelect
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|tl
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|br
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|hasSelection
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeColumns
argument_list|(
name|removeLeft
argument_list|,
name|removeRight
operator|-
name|removeLeft
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|tl
operator|=
name|model
operator|.
name|index
argument_list|(
name|expectedTop
argument_list|,
name|expectedLeft
argument_list|)
expr_stmt|;
name|br
operator|=
name|model
operator|.
name|index
argument_list|(
name|expectedBottom
argument_list|,
name|expectedRight
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|tl
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selections
operator|.
name|isSelected
argument_list|(
name|br
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_typedef
DECL|typedef|IntListList
typedef|typedef
name|QList
argument_list|<
name|IntList
argument_list|>
name|IntListList
typedef|;
end_typedef
begin_typedef
DECL|typedef|IntPairPair
typedef|typedef
name|QPair
argument_list|<
name|IntPair
argument_list|,
name|IntPair
argument_list|>
name|IntPairPair
typedef|;
end_typedef
begin_typedef
DECL|typedef|IntPairPairList
typedef|typedef
name|QList
argument_list|<
name|IntPairPair
argument_list|>
name|IntPairPairList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntListList
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntPairPair
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntPairPairList
argument_list|)
end_macro
begin_function
DECL|function|modelLayoutChanged_data
name|void
name|tst_QItemSelectionModel
operator|::
name|modelLayoutChanged_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntListList
argument_list|>
argument_list|(
literal|"items"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntPairPairList
argument_list|>
argument_list|(
literal|"initialSelectedRanges"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortOrder"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sortColumn"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntPairPairList
argument_list|>
argument_list|(
literal|"expectedSelectedRanges"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"everything selected, then row order reversed"
argument_list|)
operator|<<
operator|(
name|IntListList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|)
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"first two rows selected, then row order reversed"
argument_list|)
operator|<<
operator|(
name|IntListList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|)
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"middle two rows selected, then row order reversed"
argument_list|)
operator|<<
operator|(
name|IntListList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|0
operator|)
operator|)
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|DescendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two ranges"
argument_list|)
operator|<<
operator|(
name|IntListList
argument_list|()
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|1
operator|)
operator|)
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|AscendingOrder
argument_list|)
operator|<<
literal|0
operator|<<
operator|(
name|IntPairPairList
argument_list|()
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|IntPairPair
argument_list|(
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|IntPair
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|modelLayoutChanged
name|void
name|tst_QItemSelectionModel
operator|::
name|modelLayoutChanged
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|IntListList
argument_list|,
name|items
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntPairPairList
argument_list|,
name|initialSelectedRanges
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortOrder
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sortColumn
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntPairPairList
argument_list|,
name|expectedSelectedRanges
argument_list|)
expr_stmt|;
name|MyStandardItemModel
name|model
argument_list|(
name|items
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|count
argument_list|()
argument_list|,
name|items
operator|.
name|count
argument_list|()
argument_list|)
decl_stmt|;
comment|// initialize model data
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|model
operator|.
name|columnCount
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|index
argument_list|,
name|items
operator|.
name|at
argument_list|(
name|j
argument_list|)
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
expr_stmt|;
block|}
block|}
comment|// select initial ranges
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
foreach|foreach
control|(
name|IntPairPair
name|range
decl|,
name|initialSelectedRanges
control|)
block|{
name|IntPair
name|tl
init|=
name|range
operator|.
name|first
decl_stmt|;
name|IntPair
name|br
init|=
name|range
operator|.
name|second
decl_stmt|;
name|QItemSelection
name|selection
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|tl
operator|.
name|first
argument_list|,
name|tl
operator|.
name|second
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|br
operator|.
name|first
argument_list|,
name|br
operator|.
name|second
argument_list|)
argument_list|)
decl_stmt|;
name|selectionModel
operator|.
name|select
argument_list|(
name|selection
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
block|}
comment|// sort the model
name|model
operator|.
name|sort
argument_list|(
name|sortColumn
argument_list|,
name|Qt
operator|::
name|SortOrder
argument_list|(
name|sortOrder
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify that selection is as expected
name|QItemSelection
name|selection
init|=
name|selectionModel
operator|.
name|selection
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selection
operator|.
name|count
argument_list|()
argument_list|,
name|expectedSelectedRanges
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|hasSelection
argument_list|()
operator|==
operator|!
name|expectedSelectedRanges
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedSelectedRanges
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|IntPairPair
name|expectedRange
init|=
name|expectedSelectedRanges
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|IntPair
name|expectedTl
init|=
name|expectedRange
operator|.
name|first
decl_stmt|;
name|IntPair
name|expectedBr
init|=
name|expectedRange
operator|.
name|second
decl_stmt|;
name|QItemSelectionRange
name|actualRange
init|=
name|selection
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QModelIndex
name|actualTl
init|=
name|actualRange
operator|.
name|topLeft
argument_list|()
decl_stmt|;
name|QModelIndex
name|actualBr
init|=
name|actualRange
operator|.
name|bottomRight
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|actualTl
operator|.
name|row
argument_list|()
argument_list|,
name|expectedTl
operator|.
name|first
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualTl
operator|.
name|column
argument_list|()
argument_list|,
name|expectedTl
operator|.
name|second
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualBr
operator|.
name|row
argument_list|()
argument_list|,
name|expectedBr
operator|.
name|first
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|actualBr
operator|.
name|column
argument_list|()
argument_list|,
name|expectedBr
operator|.
name|second
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|selectedRows_data
name|void
name|tst_QItemSelectionModel
operator|::
name|selectedRows_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"column"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"selectRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"expectedRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"unexpectedRows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10, first row"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|5
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10, first 4 rows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|4
operator|<<
literal|5
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10, last 4 rows"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|6
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectedRows
name|void
name|tst_QItemSelectionModel
operator|::
name|selectedRows
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|selectRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|expectedRows
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|unexpectedRows
argument_list|)
expr_stmt|;
name|MyStandardItemModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectRows
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|selectionModel
operator|.
name|select
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|selectRows
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|selectRows
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|isRowSelected
argument_list|(
name|expectedRows
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|selectRows
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|.
name|isRowSelected
argument_list|(
name|unexpectedRows
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndexList
name|selectedRowIndexes
init|=
name|selectionModel
operator|.
name|selectedRows
argument_list|(
name|column
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selectedRowIndexes
operator|.
name|count
argument_list|()
argument_list|,
name|expectedRows
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|qSort
argument_list|(
name|selectedRowIndexes
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|l
init|=
literal|0
init|;
name|l
operator|<
name|selectedRowIndexes
operator|.
name|count
argument_list|()
condition|;
operator|++
name|l
control|)
block|{
name|QCOMPARE
argument_list|(
name|selectedRowIndexes
operator|.
name|at
argument_list|(
name|l
argument_list|)
operator|.
name|row
argument_list|()
argument_list|,
name|expectedRows
operator|.
name|at
argument_list|(
name|l
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selectedRowIndexes
operator|.
name|at
argument_list|(
name|l
argument_list|)
operator|.
name|column
argument_list|()
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|selectedColumns_data
name|void
name|tst_QItemSelectionModel
operator|::
name|selectedColumns_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rowCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"columnCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"selectColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"expectedColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"unexpectedColumns"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10, first columns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|5
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10, first 4 columns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|4
operator|<<
literal|5
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10, last 4 columns"
argument_list|)
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|6
operator|<<
literal|7
operator|<<
literal|8
operator|<<
literal|9
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|4
operator|<<
literal|6
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectedColumns
name|void
name|tst_QItemSelectionModel
operator|::
name|selectedColumns
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|columnCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|selectColumns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|expectedColumns
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|unexpectedColumns
argument_list|)
expr_stmt|;
name|MyStandardItemModel
name|model
argument_list|(
name|rowCount
argument_list|,
name|columnCount
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
name|selectionModel
operator|.
name|select
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
name|selectColumns
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|selectColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|j
control|)
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|isColumnSelected
argument_list|(
name|expectedColumns
operator|.
name|at
argument_list|(
name|j
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|selectColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|k
control|)
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|.
name|isColumnSelected
argument_list|(
name|unexpectedColumns
operator|.
name|at
argument_list|(
name|k
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QModelIndexList
name|selectedColumnIndexes
init|=
name|selectionModel
operator|.
name|selectedColumns
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|selectedColumnIndexes
operator|.
name|count
argument_list|()
argument_list|,
name|expectedColumns
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|qSort
argument_list|(
name|selectedColumnIndexes
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|l
init|=
literal|0
init|;
name|l
operator|<
name|selectedColumnIndexes
operator|.
name|count
argument_list|()
condition|;
operator|++
name|l
control|)
block|{
name|QCOMPARE
argument_list|(
name|selectedColumnIndexes
operator|.
name|at
argument_list|(
name|l
argument_list|)
operator|.
name|column
argument_list|()
argument_list|,
name|expectedColumns
operator|.
name|at
argument_list|(
name|l
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selectedColumnIndexes
operator|.
name|at
argument_list|(
name|l
argument_list|)
operator|.
name|row
argument_list|()
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setCurrentIndex
name|void
name|tst_QItemSelectionModel
operator|::
name|setCurrentIndex
parameter_list|()
block|{
comment|// Build up a simple tree
name|QStandardItemModel
modifier|*
name|treemodel
init|=
operator|new
name|QStandardItemModel
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|treemodel
operator|->
name|insertRow
argument_list|(
literal|0
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|treemodel
operator|->
name|insertRow
argument_list|(
literal|1
argument_list|,
operator|new
name|QStandardItem
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QTreeView
name|treeView
decl_stmt|;
name|treeView
operator|.
name|setModel
argument_list|(
name|treemodel
argument_list|)
expr_stmt|;
name|QItemSelectionModel
modifier|*
name|selectionModel
init|=
name|treeView
operator|.
name|selectionModel
argument_list|()
decl_stmt|;
name|selectionModel
operator|->
name|setCurrentIndex
argument_list|(
name|treemodel
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|treemodel
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectCurrent
argument_list|)
expr_stmt|;
name|QSignalSpy
name|currentSpy
argument_list|(
name|selectionModel
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|rowSpy
argument_list|(
name|selectionModel
argument_list|,
name|SIGNAL
argument_list|(
name|currentRowChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|columnSpy
argument_list|(
name|selectionModel
argument_list|,
name|SIGNAL
argument_list|(
name|currentColumnChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|currentSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rowSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|columnSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// Select the same row and column indexes, but with a different parent
name|selectionModel
operator|->
name|setCurrentIndex
argument_list|(
name|treemodel
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|treemodel
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectCurrent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rowSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|columnSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Select another row in the same parent
name|selectionModel
operator|->
name|setCurrentIndex
argument_list|(
name|treemodel
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|treemodel
operator|->
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectCurrent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|rowSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|columnSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|treemodel
expr_stmt|;
block|}
end_function
begin_function
DECL|function|splitOnInsert
name|void
name|tst_QItemSelectionModel
operator|::
name|splitOnInsert
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|selectionModel
operator|.
name|select
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|model
operator|.
name|insertRow
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeRow
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|.
name|isSelected
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task196285_rowIntersectsSelection
name|void
name|tst_QItemSelectionModel
operator|::
name|task196285_rowIntersectsSelection
parameter_list|()
block|{
name|QTableWidget
name|table
decl_stmt|;
name|table
operator|.
name|setColumnCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|table
operator|.
name|setRowCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|table
operator|.
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractItemModel
modifier|*
name|model
init|=
name|table
operator|.
name|model
argument_list|()
decl_stmt|;
name|QItemSelectionModel
modifier|*
name|selectionModel
init|=
name|table
operator|.
name|selectionModel
argument_list|()
decl_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|->
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|->
name|rowIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|->
name|columnIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Deselect
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|->
name|rowIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|->
name|columnIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|->
name|rowIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|->
name|columnIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|selectionModel
operator|->
name|select
argument_list|(
name|index
argument_list|,
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|->
name|rowIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|->
name|columnIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unselectable
name|void
name|tst_QItemSelectionModel
operator|::
name|unselectable
parameter_list|()
block|{
name|QTreeWidget
name|w
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|w
operator|.
name|setItemSelected
argument_list|(
operator|new
name|QTreeWidgetItem
argument_list|(
operator|&
name|w
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|topLevelItemCount
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedRows
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|10
condition|;
operator|++
name|j
control|)
name|w
operator|.
name|topLevelItem
argument_list|(
name|j
argument_list|)
operator|->
name|setFlags
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedRows
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task220420_selectedIndexes
name|void
name|tst_QItemSelectionModel
operator|::
name|task220420_selectedIndexes
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|QItemSelection
name|selection
decl_stmt|;
name|selection
operator|.
name|append
argument_list|(
name|QItemSelectionRange
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|selection
operator|.
name|append
argument_list|(
name|QItemSelectionRange
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//we select the 1st row
name|selectionModel
operator|.
name|select
argument_list|(
name|selection
argument_list|,
name|QItemSelectionModel
operator|::
name|Rows
operator||
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selectionModel
operator|.
name|selectedRows
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selectionModel
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|model
operator|.
name|columnCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|QtTestTableModel
class|class
name|QtTestTableModel
super|:
specifier|public
name|QAbstractTableModel
block|{
name|Q_OBJECT
public|public:
DECL|function|QtTestTableModel
name|QtTestTableModel
parameter_list|(
name|int
name|rows
init|=
literal|0
parameter_list|,
name|int
name|columns
init|=
literal|0
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractTableModel
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|row_count
argument_list|(
name|rows
argument_list|)
member_init_list|,
name|column_count
argument_list|(
name|columns
argument_list|)
block|{     }
DECL|function|rowCount
name|int
name|rowCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
name|row_count
return|;
block|}
DECL|function|columnCount
name|int
name|columnCount
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
init|=
name|QModelIndex
argument_list|()
parameter_list|)
specifier|const
block|{
return|return
name|column_count
return|;
block|}
DECL|function|isEditable
name|bool
name|isEditable
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
parameter_list|)
specifier|const
block|{
return|return
literal|true
return|;
block|}
DECL|function|data
name|QVariant
name|data
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|idx
parameter_list|,
name|int
name|role
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|role
operator|==
name|Qt
operator|::
name|DisplayRole
operator|||
name|role
operator|==
name|Qt
operator|::
name|EditRole
condition|)
return|return
name|QString
argument_list|(
literal|"[%1,%2]"
argument_list|)
operator|.
name|arg
argument_list|(
name|idx
operator|.
name|row
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|idx
operator|.
name|column
argument_list|()
argument_list|)
return|;
return|return
name|QVariant
argument_list|()
return|;
block|}
DECL|member|row_count
name|int
name|row_count
decl_stmt|;
DECL|member|column_count
name|int
name|column_count
decl_stmt|;
friend|friend
class_decl|class
name|tst_QItemSelectionModel
class_decl|;
block|}
class|;
end_class
begin_function
DECL|function|task240734_layoutChanged
name|void
name|tst_QItemSelectionModel
operator|::
name|task240734_layoutChanged
parameter_list|()
block|{
name|QtTestTableModel
name|model
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|selectionModel
operator|.
name|select
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selectionModel
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
emit|emit
name|model
operator|.
name|layoutAboutToBeChanged
argument_list|()
emit|;
name|model
operator|.
name|row_count
operator|=
literal|5
expr_stmt|;
emit|emit
name|model
operator|.
name|layoutChanged
argument_list|()
emit|;
comment|//The selection should not change.
name|QCOMPARE
argument_list|(
name|selectionModel
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|selectionModel
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|merge_data
name|void
name|tst_QItemSelectionModel
operator|::
name|merge_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QItemSelection
argument_list|>
argument_list|(
literal|"init"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QItemSelection
argument_list|>
argument_list|(
literal|"other"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QItemSelection
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Simple select"
argument_list|)
operator|<<
name|QItemSelection
argument_list|()
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Simple deselect"
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Deselect
argument_list|)
operator|<<
name|QItemSelection
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Simple Toggle deselect"
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
operator|<<
name|QItemSelection
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Simple Toggle select"
argument_list|)
operator|<<
name|QItemSelection
argument_list|()
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Add select"
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Deselect"
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Deselect
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QItemSelection
name|r1
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|r1
operator|.
name|select
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Toggle"
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|<<
name|QItemSelection
argument_list|(
name|model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
name|model
operator|->
name|index
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QItemSelectionModel
operator|::
name|Toggle
argument_list|)
operator|<<
name|r1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|merge
name|void
name|tst_QItemSelectionModel
operator|::
name|merge
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QItemSelection
argument_list|,
name|init
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QItemSelection
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|command
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QItemSelection
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|init
operator|.
name|merge
argument_list|(
name|other
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
argument_list|(
name|command
argument_list|)
argument_list|)
expr_stmt|;
foreach|foreach
control|(
specifier|const
name|QModelIndex
modifier|&
name|idx
decl|,
name|init
operator|.
name|indexes
argument_list|()
control|)
name|QVERIFY
argument_list|(
name|result
operator|.
name|contains
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
foreach|foreach
control|(
specifier|const
name|QModelIndex
modifier|&
name|idx
decl|,
name|result
operator|.
name|indexes
argument_list|()
control|)
name|QVERIFY
argument_list|(
name|init
operator|.
name|contains
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task119433_isRowSelected
name|void
name|tst_QItemSelectionModel
operator|::
name|task119433_isRowSelected
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|UserRole
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QItemSelectionModel
name|sel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|sel
operator|.
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sel
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sel
operator|.
name|isRowSelected
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task252069_rowIntersectsSelection
name|void
name|tst_QItemSelectionModel
operator|::
name|task252069_rowIntersectsSelection
parameter_list|()
block|{
name|QStandardItemModel
name|m
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|8
condition|;
operator|++
name|j
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"Item number %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|i
operator|%
literal|2
operator|==
literal|0
operator|&&
name|j
operator|==
literal|0
operator|)
operator|||
operator|(
name|j
operator|%
literal|2
operator|==
literal|0
operator|&&
name|i
operator|==
literal|0
operator|)
operator|||
name|j
operator|==
literal|5
operator|||
name|i
operator|==
literal|5
condition|)
block|{
name|item
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|//item->setSelectable(false);
block|}
name|m
operator|.
name|setItem
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
block|}
name|QItemSelectionModel
name|selected
argument_list|(
operator|&
name|m
argument_list|)
decl_stmt|;
comment|//nothing is selected
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|5
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|5
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|selected
operator|.
name|select
argument_list|(
name|m
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Rows
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|5
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|5
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|selected
operator|.
name|select
argument_list|(
name|m
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
operator||
name|QItemSelectionModel
operator|::
name|Columns
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|rowIntersectsSelection
argument_list|(
literal|5
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|2
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|3
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selected
operator|.
name|columnIntersectsSelection
argument_list|(
literal|5
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task232634_childrenDeselectionSignal
name|void
name|tst_QItemSelectionModel
operator|::
name|task232634_childrenDeselectionSignal
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|QStandardItem
modifier|*
name|parentItem
init|=
name|model
operator|.
name|invisibleRootItem
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|parentItem
operator|->
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|parentItem
operator|=
name|item
expr_stmt|;
block|}
name|QModelIndex
name|root
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|par
init|=
name|root
operator|.
name|child
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|sel
init|=
name|par
operator|.
name|child
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|selectionModel
operator|.
name|select
argument_list|(
name|sel
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectCurrent
argument_list|)
expr_stmt|;
name|QSignalSpy
name|deselectSpy
argument_list|(
operator|&
name|selectionModel
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
specifier|const
name|QItemSelection
operator|&
argument_list|,
specifier|const
name|QItemSelection
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|deselectSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|removeRows
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|deselectSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
comment|// More testing stress for the patch.
name|model
operator|.
name|clear
argument_list|()
expr_stmt|;
name|selectionModel
operator|.
name|clear
argument_list|()
expr_stmt|;
name|parentItem
operator|=
name|model
operator|.
name|invisibleRootItem
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|parentItem
operator|->
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|parentItem
operator|=
name|model
operator|.
name|invisibleRootItem
argument_list|()
operator|->
name|child
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %0.%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
argument_list|)
decl_stmt|;
name|parentItem
operator|->
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
name|sel
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|child
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|selectionModel
operator|.
name|select
argument_list|(
name|sel
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QModelIndex
name|sel2
init|=
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|child
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|selectionModel
operator|.
name|select
argument_list|(
name|sel2
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|selection
argument_list|()
operator|.
name|contains
argument_list|(
name|sel
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|selection
argument_list|()
operator|.
name|contains
argument_list|(
name|sel2
argument_list|)
argument_list|)
expr_stmt|;
name|deselectSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|model
operator|.
name|removeRow
argument_list|(
literal|0
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|deselectSpy
operator|.
name|count
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|selectionModel
operator|.
name|selection
argument_list|()
operator|.
name|contains
argument_list|(
name|sel
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|selection
argument_list|()
operator|.
name|contains
argument_list|(
name|sel2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task260134_layoutChangedWithAllSelected
name|void
name|tst_QItemSelectionModel
operator|::
name|task260134_layoutChangedWithAllSelected
parameter_list|()
block|{
name|QStringListModel
name|model
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"foo"
operator|<<
literal|"bar"
operator|<<
literal|"foo2"
argument_list|)
decl_stmt|;
name|QSortFilterProxyModel
name|proxy
decl_stmt|;
name|proxy
operator|.
name|setSourceModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QItemSelectionModel
name|selection
argument_list|(
operator|&
name|proxy
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setFilterRegExp
argument_list|(
name|QRegExp
argument_list|(
literal|"f"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QPersistentModelIndex
argument_list|>
name|indexList
decl_stmt|;
name|indexList
operator|<<
name|proxy
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|proxy
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|selection
operator|.
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|indexList
operator|.
name|first
argument_list|()
argument_list|,
name|indexList
operator|.
name|last
argument_list|()
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
comment|//let's check the selection hasn't changed
name|QCOMPARE
argument_list|(
name|selection
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|indexList
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QPersistentModelIndex
name|index
decl|,
name|indexList
control|)
name|QVERIFY
argument_list|(
name|selection
operator|.
name|isSelected
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setFilterRegExp
argument_list|(
name|QRegExp
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|rowCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|//let's check the selection hasn't changed
name|QCOMPARE
argument_list|(
name|selection
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|indexList
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QPersistentModelIndex
name|index
decl|,
name|indexList
control|)
name|QVERIFY
argument_list|(
name|selection
operator|.
name|isSelected
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG5671_layoutChangedWithAllSelected
name|void
name|tst_QItemSelectionModel
operator|::
name|QTBUG5671_layoutChangedWithAllSelected
parameter_list|()
block|{
struct|struct
name|MyFilterModel
super|:
specifier|public
name|QSortFilterProxyModel
block|{
comment|// Override sort filter proxy to remove even numbered rows.
name|bool
name|filtering
decl_stmt|;
specifier|virtual
name|bool
name|filterAcceptsRow
parameter_list|(
name|int
name|source_row
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
comment|/* source_parent */
parameter_list|)
specifier|const
block|{
return|return
operator|!
name|filtering
operator|||
operator|!
operator|(
name|source_row
operator|&
literal|1
operator|)
return|;
block|}
block|}
struct|;
comment|//same as task260134_layoutChangedWithAllSelected but with a sightly bigger model
enum|enum
block|{
name|cNumRows
init|=
literal|30
block|,
name|cNumCols
init|=
literal|20
block|}
enum|;
name|QStandardItemModel
name|model
argument_list|(
name|cNumRows
argument_list|,
name|cNumCols
argument_list|)
decl_stmt|;
name|MyFilterModel
name|proxy
decl_stmt|;
name|proxy
operator|.
name|filtering
operator|=
literal|true
expr_stmt|;
name|proxy
operator|.
name|setSourceModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QItemSelectionModel
name|selection
argument_list|(
operator|&
name|proxy
argument_list|)
decl_stmt|;
comment|// Populate the tree view.
for|for
control|(
name|unsigned
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cNumCols
condition|;
name|i
operator|++
control|)
name|model
operator|.
name|setHeaderData
argument_list|(
name|i
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Column %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|unsigned
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|cNumRows
condition|;
name|r
operator|++
control|)
block|{
for|for
control|(
name|unsigned
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|cNumCols
condition|;
name|c
operator|++
control|)
block|{
name|model
operator|.
name|setData
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|r
argument_list|,
name|c
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"r:%1/c:%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|r
argument_list|,
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|QCOMPARE
argument_list|(
name|model
operator|.
name|rowCount
argument_list|()
argument_list|,
name|int
argument_list|(
name|cNumRows
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|rowCount
argument_list|()
argument_list|,
name|int
argument_list|(
name|cNumRows
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|selection
operator|.
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|proxy
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|proxy
operator|.
name|index
argument_list|(
name|proxy
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
argument_list|,
name|proxy
operator|.
name|columnCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QPersistentModelIndex
argument_list|>
name|indexList
decl_stmt|;
foreach|foreach
control|(
specifier|const
name|QModelIndex
modifier|&
name|id
decl|,
name|selection
operator|.
name|selectedIndexes
argument_list|()
control|)
name|indexList
operator|<<
name|id
expr_stmt|;
name|proxy
operator|.
name|filtering
operator|=
literal|false
expr_stmt|;
name|proxy
operator|.
name|invalidate
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|proxy
operator|.
name|rowCount
argument_list|()
argument_list|,
name|int
argument_list|(
name|cNumRows
argument_list|)
argument_list|)
expr_stmt|;
comment|//let's check the selection hasn't changed
name|QCOMPARE
argument_list|(
name|selection
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
name|indexList
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QPersistentModelIndex
name|index
decl|,
name|indexList
control|)
name|QVERIFY
argument_list|(
name|selection
operator|.
name|isSelected
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|QTBUG2804_layoutChangedTreeSelection
name|void
name|tst_QItemSelectionModel
operator|::
name|QTBUG2804_layoutChangedTreeSelection
parameter_list|()
block|{
name|QStandardItemModel
name|model
decl_stmt|;
name|QStandardItem
name|top1
argument_list|(
literal|"Child1"
argument_list|)
decl_stmt|,
name|top2
argument_list|(
literal|"Child2"
argument_list|)
decl_stmt|,
name|top3
argument_list|(
literal|"Child3"
argument_list|)
decl_stmt|;
name|QStandardItem
name|sub11
argument_list|(
literal|"Alpha"
argument_list|)
decl_stmt|,
name|sub12
argument_list|(
literal|"Beta"
argument_list|)
decl_stmt|,
name|sub13
argument_list|(
literal|"Gamma"
argument_list|)
decl_stmt|,
name|sub14
argument_list|(
literal|"Delta"
argument_list|)
decl_stmt|,
name|sub21
argument_list|(
literal|"Alpha"
argument_list|)
decl_stmt|,
name|sub22
argument_list|(
literal|"Beta"
argument_list|)
decl_stmt|,
name|sub23
argument_list|(
literal|"Gamma"
argument_list|)
decl_stmt|,
name|sub24
argument_list|(
literal|"Delta"
argument_list|)
decl_stmt|;
name|top1
operator|.
name|appendColumn
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|sub11
operator|<<
operator|&
name|sub12
operator|<<
operator|&
name|sub13
operator|<<
operator|&
name|sub14
argument_list|)
expr_stmt|;
name|top2
operator|.
name|appendColumn
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|sub21
operator|<<
operator|&
name|sub22
operator|<<
operator|&
name|sub23
operator|<<
operator|&
name|sub24
argument_list|)
expr_stmt|;
name|model
operator|.
name|appendColumn
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|top1
operator|<<
operator|&
name|top2
operator|<<
operator|&
name|top3
argument_list|)
expr_stmt|;
name|QItemSelectionModel
name|selModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|selModel
operator|.
name|select
argument_list|(
name|sub11
operator|.
name|index
argument_list|()
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|selModel
operator|.
name|select
argument_list|(
name|sub12
operator|.
name|index
argument_list|()
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|selModel
operator|.
name|select
argument_list|(
name|sub21
operator|.
name|index
argument_list|()
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|selModel
operator|.
name|select
argument_list|(
name|sub23
operator|.
name|index
argument_list|()
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QModelIndexList
name|list
init|=
name|selModel
operator|.
name|selectedIndexes
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|model
operator|.
name|sort
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//this will provoke a relayout
name|QCOMPARE
argument_list|(
name|selModel
operator|.
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|RemovalObserver
class|class
name|RemovalObserver
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
DECL|member|m_itemSelectionModel
name|QItemSelectionModel
modifier|*
name|m_itemSelectionModel
decl_stmt|;
public|public:
DECL|function|RemovalObserver
name|RemovalObserver
parameter_list|(
name|QItemSelectionModel
modifier|*
name|selectionModel
parameter_list|)
member_init_list|:
name|m_itemSelectionModel
argument_list|(
name|selectionModel
argument_list|)
block|{
name|connect
argument_list|(
name|m_itemSelectionModel
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|selectionChanged
name|void
name|selectionChanged
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
comment|/* selected */
parameter_list|,
specifier|const
name|QItemSelection
modifier|&
name|deselected
parameter_list|)
block|{
foreach|foreach
control|(
specifier|const
name|QModelIndex
modifier|&
name|index
decl|,
name|deselected
operator|.
name|indexes
argument_list|()
control|)
block|{
name|QVERIFY
argument_list|(
operator|!
name|m_itemSelectionModel
operator|->
name|selection
argument_list|()
operator|.
name|contains
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|m_itemSelectionModel
operator|->
name|selection
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|deselectRemovedMiddleRange
name|void
name|tst_QItemSelectionModel
operator|::
name|deselectRemovedMiddleRange
parameter_list|()
block|{
name|QStandardItemModel
name|model
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
literal|8
condition|;
operator|++
name|row
control|)
block|{
specifier|static
specifier|const
name|int
name|column
init|=
literal|0
decl_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|row
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|setItem
argument_list|(
name|row
argument_list|,
name|column
argument_list|,
name|item
argument_list|)
expr_stmt|;
block|}
name|QItemSelectionModel
name|selModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|selModel
operator|.
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selModel
operator|.
name|selection
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|RemovalObserver
name|ro
argument_list|(
operator|&
name|selModel
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|selModel
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|bool
name|ok
init|=
name|model
operator|.
name|removeRows
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getModel
specifier|static
name|QStandardItemModel
modifier|*
name|getModel
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
block|{
name|QStandardItemModel
modifier|*
name|model
init|=
operator|new
name|QStandardItemModel
argument_list|(
name|parent
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|parentItem
init|=
name|model
operator|->
name|invisibleRootItem
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|4
condition|;
operator|++
name|j
control|)
block|{
name|list
operator|.
name|append
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1, %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|parentItem
operator|->
name|appendRow
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|parentItem
operator|=
name|list
operator|.
name|first
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|4
condition|;
operator|++
name|j
control|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
literal|4
condition|;
operator|++
name|k
control|)
block|{
name|list
operator|.
name|append
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %1, %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
name|j
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|parentItem
operator|->
name|appendRow
argument_list|(
name|list
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|model
return|;
block|}
end_function
begin_enum
DECL|enum|Result
enum|enum
name|Result
block|{
DECL|enumerator|LessThan
name|LessThan
block|,
DECL|enumerator|NotLessThan
name|NotLessThan
block|,
DECL|enumerator|NotEqual
name|NotEqual
block|}
enum|;
end_enum
begin_expr_stmt
DECL|variable|Result
name|Q_DECLARE_METATYPE
argument_list|(
name|Result
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function
DECL|function|rangeOperatorLessThan_data
name|void
name|tst_QItemSelectionModel
operator|::
name|rangeOperatorLessThan_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"parent1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"top1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"left1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"bottom1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"right1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"parent2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"top2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"left2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"bottom2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"right2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|Result
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt01"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|NotLessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt02"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|LessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt03"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|2
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|LessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt04"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|LessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt05"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|3
operator|<<
name|NotLessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt06"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|2
operator|<<
name|NotLessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt07"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
name|NotLessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt08"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|NotEqual
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt09"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|NotEqual
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt10"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|NotEqual
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt11"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|NotEqual
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt12"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|LessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt13"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|NotLessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt14"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|LessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt15"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|NotLessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt16"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|LessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt17"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
name|NotLessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt18"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
name|LessThan
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt19"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|2
operator|<<
name|NotLessThan
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rangeOperatorLessThan
name|void
name|tst_QItemSelectionModel
operator|::
name|rangeOperatorLessThan
parameter_list|()
block|{
name|QStandardItemModel
modifier|*
name|model1
init|=
name|getModel
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QStandardItemModel
modifier|*
name|model2
init|=
name|getModel
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|parent1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|top1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|left1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|bottom1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|right1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|parent2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|top2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|left2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|bottom2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|right2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|Result
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QModelIndex
name|p1
init|=
name|model1
operator|->
name|index
argument_list|(
name|parent1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|tl1
init|=
name|model1
operator|->
name|index
argument_list|(
name|top1
argument_list|,
name|left1
argument_list|,
name|p1
argument_list|)
decl_stmt|;
name|QModelIndex
name|br1
init|=
name|model1
operator|->
name|index
argument_list|(
name|bottom1
argument_list|,
name|right1
argument_list|,
name|p1
argument_list|)
decl_stmt|;
name|QItemSelectionRange
name|r1
argument_list|(
name|tl1
argument_list|,
name|br1
argument_list|)
decl_stmt|;
name|QModelIndex
name|p2
init|=
name|model1
operator|->
name|index
argument_list|(
name|parent2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|tl2
init|=
name|model1
operator|->
name|index
argument_list|(
name|top2
argument_list|,
name|left2
argument_list|,
name|p2
argument_list|)
decl_stmt|;
name|QModelIndex
name|br2
init|=
name|model1
operator|->
name|index
argument_list|(
name|bottom2
argument_list|,
name|right2
argument_list|,
name|p2
argument_list|)
decl_stmt|;
name|QItemSelectionRange
name|r2
argument_list|(
name|tl2
argument_list|,
name|br2
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
name|LessThan
condition|)
name|QVERIFY
argument_list|(
name|r1
operator|<
name|r2
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|result
operator|==
name|NotLessThan
condition|)
name|QVERIFY
argument_list|(
operator|!
operator|(
name|r1
operator|<
name|r2
operator|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|result
operator|==
name|NotEqual
condition|)
if|if
condition|(
operator|!
operator|(
name|r1
operator|<
name|r2
operator|)
condition|)
name|QVERIFY
argument_list|(
name|r2
operator|<
name|r1
argument_list|)
expr_stmt|;
comment|// Ranges in different models are always non-equal
name|QModelIndex
name|p3
init|=
name|model2
operator|->
name|index
argument_list|(
name|parent1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|tl3
init|=
name|model2
operator|->
name|index
argument_list|(
name|top1
argument_list|,
name|left1
argument_list|,
name|p3
argument_list|)
decl_stmt|;
name|QModelIndex
name|br3
init|=
name|model2
operator|->
name|index
argument_list|(
name|bottom1
argument_list|,
name|right1
argument_list|,
name|p3
argument_list|)
decl_stmt|;
name|QItemSelectionRange
name|r3
argument_list|(
name|tl3
argument_list|,
name|br3
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|r1
operator|<
name|r3
operator|)
condition|)
name|QVERIFY
argument_list|(
name|r3
operator|<
name|r1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|r2
operator|<
name|r3
operator|)
condition|)
name|QVERIFY
argument_list|(
name|r3
operator|<
name|r2
argument_list|)
expr_stmt|;
name|QModelIndex
name|p4
init|=
name|model2
operator|->
name|index
argument_list|(
name|parent2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|tl4
init|=
name|model2
operator|->
name|index
argument_list|(
name|top2
argument_list|,
name|left2
argument_list|,
name|p4
argument_list|)
decl_stmt|;
name|QModelIndex
name|br4
init|=
name|model2
operator|->
name|index
argument_list|(
name|bottom2
argument_list|,
name|right2
argument_list|,
name|p4
argument_list|)
decl_stmt|;
name|QItemSelectionRange
name|r4
argument_list|(
name|tl4
argument_list|,
name|br4
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|r1
operator|<
name|r4
operator|)
condition|)
name|QVERIFY
argument_list|(
name|r4
operator|<
name|r1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|r2
operator|<
name|r4
operator|)
condition|)
name|QVERIFY
argument_list|(
name|r4
operator|<
name|r2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testDifferentModels
name|void
name|tst_QItemSelectionModel
operator|::
name|testDifferentModels
parameter_list|()
block|{
name|QStandardItemModel
name|model1
decl_stmt|;
name|QStandardItemModel
name|model2
decl_stmt|;
name|QStandardItem
name|top11
argument_list|(
literal|"Child1"
argument_list|)
decl_stmt|,
name|top12
argument_list|(
literal|"Child2"
argument_list|)
decl_stmt|,
name|top13
argument_list|(
literal|"Child3"
argument_list|)
decl_stmt|;
name|QStandardItem
name|top21
argument_list|(
literal|"Child1"
argument_list|)
decl_stmt|,
name|top22
argument_list|(
literal|"Child2"
argument_list|)
decl_stmt|,
name|top23
argument_list|(
literal|"Child3"
argument_list|)
decl_stmt|;
name|model1
operator|.
name|appendColumn
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|top11
operator|<<
operator|&
name|top12
operator|<<
operator|&
name|top13
argument_list|)
expr_stmt|;
name|model2
operator|.
name|appendColumn
argument_list|(
name|QList
argument_list|<
name|QStandardItem
operator|*
argument_list|>
argument_list|()
operator|<<
operator|&
name|top21
operator|<<
operator|&
name|top22
operator|<<
operator|&
name|top23
argument_list|)
expr_stmt|;
name|QModelIndex
name|topIndex1
init|=
name|model1
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|bottomIndex1
init|=
name|model1
operator|.
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QModelIndex
name|topIndex2
init|=
name|model2
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QItemSelectionRange
name|range
argument_list|(
name|topIndex1
argument_list|,
name|bottomIndex1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|range
operator|.
name|intersects
argument_list|(
name|QItemSelectionRange
argument_list|(
name|topIndex1
argument_list|,
name|topIndex1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|range
operator|.
name|intersects
argument_list|(
name|QItemSelectionRange
argument_list|(
name|topIndex2
argument_list|,
name|topIndex2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QItemSelection
name|newSelection
decl_stmt|;
name|QItemSelection
operator|::
name|split
argument_list|(
name|range
argument_list|,
name|QItemSelectionRange
argument_list|(
name|topIndex2
argument_list|,
name|topIndex2
argument_list|)
argument_list|,
operator|&
name|newSelection
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|newSelection
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SelectionObserver
class|class
name|SelectionObserver
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|SelectionObserver
name|SelectionObserver
parameter_list|(
name|QAbstractItemModel
modifier|*
name|model
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_model
argument_list|(
name|model
argument_list|)
member_init_list|,
name|m_selectionModel
argument_list|(
literal|0
argument_list|)
block|{
name|connect
argument_list|(
name|model
argument_list|,
name|SIGNAL
argument_list|(
name|modelReset
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|modelReset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|setSelectionModel
name|void
name|setSelectionModel
parameter_list|(
name|QItemSelectionModel
modifier|*
name|selectionModel
parameter_list|)
block|{
name|m_selectionModel
operator|=
name|selectionModel
expr_stmt|;
name|connect
argument_list|(
name|m_selectionModel
argument_list|,
name|SIGNAL
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|selectionChanged
argument_list|(
name|QItemSelection
argument_list|,
name|QItemSelection
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
private|private
name|slots
private|:
DECL|function|modelReset
name|void
name|modelReset
parameter_list|()
block|{
specifier|const
name|QModelIndex
name|idx
init|=
name|m_model
operator|->
name|index
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|idx
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|m_selectionModel
operator|->
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|idx
argument_list|,
name|idx
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Clear
argument_list|)
expr_stmt|;
block|}
DECL|function|selectionChanged
name|void
name|selectionChanged
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
name|selected
parameter_list|,
specifier|const
name|QItemSelection
modifier|&
name|deselected
parameter_list|)
block|{
foreach|foreach
control|(
specifier|const
name|QItemSelectionRange
modifier|&
name|range
decl|,
name|selected
control|)
name|QVERIFY
argument_list|(
name|range
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
foreach|foreach
control|(
specifier|const
name|QItemSelectionRange
modifier|&
name|range
decl|,
name|deselected
control|)
name|QVERIFY
argument_list|(
name|range
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_model
name|QAbstractItemModel
modifier|*
name|m_model
decl_stmt|;
DECL|member|m_selectionModel
name|QItemSelectionModel
modifier|*
name|m_selectionModel
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testValidRangesInSelectionsAfterReset
name|void
name|tst_QItemSelectionModel
operator|::
name|testValidRangesInSelectionsAfterReset
parameter_list|()
block|{
name|QStringListModel
name|model
decl_stmt|;
name|QStringList
name|strings
decl_stmt|;
name|strings
operator|<<
literal|"one"
operator|<<
literal|"two"
operator|<<
literal|"three"
operator|<<
literal|"four"
operator|<<
literal|"five"
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|strings
argument_list|)
expr_stmt|;
name|SelectionObserver
name|observer
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|selectionModel
operator|.
name|select
argument_list|(
name|QItemSelection
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
comment|// Cause d->ranges to contain something.
name|model
operator|.
name|insertRows
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|observer
operator|.
name|setSelectionModel
argument_list|(
operator|&
name|selectionModel
argument_list|)
expr_stmt|;
name|model
operator|.
name|setStringList
argument_list|(
name|strings
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|DuplicateItemSelectionModel
class|class
name|DuplicateItemSelectionModel
super|:
specifier|public
name|QItemSelectionModel
block|{
name|Q_OBJECT
public|public:
DECL|function|DuplicateItemSelectionModel
name|DuplicateItemSelectionModel
parameter_list|(
name|QItemSelectionModel
modifier|*
name|target
parameter_list|,
name|QAbstractItemModel
modifier|*
name|model
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QItemSelectionModel
argument_list|(
name|model
argument_list|,
name|parent
argument_list|)
member_init_list|,
name|m_target
argument_list|(
name|target
argument_list|)
block|{     }
DECL|function|select
name|void
name|select
parameter_list|(
specifier|const
name|QItemSelection
modifier|&
name|selection
parameter_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
name|command
parameter_list|)
block|{
name|QItemSelectionModel
operator|::
name|select
argument_list|(
name|selection
argument_list|,
name|command
argument_list|)
expr_stmt|;
name|m_target
operator|->
name|select
argument_list|(
name|selection
argument_list|,
name|command
argument_list|)
expr_stmt|;
block|}
using|using
name|QItemSelectionModel
operator|::
name|select
using|;
DECL|function|setCurrentIndex
name|void
name|setCurrentIndex
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
name|command
parameter_list|)
block|{
name|QItemSelectionModel
operator|::
name|setCurrentIndex
argument_list|(
name|index
argument_list|,
name|command
argument_list|)
expr_stmt|;
name|m_target
operator|->
name|setCurrentIndex
argument_list|(
name|index
argument_list|,
name|command
argument_list|)
expr_stmt|;
block|}
DECL|function|clearCurrentIndex
name|void
name|clearCurrentIndex
parameter_list|()
block|{
name|QItemSelectionModel
operator|::
name|clearCurrentIndex
argument_list|()
expr_stmt|;
name|m_target
operator|->
name|clearCurrentIndex
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|m_target
name|QItemSelectionModel
modifier|*
name|m_target
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testChainedSelectionClear
name|void
name|tst_QItemSelectionModel
operator|::
name|testChainedSelectionClear
parameter_list|()
block|{
name|QStringListModel
name|model
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"Apples"
operator|<<
literal|"Pears"
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|DuplicateItemSelectionModel
name|duplicate
argument_list|(
operator|&
name|selectionModel
argument_list|,
operator|&
name|model
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|duplicate
operator|.
name|select
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|Select
argument_list|)
expr_stmt|;
block|{
name|QModelIndexList
name|selectedIndexes
init|=
name|selectionModel
operator|.
name|selection
argument_list|()
operator|.
name|indexes
argument_list|()
decl_stmt|;
name|QModelIndexList
name|duplicatedIndexes
init|=
name|duplicate
operator|.
name|selection
argument_list|()
operator|.
name|indexes
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|selectedIndexes
operator|.
name|size
argument_list|()
operator|==
name|duplicatedIndexes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectedIndexes
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectedIndexes
operator|.
name|first
argument_list|()
operator|==
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|duplicate
operator|.
name|clearSelection
argument_list|()
expr_stmt|;
block|{
name|QModelIndexList
name|selectedIndexes
init|=
name|selectionModel
operator|.
name|selection
argument_list|()
operator|.
name|indexes
argument_list|()
decl_stmt|;
name|QModelIndexList
name|duplicatedIndexes
init|=
name|duplicate
operator|.
name|selection
argument_list|()
operator|.
name|indexes
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|selectedIndexes
operator|.
name|size
argument_list|()
operator|==
name|duplicatedIndexes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectedIndexes
operator|.
name|size
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
name|duplicate
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QItemSelectionModel
operator|::
name|NoUpdate
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|currentIndex
argument_list|()
operator|==
name|duplicate
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
name|duplicate
operator|.
name|clearCurrentIndex
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|duplicate
operator|.
name|currentIndex
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|currentIndex
argument_list|()
operator|==
name|duplicate
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testClearCurrentIndex
name|void
name|tst_QItemSelectionModel
operator|::
name|testClearCurrentIndex
parameter_list|()
block|{
name|QStringListModel
name|model
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"Apples"
operator|<<
literal|"Pears"
argument_list|)
decl_stmt|;
name|QItemSelectionModel
name|selectionModel
argument_list|(
operator|&
name|model
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSignalSpy
name|currentIndexSpy
argument_list|(
operator|&
name|selectionModel
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|QModelIndex
argument_list|,
name|QModelIndex
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|currentIndexSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|firstIndex
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|firstIndex
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|selectionModel
operator|.
name|setCurrentIndex
argument_list|(
name|firstIndex
argument_list|,
name|QItemSelectionModel
operator|::
name|NoUpdate
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|currentIndex
argument_list|()
operator|==
name|firstIndex
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentIndexSpy
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|selectionModel
operator|.
name|clearCurrentIndex
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|selectionModel
operator|.
name|currentIndex
argument_list|()
operator|==
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentIndexSpy
operator|.
name|size
argument_list|()
operator|==
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QItemSelectionModel
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qitemselectionmodel.moc"
end_include
end_unit
