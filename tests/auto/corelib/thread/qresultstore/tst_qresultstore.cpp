begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qresultstore.h>
end_include
begin_using
using|using
namespace|namespace
name|QtPrivate
namespace|;
end_using
begin_class
DECL|class|tst_QtConcurrentResultStore
class|class
name|tst_QtConcurrentResultStore
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|construction
parameter_list|()
function_decl|;
name|void
name|iterators
parameter_list|()
function_decl|;
name|void
name|addResult
parameter_list|()
function_decl|;
name|void
name|addResults
parameter_list|()
function_decl|;
name|void
name|resultIndex
parameter_list|()
function_decl|;
name|void
name|resultAt
parameter_list|()
function_decl|;
name|void
name|contains
parameter_list|()
function_decl|;
name|void
name|filterMode
parameter_list|()
function_decl|;
name|void
name|addCanceledResult
parameter_list|()
function_decl|;
name|void
name|count
parameter_list|()
function_decl|;
private|private:
DECL|member|int0
name|int
name|int0
decl_stmt|;
DECL|member|int1
name|int
name|int1
decl_stmt|;
DECL|member|int2
name|int
name|int2
decl_stmt|;
DECL|member|vec0
name|QVector
argument_list|<
name|int
argument_list|>
name|vec0
decl_stmt|;
DECL|member|vec1
name|QVector
argument_list|<
name|int
argument_list|>
name|vec1
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|init
name|void
name|tst_QtConcurrentResultStore
operator|::
name|init
parameter_list|()
block|{
name|int0
operator|=
literal|0
expr_stmt|;
name|int1
operator|=
literal|1
expr_stmt|;
name|int2
operator|=
literal|2
expr_stmt|;
name|vec0
operator|=
name|QVector
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|2
operator|<<
literal|3
expr_stmt|;
name|vec1
operator|=
name|QVector
argument_list|<
name|int
argument_list|>
argument_list|()
operator|<<
literal|4
operator|<<
literal|5
expr_stmt|;
block|}
end_function
begin_function
DECL|function|construction
name|void
name|tst_QtConcurrentResultStore
operator|::
name|construction
parameter_list|()
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|iterators
name|void
name|tst_QtConcurrentResultStore
operator|::
name|iterators
parameter_list|()
block|{
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|begin
argument_list|()
argument_list|,
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|1
argument_list|)
argument_list|,
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStoreBase
name|storebase
decl_stmt|;
name|storebase
operator|.
name|addResult
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
comment|// note to self: adding a pointer to the stack here is ok since
name|storebase
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int1
argument_list|)
expr_stmt|;
comment|// ResultStoreBase does not take ownership, only ResultStore<> does.
name|ResultIteratorBase
name|it
init|=
name|storebase
operator|.
name|begin
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
argument_list|,
name|storebase
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|storebase
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|storebase
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|storebase
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|storebase
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
argument_list|,
name|storebase
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addResult
name|void
name|tst_QtConcurrentResultStore
operator|::
name|addResult
parameter_list|()
block|{
block|{
comment|// test addResult return value
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// result 0 becomes available
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addResult
argument_list|(
literal|2
argument_list|,
operator|&
name|int0
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// result 2 is renamed to 1 and becomes available
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addResult
argument_list|(
literal|3
argument_list|,
operator|&
name|int0
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addResult
argument_list|(
literal|6
argument_list|,
operator|&
name|int0
argument_list|)
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addResult
argument_list|(
literal|7
argument_list|,
operator|&
name|int0
argument_list|)
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// 6 and 7 is renamed to 3 and 4 and becomes available
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|addResult
argument_list|(
literal|8
argument_list|,
operator|&
name|int0
argument_list|)
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addResults
name|void
name|tst_QtConcurrentResultStore
operator|::
name|addResults
parameter_list|()
block|{
name|ResultStoreBase
name|store
decl_stmt|;
name|store
operator|.
name|addResults
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|vec0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|vec1
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|ResultIteratorBase
name|it
init|=
name|store
operator|.
name|begin
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
argument_list|,
name|store
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
argument_list|,
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resultIndex
name|void
name|tst_QtConcurrentResultStore
operator|::
name|resultIndex
parameter_list|()
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResult
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|vec0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|int1
argument_list|)
expr_stmt|;
name|ResultIteratorBase
name|it
init|=
name|store
operator|.
name|begin
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|store
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|resultIndex
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|store
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|1
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|vec0
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|2
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|vec0
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|3
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|int1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resultAt
name|void
name|tst_QtConcurrentResultStore
operator|::
name|resultAt
parameter_list|()
block|{
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResult
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|vec0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|200
argument_list|,
operator|&
name|int1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|1
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|vec0
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|2
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|vec0
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|200
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|int1
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int1
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|int2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|1
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|int1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|resultAt
argument_list|(
literal|2
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|int2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|contains
name|void
name|tst_QtConcurrentResultStore
operator|::
name|contains
parameter_list|()
block|{
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
name|INT_MAX
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|store
operator|.
name|contains
argument_list|(
name|int1
argument_list|)
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|store
operator|.
name|contains
argument_list|(
name|int0
argument_list|)
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
operator|-
literal|1
argument_list|,
operator|&
name|int2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|store
operator|.
name|contains
argument_list|(
name|int2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|3
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|6
argument_list|,
operator|&
name|vec0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|3
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|6
argument_list|,
operator|&
name|vec0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResults
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|filterMode
name|void
name|tst_QtConcurrentResultStore
operator|::
name|filterMode
parameter_list|()
block|{
comment|// Test filter mode, where "gaps" in the result array aren't allowed.
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|filterMode
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|store
operator|.
name|filterMode
argument_list|()
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|2
argument_list|,
operator|&
name|int2
argument_list|)
expr_stmt|;
comment|// add result at index 2
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// but 1 is missing, so this 2 won't be reported yet.
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// 2 should be visible now.
name|store
operator|.
name|addResult
argument_list|(
literal|4
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|5
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|7
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|3
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
comment|// adding 3 makes 4 and 5 visible
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|6
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
comment|// adding 6 makes 7 visible
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addCanceledResult
name|void
name|tst_QtConcurrentResultStore
operator|::
name|addCanceledResult
parameter_list|()
block|{
comment|// test canceled results
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|2
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// report no result at 1
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// 2 gets renamed to 1
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|3
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//3 gets renamed to 2
name|store
operator|.
name|addResult
argument_list|(
literal|6
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|7
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//6 gets renamed to 3
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//7 gets renamed to 4
name|store
operator|.
name|addResult
argument_list|(
literal|8
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//8 gets renamed to 4
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|contains
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|count
name|void
name|tst_QtConcurrentResultStore
operator|::
name|count
parameter_list|()
block|{
block|{
comment|// test resultCount in non-filtered mode. It should always be possible
comment|// to iterate through the results 0 to resultCount.
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|2
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|2
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|2
argument_list|,
operator|&
name|vec1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|1
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|0
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|2
argument_list|,
operator|&
name|vec1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|0
argument_list|,
operator|&
name|vec0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|3
argument_list|,
operator|&
name|vec1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|0
argument_list|,
operator|&
name|vec0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResult
argument_list|(
literal|2
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|3
argument_list|,
operator|&
name|vec1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|0
argument_list|,
operator|&
name|vec0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResult
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|3
argument_list|,
operator|&
name|vec1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResults
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|{
name|ResultStore
argument_list|<
name|int
argument_list|>
name|store
decl_stmt|;
name|store
operator|.
name|setFilterMode
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|store
operator|.
name|addResults
argument_list|(
literal|3
argument_list|,
operator|&
name|vec1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|store
operator|.
name|addCanceledResults
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// results at 3 and 4 become available at index 0, 1
name|store
operator|.
name|addResult
argument_list|(
literal|5
argument_list|,
operator|&
name|int0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|store
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// result 5 becomes available at index 2
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QtConcurrentResultStore
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qresultstore.moc"
end_include
end_unit
