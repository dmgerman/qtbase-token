begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qobject.h>
end_include
begin_include
include|#
directive|include
file|<qmetaobject.h>
end_include
begin_include
include|#
directive|include
file|<qabstractproxymodel.h>
end_include
begin_include
include|#
directive|include
file|<private/qmetaobject_p.h>
end_include
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|const QMetaObject *
argument_list|)
end_macro
begin_struct
DECL|struct|MyStruct
struct|struct
name|MyStruct
block|{
DECL|member|i
name|int
name|i
decl_stmt|;
block|}
struct|;
end_struct
begin_namespace
DECL|namespace|MyNamespace
namespace|namespace
name|MyNamespace
block|{
comment|// Used in tst_QMetaObject::checkScope
DECL|class|MyClass
class|class
name|MyClass
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
name|MyEnum
name|myEnum
name|READ
name|myEnum
name|WRITE
name|setMyEnum
argument_list|)
name|Q_PROPERTY
argument_list|(
name|MyFlags
name|myFlags
name|READ
name|myFlags
name|WRITE
name|setMyFlags
argument_list|)
decl|public
range|:         enum
DECL|enum|MyEnum
name|MyEnum
block|{
DECL|enumerator|MyEnum1
name|MyEnum1
block|,
DECL|enumerator|MyEnum2
name|MyEnum2
block|,
DECL|enumerator|MyEnum3
name|MyEnum3
block|}
decl_stmt|;
DECL|enum|MyAnotherEnum
enum|enum
name|MyAnotherEnum
block|{
DECL|enumerator|MyAnotherEnum1
name|MyAnotherEnum1
init|=
literal|1
block|,
DECL|enumerator|MyAnotherEnum2
name|MyAnotherEnum2
init|=
literal|2
block|,
DECL|enumerator|MyAnotherEnum3
name|MyAnotherEnum3
init|=
operator|-
literal|1
block|}
enum|;
DECL|enum|MyFlag
enum|enum
name|MyFlag
block|{
DECL|enumerator|MyFlag1
name|MyFlag1
init|=
literal|0x01
block|,
DECL|enumerator|MyFlag2
name|MyFlag2
init|=
literal|0x02
block|,
DECL|enumerator|MyFlag3
name|MyFlag3
init|=
literal|0x04
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|MyFlags
argument_list|,
argument|MyFlag
argument_list|)
DECL|function|myEnum
name|MyEnum
name|myEnum
parameter_list|()
specifier|const
block|{
return|return
name|m_enum
return|;
block|}
DECL|function|setMyEnum
name|void
name|setMyEnum
parameter_list|(
name|MyEnum
name|val
parameter_list|)
block|{
name|m_enum
operator|=
name|val
expr_stmt|;
block|}
DECL|function|myFlags
name|MyFlags
name|myFlags
parameter_list|()
specifier|const
block|{
return|return
name|m_flags
return|;
block|}
DECL|function|setMyFlags
name|void
name|setMyFlags
parameter_list|(
name|MyFlags
name|val
parameter_list|)
block|{
name|m_flags
operator|=
name|val
expr_stmt|;
block|}
DECL|function|MyClass
name|MyClass
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_enum
argument_list|(
name|MyEnum1
argument_list|)
member_init_list|,
name|m_flags
argument_list|(
name|MyFlag1
operator||
name|MyFlag2
argument_list|)
block|{ }
private|private:
name|Q_ENUM
argument_list|(
argument|MyEnum
argument_list|)
name|Q_ENUM
argument_list|(
argument|MyAnotherEnum
argument_list|)
name|Q_FLAG
parameter_list|(
name|MyFlags
parameter_list|)
DECL|member|m_enum
name|MyEnum
name|m_enum
decl_stmt|;
DECL|member|m_flags
name|MyFlags
name|m_flags
decl_stmt|;
block|}
class|;
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|MyClass::MyFlags
argument_list|)
comment|// test the old Q_ENUMS macro
DECL|class|MyClass2
class|class
name|MyClass2
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
name|MyEnum
name|myEnum
name|READ
name|myEnum
name|WRITE
name|setMyEnum
argument_list|)
name|Q_PROPERTY
argument_list|(
name|MyFlags
name|myFlags
name|READ
name|myFlags
name|WRITE
name|setMyFlags
argument_list|)
decl|public
range|:         enum
DECL|enum|MyEnum
name|MyEnum
block|{
DECL|enumerator|MyEnum1
name|MyEnum1
block|,
DECL|enumerator|MyEnum2
name|MyEnum2
block|,
DECL|enumerator|MyEnum3
name|MyEnum3
block|}
decl_stmt|;
DECL|enum|MyAnotherEnum
enum|enum
name|MyAnotherEnum
block|{
DECL|enumerator|MyAnotherEnum1
name|MyAnotherEnum1
init|=
literal|1
block|,
DECL|enumerator|MyAnotherEnum2
name|MyAnotherEnum2
init|=
literal|2
block|,
DECL|enumerator|MyAnotherEnum3
name|MyAnotherEnum3
init|=
operator|-
literal|1
block|}
enum|;
DECL|enum|MyFlag
enum|enum
name|MyFlag
block|{
DECL|enumerator|MyFlag1
name|MyFlag1
init|=
literal|0x01
block|,
DECL|enumerator|MyFlag2
name|MyFlag2
init|=
literal|0x02
block|,
DECL|enumerator|MyFlag3
name|MyFlag3
init|=
literal|0x04
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|MyFlags
argument_list|,
argument|MyFlag
argument_list|)
DECL|function|myEnum
name|MyEnum
name|myEnum
parameter_list|()
specifier|const
block|{
return|return
name|m_enum
return|;
block|}
DECL|function|setMyEnum
name|void
name|setMyEnum
parameter_list|(
name|MyEnum
name|val
parameter_list|)
block|{
name|m_enum
operator|=
name|val
expr_stmt|;
block|}
DECL|function|myFlags
name|MyFlags
name|myFlags
parameter_list|()
specifier|const
block|{
return|return
name|m_flags
return|;
block|}
DECL|function|setMyFlags
name|void
name|setMyFlags
parameter_list|(
name|MyFlags
name|val
parameter_list|)
block|{
name|m_flags
operator|=
name|val
expr_stmt|;
block|}
DECL|function|MyClass2
name|MyClass2
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_enum
argument_list|(
name|MyEnum1
argument_list|)
member_init_list|,
name|m_flags
argument_list|(
name|MyFlag1
operator||
name|MyFlag2
argument_list|)
block|{ }
private|private:
name|Q_ENUMS
argument_list|(
argument|MyEnum MyAnotherEnum
argument_list|)
name|Q_FLAGS
parameter_list|(
name|MyFlags
parameter_list|)
DECL|member|m_enum
name|MyEnum
name|m_enum
decl_stmt|;
DECL|member|m_flags
name|MyFlags
name|m_flags
decl_stmt|;
block|}
class|;
block|}
end_namespace
begin_class
DECL|class|tst_QMetaObject
class|class
name|tst_QMetaObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
name|EnumType
name|value
name|WRITE
name|setValue
name|READ
name|getValue
argument_list|)
name|Q_PROPERTY
argument_list|(
name|EnumType
name|value2
name|WRITE
name|set_value
name|READ
name|get_value
argument_list|)
name|Q_PROPERTY
argument_list|(
name|MyStruct
name|value3
name|WRITE
name|setVal3
name|READ
name|val3
argument_list|)
name|Q_PROPERTY
argument_list|(
name|QList
argument_list|<
name|QVariant
argument_list|>
name|value4
name|WRITE
name|setVal4
name|READ
name|val4
argument_list|)
name|Q_PROPERTY
argument_list|(
name|QVariantList
name|value5
name|WRITE
name|setVal5
name|READ
name|val5
argument_list|)
name|Q_PROPERTY
argument_list|(
name|int
name|value6
name|READ
name|value6
name|NOTIFY
name|value6Changed
argument_list|)
name|Q_PROPERTY
argument_list|(
name|MyStruct
name|value7
name|READ
name|value7
name|WRITE
name|setVal7
name|NOTIFY
name|value7Changed
argument_list|)
name|Q_PROPERTY
argument_list|(
name|int
name|value8
name|READ
name|value8
argument_list|)
name|Q_PROPERTY
argument_list|(
name|int
name|value9
name|READ
name|value9
name|CONSTANT
argument_list|)
name|Q_PROPERTY
argument_list|(
name|int
name|value10
name|READ
name|value10
name|FINAL
argument_list|)
decl|public
range|:     enum
DECL|enum|EnumType
DECL|enumerator|EnumType1
name|EnumType
block|{
name|EnumType1
block|}
decl_stmt|;
name|Q_ENUM
parameter_list|(
name|EnumType
parameter_list|)
constructor_decl|;
DECL|function|setValue
name|void
name|setValue
parameter_list|(
name|EnumType
parameter_list|)
block|{}
DECL|function|getValue
name|EnumType
name|getValue
parameter_list|()
specifier|const
block|{
return|return
name|EnumType1
return|;
block|}
DECL|function|set_value
name|void
name|set_value
parameter_list|(
name|EnumType
parameter_list|)
block|{}
DECL|function|get_value
name|EnumType
name|get_value
parameter_list|()
specifier|const
block|{
return|return
name|EnumType1
return|;
block|}
DECL|function|setVal3
name|void
name|setVal3
parameter_list|(
name|MyStruct
parameter_list|)
block|{}
DECL|function|val3
name|MyStruct
name|val3
parameter_list|()
specifier|const
block|{
name|MyStruct
name|s
init|=
block|{
literal|42
block|}
decl_stmt|;
return|return
name|s
return|;
block|}
DECL|function|setVal4
name|void
name|setVal4
parameter_list|(
specifier|const
name|QList
argument_list|<
name|QVariant
argument_list|>
modifier|&
name|list
parameter_list|)
block|{
name|value4
operator|=
name|list
expr_stmt|;
block|}
DECL|function|val4
name|QList
argument_list|<
name|QVariant
argument_list|>
name|val4
parameter_list|()
specifier|const
block|{
return|return
name|value4
return|;
block|}
DECL|function|setVal5
name|void
name|setVal5
parameter_list|(
specifier|const
name|QVariantList
modifier|&
name|list
parameter_list|)
block|{
name|value5
operator|=
name|list
expr_stmt|;
block|}
DECL|function|val5
name|QVariantList
name|val5
parameter_list|()
specifier|const
block|{
return|return
name|value5
return|;
block|}
DECL|function|value6
name|int
name|value6
parameter_list|()
specifier|const
block|{
return|return
literal|1
return|;
block|}
DECL|function|setVal7
name|void
name|setVal7
parameter_list|(
name|MyStruct
parameter_list|)
block|{}
DECL|function|value7
name|MyStruct
name|value7
parameter_list|()
specifier|const
block|{
name|MyStruct
name|s
init|=
block|{
literal|42
block|}
decl_stmt|;
return|return
name|s
return|;
block|}
DECL|function|value8
name|int
name|value8
parameter_list|()
specifier|const
block|{
return|return
literal|1
return|;
block|}
DECL|function|value9
name|int
name|value9
parameter_list|()
specifier|const
block|{
return|return
literal|1
return|;
block|}
DECL|function|value10
name|int
name|value10
parameter_list|()
specifier|const
block|{
return|return
literal|1
return|;
block|}
DECL|member|value4
name|QList
argument_list|<
name|QVariant
argument_list|>
name|value4
decl_stmt|;
DECL|member|value5
name|QVariantList
name|value5
decl_stmt|;
private|private
name|slots
private|:
name|void
name|connectSlotsByName
parameter_list|()
function_decl|;
name|void
name|invokeMetaMember
parameter_list|()
function_decl|;
name|void
name|invokeQueuedMetaMember
parameter_list|()
function_decl|;
name|void
name|invokeBlockingQueuedMetaMember
parameter_list|()
function_decl|;
name|void
name|invokeCustomTypes
parameter_list|()
function_decl|;
name|void
name|invokeMetaConstructor
parameter_list|()
function_decl|;
name|void
name|invokeTypedefTypes
parameter_list|()
function_decl|;
name|void
name|invokeException
parameter_list|()
function_decl|;
name|void
name|qtMetaObjectInheritance
parameter_list|()
function_decl|;
name|void
name|normalizedSignature_data
parameter_list|()
function_decl|;
name|void
name|normalizedSignature
parameter_list|()
function_decl|;
name|void
name|normalizedType_data
parameter_list|()
function_decl|;
name|void
name|normalizedType
parameter_list|()
function_decl|;
name|void
name|customPropertyType
parameter_list|()
function_decl|;
name|void
name|checkScope_data
parameter_list|()
function_decl|;
name|void
name|checkScope
parameter_list|()
function_decl|;
name|void
name|propertyNotify
parameter_list|()
function_decl|;
name|void
name|propertyConstant
parameter_list|()
function_decl|;
name|void
name|propertyFinal
parameter_list|()
function_decl|;
name|void
name|stdSet
parameter_list|()
function_decl|;
name|void
name|classInfo
parameter_list|()
function_decl|;
name|void
name|metaMethod
parameter_list|()
function_decl|;
name|void
name|indexOfMethod_data
parameter_list|()
function_decl|;
name|void
name|indexOfMethod
parameter_list|()
function_decl|;
name|void
name|indexOfMethodPMF
parameter_list|()
function_decl|;
name|void
name|signalOffset_data
parameter_list|()
function_decl|;
name|void
name|signalOffset
parameter_list|()
function_decl|;
name|void
name|signalCount_data
parameter_list|()
function_decl|;
name|void
name|signalCount
parameter_list|()
function_decl|;
name|void
name|signal_data
parameter_list|()
function_decl|;
name|void
name|signal
parameter_list|()
function_decl|;
name|void
name|signalIndex_data
parameter_list|()
function_decl|;
name|void
name|signalIndex
parameter_list|()
function_decl|;
name|void
name|enumDebugStream
parameter_list|()
function_decl|;
signals|signals:
name|void
name|value6Changed
parameter_list|()
function_decl|;
name|void
name|value7Changed
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|stdSet
name|void
name|tst_QMetaObject
operator|::
name|stdSet
parameter_list|()
block|{
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
name|metaObject
argument_list|()
decl_stmt|;
name|QMetaProperty
name|prop
init|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|hasStdCppSet
argument_list|()
argument_list|)
expr_stmt|;
name|prop
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|prop
operator|.
name|hasStdCppSet
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|CTestObject
class|class
name|CTestObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|CTestObject
name|CTestObject
parameter_list|()
member_init_list|:
name|QObject
argument_list|()
member_init_list|,
name|invokeCount1
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|invokeCount2
argument_list|(
literal|0
argument_list|)
block|{     }
DECL|function|fire
name|void
name|fire
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
block|{
name|child
operator|=
operator|new
name|QObject
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|child
operator|->
name|setObjectName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|connectSlotsByName
argument_list|(
name|this
argument_list|)
expr_stmt|;
operator|delete
name|child
expr_stmt|;
name|child
operator|=
literal|0
expr_stmt|;
block|}
DECL|member|invokeCount1
name|int
name|invokeCount1
decl_stmt|;
DECL|member|invokeCount2
name|int
name|invokeCount2
decl_stmt|;
DECL|member|child
name|QObject
modifier|*
name|child
decl_stmt|;
public|public
name|slots
public|:
DECL|function|on_child1_destroyed
name|void
name|on_child1_destroyed
parameter_list|(
name|QObject
modifier|*
name|obj
init|=
literal|0
parameter_list|)
block|{
operator|++
name|invokeCount1
expr_stmt|;
if|if
condition|(
operator|!
name|obj
operator|||
name|obj
operator|!=
name|child
condition|)
name|qWarning
argument_list|()
operator|<<
literal|"on_child1_destroyed invoked with wrong child object"
expr_stmt|;
block|}
DECL|function|on_child2_destroyed
name|void
name|on_child2_destroyed
parameter_list|()
block|{
operator|++
name|invokeCount2
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|CTestObjectOverloads
class|class
name|CTestObjectOverloads
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|CTestObjectOverloads
name|CTestObjectOverloads
parameter_list|()
member_init_list|:
name|invokeCount1
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|invokeCount2
argument_list|(
literal|0
argument_list|)
block|{}
DECL|member|invokeCount1
name|int
name|invokeCount1
decl_stmt|;
DECL|member|invokeCount2
name|int
name|invokeCount2
decl_stmt|;
DECL|member|child
name|QObject
modifier|*
name|child
decl_stmt|;
DECL|function|fire
name|void
name|fire
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
block|{
name|child
operator|=
operator|new
name|QObject
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|child
operator|->
name|setObjectName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|connectSlotsByName
argument_list|(
name|this
argument_list|)
expr_stmt|;
operator|delete
name|child
expr_stmt|;
name|child
operator|=
literal|0
expr_stmt|;
block|}
private|private
name|slots
private|:
DECL|function|on_child1_destroyed
name|void
name|on_child1_destroyed
parameter_list|(
name|QObject
modifier|*
name|obj
parameter_list|)
block|{
operator|++
name|invokeCount1
expr_stmt|;
if|if
condition|(
operator|!
name|obj
operator|||
name|obj
operator|!=
name|child
condition|)
name|qWarning
argument_list|()
operator|<<
literal|"on_child1_destroyed invoked with wrong child object"
expr_stmt|;
block|}
DECL|function|on_child1_destroyed
name|void
name|on_child1_destroyed
parameter_list|()
block|{
operator|++
name|invokeCount2
expr_stmt|;
block|}
block|}
class|;
end_class
begin_define
DECL|macro|FUNCTION
define|#
directive|define
name|FUNCTION
parameter_list|(
name|x
parameter_list|)
value|"QMetaObject::" x ": "
end_define
begin_function
DECL|function|connectSlotsByName
name|void
name|tst_QMetaObject
operator|::
name|connectSlotsByName
parameter_list|()
block|{
name|CTestObject
name|obj
decl_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|FUNCTION
argument_list|(
literal|"connectSlotsByName"
argument_list|)
literal|"No matching signal for on_child1_destroyed(QObject*)"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|FUNCTION
argument_list|(
literal|"connectSlotsByName"
argument_list|)
literal|"No matching signal for on_child2_destroyed()"
argument_list|)
expr_stmt|;
name|obj
operator|.
name|fire
argument_list|(
literal|"bubu"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|FUNCTION
argument_list|(
literal|"connectSlotsByName"
argument_list|)
literal|"No matching signal for on_child2_destroyed()"
argument_list|)
expr_stmt|;
name|obj
operator|.
name|fire
argument_list|(
literal|"child1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|FUNCTION
argument_list|(
literal|"connectSlotsByName"
argument_list|)
literal|"No matching signal for on_child1_destroyed(QObject*)"
argument_list|)
expr_stmt|;
name|obj
operator|.
name|fire
argument_list|(
literal|"child2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|FUNCTION
argument_list|(
literal|"connectSlotsByName"
argument_list|)
literal|"No matching signal for on_child2_destroyed()"
argument_list|)
expr_stmt|;
name|obj
operator|.
name|fire
argument_list|(
literal|"child1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|invokeCount2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// now test with real overloads
name|CTestObjectOverloads
name|obj2
decl_stmt|;
name|obj2
operator|.
name|fire
argument_list|(
literal|"child1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|invokeCount1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|invokeCount2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
DECL|struct|MyUnregisteredType
struct|struct
name|MyUnregisteredType
block|{
block|}
struct|;
end_struct
begin_decl_stmt
DECL|variable|countedStructObjectsCount
specifier|static
name|int
name|countedStructObjectsCount
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_struct
DECL|struct|CountedStruct
struct|struct
name|CountedStruct
block|{
DECL|function|CountedStruct
name|CountedStruct
parameter_list|()
block|{
operator|++
name|countedStructObjectsCount
expr_stmt|;
block|}
DECL|function|CountedStruct
name|CountedStruct
parameter_list|(
specifier|const
name|CountedStruct
modifier|&
parameter_list|)
block|{
operator|++
name|countedStructObjectsCount
expr_stmt|;
block|}
DECL|function|operator =
name|CountedStruct
modifier|&
name|operator
name|=
parameter_list|(
specifier|const
name|CountedStruct
modifier|&
parameter_list|)
block|{
return|return
operator|*
name|this
return|;
block|}
DECL|function|~CountedStruct
name|~
name|CountedStruct
parameter_list|()
block|{
operator|--
name|countedStructObjectsCount
expr_stmt|;
block|}
block|}
struct|;
end_struct
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_EXCEPTIONS
end_ifndef
begin_class
DECL|class|ObjectException
class|class
name|ObjectException
super|:
specifier|public
name|std
operator|::
name|exception
block|{
block|}
class|;
end_class
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|QtTestObject
class|class
name|QtTestObject
super|:
specifier|public
name|QObject
block|{
friend|friend
class_decl|class
name|tst_QMetaObject
class_decl|;
name|Q_OBJECT
public|public:
name|QtTestObject
parameter_list|()
constructor_decl|;
name|Q_INVOKABLE
name|QtTestObject
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
function_decl|;
public|public
name|slots
public|:
name|void
name|sl0
parameter_list|()
function_decl|;
name|QString
name|sl1
parameter_list|(
name|QString
name|s1
parameter_list|)
function_decl|;
name|void
name|sl2
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|)
function_decl|;
name|void
name|sl3
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|)
function_decl|;
name|void
name|sl4
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
specifier|const
name|QString
name|s4
parameter_list|)
function_decl|;
name|void
name|sl5
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
specifier|const
name|QString
modifier|&
name|s5
parameter_list|)
function_decl|;
name|void
name|sl6
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
specifier|const
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|)
function_decl|;
name|void
name|sl7
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|)
function_decl|;
name|void
name|sl8
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|,
name|QString
name|s8
parameter_list|)
function_decl|;
name|void
name|sl9
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|,
name|QString
name|s8
parameter_list|,
name|QString
name|s9
parameter_list|)
function_decl|;
name|void
name|sl10
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|,
name|QString
name|s8
parameter_list|,
name|QString
name|s9
parameter_list|,
name|QString
name|s10
parameter_list|)
function_decl|;
name|QObject
modifier|*
name|sl11
parameter_list|()
function_decl|;
specifier|const
name|char
modifier|*
name|sl12
parameter_list|()
function_decl|;
name|QList
argument_list|<
name|QString
argument_list|>
name|sl13
parameter_list|(
name|QList
argument_list|<
name|QString
argument_list|>
name|l1
parameter_list|)
function_decl|;
name|qint64
name|sl14
parameter_list|()
function_decl|;
name|void
name|testSender
parameter_list|()
function_decl|;
name|void
name|testReference
parameter_list|(
name|QString
modifier|&
name|str
parameter_list|)
function_decl|;
name|void
name|testLongLong
parameter_list|(
name|qint64
name|ll1
parameter_list|,
name|quint64
name|ll2
parameter_list|)
function_decl|;
DECL|function|moveToThread
name|void
name|moveToThread
parameter_list|(
name|QThread
modifier|*
name|t
parameter_list|)
block|{
name|QObject
operator|::
name|moveToThread
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
name|void
name|slotWithUnregisteredParameterType
parameter_list|(
name|MyUnregisteredType
parameter_list|)
function_decl|;
DECL|function|throwingSlot
name|CountedStruct
name|throwingSlot
parameter_list|(
specifier|const
name|CountedStruct
modifier|&
parameter_list|,
name|CountedStruct
name|s2
parameter_list|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_EXCEPTIONS
throw|throw
name|ObjectException
argument_list|()
throw|;
endif|#
directive|endif
return|return
name|s2
return|;
block|}
signals|signals:
name|void
name|sig0
parameter_list|()
function_decl|;
name|QString
name|sig1
parameter_list|(
name|QString
name|s1
parameter_list|)
function_decl|;
name|void
name|sig10
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|,
name|QString
name|s8
parameter_list|,
name|QString
name|s9
parameter_list|,
name|QString
name|s10
parameter_list|)
function_decl|;
protected|protected:
DECL|function|QtTestObject
name|QtTestObject
parameter_list|(
name|QVariant
parameter_list|)
block|{}
private|private:
DECL|function|QtTestObject
name|QtTestObject
parameter_list|(
name|QVariant
parameter_list|,
name|QVariant
parameter_list|)
block|{}
public|public:
DECL|member|slotResult
name|QString
name|slotResult
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|QtTestObject
name|QtTestObject
operator|::
name|QtTestObject
parameter_list|()
block|{
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|sig0
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|sl0
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|sig1
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|sl1
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_constructor
DECL|function|QtTestObject
name|QtTestObject
operator|::
name|QtTestObject
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|sl0
name|void
name|QtTestObject
operator|::
name|sl0
parameter_list|()
block|{
name|slotResult
operator|=
literal|"sl0"
expr_stmt|;
block|}
end_function
begin_empty_stmt
DECL|function|sl0
empty_stmt|;
end_empty_stmt
begin_function
DECL|function|sl1
name|QString
name|QtTestObject
operator|::
name|sl1
parameter_list|(
name|QString
name|s1
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl1:"
operator|+
name|s1
expr_stmt|;
return|return
literal|"yessir"
return|;
block|}
end_function
begin_function
DECL|function|sl2
name|void
name|QtTestObject
operator|::
name|sl2
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl2:"
operator|+
name|s1
operator|+
name|s2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl3
name|void
name|QtTestObject
operator|::
name|sl3
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl3:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl4
name|void
name|QtTestObject
operator|::
name|sl4
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
specifier|const
name|QString
name|s4
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl4:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
operator|+
name|s4
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl5
name|void
name|QtTestObject
operator|::
name|sl5
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
specifier|const
name|QString
modifier|&
name|s5
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl5:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
operator|+
name|s4
operator|+
name|s5
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl6
name|void
name|QtTestObject
operator|::
name|sl6
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
specifier|const
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl6:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
operator|+
name|s4
operator|+
name|s5
operator|+
name|s6
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl7
name|void
name|QtTestObject
operator|::
name|sl7
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl7:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
operator|+
name|s4
operator|+
name|s5
operator|+
name|s6
operator|+
name|s7
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl8
name|void
name|QtTestObject
operator|::
name|sl8
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|,
name|QString
name|s8
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl8:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
operator|+
name|s4
operator|+
name|s5
operator|+
name|s6
operator|+
name|s7
operator|+
name|s8
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl9
name|void
name|QtTestObject
operator|::
name|sl9
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|,
name|QString
name|s8
parameter_list|,
name|QString
name|s9
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl9:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
operator|+
name|s4
operator|+
name|s5
operator|+
name|s6
operator|+
name|s7
operator|+
name|s8
operator|+
name|s9
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl10
name|void
name|QtTestObject
operator|::
name|sl10
parameter_list|(
name|QString
name|s1
parameter_list|,
name|QString
name|s2
parameter_list|,
name|QString
name|s3
parameter_list|,
name|QString
name|s4
parameter_list|,
name|QString
name|s5
parameter_list|,
name|QString
name|s6
parameter_list|,
name|QString
name|s7
parameter_list|,
name|QString
name|s8
parameter_list|,
name|QString
name|s9
parameter_list|,
name|QString
name|s10
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl10:"
operator|+
name|s1
operator|+
name|s2
operator|+
name|s3
operator|+
name|s4
operator|+
name|s5
operator|+
name|s6
operator|+
name|s7
operator|+
name|s8
operator|+
name|s9
operator|+
name|s10
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sl11
name|QObject
modifier|*
name|QtTestObject
operator|::
name|sl11
parameter_list|()
block|{
name|slotResult
operator|=
literal|"sl11"
expr_stmt|;
return|return
name|this
return|;
block|}
end_function
begin_function
DECL|function|sl12
specifier|const
name|char
modifier|*
name|QtTestObject
operator|::
name|sl12
parameter_list|()
block|{
name|slotResult
operator|=
literal|"sl12"
expr_stmt|;
return|return
literal|"foo"
return|;
block|}
end_function
begin_function
DECL|function|sl13
name|QList
argument_list|<
name|QString
argument_list|>
name|QtTestObject
operator|::
name|sl13
parameter_list|(
name|QList
argument_list|<
name|QString
argument_list|>
name|l1
parameter_list|)
block|{
name|slotResult
operator|=
literal|"sl13"
expr_stmt|;
return|return
name|l1
return|;
block|}
end_function
begin_function
DECL|function|sl14
name|qint64
name|QtTestObject
operator|::
name|sl14
parameter_list|()
block|{
name|slotResult
operator|=
literal|"sl14"
expr_stmt|;
return|return
name|Q_INT64_C
argument_list|(
literal|123456789
argument_list|)
operator|*
literal|123456789
return|;
block|}
end_function
begin_function
DECL|function|testReference
name|void
name|QtTestObject
operator|::
name|testReference
parameter_list|(
name|QString
modifier|&
name|str
parameter_list|)
block|{
name|slotResult
operator|=
literal|"testReference:"
operator|+
name|str
expr_stmt|;
name|str
operator|=
literal|"gotcha"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testLongLong
name|void
name|QtTestObject
operator|::
name|testLongLong
parameter_list|(
name|qint64
name|ll1
parameter_list|,
name|quint64
name|ll2
parameter_list|)
block|{
name|slotResult
operator|=
literal|"testLongLong:"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|ll1
argument_list|)
operator|+
literal|","
operator|+
name|QString
operator|::
name|number
argument_list|(
name|ll2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSender
name|void
name|QtTestObject
operator|::
name|testSender
parameter_list|()
block|{
name|slotResult
operator|.
name|sprintf
argument_list|(
literal|"%p"
argument_list|,
name|sender
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|slotWithUnregisteredParameterType
name|void
name|QtTestObject
operator|::
name|slotWithUnregisteredParameterType
parameter_list|(
name|MyUnregisteredType
parameter_list|)
block|{
name|slotResult
operator|=
literal|"slotWithUnregisteredReturnType"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invokeMetaMember
name|void
name|tst_QMetaObject
operator|::
name|invokeMetaMember
parameter_list|()
block|{
name|QtTestObject
name|obj
decl_stmt|;
name|QString
name|t1
argument_list|(
literal|"1"
argument_list|)
decl_stmt|;
name|QString
name|t2
argument_list|(
literal|"2"
argument_list|)
decl_stmt|;
name|QString
name|t3
argument_list|(
literal|"3"
argument_list|)
decl_stmt|;
name|QString
name|t4
argument_list|(
literal|"4"
argument_list|)
decl_stmt|;
name|QString
name|t5
argument_list|(
literal|"5"
argument_list|)
decl_stmt|;
name|QString
name|t6
argument_list|(
literal|"6"
argument_list|)
decl_stmt|;
name|QString
name|t7
argument_list|(
literal|"7"
argument_list|)
decl_stmt|;
name|QString
name|t8
argument_list|(
literal|"8"
argument_list|)
decl_stmt|;
name|QString
name|t9
argument_list|(
literal|"9"
argument_list|)
decl_stmt|;
name|QString
name|t10
argument_list|(
literal|"X"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
literal|0
argument_list|,
literal|"sl0"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl0"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl0"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl2"
argument_list|,
name|Q_ARG
argument_list|(
specifier|const
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl2:12"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl3"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl3:123"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl4"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl4:1234"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl5"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl5:12345"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl6"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl6:123456"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl7"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl7:1234567"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl8"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t7
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl8:12345678"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl9"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t7
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t8
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl9:123456789"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl11"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl11"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"testSender"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"0x0"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|refStr
argument_list|(
literal|"whatever"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"testReference"
argument_list|,
name|QGenericArgument
argument_list|(
literal|"QString&"
argument_list|,
operator|&
name|refStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"testReference:whatever"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refStr
argument_list|,
name|QString
argument_list|(
literal|"gotcha"
argument_list|)
argument_list|)
expr_stmt|;
name|qint64
name|ll1
init|=
operator|-
literal|1
decl_stmt|;
name|quint64
name|ll2
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"testLongLong"
argument_list|,
name|Q_ARG
argument_list|(
name|qint64
argument_list|,
name|ll1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|quint64
argument_list|,
name|ll2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"testLongLong:-1,0"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|exp
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QString
argument_list|,
name|exp
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"bubu"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|exp
argument_list|,
name|QString
argument_list|(
literal|"yessir"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:bubu"
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|ptr
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl11"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QObject
operator|*
argument_list|,
name|ptr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl11"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with a space:
name|ptr
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl11"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QObject
operator|*
argument_list|,
name|ptr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl11"
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|ptr2
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl12"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
name|ptr2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr2
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl12"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with a space:
name|ptr2
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl12"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|char
specifier|const
operator|*
argument_list|,
name|ptr2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr2
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl12"
argument_list|)
argument_list|)
expr_stmt|;
comment|// test w/ template args
name|QList
argument_list|<
name|QString
argument_list|>
name|returnValue
decl_stmt|,
name|argument
decl_stmt|;
name|argument
operator|<<
name|QString
argument_list|(
literal|"one"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"two"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"three"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl13"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|returnValue
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|argument
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|returnValue
argument_list|,
name|argument
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl13"
argument_list|)
argument_list|)
expr_stmt|;
comment|// return qint64
name|qint64
name|return64
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl14"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|qint64
argument_list|,
name|return64
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|return64
argument_list|,
name|Q_INT64_C
argument_list|(
literal|123456789
argument_list|)
operator|*
literal|123456789
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl14"
argument_list|)
argument_list|)
expr_stmt|;
comment|//test signals
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig0"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl0"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig1"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"baba"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:baba"
argument_list|)
argument_list|)
expr_stmt|;
name|exp
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig1"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QString
argument_list|,
name|exp
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"hehe"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|exp
argument_list|,
name|QString
argument_list|(
literal|"yessir"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:hehe"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::doesNotExist()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"doesNotExist"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::sl1(QString)(QString)"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1(QString)"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::sl3(QString)\n"
literal|"Candidates are:\n    sl3(QString,QString,QString)"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl3"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::sl1(QString,QString,QString)\n"
literal|"Candidates are:\n    sl1(QString)"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//should not have changed since last test.
name|QCOMPARE
argument_list|(
name|exp
argument_list|,
name|QString
argument_list|(
literal|"yessir"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:hehe"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invokeQueuedMetaMember
name|void
name|tst_QMetaObject
operator|::
name|invokeQueuedMetaMember
parameter_list|()
block|{
name|QtTestObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl0"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|slotResult
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|(
name|QEventLoop
operator|::
name|AllEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl0"
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|slotResult
operator|=
name|QString
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|(
literal|"hallo"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|slotResult
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|(
name|QEventLoop
operator|::
name|AllEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:hallo"
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|slotResult
operator|=
name|QString
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl9"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"2"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"3"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"4"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"5"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"6"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"7"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"8"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"9"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|slotResult
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|(
name|QEventLoop
operator|::
name|AllEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl9:123456789"
argument_list|)
argument_list|)
expr_stmt|;
comment|// signals
name|obj
operator|.
name|slotResult
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig0"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|slotResult
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|(
name|QEventLoop
operator|::
name|AllEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl0"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig1"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"gogo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|(
name|QEventLoop
operator|::
name|AllEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:gogo"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|exp
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaMethod::invoke: Unable to invoke methods with return values in queued connections"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig1"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QString
argument_list|,
name|exp
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"nono"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|qint64
name|ll1
init|=
operator|-
literal|1
decl_stmt|;
name|quint64
name|ll2
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"testLongLong"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|qint64
argument_list|,
name|ll1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|quint64
argument_list|,
name|ll2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|(
name|QEventLoop
operator|::
name|AllEvents
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"testLongLong:-1,0"
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|slotResult
operator|.
name|clear
argument_list|()
expr_stmt|;
block|{
name|MyUnregisteredType
name|t
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaMethod::invoke: Unable to handle unregistered datatype 'MyUnregisteredType'"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"slotWithUnregisteredParameterType"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|MyUnregisteredType
argument_list|,
name|t
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|slotResult
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|invokeBlockingQueuedMetaMember
name|void
name|tst_QMetaObject
operator|::
name|invokeBlockingQueuedMetaMember
parameter_list|()
block|{
name|QThread
name|t
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
name|QtTestObject
name|obj
decl_stmt|;
name|obj
operator|.
name|moveToThread
argument_list|(
operator|&
name|t
argument_list|)
expr_stmt|;
name|QString
name|t1
argument_list|(
literal|"1"
argument_list|)
decl_stmt|;
name|QString
name|t2
argument_list|(
literal|"2"
argument_list|)
decl_stmt|;
name|QString
name|t3
argument_list|(
literal|"3"
argument_list|)
decl_stmt|;
name|QString
name|t4
argument_list|(
literal|"4"
argument_list|)
decl_stmt|;
name|QString
name|t5
argument_list|(
literal|"5"
argument_list|)
decl_stmt|;
name|QString
name|t6
argument_list|(
literal|"6"
argument_list|)
decl_stmt|;
name|QString
name|t7
argument_list|(
literal|"7"
argument_list|)
decl_stmt|;
name|QString
name|t8
argument_list|(
literal|"8"
argument_list|)
decl_stmt|;
name|QString
name|t9
argument_list|(
literal|"9"
argument_list|)
decl_stmt|;
name|QString
name|t10
argument_list|(
literal|"X"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl2"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
specifier|const
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl2:12"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl3"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl3:123"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl4"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl4:1234"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl5"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl5:12345"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl6"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl6:123456"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl7"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t7
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl7:1234567"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl8"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t7
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t8
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl8:12345678"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl9"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t2
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t3
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t4
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t5
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t6
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t7
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t8
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|t9
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl9:123456789"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl11"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl11"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"testSender"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"0x0"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|refStr
argument_list|(
literal|"whatever"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"testReference"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|QGenericArgument
argument_list|(
literal|"QString&"
argument_list|,
operator|&
name|refStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"testReference:whatever"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refStr
argument_list|,
name|QString
argument_list|(
literal|"gotcha"
argument_list|)
argument_list|)
expr_stmt|;
name|qint64
name|ll1
init|=
operator|-
literal|1
decl_stmt|;
name|quint64
name|ll2
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"testLongLong"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|qint64
argument_list|,
name|ll1
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|quint64
argument_list|,
name|ll2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"testLongLong:-1,0"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|exp
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QString
argument_list|,
name|exp
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"bubu"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|exp
argument_list|,
name|QString
argument_list|(
literal|"yessir"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:bubu"
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|ptr
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl11"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QObject
operator|*
argument_list|,
name|ptr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl11"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with a space:
name|ptr
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl11"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QObject
operator|*
argument_list|,
name|ptr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl11"
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|ptr2
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl12"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
specifier|const
name|char
operator|*
argument_list|,
name|ptr2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr2
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl12"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try again with a space:
name|ptr2
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl12"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|char
specifier|const
operator|*
argument_list|,
name|ptr2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr2
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl12"
argument_list|)
argument_list|)
expr_stmt|;
comment|// test w/ template args
name|QList
argument_list|<
name|QString
argument_list|>
name|returnValue
decl_stmt|,
name|argument
decl_stmt|;
name|argument
operator|<<
name|QString
argument_list|(
literal|"one"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"two"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"three"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl13"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|returnValue
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|argument
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|returnValue
argument_list|,
name|argument
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl13"
argument_list|)
argument_list|)
expr_stmt|;
comment|//test signals
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig0"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl0"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig1"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"baba"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:baba"
argument_list|)
argument_list|)
expr_stmt|;
name|exp
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig1"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QString
argument_list|,
name|exp
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"hehe"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|exp
argument_list|,
name|QString
argument_list|(
literal|"yessir"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:hehe"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::doesNotExist()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"doesNotExist"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::sl1(QString)(QString)"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1(QString)"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::sl3(QString)\n"
literal|"Candidates are:\n    sl3(QString,QString,QString)"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl3"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QMetaObject::invokeMethod: No such method QtTestObject::sl1(QString,QString,QString)\n"
literal|"Candidates are:\n    sl1(QString)"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"arg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//should not have changed since last test.
name|QCOMPARE
argument_list|(
name|exp
argument_list|,
name|QString
argument_list|(
literal|"yessir"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl1:hehe"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"moveToThread"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QThread
operator|*
argument_list|,
name|QThread
operator|::
name|currentThread
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|quit
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|t
operator|.
name|wait
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qtMetaObjectInheritance
name|void
name|tst_QMetaObject
operator|::
name|qtMetaObjectInheritance
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|QObject
operator|::
name|staticMetaObject
operator|.
name|superClass
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QSortFilterProxyModel
operator|::
name|staticMetaObject
operator|.
name|indexOfEnumerator
argument_list|(
literal|"Qt::CaseSensitivity"
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QSortFilterProxyModel
operator|::
name|staticMetaObject
operator|.
name|indexOfEnumerator
argument_list|(
literal|"CaseSensitivity"
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|int
name|indexOfSortCaseSensitivity
init|=
name|QSortFilterProxyModel
operator|::
name|staticMetaObject
operator|.
name|indexOfProperty
argument_list|(
literal|"sortCaseSensitivity"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|indexOfSortCaseSensitivity
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QMetaProperty
name|sortCaseSensitivity
init|=
name|QSortFilterProxyModel
operator|::
name|staticMetaObject
operator|.
name|property
argument_list|(
name|indexOfSortCaseSensitivity
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|sortCaseSensitivity
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sortCaseSensitivity
operator|.
name|enumerator
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"CaseSensitivity"
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
DECL|struct|MyType
struct|struct
name|MyType
block|{
DECL|member|i1
DECL|member|i2
DECL|member|i3
name|int
name|i1
decl_stmt|,
name|i2
decl_stmt|,
name|i3
decl_stmt|;
block|}
struct|;
end_struct
begin_typedef
DECL|typedef|CustomString
typedef|typedef
name|QString
name|CustomString
typedef|;
end_typedef
begin_class
DECL|class|QtTestCustomObject
class|class
name|QtTestCustomObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
friend|friend
class_decl|class
name|tst_QMetaObject
class_decl|;
public|public:
DECL|function|QtTestCustomObject
name|QtTestCustomObject
parameter_list|()
member_init_list|:
name|QObject
argument_list|()
member_init_list|,
name|sum
argument_list|(
literal|0
argument_list|)
block|{}
public|public
name|slots
public|:
name|void
name|sl1
parameter_list|(
name|MyType
name|myType
parameter_list|)
function_decl|;
signals|signals:
name|void
name|sig_custom
parameter_list|(
specifier|const
name|CustomString
modifier|&
name|string
parameter_list|)
function_decl|;
public|public:
DECL|member|sum
name|int
name|sum
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|sl1
name|void
name|QtTestCustomObject
operator|::
name|sl1
parameter_list|(
name|MyType
name|myType
parameter_list|)
block|{
name|sum
operator|=
name|myType
operator|.
name|i1
operator|+
name|myType
operator|.
name|i2
operator|+
name|myType
operator|.
name|i3
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invokeCustomTypes
name|void
name|tst_QMetaObject
operator|::
name|invokeCustomTypes
parameter_list|()
block|{
name|QtTestCustomObject
name|obj
decl_stmt|;
name|MyType
name|tp
init|=
block|{
literal|1
block|,
literal|1
block|,
literal|1
block|}
decl_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|sum
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sl1"
argument_list|,
name|Q_ARG
argument_list|(
name|MyType
argument_list|,
name|tp
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|sum
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_namespace
DECL|namespace|NamespaceWithConstructibleClass
namespace|namespace
name|NamespaceWithConstructibleClass
block|{
DECL|class|ConstructibleClass
class|class
name|ConstructibleClass
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|ConstructibleClass
name|Q_INVOKABLE
name|ConstructibleClass
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{}
block|}
class|;
block|}
end_namespace
begin_function
DECL|function|invokeMetaConstructor
name|void
name|tst_QMetaObject
operator|::
name|invokeMetaConstructor
parameter_list|()
block|{
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
operator|&
name|QtTestObject
operator|::
name|staticMetaObject
decl_stmt|;
block|{
name|QObject
modifier|*
name|obj
init|=
name|mo
operator|->
name|newInstance
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|obj
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QtTestObject
name|obj
decl_stmt|;
name|QObject
modifier|*
name|obj2
init|=
name|mo
operator|->
name|newInstance
argument_list|(
name|Q_ARG
argument_list|(
name|QObject
operator|*
argument_list|,
operator|&
name|obj
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|obj2
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|->
name|parent
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QtTestObject
operator|*
argument_list|>
argument_list|(
name|obj2
argument_list|)
operator|!=
literal|0
argument_list|)
expr_stmt|;
block|}
comment|// class in namespace
specifier|const
name|QMetaObject
modifier|*
name|nsmo
init|=
operator|&
name|NamespaceWithConstructibleClass
operator|::
name|ConstructibleClass
operator|::
name|staticMetaObject
decl_stmt|;
block|{
name|QtTestObject
name|obj
decl_stmt|;
name|QObject
modifier|*
name|obj2
init|=
name|nsmo
operator|->
name|newInstance
argument_list|(
name|Q_ARG
argument_list|(
name|QObject
operator|*
argument_list|,
operator|&
name|obj
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|obj2
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|->
name|parent
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|NamespaceWithConstructibleClass
operator|::
name|ConstructibleClass
operator|*
argument_list|>
argument_list|(
name|obj2
argument_list|)
operator|!=
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|invokeTypedefTypes
name|void
name|tst_QMetaObject
operator|::
name|invokeTypedefTypes
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|CustomString
argument_list|>
argument_list|(
literal|"CustomString"
argument_list|)
expr_stmt|;
name|QtTestCustomObject
name|obj
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|obj
argument_list|,
operator|&
name|QtTestCustomObject
operator|::
name|sig_custom
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CustomString
name|arg
argument_list|(
literal|"hello"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"sig_custom"
argument_list|,
name|Q_ARG
argument_list|(
name|CustomString
argument_list|,
name|arg
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|arg
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invokeException
name|void
name|tst_QMetaObject
operator|::
name|invokeException
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_NO_EXCEPTIONS
name|QtTestObject
name|obj
decl_stmt|;
name|QCOMPARE
argument_list|(
name|countedStructObjectsCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
try|try
block|{
name|CountedStruct
name|s
decl_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|obj
argument_list|,
literal|"throwingSlot"
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|CountedStruct
argument_list|,
name|s
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|CountedStruct
argument_list|,
name|s
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|CountedStruct
argument_list|,
name|s
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QFAIL
argument_list|(
literal|"Did not throw"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ObjectException
modifier|&
parameter_list|)
block|{}
name|QCOMPARE
argument_list|(
name|countedStructObjectsCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|#
directive|else
name|QSKIP
argument_list|(
literal|"Needs exceptions"
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|normalizedSignature_data
name|void
name|tst_QMetaObject
operator|::
name|normalizedSignature_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"signature"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"function"
argument_list|)
operator|<<
literal|"void foo()"
operator|<<
literal|"void foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"spaces"
argument_list|)
operator|<<
literal|" void  foo( ) "
operator|<<
literal|"void foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void"
argument_list|)
operator|<<
literal|"void foo(void)"
operator|<<
literal|"void foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void spaces"
argument_list|)
operator|<<
literal|"void foo( void )"
operator|<<
literal|"void foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void*"
argument_list|)
operator|<<
literal|"void foo(void*)"
operator|<<
literal|"void foo(void*)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void* spaces"
argument_list|)
operator|<<
literal|"void foo( void * )"
operator|<<
literal|"void foo(void*)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"function ptr"
argument_list|)
operator|<<
literal|"void foo(void(*)(void))"
operator|<<
literal|"void foo(void(*)())"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"function ptr spaces"
argument_list|)
operator|<<
literal|"void foo( void ( * ) ( void ))"
operator|<<
literal|"void foo(void(*)())"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"function ptr void*"
argument_list|)
operator|<<
literal|"void foo(void(*)(void*))"
operator|<<
literal|"void foo(void(*)(void*))"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"function ptr void* spaces"
argument_list|)
operator|<<
literal|"void foo( void ( * ) ( void * ))"
operator|<<
literal|"void foo(void(*)(void*))"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template args"
argument_list|)
operator|<<
literal|" void  foo( QMap<a, a>, QList<b>) "
operator|<<
literal|"void foo(QMap<a,a>,QList<b>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void template args"
argument_list|)
operator|<<
literal|" void  foo( Foo<void>, Bar<void> ) "
operator|<<
literal|"void foo(Foo<void>,Bar<void>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void* template args"
argument_list|)
operator|<<
literal|" void  foo( Foo<void*>, Bar<void *> ) "
operator|<<
literal|"void foo(Foo<void*>,Bar<void*>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rettype"
argument_list|)
operator|<<
literal|"QList<int, int> foo()"
operator|<<
literal|"QList<int,int>foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rettype void template"
argument_list|)
operator|<<
literal|"Foo<void> foo()"
operator|<<
literal|"Foo<void>foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const rettype"
argument_list|)
operator|<<
literal|"const QString *foo()"
operator|<<
literal|"const QString*foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const ref"
argument_list|)
operator|<<
literal|"const QString&foo()"
operator|<<
literal|"const QString&foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"reference"
argument_list|)
operator|<<
literal|"QString&foo()"
operator|<<
literal|"QString&foo()"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const1"
argument_list|)
operator|<<
literal|"void foo(QString const *)"
operator|<<
literal|"void foo(const QString*)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const2"
argument_list|)
operator|<<
literal|"void foo(QString * const)"
operator|<<
literal|"void foo(QString*const)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const3"
argument_list|)
operator|<<
literal|"void foo(QString const&)"
operator|<<
literal|"void foo(QString)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const4"
argument_list|)
operator|<<
literal|"void foo(const int)"
operator|<<
literal|"void foo(int)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const5"
argument_list|)
operator|<<
literal|"void foo(const int, int const, const int&, int const&)"
operator|<<
literal|"void foo(int,int,int,int)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const6"
argument_list|)
operator|<<
literal|"void foo(QList<const int>)"
operator|<<
literal|"void foo(QList<const int>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const7"
argument_list|)
operator|<<
literal|"void foo(QList<const int*>)"
operator|<<
literal|"void foo(QList<const int*>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const8"
argument_list|)
operator|<<
literal|"void foo(QList<int const*>)"
operator|<<
literal|"void foo(QList<const int*>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const9"
argument_list|)
operator|<<
literal|"void foo(const Foo<Bar>)"
operator|<<
literal|"void foo(Foo<Bar>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const10"
argument_list|)
operator|<<
literal|"void foo(Foo<Bar>const)"
operator|<<
literal|"void foo(Foo<Bar>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const11"
argument_list|)
operator|<<
literal|"void foo(Foo<Bar> *const)"
operator|<<
literal|"void foo(Foo<Bar>*const)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const12"
argument_list|)
operator|<<
literal|"void foo(Foo<Bar>const*const *const)"
operator|<<
literal|"void foo(Foo<Bar>*const*const)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const13"
argument_list|)
operator|<<
literal|"void foo(const Foo<Bar>&)"
operator|<<
literal|"void foo(Foo<Bar>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const14"
argument_list|)
operator|<<
literal|"void foo(Foo<Bar>const&)"
operator|<<
literal|"void foo(Foo<Bar>)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid1"
argument_list|)
operator|<<
literal|"a( b"
operator|<<
literal|"a(b"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|normalizedSignature
name|void
name|tst_QMetaObject
operator|::
name|normalizedSignature
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|signature
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|signature
operator|.
name|toLatin1
argument_list|()
argument_list|)
argument_list|,
name|result
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|normalizedType_data
name|void
name|tst_QMetaObject
operator|::
name|normalizedType_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple"
argument_list|)
operator|<<
literal|"int"
operator|<<
literal|"int"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"white"
argument_list|)
operator|<<
literal|"  int  "
operator|<<
literal|"int"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const1"
argument_list|)
operator|<<
literal|"int const *"
operator|<<
literal|"const int*"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const2"
argument_list|)
operator|<<
literal|"const int *"
operator|<<
literal|"const int*"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template1"
argument_list|)
operator|<<
literal|"QList<int const *>"
operator|<<
literal|"QList<const int*>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template2"
argument_list|)
operator|<<
literal|"QList<const int *>"
operator|<<
literal|"QList<const int*>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template3"
argument_list|)
operator|<<
literal|"QMap<QString, int>"
operator|<<
literal|"QMap<QString,int>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template4"
argument_list|)
operator|<<
literal|"const QMap<QString, int>&"
operator|<<
literal|"QMap<QString,int>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template5"
argument_list|)
operator|<<
literal|"QList< ::Foo::Bar>"
operator|<<
literal|"QList< ::Foo::Bar>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template6"
argument_list|)
operator|<<
literal|"QList<::Foo::Bar>"
operator|<<
literal|"QList<::Foo::Bar>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template7"
argument_list|)
operator|<<
literal|"QList<QList<int>>"
operator|<<
literal|"QList<QList<int>>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template8"
argument_list|)
operator|<<
literal|"QMap<const int, const short*>"
operator|<<
literal|"QMap<const int,const short*>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"template9"
argument_list|)
operator|<<
literal|"QPair<const QPair<int, int const *> , QPair<QHash<int, const char*>>>"
operator|<<
literal|"QPair<const QPair<int,const int*>,QPair<QHash<int,const char*>>>"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"value1"
argument_list|)
operator|<<
literal|"const QString&"
operator|<<
literal|"QString"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"value2"
argument_list|)
operator|<<
literal|"QString const&"
operator|<<
literal|"QString"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"constInName1"
argument_list|)
operator|<<
literal|"constconst"
operator|<<
literal|"constconst"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"constInName2"
argument_list|)
operator|<<
literal|"constconst*"
operator|<<
literal|"constconst*"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"constInName3"
argument_list|)
operator|<<
literal|"const constconst&"
operator|<<
literal|"constconst"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"constInName4"
argument_list|)
operator|<<
literal|"constconst const*const"
operator|<<
literal|"constconst*const"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"class"
argument_list|)
operator|<<
literal|"const class foo&"
operator|<<
literal|"foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"struct"
argument_list|)
operator|<<
literal|"const struct foo*"
operator|<<
literal|"const foo*"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"struct2"
argument_list|)
operator|<<
literal|"struct foo const*"
operator|<<
literal|"const foo*"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"enum"
argument_list|)
operator|<<
literal|"enum foo"
operator|<<
literal|"foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void"
argument_list|)
operator|<<
literal|"void"
operator|<<
literal|"void"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|normalizedType
name|void
name|tst_QMetaObject
operator|::
name|normalizedType
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaObject
operator|::
name|normalizedType
argument_list|(
name|type
operator|.
name|toLatin1
argument_list|()
argument_list|)
argument_list|,
name|result
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customPropertyType
name|void
name|tst_QMetaObject
operator|::
name|customPropertyType
parameter_list|()
block|{
name|QMetaProperty
name|prop
init|=
name|metaObject
argument_list|()
operator|->
name|property
argument_list|(
name|metaObject
argument_list|()
operator|->
name|indexOfProperty
argument_list|(
literal|"value3"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|prop
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|UserType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|prop
operator|.
name|userType
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|MyStruct
argument_list|>
argument_list|(
literal|"MyStruct"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|prop
operator|.
name|userType
argument_list|()
argument_list|,
name|QMetaType
operator|::
name|type
argument_list|(
literal|"MyStruct"
argument_list|)
argument_list|)
expr_stmt|;
name|prop
operator|=
name|metaObject
argument_list|()
operator|->
name|property
argument_list|(
name|metaObject
argument_list|()
operator|->
name|indexOfProperty
argument_list|(
literal|"value4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|prop
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|List
argument_list|)
expr_stmt|;
name|prop
operator|=
name|metaObject
argument_list|()
operator|->
name|property
argument_list|(
name|metaObject
argument_list|()
operator|->
name|indexOfProperty
argument_list|(
literal|"value5"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|prop
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|List
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkScope_data
name|void
name|tst_QMetaObject
operator|::
name|checkScope_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|"object"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
specifier|static
name|MyNamespace
operator|::
name|MyClass
name|obj1
decl_stmt|;
specifier|static
name|MyNamespace
operator|::
name|MyClass2
name|obj2
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MyClass"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj1
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"MyClass"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MyClass2"
argument_list|)
operator|<<
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj2
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"MyClass2"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|checkScope
name|void
name|tst_QMetaObject
operator|::
name|checkScope
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QObject
operator|*
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|QObject
modifier|&
name|obj
init|=
operator|*
name|object
decl_stmt|;
name|bool
name|ok
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
name|obj
operator|.
name|metaObject
argument_list|()
decl_stmt|;
name|QMetaEnum
name|me
init|=
name|mo
operator|->
name|enumerator
argument_list|(
name|mo
operator|->
name|indexOfEnumerator
argument_list|(
literal|"MyEnum"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|me
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|me
operator|.
name|isFlag
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QByteArray
argument_list|(
name|me
operator|.
name|scope
argument_list|()
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"MyNamespace::"
operator|+
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me
operator|.
name|keyToValue
argument_list|(
literal|"MyNamespace::"
operator|+
name|name
operator|+
literal|"::MyEnum2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me
operator|.
name|keyToValue
argument_list|(
name|name
operator|+
literal|"::MyEnum2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me
operator|.
name|keyToValue
argument_list|(
literal|"MyNamespace::MyEnum2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me
operator|.
name|keyToValue
argument_list|(
literal|"MyEnum2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me
operator|.
name|keyToValue
argument_list|(
literal|"MyEnum"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QLatin1String
argument_list|(
name|me
operator|.
name|valueToKey
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"MyEnum2"
argument_list|)
argument_list|)
expr_stmt|;
name|QMetaEnum
name|me2
init|=
name|mo
operator|->
name|enumerator
argument_list|(
name|mo
operator|->
name|indexOfEnumerator
argument_list|(
literal|"MyAnotherEnum"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|me2
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|me2
operator|.
name|isFlag
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me2
operator|.
name|keyToValue
argument_list|(
literal|"MyAnotherEnum1"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me2
operator|.
name|keyToValue
argument_list|(
literal|"MyAnotherEnum2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me2
operator|.
name|keyToValue
argument_list|(
literal|"MyAnotherEnum3"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|me2
operator|.
name|keyToValue
argument_list|(
literal|"MyAnotherEnum"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QMetaEnum
name|mf
init|=
name|mo
operator|->
name|enumerator
argument_list|(
name|mo
operator|->
name|indexOfEnumerator
argument_list|(
literal|"MyFlags"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|mf
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mf
operator|.
name|isFlag
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QByteArray
argument_list|(
name|mf
operator|.
name|scope
argument_list|()
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"MyNamespace::"
operator|+
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyNamespace::"
operator|+
name|name
operator|+
literal|"::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
name|name
operator|+
literal|"::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyNamespace::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyFlag"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QLatin1String
argument_list|(
name|mf
operator|.
name|valueToKey
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"MyFlag2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyNamespace::"
operator|+
name|name
operator|+
literal|"::MyFlag1|MyNamespace::"
operator|+
name|name
operator|+
literal|"::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
name|name
operator|+
literal|"::MyFlag1|"
operator|+
name|name
operator|+
literal|"::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyNamespace::MyFlag1|MyNamespace::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyFlag1|MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyFlag2|MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyFlag1|MyNamespace::"
operator|+
name|name
operator|+
literal|"::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mf
operator|.
name|keysToValue
argument_list|(
literal|"MyNamespace::"
operator|+
name|name
operator|+
literal|"::MyFlag2|MyNamespace::"
operator|+
name|name
operator|+
literal|"::MyFlag2"
argument_list|,
operator|&
name|ok
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ok
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QLatin1String
argument_list|(
name|mf
operator|.
name|valueToKeys
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"MyFlag1|MyFlag2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyNotify
name|void
name|tst_QMetaObject
operator|::
name|propertyNotify
parameter_list|()
block|{
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
name|metaObject
argument_list|()
decl_stmt|;
name|QMetaProperty
name|prop
init|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value6"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|hasNotifySignal
argument_list|()
argument_list|)
expr_stmt|;
name|QMetaMethod
name|signal
init|=
name|prop
operator|.
name|notifySignal
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|signal
operator|.
name|methodSignature
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"value6Changed()"
argument_list|)
argument_list|)
expr_stmt|;
name|prop
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value7"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|hasNotifySignal
argument_list|()
argument_list|)
expr_stmt|;
name|signal
operator|=
name|prop
operator|.
name|notifySignal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signal
operator|.
name|methodSignature
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"value7Changed(QString)"
argument_list|)
argument_list|)
expr_stmt|;
name|prop
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value8"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|prop
operator|.
name|hasNotifySignal
argument_list|()
argument_list|)
expr_stmt|;
name|signal
operator|=
name|prop
operator|.
name|notifySignal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signal
operator|.
name|methodSignature
argument_list|()
argument_list|,
name|QByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|prop
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|prop
operator|.
name|hasNotifySignal
argument_list|()
argument_list|)
expr_stmt|;
name|signal
operator|=
name|prop
operator|.
name|notifySignal
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signal
operator|.
name|methodSignature
argument_list|()
argument_list|,
name|QByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyConstant
name|void
name|tst_QMetaObject
operator|::
name|propertyConstant
parameter_list|()
block|{
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
name|metaObject
argument_list|()
decl_stmt|;
name|QMetaProperty
name|prop
init|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value8"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|prop
operator|.
name|isConstant
argument_list|()
argument_list|)
expr_stmt|;
name|prop
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value9"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isConstant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyFinal
name|void
name|tst_QMetaObject
operator|::
name|propertyFinal
parameter_list|()
block|{
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
name|metaObject
argument_list|()
decl_stmt|;
name|QMetaProperty
name|prop
init|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value10"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isFinal
argument_list|()
argument_list|)
expr_stmt|;
name|prop
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"value9"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|prop
operator|.
name|isFinal
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ClassInfoTestObjectA
class|class
name|ClassInfoTestObjectA
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_CLASSINFO
argument_list|(
literal|"Author"
argument_list|,
literal|"Christopher Pike"
argument_list|)
block|}
class|;
end_class
begin_class
DECL|class|ClassInfoTestObjectB
class|class
name|ClassInfoTestObjectB
super|:
specifier|public
name|ClassInfoTestObjectA
block|{
name|Q_OBJECT
block|}
class|;
end_class
begin_function
DECL|function|classInfo
name|void
name|tst_QMetaObject
operator|::
name|classInfo
parameter_list|()
block|{
name|ClassInfoTestObjectB
name|b
decl_stmt|;
name|int
name|index
init|=
name|b
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfClassInfo
argument_list|(
literal|"Author"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|index
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|<=
name|b
operator|.
name|metaObject
argument_list|()
operator|->
name|classInfoOffset
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QLatin1String
argument_list|(
name|b
operator|.
name|metaObject
argument_list|()
operator|->
name|classInfo
argument_list|(
name|index
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Christopher Pike"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|metaMethod
name|void
name|tst_QMetaObject
operator|::
name|metaMethod
parameter_list|()
block|{
name|QString
name|str
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QString
name|ret
argument_list|(
literal|"bar"
argument_list|)
decl_stmt|;
name|QMetaMethod
name|method
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|method
operator|.
name|invoke
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|method
operator|.
name|invoke
argument_list|(
name|this
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|str
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|method
operator|.
name|invoke
argument_list|(
name|this
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QString
argument_list|,
name|ret
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
name|str
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|str
argument_list|,
name|QString
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ret
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QtTestObject
name|obj
decl_stmt|;
name|QString
name|t1
argument_list|(
literal|"1"
argument_list|)
decl_stmt|;
name|QString
name|t2
argument_list|(
literal|"2"
argument_list|)
decl_stmt|;
name|QString
name|t3
argument_list|(
literal|"3"
argument_list|)
decl_stmt|;
name|QString
name|t4
argument_list|(
literal|"4"
argument_list|)
decl_stmt|;
name|QString
name|t5
argument_list|(
literal|"5"
argument_list|)
decl_stmt|;
name|QString
name|t6
argument_list|(
literal|"6"
argument_list|)
decl_stmt|;
name|QString
name|t7
argument_list|(
literal|"7"
argument_list|)
decl_stmt|;
name|QString
name|t8
argument_list|(
literal|"8"
argument_list|)
decl_stmt|;
name|QString
name|t9
argument_list|(
literal|"9"
argument_list|)
decl_stmt|;
name|QString
name|t10
argument_list|(
literal|"X"
argument_list|)
decl_stmt|;
name|int
name|index
init|=
name|QtTestObject
operator|::
name|staticMetaObject
operator|.
name|indexOfMethod
argument_list|(
literal|"sl5(QString,QString,QString,QString,QString)"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|method
operator|=
name|QtTestObject
operator|::
name|staticMetaObject
operator|.
name|method
argument_list|(
name|index
argument_list|)
expr_stmt|;
comment|//wrong args
name|QVERIFY
argument_list|(
operator|!
name|method
operator|.
name|invoke
argument_list|(
operator|&
name|obj
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"2"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"3"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"4"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//QVERIFY(!method.invoke(&obj, Q_ARG(QString, "1"), Q_ARG(QString, "2"), Q_ARG(QString, "3"), Q_ARG(QString, "4"), Q_ARG(QString, "5"), Q_ARG(QString, "6")));
comment|//QVERIFY(!method.invoke(&obj, Q_ARG(QString, "1"), Q_ARG(QString, "2"), Q_ARG(QString, "3"), Q_ARG(QString, "4"), Q_ARG(int, 5)));
name|QVERIFY
argument_list|(
operator|!
name|method
operator|.
name|invoke
argument_list|(
operator|&
name|obj
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QString
argument_list|,
name|ret
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"2"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"3"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"4"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//wrong object
comment|//QVERIFY(!method.invoke(this, Q_ARG(QString, "1"), Q_ARG(QString, "2"), Q_ARG(QString, "3"), Q_ARG(QString, "4"), Q_ARG(QString, "5")));
name|QVERIFY
argument_list|(
operator|!
name|method
operator|.
name|invoke
argument_list|(
literal|0
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"2"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"3"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"4"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ret
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|method
operator|.
name|invoke
argument_list|(
operator|&
name|obj
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"1"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"2"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"3"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"4"
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QString
argument_list|,
literal|"5"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl5:12345"
argument_list|)
argument_list|)
expr_stmt|;
name|index
operator|=
name|QtTestObject
operator|::
name|staticMetaObject
operator|.
name|indexOfMethod
argument_list|(
literal|"sl13(QList<QString>)"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QMetaMethod
name|sl13
init|=
name|QtTestObject
operator|::
name|staticMetaObject
operator|.
name|method
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QString
argument_list|>
name|returnValue
decl_stmt|,
name|argument
decl_stmt|;
name|argument
operator|<<
name|QString
argument_list|(
literal|"one"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"two"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"three"
argument_list|)
expr_stmt|;
comment|//wrong object
comment|//QVERIFY(!sl13.invoke(this, Q_RETURN_ARG(QList<QString>, returnValue), Q_ARG(QList<QString>, argument)));
name|QVERIFY
argument_list|(
operator|!
name|sl13
operator|.
name|invoke
argument_list|(
literal|0
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|returnValue
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|argument
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|returnValue
argument_list|,
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sl13
operator|.
name|invoke
argument_list|(
operator|&
name|obj
argument_list|,
name|Q_RETURN_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|returnValue
argument_list|)
argument_list|,
name|Q_ARG
argument_list|(
name|QList
argument_list|<
name|QString
argument_list|>
argument_list|,
name|argument
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|returnValue
argument_list|,
name|argument
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|slotResult
argument_list|,
name|QString
argument_list|(
literal|"sl13"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|indexOfMethod_data
name|void
name|tst_QMetaObject
operator|::
name|indexOfMethod_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|"object"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isSignal"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"indexOfMethod_data"
argument_list|)
operator|<<
operator|(
name|QObject
operator|*
operator|)
name|this
operator|<<
name|QByteArray
argument_list|(
literal|"indexOfMethod_data()"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteLater"
argument_list|)
operator|<<
operator|(
name|QObject
operator|*
operator|)
name|this
operator|<<
name|QByteArray
argument_list|(
literal|"deleteLater()"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"value6changed"
argument_list|)
operator|<<
operator|(
name|QObject
operator|*
operator|)
name|this
operator|<<
name|QByteArray
argument_list|(
literal|"value6Changed()"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"value7changed"
argument_list|)
operator|<<
operator|(
name|QObject
operator|*
operator|)
name|this
operator|<<
name|QByteArray
argument_list|(
literal|"value7Changed(QString)"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"destroyed"
argument_list|)
operator|<<
operator|(
name|QObject
operator|*
operator|)
name|this
operator|<<
name|QByteArray
argument_list|(
literal|"destroyed()"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"destroyed2"
argument_list|)
operator|<<
operator|(
name|QObject
operator|*
operator|)
name|this
operator|<<
name|QByteArray
argument_list|(
literal|"destroyed(QObject*)"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|indexOfMethod
name|void
name|tst_QMetaObject
operator|::
name|indexOfMethod
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QObject
operator|*
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isSignal
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|object
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|idx
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|idx
argument_list|)
operator|.
name|methodSignature
argument_list|()
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSlot
argument_list|(
name|name
argument_list|)
argument_list|,
name|isSignal
condition|?
operator|-
literal|1
else|:
name|idx
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
name|name
argument_list|)
argument_list|,
operator|!
name|isSignal
condition|?
operator|-
literal|1
else|:
name|idx
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|indexOfMethodPMF
name|void
name|tst_QMetaObject
operator|::
name|indexOfMethodPMF
parameter_list|()
block|{
DECL|macro|INDEXOFMETHODPMF_HELPER
define|#
directive|define
name|INDEXOFMETHODPMF_HELPER
parameter_list|(
name|ObjectType
parameter_list|,
name|Name
parameter_list|,
name|Arguments
parameter_list|)
value|{ \         int idx = -1; \         void (ObjectType::*signal)Arguments =&ObjectType::Name; \         void *signal_p =&signal; \         void *args[] = {&idx, signal_p, 0}; \         ObjectType::qt_static_metacall(0, QMetaObject::IndexOfMethod, 0, args); \         QCOMPARE(ObjectType::staticMetaObject.indexOfMethod(QMetaObject::normalizedSignature(#Name #Arguments)), \                  ObjectType::staticMetaObject.methodOffset() + idx); \     }
name|INDEXOFMETHODPMF_HELPER
argument_list|(
argument|tst_QMetaObject
argument_list|,
argument|value7Changed
argument_list|,
argument|(const QString&)
argument_list|)
name|INDEXOFMETHODPMF_HELPER
argument_list|(
argument|QtTestObject
argument_list|,
argument|sig0
argument_list|,
argument|()
argument_list|)
name|INDEXOFMETHODPMF_HELPER
argument_list|(
argument|QtTestObject
argument_list|,
argument|sig10
argument_list|,
argument|(QString,QString,QString,QString,QString,QString,QString,QString,QString,QString)
argument_list|)
name|INDEXOFMETHODPMF_HELPER
argument_list|(
argument|QtTestCustomObject
argument_list|,
argument|sig_custom
argument_list|,
argument|(const CustomString&)
argument_list|)
block|}
end_function
begin_namespace
DECL|namespace|SignalTestHelper
namespace|namespace
name|SignalTestHelper
block|{
comment|// These functions use the public QMetaObject/QMetaMethod API to implement
comment|// the functionality of the internal API, and are used to check the results.
DECL|function|signalCount
specifier|static
name|int
name|signalCount
parameter_list|(
specifier|const
name|QMetaObject
modifier|*
name|mo
parameter_list|)
block|{
name|int
name|n
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mo
operator|->
name|methodCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QMetaMethod
name|mm
init|=
name|mo
operator|->
name|method
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|mm
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Signal
condition|)
operator|++
name|n
expr_stmt|;
block|}
return|return
name|n
return|;
block|}
DECL|function|signalOffset
specifier|static
name|int
name|signalOffset
parameter_list|(
specifier|const
name|QMetaObject
modifier|*
name|mo
parameter_list|)
block|{
return|return
name|mo
operator|->
name|superClass
argument_list|()
condition|?
name|signalCount
argument_list|(
name|mo
operator|->
name|superClass
argument_list|()
argument_list|)
else|:
literal|0
return|;
block|}
DECL|function|signal
specifier|static
name|QMetaMethod
name|signal
parameter_list|(
specifier|const
name|QMetaObject
modifier|*
name|mo
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|int
name|k
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mo
operator|->
name|methodCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QMetaMethod
name|mm
init|=
name|mo
operator|->
name|method
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|mm
operator|.
name|methodType
argument_list|()
operator|!=
name|QMetaMethod
operator|::
name|Signal
condition|)
continue|continue;
if|if
condition|(
name|k
operator|==
name|index
condition|)
return|return
name|mm
return|;
operator|++
name|k
expr_stmt|;
block|}
return|return
name|QMetaMethod
argument_list|()
return|;
block|}
DECL|function|signalIndex
specifier|static
name|int
name|signalIndex
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|mm
parameter_list|)
block|{
name|int
name|k
init|=
name|mm
operator|.
name|methodIndex
argument_list|()
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
name|mm
operator|.
name|enclosingMetaObject
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mm
operator|.
name|methodIndex
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|mo
operator|->
name|method
argument_list|(
name|i
argument_list|)
operator|.
name|methodType
argument_list|()
operator|!=
name|QMetaMethod
operator|::
name|Signal
condition|)
operator|--
name|k
expr_stmt|;
block|}
return|return
name|k
return|;
block|}
block|}
end_namespace
begin_comment
comment|// namespace SignalTestHelper
end_comment
begin_function
DECL|function|signalOffset_data
name|void
name|tst_QMetaObject
operator|::
name|signalOffset_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
specifier|const
name|QMetaObject
operator|*
argument_list|>
argument_list|(
literal|"metaObject"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QObject"
argument_list|)
operator|<<
operator|&
name|QObject
operator|::
name|staticMetaObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tst_QMetaObject"
argument_list|)
operator|<<
operator|&
name|tst_QMetaObject
operator|::
name|staticMetaObject
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"QtTestObject"
argument_list|)
operator|<<
operator|&
name|QtTestObject
operator|::
name|staticMetaObject
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signalOffset
name|void
name|tst_QMetaObject
operator|::
name|signalOffset
parameter_list|()
block|{
name|QFETCH
argument_list|(
specifier|const
name|QMetaObject
operator|*
argument_list|,
name|metaObject
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaObjectPrivate
operator|::
name|signalOffset
argument_list|(
name|metaObject
argument_list|)
argument_list|,
name|SignalTestHelper
operator|::
name|signalOffset
argument_list|(
name|metaObject
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signalCount_data
name|void
name|tst_QMetaObject
operator|::
name|signalCount_data
parameter_list|()
block|{
name|signalOffset_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signalCount
name|void
name|tst_QMetaObject
operator|::
name|signalCount
parameter_list|()
block|{
name|QFETCH
argument_list|(
specifier|const
name|QMetaObject
operator|*
argument_list|,
name|metaObject
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaObjectPrivate
operator|::
name|absoluteSignalCount
argument_list|(
name|metaObject
argument_list|)
argument_list|,
name|SignalTestHelper
operator|::
name|signalCount
argument_list|(
name|metaObject
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signal_data
name|void
name|tst_QMetaObject
operator|::
name|signal_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
specifier|const
name|QMetaObject
operator|*
argument_list|>
argument_list|(
literal|"metaObject"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"index"
argument_list|)
expr_stmt|;
struct|struct
name|SignalTestDataHelper
block|{
specifier|static
name|void
name|addSignals
parameter_list|(
specifier|const
name|QMetaObject
modifier|*
name|mo
parameter_list|)
block|{
name|int
name|count
init|=
name|SignalTestHelper
operator|::
name|signalCount
argument_list|(
name|mo
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
block|{
name|QMetaMethod
name|mm
init|=
name|SignalTestHelper
operator|::
name|signal
argument_list|(
name|mo
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|QByteArray
name|tag
argument_list|(
name|mo
operator|->
name|className
argument_list|()
argument_list|)
decl_stmt|;
name|tag
operator|.
name|append
argument_list|(
literal|"::"
argument_list|)
expr_stmt|;
name|tag
operator|.
name|append
argument_list|(
name|mm
operator|.
name|methodSignature
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|tag
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
name|mo
operator|<<
name|i
expr_stmt|;
block|}
block|}
block|}
struct|;
name|SignalTestDataHelper
operator|::
name|addSignals
argument_list|(
operator|&
name|QObject
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
name|SignalTestDataHelper
operator|::
name|addSignals
argument_list|(
operator|&
name|tst_QMetaObject
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
name|SignalTestDataHelper
operator|::
name|addSignals
argument_list|(
operator|&
name|QtTestObject
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signal
name|void
name|tst_QMetaObject
operator|::
name|signal
parameter_list|()
block|{
name|QFETCH
argument_list|(
specifier|const
name|QMetaObject
operator|*
argument_list|,
name|metaObject
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaObjectPrivate
operator|::
name|signal
argument_list|(
name|metaObject
argument_list|,
name|index
argument_list|)
argument_list|,
name|SignalTestHelper
operator|::
name|signal
argument_list|(
name|metaObject
argument_list|,
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signalIndex_data
name|void
name|tst_QMetaObject
operator|::
name|signalIndex_data
parameter_list|()
block|{
name|signal_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signalIndex
name|void
name|tst_QMetaObject
operator|::
name|signalIndex
parameter_list|()
block|{
name|QFETCH
argument_list|(
specifier|const
name|QMetaObject
operator|*
argument_list|,
name|metaObject
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|QMetaMethod
name|mm
init|=
name|SignalTestHelper
operator|::
name|signal
argument_list|(
name|metaObject
argument_list|,
name|index
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaObjectPrivate
operator|::
name|signalIndex
argument_list|(
name|mm
argument_list|)
argument_list|,
name|SignalTestHelper
operator|::
name|signalIndex
argument_list|(
name|mm
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|enumDebugStream
name|void
name|tst_QMetaObject
operator|::
name|enumDebugStream
parameter_list|()
block|{
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"hello MyNamespace::MyClass::MyEnum(MyEnum2) world "
argument_list|)
expr_stmt|;
name|MyNamespace
operator|::
name|MyClass
operator|::
name|MyEnum
name|e
init|=
name|MyNamespace
operator|::
name|MyClass
operator|::
name|MyEnum2
decl_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"hello"
operator|<<
name|e
operator|<<
literal|"world"
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QMetaObject
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qmetaobject.moc"
end_include
end_unit
