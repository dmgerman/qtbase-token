begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/qanimationgroup.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qsequentialanimationgroup.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qparallelanimationgroup.h>
end_include
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QAbstractAnimation::State
argument_list|)
end_macro
begin_class
DECL|class|tst_QAnimationGroup
class|class
name|tst_QAnimationGroup
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|Q_SLOTS
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|construction
parameter_list|()
function_decl|;
name|void
name|emptyGroup
parameter_list|()
function_decl|;
name|void
name|setCurrentTime
parameter_list|()
function_decl|;
name|void
name|setParentAutoAdd
parameter_list|()
function_decl|;
name|void
name|beginNestedGroup
parameter_list|()
function_decl|;
name|void
name|addChildTwice
parameter_list|()
function_decl|;
name|void
name|loopWithoutStartValue
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|initTestCase
name|void
name|tst_QAnimationGroup
operator|::
name|initTestCase
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
literal|"QAbstractAnimation::State"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|construction
name|void
name|tst_QAnimationGroup
operator|::
name|construction
parameter_list|()
block|{
name|QSequentialAnimationGroup
name|animationgroup
decl_stmt|;
block|}
end_function
begin_class
DECL|class|AnimationObject
class|class
name|AnimationObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
parameter_list|(
name|int
name|value
name|READ
name|value
name|WRITE
name|setValue
parameter_list|)
specifier|public
private|:
DECL|function|AnimationObject
name|AnimationObject
parameter_list|(
name|int
name|startValue
init|=
literal|0
parameter_list|)
member_init_list|:
name|v
argument_list|(
name|startValue
argument_list|)
block|{ }
DECL|function|value
name|int
name|value
parameter_list|()
specifier|const
block|{
return|return
name|v
return|;
block|}
DECL|function|setValue
name|void
name|setValue
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|v
operator|=
name|value
expr_stmt|;
block|}
DECL|member|v
name|int
name|v
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|TestAnimation
class|class
name|TestAnimation
super|:
specifier|public
name|QVariantAnimation
block|{
name|Q_OBJECT
public|public:
DECL|function|updateCurrentValue
specifier|virtual
name|void
name|updateCurrentValue
parameter_list|(
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|value
argument_list|)
block|}
empty_stmt|;
DECL|function|updateState
specifier|virtual
name|void
name|updateState
parameter_list|(
name|QAbstractAnimation
operator|::
name|State
name|oldState
parameter_list|,
name|QAbstractAnimation
operator|::
name|State
name|newState
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|oldState
argument_list|)
name|Q_UNUSED
argument_list|(
argument|newState
argument_list|)
block|}
empty_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|UncontrolledAnimation
class|class
name|UncontrolledAnimation
super|:
specifier|public
name|QPropertyAnimation
block|{
name|Q_OBJECT
public|public:
DECL|function|UncontrolledAnimation
name|UncontrolledAnimation
parameter_list|(
name|QObject
modifier|*
name|target
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|propertyName
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QPropertyAnimation
argument_list|(
name|target
argument_list|,
name|propertyName
argument_list|,
name|parent
argument_list|)
member_init_list|,
name|id
argument_list|(
literal|0
argument_list|)
block|{
name|setDuration
argument_list|(
literal|250
argument_list|)
expr_stmt|;
block|}
DECL|function|duration
name|int
name|duration
parameter_list|()
specifier|const
block|{
return|return
operator|-
literal|1
return|;
comment|/* not time driven */
block|}
protected|protected:
DECL|function|timerEvent
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|timerId
argument_list|()
operator|==
name|id
condition|)
name|stop
argument_list|()
expr_stmt|;
block|}
DECL|function|updateRunning
name|void
name|updateRunning
parameter_list|(
name|bool
name|running
parameter_list|)
block|{
if|if
condition|(
name|running
condition|)
block|{
name|id
operator|=
name|startTimer
argument_list|(
literal|500
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|killTimer
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|id
operator|=
literal|0
expr_stmt|;
block|}
block|}
private|private:
DECL|member|id
name|int
name|id
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|emptyGroup
name|void
name|tst_QAnimationGroup
operator|::
name|emptyGroup
parameter_list|()
block|{
name|QSequentialAnimationGroup
name|group
decl_stmt|;
name|QSignalSpy
name|groupStateChangedSpy
argument_list|(
operator|&
name|group
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|groupStateChangedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|group
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupStateChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|groupStateChangedSpy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|()
argument_list|)
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|groupStateChangedSpy
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|()
argument_list|)
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QAbstractAnimation::pause: Cannot pause a stopped animation"
argument_list|)
expr_stmt|;
name|group
operator|.
name|pause
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupStateChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|group
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|groupStateChangedSpy
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|first
argument_list|()
argument_list|)
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|groupStateChangedSpy
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|first
argument_list|()
argument_list|)
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|group
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|groupStateChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentTime
name|void
name|tst_QAnimationGroup
operator|::
name|setCurrentTime
parameter_list|()
block|{
name|AnimationObject
name|s_o1
decl_stmt|;
name|AnimationObject
name|s_o2
decl_stmt|;
name|AnimationObject
name|s_o3
decl_stmt|;
name|AnimationObject
name|p_o1
decl_stmt|;
name|AnimationObject
name|p_o2
decl_stmt|;
name|AnimationObject
name|p_o3
decl_stmt|;
name|AnimationObject
name|t_o1
decl_stmt|;
name|AnimationObject
name|t_o2
decl_stmt|;
comment|// sequence operating on same object/property
name|QSequentialAnimationGroup
modifier|*
name|sequence
init|=
operator|new
name|QSequentialAnimationGroup
argument_list|()
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a1_s_o1
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|s_o1
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a2_s_o1
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|s_o1
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a3_s_o1
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|s_o1
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|a2_s_o1
operator|->
name|setLoopCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|sequence
operator|->
name|addAnimation
argument_list|(
name|a1_s_o1
argument_list|)
expr_stmt|;
name|sequence
operator|->
name|addAnimation
argument_list|(
name|a2_s_o1
argument_list|)
expr_stmt|;
name|sequence
operator|->
name|addAnimation
argument_list|(
name|a3_s_o1
argument_list|)
expr_stmt|;
comment|// sequence operating on different object/properties
name|QAnimationGroup
modifier|*
name|sequence2
init|=
operator|new
name|QSequentialAnimationGroup
argument_list|()
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a1_s_o2
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|s_o2
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a1_s_o3
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|s_o3
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|sequence2
operator|->
name|addAnimation
argument_list|(
name|a1_s_o2
argument_list|)
expr_stmt|;
name|sequence2
operator|->
name|addAnimation
argument_list|(
name|a1_s_o3
argument_list|)
expr_stmt|;
comment|// parallel operating on different object/properties
name|QAnimationGroup
modifier|*
name|parallel
init|=
operator|new
name|QParallelAnimationGroup
argument_list|()
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a1_p_o1
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|p_o1
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a1_p_o2
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|p_o2
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|a1_p_o3
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|p_o3
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|a1_p_o2
operator|->
name|setLoopCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|parallel
operator|->
name|addAnimation
argument_list|(
name|a1_p_o1
argument_list|)
expr_stmt|;
name|parallel
operator|->
name|addAnimation
argument_list|(
name|a1_p_o2
argument_list|)
expr_stmt|;
name|parallel
operator|->
name|addAnimation
argument_list|(
name|a1_p_o3
argument_list|)
expr_stmt|;
name|QAbstractAnimation
modifier|*
name|notTimeDriven
init|=
operator|new
name|UncontrolledAnimation
argument_list|(
operator|&
name|t_o1
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|notTimeDriven
operator|->
name|totalDuration
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QAbstractAnimation
modifier|*
name|loopsForever
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|t_o2
argument_list|,
literal|"value"
argument_list|)
decl_stmt|;
name|loopsForever
operator|->
name|setLoopCount
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopsForever
operator|->
name|totalDuration
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QParallelAnimationGroup
name|group
decl_stmt|;
name|group
operator|.
name|addAnimation
argument_list|(
name|sequence
argument_list|)
expr_stmt|;
name|group
operator|.
name|addAnimation
argument_list|(
name|sequence2
argument_list|)
expr_stmt|;
name|group
operator|.
name|addAnimation
argument_list|(
name|parallel
argument_list|)
expr_stmt|;
name|group
operator|.
name|addAnimation
argument_list|(
name|notTimeDriven
argument_list|)
expr_stmt|;
name|group
operator|.
name|addAnimation
argument_list|(
name|loopsForever
argument_list|)
expr_stmt|;
comment|// Current time = 1
name|group
operator|.
name|setCurrentTime
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o1
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence2
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o2
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parallel
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o1
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o2
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o3
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notTimeDriven
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopsForever
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a3_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o2
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o3
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o2
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o3
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notTimeDriven
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopsForever
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Current time = 250
name|group
operator|.
name|setCurrentTime
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a3_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o2
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o3
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o2
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o2
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o3
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notTimeDriven
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopsForever
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopsForever
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence
operator|->
name|currentAnimation
argument_list|()
argument_list|,
name|a2_s_o1
argument_list|)
expr_stmt|;
comment|// Current time = 251
name|group
operator|.
name|setCurrentTime
argument_list|(
literal|251
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|group
operator|.
name|currentLoopTime
argument_list|()
argument_list|,
literal|251
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|251
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a2_s_o1
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a3_s_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence2
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|251
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o2
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_s_o3
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o1
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o2
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o2
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a1_p_o3
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notTimeDriven
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|251
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopsForever
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|sequence
operator|->
name|currentAnimation
argument_list|()
argument_list|,
name|a2_s_o1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setParentAutoAdd
name|void
name|tst_QAnimationGroup
operator|::
name|setParentAutoAdd
parameter_list|()
block|{
name|QParallelAnimationGroup
name|group
decl_stmt|;
name|QVariantAnimation
modifier|*
name|animation
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|->
name|group
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QAnimationGroup
operator|*
argument_list|>
argument_list|(
operator|&
name|group
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|beginNestedGroup
name|void
name|tst_QAnimationGroup
operator|::
name|beginNestedGroup
parameter_list|()
block|{
name|QAnimationGroup
modifier|*
name|parent
init|=
operator|new
name|QParallelAnimationGroup
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|&
literal|1
condition|)
block|{
operator|new
name|QParallelAnimationGroup
argument_list|(
name|parent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|new
name|QSequentialAnimationGroup
argument_list|(
name|parent
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QAnimationGroup
modifier|*
name|child
init|=
cast|static_cast
argument_list|<
name|QAnimationGroup
operator|*
argument_list|>
argument_list|(
name|parent
operator|->
name|animationAt
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|&
literal|1
condition|)
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QParallelAnimationGroup
operator|*
argument_list|>
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|QSequentialAnimationGroup
operator|*
argument_list|>
argument_list|(
name|child
argument_list|)
argument_list|)
expr_stmt|;
name|parent
operator|=
name|child
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addChildTwice
name|void
name|tst_QAnimationGroup
operator|::
name|addChildTwice
parameter_list|()
block|{
name|QAbstractAnimation
modifier|*
name|subGroup
decl_stmt|;
name|QAbstractAnimation
modifier|*
name|subGroup2
decl_stmt|;
name|QAnimationGroup
modifier|*
name|parent
init|=
operator|new
name|QSequentialAnimationGroup
argument_list|()
decl_stmt|;
name|subGroup
operator|=
operator|new
name|QPropertyAnimation
argument_list|()
expr_stmt|;
name|subGroup
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|parent
operator|->
name|addAnimation
argument_list|(
name|subGroup
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|parent
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// adding the same item twice to a group will remove the item from its current position
comment|// and append it to the end
name|subGroup
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|subGroup2
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|subGroup
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationAt
argument_list|(
literal|1
argument_list|)
argument_list|,
name|subGroup2
argument_list|)
expr_stmt|;
name|parent
operator|->
name|addAnimation
argument_list|(
name|subGroup
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|subGroup2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|animationAt
argument_list|(
literal|1
argument_list|)
argument_list|,
name|subGroup
argument_list|)
expr_stmt|;
operator|delete
name|parent
expr_stmt|;
block|}
end_function
begin_function
DECL|function|loopWithoutStartValue
name|void
name|tst_QAnimationGroup
operator|::
name|loopWithoutStartValue
parameter_list|()
block|{
name|QAnimationGroup
modifier|*
name|parent
init|=
operator|new
name|QSequentialAnimationGroup
argument_list|()
decl_stmt|;
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim1
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim1
operator|.
name|setEndValue
argument_list|(
operator|-
literal|50
argument_list|)
expr_stmt|;
name|anim1
operator|.
name|setDuration
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim2
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim2
operator|.
name|setEndValue
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|anim2
operator|.
name|setDuration
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|parent
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim1
argument_list|)
expr_stmt|;
name|parent
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim2
argument_list|)
expr_stmt|;
name|parent
operator|->
name|setLoopCount
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|parent
operator|->
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim1
operator|.
name|startValue
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim1
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|parent
operator|->
name|setCurrentTime
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim1
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|parent
operator|->
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QAnimationGroup
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qanimationgroup.moc"
end_include
end_unit
