begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/qpropertyanimation.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qvariantanimation.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qwidget.h>
end_include
begin_class
DECL|class|UncontrolledAnimation
class|class
name|UncontrolledAnimation
super|:
specifier|public
name|QPropertyAnimation
block|{
name|Q_OBJECT
public|public:
DECL|function|duration
name|int
name|duration
parameter_list|()
specifier|const
block|{
return|return
operator|-
literal|1
return|;
comment|/* not time driven */
block|}
protected|protected:
DECL|function|updateCurrentTime
name|void
name|updateCurrentTime
parameter_list|(
name|int
name|currentTime
parameter_list|)
block|{
name|QPropertyAnimation
operator|::
name|updateCurrentTime
argument_list|(
name|currentTime
argument_list|)
expr_stmt|;
if|if
condition|(
name|currentTime
operator|>=
name|QPropertyAnimation
operator|::
name|duration
argument_list|()
operator|||
name|currentLoop
argument_list|()
operator|>=
literal|1
condition|)
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|MyObject
class|class
name|MyObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
parameter_list|(
name|qreal
name|x
name|READ
name|x
name|WRITE
name|setX
parameter_list|)
specifier|public
private|:
DECL|function|MyObject
name|MyObject
parameter_list|()
member_init_list|:
name|m_x
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|function|x
name|qreal
name|x
parameter_list|()
specifier|const
block|{
return|return
name|m_x
return|;
block|}
DECL|function|setX
name|void
name|setX
parameter_list|(
name|qreal
name|x
parameter_list|)
block|{
name|m_x
operator|=
name|x
expr_stmt|;
block|}
private|private:
DECL|member|m_x
name|qreal
name|m_x
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|DummyPropertyAnimation
class|class
name|DummyPropertyAnimation
super|:
specifier|public
name|QPropertyAnimation
block|{
public|public:
DECL|function|DummyPropertyAnimation
name|DummyPropertyAnimation
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QPropertyAnimation
argument_list|(
name|parent
argument_list|)
block|{
name|setTargetObject
argument_list|(
operator|&
name|o
argument_list|)
expr_stmt|;
name|this
operator|->
name|setPropertyName
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
DECL|member|o
name|MyObject
name|o
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|tst_QPropertyAnimation
class|class
name|tst_QPropertyAnimation
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|Q_SLOTS
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|construction
parameter_list|()
function_decl|;
name|void
name|setCurrentTime_data
parameter_list|()
function_decl|;
name|void
name|setCurrentTime
parameter_list|()
function_decl|;
name|void
name|statesAndSignals_data
parameter_list|()
function_decl|;
name|void
name|statesAndSignals
parameter_list|()
function_decl|;
name|void
name|deletion1
parameter_list|()
function_decl|;
name|void
name|deletion2
parameter_list|()
function_decl|;
name|void
name|deletion3
parameter_list|()
function_decl|;
name|void
name|duration0
parameter_list|()
function_decl|;
name|void
name|noStartValue
parameter_list|()
function_decl|;
name|void
name|noStartValueWithLoop
parameter_list|()
function_decl|;
name|void
name|startWhenAnotherIsRunning
parameter_list|()
function_decl|;
name|void
name|easingcurve_data
parameter_list|()
function_decl|;
name|void
name|easingcurve
parameter_list|()
function_decl|;
name|void
name|startWithoutStartValue
parameter_list|()
function_decl|;
name|void
name|startBackwardWithoutEndValue
parameter_list|()
function_decl|;
name|void
name|playForwardBackward
parameter_list|()
function_decl|;
name|void
name|interpolated
parameter_list|()
function_decl|;
name|void
name|setStartEndValues_data
parameter_list|()
function_decl|;
name|void
name|setStartEndValues
parameter_list|()
function_decl|;
name|void
name|zeroDurationStart
parameter_list|()
function_decl|;
name|void
name|operationsInStates_data
parameter_list|()
function_decl|;
name|void
name|operationsInStates
parameter_list|()
function_decl|;
name|void
name|oneKeyValue
parameter_list|()
function_decl|;
name|void
name|updateOnSetKeyValues
parameter_list|()
function_decl|;
name|void
name|restart
parameter_list|()
function_decl|;
name|void
name|valueChanged
parameter_list|()
function_decl|;
name|void
name|twoAnimations
parameter_list|()
function_decl|;
name|void
name|deletedInUpdateCurrentTime
parameter_list|()
function_decl|;
name|void
name|totalDuration
parameter_list|()
function_decl|;
name|void
name|zeroLoopCount
parameter_list|()
function_decl|;
name|void
name|recursiveAnimations
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|initTestCase
name|void
name|tst_QPropertyAnimation
operator|::
name|initTestCase
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
literal|"QAbstractAnimation::State"
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QAbstractAnimation
operator|::
name|DeletionPolicy
argument_list|>
argument_list|(
literal|"QAbstractAnimation::DeletionPolicy"
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|AnimationObject
class|class
name|AnimationObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
name|int
name|value
name|READ
name|value
name|WRITE
name|setValue
argument_list|)
name|Q_PROPERTY
argument_list|(
name|qreal
name|realValue
name|READ
name|realValue
name|WRITE
name|setRealValue
argument_list|)
decl|public
range|:
DECL|function|AnimationObject
name|AnimationObject
argument_list|(
argument|int startValue =
literal|0
argument_list|)
operator|:
name|v
argument_list|(
name|startValue
argument_list|)
decl_stmt|,
name|rv
argument_list|(
name|startValue
argument_list|)
argument_list|{ }
DECL|function|value
name|int
name|value
argument_list|()
decl|const
argument_list|{ return
name|v
argument_list|; }
DECL|function|setValue
name|void
name|setValue
argument_list|(
name|int
name|value
argument_list|)
argument_list|{
name|v
operator|=
name|value
argument_list|; }
DECL|function|realValue
name|qreal
name|realValue
argument_list|()
decl|const
argument_list|{ return
name|rv
argument_list|; }
DECL|function|setRealValue
name|void
name|setRealValue
argument_list|(
name|qreal
name|value
argument_list|)
argument_list|{
name|rv
operator|=
name|value
argument_list|; }
DECL|member|v
name|int
name|v
decl_stmt|;
DECL|member|rv
name|qreal
name|rv
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|construction
name|void
name|tst_QPropertyAnimation
operator|::
name|construction
parameter_list|()
block|{
name|QPropertyAnimation
name|panimation
decl_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentTime_data
name|void
name|tst_QPropertyAnimation
operator|::
name|setCurrentTime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"duration"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"loopCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"currentTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"testCurrentTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"testCurrentLoop"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-1"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2"
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"6"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"7"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8"
argument_list|)
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"9"
argument_list|)
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a"
argument_list|)
operator|<<
literal|10
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"b"
argument_list|)
operator|<<
literal|10
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"c"
argument_list|)
operator|<<
literal|10
operator|<<
literal|1
operator|<<
literal|10
operator|<<
literal|10
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"d"
argument_list|)
operator|<<
literal|10
operator|<<
literal|2
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"e"
argument_list|)
operator|<<
literal|10
operator|<<
literal|2
operator|<<
literal|11
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"f"
argument_list|)
operator|<<
literal|10
operator|<<
literal|2
operator|<<
literal|20
operator|<<
literal|10
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g"
argument_list|)
operator|<<
literal|10
operator|<<
literal|2
operator|<<
literal|21
operator|<<
literal|10
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negloop 0"
argument_list|)
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negloop 1"
argument_list|)
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
literal|10
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negloop 2"
argument_list|)
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
literal|15
operator|<<
literal|5
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negloop 3"
argument_list|)
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
literal|20
operator|<<
literal|0
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negloop 4"
argument_list|)
operator|<<
literal|10
operator|<<
operator|-
literal|1
operator|<<
literal|30
operator|<<
literal|0
operator|<<
literal|3
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentTime
name|void
name|tst_QPropertyAnimation
operator|::
name|setCurrentTime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|duration
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|loopCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|currentTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|testCurrentTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|testCurrentLoop
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|animation
decl_stmt|;
if|if
condition|(
name|duration
operator|<
literal|0
condition|)
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QVariantAnimation::setDuration: cannot set a negative duration"
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setDuration
argument_list|(
name|duration
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setLoopCount
argument_list|(
name|loopCount
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setCurrentTime
argument_list|(
name|currentTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentLoopTime
argument_list|()
argument_list|,
name|testCurrentTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentLoop
argument_list|()
argument_list|,
name|testCurrentLoop
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|statesAndSignals_data
name|void
name|tst_QPropertyAnimation
operator|::
name|statesAndSignals_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"uncontrolled"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal animation"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"animation with undefined duration"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|statesAndSignals
name|void
name|tst_QPropertyAnimation
operator|::
name|statesAndSignals
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|uncontrolled
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|anim
decl_stmt|;
if|if
condition|(
name|uncontrolled
condition|)
name|anim
operator|=
operator|new
name|UncontrolledAnimation
expr_stmt|;
else|else
name|anim
operator|=
operator|new
name|DummyPropertyAnimation
expr_stmt|;
name|anim
operator|->
name|setDuration
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|runningSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|currentLoopSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|currentLoopChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|runningSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentLoopSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setCurrentTime
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setCurrentTime
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentLoopSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setLoopCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setCurrentTime
argument_list|(
literal|101
argument_list|)
expr_stmt|;
if|if
condition|(
name|uncontrolled
condition|)
name|QSKIP
argument_list|(
literal|"Uncontrolled animations don't handle looping"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentLoopSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setCurrentTime
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentLoopSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//anim must have started
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|runningSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|anim
operator|->
name|stop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//anim must have stopped
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentLoopSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|runningSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|anim
operator|->
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|//started and stopped again
name|runningSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentLoopSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|()
expr_stmt|;
comment|// auto-rewinds
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentLoopSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// anim has started
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|runningSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|currentLoopSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// anim has stopped
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentLoopTime
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
operator|delete
name|anim
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deletion1
name|void
name|tst_QPropertyAnimation
operator|::
name|deletion1
parameter_list|()
block|{
name|QObject
modifier|*
name|object
init|=
operator|new
name|QWidget
decl_stmt|;
name|QPointer
argument_list|<
name|QPropertyAnimation
argument_list|>
name|anim
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"minimumWidth"
argument_list|)
decl_stmt|;
comment|//test that the animation is deleted correctly depending of the deletion flag passed in start()
name|QSignalSpy
name|runningSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|runningSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setStartValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setEndValue
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setDuration
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
argument_list|)
expr_stmt|;
comment|//The animation should not have been deleted
name|QTRY_COMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|(
name|QVariantAnimation
operator|::
name|DeleteWhenStopped
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|anim
argument_list|)
expr_stmt|;
comment|//The animation must have been deleted
operator|delete
name|object
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deletion2
name|void
name|tst_QPropertyAnimation
operator|::
name|deletion2
parameter_list|()
block|{
comment|//test that the animation get deleted if the object is deleted
name|QObject
modifier|*
name|object
init|=
operator|new
name|QWidget
decl_stmt|;
name|QPointer
argument_list|<
name|QPropertyAnimation
argument_list|>
name|anim
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"minimumWidth"
argument_list|)
decl_stmt|;
name|anim
operator|->
name|setStartValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setEndValue
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setDuration
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QSignalSpy
name|runningSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|runningSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setStartValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setEndValue
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setDuration
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//we can't call deletaLater directly because the delete would only happen in the next loop of _this_ event loop
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
name|object
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
operator|->
name|targetObject
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deletion3
name|void
name|tst_QPropertyAnimation
operator|::
name|deletion3
parameter_list|()
block|{
comment|//test that the stopped signal is emit when the animation is destroyed
name|QObject
modifier|*
name|object
init|=
operator|new
name|QWidget
decl_stmt|;
name|QPropertyAnimation
modifier|*
name|anim
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"minimumWidth"
argument_list|)
decl_stmt|;
name|anim
operator|->
name|setStartValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setEndValue
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setDuration
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QSignalSpy
name|runningSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|runningSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|anim
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|duration0
name|void
name|tst_QPropertyAnimation
operator|::
name|duration0
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|animation
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|animation
operator|.
name|setEndValue
argument_list|(
literal|43
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setStartValue
argument_list|(
literal|42
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setDuration
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
comment|//it is at the end
name|animation
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|StartValueTester
class|class
name|StartValueTester
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
parameter_list|(
name|int
name|ole
name|READ
name|ole
name|WRITE
name|setOle
parameter_list|)
specifier|public
private|:
DECL|function|StartValueTester
name|StartValueTester
parameter_list|()
member_init_list|:
name|o
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|function|ole
name|int
name|ole
parameter_list|()
specifier|const
block|{
return|return
name|o
return|;
block|}
DECL|function|setOle
name|void
name|setOle
parameter_list|(
name|int
name|v
parameter_list|)
block|{
name|o
operator|=
name|v
expr_stmt|;
name|values
operator|<<
name|v
expr_stmt|;
block|}
DECL|member|o
name|int
name|o
decl_stmt|;
DECL|member|values
name|QList
argument_list|<
name|int
argument_list|>
name|values
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|noStartValue
name|void
name|tst_QPropertyAnimation
operator|::
name|noStartValue
parameter_list|()
block|{
name|StartValueTester
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|o
operator|.
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QPropertyAnimation
name|a
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|a
operator|.
name|setEndValue
argument_list|(
literal|420
argument_list|)
expr_stmt|;
name|a
operator|.
name|setDuration
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|a
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|o
operator|.
name|values
operator|.
name|first
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|values
operator|.
name|last
argument_list|()
argument_list|,
literal|420
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noStartValueWithLoop
name|void
name|tst_QPropertyAnimation
operator|::
name|noStartValueWithLoop
parameter_list|()
block|{
name|StartValueTester
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|o
operator|.
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QPropertyAnimation
name|a
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|a
operator|.
name|setEndValue
argument_list|(
literal|420
argument_list|)
expr_stmt|;
name|a
operator|.
name|setDuration
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|a
operator|.
name|setLoopCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|a
operator|.
name|start
argument_list|()
expr_stmt|;
name|a
operator|.
name|setCurrentTime
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|values
operator|.
name|first
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|values
operator|.
name|last
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|a
operator|.
name|setCurrentTime
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|420
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|startWhenAnotherIsRunning
name|void
name|tst_QPropertyAnimation
operator|::
name|startWhenAnotherIsRunning
parameter_list|()
block|{
name|StartValueTester
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|o
operator|.
name|values
operator|.
name|clear
argument_list|()
expr_stmt|;
block|{
comment|//normal case: the animation finishes and is deleted
name|QPointer
argument_list|<
name|QVariantAnimation
argument_list|>
name|anim
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|->
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QSignalSpy
name|runningSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|runningSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|(
name|QVariantAnimation
operator|::
name|DeleteWhenStopped
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim
operator|->
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|//started and then stopped
name|QVERIFY
argument_list|(
operator|!
name|anim
argument_list|)
expr_stmt|;
block|}
block|{
name|QPointer
argument_list|<
name|QVariantAnimation
argument_list|>
name|anim
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|->
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QSignalSpy
name|runningSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|runningSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|(
name|QVariantAnimation
operator|::
name|DeleteWhenStopped
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim
operator|->
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QVariantAnimation
argument_list|>
name|anim2
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim2
operator|->
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QVariantAnimation
operator|::
name|Running
argument_list|)
expr_stmt|;
comment|//anim2 will interrupt anim1
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|anim2
argument_list|,
literal|"start"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|,
name|Q_ARG
argument_list|(
name|QAbstractAnimation
operator|::
name|DeletionPolicy
argument_list|,
name|QVariantAnimation
operator|::
name|DeleteWhenStopped
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|anim
argument_list|)
expr_stmt|;
comment|//anim should have been deleted
name|QVERIFY
argument_list|(
name|anim2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim2
operator|->
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|anim2
argument_list|)
expr_stmt|;
comment|//anim2 is finished: it should have been deleted by now
name|QVERIFY
argument_list|(
operator|!
name|anim
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// copy  from easing.cpp in case that function changes definition
end_comment
begin_function
DECL|function|easeInOutBack
specifier|static
name|qreal
name|easeInOutBack
parameter_list|(
name|qreal
name|t
parameter_list|)
block|{
name|qreal
name|s
init|=
literal|1.70158
decl_stmt|;
name|qreal
name|t_adj
init|=
literal|2.0f
operator|*
operator|(
name|qreal
operator|)
name|t
decl_stmt|;
if|if
condition|(
name|t_adj
operator|<
literal|1
condition|)
block|{
name|s
operator|*=
literal|1.525f
expr_stmt|;
return|return
literal|1.0
operator|/
literal|2
operator|*
operator|(
name|t_adj
operator|*
name|t_adj
operator|*
operator|(
operator|(
name|s
operator|+
literal|1
operator|)
operator|*
name|t_adj
operator|-
name|s
operator|)
operator|)
return|;
block|}
else|else
block|{
name|t_adj
operator|-=
literal|2
expr_stmt|;
name|s
operator|*=
literal|1.525f
expr_stmt|;
return|return
literal|1.0
operator|/
literal|2
operator|*
operator|(
name|t_adj
operator|*
name|t_adj
operator|*
operator|(
operator|(
name|s
operator|+
literal|1
operator|)
operator|*
name|t_adj
operator|+
name|s
operator|)
operator|+
literal|2
operator|)
return|;
block|}
block|}
end_function
begin_function
DECL|function|easingcurve_data
name|void
name|tst_QPropertyAnimation
operator|::
name|easingcurve_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"currentTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedvalue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"interpolation1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"interpolation2"
argument_list|)
operator|<<
literal|1000
operator|<<
literal|1000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"extrapolationbelow"
argument_list|)
operator|<<
literal|250
operator|<<
operator|-
literal|99
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"extrapolationabove"
argument_list|)
operator|<<
literal|750
operator|<<
literal|1099
expr_stmt|;
block|}
end_function
begin_function
DECL|function|easingcurve
name|void
name|tst_QPropertyAnimation
operator|::
name|easingcurve
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|currentTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedvalue
argument_list|)
expr_stmt|;
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|pAnimation
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|pAnimation
operator|.
name|setStartValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|pAnimation
operator|.
name|setEndValue
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|pAnimation
operator|.
name|setDuration
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// this easingcurve assumes that we extrapolate before startValue and after endValue
name|QEasingCurve
name|easingCurve
decl_stmt|;
name|easingCurve
operator|.
name|setCustomType
argument_list|(
name|easeInOutBack
argument_list|)
expr_stmt|;
name|pAnimation
operator|.
name|setEasingCurve
argument_list|(
name|easingCurve
argument_list|)
expr_stmt|;
name|pAnimation
operator|.
name|start
argument_list|()
expr_stmt|;
name|pAnimation
operator|.
name|pause
argument_list|()
expr_stmt|;
name|pAnimation
operator|.
name|setCurrentTime
argument_list|(
name|currentTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|expectedvalue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|startWithoutStartValue
name|void
name|tst_QPropertyAnimation
operator|::
name|startWithoutStartValue
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|int
name|current
init|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
decl_stmt|;
comment|//it is somewhere in the animation
name|QVERIFY
argument_list|(
name|current
operator|>
literal|42
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|current
operator|<
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QVariantAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|current
operator|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|current
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|current
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|110
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|current
operator|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
expr_stmt|;
comment|// the default start value will reevaluate the current property
comment|// and set it to the end value of the last iteration
name|QCOMPARE
argument_list|(
name|current
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|current
operator|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
expr_stmt|;
comment|//it is somewhere in the animation
name|QVERIFY
argument_list|(
name|current
operator|>=
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|current
operator|<=
literal|110
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|startBackwardWithoutEndValue
name|void
name|tst_QPropertyAnimation
operator|::
name|startBackwardWithoutEndValue
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDirection
argument_list|(
name|QAbstractAnimation
operator|::
name|Backward
argument_list|)
expr_stmt|;
comment|//we start without an end value
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
comment|//the initial value
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|int
name|current
init|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
decl_stmt|;
comment|//it is somewhere in the animation
name|QVERIFY
argument_list|(
name|current
operator|>
literal|42
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|current
operator|<
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QVariantAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|current
operator|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|current
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|current
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
literal|110
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|current
operator|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
expr_stmt|;
comment|// the default start value will reevaluate the current property
comment|// and set it to the end value of the last iteration
name|QCOMPARE
argument_list|(
name|current
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|current
operator|=
name|anim
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
expr_stmt|;
comment|//it is somewhere in the animation
name|QVERIFY
argument_list|(
name|current
operator|>=
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|current
operator|<=
literal|110
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|playForwardBackward
name|void
name|tst_QPropertyAnimation
operator|::
name|playForwardBackward
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|currentTime
argument_list|()
argument_list|,
name|anim
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
comment|//the animation is at the end
name|anim
operator|.
name|setDirection
argument_list|(
name|QVariantAnimation
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//the direction is backward
comment|//restarting should jump to the end
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|currentTime
argument_list|()
argument_list|,
name|anim
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_struct
DECL|struct|Number
struct|struct
name|Number
block|{
DECL|function|Number
name|Number
parameter_list|()
block|{}
DECL|function|Number
name|Number
parameter_list|(
name|int
name|n
parameter_list|)
member_init_list|:
name|n
argument_list|(
name|n
argument_list|)
block|{}
DECL|function|Number
name|Number
parameter_list|(
specifier|const
name|Number
modifier|&
name|other
parameter_list|)
member_init_list|:
name|n
argument_list|(
name|other
operator|.
name|n
argument_list|)
block|{}
DECL|function|operator =
name|Number
modifier|&
name|operator
name|=
parameter_list|(
specifier|const
name|Number
modifier|&
name|other
parameter_list|)
block|{
name|n
operator|=
name|other
operator|.
name|n
expr_stmt|;
return|return
operator|*
name|this
return|;
block|}
DECL|function|operator ==
name|bool
name|operator
name|==
parameter_list|(
specifier|const
name|Number
modifier|&
name|other
parameter_list|)
specifier|const
block|{
return|return
name|n
operator|==
name|other
operator|.
name|n
return|;
block|}
DECL|member|n
name|int
name|n
decl_stmt|;
block|}
struct|;
end_struct
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Number
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QAbstractAnimation::State
argument_list|)
end_macro
begin_function
DECL|function|numberInterpolator
name|QVariant
name|numberInterpolator
parameter_list|(
specifier|const
name|Number
modifier|&
name|f
parameter_list|,
specifier|const
name|Number
modifier|&
name|t
parameter_list|,
name|qreal
name|progress
parameter_list|)
block|{
return|return
name|QVariant
operator|::
name|fromValue
argument_list|<
name|Number
argument_list|>
argument_list|(
name|Number
argument_list|(
name|f
operator|.
name|n
operator|+
operator|(
name|t
operator|.
name|n
operator|-
name|f
operator|.
name|n
operator|)
operator|*
name|progress
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|xaxisQPointInterpolator
name|QVariant
name|xaxisQPointInterpolator
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|f
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|t
parameter_list|,
name|qreal
name|progress
parameter_list|)
block|{
return|return
name|QPointF
argument_list|(
name|f
operator|.
name|x
argument_list|()
operator|+
operator|(
name|t
operator|.
name|x
argument_list|()
operator|-
name|f
operator|.
name|x
argument_list|()
operator|)
operator|*
name|progress
argument_list|,
name|f
operator|.
name|y
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|interpolated
name|void
name|tst_QPropertyAnimation
operator|::
name|interpolated
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"point"
argument_list|,
name|QPointF
argument_list|()
argument_list|)
expr_stmt|;
comment|//this will avoid warnings
name|o
operator|.
name|setProperty
argument_list|(
literal|"number"
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|<
name|Number
argument_list|>
argument_list|(
name|Number
argument_list|(
literal|42
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|Number
argument_list|>
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
argument_list|)
argument_list|,
name|Number
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|qRegisterAnimationInterpolator
argument_list|<
name|Number
argument_list|>
argument_list|(
name|numberInterpolator
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"number"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QVariant
operator|::
name|fromValue
argument_list|<
name|Number
argument_list|>
argument_list|(
name|Number
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|QVariant
operator|::
name|fromValue
argument_list|<
name|Number
argument_list|>
argument_list|(
name|Number
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|anim
operator|.
name|pause
argument_list|()
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|Number
name|t
argument_list|(
name|qvariant_cast
argument_list|<
name|Number
argument_list|>
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|t
argument_list|,
name|Number
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|Number
argument_list|>
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
argument_list|)
argument_list|,
name|Number
argument_list|(
literal|50
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|qRegisterAnimationInterpolator
argument_list|<
name|QPointF
argument_list|>
argument_list|(
name|xaxisQPointInterpolator
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"point"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|anim
operator|.
name|pause
argument_list|()
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"point"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"point"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// unregister it and see if we get back the default behaviour
name|qRegisterAnimationInterpolator
argument_list|<
name|QPointF
argument_list|>
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"point"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|anim
operator|.
name|pause
argument_list|()
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"point"
argument_list|)
operator|.
name|toPointF
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"point"
argument_list|)
operator|.
name|toPointF
argument_list|()
argument_list|,
name|QPointF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Interpolate a qreal property with a int interpolator
name|AnimationObject
name|o1
decl_stmt|;
name|o1
operator|.
name|setRealValue
argument_list|(
literal|42.42
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o1
argument_list|,
literal|"realValue"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o1
operator|.
name|realValue
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o1
operator|.
name|realValue
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QVariant
argument_list|)
end_macro
begin_function
DECL|function|setStartEndValues_data
name|void
name|tst_QPropertyAnimation
operator|::
name|setStartEndValues_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"propertyName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QVariant
argument_list|>
argument_list|(
literal|"initialValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QVariant
argument_list|>
argument_list|(
literal|"startValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QVariant
argument_list|>
argument_list|(
literal|"endValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dynamic property"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ole"
argument_list|)
operator|<<
name|QVariant
argument_list|(
literal|42
argument_list|)
operator|<<
name|QVariant
argument_list|(
literal|0
argument_list|)
operator|<<
name|QVariant
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"real property, with unmatching types"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"x"
argument_list|)
operator|<<
name|QVariant
argument_list|(
literal|42.
argument_list|)
operator|<<
name|QVariant
argument_list|(
literal|0
argument_list|)
operator|<<
name|QVariant
argument_list|(
literal|10.
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setStartEndValues
name|void
name|tst_QPropertyAnimation
operator|::
name|setStartEndValues
parameter_list|()
block|{
name|MyObject
name|object
decl_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|propertyName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QVariant
argument_list|,
name|initialValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QVariant
argument_list|,
name|startValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QVariant
argument_list|,
name|endValue
argument_list|)
expr_stmt|;
comment|//this tests the start value, end value and default start value
name|object
operator|.
name|setProperty
argument_list|(
name|propertyName
argument_list|,
name|initialValue
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|object
argument_list|,
name|propertyName
argument_list|)
decl_stmt|;
name|QVariantAnimation
operator|::
name|KeyValues
name|values
decl_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|keyValues
argument_list|()
argument_list|,
name|values
argument_list|)
expr_stmt|;
comment|//let's add a start value
name|anim
operator|.
name|setStartValue
argument_list|(
name|startValue
argument_list|)
expr_stmt|;
name|values
operator|<<
name|QVariantAnimation
operator|::
name|KeyValue
argument_list|(
literal|0
argument_list|,
name|startValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|keyValues
argument_list|()
argument_list|,
name|values
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|endValue
argument_list|)
expr_stmt|;
name|values
operator|<<
name|QVariantAnimation
operator|::
name|KeyValue
argument_list|(
literal|1
argument_list|,
name|endValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|keyValues
argument_list|()
argument_list|,
name|values
argument_list|)
expr_stmt|;
comment|//now we can play with objects
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
name|initialValue
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
operator|.
name|startValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
argument_list|,
name|anim
operator|.
name|startValue
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|startValue
operator|.
name|toDouble
argument_list|()
operator|+
name|endValue
operator|.
name|toDouble
argument_list|()
operator|)
operator|/
literal|2
argument_list|)
expr_stmt|;
comment|//just in the middle of the animation
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
comment|//we go to the end of the animation
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
comment|//it should have stopped
name|QVERIFY
argument_list|(
name|anim
operator|.
name|endValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
argument_list|,
name|anim
operator|.
name|endValue
argument_list|()
argument_list|)
expr_stmt|;
comment|//end of the animations
comment|//now we remove the explicit start value and test the implicit one
name|anim
operator|.
name|stop
argument_list|()
expr_stmt|;
name|object
operator|.
name|setProperty
argument_list|(
name|propertyName
argument_list|,
name|initialValue
argument_list|)
expr_stmt|;
comment|//let's reset the start value
name|values
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|keyValues
argument_list|()
argument_list|,
name|values
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|anim
operator|.
name|startValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
argument_list|,
name|initialValue
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|initialValue
operator|.
name|toDouble
argument_list|()
operator|+
name|endValue
operator|.
name|toDouble
argument_list|()
operator|)
operator|/
literal|2
argument_list|)
expr_stmt|;
comment|//just in the middle of the animation
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
comment|//we go to the end of the animation
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
comment|//it should have stopped
name|QVERIFY
argument_list|(
name|anim
operator|.
name|endValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
argument_list|,
name|anim
operator|.
name|endValue
argument_list|()
argument_list|)
expr_stmt|;
comment|//end of the animations
comment|//now we set back the startValue
name|anim
operator|.
name|setStartValue
argument_list|(
name|startValue
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|anim
operator|.
name|startValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
name|propertyName
argument_list|)
argument_list|,
name|startValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|zeroDurationStart
name|void
name|tst_QPropertyAnimation
operator|::
name|zeroDurationStart
parameter_list|()
block|{
name|DummyPropertyAnimation
name|anim
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
comment|//the animation stops immediately
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|//let's check the first state change
specifier|const
name|QVariantList
name|firstChange
init|=
name|spy
operator|.
name|first
argument_list|()
decl_stmt|;
comment|//old state
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|firstChange
operator|.
name|last
argument_list|()
argument_list|)
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
comment|//new state
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|firstChange
operator|.
name|first
argument_list|()
argument_list|)
argument_list|,
name|QAbstractAnimation
operator|::
name|Running
argument_list|)
expr_stmt|;
comment|//let's check the first state change
specifier|const
name|QVariantList
name|secondChange
init|=
name|spy
operator|.
name|last
argument_list|()
decl_stmt|;
comment|//old state
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|secondChange
operator|.
name|last
argument_list|()
argument_list|)
argument_list|,
name|QAbstractAnimation
operator|::
name|Running
argument_list|)
expr_stmt|;
comment|//new state
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
name|secondChange
operator|.
name|first
argument_list|()
argument_list|)
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
block|}
end_function
begin_define
DECL|macro|Pause
define|#
directive|define
name|Pause
value|1
end_define
begin_define
DECL|macro|Start
define|#
directive|define
name|Start
value|2
end_define
begin_define
DECL|macro|Resume
define|#
directive|define
name|Resume
value|3
end_define
begin_define
DECL|macro|Stop
define|#
directive|define
name|Stop
value|4
end_define
begin_function
DECL|function|operationsInStates_data
name|void
name|tst_QPropertyAnimation
operator|::
name|operationsInStates_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
literal|"originState"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"operation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedWarning"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QAbstractAnimation
operator|::
name|State
argument_list|>
argument_list|(
literal|"expectedState"
argument_list|)
expr_stmt|;
name|QString
name|pauseWarn
argument_list|(
name|QLatin1String
argument_list|(
literal|"QAbstractAnimation::pause: Cannot pause a stopped animation"
argument_list|)
argument_list|)
decl_stmt|;
name|QString
name|resumeWarn
argument_list|(
name|QLatin1String
argument_list|(
literal|"QAbstractAnimation::resume: Cannot resume an animation that is not paused"
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"S-pause"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
operator|<<
name|Pause
operator|<<
name|pauseWarn
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"S-start"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
operator|<<
name|Start
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Running
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"S-resume"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
operator|<<
name|Resume
operator|<<
name|resumeWarn
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"S-stop"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
operator|<<
name|Stop
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"P-pause"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Paused
operator|<<
name|Pause
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Paused
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"P-start"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Paused
operator|<<
name|Start
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Running
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"P-resume"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Paused
operator|<<
name|Resume
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Running
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"P-stop"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Paused
operator|<<
name|Stop
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"R-pause"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Running
operator|<<
name|Pause
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Paused
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"R-start"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Running
operator|<<
name|Start
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Running
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"R-resume"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Running
operator|<<
name|Resume
operator|<<
name|resumeWarn
operator|<<
name|QAbstractAnimation
operator|::
name|Running
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"R-stop"
argument_list|)
operator|<<
name|QAbstractAnimation
operator|::
name|Running
operator|<<
name|Stop
operator|<<
name|QString
argument_list|()
operator|<<
name|QAbstractAnimation
operator|::
name|Stopped
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operationsInStates
name|void
name|tst_QPropertyAnimation
operator|::
name|operationsInStates
parameter_list|()
block|{
comment|/**  *           | pause()    |start()    |resume()   |stop()  * ----------+------------+-----------+-----------+-------------------+  * Stopped   | Stopped    |Running    |Stopped    |Stopped            |  *          _| qWarning   |restart    |qWarning   |                   |  * Paused    | Paused     |Running    |Running    |Stopped            |  *          _|            |           |           |                   |  * Running   | Paused     |Running    |Running    |Stopped            |  *           |            |restart    |qWarning   |                   |  * ----------+------------+-----------+-----------+-------------------+ **/
name|QFETCH
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|originState
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|operation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedWarning
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|expectedState
argument_list|)
expr_stmt|;
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|.
name|stop
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|originState
condition|)
block|{
case|case
name|QAbstractAnimation
operator|::
name|Stopped
case|:
break|break;
case|case
name|QAbstractAnimation
operator|::
name|Paused
case|:
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|anim
operator|.
name|pause
argument_list|()
expr_stmt|;
break|break;
case|case
name|QAbstractAnimation
operator|::
name|Running
case|:
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|expectedWarning
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|qPrintable
argument_list|(
name|expectedWarning
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|originState
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|operation
condition|)
block|{
case|case
name|Pause
case|:
name|anim
operator|.
name|pause
argument_list|()
expr_stmt|;
break|break;
case|case
name|Start
case|:
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
break|break;
case|case
name|Resume
case|:
name|anim
operator|.
name|resume
argument_list|()
expr_stmt|;
break|break;
case|case
name|Stop
case|:
name|anim
operator|.
name|stop
argument_list|()
expr_stmt|;
break|break;
block|}
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|expectedState
argument_list|)
expr_stmt|;
block|}
end_function
begin_undef
DECL|macro|Pause
undef|#
directive|undef
name|Pause
end_undef
begin_undef
DECL|macro|Start
undef|#
directive|undef
name|Start
end_undef
begin_undef
DECL|macro|Resume
undef|#
directive|undef
name|Resume
end_undef
begin_undef
DECL|macro|Stop
undef|#
directive|undef
name|Stop
end_undef
begin_function
DECL|function|oneKeyValue
name|void
name|tst_QPropertyAnimation
operator|::
name|oneKeyValue
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|animation
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|animation
operator|.
name|setStartValue
argument_list|(
literal|43
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setEndValue
argument_list|(
literal|44
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setDuration
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setCurrentTime
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
comment|// remove the last key value
name|animation
operator|.
name|setKeyValueAt
argument_list|(
literal|1.0
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
comment|// we will neither interpolate, nor update the current value
comment|// since there is only one 1 key value defined
name|animation
operator|.
name|setCurrentTime
argument_list|(
literal|100
argument_list|)
expr_stmt|;
comment|// the animation should not have been modified
name|QVERIFY
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateOnSetKeyValues
name|void
name|tst_QPropertyAnimation
operator|::
name|updateOnSetKeyValues
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|animation
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|animation
operator|.
name|setStartValue
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setEndValue
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setDuration
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setCurrentTime
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|animation
operator|.
name|setKeyValueAt
argument_list|(
literal|0.0
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|o
operator|.
name|setProperty
argument_list|(
literal|"ole"
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|animation2
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|QVariantAnimation
operator|::
name|KeyValues
name|kValues
decl_stmt|;
name|kValues
operator|<<
name|QVariantAnimation
operator|::
name|KeyValue
argument_list|(
literal|0.0
argument_list|,
literal|100
argument_list|)
operator|<<
name|QVariantAnimation
operator|::
name|KeyValue
argument_list|(
literal|1.0
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|animation2
operator|.
name|setKeyValues
argument_list|(
name|kValues
argument_list|)
expr_stmt|;
name|animation2
operator|.
name|setDuration
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|animation2
operator|.
name|setCurrentTime
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation2
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|kValues
operator|.
name|clear
argument_list|()
expr_stmt|;
name|kValues
operator|<<
name|QVariantAnimation
operator|::
name|KeyValue
argument_list|(
literal|0.0
argument_list|,
literal|300
argument_list|)
operator|<<
name|QVariantAnimation
operator|::
name|KeyValue
argument_list|(
literal|1.0
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|animation2
operator|.
name|setKeyValues
argument_list|(
name|kValues
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animation2
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
name|animation
operator|.
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//this class will 'throw' an error in the test lib
end_comment
begin_comment
comment|// if the property ole is set to ErrorValue
end_comment
begin_class
DECL|class|MyErrorObject
class|class
name|MyErrorObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
parameter_list|(
name|int
name|ole
name|READ
name|ole
name|WRITE
name|setOle
parameter_list|)
specifier|public
private|:
DECL|member|ErrorValue
specifier|static
specifier|const
name|int
name|ErrorValue
init|=
literal|10000
decl_stmt|;
DECL|function|MyErrorObject
name|MyErrorObject
parameter_list|()
member_init_list|:
name|m_ole
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|function|ole
name|int
name|ole
parameter_list|()
specifier|const
block|{
return|return
name|m_ole
return|;
block|}
DECL|function|setOle
name|void
name|setOle
parameter_list|(
name|int
name|o
parameter_list|)
block|{
name|QVERIFY
argument_list|(
name|o
operator|!=
name|ErrorValue
argument_list|)
expr_stmt|;
name|m_ole
operator|=
name|o
expr_stmt|;
block|}
private|private:
DECL|member|m_ole
name|int
name|m_ole
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|restart
name|void
name|tst_QPropertyAnimation
operator|::
name|restart
parameter_list|()
block|{
comment|//here we check that be restarting an animation
comment|//it doesn't get an bogus intermediate value (end value)
comment|//because the time is not yet reset to 0
name|MyErrorObject
name|o
decl_stmt|;
name|o
operator|.
name|setOle
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
comment|//we'll check that the animation never gets a wrong value when starting it
comment|//after having changed the end value
name|anim
operator|.
name|setEndValue
argument_list|(
name|MyErrorObject
operator|::
name|ErrorValue
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|valueChanged
name|void
name|tst_QPropertyAnimation
operator|::
name|valueChanged
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|QVariant
argument_list|>
argument_list|(
literal|"QVariant"
argument_list|)
expr_stmt|;
comment|//we check that we receive the valueChanged signal
name|MyErrorObject
name|o
decl_stmt|;
name|o
operator|.
name|setOle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|property
argument_list|(
literal|"ole"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|o
argument_list|,
literal|"ole"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|QVariant
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|currentTime
argument_list|()
argument_list|,
name|anim
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
comment|//let's check that the values go forward
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|//we should have got everything from 0 to 5
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|spy
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|qvariant_cast
argument_list|<
name|QVariant
argument_list|>
argument_list|(
name|spy
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|first
argument_list|()
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//this class will help us make sure that 2 animations started
end_comment
begin_comment
comment|//at the same time also end at the same time
end_comment
begin_class
DECL|class|MySyncObject
class|class
name|MySyncObject
super|:
specifier|public
name|MyErrorObject
block|{
name|Q_OBJECT
public|public:
DECL|function|MySyncObject
name|MySyncObject
parameter_list|()
member_init_list|:
name|anim
argument_list|(
name|this
argument_list|,
literal|"ole"
argument_list|)
block|{
name|anim
operator|.
name|setEndValue
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|checkAnimationFinished
name|void
name|checkAnimationFinished
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ole
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
block|}
public|public:
DECL|member|anim
name|QPropertyAnimation
name|anim
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|twoAnimations
name|void
name|tst_QPropertyAnimation
operator|::
name|twoAnimations
parameter_list|()
block|{
name|MySyncObject
name|o1
decl_stmt|,
name|o2
decl_stmt|;
name|o1
operator|.
name|setOle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|o2
operator|.
name|setOle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//when the animation in o1 is finished
comment|//the animation in o2 should stop around the same time
comment|//We use a queued connection to check just after the tick from the common timer
comment|//the other way is true too
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o1
operator|.
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o2
argument_list|,
name|SLOT
argument_list|(
name|checkAnimationFinished
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o2
operator|.
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o1
argument_list|,
name|SLOT
argument_list|(
name|checkAnimationFinished
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|o1
operator|.
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|o2
operator|.
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|o1
operator|.
name|anim
operator|.
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|o1
operator|.
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o2
operator|.
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o1
operator|.
name|ole
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o2
operator|.
name|ole
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MyComposedAnimation
class|class
name|MyComposedAnimation
super|:
specifier|public
name|QPropertyAnimation
block|{
name|Q_OBJECT
public|public:
DECL|function|MyComposedAnimation
name|MyComposedAnimation
parameter_list|(
name|QObject
modifier|*
name|target
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|propertyName
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|innerPropertyName
parameter_list|)
member_init_list|:
name|QPropertyAnimation
argument_list|(
name|target
argument_list|,
name|propertyName
argument_list|)
block|{
name|innerAnim
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|target
argument_list|,
name|innerPropertyName
argument_list|)
expr_stmt|;
name|this
operator|->
name|setEndValue
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|innerAnim
operator|->
name|setEndValue
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|innerAnim
operator|->
name|setDuration
argument_list|(
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
block|}
DECL|function|start
name|void
name|start
parameter_list|()
block|{
name|QPropertyAnimation
operator|::
name|start
argument_list|()
expr_stmt|;
name|innerAnim
operator|->
name|start
argument_list|()
expr_stmt|;
block|}
DECL|function|updateState
name|void
name|updateState
parameter_list|(
name|QAbstractAnimation
operator|::
name|State
name|newState
parameter_list|,
name|QAbstractAnimation
operator|::
name|State
name|oldState
parameter_list|)
block|{
name|QPropertyAnimation
operator|::
name|updateState
argument_list|(
name|newState
argument_list|,
name|oldState
argument_list|)
expr_stmt|;
if|if
condition|(
name|newState
operator|==
name|QAbstractAnimation
operator|::
name|Stopped
condition|)
operator|delete
name|innerAnim
expr_stmt|;
block|}
public|public:
DECL|member|innerAnim
name|QPropertyAnimation
modifier|*
name|innerAnim
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|deletedInUpdateCurrentTime
name|void
name|tst_QPropertyAnimation
operator|::
name|deletedInUpdateCurrentTime
parameter_list|()
block|{
comment|// this test case reproduces an animation being deleted in the updateCurrentTime of
comment|// another animation(was causing segfault).
comment|// the deleted animation must have been started after the animation that is deleting.
name|AnimationObject
name|o
decl_stmt|;
name|o
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|o
operator|.
name|setRealValue
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|MyComposedAnimation
name|composedAnimation
argument_list|(
operator|&
name|o
argument_list|,
literal|"value"
argument_list|,
literal|"realValue"
argument_list|)
decl_stmt|;
name|composedAnimation
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|composedAnimation
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|composedAnimation
operator|.
name|duration
argument_list|()
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|composedAnimation
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|value
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|totalDuration
name|void
name|tst_QPropertyAnimation
operator|::
name|totalDuration
parameter_list|()
block|{
name|QPropertyAnimation
name|anim
decl_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|totalDuration
argument_list|()
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setLoopCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|totalDuration
argument_list|()
argument_list|,
literal|2
operator|*
literal|250
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setLoopCount
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|totalDuration
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|totalDuration
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|zeroLoopCount
name|void
name|tst_QPropertyAnimation
operator|::
name|zeroLoopCount
parameter_list|()
block|{
name|DummyPropertyAnimation
modifier|*
name|anim
decl_stmt|;
name|anim
operator|=
operator|new
name|DummyPropertyAnimation
expr_stmt|;
name|anim
operator|->
name|setStartValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setDuration
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|anim
operator|->
name|setLoopCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QSignalSpy
name|runningSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|runningSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|anim
operator|->
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|state
argument_list|()
argument_list|,
name|QAnimationGroup
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|currentValue
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|runningSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|RecursiveObject
class|class
name|RecursiveObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
name|qreal
name|x
name|READ
name|x
name|WRITE
name|setX
argument_list|)
name|Q_PROPERTY
argument_list|(
name|qreal
name|y
name|READ
name|y
name|WRITE
name|setY
argument_list|)
decl|public
range|:
DECL|function|RecursiveObject
name|RecursiveObject
argument_list|()
operator|:
name|m_x
argument_list|(
literal|0
argument_list|)
decl_stmt|,
name|m_y
argument_list|(
literal|0
argument_list|)
argument_list|{
name|animation
operator|.
name|setTargetObject
argument_list|(
name|this
argument_list|)
argument_list|;
name|animation
operator|.
name|setPropertyName
argument_list|(
literal|"y"
argument_list|)
argument_list|;
name|animation
operator|.
name|setDuration
argument_list|(
literal|30
argument_list|)
argument_list|;     }
DECL|function|x
name|qreal
name|x
argument_list|()
decl|const
argument_list|{ return
name|m_x
argument_list|; }
DECL|function|setX
name|void
name|setX
argument_list|(
name|qreal
name|x
argument_list|)
argument_list|{
name|m_x
operator|=
name|x
argument_list|;
name|animation
operator|.
name|setEndValue
argument_list|(
name|x
argument_list|)
argument_list|;
name|animation
operator|.
name|start
argument_list|()
argument_list|;     }
DECL|function|y
name|qreal
name|y
argument_list|()
decl|const
argument_list|{ return
name|m_y
argument_list|; }
DECL|function|setY
name|void
name|setY
argument_list|(
name|qreal
name|y
argument_list|)
argument_list|{
name|m_y
operator|=
name|y
argument_list|; }
DECL|member|m_x
name|qreal
name|m_x
decl_stmt|;
DECL|member|m_y
name|qreal
name|m_y
decl_stmt|;
DECL|member|animation
name|QPropertyAnimation
name|animation
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|recursiveAnimations
name|void
name|tst_QPropertyAnimation
operator|::
name|recursiveAnimations
parameter_list|()
block|{
name|RecursiveObject
name|o
decl_stmt|;
name|QPropertyAnimation
name|anim
decl_stmt|;
name|anim
operator|.
name|setTargetObject
argument_list|(
operator|&
name|o
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setPropertyName
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|4000
argument_list|)
expr_stmt|;
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|anim
operator|.
name|duration
argument_list|()
operator|+
name|o
operator|.
name|animation
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|anim
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|o
operator|.
name|animation
operator|.
name|state
argument_list|()
argument_list|,
name|QAbstractAnimation
operator|::
name|Stopped
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|y
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|4000
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QPropertyAnimation
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qpropertyanimation.moc"
end_include
end_unit
