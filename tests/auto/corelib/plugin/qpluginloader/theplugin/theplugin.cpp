begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QString>
end_include
begin_include
include|#
directive|include
file|"theplugin.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qplugin.h>
end_include
begin_function
DECL|function|pluginName
name|QString
name|ThePlugin
operator|::
name|pluginName
parameter_list|()
specifier|const
block|{
return|return
name|QLatin1String
argument_list|(
literal|"Plugin ok"
argument_list|)
return|;
block|}
end_function
begin_decl_stmt
DECL|variable|pluginVariable
specifier|static
name|int
name|pluginVariable
init|=
literal|0xc0ffee
decl_stmt|;
end_decl_stmt
begin_extern
DECL|function|pointerAddress
extern|extern
literal|"C"
name|Q_DECL_EXPORT
name|int
modifier|*
name|pointerAddress
parameter_list|()
block|{
return|return
operator|&
name|pluginVariable
return|;
block|}
end_extern
end_unit
