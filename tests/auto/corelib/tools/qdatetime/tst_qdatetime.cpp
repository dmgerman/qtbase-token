begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|Q_OS_WINCE
end_ifndef
begin_include
include|#
directive|include
file|<time.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qdatetime.h>
end_include
begin_include
include|#
directive|include
file|<private/qdatetime_p.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_WIN
end_ifdef
begin_include
include|#
directive|include
file|<windows.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|tst_QDateTime
class|class
name|tst_QDateTime
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QDateTime
parameter_list|()
constructor_decl|;
specifier|static
name|QString
name|str
parameter_list|(
name|int
name|y
parameter_list|,
name|int
name|month
parameter_list|,
name|int
name|d
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|min
parameter_list|,
name|int
name|s
parameter_list|)
function_decl|;
specifier|static
name|QDateTime
name|dt
parameter_list|(
specifier|const
name|QString
modifier|&
name|str
parameter_list|)
function_decl|;
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|ctor
parameter_list|()
function_decl|;
name|void
name|operator_eq
parameter_list|()
function_decl|;
name|void
name|isNull
parameter_list|()
function_decl|;
name|void
name|isValid
parameter_list|()
function_decl|;
name|void
name|date
parameter_list|()
function_decl|;
name|void
name|time
parameter_list|()
function_decl|;
name|void
name|timeSpec
parameter_list|()
function_decl|;
name|void
name|toTime_t_data
parameter_list|()
function_decl|;
name|void
name|toTime_t
parameter_list|()
function_decl|;
name|void
name|daylightSavingsTimeChange
parameter_list|()
function_decl|;
name|void
name|setDate
parameter_list|()
function_decl|;
name|void
name|setTime
parameter_list|()
function_decl|;
name|void
name|setTimeSpec
parameter_list|()
function_decl|;
name|void
name|setTime_t
parameter_list|()
function_decl|;
name|void
name|setMSecsSinceEpoch_data
parameter_list|()
function_decl|;
name|void
name|setMSecsSinceEpoch
parameter_list|()
function_decl|;
name|void
name|toString_isoDate_data
parameter_list|()
function_decl|;
name|void
name|toString_isoDate
parameter_list|()
function_decl|;
name|void
name|toString_enumformat
parameter_list|()
function_decl|;
name|void
name|toString_strformat_data
parameter_list|()
function_decl|;
name|void
name|toString_strformat
parameter_list|()
function_decl|;
name|void
name|addDays
parameter_list|()
function_decl|;
name|void
name|addMonths
parameter_list|()
function_decl|;
name|void
name|addMonths_data
parameter_list|()
function_decl|;
name|void
name|addYears
parameter_list|()
function_decl|;
name|void
name|addYears_data
parameter_list|()
function_decl|;
name|void
name|addSecs_data
parameter_list|()
function_decl|;
name|void
name|addSecs
parameter_list|()
function_decl|;
name|void
name|addMSecs_data
parameter_list|()
function_decl|;
name|void
name|addMSecs
parameter_list|()
function_decl|;
name|void
name|toTimeSpec_data
parameter_list|()
function_decl|;
name|void
name|toTimeSpec
parameter_list|()
function_decl|;
name|void
name|toLocalTime_data
parameter_list|()
function_decl|;
name|void
name|toLocalTime
parameter_list|()
function_decl|;
name|void
name|toUTC_data
parameter_list|()
function_decl|;
name|void
name|toUTC
parameter_list|()
function_decl|;
name|void
name|daysTo
parameter_list|()
function_decl|;
name|void
name|secsTo_data
parameter_list|()
function_decl|;
name|void
name|secsTo
parameter_list|()
function_decl|;
name|void
name|msecsTo_data
parameter_list|()
function_decl|;
name|void
name|msecsTo
parameter_list|()
function_decl|;
name|void
name|operator_eqeq_data
parameter_list|()
function_decl|;
name|void
name|operator_eqeq
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|Q_OS_WINCE
name|void
name|operator_insert_extract_data
parameter_list|()
function_decl|;
name|void
name|operator_insert_extract
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|currentDateTime
parameter_list|()
function_decl|;
name|void
name|currentDateTimeUtc
parameter_list|()
function_decl|;
name|void
name|currentDateTimeUtc2
parameter_list|()
function_decl|;
name|void
name|fromStringDateFormat_data
parameter_list|()
function_decl|;
name|void
name|fromStringDateFormat
parameter_list|()
function_decl|;
name|void
name|fromStringStringFormat_data
parameter_list|()
function_decl|;
name|void
name|fromStringStringFormat
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
name|void
name|fromString_LOCALE_ILDATE
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|fromStringToStringLocale_data
parameter_list|()
function_decl|;
name|void
name|fromStringToStringLocale
parameter_list|()
function_decl|;
name|void
name|utcOffset
parameter_list|()
function_decl|;
name|void
name|setUtcOffset
parameter_list|()
function_decl|;
name|void
name|getDate
parameter_list|()
function_decl|;
name|void
name|fewDigitsInYear
parameter_list|()
specifier|const
function_decl|;
name|void
name|printNegativeYear
parameter_list|()
specifier|const
function_decl|;
name|void
name|roundtripGermanLocale
parameter_list|()
specifier|const
function_decl|;
name|void
name|utcOffsetLessThan
parameter_list|()
specifier|const
function_decl|;
private|private:
DECL|member|europeanTimeZone
name|bool
name|europeanTimeZone
decl_stmt|;
DECL|function|defDate
name|QDate
name|defDate
parameter_list|()
specifier|const
block|{
return|return
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
return|;
block|}
DECL|function|defTime
name|QTime
name|defTime
parameter_list|()
specifier|const
block|{
return|return
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
DECL|function|defDateTime
name|QDateTime
name|defDateTime
parameter_list|()
specifier|const
block|{
return|return
name|QDateTime
argument_list|(
name|defDate
argument_list|()
argument_list|,
name|defTime
argument_list|()
argument_list|)
return|;
block|}
DECL|function|invalidDateTime
name|QDateTime
name|invalidDateTime
parameter_list|()
specifier|const
block|{
return|return
name|QDateTime
argument_list|(
name|invalidDate
argument_list|()
argument_list|,
name|invalidTime
argument_list|()
argument_list|)
return|;
block|}
DECL|function|invalidDate
name|QDate
name|invalidDate
parameter_list|()
specifier|const
block|{
return|return
name|QDate
argument_list|()
return|;
block|}
DECL|function|invalidTime
name|QTime
name|invalidTime
parameter_list|()
specifier|const
block|{
return|return
name|QTime
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QDateTime
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QDate
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QTime
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Qt::TimeSpec
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Qt::DateFormat
argument_list|)
end_macro
begin_constructor
DECL|function|tst_QDateTime
name|tst_QDateTime
operator|::
name|tst_QDateTime
parameter_list|()
block|{
name|uint
name|x1
init|=
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1990
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
operator|.
name|toTime_t
argument_list|()
decl_stmt|;
name|uint
name|x2
init|=
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1990
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
operator|.
name|toTime_t
argument_list|()
decl_stmt|;
name|europeanTimeZone
operator|=
operator|(
name|x1
operator|==
literal|631148400
operator|&&
name|x2
operator|==
literal|644191200
operator|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|init
name|void
name|tst_QDateTime
operator|::
name|init
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|SetUserDefaultLCID
argument_list|(
name|MAKELCID
argument_list|(
name|MAKELANGID
argument_list|(
name|LANG_ENGLISH
argument_list|,
name|SUBLANG_ENGLISH_US
argument_list|)
argument_list|,
name|SORT_DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
elif|#
directive|elif
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
name|SetThreadLocale
argument_list|(
name|MAKELCID
argument_list|(
name|MAKELANGID
argument_list|(
name|LANG_ENGLISH
argument_list|,
name|SUBLANG_ENGLISH_US
argument_list|)
argument_list|,
name|SORT_DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|str
name|QString
name|tst_QDateTime
operator|::
name|str
parameter_list|(
name|int
name|y
parameter_list|,
name|int
name|month
parameter_list|,
name|int
name|d
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|min
parameter_list|,
name|int
name|s
parameter_list|)
block|{
return|return
name|QDateTime
argument_list|(
name|QDate
argument_list|(
name|y
argument_list|,
name|month
argument_list|,
name|d
argument_list|)
argument_list|,
name|QTime
argument_list|(
name|h
argument_list|,
name|min
argument_list|,
name|s
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|ISODate
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|dt
name|QDateTime
name|tst_QDateTime
operator|::
name|dt
parameter_list|(
specifier|const
name|QString
modifier|&
name|str
parameter_list|)
block|{
if|if
condition|(
name|str
operator|==
literal|"INVALID"
condition|)
block|{
return|return
name|QDateTime
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|QDateTime
operator|::
name|fromString
argument_list|(
name|str
argument_list|,
name|Qt
operator|::
name|ISODate
argument_list|)
return|;
block|}
block|}
end_function
begin_function
DECL|function|ctor
name|void
name|tst_QDateTime
operator|::
name|ctor
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
decl_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|QDateTime
name|dt3
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|==
name|dt2
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QVERIFY
argument_list|(
name|dt1
operator|!=
name|dt3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|<
name|dt3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|addSecs
argument_list|(
literal|3600
argument_list|)
operator|.
name|toUTC
argument_list|()
operator|==
name|dt3
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|operator_eq
name|void
name|tst_QDateTime
operator|::
name|operator_eq
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|24
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|3
argument_list|,
literal|11
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt2
operator|=
name|dt1
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|==
name|dt2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isNull
name|void
name|tst_QDateTime
operator|::
name|isNull
parameter_list|()
block|{
name|QDateTime
name|dt1
decl_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// maybe it should return false?
name|dt1
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isValid
name|void
name|tst_QDateTime
operator|::
name|isValid
parameter_list|()
block|{
name|QDateTime
name|dt1
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|date
name|void
name|tst_QDateTime
operator|::
name|date
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|24
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QDateTime
name|dt3
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|24
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|QDateTime
name|dt4
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|time
name|void
name|tst_QDateTime
operator|::
name|time
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|24
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QDateTime
name|dt3
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|24
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QDateTime
name|dt4
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|timeSpec
name|void
name|tst_QDateTime
operator|::
name|timeSpec
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|24
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addDays
argument_list|(
literal|0
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addMonths
argument_list|(
literal|0
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addMonths
argument_list|(
literal|6
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addYears
argument_list|(
literal|0
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addSecs
argument_list|(
literal|0
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addSecs
argument_list|(
literal|86400
operator|*
literal|185
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|24
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QDateTime
name|dt3
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt4
init|=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setDate
name|void
name|tst_QDateTime
operator|::
name|setDate
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt1
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|dt2
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QDateTime
name|dt3
argument_list|(
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt3
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt4
argument_list|(
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|dt4
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QDateTime
name|dt5
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt5
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt5
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt5
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt5
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt6
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|dt6
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt6
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt6
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt6
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTime
name|void
name|tst_QDateTime
operator|::
name|setTime
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt1
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|dt2
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QDateTime
name|dt3
argument_list|(
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt3
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt4
argument_list|(
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|dt4
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|4004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt4
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QDateTime
name|dt5
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt5
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt5
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt5
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt5
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QDateTime
name|dt6
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|dt6
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt6
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt6
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|11
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt6
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTimeSpec
name|void
name|tst_QDateTime
operator|::
name|setTimeSpec
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt1
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|45
argument_list|,
literal|57
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTime_t
name|void
name|tst_QDateTime
operator|::
name|setTime_t
parameter_list|()
block|{
name|QDateTime
name|dt1
decl_stmt|;
name|dt1
operator|.
name|setTime_t
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|toUTC
argument_list|()
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime_t
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setTime_t
argument_list|(
literal|123456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|10
argument_list|,
literal|17
argument_list|,
literal|36
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QDateTime
name|dt2
decl_stmt|;
name|dt2
operator|.
name|setTime_t
argument_list|(
literal|123456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|11
argument_list|,
literal|17
argument_list|,
literal|36
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dt1
operator|.
name|setTime_t
argument_list|(
call|(
name|uint
call|)
argument_list|(
name|quint32
argument_list|)
operator|-
literal|123456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2106
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|20
argument_list|,
literal|10
argument_list|,
literal|40
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QDateTime
name|dt2
decl_stmt|;
name|dt2
operator|.
name|setTime_t
argument_list|(
call|(
name|uint
call|)
argument_list|(
name|quint32
argument_list|)
operator|-
literal|123456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2106
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|21
argument_list|,
literal|10
argument_list|,
literal|40
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dt1
operator|.
name|setTime_t
argument_list|(
literal|1214567890
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2008
argument_list|,
literal|6
argument_list|,
literal|27
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|11
argument_list|,
literal|58
argument_list|,
literal|10
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QDateTime
name|dt2
decl_stmt|;
name|dt2
operator|.
name|setTime_t
argument_list|(
literal|1214567890
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2008
argument_list|,
literal|6
argument_list|,
literal|27
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|58
argument_list|,
literal|10
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dt1
operator|.
name|setTime_t
argument_list|(
literal|0x7FFFFFFF
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2038
argument_list|,
literal|1
argument_list|,
literal|19
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|3
argument_list|,
literal|14
argument_list|,
literal|7
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QDateTime
name|dt2
decl_stmt|;
name|dt2
operator|.
name|setTime_t
argument_list|(
literal|0x7FFFFFFF
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2038
argument_list|,
literal|1
argument_list|,
literal|19
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|4
argument_list|,
literal|14
argument_list|,
literal|7
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setMSecsSinceEpoch_data
name|void
name|tst_QDateTime
operator|::
name|setMSecsSinceEpoch_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|qint64
argument_list|>
argument_list|(
literal|"msecs"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"utc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"european"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"zero"
argument_list|)
operator|<<
name|Q_INT64_C
argument_list|(
literal|0
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-1"
argument_list|)
operator|<<
name|Q_INT64_C
argument_list|(
operator|-
literal|1
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1969
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"123456789"
argument_list|)
operator|<<
name|Q_INT64_C
argument_list|(
literal|123456789
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|10
argument_list|,
literal|17
argument_list|,
literal|36
argument_list|,
literal|789
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|11
argument_list|,
literal|17
argument_list|,
literal|36
argument_list|,
literal|789
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-123456789"
argument_list|)
operator|<<
name|Q_INT64_C
argument_list|(
operator|-
literal|123456789
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1969
argument_list|,
literal|12
argument_list|,
literal|30
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|42
argument_list|,
literal|23
argument_list|,
literal|211
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1969
argument_list|,
literal|12
argument_list|,
literal|30
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|42
argument_list|,
literal|23
argument_list|,
literal|211
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-time_t"
argument_list|)
operator|<<
operator|(
name|Q_INT64_C
argument_list|(
literal|1000
argument_list|)
operator|<<
literal|32
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2106
argument_list|,
literal|2
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|6
argument_list|,
literal|28
argument_list|,
literal|16
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2106
argument_list|,
literal|2
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|7
argument_list|,
literal|28
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"very-large"
argument_list|)
operator|<<
operator|(
name|Q_INT64_C
argument_list|(
literal|123456
argument_list|)
operator|<<
literal|32
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|18772
argument_list|,
literal|8
argument_list|,
literal|15
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|8
argument_list|,
literal|14
argument_list|,
literal|976
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|18772
argument_list|,
literal|8
argument_list|,
literal|15
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|3
argument_list|,
literal|8
argument_list|,
literal|14
argument_list|,
literal|976
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"min_date"
argument_list|)
comment|// julian day 0 is an invalid date for QDate
operator|<<
name|Q_INT64_C
argument_list|(
operator|-
literal|210866716800000
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"max_date"
argument_list|)
comment|// technically jd is unsigned, but fromJulianDay takes int
operator|<<
name|Q_INT64_C
argument_list|(
literal|185331720376799999
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|0x7fffffff
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|21
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|0x7fffffff
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setMSecsSinceEpoch
name|void
name|tst_QDateTime
operator|::
name|setMSecsSinceEpoch
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|qint64
argument_list|,
name|msecs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|european
argument_list|)
expr_stmt|;
name|QDateTime
name|dt
decl_stmt|;
name|dt
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setMSecsSinceEpoch
argument_list|(
name|msecs
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
argument_list|,
name|utc
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|toLocalTime
argument_list|()
argument_list|,
name|european
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|toMSecsSinceEpoch
argument_list|()
argument_list|,
name|msecs
argument_list|)
expr_stmt|;
if|if
condition|(
name|quint64
argument_list|(
name|msecs
operator|/
literal|1000
argument_list|)
operator|<
literal|0xFFFFFFFF
condition|)
block|{
name|QCOMPARE
argument_list|(
name|qint64
argument_list|(
name|dt
operator|.
name|toTime_t
argument_list|()
argument_list|)
argument_list|,
name|msecs
operator|/
literal|1000
argument_list|)
expr_stmt|;
block|}
name|QDateTime
name|reference
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
argument_list|,
name|reference
operator|.
name|addMSecs
argument_list|(
name|msecs
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_isoDate_data
name|void
name|tst_QDateTime
operator|::
name|toString_isoDate_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"formatted"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"localtime"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1978
argument_list|,
literal|11
argument_list|,
literal|9
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|28
argument_list|,
literal|34
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1978-11-09T13:28:34"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"UTC"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1978
argument_list|,
literal|11
argument_list|,
literal|9
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|28
argument_list|,
literal|34
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1978-11-09T13:28:34Z"
argument_list|)
expr_stmt|;
name|QDateTime
name|dt
argument_list|(
name|QDate
argument_list|(
literal|1978
argument_list|,
literal|11
argument_list|,
literal|9
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|28
argument_list|,
literal|34
argument_list|)
argument_list|)
decl_stmt|;
name|dt
operator|.
name|setUtcOffset
argument_list|(
literal|19800
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"positive OffsetFromUTC"
argument_list|)
operator|<<
name|dt
operator|<<
name|QString
argument_list|(
literal|"1978-11-09T13:28:34+05:30"
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setUtcOffset
argument_list|(
operator|-
literal|7200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"negative OffsetFromUTC"
argument_list|)
operator|<<
name|dt
operator|<<
name|QString
argument_list|(
literal|"1978-11-09T13:28:34-02:00"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_isoDate
name|void
name|tst_QDateTime
operator|::
name|toString_isoDate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|formatted
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|ISODate
argument_list|)
argument_list|,
name|formatted
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_enumformat
name|void
name|tst_QDateTime
operator|::
name|toString_enumformat
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|1995
argument_list|,
literal|5
argument_list|,
literal|20
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
decl_stmt|;
name|QString
name|str1
init|=
name|dt1
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|TextDate
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|str1
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// It's locale dependent everywhere
name|QString
name|str2
init|=
name|dt1
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|ISODate
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|str2
argument_list|,
name|QString
argument_list|(
literal|"1995-05-20T12:34:56"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|str3
init|=
name|dt1
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|LocalDate
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|str3
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|//check for date/time components in any order
comment|//year may be 2 or 4 digits
name|QVERIFY
argument_list|(
name|str3
operator|.
name|contains
argument_list|(
literal|"95"
argument_list|)
argument_list|)
expr_stmt|;
comment|//day and month may be in numeric or word form
name|QVERIFY
argument_list|(
name|str3
operator|.
name|contains
argument_list|(
literal|"12"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|str3
operator|.
name|contains
argument_list|(
literal|"34"
argument_list|)
argument_list|)
expr_stmt|;
comment|//seconds may be absent
block|}
end_function
begin_function
DECL|function|addDays
name|void
name|tst_QDateTime
operator|::
name|addDays
parameter_list|()
block|{
for|for
control|(
name|int
name|pass
init|=
literal|0
init|;
name|pass
operator|<
literal|2
condition|;
operator|++
name|pass
control|)
block|{
name|QDateTime
name|dt
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|,
name|pass
operator|==
literal|0
condition|?
name|Qt
operator|::
name|LocalTime
else|:
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|dt
operator|=
name|dt
operator|.
name|addDays
argument_list|(
literal|185
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt
operator|.
name|date
argument_list|()
operator|.
name|year
argument_list|()
operator|==
literal|2004
operator|&&
name|dt
operator|.
name|date
argument_list|()
operator|.
name|month
argument_list|()
operator|==
literal|7
operator|&&
name|dt
operator|.
name|date
argument_list|()
operator|.
name|day
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt
operator|.
name|time
argument_list|()
operator|.
name|hour
argument_list|()
operator|==
literal|12
operator|&&
name|dt
operator|.
name|time
argument_list|()
operator|.
name|minute
argument_list|()
operator|==
literal|34
operator|&&
name|dt
operator|.
name|time
argument_list|()
operator|.
name|second
argument_list|()
operator|==
literal|56
operator|&&
name|dt
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|timeSpec
argument_list|()
argument_list|,
operator|(
name|pass
operator|==
literal|0
condition|?
name|Qt
operator|::
name|LocalTime
else|:
name|Qt
operator|::
name|UTC
operator|)
argument_list|)
expr_stmt|;
name|dt
operator|=
name|dt
operator|.
name|addDays
argument_list|(
operator|-
literal|185
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QDateTime
name|dt
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
decl_stmt|;
while|while
condition|(
name|dt
operator|.
name|date
argument_list|()
operator|.
name|year
argument_list|()
operator|<
literal|8000
condition|)
block|{
name|int
name|year
init|=
name|dt
operator|.
name|date
argument_list|()
operator|.
name|year
argument_list|()
decl_stmt|;
if|if
condition|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
name|year
operator|+
literal|1
argument_list|)
condition|)
name|dt
operator|=
name|dt
operator|.
name|addDays
argument_list|(
literal|366
argument_list|)
expr_stmt|;
else|else
name|dt
operator|=
name|dt
operator|.
name|addDays
argument_list|(
literal|365
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
name|year
operator|+
literal|1
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// ### test invalid QDateTime()
block|}
end_function
begin_function
DECL|function|addMonths_data
name|void
name|tst_QDateTime
operator|::
name|addMonths_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"months"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"dt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-15"
argument_list|)
operator|<<
operator|-
literal|15
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|10
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-14"
argument_list|)
operator|<<
operator|-
literal|14
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|11
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-13"
argument_list|)
operator|<<
operator|-
literal|13
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-12"
argument_list|)
operator|<<
operator|-
literal|12
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-11"
argument_list|)
operator|<<
operator|-
literal|11
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-10"
argument_list|)
operator|<<
operator|-
literal|10
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|3
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-9"
argument_list|)
operator|<<
operator|-
literal|9
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|4
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-8"
argument_list|)
operator|<<
operator|-
literal|8
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|5
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-7"
argument_list|)
operator|<<
operator|-
literal|7
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-6"
argument_list|)
operator|<<
operator|-
literal|6
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|7
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-5"
argument_list|)
operator|<<
operator|-
literal|5
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|8
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-4"
argument_list|)
operator|<<
operator|-
literal|4
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|9
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-3"
argument_list|)
operator|<<
operator|-
literal|3
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|10
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-2"
argument_list|)
operator|<<
operator|-
literal|2
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|11
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-1"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0"
argument_list|)
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1"
argument_list|)
operator|<<
literal|1
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2"
argument_list|)
operator|<<
literal|2
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|3
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3"
argument_list|)
operator|<<
literal|3
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|4
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4"
argument_list|)
operator|<<
literal|4
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5"
argument_list|)
operator|<<
literal|5
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"6"
argument_list|)
operator|<<
literal|6
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|7
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"7"
argument_list|)
operator|<<
literal|7
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|8
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8"
argument_list|)
operator|<<
literal|8
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|9
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"9"
argument_list|)
operator|<<
literal|9
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10"
argument_list|)
operator|<<
literal|10
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|11
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"11"
argument_list|)
operator|<<
literal|11
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"12"
argument_list|)
operator|<<
literal|12
operator|<<
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13"
argument_list|)
operator|<<
literal|13
operator|<<
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14"
argument_list|)
operator|<<
literal|14
operator|<<
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|3
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"15"
argument_list|)
operator|<<
literal|15
operator|<<
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|4
argument_list|,
literal|30
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addMonths
name|void
name|tst_QDateTime
operator|::
name|addMonths
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|months
argument_list|)
expr_stmt|;
name|QDateTime
name|start
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|start
operator|.
name|addMonths
argument_list|(
name|months
argument_list|)
operator|.
name|date
argument_list|()
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|start
operator|.
name|addMonths
argument_list|(
name|months
argument_list|)
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addYears_data
name|void
name|tst_QDateTime
operator|::
name|addYears_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"years1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"years2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"start"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"dt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4000 - 4000"
argument_list|)
operator|<<
literal|4000
operator|<<
operator|-
literal|4000
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10"
argument_list|)
operator|<<
literal|10
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1762
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0 leap year"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1 leap year"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1761
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2 leap year"
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1762
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3 leap year"
argument_list|)
operator|<<
literal|3
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1763
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4 leap year"
argument_list|)
operator|<<
literal|4
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1764
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toNegative1"
argument_list|)
operator|<<
operator|-
literal|2000
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
operator|-
literal|249
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toNegative2"
argument_list|)
operator|<<
operator|-
literal|1752
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
operator|-
literal|1
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toNegative3"
argument_list|)
operator|<<
operator|-
literal|1751
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toPositive1"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
operator|-
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|249
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toPositive2"
argument_list|)
operator|<<
literal|1752
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
operator|-
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toPositive3"
argument_list|)
operator|<<
literal|1751
operator|<<
literal|0
operator|<<
name|QDate
argument_list|(
operator|-
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QDate
argument_list|(
operator|-
literal|1
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addYears
name|void
name|tst_QDateTime
operator|::
name|addYears
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|years1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|years2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QDateTime
name|startdt
argument_list|(
name|start
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|25
argument_list|,
literal|36
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|startdt
operator|.
name|addYears
argument_list|(
name|years1
argument_list|)
operator|.
name|addYears
argument_list|(
name|years2
argument_list|)
operator|.
name|date
argument_list|()
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|startdt
operator|.
name|addYears
argument_list|(
name|years1
argument_list|)
operator|.
name|addYears
argument_list|(
name|years2
argument_list|)
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|25
argument_list|,
literal|36
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addSecs_data
name|void
name|tst_QDateTime
operator|::
name|addSecs_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"nsecs"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTime
name|standardTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
decl_stmt|;
name|QTime
name|daylightTime
argument_list|(
literal|13
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
literal|86400
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|185
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|366
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
literal|86400
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc4"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|185
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc5"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|366
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1761
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc6"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
literal|86400
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc7"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|185
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc8"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|366
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"utc9"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
literal|0
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
literal|86400
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|185
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|,
name|daylightTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|366
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
literal|86400
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
comment|// QDateTime uses 1980 on Windows, which did have daylight savings in July
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet4"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|185
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|,
name|daylightTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
else|#
directive|else
comment|// QDateTime uses 1970 everywhere else, which did NOT have daylight savings in July
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet4"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|185
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet5"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|366
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1761
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet6"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
literal|86400
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet7"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|185
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|,
name|daylightTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet8"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
operator|(
literal|86400
operator|*
literal|366
operator|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cet9"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
literal|0
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|standardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
comment|// Year sign change
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toNegative"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
operator|-
literal|1
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"toPositive"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
operator|-
literal|1
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
literal|1
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addSecs
name|void
name|tst_QDateTime
operator|::
name|addSecs
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|nsecs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|result
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QEXPECT_FAIL
argument_list|(
literal|"cet4"
argument_list|,
literal|"IRIX databases say 1970 had DST"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|addSecs
argument_list|(
name|nsecs
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
operator|.
name|addSecs
argument_list|(
operator|-
name|nsecs
argument_list|)
argument_list|,
name|dt
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addMSecs_data
name|void
name|tst_QDateTime
operator|::
name|addMSecs_data
parameter_list|()
block|{
name|addSecs_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addMSecs
name|void
name|tst_QDateTime
operator|::
name|addMSecs
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|nsecs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|result
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QEXPECT_FAIL
argument_list|(
literal|"cet4"
argument_list|,
literal|"IRIX databases say 1970 had DST"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|addMSecs
argument_list|(
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
operator|.
name|addMSecs
argument_list|(
name|qint64
argument_list|(
operator|-
name|nsecs
argument_list|)
operator|*
literal|1000
argument_list|)
argument_list|,
name|dt
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toTimeSpec_data
name|void
name|tst_QDateTime
operator|::
name|toTimeSpec_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"utc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"local"
argument_list|)
expr_stmt|;
name|QTime
name|utcTime
argument_list|(
literal|4
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|QTime
name|localStandardTime
argument_list|(
literal|5
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|QTime
name|localDaylightTime
argument_list|(
literal|6
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winter1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|localStandardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winter2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|,
name|localStandardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winter3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|,
name|localStandardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winter4"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|6000
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|6000
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|,
name|localStandardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
literal|"summer1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|localDaylightTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
comment|// QDateTime uses 1980 on Windows, which did have daylight savings in July
name|QTest
operator|::
name|newRow
argument_list|(
literal|"summer2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|localDaylightTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
else|#
directive|else
comment|// QDateTime uses 1970 everywhere else, which did NOT have daylight savings in July
name|QTest
operator|::
name|newRow
argument_list|(
literal|"summer2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|localStandardTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"summer3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|utcTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|localDaylightTime
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
name|QTest
operator|::
name|newRow
argument_list|(
literal|"msec"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|utcTime
operator|.
name|addMSecs
argument_list|(
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|4000
argument_list|,
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|,
name|localDaylightTime
operator|.
name|addMSecs
argument_list|(
literal|1
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toTimeSpec
name|void
name|tst_QDateTime
operator|::
name|toTimeSpec
parameter_list|()
block|{
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|local
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|local
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|,
name|local
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QEXPECT_FAIL
argument_list|(
literal|"summer2"
argument_list|,
literal|"IRIX databases say 1970 had DST"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|,
name|local
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|local
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|,
name|local
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|,
name|local
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QSKIP
argument_list|(
literal|"Not tested with timezone other than Central European (CET/CST)"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toLocalTime_data
name|void
name|tst_QDateTime
operator|::
name|toLocalTime_data
parameter_list|()
block|{
name|toTimeSpec_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toLocalTime
name|void
name|tst_QDateTime
operator|::
name|toLocalTime
parameter_list|()
block|{
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|local
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|local
operator|.
name|toLocalTime
argument_list|()
argument_list|,
name|local
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QEXPECT_FAIL
argument_list|(
literal|"summer2"
argument_list|,
literal|"IRIX databases say 1970 had DST"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toLocalTime
argument_list|()
argument_list|,
name|local
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toLocalTime
argument_list|()
argument_list|,
name|local
operator|.
name|toLocalTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QSKIP
argument_list|(
literal|"Not tested with timezone other than Central European (CET/CST)"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toUTC_data
name|void
name|tst_QDateTime
operator|::
name|toUTC_data
parameter_list|()
block|{
name|toTimeSpec_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toUTC
name|void
name|tst_QDateTime
operator|::
name|toUTC
parameter_list|()
block|{
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|local
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toUTC
argument_list|()
argument_list|,
name|utc
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QEXPECT_FAIL
argument_list|(
literal|"summer2"
argument_list|,
literal|"IRIX databases say 1970 had DST"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|local
operator|.
name|toUTC
argument_list|()
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toUTC
argument_list|()
argument_list|,
name|local
operator|.
name|toUTC
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QSKIP
argument_list|(
literal|"Not tested with timezone other than Central European (CET/CST)"
argument_list|)
expr_stmt|;
block|}
name|QDateTime
name|dt
init|=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
decl_stmt|;
if|if
condition|(
name|dt
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
operator|==
literal|0
condition|)
block|{
name|dt
operator|.
name|setTime
argument_list|(
name|dt
operator|.
name|time
argument_list|()
operator|.
name|addMSecs
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QString
name|s
init|=
name|dt
operator|.
name|toString
argument_list|(
literal|"zzz"
argument_list|)
decl_stmt|;
name|QString
name|t
init|=
name|dt
operator|.
name|toUTC
argument_list|()
operator|.
name|toString
argument_list|(
literal|"zzz"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|daysTo
name|void
name|tst_QDateTime
operator|::
name|daysTo
parameter_list|()
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
decl_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
decl_stmt|;
name|QDateTime
name|dt3
argument_list|(
name|QDate
argument_list|(
literal|1760
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|daysTo
argument_list|(
name|dt2
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
literal|31
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addDays
argument_list|(
literal|31
argument_list|)
argument_list|,
name|dt2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|daysTo
argument_list|(
name|dt3
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
literal|29
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|addDays
argument_list|(
literal|29
argument_list|)
argument_list|,
name|dt3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|daysTo
argument_list|(
name|dt3
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
literal|60
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|addDays
argument_list|(
literal|60
argument_list|)
argument_list|,
name|dt3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|daysTo
argument_list|(
name|dt1
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
operator|-
literal|31
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|addDays
argument_list|(
operator|-
literal|31
argument_list|)
argument_list|,
name|dt1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|daysTo
argument_list|(
name|dt2
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
operator|-
literal|29
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|addDays
argument_list|(
operator|-
literal|29
argument_list|)
argument_list|,
name|dt2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|daysTo
argument_list|(
name|dt1
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
operator|-
literal|60
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt3
operator|.
name|addDays
argument_list|(
operator|-
literal|60
argument_list|)
argument_list|,
name|dt1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|secsTo_data
name|void
name|tst_QDateTime
operator|::
name|secsTo_data
parameter_list|()
block|{
name|addSecs_data
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"disregard milliseconds #1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|58
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
literal|60
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"disregard milliseconds #2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
literal|60
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|secsTo
name|void
name|tst_QDateTime
operator|::
name|secsTo
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|nsecs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|result
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QEXPECT_FAIL
argument_list|(
literal|"cet4"
argument_list|,
literal|"IRIX databases say 1970 had DST"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|secsTo
argument_list|(
name|result
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
name|nsecs
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
operator|.
name|secsTo
argument_list|(
name|dt
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
operator|-
name|nsecs
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|==
name|result
operator|)
operator|==
operator|(
literal|0
operator|==
name|nsecs
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|!=
name|result
operator|)
operator|==
operator|(
literal|0
operator|!=
name|nsecs
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|<
name|result
operator|)
operator|==
operator|(
literal|0
operator|<
name|nsecs
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|<=
name|result
operator|)
operator|==
operator|(
literal|0
operator|<=
name|nsecs
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|>
name|result
operator|)
operator|==
operator|(
literal|0
operator|>
name|nsecs
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|>=
name|result
operator|)
operator|==
operator|(
literal|0
operator|>=
name|nsecs
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|msecsTo_data
name|void
name|tst_QDateTime
operator|::
name|msecsTo_data
parameter_list|()
block|{
name|addMSecs_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|msecsTo
name|void
name|tst_QDateTime
operator|::
name|msecsTo
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|nsecs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|result
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_IRIX
name|QEXPECT_FAIL
argument_list|(
literal|"cet4"
argument_list|,
literal|"IRIX databases say 1970 had DST"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|msecsTo
argument_list|(
name|result
argument_list|)
argument_list|,
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
operator|.
name|msecsTo
argument_list|(
name|dt
argument_list|)
argument_list|,
operator|-
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|==
name|result
operator|)
operator|==
operator|(
literal|0
operator|==
operator|(
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
operator|)
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|!=
name|result
operator|)
operator|==
operator|(
literal|0
operator|!=
operator|(
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
operator|)
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|<
name|result
operator|)
operator|==
operator|(
literal|0
operator|<
operator|(
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
operator|)
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|<=
name|result
operator|)
operator|==
operator|(
literal|0
operator|<=
operator|(
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
operator|)
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|>
name|result
operator|)
operator|==
operator|(
literal|0
operator|>
operator|(
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
operator|)
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|dt
operator|>=
name|result
operator|)
operator|==
operator|(
literal|0
operator|>=
operator|(
name|qint64
argument_list|(
name|nsecs
argument_list|)
operator|*
literal|1000
operator|)
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentDateTime
name|void
name|tst_QDateTime
operator|::
name|currentDateTime
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|__time64_t
name|buf1
decl_stmt|,
name|buf2
decl_stmt|;
operator|::
name|_time64
argument_list|(
operator|&
name|buf1
argument_list|)
expr_stmt|;
else|#
directive|else
name|time_t
name|buf1
decl_stmt|,
name|buf2
decl_stmt|;
operator|::
name|time
argument_list|(
operator|&
name|buf1
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QDateTime
name|lowerBound
decl_stmt|;
name|lowerBound
operator|.
name|setTime_t
argument_list|(
name|buf1
argument_list|)
expr_stmt|;
name|QDateTime
name|dt1
init|=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
decl_stmt|;
name|QDateTime
name|dt2
init|=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
operator|.
name|toLocalTime
argument_list|()
decl_stmt|;
name|QDateTime
name|dt3
init|=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
operator|.
name|toUTC
argument_list|()
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|::
name|_time64
argument_list|(
operator|&
name|buf2
argument_list|)
expr_stmt|;
else|#
directive|else
operator|::
name|time
argument_list|(
operator|&
name|buf2
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QDateTime
name|upperBound
decl_stmt|;
name|upperBound
operator|.
name|setTime_t
argument_list|(
name|buf2
argument_list|)
expr_stmt|;
comment|// Note we must add 2 seconds here because time() may return up to
comment|// 1 second difference from the more accurate method used by QDateTime::currentDateTime()
name|upperBound
operator|=
name|upperBound
operator|.
name|addSecs
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QString
name|details
init|=
name|QString
argument_list|(
literal|"\n"
literal|"lowerBound: %1\n"
literal|"dt1:        %2\n"
literal|"dt2:        %3\n"
literal|"dt3:        %4\n"
literal|"upperBound: %5\n"
argument_list|)
operator|.
name|arg
argument_list|(
name|lowerBound
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|dt1
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|dt2
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|dt3
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|upperBound
operator|.
name|toTime_t
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<=
name|dt1
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|dt1
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<=
name|dt2
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|dt2
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<=
name|dt3
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|dt3
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|timeSpec
argument_list|()
operator|==
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt2
operator|.
name|timeSpec
argument_list|()
operator|==
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt3
operator|.
name|timeSpec
argument_list|()
operator|==
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentDateTimeUtc
name|void
name|tst_QDateTime
operator|::
name|currentDateTimeUtc
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|__time64_t
name|buf1
decl_stmt|,
name|buf2
decl_stmt|;
operator|::
name|_time64
argument_list|(
operator|&
name|buf1
argument_list|)
expr_stmt|;
else|#
directive|else
name|time_t
name|buf1
decl_stmt|,
name|buf2
decl_stmt|;
operator|::
name|time
argument_list|(
operator|&
name|buf1
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QDateTime
name|lowerBound
decl_stmt|;
name|lowerBound
operator|.
name|setTime_t
argument_list|(
name|buf1
argument_list|)
expr_stmt|;
name|QDateTime
name|dt1
init|=
name|QDateTime
operator|::
name|currentDateTimeUtc
argument_list|()
decl_stmt|;
name|QDateTime
name|dt2
init|=
name|QDateTime
operator|::
name|currentDateTimeUtc
argument_list|()
operator|.
name|toLocalTime
argument_list|()
decl_stmt|;
name|QDateTime
name|dt3
init|=
name|QDateTime
operator|::
name|currentDateTimeUtc
argument_list|()
operator|.
name|toUTC
argument_list|()
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|::
name|_time64
argument_list|(
operator|&
name|buf2
argument_list|)
expr_stmt|;
else|#
directive|else
operator|::
name|time
argument_list|(
operator|&
name|buf2
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QDateTime
name|upperBound
decl_stmt|;
name|upperBound
operator|.
name|setTime_t
argument_list|(
name|buf2
argument_list|)
expr_stmt|;
comment|// Note we must add 2 seconds here because time() may return up to
comment|// 1 second difference from the more accurate method used by QDateTime::currentDateTime()
name|upperBound
operator|=
name|upperBound
operator|.
name|addSecs
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QString
name|details
init|=
name|QString
argument_list|(
literal|"\n"
literal|"lowerBound: %1\n"
literal|"dt1:        %2\n"
literal|"dt2:        %3\n"
literal|"dt3:        %4\n"
literal|"upperBound: %5\n"
argument_list|)
operator|.
name|arg
argument_list|(
name|lowerBound
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|dt1
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|dt2
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|dt3
operator|.
name|toTime_t
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|upperBound
operator|.
name|toTime_t
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<=
name|dt1
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|dt1
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<=
name|dt2
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|dt2
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|lowerBound
operator|<=
name|dt3
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|dt3
operator|<
name|upperBound
argument_list|,
name|qPrintable
argument_list|(
name|details
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|timeSpec
argument_list|()
operator|==
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt2
operator|.
name|timeSpec
argument_list|()
operator|==
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt3
operator|.
name|timeSpec
argument_list|()
operator|==
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentDateTimeUtc2
name|void
name|tst_QDateTime
operator|::
name|currentDateTimeUtc2
parameter_list|()
block|{
name|QDateTime
name|local
decl_stmt|,
name|utc
decl_stmt|;
name|qint64
name|msec
decl_stmt|;
comment|// check that we got all down to the same milliseconds
name|int
name|i
init|=
literal|2
decl_stmt|;
name|bool
name|ok
init|=
literal|false
decl_stmt|;
do|do
block|{
name|local
operator|=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
expr_stmt|;
name|utc
operator|=
name|QDateTime
operator|::
name|currentDateTimeUtc
argument_list|()
expr_stmt|;
name|msec
operator|=
name|QDateTime
operator|::
name|currentMSecsSinceEpoch
argument_list|()
expr_stmt|;
name|ok
operator|=
name|local
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
operator|==
name|utc
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
operator|&&
name|utc
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
operator|==
operator|(
name|msec
operator|%
literal|1000
operator|)
expr_stmt|;
block|}
do|while
condition|(
operator|--
name|i
operator|&&
operator|!
name|ok
condition|)
do|;
if|if
condition|(
operator|!
name|i
condition|)
name|QSKIP
argument_list|(
literal|"Failed to get the dates within 1 ms of each other"
argument_list|)
expr_stmt|;
comment|// seconds and milliseconds should be the same:
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|time
argument_list|()
operator|.
name|second
argument_list|()
argument_list|,
name|local
operator|.
name|time
argument_list|()
operator|.
name|second
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
argument_list|,
name|local
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|msec
operator|%
literal|1000
argument_list|,
name|qint64
argument_list|(
name|local
operator|.
name|time
argument_list|()
operator|.
name|msec
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|msec
operator|/
literal|1000
operator|%
literal|60
argument_list|,
name|qint64
argument_list|(
name|local
operator|.
name|time
argument_list|()
operator|.
name|second
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// the two dates should be equal, actually
name|QCOMPARE
argument_list|(
name|local
operator|.
name|toUTC
argument_list|()
argument_list|,
name|utc
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toLocalTime
argument_list|()
argument_list|,
name|local
argument_list|)
expr_stmt|;
comment|// and finally, the time_t should equal our number
name|QCOMPARE
argument_list|(
name|qint64
argument_list|(
name|utc
operator|.
name|toTime_t
argument_list|()
argument_list|)
argument_list|,
name|msec
operator|/
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qint64
argument_list|(
name|local
operator|.
name|toTime_t
argument_list|()
argument_list|)
argument_list|,
name|msec
operator|/
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|utc
operator|.
name|toMSecsSinceEpoch
argument_list|()
argument_list|,
name|msec
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|local
operator|.
name|toMSecsSinceEpoch
argument_list|()
argument_list|,
name|msec
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toTime_t_data
name|void
name|tst_QDateTime
operator|::
name|toTime_t_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"dateTimeStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|str
argument_list|(
literal|1800
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|str
argument_list|(
literal|1969
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|str
argument_list|(
literal|2002
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|str
argument_list|(
literal|2002
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"INVALID"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|str
argument_list|(
literal|2038
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|str
argument_list|(
literal|2063
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// the day of First Contact
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|str
argument_list|(
literal|2107
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|bool
argument_list|(
sizeof|sizeof
argument_list|(
name|uint
argument_list|)
operator|>
literal|32
operator|&&
sizeof|sizeof
argument_list|(
name|time_t
argument_list|)
operator|>
literal|32
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toTime_t
name|void
name|tst_QDateTime
operator|::
name|toTime_t
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dateTimeStr
argument_list|)
expr_stmt|;
name|QDateTime
name|datetime
init|=
name|dt
argument_list|(
name|dateTimeStr
argument_list|)
decl_stmt|;
name|uint
name|asTime_t
init|=
name|datetime
operator|.
name|toTime_t
argument_list|()
decl_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|res
argument_list|)
expr_stmt|;
if|if
condition|(
name|res
condition|)
block|{
name|QVERIFY
argument_list|(
name|asTime_t
operator|!=
operator|(
name|uint
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|asTime_t
operator|==
operator|(
name|uint
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|asTime_t
operator|!=
operator|(
name|uint
operator|)
operator|-
literal|1
condition|)
block|{
name|QDateTime
name|datetime2
init|=
name|QDateTime
operator|::
name|fromTime_t
argument_list|(
name|asTime_t
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|datetime
argument_list|,
name|datetime2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|daylightSavingsTimeChange
name|void
name|tst_QDateTime
operator|::
name|daylightSavingsTimeChange
parameter_list|()
block|{
comment|// This is a regression test for an old bug where starting with a date in
comment|// DST and then moving to a date outside it (or vice-versa) caused 1-hour
comment|// jumps in time when addSecs() was called.
comment|//
comment|// The bug was caused by QDateTime knowing more than it lets show.
comment|// Internally, if it knows, QDateTime stores a flag indicating if the time is
comment|// DST or not. If it doesn't, it sets to "LocalUnknown".  The problem happened
comment|// because some functions did not reset the flag when moving in or out of DST.
comment|// WARNING: This test only works if there's a Daylight Savings Time change
comment|// in the current locale between 2006-11-06 and 2006-10-16
comment|// This is true for Central European Time
if|if
condition|(
operator|!
name|europeanTimeZone
condition|)
name|QSKIP
argument_list|(
literal|"Not tested with timezone other than Central European (CET/CEST)"
argument_list|)
expr_stmt|;
name|QDateTime
name|dt
init|=
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|11
argument_list|,
literal|6
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|dt
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|10
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|dt
operator|=
name|dt
operator|.
name|addSecs
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|10
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// now using fromTime_t
name|dt
operator|=
name|QDateTime
operator|::
name|fromTime_t
argument_list|(
literal|1162767600
argument_list|)
expr_stmt|;
comment|// 2006-11-06 00:00:00 +0100
name|dt
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|10
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|dt
operator|=
name|dt
operator|.
name|addSecs
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|10
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_eqeq_data
name|void
name|tst_QDateTime
operator|::
name|operator_eqeq_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dt1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dt2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expectEqual"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"checkEuro"
argument_list|)
expr_stmt|;
name|QDateTime
name|dateTime1
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|6
argument_list|,
literal|20
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|33
argument_list|,
literal|2
argument_list|,
literal|500
argument_list|)
argument_list|)
decl_stmt|;
name|QDateTime
name|dateTime1a
init|=
name|dateTime1
operator|.
name|addMSecs
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QDateTime
name|dateTime2
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|20
argument_list|,
literal|6
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|33
argument_list|,
literal|2
argument_list|,
literal|500
argument_list|)
argument_list|)
decl_stmt|;
name|QDateTime
name|dateTime2a
init|=
name|dateTime2
operator|.
name|addMSecs
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QDateTime
name|dateTime3
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QDateTime
name|dateTime3a
init|=
name|dateTime3
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QDateTime
name|dateTime3b
init|=
name|dateTime3
operator|.
name|addDays
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
comment|// Ensure that different times may be equal when considering timezone.
name|QDateTime
name|dateTime3c
argument_list|(
name|dateTime3
operator|.
name|addSecs
argument_list|(
literal|3600
argument_list|)
argument_list|)
decl_stmt|;
name|dateTime3c
operator|.
name|setUtcOffset
argument_list|(
literal|3600
argument_list|)
expr_stmt|;
name|QDateTime
name|dateTime3d
argument_list|(
name|dateTime3
operator|.
name|addSecs
argument_list|(
operator|-
literal|3600
argument_list|)
argument_list|)
decl_stmt|;
name|dateTime3d
operator|.
name|setUtcOffset
argument_list|(
operator|-
literal|3600
argument_list|)
expr_stmt|;
comment|// Convert from UTC to local.
name|QDateTime
name|dateTime3e
argument_list|(
name|dateTime3
operator|.
name|date
argument_list|()
argument_list|,
name|dateTime3
operator|.
name|time
argument_list|()
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|dateTime1
operator|<<
name|dateTime1
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|dateTime2
operator|<<
name|dateTime2
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|dateTime1a
operator|<<
name|dateTime1a
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|dateTime1
operator|<<
name|dateTime2
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|dateTime1
operator|<<
name|dateTime1a
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|dateTime2
operator|<<
name|dateTime2a
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|dateTime2
operator|<<
name|dateTime3
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|dateTime3
operator|<<
name|dateTime3a
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|dateTime3
operator|<<
name|dateTime3b
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|dateTime3a
operator|<<
name|dateTime3b
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|dateTime3
operator|<<
name|dateTime3c
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|dateTime3
operator|<<
name|dateTime3d
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|dateTime3c
operator|<<
name|dateTime3d
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|dateTime3
operator|<<
name|dateTime3e
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
if|if
condition|(
name|europeanTimeZone
condition|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|operator_eqeq
name|void
name|tst_QDateTime
operator|::
name|operator_eqeq
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|expectEqual
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|checkEuro
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|==
name|dt1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|dt1
operator|!=
name|dt1
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt2
operator|==
name|dt2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|dt2
operator|!=
name|dt2
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|!=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt2
operator|!=
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|toUTC
argument_list|()
operator|==
name|dt1
operator|.
name|toUTC
argument_list|()
argument_list|)
expr_stmt|;
name|bool
name|equal
init|=
name|dt1
operator|==
name|dt2
decl_stmt|;
name|QCOMPARE
argument_list|(
name|equal
argument_list|,
name|expectEqual
argument_list|)
expr_stmt|;
name|bool
name|notEqual
init|=
name|dt1
operator|!=
name|dt2
decl_stmt|;
name|QCOMPARE
argument_list|(
name|notEqual
argument_list|,
operator|!
name|expectEqual
argument_list|)
expr_stmt|;
if|if
condition|(
name|equal
condition|)
name|QVERIFY
argument_list|(
name|qHash
argument_list|(
name|dt1
argument_list|)
operator|==
name|qHash
argument_list|(
name|dt2
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|checkEuro
operator|&&
name|europeanTimeZone
condition|)
block|{
name|QVERIFY
argument_list|(
name|dt1
operator|.
name|toUTC
argument_list|()
operator|==
name|dt2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|==
name|dt2
operator|.
name|toLocalTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|Q_OS_WINCE
end_ifndef
begin_function
DECL|function|operator_insert_extract_data
name|void
name|tst_QDateTime
operator|::
name|operator_insert_extract_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"serialiseAs"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"deserialiseAs"
argument_list|)
expr_stmt|;
specifier|const
name|QDateTime
name|positiveYear
argument_list|(
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|8
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QDateTime
name|negativeYear
argument_list|(
name|QDateTime
argument_list|(
name|QDate
argument_list|(
operator|-
literal|2012
argument_list|,
literal|8
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|westernAustralia
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"AWST-8AWDT-9,M10.5.0,M3.5.0/03:00:00"
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|hawaii
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"HAW10"
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/2012 08:00 WA => HAWAII"
argument_list|)
operator|<<
name|positiveYear
operator|<<
name|westernAustralia
operator|<<
name|hawaii
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/2012 08:00 WA => HAWAII"
argument_list|)
operator|<<
name|positiveYear
operator|<<
name|westernAustralia
operator|<<
name|hawaii
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/2012 08:00 WA => HAWAII"
argument_list|)
operator|<<
name|positiveYear
operator|<<
name|westernAustralia
operator|<<
name|hawaii
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/2012 08:00 WA => WA"
argument_list|)
operator|<<
name|positiveYear
operator|<<
name|westernAustralia
operator|<<
name|westernAustralia
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/-2012 08:00 HAWAII => WA"
argument_list|)
operator|<<
name|negativeYear
operator|<<
name|hawaii
operator|<<
name|westernAustralia
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/-2012 08:00 HAWAII => WA"
argument_list|)
operator|<<
name|negativeYear
operator|<<
name|hawaii
operator|<<
name|westernAustralia
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/-2012 08:00 HAWAII => WA"
argument_list|)
operator|<<
name|negativeYear
operator|<<
name|hawaii
operator|<<
name|westernAustralia
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"14/08/2012 08:00 HAWAII => HAWAII"
argument_list|)
operator|<<
name|positiveYear
operator|<<
name|hawaii
operator|<<
name|hawaii
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_insert_extract
name|void
name|tst_QDateTime
operator|::
name|operator_insert_extract
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|serialiseAs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|deserialiseAs
argument_list|)
expr_stmt|;
name|QString
name|previousTimeZone
init|=
name|qgetenv
argument_list|(
literal|"TZ"
argument_list|)
decl_stmt|;
name|qputenv
argument_list|(
literal|"TZ"
argument_list|,
name|serialiseAs
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|tzset
argument_list|()
expr_stmt|;
name|QDateTime
name|dateTimeAsUTC
argument_list|(
name|dateTime
operator|.
name|toUTC
argument_list|()
argument_list|)
decl_stmt|;
name|QByteArray
name|byteArray
decl_stmt|;
block|{
name|QDataStream
name|dataStream
argument_list|(
operator|&
name|byteArray
argument_list|,
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
decl_stmt|;
name|dataStream
operator|<<
name|dateTime
expr_stmt|;
name|dataStream
operator|<<
name|dateTime
expr_stmt|;
block|}
comment|// Ensure that a change in timezone between serialisation and deserialisation
comment|// still results in identical UTC-converted datetimes.
name|qputenv
argument_list|(
literal|"TZ"
argument_list|,
name|deserialiseAs
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|tzset
argument_list|()
expr_stmt|;
name|QDateTime
name|expectedLocalTime
argument_list|(
name|dateTimeAsUTC
operator|.
name|toLocalTime
argument_list|()
argument_list|)
decl_stmt|;
block|{
comment|// Deserialise whole QDateTime at once.
name|QDataStream
name|dataStream
argument_list|(
operator|&
name|byteArray
argument_list|,
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
decl_stmt|;
name|QDateTime
name|deserialised
decl_stmt|;
name|dataStream
operator|>>
name|deserialised
expr_stmt|;
comment|// Ensure local time is still correct.
name|QCOMPARE
argument_list|(
name|deserialised
argument_list|,
name|expectedLocalTime
argument_list|)
expr_stmt|;
comment|// Sanity check UTC times.
name|QCOMPARE
argument_list|(
name|deserialised
operator|.
name|toUTC
argument_list|()
argument_list|,
name|expectedLocalTime
operator|.
name|toUTC
argument_list|()
argument_list|)
expr_stmt|;
comment|// Deserialise each component individually.
name|QDate
name|deserialisedDate
decl_stmt|;
name|dataStream
operator|>>
name|deserialisedDate
expr_stmt|;
name|QTime
name|deserialisedTime
decl_stmt|;
name|dataStream
operator|>>
name|deserialisedTime
expr_stmt|;
name|qint8
name|deserialisedSpec
decl_stmt|;
name|dataStream
operator|>>
name|deserialisedSpec
expr_stmt|;
name|deserialised
operator|=
name|QDateTime
argument_list|(
name|deserialisedDate
argument_list|,
name|deserialisedTime
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|deserialised
operator|=
name|deserialised
operator|.
name|toTimeSpec
argument_list|(
cast|static_cast
argument_list|<
name|Qt
operator|::
name|TimeSpec
argument_list|>
argument_list|(
name|deserialisedSpec
argument_list|)
argument_list|)
expr_stmt|;
comment|// Ensure local time is still correct.
name|QCOMPARE
argument_list|(
name|deserialised
argument_list|,
name|expectedLocalTime
argument_list|)
expr_stmt|;
comment|// Sanity check UTC times.
name|QCOMPARE
argument_list|(
name|deserialised
operator|.
name|toUTC
argument_list|()
argument_list|,
name|expectedLocalTime
operator|.
name|toUTC
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|qputenv
argument_list|(
literal|"TZ"
argument_list|,
name|previousTimeZone
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|tzset
argument_list|()
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|toString_strformat_data
name|void
name|tst_QDateTime
operator|::
name|toString_strformat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"str"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime0"
argument_list|)
operator|<<
name|QDateTime
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"dd-MM-yyyy hh:mm:ss"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd-'mmddyy'MM-yyyy hh:mm:ss.zzz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"31-mmddyy12-1999 23:59:59.999"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd-'apAP'MM-yyyy hh:mm:ss.zzz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"31-apAP12-1999 23:59:59.999"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Apdd-MM-yyyy hh:mm:ss.zzz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"PMp31-12-1999 11:59:59.999"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime4"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"'ap'apdd-MM-yyyy 'AP'hh:mm:ss.zzz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"appm31-12-1999 AP11:59:59.999"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime5"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"'''"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"'"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime6"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"'ap"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ap"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime7"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"' ' 'hh' hh"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"  hh 23"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime8"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d'foobar'"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"31foobar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime9"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|3
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hhhhh"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"03033"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime10"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|3
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hhhhhaA"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"03033amAM"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime11"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"HHHhhhAaAPap"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"23231111PMpmPMpm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime12"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|3
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"HHHhhhAaAPap"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"033033AMamAMam"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"datetime13"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1974
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|20
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh''mm''ss dd''MM''yyyy"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"14'14'20 01'12'1974"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_strformat
name|void
name|tst_QDateTime
operator|::
name|toString_strformat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dt
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|str
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|toString
argument_list|(
name|format
argument_list|)
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringDateFormat_data
name|void
name|tst_QDateTime
operator|::
name|fromStringDateFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"dateTimeStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|Qt
operator|::
name|DateFormat
argument_list|>
argument_list|(
literal|"dateFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|Qt
operator|::
name|TimeSpec
argument_list|>
argument_list|(
literal|"timeSpec"
argument_list|)
expr_stmt|;
comment|// Test Qt::TextDate format.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text date"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Tue Jun 17 08:00:10 2003"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2003
argument_list|,
literal|6
argument_list|,
literal|17
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text date Year 0999"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Tue Jun 17 08:00:10 0999"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|999
argument_list|,
literal|6
argument_list|,
literal|17
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text date Year 999"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Tue Jun 17 08:00:10 999"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|999
argument_list|,
literal|6
argument_list|,
literal|17
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text date Year 12345"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Tue Jun 17 08:00:10 12345"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|12345
argument_list|,
literal|6
argument_list|,
literal|17
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text date Year -4712"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Tue Jan 1 00:01:02 -4712"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
operator|-
literal|4712
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:00:00 1970"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 2 12:34 1970"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00 1970"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:00:00:00 1970"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:00:00:00 1970"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|" Thu   Jan   1    00:00:00    1970  "
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:00:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 1970 00:00:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:12:34 1970 GMT+foo"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:12:34 1970 GMT"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:12:34 1970 GMT-0300"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|3
argument_list|,
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:12:34 1970 GMT+0300"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1969
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|21
argument_list|,
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 00:12:34 1970 gmt"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1970
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Thu Jan 1 1970 00:12:34 GMT+0100"
argument_list|)
operator|<<
name|Qt
operator|::
name|TextDate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1969
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|12
argument_list|,
literal|34
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
comment|// Test Qt::ISODate format.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"1987-02-13T13:24:51+01:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1987
argument_list|,
literal|2
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|24
argument_list|,
literal|51
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"1987-02-13T13:24:51-01:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1987
argument_list|,
literal|2
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|24
argument_list|,
literal|51
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
comment|// No time specified - defaults to Qt::LocalTime.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2002-10-01"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2005-06-28T07:57:30.0010000000Z"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|6
argument_list|,
literal|28
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|7
argument_list|,
literal|57
argument_list|,
literal|30
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO with comma 1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2005-06-28T07:57:30,0040000000Z"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|6
argument_list|,
literal|28
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|7
argument_list|,
literal|57
argument_list|,
literal|30
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO with comma 2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2005-06-28T07:57:30,0015Z"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|6
argument_list|,
literal|28
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|7
argument_list|,
literal|57
argument_list|,
literal|30
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO with comma 3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2005-06-28T07:57:30,0014Z"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|6
argument_list|,
literal|28
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|7
argument_list|,
literal|57
argument_list|,
literal|30
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO with comma 4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2005-06-28T07:57:30,1Z"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|6
argument_list|,
literal|28
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|7
argument_list|,
literal|57
argument_list|,
literal|30
argument_list|,
literal|100
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|UTC
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO with comma 5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2005-06-28T07:57:30,11"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|6
argument_list|,
literal|28
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|7
argument_list|,
literal|57
argument_list|,
literal|30
argument_list|,
literal|110
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
comment|// 24:00:00 Should be next day according to ISO 8601 section 4.2.3.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO 24:00"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-06-04T24:00:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|6
argument_list|,
literal|5
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO 24:00 end of month"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-06-30T24:00:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO 24:00 end of year"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-12-31T24:00:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2013
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO 24:00, fract ms"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T24:00:00.000"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO 24:00 end of year, fract ms"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-12-31T24:00:00.000"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2013
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
comment|// Test fractional seconds.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .0 of a second (period)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00.0"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .00 of a second (period)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00.00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .000 of a second (period)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00.000"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .1 of a second (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00,1"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .99 of a second (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00,99"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|990
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .998 of a second (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00,998"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|998
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .999 of a second (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00,999"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .3335 of a second (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00,3335"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|334
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .333333 of a second (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00,333333"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|333
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .00009 of a second (period)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00.00009"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO no fract specified"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00."
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
comment|// Test invalid characters (should ignore invalid characters at end of string).
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO invalid character at end"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00:00!"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO invalid character at front"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"!2012-01-01T08:00:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO invalid character both ends"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"!2012-01-01T08:00:00!"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO invalid character at front, 2 at back"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"!2012-01-01T08:00:00.."
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO invalid character 2 at front"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"!!2012-01-01T08:00:00"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|invalidDateTime
argument_list|()
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
comment|// Test fractional minutes.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .0 of a minute (period)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00.0"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .8 of a minute (period)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00.8"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|48
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .99999 of a minute (period)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00.99999"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .0 of a minute (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00,0"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .8 of a minute (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00,8"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|48
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ISO .99999 of a minute (comma)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"2012-01-01T08:00,99999"
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2012
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
operator|<<
name|Qt
operator|::
name|LocalTime
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringDateFormat
name|void
name|tst_QDateTime
operator|::
name|fromStringDateFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|dateTimeStr
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|Qt
operator|::
name|DateFormat
argument_list|,
name|dateFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|Qt
operator|::
name|TimeSpec
argument_list|,
name|timeSpec
argument_list|)
expr_stmt|;
name|QDateTime
name|dateTime
init|=
name|QDateTime
operator|::
name|fromString
argument_list|(
name|dateTimeStr
argument_list|,
name|dateFormat
argument_list|)
decl_stmt|;
name|expected
operator|.
name|setTimeSpec
argument_list|(
name|timeSpec
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dateTime
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringStringFormat_data
name|void
name|tst_QDateTime
operator|::
name|fromStringStringFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QString
name|january
init|=
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QString
name|oct
init|=
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|QString
name|december
init|=
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|12
argument_list|)
decl_stmt|;
name|QString
name|thu
init|=
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|QString
name|fri
init|=
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|QString
name|date
init|=
literal|"10 "
operator|+
name|oct
operator|+
literal|" 10"
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"101010"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dMyy"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1910
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1020"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"sss"
argument_list|)
operator|<<
name|invalidDateTime
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1010"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"sss"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|defDate
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"10hello20"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ss'hello'ss"
argument_list|)
operator|<<
name|invalidDateTime
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"10"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"''"
argument_list|)
operator|<<
name|invalidDateTime
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"10"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"'"
argument_list|)
operator|<<
name|invalidDateTime
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"pm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|defDate
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ap"
argument_list|)
operator|<<
name|invalidDateTime
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"101010"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dMyy"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1910
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"101010"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dMyy"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1910
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"101010"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dMyy"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1910
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|date
operator|<<
name|QString
argument_list|(
literal|"dd MMM yy"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1910
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|date
operator|=
name|fri
operator|+
literal|" "
operator|+
name|december
operator|+
literal|" 3 2004"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|date
operator|<<
name|QString
argument_list|(
literal|"ddd MMMM d yyyy"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|12
argument_list|,
literal|3
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"30.02.2004"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd.MM.yyyy"
argument_list|)
operator|<<
name|invalidDateTime
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"32.01.2004"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd.MM.yyyy"
argument_list|)
operator|<<
name|invalidDateTime
argument_list|()
expr_stmt|;
name|date
operator|=
name|thu
operator|+
literal|" "
operator|+
name|january
operator|+
literal|" 2004"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|date
operator|<<
name|QString
argument_list|(
literal|"ddd MMMM yyyy"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2005-06-28T07:57:30.001Z"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyy-MM-ddThh:mm:ss.zZ"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|06
argument_list|,
literal|28
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|07
argument_list|,
literal|57
argument_list|,
literal|30
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringStringFormat
name|void
name|tst_QDateTime
operator|::
name|fromStringStringFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QDateTime
name|dt
init|=
name|QDateTime
operator|::
name|fromString
argument_list|(
name|string
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_WIN
end_ifdef
begin_comment
comment|// Windows only
end_comment
begin_function
DECL|function|fromString_LOCALE_ILDATE
name|void
name|tst_QDateTime
operator|::
name|fromString_LOCALE_ILDATE
parameter_list|()
block|{
name|QString
name|date1
init|=
name|QLatin1String
argument_list|(
literal|"Sun 1. Dec 13:02:00 1974"
argument_list|)
decl_stmt|;
name|QString
name|date2
init|=
name|QLatin1String
argument_list|(
literal|"Sun Dec 1 13:02:00 1974"
argument_list|)
decl_stmt|;
name|QDateTime
name|ref
argument_list|(
name|QDate
argument_list|(
literal|1974
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ref
argument_list|,
name|QDateTime
operator|::
name|fromString
argument_list|(
name|date2
argument_list|,
name|Qt
operator|::
name|TextDate
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ref
argument_list|,
name|QDateTime
operator|::
name|fromString
argument_list|(
name|date1
argument_list|,
name|Qt
operator|::
name|TextDate
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|fromStringToStringLocale_data
name|void
name|tst_QDateTime
operator|::
name|fromStringToStringLocale_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|18
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|11
argument_list|,
literal|49
argument_list|,
literal|00
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringToStringLocale
name|void
name|tst_QDateTime
operator|::
name|fromStringToStringLocale
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QLocale
name|def
decl_stmt|;
name|QLocale
operator|::
name|setDefault
argument_list|(
name|QLocale
argument_list|(
name|QLocale
operator|::
name|French
argument_list|,
name|QLocale
operator|::
name|France
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTime
operator|::
name|fromString
argument_list|(
name|dateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|DefaultLocaleShortDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|DefaultLocaleShortDate
argument_list|)
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTime
operator|::
name|fromString
argument_list|(
name|dateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|SystemLocaleShortDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|SystemLocaleShortDate
argument_list|)
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
comment|// obsolete
name|QCOMPARE
argument_list|(
name|QDateTime
operator|::
name|fromString
argument_list|(
name|dateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|SystemLocaleDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|SystemLocaleDate
argument_list|)
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTime
operator|::
name|fromString
argument_list|(
name|dateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|LocaleDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocaleDate
argument_list|)
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"data0"
argument_list|,
literal|"This format is apparently failing because of a bug in the datetime parser. (QTBUG-22833)"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTime
operator|::
name|fromString
argument_list|(
name|dateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|DefaultLocaleLongDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|DefaultLocaleLongDate
argument_list|)
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_WIN
name|QEXPECT_FAIL
argument_list|(
literal|"data0"
argument_list|,
literal|"This format is apparently failing because of a bug in the datetime parser. (QTBUG-22833)"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|QDateTime
operator|::
name|fromString
argument_list|(
name|dateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|SystemLocaleLongDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|SystemLocaleLongDate
argument_list|)
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QLocale
operator|::
name|setDefault
argument_list|(
name|def
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|utcOffset
name|void
name|tst_QDateTime
operator|::
name|utcOffset
parameter_list|()
block|{
comment|/* Check default value. */
name|QCOMPARE
argument_list|(
name|QDateTime
argument_list|()
operator|.
name|utcOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setUtcOffset
name|void
name|tst_QDateTime
operator|::
name|setUtcOffset
parameter_list|()
block|{
comment|/* Basic tests. */
block|{
name|QDateTime
name|dt
argument_list|(
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
decl_stmt|;
name|dt
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setUtcOffset
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|utcOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setUtcOffset
argument_list|(
operator|-
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|utcOffset
argument_list|()
argument_list|,
operator|-
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|OffsetFromUTC
argument_list|)
expr_stmt|;
block|}
comment|/* Test detaching. */
block|{
name|QDateTime
name|dt
argument_list|(
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
decl_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|dt
argument_list|)
decl_stmt|;
name|dt
operator|.
name|setUtcOffset
argument_list|(
literal|501
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|utcOffset
argument_list|()
argument_list|,
literal|501
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|utcOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
comment|/* Check copying. */
block|{
name|QDateTime
name|dt
argument_list|(
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
decl_stmt|;
name|dt
operator|.
name|setUtcOffset
argument_list|(
literal|502
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|utcOffset
argument_list|()
argument_list|,
literal|502
argument_list|)
expr_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|dt
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|utcOffset
argument_list|()
argument_list|,
literal|502
argument_list|)
expr_stmt|;
block|}
comment|/* Check assignment. */
block|{
name|QDateTime
name|dt
argument_list|(
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
decl_stmt|;
name|dt
operator|.
name|setUtcOffset
argument_list|(
literal|502
argument_list|)
expr_stmt|;
name|QDateTime
name|dt2
decl_stmt|;
name|dt2
operator|=
name|dt
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|utcOffset
argument_list|()
argument_list|,
literal|502
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|getDate
name|void
name|tst_QDateTime
operator|::
name|getDate
parameter_list|()
block|{
block|{
name|int
name|y
init|=
operator|-
literal|33
decl_stmt|,
name|m
init|=
operator|-
literal|44
decl_stmt|,
name|d
init|=
operator|-
literal|55
decl_stmt|;
name|QDate
name|date
decl_stmt|;
name|date
operator|.
name|getDate
argument_list|(
operator|&
name|y
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|d
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|year
argument_list|()
operator|==
name|y
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|month
argument_list|()
operator|==
name|m
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|day
argument_list|()
operator|==
name|d
argument_list|)
expr_stmt|;
name|date
operator|.
name|getDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|y
init|=
operator|-
literal|33
decl_stmt|,
name|m
init|=
operator|-
literal|44
decl_stmt|,
name|d
init|=
operator|-
literal|55
decl_stmt|;
name|QDate
name|date
argument_list|(
literal|1998
argument_list|,
literal|5
argument_list|,
literal|24
argument_list|)
decl_stmt|;
name|date
operator|.
name|getDate
argument_list|(
literal|0
argument_list|,
operator|&
name|m
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|date
operator|.
name|getDate
argument_list|(
operator|&
name|y
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|date
operator|.
name|getDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|&
name|d
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|year
argument_list|()
operator|==
name|y
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|month
argument_list|()
operator|==
name|m
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|day
argument_list|()
operator|==
name|d
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fewDigitsInYear
name|void
name|tst_QDateTime
operator|::
name|fewDigitsInYear
parameter_list|()
specifier|const
block|{
specifier|const
name|QDateTime
name|three
argument_list|(
name|QDate
argument_list|(
literal|300
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|three
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy-MM-dd"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"0300-10-11"
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QDateTime
name|two
argument_list|(
name|QDate
argument_list|(
literal|20
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|two
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy-MM-dd"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"0020-10-11"
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QDateTime
name|yyTwo
argument_list|(
name|QDate
argument_list|(
literal|30
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|yyTwo
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yy-MM-dd"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"30-10-11"
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QDateTime
name|yyOne
argument_list|(
name|QDate
argument_list|(
literal|4
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|,
name|QTime
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|yyOne
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yy-MM-dd"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"04-10-11"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|printNegativeYear
name|void
name|tst_QDateTime
operator|::
name|printNegativeYear
parameter_list|()
specifier|const
block|{
block|{
name|QDateTime
name|date
argument_list|(
name|QDate
argument_list|(
operator|-
literal|20
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"-0020"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QDateTime
name|date
argument_list|(
name|QDate
argument_list|(
operator|-
literal|3
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"-0003"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QDateTime
name|date
argument_list|(
name|QDate
argument_list|(
operator|-
literal|400
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"-0400"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|roundtripGermanLocale
name|void
name|tst_QDateTime
operator|::
name|roundtripGermanLocale
parameter_list|()
specifier|const
block|{
comment|/* This code path should not result in warnings. */
specifier|const
name|QDateTime
name|theDateTime
argument_list|(
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
decl_stmt|;
name|theDateTime
operator|.
name|fromString
argument_list|(
name|theDateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|TextDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|TextDate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|utcOffsetLessThan
name|void
name|tst_QDateTime
operator|::
name|utcOffsetLessThan
parameter_list|()
specifier|const
block|{
name|QDateTime
name|dt1
argument_list|(
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|QDateTime
name|dt2
argument_list|(
name|dt1
argument_list|)
decl_stmt|;
name|dt1
operator|.
name|setUtcOffset
argument_list|(
operator|-
operator|(
literal|2
operator|*
literal|60
operator|*
literal|60
operator|)
argument_list|)
expr_stmt|;
comment|// Minus two hours.
name|dt2
operator|.
name|setUtcOffset
argument_list|(
operator|-
operator|(
literal|3
operator|*
literal|60
operator|*
literal|60
operator|)
argument_list|)
expr_stmt|;
comment|// Minus three hours.
name|QVERIFY
argument_list|(
name|dt1
operator|!=
name|dt2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|dt1
operator|==
name|dt2
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|dt1
operator|<
name|dt2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|dt2
operator|<
name|dt1
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QDateTime
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdatetime.moc"
end_include
end_unit
