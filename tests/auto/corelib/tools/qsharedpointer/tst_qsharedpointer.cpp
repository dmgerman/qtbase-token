begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Copyright (C) 2012 Intel Corporation. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_define
DECL|macro|QT_SHAREDPOINTER_TRACK_POINTERS
define|#
directive|define
name|QT_SHAREDPOINTER_TRACK_POINTERS
end_define
begin_include
include|#
directive|include
file|"qsharedpointer.h"
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/QHash>
end_include
begin_include
include|#
directive|include
file|<QtCore/QMap>
end_include
begin_include
include|#
directive|include
file|<QtCore/QThread>
end_include
begin_include
include|#
directive|include
file|<QtCore/QVector>
end_include
begin_include
include|#
directive|include
file|"externaltests.h"
end_include
begin_include
include|#
directive|include
file|"forwarddeclared.h"
end_include
begin_include
include|#
directive|include
file|"wrapper.h"
end_include
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_include
include|#
directive|include
file|<time.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_namespace
DECL|namespace|QtSharedPointer
namespace|namespace
name|QtSharedPointer
block|{
name|Q_CORE_EXPORT
name|void
name|internalSafetyCheckCleanCheck
parameter_list|()
function_decl|;
block|}
end_namespace
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_class
DECL|class|tst_QSharedPointer
class|class
name|tst_QSharedPointer
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|basics_data
parameter_list|()
function_decl|;
name|void
name|basics
parameter_list|()
function_decl|;
name|void
name|operators
parameter_list|()
function_decl|;
name|void
name|swap
parameter_list|()
function_decl|;
name|void
name|useOfForwardDeclared
parameter_list|()
function_decl|;
name|void
name|memoryManagement
parameter_list|()
function_decl|;
name|void
name|dropLastReferenceOfForwardDeclared
parameter_list|()
function_decl|;
name|void
name|downCast
parameter_list|()
function_decl|;
name|void
name|functionCallDownCast
parameter_list|()
function_decl|;
name|void
name|upCast
parameter_list|()
function_decl|;
name|void
name|qobjectWeakManagement
parameter_list|()
function_decl|;
name|void
name|noSharedPointerFromWeakQObject
parameter_list|()
function_decl|;
name|void
name|sharedPointerFromQObjectWithWeak
parameter_list|()
function_decl|;
name|void
name|weakQObjectFromSharedPointer
parameter_list|()
function_decl|;
name|void
name|objectCast
parameter_list|()
function_decl|;
name|void
name|differentPointers
parameter_list|()
function_decl|;
name|void
name|virtualBaseDifferentPointers
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QTEST_NO_RTTI
name|void
name|dynamicCast
parameter_list|()
function_decl|;
name|void
name|dynamicCastDifferentPointers
parameter_list|()
function_decl|;
name|void
name|dynamicCastVirtualBase
parameter_list|()
function_decl|;
name|void
name|dynamicCastFailure
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|constCorrectness
parameter_list|()
function_decl|;
name|void
name|customDeleter
parameter_list|()
function_decl|;
name|void
name|lambdaCustomDeleter
parameter_list|()
function_decl|;
name|void
name|creating
parameter_list|()
function_decl|;
name|void
name|creatingQObject
parameter_list|()
function_decl|;
name|void
name|mixTrackingPointerCode
parameter_list|()
function_decl|;
name|void
name|reentrancyWhileDestructing
parameter_list|()
function_decl|;
name|void
name|threadStressTest_data
parameter_list|()
function_decl|;
name|void
name|threadStressTest
parameter_list|()
function_decl|;
name|void
name|map
parameter_list|()
function_decl|;
name|void
name|hash
parameter_list|()
function_decl|;
name|void
name|validConstructs
parameter_list|()
function_decl|;
name|void
name|invalidConstructs_data
parameter_list|()
function_decl|;
name|void
name|invalidConstructs
parameter_list|()
function_decl|;
public|public
name|slots
public|:
DECL|function|cleanup
name|void
name|cleanup
parameter_list|()
block|{
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
public|public:
DECL|function|safetyCheck
specifier|inline
name|void
name|safetyCheck
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QtSharedPointer
operator|::
name|internalSafetyCheckCleanCheck
argument_list|()
expr_stmt|;
endif|#
directive|endif
block|}
block|}
class|;
end_class
begin_function
template|template
parameter_list|<
name|typename
name|T
parameter_list|>
specifier|static
specifier|inline
DECL|function|refCountData
name|QtSharedPointer
operator|::
name|ExternalRefCountData
modifier|*
name|refCountData
parameter_list|(
specifier|const
name|QtSharedPointer
operator|::
name|ExternalRefCount
argument_list|<
name|T
argument_list|>
modifier|&
name|b
parameter_list|)
block|{
comment|// access d-pointer:
struct|struct
name|Dummy
block|{
name|void
modifier|*
name|value
decl_stmt|;
name|QtSharedPointer
operator|::
name|ExternalRefCountData
modifier|*
name|data
decl_stmt|;
block|}
struct|;
comment|// sanity checks:
name|Q_STATIC_ASSERT
argument_list|(
sizeof|sizeof
argument_list|(
name|QtSharedPointer
operator|::
name|ExternalRefCount
argument_list|<
name|T
argument_list|>
argument_list|)
operator|==
sizeof|sizeof
argument_list|(
name|Dummy
argument_list|)
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|Dummy
operator|*
argument_list|>
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|void
operator|*
argument_list|>
argument_list|(
operator|&
name|b
argument_list|)
argument_list|)
operator|->
name|value
operator|==
name|b
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
return|return
cast|static_cast
argument_list|<
specifier|const
name|Dummy
operator|*
argument_list|>
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|void
operator|*
argument_list|>
argument_list|(
operator|&
name|b
argument_list|)
argument_list|)
operator|->
name|data
return|;
block|}
end_function
begin_class
DECL|class|Data
class|class
name|Data
block|{
public|public:
DECL|member|destructorCounter
specifier|static
name|int
name|destructorCounter
decl_stmt|;
DECL|member|generationCounter
specifier|static
name|int
name|generationCounter
decl_stmt|;
DECL|member|generation
name|int
name|generation
decl_stmt|;
DECL|function|Data
name|Data
parameter_list|()
member_init_list|:
name|generation
argument_list|(
operator|++
name|generationCounter
argument_list|)
block|{ }
DECL|function|~Data
specifier|virtual
name|~
name|Data
parameter_list|()
block|{
if|if
condition|(
name|generation
operator|<=
literal|0
condition|)
name|qFatal
argument_list|(
literal|"tst_qsharedpointer: Double deletion!"
argument_list|)
expr_stmt|;
name|generation
operator|=
literal|0
expr_stmt|;
operator|++
name|destructorCounter
expr_stmt|;
block|}
DECL|function|doDelete
name|void
name|doDelete
parameter_list|()
block|{
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|alsoDelete
name|bool
name|alsoDelete
parameter_list|()
block|{
name|doDelete
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|function|virtualDelete
specifier|virtual
name|void
name|virtualDelete
parameter_list|()
block|{
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|classLevel
specifier|virtual
name|int
name|classLevel
parameter_list|()
block|{
return|return
literal|1
return|;
block|}
block|}
class|;
end_class
begin_decl_stmt
DECL|member|generationCounter
name|int
name|Data
operator|::
name|generationCounter
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|destructorCounter
name|int
name|Data
operator|::
name|destructorCounter
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|basics_data
name|void
name|tst_QSharedPointer
operator|::
name|basics_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isNull"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-null"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|basics
name|void
name|tst_QSharedPointer
operator|::
name|basics
parameter_list|()
block|{
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
decl_stmt|;
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weakref
decl_stmt|;
name|QCOMPARE
argument_list|(
sizeof|sizeof
argument_list|(
name|ptr
argument_list|)
argument_list|,
literal|2
operator|*
sizeof|sizeof
argument_list|(
name|void
operator|*
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
sizeof|sizeof
argument_list|(
name|weakref
argument_list|)
argument_list|,
literal|2
operator|*
sizeof|sizeof
argument_list|(
name|void
operator|*
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|Data
modifier|*
name|aData
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|isNull
condition|)
name|aData
operator|=
operator|new
name|Data
expr_stmt|;
name|Data
modifier|*
name|otherData
init|=
operator|new
name|Data
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
argument_list|(
name|aData
argument_list|)
decl_stmt|;
block|{
comment|// basic self tests
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|isNull
argument_list|()
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bool
argument_list|(
name|ptr
argument_list|)
argument_list|,
operator|!
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|!
name|ptr
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|operator
name|->
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|Data
modifier|&
name|dataReference
init|=
operator|*
name|ptr
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|&
name|dataReference
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ptr
operator|!=
name|aData
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|aData
operator|!=
name|ptr
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|!=
name|otherData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|otherData
operator|!=
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ptr
operator|==
name|otherData
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|otherData
operator|==
name|ptr
operator|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
block|{
comment|// create another object:
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|otherCopy
argument_list|(
name|otherData
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|!=
name|otherCopy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|otherCopy
operator|!=
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ptr
operator|==
name|otherCopy
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|otherCopy
operator|==
name|ptr
operator|)
argument_list|)
expr_stmt|;
comment|// otherData is deleted here
block|}
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
block|{
comment|// create a copy:
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|copy
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|copy
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|copy
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|copy
operator|!=
name|ptr
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ptr
operator|!=
name|copy
operator|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
argument_list|,
name|ptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
argument_list|,
name|copy
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|isNull
argument_list|()
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|copy
operator|==
name|aData
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
block|{
comment|// create a weak reference:
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weak
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|!
name|weak
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bool
argument_list|(
name|weak
argument_list|)
argument_list|,
operator|!
name|isNull
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|weak
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ptr
operator|!=
name|weak
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|weak
operator|!=
name|ptr
operator|)
argument_list|)
expr_stmt|;
comment|// create another reference:
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weak2
argument_list|(
name|weak
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|weak2
operator|.
name|isNull
argument_list|()
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|!
name|weak2
argument_list|,
name|isNull
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bool
argument_list|(
name|weak2
argument_list|)
argument_list|,
operator|!
name|isNull
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak2
operator|==
name|weak
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|==
name|weak2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|weak2
operator|!=
name|weak
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|weak
operator|!=
name|weak2
operator|)
argument_list|)
expr_stmt|;
comment|// create a strong reference back:
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|strong
argument_list|(
name|weak
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|strong
operator|==
name|weak
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|strong
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|strong
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|||
name|refCountData
argument_list|(
name|ptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
comment|// aData is deleted here
block|}
end_function
begin_function
DECL|function|operators
name|void
name|tst_QSharedPointer
operator|::
name|operators
parameter_list|()
block|{
name|QSharedPointer
argument_list|<
name|char
argument_list|>
name|p1
decl_stmt|;
name|QSharedPointer
argument_list|<
name|char
argument_list|>
name|p2
argument_list|(
operator|new
name|char
argument_list|)
decl_stmt|;
name|qptrdiff
name|diff
init|=
name|p2
operator|.
name|data
argument_list|()
operator|-
name|p1
operator|.
name|data
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|.
name|data
argument_list|()
operator|!=
name|p2
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|diff
operator|!=
literal|0
argument_list|)
expr_stmt|;
comment|// operator-
name|QCOMPARE
argument_list|(
name|p2
operator|-
name|p1
operator|.
name|data
argument_list|()
argument_list|,
name|diff
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p2
operator|.
name|data
argument_list|()
operator|-
name|p1
argument_list|,
name|diff
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p2
operator|-
name|p1
argument_list|,
name|diff
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p1
operator|-
name|p2
argument_list|,
operator|-
name|diff
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p1
operator|-
name|p1
argument_list|,
name|qptrdiff
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p2
operator|-
name|p2
argument_list|,
name|qptrdiff
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// operator<
name|QVERIFY
argument_list|(
name|p1
operator|<
name|p2
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|.
name|data
argument_list|()
operator|<
name|p2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|<
name|p2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|p2
operator|<
name|p1
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|p2
operator|<
name|p2
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|p1
operator|<
name|p1
operator|)
argument_list|)
expr_stmt|;
comment|// qHash
name|QCOMPARE
argument_list|(
name|qHash
argument_list|(
name|p1
argument_list|)
argument_list|,
name|qHash
argument_list|(
name|p1
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qHash
argument_list|(
name|p2
argument_list|)
argument_list|,
name|qHash
argument_list|(
name|p2
operator|.
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swap
name|void
name|tst_QSharedPointer
operator|::
name|swap
parameter_list|()
block|{
name|QSharedPointer
argument_list|<
name|int
argument_list|>
name|p1
decl_stmt|,
name|p2
argument_list|(
operator|new
name|int
argument_list|(
literal|42
argument_list|)
argument_list|)
decl_stmt|,
name|control
init|=
name|p2
decl_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|!=
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p2
operator|==
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
name|p2
operator|==
literal|42
argument_list|)
expr_stmt|;
name|p1
operator|.
name|swap
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|==
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p2
operator|!=
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
name|p1
operator|==
literal|42
argument_list|)
expr_stmt|;
name|p1
operator|.
name|swap
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|!=
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p2
operator|==
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
name|p2
operator|==
literal|42
argument_list|)
expr_stmt|;
name|qSwap
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p1
operator|==
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p1
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p2
operator|!=
name|control
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
name|p1
operator|==
literal|42
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|useOfForwardDeclared
name|void
name|tst_QSharedPointer
operator|::
name|useOfForwardDeclared
parameter_list|()
block|{
comment|// this just a compile test: use the forward-declared class
name|QSharedPointer
argument_list|<
name|ForwardDeclared
argument_list|>
name|sp
decl_stmt|;
block|}
end_function
begin_function
DECL|function|memoryManagement
name|void
name|tst_QSharedPointer
operator|::
name|memoryManagement
parameter_list|()
block|{
name|int
name|generation
init|=
name|Data
operator|::
name|generationCounter
operator|+
literal|1
decl_stmt|;
name|int
name|destructorCounter
init|=
name|Data
operator|::
name|destructorCounter
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|ptr
operator|=
name|ptr
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
name|generation
argument_list|)
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|copy
init|=
name|ptr
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
comment|// copy goes out of scope, ptr continues
block|}
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
name|generation
argument_list|)
expr_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weak
init|=
name|ptr
decl_stmt|;
name|weak
operator|=
name|ptr
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|weak
operator|=
name|weak
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|strong
init|=
name|weak
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|strong
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
name|generation
argument_list|)
expr_stmt|;
comment|// both weak and strong go out of scope
block|}
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
name|generation
argument_list|)
expr_stmt|;
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weak
init|=
name|ptr
decl_stmt|;
name|ptr
operator|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|()
expr_stmt|;
comment|// destructor must have been called
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
name|destructorCounter
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// if we create a strong pointer from the weak, it must still be null
name|ptr
operator|=
name|weak
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
argument_list|,
operator|(
name|Data
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dropLastReferenceOfForwardDeclared
name|void
name|tst_QSharedPointer
operator|::
name|dropLastReferenceOfForwardDeclared
parameter_list|()
block|{
comment|// pointer to shared-pointer is weird, but we need to do it so that
comment|// we can drop the last reference in a different .cpp than where it was created
name|forwardDeclaredDestructorRunCount
operator|=
literal|0
expr_stmt|;
operator|delete
name|forwardPointer
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|forwardDeclaredDestructorRunCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|DerivedData
class|class
name|DerivedData
super|:
specifier|public
name|Data
block|{
public|public:
DECL|member|derivedDestructorCounter
specifier|static
name|int
name|derivedDestructorCounter
decl_stmt|;
DECL|member|moreData
name|int
name|moreData
decl_stmt|;
DECL|function|DerivedData
name|DerivedData
parameter_list|()
member_init_list|:
name|moreData
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|function|~DerivedData
name|~
name|DerivedData
parameter_list|()
block|{
operator|++
name|derivedDestructorCounter
expr_stmt|;
block|}
DECL|function|virtualDelete
specifier|virtual
name|void
name|virtualDelete
parameter_list|()
block|{
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|classLevel
specifier|virtual
name|int
name|classLevel
parameter_list|()
block|{
return|return
literal|2
return|;
block|}
block|}
class|;
end_class
begin_decl_stmt
DECL|member|derivedDestructorCounter
name|int
name|DerivedData
operator|::
name|derivedDestructorCounter
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|Stuffing
class|class
name|Stuffing
block|{
public|public:
DECL|member|buffer
name|char
name|buffer
index|[
literal|16
index|]
decl_stmt|;
DECL|function|Stuffing
name|Stuffing
parameter_list|()
block|{
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
sizeof|sizeof
name|buffer
condition|;
operator|++
name|i
control|)
name|buffer
index|[
name|i
index|]
operator|=
literal|16
operator|-
name|i
expr_stmt|;
block|}
DECL|function|~Stuffing
specifier|virtual
name|~
name|Stuffing
parameter_list|()
block|{ }
block|}
class|;
end_class
begin_class
DECL|class|DiffPtrDerivedData
class|class
name|DiffPtrDerivedData
super|:
specifier|public
name|Stuffing
super|,
specifier|public
name|Data
block|{
public|public:
DECL|function|classLevel
specifier|virtual
name|int
name|classLevel
parameter_list|()
block|{
return|return
literal|3
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|VirtualDerived
class|class
name|VirtualDerived
super|:
specifier|virtual public
name|Data
block|{
public|public:
DECL|member|moreData
name|int
name|moreData
decl_stmt|;
DECL|function|VirtualDerived
name|VirtualDerived
parameter_list|()
member_init_list|:
name|moreData
argument_list|(
literal|0xc0ffee
argument_list|)
block|{ }
DECL|function|classLevel
specifier|virtual
name|int
name|classLevel
parameter_list|()
block|{
return|return
literal|4
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|downCast
name|void
name|tst_QSharedPointer
operator|::
name|downCast
parameter_list|()
block|{
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|qSharedPointerCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
decl_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ptr
operator|!=
name|baseptr
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|baseptr
operator|!=
name|ptr
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|!=
name|other
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|other
operator|!=
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|ptr
operator|==
name|other
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|other
operator|==
name|ptr
operator|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|ptr
decl_stmt|;
block|}
name|int
name|destructorCount
decl_stmt|;
name|destructorCount
operator|=
name|DerivedData
operator|::
name|derivedDestructorCounter
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|)
decl_stmt|;
name|baseptr
operator|=
name|ptr
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
block|}
block|}
name|QCOMPARE
argument_list|(
name|DerivedData
operator|::
name|derivedDestructorCounter
argument_list|,
name|destructorCount
operator|+
literal|1
argument_list|)
expr_stmt|;
name|destructorCount
operator|=
name|DerivedData
operator|::
name|derivedDestructorCounter
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|)
decl_stmt|;
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|ptr
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|ptr
operator|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|DerivedData
operator|::
name|derivedDestructorCounter
argument_list|,
name|destructorCount
operator|+
literal|1
argument_list|)
expr_stmt|;
name|destructorCount
operator|=
name|DerivedData
operator|::
name|derivedDestructorCounter
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|)
decl_stmt|;
name|QWeakPointer
argument_list|<
name|DerivedData
argument_list|>
name|weakptr
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|weakptr
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|baseweakptr
init|=
name|weakptr
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseweakptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|DerivedData
operator|::
name|derivedDestructorCounter
argument_list|,
name|destructorCount
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|functionDataByValue
name|void
name|functionDataByValue
parameter_list|(
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|p
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_empty_stmt
DECL|function|functionDataByValue
empty_stmt|;
end_empty_stmt
begin_function
DECL|function|functionDataByRef
name|void
name|functionDataByRef
parameter_list|(
specifier|const
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
modifier|&
name|p
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_empty_stmt
DECL|function|functionDataByRef
empty_stmt|;
end_empty_stmt
begin_function
DECL|function|functionCallDownCast
name|void
name|tst_QSharedPointer
operator|::
name|functionCallDownCast
parameter_list|()
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|p
argument_list|(
operator|new
name|DerivedData
argument_list|()
argument_list|)
decl_stmt|;
name|functionDataByValue
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|functionDataByRef
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|upCast
name|void
name|tst_QSharedPointer
operator|::
name|upCast
parameter_list|()
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|)
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|qSharedPointerCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|qWeakPointerCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weakptr
init|=
name|baseptr
decl_stmt|;
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|qSharedPointerCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
name|weakptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|baseptr
operator|.
name|staticCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|OtherObject
class|class
name|OtherObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
block|}
class|;
end_class
begin_function
DECL|function|qobjectWeakManagement
name|void
name|tst_QSharedPointer
operator|::
name|qobjectWeakManagement
parameter_list|()
block|{
block|{
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
decl_stmt|;
name|weak
operator|=
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|weak
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QObject
modifier|*
name|obj
init|=
operator|new
name|QObject
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|data
argument_list|()
operator|==
name|obj
argument_list|)
expr_stmt|;
comment|// now delete
operator|delete
name|obj
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
comment|// same, bit with operator=
name|QObject
modifier|*
name|obj
init|=
operator|new
name|QObject
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
decl_stmt|;
name|weak
operator|=
name|obj
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|data
argument_list|()
operator|==
name|obj
argument_list|)
expr_stmt|;
comment|// now delete
operator|delete
name|obj
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
comment|// delete triggered by parent
name|QObject
modifier|*
name|obj
decl_stmt|,
modifier|*
name|parent
decl_stmt|;
name|parent
operator|=
operator|new
name|QObject
expr_stmt|;
name|obj
operator|=
operator|new
name|QObject
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
argument_list|(
name|obj
argument_list|)
decl_stmt|;
comment|// now delete the parent
operator|delete
name|parent
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
comment|// same as above, but set the parent after QWeakPointer is created
name|QObject
modifier|*
name|obj
decl_stmt|,
modifier|*
name|parent
decl_stmt|;
name|obj
operator|=
operator|new
name|QObject
expr_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|parent
operator|=
operator|new
name|QObject
expr_stmt|;
name|obj
operator|->
name|setParent
argument_list|(
name|parent
argument_list|)
expr_stmt|;
comment|// now delete the parent
operator|delete
name|parent
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
comment|// with two QWeakPointers
name|QObject
modifier|*
name|obj
init|=
operator|new
name|QObject
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
argument_list|(
name|obj
argument_list|)
decl_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak2
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|weak2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|==
name|weak2
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|obj
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
comment|// same, but delete the pointer while two QWeakPointers exist
name|QObject
modifier|*
name|obj
init|=
operator|new
name|QObject
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
argument_list|(
name|obj
argument_list|)
decl_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak2
argument_list|(
name|obj
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|weak2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|obj
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak2
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noSharedPointerFromWeakQObject
name|void
name|tst_QSharedPointer
operator|::
name|noSharedPointerFromWeakQObject
parameter_list|()
block|{
comment|// you're not allowed to create a QSharedPointer from an unmanaged QObject
name|QObject
name|obj
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
argument_list|(
operator|&
name|obj
argument_list|)
decl_stmt|;
block|{
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QSharedPointer: cannot create a QSharedPointer from a QObject-tracking QWeakPointer"
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
name|strong
init|=
name|weak
operator|.
name|toStrongRef
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|strong
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QSharedPointer: cannot create a QSharedPointer from a QObject-tracking QWeakPointer"
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
name|strong
init|=
name|weak
decl_stmt|;
name|QVERIFY
argument_list|(
name|strong
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|weak
operator|.
name|data
argument_list|()
argument_list|,
operator|&
name|obj
argument_list|)
expr_stmt|;
comment|// if something went wrong, we'll probably crash here
block|}
end_function
begin_function
DECL|function|sharedPointerFromQObjectWithWeak
name|void
name|tst_QSharedPointer
operator|::
name|sharedPointerFromQObjectWithWeak
parameter_list|()
block|{
name|QObject
modifier|*
name|ptr
init|=
operator|new
name|QObject
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
init|=
name|ptr
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
name|shared
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|shared
operator|.
name|data
argument_list|()
argument_list|,
name|ptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|weak
operator|.
name|data
argument_list|()
argument_list|,
name|ptr
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|weakQObjectFromSharedPointer
name|void
name|tst_QSharedPointer
operator|::
name|weakQObjectFromSharedPointer
parameter_list|()
block|{
comment|// this is the inverse of the above: you're allowed to create a QWeakPointer
comment|// from a managed QObject
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
name|shared
argument_list|(
operator|new
name|QObject
argument_list|)
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weak
init|=
name|shared
operator|.
name|data
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// delete:
name|shared
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|weak
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|objectCast
name|void
name|tst_QSharedPointer
operator|::
name|objectCast
parameter_list|()
block|{
block|{
name|OtherObject
modifier|*
name|data
init|=
operator|new
name|OtherObject
decl_stmt|;
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|data
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|==
name|baseptr
argument_list|)
expr_stmt|;
comment|// perform object cast
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
name|ptr
init|=
name|qSharedPointerObjectCast
argument_list|<
name|OtherObject
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|ptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
comment|// again:
name|ptr
operator|=
name|baseptr
operator|.
name|objectCast
argument_list|<
name|OtherObject
argument_list|>
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
comment|// again:
name|ptr
operator|=
name|qobject_cast
argument_list|<
name|OtherObject
operator|*
argument_list|>
argument_list|(
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
comment|// again:
name|ptr
operator|=
name|qobject_cast
argument_list|<
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
argument_list|>
argument_list|(
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
specifier|const
name|OtherObject
modifier|*
name|data
init|=
operator|new
name|OtherObject
decl_stmt|;
name|QSharedPointer
argument_list|<
specifier|const
name|QObject
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
specifier|const
name|QObject
argument_list|>
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|data
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|data
operator|==
name|baseptr
argument_list|)
expr_stmt|;
comment|// perform object cast
name|QSharedPointer
argument_list|<
specifier|const
name|OtherObject
argument_list|>
name|ptr
init|=
name|qSharedPointerObjectCast
argument_list|<
specifier|const
name|OtherObject
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|ptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
comment|// again:
name|ptr
operator|=
name|baseptr
operator|.
name|objectCast
argument_list|<
specifier|const
name|OtherObject
argument_list|>
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
comment|// again:
name|ptr
operator|=
name|qobject_cast
argument_list|<
specifier|const
name|OtherObject
operator|*
argument_list|>
argument_list|(
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
comment|// again:
name|ptr
operator|=
name|qobject_cast
argument_list|<
name|QSharedPointer
argument_list|<
specifier|const
name|OtherObject
argument_list|>
argument_list|>
argument_list|(
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|data
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|OtherObject
modifier|*
name|data
init|=
operator|new
name|OtherObject
decl_stmt|;
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|weakptr
init|=
name|ptr
decl_stmt|;
block|{
comment|// perform object cast
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
name|otherptr
init|=
name|qSharedPointerObjectCast
argument_list|<
name|OtherObject
argument_list|>
argument_list|(
name|weakptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|otherptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
comment|// again:
name|otherptr
operator|=
name|qobject_cast
argument_list|<
name|OtherObject
operator|*
argument_list|>
argument_list|(
name|weakptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|otherptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
comment|// again:
name|otherptr
operator|=
name|qobject_cast
argument_list|<
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
argument_list|>
argument_list|(
name|weakptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|otherptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
block|}
comment|// drop the reference:
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|weakptr
operator|.
name|toStrongRef
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// verify that the object casts fail without crash
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
name|otherptr
init|=
name|qSharedPointerObjectCast
argument_list|<
name|OtherObject
argument_list|>
argument_list|(
name|weakptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|otherptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// again:
name|otherptr
operator|=
name|qobject_cast
argument_list|<
name|OtherObject
operator|*
argument_list|>
argument_list|(
name|weakptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|otherptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// again:
name|otherptr
operator|=
name|qobject_cast
argument_list|<
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
argument_list|>
argument_list|(
name|weakptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|otherptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|differentPointers
name|void
name|tst_QSharedPointer
operator|::
name|differentPointers
parameter_list|()
block|{
block|{
name|DiffPtrDerivedData
modifier|*
name|aData
init|=
operator|new
name|DiffPtrDerivedData
decl_stmt|;
name|Data
modifier|*
name|aBase
init|=
name|aData
decl_stmt|;
comment|// ensure that this compiler isn't broken
if|if
condition|(
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aData
argument_list|)
operator|==
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aBase
argument_list|)
condition|)
name|QFAIL
argument_list|(
literal|"Something went very wrong -- we couldn't create two different pointers to the same object"
argument_list|)
expr_stmt|;
if|if
condition|(
name|aData
operator|!=
name|aBase
operator|||
name|aBase
operator|!=
name|aData
condition|)
name|QSKIP
argument_list|(
literal|"Broken compiler"
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|qSharedPointerCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|qDebug
argument_list|(
literal|"naked: orig: %p; base: %p (%s) -- QSharedPointer: orig: %p; base %p (%s) -- result: %s"
argument_list|,
name|aData
argument_list|,
name|aBase
argument_list|,
name|aData
operator|==
name|aBase
condition|?
literal|"equal"
else|:
literal|"not equal"
argument_list|,
name|ptr
operator|.
name|data
argument_list|()
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|,
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|baseptr
operator|.
name|data
argument_list|()
condition|?
literal|"equal"
else|:
literal|"not equal"
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
operator|==
name|aData
condition|?
literal|"equal"
else|:
literal|"not equal"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|.
name|data
argument_list|()
operator|==
name|ptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aBase
operator|==
name|ptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|ptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aBase
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|ptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|.
name|data
argument_list|()
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aBase
operator|==
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aBase
operator|==
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|.
name|data
argument_list|()
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|baseptr
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|DiffPtrDerivedData
modifier|*
name|aData
init|=
operator|new
name|DiffPtrDerivedData
decl_stmt|;
name|Data
modifier|*
name|aBase
init|=
name|aData
decl_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aData
argument_list|)
operator|!=
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aBase
argument_list|)
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
name|ptr
init|=
name|qSharedPointerCast
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aData
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|DiffPtrDerivedData
modifier|*
name|aData
init|=
operator|new
name|DiffPtrDerivedData
decl_stmt|;
name|Data
modifier|*
name|aBase
init|=
name|aData
decl_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aData
argument_list|)
operator|!=
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aBase
argument_list|)
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|ptr
decl_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|virtualBaseDifferentPointers
name|void
name|tst_QSharedPointer
operator|::
name|virtualBaseDifferentPointers
parameter_list|()
block|{
block|{
name|VirtualDerived
modifier|*
name|aData
init|=
operator|new
name|VirtualDerived
decl_stmt|;
name|Data
modifier|*
name|aBase
init|=
name|aData
decl_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aData
argument_list|)
operator|!=
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aBase
argument_list|)
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|qSharedPointerCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|VirtualDerived
modifier|*
name|aData
init|=
operator|new
name|VirtualDerived
decl_stmt|;
name|Data
modifier|*
name|aBase
init|=
name|aData
decl_stmt|;
name|QVERIFY
argument_list|(
name|aData
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aData
argument_list|)
operator|!=
operator|*
cast|reinterpret_cast
argument_list|<
name|quintptr
operator|*
argument_list|>
argument_list|(
operator|&
name|aBase
argument_list|)
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|ptr
decl_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|baseptr
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
operator|==
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|aBase
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QTEST_NO_RTTI
end_ifndef
begin_function
DECL|function|dynamicCast
name|void
name|tst_QSharedPointer
operator|::
name|dynamicCast
parameter_list|()
block|{
name|DerivedData
modifier|*
name|aData
init|=
operator|new
name|DerivedData
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weakptr
init|=
name|baseptr
decl_stmt|;
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
name|weakptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|baseptr
operator|.
name|dynamicCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dynamicCastDifferentPointers
name|void
name|tst_QSharedPointer
operator|::
name|dynamicCastDifferentPointers
parameter_list|()
block|{
comment|// DiffPtrDerivedData derives from both Data and Stuffing
name|DiffPtrDerivedData
modifier|*
name|aData
init|=
operator|new
name|DiffPtrDerivedData
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
name|derivedptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weakptr
init|=
name|baseptr
decl_stmt|;
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
name|derivedptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|(
name|weakptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
name|derivedptr
init|=
name|baseptr
operator|.
name|dynamicCast
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|Stuffing
modifier|*
name|nakedptr
init|=
cast|dynamic_cast
argument_list|<
name|Stuffing
operator|*
argument_list|>
argument_list|(
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|nakedptr
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|Stuffing
argument_list|>
name|otherbaseptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|Stuffing
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|otherbaseptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|otherbaseptr
operator|==
name|nakedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|otherbaseptr
operator|.
name|data
argument_list|()
argument_list|,
name|nakedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|DiffPtrDerivedData
operator|*
argument_list|>
argument_list|(
name|otherbaseptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|aData
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|dynamicCastVirtualBase
name|void
name|tst_QSharedPointer
operator|::
name|dynamicCastVirtualBase
parameter_list|()
block|{
name|VirtualDerived
modifier|*
name|aData
init|=
operator|new
name|VirtualDerived
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
name|derivedptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|VirtualDerived
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weakptr
init|=
name|baseptr
decl_stmt|;
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
name|derivedptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|VirtualDerived
argument_list|>
argument_list|(
name|weakptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
name|derivedptr
init|=
name|baseptr
operator|.
name|dynamicCast
argument_list|<
name|VirtualDerived
argument_list|>
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|baseptr
operator|==
name|derivedptr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Data
operator|*
argument_list|>
argument_list|(
name|derivedptr
operator|.
name|data
argument_list|()
argument_list|)
argument_list|,
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dynamicCastFailure
name|void
name|tst_QSharedPointer
operator|::
name|dynamicCastFailure
parameter_list|()
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
cast|dynamic_cast
argument_list|<
name|DerivedData
operator|*
argument_list|>
argument_list|(
name|baseptr
operator|.
name|data
argument_list|()
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|qSharedPointerDynamicCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
name|baseptr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|derivedptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|derivedptr
init|=
name|baseptr
operator|.
name|dynamicCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|derivedptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|weakref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|refCountData
argument_list|(
name|baseptr
argument_list|)
operator|->
name|strongref
operator|.
name|load
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|constCorrectness
name|void
name|tst_QSharedPointer
operator|::
name|constCorrectness
parameter_list|()
block|{
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
specifier|const
name|Data
argument_list|>
name|cptr
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
specifier|volatile
name|Data
argument_list|>
name|vptr
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|cptr
operator|=
name|ptr
expr_stmt|;
name|vptr
operator|=
name|ptr
expr_stmt|;
name|ptr
operator|=
name|qSharedPointerConstCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|cptr
argument_list|)
expr_stmt|;
name|ptr
operator|=
name|qSharedPointerConstCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|vptr
argument_list|)
expr_stmt|;
name|ptr
operator|=
name|cptr
operator|.
name|constCast
argument_list|<
name|Data
argument_list|>
argument_list|()
expr_stmt|;
name|ptr
operator|=
name|vptr
operator|.
name|constCast
argument_list|<
name|Data
argument_list|>
argument_list|()
expr_stmt|;
name|QSharedPointer
argument_list|<
specifier|const
specifier|volatile
name|Data
argument_list|>
name|cvptr
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
specifier|const
specifier|volatile
name|Data
argument_list|>
name|cvptr2
argument_list|(
name|cptr
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
specifier|const
specifier|volatile
name|Data
argument_list|>
name|cvptr3
argument_list|(
name|vptr
argument_list|)
decl_stmt|;
name|cvptr
operator|=
name|ptr
expr_stmt|;
name|cvptr2
operator|=
name|cptr
expr_stmt|;
name|cvptr3
operator|=
name|vptr
expr_stmt|;
name|ptr
operator|=
name|qSharedPointerConstCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|cvptr
argument_list|)
expr_stmt|;
name|ptr
operator|=
name|cvptr
operator|.
name|constCast
argument_list|<
name|Data
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|Data
modifier|*
name|aData
init|=
operator|new
name|Data
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
specifier|const
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|cptr
init|=
name|ptr
decl_stmt|;
name|ptr
operator|=
name|cptr
expr_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
init|=
name|qSharedPointerCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|cptr
argument_list|)
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_DYNAMIC_CAST
name|other
operator|=
name|qSharedPointerDynamicCast
argument_list|<
name|Data
argument_list|>
argument_list|(
name|cptr
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|cptr
operator|.
name|data
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cptr
operator|.
name|operator
name|->
argument_list|()
argument_list|,
name|aData
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|customDeleterFnCallCount
specifier|static
name|int
name|customDeleterFnCallCount
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|customDeleterFn
name|void
name|customDeleterFn
parameter_list|(
name|Data
modifier|*
name|ptr
parameter_list|)
block|{
operator|++
name|customDeleterFnCallCount
expr_stmt|;
operator|delete
name|ptr
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|refcount
specifier|static
name|int
name|refcount
decl_stmt|;
end_decl_stmt
begin_struct
template|template
parameter_list|<
name|typename
name|T
parameter_list|>
struct|struct
DECL|struct|CustomDeleter
name|CustomDeleter
block|{
DECL|function|CustomDeleter
name|CustomDeleter
parameter_list|()
block|{
operator|++
name|refcount
expr_stmt|;
block|}
DECL|function|CustomDeleter
name|CustomDeleter
parameter_list|(
specifier|const
name|CustomDeleter
modifier|&
parameter_list|)
block|{
operator|++
name|refcount
expr_stmt|;
block|}
DECL|function|~CustomDeleter
name|~
name|CustomDeleter
parameter_list|()
block|{
operator|--
name|refcount
expr_stmt|;
block|}
DECL|function|operator ()
specifier|inline
name|void
name|operator
name|()
parameter_list|(
name|T
modifier|*
name|ptr
parameter_list|)
block|{
operator|delete
name|ptr
expr_stmt|;
operator|++
name|callCount
expr_stmt|;
block|}
DECL|member|callCount
specifier|static
name|int
name|callCount
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
DECL|member|callCount
template|template
parameter_list|<
name|typename
name|T
parameter_list|>
name|int
name|CustomDeleter
argument_list|<
name|T
argument_list|>
operator|::
name|callCount
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|customDeleter
name|void
name|tst_QSharedPointer
operator|::
name|customDeleter
parameter_list|()
block|{
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
argument_list|(
operator|new
name|Data
argument_list|,
operator|&
name|Data
operator|::
name|doDelete
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr2
argument_list|(
operator|new
name|Data
argument_list|,
operator|&
name|Data
operator|::
name|alsoDelete
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr3
argument_list|(
operator|new
name|Data
argument_list|,
operator|&
name|Data
operator|::
name|virtualDelete
argument_list|)
decl_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
argument_list|(
operator|new
name|DerivedData
argument_list|,
operator|&
name|Data
operator|::
name|doDelete
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr2
argument_list|(
operator|new
name|DerivedData
argument_list|,
operator|&
name|Data
operator|::
name|alsoDelete
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr3
argument_list|(
operator|new
name|DerivedData
argument_list|,
operator|&
name|Data
operator|::
name|virtualDelete
argument_list|)
decl_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|,
name|customDeleterFn
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|data
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|,
name|customDeleterFn
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|,
name|customDeleterFn
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ptr
operator|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|,
name|customDeleterFn
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|data
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|,
name|customDeleterFn
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|data
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|,
name|customDeleterFn
argument_list|)
decl_stmt|;
name|other
operator|=
name|ptr
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|,
name|customDeleterFn
argument_list|)
decl_stmt|;
name|other
operator|=
name|ptr
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|refcount
operator|=
literal|0
expr_stmt|;
name|CustomDeleter
argument_list|<
name|Data
argument_list|>
name|dataDeleter
decl_stmt|;
name|dataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|,
name|dataDeleter
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|data
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refcount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|dataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|,
name|dataDeleter
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
init|=
name|ptr
decl_stmt|;
name|other
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refcount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|dataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
operator|new
name|Data
argument_list|,
name|dataDeleter
argument_list|)
decl_stmt|;
name|other
operator|=
name|ptr
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refcount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|dataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|,
name|dataDeleter
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|data
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refcount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|CustomDeleter
argument_list|<
name|DerivedData
argument_list|>
name|derivedDataDeleter
decl_stmt|;
name|derivedDataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
name|dataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|,
name|derivedDataDeleter
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|data
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refcount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|derivedDataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
name|dataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|,
name|dataDeleter
argument_list|)
decl_stmt|;
name|other
operator|=
name|ptr
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refcount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
name|derivedDataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
name|dataDeleter
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|other
decl_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
argument_list|(
operator|new
name|DerivedData
argument_list|,
name|derivedDataDeleter
argument_list|)
decl_stmt|;
name|other
operator|=
name|ptr
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dataDeleter
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|derivedDataDeleter
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|refcount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|lambdaCustomDeleter
name|void
name|tst_QSharedPointer
operator|::
name|lambdaCustomDeleter
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|Q_COMPILER_LAMBDA
name|QSKIP
argument_list|(
literal|"This compiler is not in C++11 mode or does not support lambdas"
argument_list|)
expr_stmt|;
else|#
directive|else
block|{
comment|// stateless, one-argument
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
argument_list|(
operator|new
name|Data
argument_list|,
capture|[]
parameter_list|(
name|Data
modifier|*
name|d
parameter_list|)
block|{
operator|delete
name|d
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr2
argument_list|(
operator|new
name|Data
argument_list|,
capture|[]
parameter_list|(
name|Data
modifier|*
name|d
parameter_list|)
block|{
name|d
operator|->
name|doDelete
argument_list|()
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
name|customDeleterFnCallCount
operator|=
literal|0
expr_stmt|;
block|{
comment|// stateless, one-argument, modifies globals
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
argument_list|(
operator|new
name|Data
argument_list|,
capture|[]
parameter_list|(
name|Data
modifier|*
name|d
parameter_list|)
block|{
operator|++
name|customDeleterFnCallCount
expr_stmt|;
operator|delete
name|d
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customDeleterFnCallCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|{
comment|// stateful by ref, one-argument
name|int
name|i
init|=
literal|0
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
argument_list|(
operator|new
name|Data
argument_list|,
capture|[
modifier|&
name|i
capture|]
parameter_list|(
name|Data
modifier|*
name|d
parameter_list|)
block|{
name|i
operator|=
literal|42
expr_stmt|;
operator|delete
name|d
expr_stmt|;
block|}
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i
argument_list|,
literal|42
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|customQObjectDeleterFn
name|void
name|customQObjectDeleterFn
parameter_list|(
name|QObject
modifier|*
name|obj
parameter_list|)
block|{
operator|++
name|customDeleterFnCallCount
expr_stmt|;
operator|delete
name|obj
expr_stmt|;
block|}
end_function
begin_function
DECL|function|creating
name|void
name|tst_QSharedPointer
operator|::
name|creating
parameter_list|()
block|{
name|Data
operator|::
name|generationCounter
operator|=
name|Data
operator|::
name|destructorCounter
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
operator|::
name|create
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|generationCounter
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|generation
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|classLevel
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
name|Data
operator|::
name|generationCounter
operator|=
name|Data
operator|::
name|destructorCounter
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
operator|::
name|create
argument_list|()
decl_stmt|;
name|QWeakPointer
argument_list|<
name|Data
argument_list|>
name|weakptr
init|=
name|ptr
decl_stmt|;
name|QtSharedPointer
operator|::
name|ExternalRefCountData
modifier|*
name|d
init|=
name|refCountData
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// valgrind will complain here if something happened to the pointer
name|QVERIFY
argument_list|(
name|d
operator|->
name|weakref
operator|.
name|load
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d
operator|->
name|strongref
operator|.
name|load
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
name|Data
operator|::
name|generationCounter
operator|=
name|Data
operator|::
name|destructorCounter
operator|=
literal|0
expr_stmt|;
name|DerivedData
operator|::
name|derivedDestructorCounter
operator|=
literal|0
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DerivedData
argument_list|>
operator|::
name|create
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|classLevel
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|staticCast
argument_list|<
name|DerivedData
argument_list|>
argument_list|()
operator|->
name|moreData
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|Data
operator|::
name|destructorCounter
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|DerivedData
operator|::
name|derivedDestructorCounter
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|DiffPtrDerivedData
argument_list|>
operator|::
name|create
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|classLevel
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|staticCast
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|()
operator|->
name|buffer
index|[
literal|7
index|]
operator|+
literal|0
argument_list|,
literal|16
operator|-
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|staticCast
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|()
operator|->
name|buffer
index|[
literal|3
index|]
operator|+
literal|0
argument_list|,
literal|16
operator|-
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|.
name|staticCast
argument_list|<
name|DiffPtrDerivedData
argument_list|>
argument_list|()
operator|->
name|buffer
index|[
literal|0
index|]
operator|+
literal|0
argument_list|,
literal|16
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|VirtualDerived
argument_list|>
operator|::
name|create
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|classLevel
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|moreData
argument_list|,
literal|0xc0ffee
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|baseptr
init|=
name|ptr
decl_stmt|;
name|QCOMPARE
argument_list|(
name|baseptr
operator|->
name|classLevel
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|creatingQObject
name|void
name|tst_QSharedPointer
operator|::
name|creatingQObject
parameter_list|()
block|{
block|{
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
operator|::
name|create
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|metaObject
argument_list|()
argument_list|,
operator|&
name|QObject
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|qptr
init|=
name|ptr
operator|.
name|data
argument_list|()
decl_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|qptr
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
name|QSharedPointer
argument_list|<
name|QObject
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|OtherObject
argument_list|>
operator|::
name|create
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|ptr
operator|->
name|metaObject
argument_list|()
argument_list|,
operator|&
name|OtherObject
operator|::
name|staticMetaObject
argument_list|)
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mixTrackingPointerCode
name|void
name|tst_QSharedPointer
operator|::
name|mixTrackingPointerCode
parameter_list|()
block|{
block|{
comment|// pointer created with tracking
comment|// deleted in code without tracking
name|QSharedPointer
argument_list|<
name|int
argument_list|>
name|ptr
init|=
name|QSharedPointer
argument_list|<
name|int
argument_list|>
argument_list|(
operator|new
name|int
argument_list|(
literal|42
argument_list|)
argument_list|)
decl_stmt|;
name|Wrapper
name|w
argument_list|(
name|ptr
argument_list|)
decl_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|safetyCheck
argument_list|()
expr_stmt|;
block|{
comment|// pointer created without tracking
comment|// deleted in code with tracking
name|Wrapper
name|w
init|=
name|Wrapper
operator|::
name|create
argument_list|()
decl_stmt|;
name|w
operator|.
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|ThreadData
class|class
name|ThreadData
block|{
DECL|member|ptr
name|QAtomicInt
modifier|*
specifier|volatile
name|ptr
decl_stmt|;
public|public:
DECL|function|ThreadData
name|ThreadData
parameter_list|(
name|QAtomicInt
modifier|*
name|p
parameter_list|)
member_init_list|:
name|ptr
argument_list|(
name|p
argument_list|)
block|{ }
DECL|function|~ThreadData
name|~
name|ThreadData
parameter_list|()
block|{
operator|++
name|ptr
expr_stmt|;
block|}
DECL|function|ref
name|void
name|ref
parameter_list|()
block|{
comment|// if we're called after the destructor, we'll crash
name|ptr
operator|->
name|ref
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|StrongThread
class|class
name|StrongThread
super|:
specifier|public
name|QThread
block|{
protected|protected:
DECL|function|run
name|void
name|run
parameter_list|()
block|{
name|usleep
argument_list|(
name|rand
argument_list|()
operator|%
literal|2000
argument_list|)
expr_stmt|;
name|ptr
operator|->
name|ref
argument_list|()
expr_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
public|public:
DECL|member|ptr
name|QSharedPointer
argument_list|<
name|ThreadData
argument_list|>
name|ptr
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|WeakThread
class|class
name|WeakThread
super|:
specifier|public
name|QThread
block|{
protected|protected:
DECL|function|run
name|void
name|run
parameter_list|()
block|{
name|usleep
argument_list|(
name|rand
argument_list|()
operator|%
literal|2000
argument_list|)
expr_stmt|;
name|QSharedPointer
argument_list|<
name|ThreadData
argument_list|>
name|ptr
init|=
name|weak
decl_stmt|;
if|if
condition|(
name|ptr
condition|)
name|ptr
operator|->
name|ref
argument_list|()
expr_stmt|;
name|ptr
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
public|public:
DECL|member|weak
name|QWeakPointer
argument_list|<
name|ThreadData
argument_list|>
name|weak
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|threadStressTest_data
name|void
name|tst_QSharedPointer
operator|::
name|threadStressTest_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"strongThreadCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"weakThreadCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0+0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1+0"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2+0"
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10+0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0+1"
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1+1"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2+10"
argument_list|)
operator|<<
literal|2
operator|<<
literal|10
expr_stmt|;
ifndef|#
directive|ifndef
name|Q_OS_WINCE
comment|// Windows CE cannot run this many threads
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5+10"
argument_list|)
operator|<<
literal|5
operator|<<
literal|10
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"5+30"
argument_list|)
operator|<<
literal|5
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100+100"
argument_list|)
operator|<<
literal|100
operator|<<
literal|100
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|threadStressTest
name|void
name|tst_QSharedPointer
operator|::
name|threadStressTest
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|strongThreadCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|weakThreadCount
argument_list|)
expr_stmt|;
name|int
name|guard1
index|[
literal|128
index|]
decl_stmt|;
name|QAtomicInt
name|counter
decl_stmt|;
name|int
name|guard2
index|[
literal|128
index|]
decl_stmt|;
name|memset
argument_list|(
name|guard1
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
name|guard1
argument_list|)
expr_stmt|;
name|memset
argument_list|(
name|guard2
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
name|guard2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
literal|5
condition|;
operator|++
name|r
control|)
block|{
name|QVector
argument_list|<
name|QThread
modifier|*
argument_list|>
name|allThreads
argument_list|(
literal|6
operator|*
name|qMax
argument_list|(
name|strongThreadCount
argument_list|,
name|weakThreadCount
argument_list|)
operator|+
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QSharedPointer
argument_list|<
name|ThreadData
argument_list|>
name|base
init|=
name|QSharedPointer
argument_list|<
name|ThreadData
argument_list|>
argument_list|(
operator|new
name|ThreadData
argument_list|(
operator|&
name|counter
argument_list|)
argument_list|)
decl_stmt|;
name|counter
operator|.
name|store
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// set the pointers
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|strongThreadCount
condition|;
operator|++
name|i
control|)
block|{
name|StrongThread
modifier|*
name|t
init|=
operator|new
name|StrongThread
decl_stmt|;
name|t
operator|->
name|ptr
operator|=
name|base
expr_stmt|;
name|allThreads
index|[
literal|2
operator|*
name|i
index|]
operator|=
name|t
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|weakThreadCount
condition|;
operator|++
name|i
control|)
block|{
name|WeakThread
modifier|*
name|t
init|=
operator|new
name|WeakThread
decl_stmt|;
name|t
operator|->
name|weak
operator|=
name|base
expr_stmt|;
name|allThreads
index|[
literal|6
operator|*
name|i
operator|+
literal|3
index|]
operator|=
name|t
expr_stmt|;
block|}
name|base
operator|.
name|clear
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE
name|srand
argument_list|(
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
operator|.
name|toTime_t
argument_list|()
argument_list|)
expr_stmt|;
else|#
directive|else
name|srand
argument_list|(
name|time
argument_list|(
name|NULL
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// start threads
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|allThreads
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
if|if
condition|(
name|allThreads
index|[
name|i
index|]
condition|)
name|allThreads
index|[
name|i
index|]
operator|->
name|start
argument_list|()
expr_stmt|;
comment|// wait for them to finish
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|allThreads
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
if|if
condition|(
name|allThreads
index|[
name|i
index|]
condition|)
name|allThreads
index|[
name|i
index|]
operator|->
name|wait
argument_list|()
expr_stmt|;
name|qDeleteAll
argument_list|(
name|allThreads
argument_list|)
expr_stmt|;
comment|// ensure the guards aren't touched
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
sizeof|sizeof
name|guard1
operator|/
sizeof|sizeof
name|guard1
index|[
literal|0
index|]
condition|;
operator|++
name|i
control|)
name|QVERIFY
argument_list|(
operator|!
name|guard1
index|[
name|i
index|]
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
sizeof|sizeof
name|guard2
operator|/
sizeof|sizeof
name|guard2
index|[
literal|0
index|]
condition|;
operator|++
name|i
control|)
name|QVERIFY
argument_list|(
operator|!
name|guard2
index|[
name|i
index|]
argument_list|)
expr_stmt|;
comment|// verify that the count is the right range
name|int
name|minValue
init|=
name|strongThreadCount
decl_stmt|;
name|int
name|maxValue
init|=
name|strongThreadCount
operator|+
name|weakThreadCount
decl_stmt|;
name|QVERIFY
argument_list|(
name|counter
operator|.
name|load
argument_list|()
operator|>=
name|minValue
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|counter
operator|.
name|load
argument_list|()
operator|<=
name|maxValue
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
template|template
parameter_list|<
name|typename
name|Container
parameter_list|,
name|bool
name|Ordered
parameter_list|>
DECL|function|hashAndMapTest
name|void
name|hashAndMapTest
parameter_list|()
block|{
typedef|typedef
typename|typename
name|Container
operator|::
name|key_type
name|Key
typedef|;
typedef|typedef
typename|typename
name|Container
operator|::
name|mapped_type
name|Value
typedef|;
name|Container
name|c
decl_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Key
name|k0
decl_stmt|;
name|c
operator|.
name|insert
argument_list|(
name|k0
argument_list|,
name|Value
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|c
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
typename|typename
name|Container
operator|::
name|iterator
name|it
decl_stmt|;
name|it
operator|=
name|c
operator|.
name|find
argument_list|(
name|k0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|it
operator|=
name|c
operator|.
name|find
argument_list|(
name|Key
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|it
operator|=
name|c
operator|.
name|find
argument_list|(
name|Key
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|Key
name|k1
argument_list|(
operator|new
typename|typename
name|Key
operator|::
name|value_type
argument_list|(
literal|42
argument_list|)
argument_list|)
decl_stmt|;
name|it
operator|=
name|c
operator|.
name|find
argument_list|(
name|k1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|insert
argument_list|(
name|k1
argument_list|,
name|Value
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|it
operator|=
name|c
operator|.
name|find
argument_list|(
name|k1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|c
operator|.
name|find
argument_list|(
name|Key
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|Ordered
condition|)
block|{
name|QVERIFY
argument_list|(
name|k0
operator|<
name|k1
argument_list|)
expr_stmt|;
name|it
operator|=
name|c
operator|.
name|begin
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|k0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|,
name|Value
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|k1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|,
name|Value
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|c
operator|.
name|insertMulti
argument_list|(
name|k1
argument_list|,
name|Value
argument_list|(
literal|47
argument_list|)
argument_list|)
expr_stmt|;
name|it
operator|=
name|c
operator|.
name|find
argument_list|(
name|k1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|k1
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|!=
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|k1
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
if|if
condition|(
name|Ordered
condition|)
name|QVERIFY
argument_list|(
name|it
operator|==
name|c
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|map
name|void
name|tst_QSharedPointer
operator|::
name|map
parameter_list|()
block|{
name|hashAndMapTest
argument_list|<
name|QMap
argument_list|<
name|QSharedPointer
argument_list|<
name|int
argument_list|>
argument_list|,
name|int
argument_list|>
argument_list|,
literal|true
argument_list|>
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hash
name|void
name|tst_QSharedPointer
operator|::
name|hash
parameter_list|()
block|{
name|hashAndMapTest
argument_list|<
name|QHash
argument_list|<
name|QSharedPointer
argument_list|<
name|int
argument_list|>
argument_list|,
name|int
argument_list|>
argument_list|,
literal|false
argument_list|>
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|validConstructs
name|void
name|tst_QSharedPointer
operator|::
name|validConstructs
parameter_list|()
block|{
block|{
name|Data
modifier|*
name|aData
init|=
operator|new
name|Data
decl_stmt|;
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr1
init|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|(
name|aData
argument_list|)
decl_stmt|;
name|ptr1
operator|=
name|ptr1
expr_stmt|;
comment|// valid
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
name|ptr2
argument_list|(
name|ptr1
argument_list|)
decl_stmt|;
name|ptr1
operator|=
name|ptr2
expr_stmt|;
name|ptr2
operator|=
name|ptr1
expr_stmt|;
name|ptr1
operator|=
name|QSharedPointer
argument_list|<
name|Data
argument_list|>
argument_list|()
expr_stmt|;
name|ptr1
operator|=
name|ptr2
expr_stmt|;
block|}
block|}
end_function
begin_typedef
DECL|typedef|TestFunction
typedef|typedef
name|bool
function_decl|(
name|QTest
operator|::
name|QExternalTest
operator|::
modifier|*
name|TestFunction
function_decl|)
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|body
parameter_list|)
function_decl|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|TestFunction
argument_list|)
end_macro
begin_function
DECL|function|invalidConstructs_data
name|void
name|tst_QSharedPointer
operator|::
name|invalidConstructs_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|TestFunction
argument_list|>
argument_list|(
literal|"testFunction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"code"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"sanity-checking"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompile
operator|<<
literal|""
expr_stmt|;
comment|// QSharedPointer<void> is not allowed
name|QTest
operator|::
name|newRow
argument_list|(
literal|"void"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<void> ptr;"
expr_stmt|;
comment|// implicit initialization
name|QTest
operator|::
name|newRow
argument_list|(
literal|"implicit-initialization1"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> ptr = new Data;"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"implicit-initialization2"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> ptr;"
literal|"ptr = new Data;"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"implicit-initialization3"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QWeakPointer<Data> ptr = new Data;"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"implicit-initialization4"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QWeakPointer<Data> ptr;"
literal|"ptr = new Data;"
expr_stmt|;
comment|// use of forward-declared class
name|QTest
operator|::
name|newRow
argument_list|(
literal|"creating-forward-declaration"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<ForwardDeclared>::create();"
expr_stmt|;
comment|// upcast without cast operator:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"upcast1"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> baseptr = QSharedPointer<Data>(new DerivedData);\n"
literal|"QSharedPointer<DerivedData> ptr(baseptr);"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"upcast2"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> baseptr = QSharedPointer<Data>(new DerivedData);\n"
literal|"QSharedPointer<DerivedData> ptr;\n"
literal|"ptr = baseptr;"
expr_stmt|;
comment|// dropping of const
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const-dropping1"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<const Data> baseptr = QSharedPointer<const Data>(new Data);\n"
literal|"QSharedPointer<Data> ptr(baseptr);"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const-dropping2"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<const Data> baseptr = QSharedPointer<const Data>(new Data);\n"
literal|"QSharedPointer<Data> ptr;"
literal|"ptr = baseptr;"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const-dropping-static-cast"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<const Data> baseptr = QSharedPointer<const Data>(new Data);\n"
literal|"qSharedPointerCast<DerivedData>(baseptr);"
expr_stmt|;
ifndef|#
directive|ifndef
name|QTEST_NO_RTTI
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const-dropping-dynamic-cast"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<const Data> baseptr = QSharedPointer<const Data>(new Data);\n"
literal|"qSharedPointerDynamicCast<DerivedData>(baseptr);"
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const-dropping-object-cast1"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<const QObject> baseptr = QSharedPointer<const QObject>(new QObject);\n"
literal|"qSharedPointerObjectCast<QCoreApplication>(baseptr);"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"const-dropping-object-cast2"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<const QObject> baseptr = QSharedPointer<const QObject>(new QObject);\n"
literal|"qobject_cast<QCoreApplication *>(baseptr);"
expr_stmt|;
comment|// arithmethics through automatic cast operators
name|QTest
operator|::
name|newRow
argument_list|(
literal|"arithmethic1"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<int> a;"
literal|"QSharedPointer<Data> b;\n"
literal|"if (a == b) return;"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"arithmethic2"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<int> a;"
literal|"QSharedPointer<Data> b;\n"
literal|"if (a + b) return;"
expr_stmt|;
comment|// two objects with the same pointer
name|QTest
operator|::
name|newRow
argument_list|(
literal|"same-pointer"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryRunFail
operator|<<
literal|"Data *aData = new Data;\n"
literal|"QSharedPointer<Data> ptr1 = QSharedPointer<Data>(aData);\n"
literal|"QSharedPointer<Data> ptr2 = QSharedPointer<Data>(aData);\n"
expr_stmt|;
comment|// re-creation:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"re-creation"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryRunFail
operator|<<
literal|"Data *aData = new Data;\n"
literal|"QSharedPointer<Data> ptr1 = QSharedPointer<Data>(aData);"
literal|"ptr1 = QSharedPointer<Data>(aData);"
expr_stmt|;
comment|// any type of cast for unrelated types:
comment|// (we have no reinterpret_cast)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-cast1"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> ptr1;\n"
literal|"QSharedPointer<int> ptr2 = qSharedPointerCast<int>(ptr1);"
expr_stmt|;
ifndef|#
directive|ifndef
name|QTEST_NO_RTTI
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-cast2"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> ptr1;\n"
literal|"QSharedPointer<int> ptr2 = qSharedPointerDynamicCast<int>(ptr1);"
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-cast3"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> ptr1;\n"
literal|"QSharedPointer<int> ptr2 = qSharedPointerConstCast<int>(ptr1);"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-cast4"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"QSharedPointer<Data> ptr1;\n"
literal|"QSharedPointer<int> ptr2 = qSharedPointerObjectCast<int>(ptr1);"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"weak-pointer-from-regular-pointer"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"Data *ptr = 0;\n"
literal|"QWeakPointer<Data> weakptr(ptr);\n"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"shared-pointer-implicit-from-uninitialized"
argument_list|)
operator|<<
operator|&
name|QTest
operator|::
name|QExternalTest
operator|::
name|tryCompileFail
operator|<<
literal|"Data *ptr = 0;\n"
literal|"QSharedPointer<Data> weakptr = Qt::Uninitialized;\n"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidConstructs
name|void
name|tst_QSharedPointer
operator|::
name|invalidConstructs
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_CC_MINGW
name|QSKIP
argument_list|(
literal|"The maintainer of QSharedPointer: 'We don't know what the problem is so skip the tests.'"
argument_list|)
expr_stmt|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|QTEST_CROSS_COMPILED
name|QSKIP
argument_list|(
literal|"This test does not work on cross compiled systems"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|QExternalTest
name|test
decl_stmt|;
name|test
operator|.
name|setQtModules
argument_list|(
name|QTest
operator|::
name|QExternalTest
operator|::
name|QtCore
argument_list|)
expr_stmt|;
name|test
operator|.
name|setProgramHeader
argument_list|(
literal|"#define QT_SHAREDPOINTER_TRACK_POINTERS\n"
literal|"#define QT_DEBUG\n"
literal|"#include<QtCore/qsharedpointer.h>\n"
literal|"#include<QtCore/qcoreapplication.h>\n"
literal|"\n"
literal|"struct Data { int i; };\n"
literal|"struct DerivedData: public Data { int j; };\n"
literal|"\n"
literal|"class ForwardDeclared;\n"
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|code
argument_list|)
expr_stmt|;
specifier|static
name|bool
name|sane
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|code
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|test
operator|.
name|tryRun
argument_list|(
literal|""
argument_list|)
operator|||
operator|!
name|test
operator|.
name|tryRunFail
argument_list|(
literal|"exit(1);"
argument_list|)
operator|||
operator|!
name|test
operator|.
name|tryRun
argument_list|(
literal|"QSharedPointer<Data> baseptr; QSharedPointer<DerivedData> ptr;"
argument_list|)
condition|)
block|{
name|sane
operator|=
literal|false
expr_stmt|;
name|qWarning
argument_list|(
literal|"Sanity checking failed\nCode:\n%s\n"
argument_list|,
name|qPrintable
argument_list|(
name|test
operator|.
name|errorReport
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|sane
condition|)
name|QFAIL
argument_list|(
literal|"External testing failed sanity checking, cannot proceed"
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|TestFunction
argument_list|,
name|testFunction
argument_list|)
expr_stmt|;
name|QByteArray
name|body
init|=
name|code
operator|.
name|toLatin1
argument_list|()
decl_stmt|;
name|bool
name|result
init|=
call|(
name|test
operator|.*
name|testFunction
call|)
argument_list|(
name|body
argument_list|)
decl_stmt|;
if|if
condition|(
name|qgetenv
argument_list|(
literal|"QTEST_EXTERNAL_DEBUG"
argument_list|)
operator|.
name|toInt
argument_list|()
operator|>
literal|0
condition|)
block|{
name|qDebug
argument_list|(
literal|"External test output:"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_CC_MSVC
comment|// MSVC prints errors to stdout
name|printf
argument_list|(
literal|"%s\n"
argument_list|,
name|test
operator|.
name|standardOutput
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|printf
argument_list|(
literal|"%s\n"
argument_list|,
name|test
operator|.
name|standardError
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|result
condition|)
block|{
name|qWarning
argument_list|(
literal|"External code testing failed\nCode:\n%s\n"
argument_list|,
name|body
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QFAIL
argument_list|(
literal|"Fail"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_namespace
DECL|namespace|ReentrancyWhileDestructing
namespace|namespace
name|ReentrancyWhileDestructing
block|{
DECL|struct|IB
struct|struct
name|IB
block|{
DECL|function|~IB
specifier|virtual
name|~
name|IB
parameter_list|()
block|{}
block|}
struct|;
DECL|struct|IA
struct|struct
name|IA
block|{
specifier|virtual
name|QSharedPointer
argument_list|<
name|IB
argument_list|>
name|getB
parameter_list|()
function_decl|=
literal|0
function_decl|;
block|}
struct|;
DECL|struct|B
struct|struct
name|B
super|:
specifier|public
name|IB
block|{
DECL|member|m_a
name|IA
modifier|*
name|m_a
decl_stmt|;
DECL|function|B
name|B
parameter_list|(
name|IA
modifier|*
name|a_a
parameter_list|)
member_init_list|:
name|m_a
argument_list|(
name|a_a
argument_list|)
block|{ }
DECL|function|~B
name|~
name|B
parameter_list|()
block|{
name|QSharedPointer
argument_list|<
name|IB
argument_list|>
name|b
init|=
name|m_a
operator|->
name|getB
argument_list|()
decl_stmt|;
block|}
block|}
struct|;
DECL|struct|A
struct|struct
name|A
super|:
specifier|public
name|IA
block|{
DECL|member|b
name|QSharedPointer
argument_list|<
name|IB
argument_list|>
name|b
decl_stmt|;
DECL|function|getB
specifier|virtual
name|QSharedPointer
argument_list|<
name|IB
argument_list|>
name|getB
parameter_list|()
block|{
return|return
name|b
return|;
block|}
DECL|function|A
name|A
parameter_list|()
block|{
name|b
operator|=
name|QSharedPointer
argument_list|<
name|IB
argument_list|>
argument_list|(
operator|new
name|B
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|~A
name|~
name|A
parameter_list|()
block|{
name|b
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
struct|;
block|}
end_namespace
begin_comment
comment|// This is a regression test for QTBUG-11730, where there would be a crash if
end_comment
begin_comment
comment|// the destructor of a QSharedPointer object being deleted recursed back into
end_comment
begin_comment
comment|// the same QSharedPointer object.  There are no explicit verification steps
end_comment
begin_comment
comment|// in this test -- it is sufficient that the code does not crash.
end_comment
begin_function
DECL|function|reentrancyWhileDestructing
name|void
name|tst_QSharedPointer
operator|::
name|reentrancyWhileDestructing
parameter_list|()
block|{
name|ReentrancyWhileDestructing
operator|::
name|A
name|obj
decl_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QSharedPointer
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qsharedpointer.moc"
end_include
end_unit
