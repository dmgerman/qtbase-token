begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qtimeline.h>
end_include
begin_class
DECL|class|tst_QTimeLine
class|class
name|tst_QTimeLine
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|range
parameter_list|()
function_decl|;
name|void
name|currentTime
parameter_list|()
function_decl|;
name|void
name|duration
parameter_list|()
function_decl|;
name|void
name|frameRate
parameter_list|()
function_decl|;
name|void
name|value
parameter_list|()
function_decl|;
name|void
name|currentFrame
parameter_list|()
function_decl|;
name|void
name|loopCount
parameter_list|()
function_decl|;
name|void
name|interpolation
parameter_list|()
function_decl|;
name|void
name|reverse_data
parameter_list|()
function_decl|;
name|void
name|reverse
parameter_list|()
function_decl|;
name|void
name|toggleDirection
parameter_list|()
function_decl|;
name|void
name|frameChanged
parameter_list|()
function_decl|;
name|void
name|stopped
parameter_list|()
function_decl|;
name|void
name|finished
parameter_list|()
function_decl|;
name|void
name|isRunning
parameter_list|()
function_decl|;
name|void
name|multipleTimeLines
parameter_list|()
function_decl|;
name|void
name|sineCurve
parameter_list|()
function_decl|;
name|void
name|cosineCurve
parameter_list|()
function_decl|;
name|void
name|outOfRange
parameter_list|()
function_decl|;
name|void
name|stateInFinishedSignal
parameter_list|()
function_decl|;
name|void
name|resume
parameter_list|()
function_decl|;
name|void
name|restart
parameter_list|()
function_decl|;
name|void
name|setPaused
parameter_list|()
function_decl|;
protected|protected
name|slots
protected|:
name|void
name|finishedSlot
parameter_list|()
function_decl|;
protected|protected:
DECL|member|state
name|QTimeLine
operator|::
name|State
name|state
decl_stmt|;
DECL|member|view
name|QTimeLine
modifier|*
name|view
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|range
name|void
name|tst_QTimeLine
operator|::
name|range
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//On WinCE timer resolution is bad - using longer times instead
name|QTimeLine
name|timeLine
argument_list|(
literal|2000
argument_list|)
decl_stmt|;
else|#
directive|else
name|QTimeLine
name|timeLine
argument_list|(
literal|200
argument_list|)
decl_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|startFrame
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|endFrame
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|startFrame
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|endFrame
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|startFrame
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|endFrame
argument_list|()
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setStartFrame
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|startFrame
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setEndFrame
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|endFrame
argument_list|()
argument_list|,
literal|16
argument_list|)
expr_stmt|;
comment|// Verify that you can change the range in the timeLine
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|1000
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|frameChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// make sure that the logic works for a running timeline
name|QTRY_COMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|int
name|oldValue
init|=
name|timeLine
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
operator|<
name|oldValue
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setEndFrame
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setStartFrame
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
operator|>
name|oldValue
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|spy
operator|.
name|count
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
operator|<
name|oldValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentTime
name|void
name|tst_QTimeLine
operator|::
name|currentTime
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|2000
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setUpdateInterval
argument_list|(
operator|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
operator|)
operator|/
literal|33
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|>
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
operator|-
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|<
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
operator|+
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|4
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|valueChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|resume
argument_list|()
expr_stmt|;
comment|// Let it update on its own
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|>
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|<
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
comment|// Reverse should decrease the currentTime
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Let it update on its own
name|int
name|currentTime
init|=
name|timeLine
operator|.
name|currentTime
argument_list|()
decl_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|>
name|currentTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|currentTime
operator|=
name|timeLine
operator|.
name|currentTime
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
name|QTimeLine
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|<
name|currentTime
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|duration
name|void
name|tst_QTimeLine
operator|::
name|duration
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|200
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDuration
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
comment|// The duration shouldn't change
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|frameRate
name|void
name|tst_QTimeLine
operator|::
name|frameRate
parameter_list|()
block|{
name|QTimeLine
name|timeLine
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|100
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|updateInterval
argument_list|()
argument_list|,
literal|1000
operator|/
literal|25
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setUpdateInterval
argument_list|(
literal|1000
operator|/
literal|60
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|updateInterval
argument_list|()
argument_list|,
literal|1000
operator|/
literal|60
argument_list|)
expr_stmt|;
comment|// Default speed
name|timeLine
operator|.
name|setUpdateInterval
argument_list|(
literal|1000
operator|/
literal|33
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|frameChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|int
name|slowCount
init|=
name|spy
operator|.
name|count
argument_list|()
decl_stmt|;
comment|// Faster!!
name|timeLine
operator|.
name|setUpdateInterval
argument_list|(
literal|1000
operator|/
literal|100
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|slowCount
operator|<
name|spy
operator|.
name|count
argument_list|()
argument_list|,
name|QByteArray
operator|::
name|number
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|value
name|void
name|tst_QTimeLine
operator|::
name|value
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|2000
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentValue
argument_list|()
operator|==
literal|0.0
argument_list|)
expr_stmt|;
comment|// Default speed
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|valueChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentValue
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|qreal
name|currentValue
init|=
name|timeLine
operator|.
name|currentValue
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|currentValue
operator|==
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|count
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Reverse should decrease the value
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Let it update on its own
name|QTest
operator|::
name|qWait
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|qreal
name|value
init|=
name|timeLine
operator|.
name|currentValue
argument_list|()
decl_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
name|QTimeLine
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentValue
argument_list|()
operator|<
name|value
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentFrame
name|void
name|tst_QTimeLine
operator|::
name|currentFrame
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|2000
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// Default speed
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|frameChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
operator|>
literal|10
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
literal|20
argument_list|)
expr_stmt|;
comment|// Reverse should decrease the value
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Let it update on its own
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|>
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
comment|// wait for continuation
name|int
name|value
init|=
name|timeLine
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
name|QTimeLine
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
operator|<
name|value
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|loopCount
name|void
name|tst_QTimeLine
operator|::
name|loopCount
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|200
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|loopCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|loopCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setLoopCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|loopCount
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Default speed infiniti looping
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|frameChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
comment|//QCOMPARE(timeLine.currentFrame(), 20);
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
operator|>=
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
operator|<=
literal|20
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|setDuration
argument_list|(
literal|2500
argument_list|)
expr_stmt|;
comment|// ### some platforms have a very low resolution timer
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setLoopCount
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|finished
argument_list|)
decl_stmt|;
name|QSignalSpy
name|frameChangedSpy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|frameChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|frameChangedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QEventLoop
name|loop
decl_stmt|;
name|connect
argument_list|(
operator|&
name|timeLine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|loop
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|//we clear te list after the start so we don't catch
comment|//a frameChanged signal for the frame 0 at the beginning
name|finishedSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|frameChangedSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|loop
operator|.
name|exec
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|frameChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|frameChangedSpy
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
operator|(
name|i
operator|+
literal|1
operator|)
operator|%
literal|3
argument_list|)
expr_stmt|;
block|}
block|}
name|timeLine
operator|.
name|setDirection
argument_list|(
name|QTimeLine
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|loop
operator|.
name|exec
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|frameChangedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|22
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|11
init|;
name|i
operator|<
literal|22
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|frameChangedSpy
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
operator|-
operator|(
name|i
operator|+
literal|2
operator|)
operator|%
literal|3
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|interpolation
name|void
name|tst_QTimeLine
operator|::
name|interpolation
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|400
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|curveShape
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|EaseInOutCurve
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|LinearCurve
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|curveShape
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|LinearCurve
argument_list|)
expr_stmt|;
comment|// smooth
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|EaseInOutCurve
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|int
name|firstValue
init|=
name|timeLine
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|int
name|endValue
init|=
name|timeLine
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// linear
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|LinearCurve
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
comment|// Smooth accellerates slowly so in the beginning so it is farther behind
if|if
condition|(
name|firstValue
operator|>=
name|timeLine
operator|.
name|currentFrame
argument_list|()
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24796: QTimeLine exhibits inconsistent timing behaviour"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|firstValue
operator|<
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|endValue
operator|>
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|reverse_data
name|void
name|tst_QTimeLine
operator|::
name|reverse_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"duration"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"start"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"end"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"startTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"currentFrame"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"currentValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"wait"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"state"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"wait2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"start at end"
argument_list|)
operator|<<
literal|200
operator|<<
literal|1000
operator|<<
literal|2000
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Backward
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Forward
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Backward
operator|<<
literal|200
operator|<<
literal|2000
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
literal|40
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Running
operator|<<
literal|140
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"start at half"
argument_list|)
operator|<<
literal|200
operator|<<
literal|1000
operator|<<
literal|2000
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Backward
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Forward
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Backward
operator|<<
literal|100
operator|<<
literal|1500
operator|<<
name|qreal
argument_list|(
literal|0.5
argument_list|)
operator|<<
literal|40
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Running
operator|<<
literal|140
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"start at quarter"
argument_list|)
operator|<<
literal|200
operator|<<
literal|1000
operator|<<
literal|2000
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Backward
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Forward
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Backward
operator|<<
literal|50
operator|<<
literal|1250
operator|<<
name|qreal
argument_list|(
literal|0.25
argument_list|)
operator|<<
literal|40
operator|<<
operator|(
name|int
operator|)
name|QTimeLine
operator|::
name|Running
operator|<<
literal|140
expr_stmt|;
block|}
end_function
begin_function
DECL|function|reverse
name|void
name|tst_QTimeLine
operator|::
name|reverse
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|duration
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|end
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction3
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|startTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|currentFrame
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|currentValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|wait
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|state
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|wait2
argument_list|)
expr_stmt|;
name|QTimeLine
name|timeLine
argument_list|(
name|duration
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|LinearCurve
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
name|start
argument_list|,
name|end
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|direction
argument_list|()
argument_list|,
operator|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction
operator|)
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
name|startTime
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
name|currentFrame
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentValue
argument_list|()
argument_list|,
name|currentValue
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|wait
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
operator|(
name|QTimeLine
operator|::
name|State
operator|)
name|state
argument_list|)
expr_stmt|;
name|int
name|firstValue
init|=
name|timeLine
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction3
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
operator|(
name|QTimeLine
operator|::
name|Direction
operator|)
name|direction3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|wait2
argument_list|)
expr_stmt|;
name|int
name|endValue
init|=
name|timeLine
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|endValue
operator|<
name|firstValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toggleDirection
name|void
name|tst_QTimeLine
operator|::
name|toggleDirection
parameter_list|()
block|{
comment|// Note: enum values are cast to int so that QCOMPARE will show
comment|// the values if they don't match.
name|QTimeLine
name|timeLine
decl_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|timeLine
operator|.
name|direction
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QTimeLine
operator|::
name|Forward
argument_list|)
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|toggleDirection
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|timeLine
operator|.
name|direction
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QTimeLine
operator|::
name|Backward
argument_list|)
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|toggleDirection
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|timeLine
operator|.
name|direction
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QTimeLine
operator|::
name|Forward
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|frameChanged
name|void
name|tst_QTimeLine
operator|::
name|frameChanged
parameter_list|()
block|{
name|QTimeLine
name|timeLine
decl_stmt|;
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|LinearCurve
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setUpdateInterval
argument_list|(
literal|800
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|frameChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test what happens when duration expires before all frames are emitted.
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|timeLine
operator|.
name|state
argument_list|()
operator|!=
name|QTimeLine
operator|::
name|NotRunning
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24796: QTimeLine runs slower than it should"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
if|if
condition|(
name|spy
operator|.
name|count
argument_list|()
operator|!=
literal|1
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24796: QTimeLine runs slower than it should"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Test what happens when the frames are all emitted well before duration expires.
name|timeLine
operator|.
name|setUpdateInterval
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stopped
name|void
name|tst_QTimeLine
operator|::
name|stopped
parameter_list|()
block|{
name|QTimeLine
name|timeLine
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QTimeLine
operator|::
name|State
argument_list|>
argument_list|(
literal|"QTimeLine::State"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|stateChanged
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setDirection
argument_list|(
name|QTimeLine
operator|::
name|Backward
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|loopCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|finished
name|void
name|tst_QTimeLine
operator|::
name|finished
parameter_list|()
block|{
name|QTimeLine
name|timeLine
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|finished
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isRunning
name|void
name|tst_QTimeLine
operator|::
name|isRunning
parameter_list|()
block|{
name|QTimeLine
name|timeLine
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multipleTimeLines
name|void
name|tst_QTimeLine
operator|::
name|multipleTimeLines
parameter_list|()
block|{
comment|// Stopping a timer shouldn't affect the other timers
name|QTimeLine
name|timeLine
argument_list|(
literal|200
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|timeLine
argument_list|,
operator|&
name|QTimeLine
operator|::
name|finished
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTimeLine
name|timeLineKiller
decl_stmt|;
name|timeLineKiller
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|timeLineKiller
operator|.
name|start
argument_list|()
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|timeLineKiller
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sineCurve
name|void
name|tst_QTimeLine
operator|::
name|sineCurve
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|SineCurve
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|0
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|250
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|500
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|750
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|1000
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cosineCurve
name|void
name|tst_QTimeLine
operator|::
name|cosineCurve
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|CosineCurve
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|0
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|250
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|500
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|750
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|1000
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0.5
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|outOfRange
name|void
name|tst_QTimeLine
operator|::
name|outOfRange
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
operator|-
literal|100
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|2000
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|SineCurve
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|valueForTime
argument_list|(
literal|2000
argument_list|)
argument_list|,
name|qreal
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stateInFinishedSignal
name|void
name|tst_QTimeLine
operator|::
name|stateInFinishedSignal
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|50
argument_list|)
decl_stmt|;
name|connect
argument_list|(
operator|&
name|timeLine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|finishedSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|state
operator|=
name|QTimeLine
operator|::
name|State
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|state
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|finishedSlot
name|void
name|tst_QTimeLine
operator|::
name|finishedSlot
parameter_list|()
block|{
name|QTimeLine
modifier|*
name|timeLine
init|=
name|qobject_cast
argument_list|<
name|QTimeLine
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|timeLine
condition|)
name|state
operator|=
name|timeLine
operator|->
name|state
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resume
name|void
name|tst_QTimeLine
operator|::
name|resume
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
block|{
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|int
name|oldCurrentTime
init|=
name|timeLine
operator|.
name|currentTime
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|oldCurrentTime
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|oldCurrentTime
operator|<
literal|1000
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|resume
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|int
name|currentTime
init|=
name|timeLine
operator|.
name|currentTime
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|currentTime
operator|>
name|oldCurrentTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentTime
operator|<
literal|1000
argument_list|)
expr_stmt|;
block|}
name|timeLine
operator|.
name|setDirection
argument_list|(
name|QTimeLine
operator|::
name|Backward
argument_list|)
expr_stmt|;
block|{
name|timeLine
operator|.
name|setCurrentTime
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|int
name|oldCurrentTime
init|=
name|timeLine
operator|.
name|currentTime
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|oldCurrentTime
operator|<
literal|1000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|oldCurrentTime
operator|>
literal|0
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|resume
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|int
name|currentTime
init|=
name|timeLine
operator|.
name|currentTime
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|currentTime
operator|<
name|oldCurrentTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentTime
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|restart
name|void
name|tst_QTimeLine
operator|::
name|restart
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|timeLine
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|timeLine
operator|.
name|duration
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
name|timeLine
operator|.
name|endFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
comment|// A restart with the same duration
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
name|timeLine
operator|.
name|startFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
name|timeLine
operator|.
name|endFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
comment|// Set a smaller duration and restart
name|timeLine
operator|.
name|setDuration
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
name|timeLine
operator|.
name|startFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
name|timeLine
operator|.
name|endFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|NotRunning
argument_list|)
expr_stmt|;
comment|// Set a longer duration and restart
name|timeLine
operator|.
name|setDuration
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|state
argument_list|()
argument_list|,
name|QTimeLine
operator|::
name|Running
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentFrame
argument_list|()
argument_list|,
name|timeLine
operator|.
name|startFrame
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPaused
name|void
name|tst_QTimeLine
operator|::
name|setPaused
parameter_list|()
block|{
name|QTimeLine
name|timeLine
argument_list|(
literal|1000
argument_list|)
decl_stmt|;
block|{
name|QCOMPARE
argument_list|(
name|timeLine
operator|.
name|currentTime
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setPaused
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|int
name|oldCurrentTime
init|=
name|timeLine
operator|.
name|currentTime
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|oldCurrentTime
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|oldCurrentTime
operator|<
literal|1000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|setPaused
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|int
name|currentTime
init|=
name|timeLine
operator|.
name|currentTime
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|currentTime
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentTime
operator|>
name|oldCurrentTime
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|currentTime
operator|<
literal|1000
argument_list|)
expr_stmt|;
name|timeLine
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTimeLine
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtimeline.moc"
end_include
end_unit
