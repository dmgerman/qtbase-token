begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qline.h>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|M_2PI
end_ifndef
begin_define
DECL|macro|M_2PI
define|#
directive|define
name|M_2PI
value|6.28318530717958647692528676655900576
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|tst_QLine
class|class
name|tst_QLine
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|testIntersection
parameter_list|()
function_decl|;
name|void
name|testIntersection_data
parameter_list|()
function_decl|;
name|void
name|testLength
parameter_list|()
function_decl|;
name|void
name|testLength_data
parameter_list|()
function_decl|;
name|void
name|testNormalVector
parameter_list|()
function_decl|;
name|void
name|testNormalVector_data
parameter_list|()
function_decl|;
name|void
name|testAngle
parameter_list|()
function_decl|;
name|void
name|testAngle_data
parameter_list|()
function_decl|;
name|void
name|testAngle2
parameter_list|()
function_decl|;
name|void
name|testAngle2_data
parameter_list|()
function_decl|;
name|void
name|testAngle3
parameter_list|()
function_decl|;
name|void
name|testAngleTo
parameter_list|()
function_decl|;
name|void
name|testAngleTo_data
parameter_list|()
function_decl|;
name|void
name|testSet
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Square root of two
end_comment
begin_define
DECL|macro|SQRT2
define|#
directive|define
name|SQRT2
value|1.4142135623731
end_define
begin_comment
comment|// Length of unit vector projected to x from 45 degrees
end_comment
begin_define
DECL|macro|UNITX_45
define|#
directive|define
name|UNITX_45
value|0.707106781186547
end_define
begin_decl_stmt
DECL|variable|epsilon
specifier|const
name|qreal
name|epsilon
init|=
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
operator|==
sizeof|sizeof
argument_list|(
name|double
argument_list|)
condition|?
literal|1e-8
else|:
literal|1e-4
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|testSet
name|void
name|tst_QLine
operator|::
name|testSet
parameter_list|()
block|{
block|{
name|QLine
name|l
decl_stmt|;
name|l
operator|.
name|setP1
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|.
name|setP2
argument_list|(
name|QPoint
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x2
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y2
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|l
operator|.
name|setPoints
argument_list|(
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|7
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x2
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y2
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|l
operator|.
name|setLine
argument_list|(
literal|9
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x2
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y2
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
block|}
block|{
name|QLineF
name|l
decl_stmt|;
name|l
operator|.
name|setP1
argument_list|(
name|QPointF
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|.
name|setP2
argument_list|(
name|QPointF
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x2
argument_list|()
argument_list|,
literal|3.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y2
argument_list|()
argument_list|,
literal|4.0
argument_list|)
expr_stmt|;
name|l
operator|.
name|setPoints
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|7
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
literal|5.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
literal|6.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x2
argument_list|()
argument_list|,
literal|7.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y2
argument_list|()
argument_list|,
literal|8.0
argument_list|)
expr_stmt|;
name|l
operator|.
name|setLine
argument_list|(
literal|9.0
argument_list|,
literal|10.0
argument_list|,
literal|11.0
argument_list|,
literal|12.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
literal|9.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
literal|10.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x2
argument_list|()
argument_list|,
literal|11.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y2
argument_list|()
argument_list|,
literal|12.0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testIntersection_data
name|void
name|tst_QLine
operator|::
name|testIntersection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xa1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"ya1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xa2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"ya2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xb1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"yb1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xb2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"yb2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"ix"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"iy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"parallel"
argument_list|)
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|3.0
operator|<<
literal|4.0
operator|<<
literal|5.0
operator|<<
literal|6.0
operator|<<
literal|7.0
operator|<<
literal|9.0
operator|<<
name|int
argument_list|(
name|QLineF
operator|::
name|NoIntersection
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unbounded"
argument_list|)
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|5.0
operator|<<
literal|5.0
operator|<<
literal|0.0
operator|<<
literal|4.0
operator|<<
literal|3.0
operator|<<
literal|4.0
operator|<<
name|int
argument_list|(
name|QLineF
operator|::
name|UnboundedIntersection
argument_list|)
operator|<<
literal|4.0
operator|<<
literal|4.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bounded"
argument_list|)
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|5.0
operator|<<
literal|5.0
operator|<<
literal|0.0
operator|<<
literal|4.0
operator|<<
literal|5.0
operator|<<
literal|4.0
operator|<<
name|int
argument_list|(
name|QLineF
operator|::
name|BoundedIntersection
argument_list|)
operator|<<
literal|4.0
operator|<<
literal|4.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"almost vertical"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|10.0
operator|<<
literal|20.0000000000001
operator|<<
literal|10.0
operator|<<
literal|10.0
operator|<<
literal|0.0
operator|<<
literal|10.0
operator|<<
literal|20.0
operator|<<
name|int
argument_list|(
name|QLineF
operator|::
name|BoundedIntersection
argument_list|)
operator|<<
literal|10.0
operator|<<
literal|10.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"almost horizontal"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|10.0
operator|<<
literal|20.0
operator|<<
literal|10.0
operator|<<
literal|10.0000000000001
operator|<<
literal|0.0
operator|<<
literal|10.0
operator|<<
literal|20.0
operator|<<
name|int
argument_list|(
name|QLineF
operator|::
name|BoundedIntersection
argument_list|)
operator|<<
literal|10.0
operator|<<
literal|10.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"long vertical"
argument_list|)
operator|<<
literal|100.1599256468623
operator|<<
literal|100.7861905065196
operator|<<
literal|100.1599256468604
operator|<<
operator|-
literal|9999.78619050651
operator|<<
literal|10.0
operator|<<
literal|50.0
operator|<<
literal|190.0
operator|<<
literal|50.0
operator|<<
name|int
argument_list|(
name|QLineF
operator|::
name|BoundedIntersection
argument_list|)
operator|<<
literal|100.1599256468622
operator|<<
literal|50.0
expr_stmt|;
name|QLineF
name|baseA
argument_list|(
literal|0
argument_list|,
operator|-
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|QLineF
name|baseB
argument_list|(
operator|-
literal|50
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|0
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
block|{
name|QLineF
name|a
init|=
name|QLineF
operator|::
name|fromPolar
argument_list|(
literal|50
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|a
operator|.
name|setP1
argument_list|(
operator|-
name|a
operator|.
name|p2
argument_list|()
argument_list|)
expr_stmt|;
name|QLineF
name|b
init|=
name|QLineF
operator|::
name|fromPolar
argument_list|(
literal|50
argument_list|,
name|i
operator|*
literal|0.997
operator|+
literal|90
argument_list|)
decl_stmt|;
name|b
operator|.
name|setP1
argument_list|(
operator|-
name|b
operator|.
name|p2
argument_list|()
argument_list|)
expr_stmt|;
comment|// make the qFuzzyCompare be a bit more lenient
name|a
operator|=
name|a
operator|.
name|translated
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|b
operator|=
name|b
operator|.
name|translated
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
literal|"rotation-"
operator|+
name|QByteArray
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
operator|(
name|double
operator|)
name|a
operator|.
name|x1
argument_list|()
operator|<<
operator|(
name|double
operator|)
name|a
operator|.
name|y1
argument_list|()
operator|<<
operator|(
name|double
operator|)
name|a
operator|.
name|x2
argument_list|()
operator|<<
operator|(
name|double
operator|)
name|a
operator|.
name|y2
argument_list|()
operator|<<
operator|(
name|double
operator|)
name|b
operator|.
name|x1
argument_list|()
operator|<<
operator|(
name|double
operator|)
name|b
operator|.
name|y1
argument_list|()
operator|<<
operator|(
name|double
operator|)
name|b
operator|.
name|x2
argument_list|()
operator|<<
operator|(
name|double
operator|)
name|b
operator|.
name|y2
argument_list|()
operator|<<
name|int
argument_list|(
name|QLineF
operator|::
name|BoundedIntersection
argument_list|)
operator|<<
literal|1.0
operator|<<
literal|1.0
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testIntersection
name|void
name|tst_QLine
operator|::
name|testIntersection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xa1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|ya1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xa2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|ya2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xb1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|yb1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xb2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|yb2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|ix
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|iy
argument_list|)
expr_stmt|;
name|QLineF
name|a
argument_list|(
name|xa1
argument_list|,
name|ya1
argument_list|,
name|xa2
argument_list|,
name|ya2
argument_list|)
decl_stmt|;
name|QLineF
name|b
argument_list|(
name|xb1
argument_list|,
name|yb1
argument_list|,
name|xb2
argument_list|,
name|yb2
argument_list|)
decl_stmt|;
name|QPointF
name|ip
decl_stmt|;
name|QLineF
operator|::
name|IntersectType
name|itype
init|=
name|a
operator|.
name|intersect
argument_list|(
name|b
argument_list|,
operator|&
name|ip
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|itype
argument_list|)
argument_list|,
name|type
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|!=
name|QLineF
operator|::
name|NoIntersection
condition|)
block|{
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|ip
operator|.
name|x
argument_list|()
operator|-
name|ix
argument_list|)
operator|<
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|ip
operator|.
name|y
argument_list|()
operator|-
name|iy
argument_list|)
operator|<
name|epsilon
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testLength_data
name|void
name|tst_QLine
operator|::
name|testLength_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"x1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"y1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"x2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"y2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"length"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"lengthToSet"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"vx"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"vy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[1,0]*2"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,1]*2"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
literal|0.0
operator|<<
literal|2.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-1,0]*2"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|1.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
operator|-
literal|2.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,-1]*2"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|2.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[1,1]->|1|"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-1,1]->|1|"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|1.0
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[1,-1]->|1|"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
operator|-
literal|1.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-1,-1]->|1|"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|1.0
operator|<<
operator|-
literal|1.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[1,0]*2 (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|3.0
operator|<<
literal|2.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,1]*2 (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|3.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
literal|0.0
operator|<<
literal|2.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-1,0]*2 (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
operator|-
literal|2.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0,-1]*2 (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|2.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|2.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[1,1]->|1| (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|3.0
operator|<<
literal|3.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-1,1]->|1| (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|1.0
operator|<<
literal|3.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[1,-1]->|1| (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|3.0
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-1,-1]->|1| (2,2)"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|2.0
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
name|SQRT2
argument_list|)
operator|<<
literal|1.0
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
operator|<<
name|double
argument_list|(
operator|-
name|UNITX_45
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testLength
name|void
name|tst_QLine
operator|::
name|testLength
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|double
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|x2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|y2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|lengthToSet
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|vx
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|vy
argument_list|)
expr_stmt|;
name|QLineF
name|l
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|length
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|.
name|setLength
argument_list|(
name|lengthToSet
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|length
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|lengthToSet
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|dx
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|vx
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|dy
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|vy
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testNormalVector_data
name|void
name|tst_QLine
operator|::
name|testNormalVector_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"x1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"y1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"x2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"y2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"nvx"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"nvy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[1, 0]"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|1.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[-1, 0]"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|1.0
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0, 1]"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[0, -1]"
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
operator|-
literal|1.0
operator|<<
operator|-
literal|1.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[2, 3]"
argument_list|)
operator|<<
literal|2.0
operator|<<
literal|3.0
operator|<<
literal|4.0
operator|<<
literal|6.0
operator|<<
literal|3.0
operator|<<
operator|-
literal|2.0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testNormalVector
name|void
name|tst_QLine
operator|::
name|testNormalVector
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|double
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|x2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|y2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|nvx
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|nvy
argument_list|)
expr_stmt|;
name|QLineF
name|l
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
decl_stmt|;
name|QLineF
name|n
init|=
name|l
operator|.
name|normalVector
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|x1
argument_list|()
argument_list|,
name|n
operator|.
name|x1
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|y1
argument_list|()
argument_list|,
name|n
operator|.
name|y1
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|n
operator|.
name|dx
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|nvx
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|n
operator|.
name|dy
argument_list|()
argument_list|,
name|qreal
argument_list|(
name|nvy
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testAngle_data
name|void
name|tst_QLine
operator|::
name|testAngle_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xa1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"ya1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xa2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"ya2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xb1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"yb1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"xb2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"yb2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"angle"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"parallel"
argument_list|)
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|3.0
operator|<<
literal|4.0
operator|<<
literal|5.0
operator|<<
literal|6.0
operator|<<
literal|7.0
operator|<<
literal|9.0
operator|<<
literal|0.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[4,4]-[4,0]"
argument_list|)
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|5.0
operator|<<
literal|5.0
operator|<<
literal|0.0
operator|<<
literal|4.0
operator|<<
literal|3.0
operator|<<
literal|4.0
operator|<<
literal|45.0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[4,4]-[-4,0]"
argument_list|)
operator|<<
literal|1.0
operator|<<
literal|1.0
operator|<<
literal|5.0
operator|<<
literal|5.0
operator|<<
literal|3.0
operator|<<
literal|4.0
operator|<<
literal|0.0
operator|<<
literal|4.0
operator|<<
literal|135.0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|180
condition|;
operator|++
name|i
control|)
block|{
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
literal|"angle:"
operator|+
name|QByteArray
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
name|double
argument_list|(
name|cos
argument_list|(
name|i
operator|*
name|M_2PI
operator|/
literal|360
argument_list|)
argument_list|)
operator|<<
name|double
argument_list|(
name|sin
argument_list|(
name|i
operator|*
name|M_2PI
operator|/
literal|360
argument_list|)
argument_list|)
operator|<<
literal|0.0
operator|<<
literal|0.0
operator|<<
literal|1.0
operator|<<
literal|0.0
operator|<<
name|double
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testAngle
name|void
name|tst_QLine
operator|::
name|testAngle
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xa1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|ya1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xa2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|ya2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xb1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|yb1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|xb2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|yb2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|angle
argument_list|)
expr_stmt|;
name|QLineF
name|a
argument_list|(
name|xa1
argument_list|,
name|ya1
argument_list|,
name|xa2
argument_list|,
name|ya2
argument_list|)
decl_stmt|;
name|QLineF
name|b
argument_list|(
name|xb1
argument_list|,
name|yb1
argument_list|,
name|xb2
argument_list|,
name|yb2
argument_list|)
decl_stmt|;
name|double
name|resultAngle
init|=
name|a
operator|.
name|angle
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qRound
argument_list|(
name|resultAngle
argument_list|)
argument_list|,
name|qRound
argument_list|(
name|angle
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testAngle2_data
name|void
name|tst_QLine
operator|::
name|testAngle2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"x1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"y1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"x2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"y2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"angle"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
operator|-
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|180.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"up"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
operator|-
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|90.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"down"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|270.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"diag a"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
operator|-
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|45.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"diag b"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
operator|-
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
operator|-
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|135.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"diag c"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
operator|-
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|225.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"diag d"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|10.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|315.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testAngle2
name|void
name|tst_QLine
operator|::
name|testAngle2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|x2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|y2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|angle
argument_list|)
expr_stmt|;
name|QLineF
name|line
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|line
operator|.
name|angle
argument_list|()
argument_list|,
name|angle
argument_list|)
expr_stmt|;
name|QLineF
name|polar
init|=
name|QLineF
operator|::
name|fromPolar
argument_list|(
name|line
operator|.
name|length
argument_list|()
argument_list|,
name|angle
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|line
operator|.
name|x1
argument_list|()
operator|-
name|polar
operator|.
name|x1
argument_list|()
argument_list|)
operator|<
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|line
operator|.
name|y1
argument_list|()
operator|-
name|polar
operator|.
name|y1
argument_list|()
argument_list|)
operator|<
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|line
operator|.
name|x2
argument_list|()
operator|-
name|polar
operator|.
name|x2
argument_list|()
argument_list|)
operator|<
name|epsilon
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|line
operator|.
name|y2
argument_list|()
operator|-
name|polar
operator|.
name|y2
argument_list|()
argument_list|)
operator|<
name|epsilon
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testAngle3
name|void
name|tst_QLine
operator|::
name|testAngle3
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
operator|-
literal|720
init|;
name|i
operator|<=
literal|720
condition|;
operator|++
name|i
control|)
block|{
name|QLineF
name|line
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|line
operator|.
name|setAngle
argument_list|(
name|i
argument_list|)
expr_stmt|;
specifier|const
name|int
name|expected
init|=
operator|(
name|i
operator|+
literal|720
operator|)
operator|%
literal|360
decl_stmt|;
name|QVERIFY2
argument_list|(
name|qAbs
argument_list|(
name|line
operator|.
name|angle
argument_list|()
operator|-
name|qreal
argument_list|(
name|expected
argument_list|)
argument_list|)
operator|<
name|epsilon
argument_list|,
name|qPrintable
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"value: %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|line
operator|.
name|length
argument_list|()
argument_list|,
name|qreal
argument_list|(
literal|100.0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QLineF
operator|::
name|fromPolar
argument_list|(
literal|100.0
argument_list|,
name|i
argument_list|)
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testAngleTo
name|void
name|tst_QLine
operator|::
name|testAngleTo
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|xa1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|ya1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|xa2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|ya2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|xb1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|yb1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|xb2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|yb2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qreal
argument_list|,
name|angle
argument_list|)
expr_stmt|;
name|QLineF
name|a
argument_list|(
name|xa1
argument_list|,
name|ya1
argument_list|,
name|xa2
argument_list|,
name|ya2
argument_list|)
decl_stmt|;
name|QLineF
name|b
argument_list|(
name|xb1
argument_list|,
name|yb1
argument_list|,
name|xb2
argument_list|,
name|yb2
argument_list|)
decl_stmt|;
specifier|const
name|qreal
name|resultAngle
init|=
name|a
operator|.
name|angleTo
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qAbs
argument_list|(
name|resultAngle
operator|-
name|angle
argument_list|)
operator|<
name|epsilon
argument_list|)
expr_stmt|;
name|a
operator|.
name|translate
argument_list|(
name|b
operator|.
name|p1
argument_list|()
operator|-
name|a
operator|.
name|p1
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|setAngle
argument_list|(
name|a
operator|.
name|angle
argument_list|()
operator|+
name|resultAngle
argument_list|)
expr_stmt|;
name|a
operator|.
name|setLength
argument_list|(
name|b
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testAngleTo_data
name|void
name|tst_QLine
operator|::
name|testAngleTo_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"xa1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"ya1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"xa2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"ya2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"xb1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"yb1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"xb2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"yb2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qreal
argument_list|>
argument_list|(
literal|"angle"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"parallel"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|3.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|4.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|5.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|6.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|7.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|9.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[4,4]-[4,0]"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|5.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|5.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|4.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|3.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|4.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|45.0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[4,4]-[-4,0]"
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|5.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|5.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|3.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|4.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|4.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|225.0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|360
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QLineF
name|l
init|=
name|QLineF
operator|::
name|fromPolar
argument_list|(
literal|1
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
literal|"angle:"
operator|+
name|QByteArray
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|1.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|qreal
argument_list|(
literal|0.0
argument_list|)
operator|<<
name|l
operator|.
name|p2
argument_list|()
operator|.
name|x
argument_list|()
operator|<<
name|l
operator|.
name|p2
argument_list|()
operator|.
name|y
argument_list|()
operator|<<
name|qreal
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QLine
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qline.moc"
end_include
end_unit
