begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qdatetime.h>
end_include
begin_include
include|#
directive|include
file|<qlocale.h>
end_include
begin_class
DECL|class|tst_QDate
class|class
name|tst_QDate
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|isNull_data
parameter_list|()
function_decl|;
name|void
name|isNull
parameter_list|()
function_decl|;
name|void
name|isValid_data
parameter_list|()
function_decl|;
name|void
name|isValid
parameter_list|()
function_decl|;
name|void
name|julianDay_data
parameter_list|()
function_decl|;
name|void
name|julianDay
parameter_list|()
function_decl|;
name|void
name|dayOfWeek_data
parameter_list|()
function_decl|;
name|void
name|dayOfWeek
parameter_list|()
function_decl|;
name|void
name|dayOfYear_data
parameter_list|()
function_decl|;
name|void
name|dayOfYear
parameter_list|()
function_decl|;
name|void
name|daysInMonth_data
parameter_list|()
function_decl|;
name|void
name|daysInMonth
parameter_list|()
function_decl|;
name|void
name|daysInYear
parameter_list|()
function_decl|;
name|void
name|getDate
parameter_list|()
function_decl|;
name|void
name|weekNumber_invalid_data
parameter_list|()
function_decl|;
name|void
name|weekNumber_invalid
parameter_list|()
function_decl|;
name|void
name|weekNumber_data
parameter_list|()
function_decl|;
name|void
name|weekNumber
parameter_list|()
function_decl|;
name|void
name|julianDaysLimits
parameter_list|()
function_decl|;
name|void
name|addDays_data
parameter_list|()
function_decl|;
name|void
name|addDays
parameter_list|()
function_decl|;
name|void
name|addMonths_data
parameter_list|()
function_decl|;
name|void
name|addMonths
parameter_list|()
function_decl|;
name|void
name|addYears_data
parameter_list|()
function_decl|;
name|void
name|addYears
parameter_list|()
function_decl|;
name|void
name|daysTo
parameter_list|()
function_decl|;
name|void
name|operator_eq_eq_data
parameter_list|()
function_decl|;
name|void
name|operator_eq_eq
parameter_list|()
function_decl|;
name|void
name|operator_lt
parameter_list|()
function_decl|;
name|void
name|operator_gt
parameter_list|()
function_decl|;
name|void
name|operator_lt_eq
parameter_list|()
function_decl|;
name|void
name|operator_gt_eq
parameter_list|()
function_decl|;
name|void
name|fromStringDateFormat_data
parameter_list|()
function_decl|;
name|void
name|fromStringDateFormat
parameter_list|()
function_decl|;
name|void
name|fromStringFormat_data
parameter_list|()
function_decl|;
name|void
name|fromStringFormat
parameter_list|()
function_decl|;
name|void
name|toStringFormat_data
parameter_list|()
function_decl|;
name|void
name|toStringFormat
parameter_list|()
function_decl|;
name|void
name|toStringDateFormat_data
parameter_list|()
function_decl|;
name|void
name|toStringDateFormat
parameter_list|()
function_decl|;
name|void
name|isLeapYear
parameter_list|()
function_decl|;
name|void
name|yearsZeroToNinetyNine
parameter_list|()
function_decl|;
name|void
name|negativeYear
parameter_list|()
specifier|const
function_decl|;
name|void
name|printNegativeYear
parameter_list|()
specifier|const
function_decl|;
name|void
name|roundtripGermanLocale
parameter_list|()
specifier|const
function_decl|;
name|void
name|shortDayName
parameter_list|()
specifier|const
function_decl|;
name|void
name|standaloneShortDayName
parameter_list|()
specifier|const
function_decl|;
name|void
name|longDayName
parameter_list|()
specifier|const
function_decl|;
name|void
name|standaloneLongDayName
parameter_list|()
specifier|const
function_decl|;
name|void
name|shortMonthName
parameter_list|()
specifier|const
function_decl|;
name|void
name|standaloneShortMonthName
parameter_list|()
specifier|const
function_decl|;
name|void
name|longMonthName
parameter_list|()
specifier|const
function_decl|;
name|void
name|standaloneLongMonthName
parameter_list|()
specifier|const
function_decl|;
name|void
name|roundtrip
parameter_list|()
specifier|const
function_decl|;
private|private:
DECL|function|defDate
name|QDate
name|defDate
parameter_list|()
specifier|const
block|{
return|return
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
return|;
block|}
DECL|function|invalidDate
name|QDate
name|invalidDate
parameter_list|()
specifier|const
block|{
return|return
name|QDate
argument_list|()
return|;
block|}
block|}
class|;
end_class
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QDate
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Qt::DateFormat
argument_list|)
end_macro
begin_function
DECL|function|isNull_data
name|void
name|tst_QDate
operator|::
name|isNull_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|qint64
argument_list|>
argument_list|(
literal|"jd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"null"
argument_list|)
expr_stmt|;
name|qint64
name|minJd
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|min
argument_list|()
operator|/
literal|2
decl_stmt|;
name|qint64
name|maxJd
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|max
argument_list|()
operator|/
literal|2
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"qint64 min"
argument_list|)
operator|<<
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|min
argument_list|()
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"minJd - 1"
argument_list|)
operator|<<
name|minJd
operator|-
literal|1
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"minJd"
argument_list|)
operator|<<
name|minJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"minJd + 1"
argument_list|)
operator|<<
name|minJd
operator|+
literal|1
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"maxJd - 1"
argument_list|)
operator|<<
name|maxJd
operator|-
literal|1
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"maxJd"
argument_list|)
operator|<<
name|maxJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"maxJd + 1"
argument_list|)
operator|<<
name|maxJd
operator|+
literal|1
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"qint64 max"
argument_list|)
operator|<<
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|max
argument_list|()
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isNull
name|void
name|tst_QDate
operator|::
name|isNull
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|qint64
argument_list|,
name|jd
argument_list|)
expr_stmt|;
name|QDate
name|d
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|d
operator|.
name|isNull
argument_list|()
argument_list|,
literal|"null"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isValid_data
name|void
name|tst_QDate
operator|::
name|isValid_data
parameter_list|()
block|{
name|qint64
name|nullJd
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|min
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qint64
argument_list|>
argument_list|(
literal|"jd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"valid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0-0-0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"month 0"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|0
operator|<<
literal|1
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"day 0"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|0
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"month 13"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|13
operator|<<
literal|1
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
comment|// test leap years
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-leap"
argument_list|)
operator|<<
literal|2006
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal leap"
argument_list|)
operator|<<
literal|2004
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|qint64
argument_list|(
literal|2453065
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"century leap 1900"
argument_list|)
operator|<<
literal|1900
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"century leap 2100"
argument_list|)
operator|<<
literal|2100
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"400-years leap 2000"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|qint64
argument_list|(
literal|2451604
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"400-years leap 2400"
argument_list|)
operator|<<
literal|2400
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|qint64
argument_list|(
literal|2597701
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"400-years leap 1600"
argument_list|)
operator|<<
literal|1600
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|qint64
argument_list|(
literal|2305507
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"year 0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|27
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
comment|// test the number of days in months:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jan"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|2451575
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"feb"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
name|qint64
argument_list|(
literal|2451604
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// same data as 400-years leap
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mar"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|3
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|2451635
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"apr"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|4
operator|<<
literal|30
operator|<<
name|qint64
argument_list|(
literal|2451665
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"may"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|5
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|2451696
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jun"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|6
operator|<<
literal|30
operator|<<
name|qint64
argument_list|(
literal|2451726
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jul"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|7
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|2451757
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"aug"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|8
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|2451788
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"sep"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|9
operator|<<
literal|30
operator|<<
name|qint64
argument_list|(
literal|2451818
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"oct"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|10
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|2451849
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nov"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|11
operator|<<
literal|30
operator|<<
name|qint64
argument_list|(
literal|2451879
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dec"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|2451910
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// and invalid dates:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ijan"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|32
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ifeb"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|30
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imar"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|3
operator|<<
literal|32
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"iapr"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|4
operator|<<
literal|31
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imay"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|5
operator|<<
literal|32
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ijun"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|6
operator|<<
literal|31
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ijul"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|7
operator|<<
literal|32
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"iaug"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|8
operator|<<
literal|32
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"isep"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|9
operator|<<
literal|31
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ioct"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|10
operator|<<
literal|32
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"inov"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|11
operator|<<
literal|31
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idec"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|32
operator|<<
name|nullJd
operator|<<
literal|false
expr_stmt|;
comment|// the beginning of the Julian Day calendar:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jd earliest formula"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|1
operator|<<
name|qint64
argument_list|(
operator|-
literal|31738
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jd -1"
argument_list|)
operator|<<
operator|-
literal|4714
operator|<<
literal|11
operator|<<
literal|23
operator|<<
name|qint64
argument_list|(
operator|-
literal|1
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jd 0"
argument_list|)
operator|<<
operator|-
literal|4714
operator|<<
literal|11
operator|<<
literal|24
operator|<<
name|qint64
argument_list|(
literal|0
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jd 1"
argument_list|)
operator|<<
operator|-
literal|4714
operator|<<
literal|11
operator|<<
literal|25
operator|<<
name|qint64
argument_list|(
literal|1
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jd latest formula"
argument_list|)
operator|<<
literal|1400000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
name|qint64
argument_list|(
literal|513060925
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isValid
name|void
name|tst_QDate
operator|::
name|isValid
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qint64
argument_list|,
name|jd
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|isValid
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QDate
name|d
decl_stmt|;
name|d
operator|.
name|setDate
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|isValid
argument_list|()
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|toJulianDay
argument_list|()
argument_list|,
name|jd
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
block|{
name|QCOMPARE
argument_list|(
name|d
operator|.
name|year
argument_list|()
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|month
argument_list|()
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|day
argument_list|()
argument_list|,
name|day
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QCOMPARE
argument_list|(
name|d
operator|.
name|year
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|month
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|day
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|julianDay_data
name|void
name|tst_QDate
operator|::
name|julianDay_data
parameter_list|()
block|{
name|isValid_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|julianDay
name|void
name|tst_QDate
operator|::
name|julianDay
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qint64
argument_list|,
name|jd
argument_list|)
expr_stmt|;
block|{
name|QDate
name|d
decl_stmt|;
name|d
operator|.
name|setDate
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|toJulianDay
argument_list|()
argument_list|,
name|jd
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|jd
operator|!=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|min
argument_list|()
condition|)
block|{
name|QDate
name|d
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|year
argument_list|()
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|month
argument_list|()
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|day
argument_list|()
argument_list|,
name|day
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|dayOfWeek_data
name|void
name|tst_QDate
operator|::
name|dayOfWeek_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"dayOfWeek"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|4
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|5
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|6
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|7
operator|<<
literal|5
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|8
operator|<<
literal|6
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|9
operator|<<
literal|7
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|4
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|5
operator|<<
literal|5
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|6
operator|<<
literal|6
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|7
operator|<<
literal|7
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|8
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dayOfWeek
name|void
name|tst_QDate
operator|::
name|dayOfWeek
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|dayOfWeek
argument_list|)
expr_stmt|;
name|QDate
name|dt
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|dayOfWeek
argument_list|()
argument_list|,
name|dayOfWeek
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dayOfYear_data
name|void
name|tst_QDate
operator|::
name|dayOfYear_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"dayOfYear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|3
operator|<<
literal|3
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|366
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|365
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|1815
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|1815
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|365
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
literal|1500
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
literal|1500
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|365
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
operator|-
literal|1500
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
operator|-
literal|1500
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|365
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
operator|-
literal|4800
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|365
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dayOfYear
name|void
name|tst_QDate
operator|::
name|dayOfYear
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|dayOfYear
argument_list|)
expr_stmt|;
name|QDate
name|dt
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|dayOfYear
argument_list|()
argument_list|,
name|dayOfYear
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|daysInMonth_data
name|void
name|tst_QDate
operator|::
name|daysInMonth_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"daysInMonth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|29
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|3
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|4
operator|<<
literal|1
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|5
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|6
operator|<<
literal|1
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|7
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|8
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|9
operator|<<
literal|1
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|10
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|11
operator|<<
literal|1
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|28
expr_stmt|;
block|}
end_function
begin_function
DECL|function|daysInMonth
name|void
name|tst_QDate
operator|::
name|daysInMonth
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|daysInMonth
argument_list|)
expr_stmt|;
name|QDate
name|dt
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|daysInMonth
argument_list|()
argument_list|,
name|daysInMonth
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|daysInYear
name|void
name|tst_QDate
operator|::
name|daysInYear
parameter_list|()
block|{
name|QDate
name|dt
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|daysInYear
argument_list|()
argument_list|,
literal|366
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|daysInYear
argument_list|()
argument_list|,
literal|365
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setDate
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|daysInYear
argument_list|()
argument_list|,
literal|366
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setDate
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|daysInYear
argument_list|()
argument_list|,
literal|365
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getDate
name|void
name|tst_QDate
operator|::
name|getDate
parameter_list|()
block|{
name|int
name|y
decl_stmt|,
name|m
decl_stmt|,
name|d
decl_stmt|;
name|QDate
name|dt
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|dt
operator|.
name|getDate
argument_list|(
operator|&
name|y
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|d
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|y
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|dt
operator|.
name|getDate
argument_list|(
operator|&
name|y
argument_list|,
operator|&
name|m
argument_list|,
operator|&
name|d
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|y
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|weekNumber_data
name|void
name|tst_QDate
operator|::
name|weekNumber_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedWeekNum"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedYearNum"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|10
operator|<<
literal|2002
operator|<<
literal|2002
operator|<<
literal|3
operator|<<
literal|8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|10
operator|<<
literal|2002
operator|<<
literal|2002
operator|<<
literal|3
operator|<<
literal|8
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|52
operator|<<
literal|1999
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|52
operator|<<
literal|1999
operator|<<
literal|1999
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|2001
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|53
operator|<<
literal|1998
operator|<<
literal|1998
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1985
operator|<<
literal|1984
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|52
operator|<<
literal|2006
operator|<<
literal|2006
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
block|}
end_function
begin_function
DECL|function|weekNumber
name|void
name|tst_QDate
operator|::
name|weekNumber
parameter_list|()
block|{
name|int
name|yearNumber
decl_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedWeekNum
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedYearNum
argument_list|)
expr_stmt|;
name|QDate
name|dt1
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|weekNumber
argument_list|(
operator|&
name|yearNumber
argument_list|)
argument_list|,
name|expectedWeekNum
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|yearNumber
argument_list|,
name|expectedYearNum
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|weekNumber_invalid_data
name|void
name|tst_QDate
operator|::
name|weekNumber_invalid_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|1
operator|<<
literal|32
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|1999
operator|<<
literal|2
operator|<<
literal|29
expr_stmt|;
block|}
end_function
begin_function
DECL|function|weekNumber_invalid
name|void
name|tst_QDate
operator|::
name|weekNumber_invalid
parameter_list|()
block|{
name|QDate
name|dt
decl_stmt|;
name|int
name|yearNumber
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|weekNumber
argument_list|(
operator|&
name|yearNumber
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|julianDaysLimits
name|void
name|tst_QDate
operator|::
name|julianDaysLimits
parameter_list|()
block|{
name|qint64
name|min
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|min
argument_list|()
decl_stmt|;
name|qint64
name|max
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|max
argument_list|()
decl_stmt|;
name|qint64
name|minJd
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|min
argument_list|()
operator|/
literal|2
decl_stmt|;
name|qint64
name|maxJd
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|max
argument_list|()
operator|/
literal|2
decl_stmt|;
name|QDate
name|maxDate
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|maxJd
argument_list|)
decl_stmt|;
name|QDate
name|minDate
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|minJd
argument_list|)
decl_stmt|;
name|QDate
name|zeroDate
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QDate
name|dt
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|min
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|minJd
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|minJd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|minJd
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|maxJd
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|maxJd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|maxJd
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|max
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|maxDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|maxDate
operator|.
name|addDays
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|maxDate
operator|.
name|addDays
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|maxDate
operator|.
name|addDays
argument_list|(
name|max
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|maxDate
operator|.
name|addDays
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|minDate
operator|.
name|addDays
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|minDate
operator|.
name|addDays
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|minDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|minDate
operator|.
name|addDays
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|minDate
operator|.
name|addDays
argument_list|(
name|max
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|zeroDate
operator|.
name|addDays
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|zeroDate
operator|.
name|addDays
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|zeroDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|dt
operator|=
name|zeroDate
operator|.
name|addDays
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dt
operator|=
name|zeroDate
operator|.
name|addDays
argument_list|(
name|max
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addDays
name|void
name|tst_QDate
operator|::
name|addDays
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|amountToAdd
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedYear
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedMonth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedDay
argument_list|)
expr_stmt|;
name|QDate
name|dt
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
decl_stmt|;
name|dt
operator|=
name|dt
operator|.
name|addDays
argument_list|(
name|amountToAdd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
name|expectedYear
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
name|expectedMonth
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
name|expectedDay
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addDays_data
name|void
name|tst_QDate
operator|::
name|addDays_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"amountToAdd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedYear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedMonth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedDay"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|3
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|3
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|30
operator|<<
literal|2001
operator|<<
literal|3
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|3
operator|<<
literal|30
operator|<<
literal|5
operator|<<
literal|2001
operator|<<
literal|4
operator|<<
literal|4
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|1999
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
operator|-
literal|1
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|28
operator|<<
operator|-
literal|1
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|27
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
operator|-
literal|30
operator|<<
literal|2001
operator|<<
literal|1
operator|<<
literal|29
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
operator|-
literal|4713
operator|<<
literal|1
operator|<<
literal|2
operator|<<
operator|-
literal|2
operator|<<
operator|-
literal|4714
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
operator|-
literal|4713
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|2
operator|<<
operator|-
literal|4713
operator|<<
literal|1
operator|<<
literal|4
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addMonths
name|void
name|tst_QDate
operator|::
name|addMonths
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|amountToAdd
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedYear
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedMonth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedDay
argument_list|)
expr_stmt|;
name|QDate
name|dt
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
decl_stmt|;
name|dt
operator|=
name|dt
operator|.
name|addMonths
argument_list|(
name|amountToAdd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
name|expectedYear
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
name|expectedMonth
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
name|expectedDay
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addMonths_data
name|void
name|tst_QDate
operator|::
name|addMonths_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"amountToAdd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedYear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedMonth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedDay"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|3
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|3
operator|<<
literal|29
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|3
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|12
operator|<<
literal|2002
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
literal|12
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|10
operator|<<
literal|15
operator|<<
literal|4
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|15
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|1999
operator|<<
literal|12
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
operator|-
literal|1
operator|<<
literal|1999
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
operator|-
literal|1
operator|<<
literal|2000
operator|<<
literal|11
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
operator|-
literal|12
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
operator|-
literal|7
operator|<<
literal|1999
operator|<<
literal|6
operator|<<
literal|30
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
operator|-
literal|12
operator|<<
literal|1999
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
comment|// year sign change:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
operator|<<
literal|12
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|12
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|12
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data18"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|12
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addYears
name|void
name|tst_QDate
operator|::
name|addYears
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|month
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|day
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|amountToAdd
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedYear
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedMonth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedDay
argument_list|)
expr_stmt|;
name|QDate
name|dt
argument_list|(
name|year
argument_list|,
name|month
argument_list|,
name|day
argument_list|)
decl_stmt|;
name|dt
operator|=
name|dt
operator|.
name|addYears
argument_list|(
name|amountToAdd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
name|expectedYear
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
name|expectedMonth
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
name|expectedDay
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addYears_data
name|void
name|tst_QDate
operator|::
name|addYears_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"year"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"month"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"day"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"amountToAdd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedYear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedMonth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedDay"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
literal|3
operator|<<
literal|2004
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
literal|4
operator|<<
literal|2004
operator|<<
literal|2
operator|<<
literal|29
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|31
operator|<<
operator|-
literal|1
operator|<<
literal|1999
operator|<<
literal|1
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
operator|-
literal|1
operator|<<
literal|1999
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|12
operator|<<
literal|31
operator|<<
operator|-
literal|1
operator|<<
literal|1999
operator|<<
literal|12
operator|<<
literal|31
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|28
operator|<<
operator|-
literal|3
operator|<<
literal|1998
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
operator|-
literal|4
operator|<<
literal|1996
operator|<<
literal|2
operator|<<
literal|29
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|2
operator|<<
literal|29
operator|<<
operator|-
literal|5
operator|<<
literal|1995
operator|<<
literal|2
operator|<<
literal|28
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|1999
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|2000
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
operator|-
literal|2001
operator|<<
operator|-
literal|2
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
operator|-
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1999
operator|<<
operator|-
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data18"
argument_list|)
operator|<<
operator|-
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data19"
argument_list|)
operator|<<
operator|-
literal|2000
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|2001
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|daysTo
name|void
name|tst_QDate
operator|::
name|daysTo
parameter_list|()
block|{
name|qint64
name|minJd
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|min
argument_list|()
operator|/
literal|2
decl_stmt|;
name|qint64
name|maxJd
init|=
name|std
operator|::
name|numeric_limits
argument_list|<
name|qint64
argument_list|>
operator|::
name|max
argument_list|()
operator|/
literal|2
decl_stmt|;
name|QDate
name|dt1
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QDate
name|dt2
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|daysTo
argument_list|(
name|dt2
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt2
operator|.
name|daysTo
argument_list|(
name|dt1
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
operator|-
literal|4
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|daysTo
argument_list|(
name|dt2
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
literal|0
argument_list|)
expr_stmt|;
name|dt1
operator|.
name|setDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|dt2
operator|.
name|setDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt1
operator|.
name|daysTo
argument_list|(
name|dt2
argument_list|)
argument_list|,
operator|(
name|qint64
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QDate
name|maxDate
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|maxJd
argument_list|)
decl_stmt|;
name|QDate
name|minDate
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|minJd
argument_list|)
decl_stmt|;
name|QDate
name|zeroDate
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|maxDate
operator|.
name|daysTo
argument_list|(
name|minDate
argument_list|)
argument_list|,
name|minJd
operator|-
name|maxJd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|minDate
operator|.
name|daysTo
argument_list|(
name|maxDate
argument_list|)
argument_list|,
name|maxJd
operator|-
name|minJd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|maxDate
operator|.
name|daysTo
argument_list|(
name|zeroDate
argument_list|)
argument_list|,
operator|-
name|maxJd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|zeroDate
operator|.
name|daysTo
argument_list|(
name|maxDate
argument_list|)
argument_list|,
name|maxJd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|minDate
operator|.
name|daysTo
argument_list|(
name|zeroDate
argument_list|)
argument_list|,
operator|-
name|minJd
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|zeroDate
operator|.
name|daysTo
argument_list|(
name|minDate
argument_list|)
argument_list|,
name|minJd
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_eq_eq_data
name|void
name|tst_QDate
operator|::
name|operator_eq_eq_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"d1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"d2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expectEqual"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QDate
name|date1
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QDate
name|date2
init|=
name|date1
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QDate
name|date3
init|=
name|date1
operator|.
name|addDays
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QDate
name|date4
init|=
name|date1
operator|.
name|addMonths
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QDate
name|date5
init|=
name|date1
operator|.
name|addMonths
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QDate
name|date6
init|=
name|date1
operator|.
name|addYears
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QDate
name|date7
init|=
name|date1
operator|.
name|addYears
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|date2
operator|<<
name|date3
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|date4
operator|<<
name|date5
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|date6
operator|<<
name|date7
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|date1
operator|<<
name|date2
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|date1
operator|<<
name|date3
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|date1
operator|<<
name|date4
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|date1
operator|<<
name|date5
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|date1
operator|<<
name|date6
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|date1
operator|<<
name|date7
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_eq_eq
name|void
name|tst_QDate
operator|::
name|operator_eq_eq
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|d1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|d2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|expectEqual
argument_list|)
expr_stmt|;
name|bool
name|equal
init|=
name|d1
operator|==
name|d2
decl_stmt|;
name|QCOMPARE
argument_list|(
name|equal
argument_list|,
name|expectEqual
argument_list|)
expr_stmt|;
name|bool
name|notEqual
init|=
name|d1
operator|!=
name|d2
decl_stmt|;
name|QCOMPARE
argument_list|(
name|notEqual
argument_list|,
operator|!
name|expectEqual
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_lt
name|void
name|tst_QDate
operator|::
name|operator_lt
parameter_list|()
block|{
name|QDate
name|d1
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QDate
name|d2
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|<
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|<
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|<
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|<
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|<
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|<
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|<
name|d2
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_gt
name|void
name|tst_QDate
operator|::
name|operator_gt
parameter_list|()
block|{
name|QDate
name|d1
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QDate
name|d2
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|>
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|>
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|>
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|>
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|>
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|>
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|>
name|d2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_lt_eq
name|void
name|tst_QDate
operator|::
name|operator_lt_eq
parameter_list|()
block|{
name|QDate
name|d1
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QDate
name|d2
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|<=
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|<=
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|<=
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|<=
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|<=
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|<=
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|<=
name|d2
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator_gt_eq
name|void
name|tst_QDate
operator|::
name|operator_gt_eq
parameter_list|()
block|{
name|QDate
name|d1
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QDate
name|d2
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|>=
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|>=
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|>=
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|d1
operator|>=
name|d2
operator|)
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|>=
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|>=
name|d2
argument_list|)
expr_stmt|;
name|d1
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|d2
operator|=
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|12
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|d1
operator|>=
name|d2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringDateFormat_data
name|void
name|tst_QDate
operator|::
name|fromStringDateFormat_data
parameter_list|()
block|{
comment|// Since we can't define an element of Qt::DateFormat, d1 will be the date
comment|// expected when we have a TextDate, and d2 will be the date expected when
comment|// we have an ISODate.
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"str1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"str2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"d1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Sat May 20 1995"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1995-05-20"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1995
argument_list|,
literal|5
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Tue Dec 17 2002"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2002-12-17"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|17
argument_list|)
expr_stmt|;
name|QDate
name|d
argument_list|(
literal|1999
argument_list|,
literal|11
argument_list|,
literal|14
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|d
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|TextDate
argument_list|)
operator|<<
name|d
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|ISODate
argument_list|)
operator|<<
name|d
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"xxx Jan 1 0999"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"0999-01-01"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3b"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"xxx Jan 1 999"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"0999-01-01"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"xxx Jan 1 12345"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QDate
argument_list|(
literal|12345
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"xxx Jan 1 -0001"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QDate
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"xxx Jan 1 -4712"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QDate
argument_list|(
operator|-
literal|4712
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"xxx Nov 25 -4713"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QDate
argument_list|(
operator|-
literal|4713
argument_list|,
literal|11
argument_list|,
literal|25
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringDateFormat
name|void
name|tst_QDate
operator|::
name|fromStringDateFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|str1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|str2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|d1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|fromString
argument_list|(
name|str1
argument_list|,
name|Qt
operator|::
name|TextDate
argument_list|)
argument_list|,
name|d1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|str2
operator|.
name|isEmpty
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|fromString
argument_list|(
name|str2
argument_list|,
name|Qt
operator|::
name|ISODate
argument_list|)
argument_list|,
name|d1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringFormat_data
name|void
name|tst_QDate
operator|::
name|fromStringFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
comment|//get localized names
name|QString
name|january
init|=
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QString
name|february
init|=
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|QString
name|march
init|=
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|QString
name|august
init|=
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|8
argument_list|)
decl_stmt|;
name|QString
name|mon
init|=
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QString
name|monday
init|=
name|QDate
operator|::
name|longDayName
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QString
name|tuesday
init|=
name|QDate
operator|::
name|longDayName
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|QString
name|wednesday
init|=
name|QDate
operator|::
name|longDayName
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|QString
name|thursday
init|=
name|QDate
operator|::
name|longDayName
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|QString
name|friday
init|=
name|QDate
operator|::
name|longDayName
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|QString
name|saturday
init|=
name|QDate
operator|::
name|longDayName
argument_list|(
literal|6
argument_list|)
decl_stmt|;
name|QString
name|sunday
init|=
name|QDate
operator|::
name|longDayName
argument_list|(
literal|7
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|defDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|" "
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|" "
argument_list|)
operator|<<
name|QString
argument_list|(
literal|" "
argument_list|)
operator|<<
name|defDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-%$%#"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"$*(#@"
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"'d'"
argument_list|)
operator|<<
name|defDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"101010"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dMyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1910
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"101010b"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dMyy"
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|january
operator|<<
name|QString
argument_list|(
literal|"MMMM"
argument_list|)
operator|<<
name|defDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ball"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"balle"
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"balleh"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"balleh"
argument_list|)
operator|<<
name|defDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"10.01.1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"M.dd.d"
argument_list|)
operator|<<
name|QDate
argument_list|(
name|defDate
argument_list|()
operator|.
name|year
argument_list|()
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-1.01.1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"M.dd.d"
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"11010"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dMMyy"
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d"
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"132"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Md"
argument_list|)
operator|<<
name|invalidDate
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|february
operator|<<
name|QString
argument_list|(
literal|"MMMM"
argument_list|)
operator|<<
name|QDate
argument_list|(
name|defDate
argument_list|()
operator|.
name|year
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QString
name|date
init|=
name|mon
operator|+
literal|" "
operator|+
name|august
operator|+
literal|" 8 2005"
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|date
operator|<<
name|QString
argument_list|(
literal|"ddd MMMM d yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2000:00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyy:yy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data18"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1999:99"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyy:yy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data19"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2099:99"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyy:yy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2099
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data20"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2001:01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyy:yy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data21"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"99"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data22"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1901
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data23"
argument_list|)
operator|<<
name|monday
operator|<<
name|QString
argument_list|(
literal|"dddd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data24"
argument_list|)
operator|<<
name|tuesday
operator|<<
name|QString
argument_list|(
literal|"dddd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data25"
argument_list|)
operator|<<
name|wednesday
operator|<<
name|QString
argument_list|(
literal|"dddd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data26"
argument_list|)
operator|<<
name|thursday
operator|<<
name|QString
argument_list|(
literal|"dddd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data27"
argument_list|)
operator|<<
name|friday
operator|<<
name|QString
argument_list|(
literal|"dddd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data28"
argument_list|)
operator|<<
name|saturday
operator|<<
name|QString
argument_list|(
literal|"dddd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data29"
argument_list|)
operator|<<
name|sunday
operator|<<
name|QString
argument_list|(
literal|"dddd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1900
argument_list|,
literal|1
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data30"
argument_list|)
operator|<<
name|monday
operator|+
literal|" 2006"
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data31"
argument_list|)
operator|<<
name|tuesday
operator|+
literal|" 2006"
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data32"
argument_list|)
operator|<<
name|wednesday
operator|+
literal|" 2006"
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data33"
argument_list|)
operator|<<
name|thursday
operator|+
literal|" 2006"
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data34"
argument_list|)
operator|<<
name|friday
operator|+
literal|" 2006"
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data35"
argument_list|)
operator|<<
name|saturday
operator|+
literal|" 2006"
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|1
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data36"
argument_list|)
operator|<<
name|sunday
operator|+
literal|" 2006"
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data37"
argument_list|)
operator|<<
name|tuesday
operator|+
literal|" 2007 "
operator|+
name|march
operator|<<
name|QString
argument_list|(
literal|"dddd yyyy MMMM"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data38"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"21052006"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ddMMyyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|5
argument_list|,
literal|21
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data39"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"210506"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ddMMyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1906
argument_list|,
literal|5
argument_list|,
literal|21
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data40"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"21/5/2006"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d/M/yyyy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|5
argument_list|,
literal|21
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data41"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"21/5/06"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d/M/yy"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1906
argument_list|,
literal|5
argument_list|,
literal|21
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data42"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"20060521"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyyMMdd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|5
argument_list|,
literal|21
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data43"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"060521"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyMMdd"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1906
argument_list|,
literal|5
argument_list|,
literal|21
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromStringFormat
name|void
name|tst_QDate
operator|::
name|fromStringFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QDate
name|dt
init|=
name|QDate
operator|::
name|fromString
argument_list|(
name|string
argument_list|,
name|format
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toStringFormat_data
name|void
name|tst_QDate
operator|::
name|toStringFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"t"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"str"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1995
argument_list|,
literal|5
argument_list|,
literal|20
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d-M-yy"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"20-5-95"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|17
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd-MM-yyyy"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"17-12-2002"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1995
argument_list|,
literal|5
argument_list|,
literal|20
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"M-yy"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"5-95"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|12
argument_list|,
literal|17
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"17"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QDate
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"dd-mm-yyyy"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toStringFormat
name|void
name|tst_QDate
operator|::
name|toStringFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|t
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|str
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|.
name|toString
argument_list|(
name|format
argument_list|)
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toStringDateFormat_data
name|void
name|tst_QDate
operator|::
name|toStringDateFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"date"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|Qt
operator|::
name|DateFormat
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QString
argument_list|(
literal|"0001-01-01"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|11
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QString
argument_list|(
literal|"0011-01-01"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|111
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QString
argument_list|(
literal|"0111-01-01"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1974
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|)
operator|<<
name|Qt
operator|::
name|ISODate
operator|<<
name|QString
argument_list|(
literal|"1974-12-01"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toStringDateFormat
name|void
name|tst_QDate
operator|::
name|toStringDateFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|date
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|Qt
operator|::
name|DateFormat
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedStr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|SystemLocaleShortDate
argument_list|)
argument_list|,
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|toString
argument_list|(
name|date
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|LocaleDate
argument_list|)
argument_list|,
name|QLocale
argument_list|()
operator|.
name|toString
argument_list|(
name|date
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
name|QLocale
operator|::
name|setDefault
argument_list|(
name|QLocale
operator|::
name|German
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|SystemLocaleShortDate
argument_list|)
argument_list|,
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|toString
argument_list|(
name|date
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|LocaleDate
argument_list|)
argument_list|,
name|QLocale
argument_list|()
operator|.
name|toString
argument_list|(
name|date
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|format
argument_list|)
argument_list|,
name|expectedStr
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isLeapYear
name|void
name|tst_QDate
operator|::
name|isLeapYear
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|4801
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|4800
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|4445
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|4444
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Doesn't exist
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|700
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|1500
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|1600
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|1700
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|1800
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|1900
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2100
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2200
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2300
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2400
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2500
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2600
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2700
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isLeapYear
argument_list|(
literal|2800
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
operator|-
literal|4713
init|;
name|i
operator|<=
literal|10000
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|==
literal|0
condition|)
continue|continue;
name|QVERIFY
argument_list|(
operator|!
name|QDate
argument_list|(
name|i
argument_list|,
literal|2
argument_list|,
literal|29
argument_list|)
operator|.
name|isValid
argument_list|()
operator|==
operator|!
name|QDate
operator|::
name|isLeapYear
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|yearsZeroToNinetyNine
name|void
name|tst_QDate
operator|::
name|yearsZeroToNinetyNine
parameter_list|()
block|{
block|{
name|QDate
name|dt
argument_list|(
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
block|{
name|QDate
name|dt
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
block|{
name|QDate
name|dt
argument_list|(
literal|99
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|QDate
operator|::
name|isValid
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isValid
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDate
operator|::
name|isValid
argument_list|(
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
name|QT_DEPRECATED_SINCE
argument_list|(
literal|5
operator|,
literal|0
argument_list|)
block|{
name|QDate
name|dt
decl_stmt|;
name|dt
operator|.
name|setYMD
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
literal|1901
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|{
name|QDate
name|dt
decl_stmt|;
name|dt
operator|.
name|setDate
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|year
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|month
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|day
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setDate
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|dt
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|negativeYear
name|void
name|tst_QDate
operator|::
name|negativeYear
parameter_list|()
specifier|const
block|{
name|QDate
name|y
argument_list|(
operator|-
literal|20
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|y
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|y
operator|.
name|year
argument_list|()
argument_list|,
operator|-
literal|20
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|printNegativeYear
name|void
name|tst_QDate
operator|::
name|printNegativeYear
parameter_list|()
specifier|const
block|{
block|{
name|QDate
name|date
argument_list|(
operator|-
literal|500
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"-0500"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QDate
name|date
argument_list|(
operator|-
literal|10
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"-0010"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QDate
name|date
argument_list|(
operator|-
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|date
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|date
operator|.
name|toString
argument_list|(
name|QLatin1String
argument_list|(
literal|"yyyy"
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"-0002"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|roundtripGermanLocale
name|void
name|tst_QDate
operator|::
name|roundtripGermanLocale
parameter_list|()
specifier|const
block|{
comment|/* This code path should not result in warnings. */
specifier|const
name|QDate
name|theDate
argument_list|(
name|QDate
operator|::
name|currentDate
argument_list|()
argument_list|)
decl_stmt|;
name|theDate
operator|.
name|fromString
argument_list|(
name|theDate
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|TextDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|TextDate
argument_list|)
expr_stmt|;
specifier|const
name|QDateTime
name|theDateTime
argument_list|(
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
argument_list|)
decl_stmt|;
name|theDateTime
operator|.
name|fromString
argument_list|(
name|theDateTime
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|TextDate
argument_list|)
argument_list|,
name|Qt
operator|::
name|TextDate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|shortDayName
name|void
name|tst_QDate
operator|::
name|shortDayName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Mon"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|7
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Sun"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|7
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
name|i
argument_list|)
argument_list|,
name|locale
operator|.
name|dayName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|standaloneShortDayName
name|void
name|tst_QDate
operator|::
name|standaloneShortDayName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|0
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|1
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Mon"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|7
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Sun"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|7
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortDayName
argument_list|(
name|i
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|locale
operator|.
name|standaloneDayName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|longDayName
name|void
name|tst_QDate
operator|::
name|longDayName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Monday"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
literal|7
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Sunday"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|7
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
name|i
argument_list|)
argument_list|,
name|locale
operator|.
name|dayName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|LongFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|standaloneLongDayName
name|void
name|tst_QDate
operator|::
name|standaloneLongDayName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
literal|0
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
literal|1
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Monday"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
literal|7
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Sunday"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|7
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longDayName
argument_list|(
name|i
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|locale
operator|.
name|standaloneDayName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|LongFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|shortMonthName
name|void
name|tst_QDate
operator|::
name|shortMonthName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Jan"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|8
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Aug"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|12
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
name|i
argument_list|)
argument_list|,
name|locale
operator|.
name|monthName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|standaloneShortMonthName
name|void
name|tst_QDate
operator|::
name|standaloneShortMonthName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|0
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|1
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Jan"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|8
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Aug"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|12
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
name|i
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|locale
operator|.
name|standaloneMonthName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|ShortFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|longMonthName
name|void
name|tst_QDate
operator|::
name|longMonthName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"January"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|8
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"August"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|12
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
name|i
argument_list|)
argument_list|,
name|locale
operator|.
name|monthName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|LongFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|standaloneLongMonthName
name|void
name|tst_QDate
operator|::
name|standaloneLongMonthName
parameter_list|()
specifier|const
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|0
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|language
argument_list|()
operator|==
name|QLocale
operator|::
name|C
condition|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|1
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"January"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|8
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"August"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
name|locale
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|12
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|QDate
operator|::
name|longMonthName
argument_list|(
name|i
argument_list|,
name|QDate
operator|::
name|StandaloneFormat
argument_list|)
argument_list|,
name|locale
operator|.
name|standaloneMonthName
argument_list|(
name|i
argument_list|,
name|QLocale
operator|::
name|LongFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|roundtrip
name|void
name|tst_QDate
operator|::
name|roundtrip
parameter_list|()
specifier|const
block|{
comment|// Test round trip, this exercises setDate(), isValid(), isLeapYear(),
comment|// year(), month(), day(), julianDayFromDate(), and getDateFromJulianDay()
comment|// to ensure they are internally consistent (but doesn't guarantee correct)
comment|// Test Julian round trip around JD 0 and current low end of valid range
name|QDate
name|testDate
decl_stmt|;
name|QDate
name|loopDate
init|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
operator|-
literal|31738
argument_list|)
decl_stmt|;
comment|// 1 Jan 4800 BC
while|while
condition|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
operator|<=
literal|5150
condition|)
block|{
comment|// 31 Dec 4700 BC
name|testDate
operator|.
name|setDate
argument_list|(
name|loopDate
operator|.
name|year
argument_list|()
argument_list|,
name|loopDate
operator|.
name|month
argument_list|()
argument_list|,
name|loopDate
operator|.
name|day
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
argument_list|,
name|testDate
operator|.
name|toJulianDay
argument_list|()
argument_list|)
expr_stmt|;
name|loopDate
operator|=
name|loopDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Test Julian round trip in both BC and AD
name|loopDate
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|1684901
argument_list|)
expr_stmt|;
comment|//  1 Jan 100 BC
while|while
condition|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
operator|<=
literal|1757949
condition|)
block|{
comment|// 31 Dec 100 AD
name|testDate
operator|.
name|setDate
argument_list|(
name|loopDate
operator|.
name|year
argument_list|()
argument_list|,
name|loopDate
operator|.
name|month
argument_list|()
argument_list|,
name|loopDate
operator|.
name|day
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
argument_list|,
name|testDate
operator|.
name|toJulianDay
argument_list|()
argument_list|)
expr_stmt|;
name|loopDate
operator|=
name|loopDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Test Gregorian round trip during current useful period
name|loopDate
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|2378497
argument_list|)
expr_stmt|;
comment|//  1 Jan 1900 AD
while|while
condition|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
operator|<=
literal|2488433
condition|)
block|{
comment|// 31 Dec 2100 AD
name|testDate
operator|.
name|setDate
argument_list|(
name|loopDate
operator|.
name|year
argument_list|()
argument_list|,
name|loopDate
operator|.
name|month
argument_list|()
argument_list|,
name|loopDate
operator|.
name|day
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
argument_list|,
name|testDate
operator|.
name|toJulianDay
argument_list|()
argument_list|)
expr_stmt|;
name|loopDate
operator|=
name|loopDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Test Gregorian round trip at top end of widget/format range
name|loopDate
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|5336961
argument_list|)
expr_stmt|;
comment|//  1 Jan 9900 AD
while|while
condition|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
operator|<=
literal|5373484
condition|)
block|{
comment|// 31 Dec 9999 AD
name|testDate
operator|.
name|setDate
argument_list|(
name|loopDate
operator|.
name|year
argument_list|()
argument_list|,
name|loopDate
operator|.
name|month
argument_list|()
argument_list|,
name|loopDate
operator|.
name|day
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
argument_list|,
name|testDate
operator|.
name|toJulianDay
argument_list|()
argument_list|)
expr_stmt|;
name|loopDate
operator|=
name|loopDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Test Gregorian round trip at top end of conversion range
name|loopDate
operator|=
name|QDate
operator|::
name|fromJulianDay
argument_list|(
literal|513024036
argument_list|)
expr_stmt|;
comment|//  1 Jan 1399900 AD
while|while
condition|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
operator|<=
literal|513060925
condition|)
block|{
comment|// 31 Dec 1400000 AD
name|testDate
operator|.
name|setDate
argument_list|(
name|loopDate
operator|.
name|year
argument_list|()
argument_list|,
name|loopDate
operator|.
name|month
argument_list|()
argument_list|,
name|loopDate
operator|.
name|day
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|loopDate
operator|.
name|toJulianDay
argument_list|()
argument_list|,
name|testDate
operator|.
name|toJulianDay
argument_list|()
argument_list|)
expr_stmt|;
name|loopDate
operator|=
name|loopDate
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QDate
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdate.moc"
end_include
end_unit
