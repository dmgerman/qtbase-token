begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest>
end_include
begin_include
include|#
directive|include
file|"qjsonarray.h"
end_include
begin_include
include|#
directive|include
file|"qjsonobject.h"
end_include
begin_include
include|#
directive|include
file|"qjsonvalue.h"
end_include
begin_include
include|#
directive|include
file|"qjsondocument.h"
end_include
begin_include
include|#
directive|include
file|<limits>
end_include
begin_define
DECL|macro|INVALID_UNICODE
define|#
directive|define
name|INVALID_UNICODE
value|"\xCE\xBA\xE1"
end_define
begin_define
DECL|macro|UNICODE_NON_CHARACTER
define|#
directive|define
name|UNICODE_NON_CHARACTER
value|"\xEF\xBF\xBF"
end_define
begin_define
DECL|macro|UNICODE_DJE
define|#
directive|define
name|UNICODE_DJE
value|"\320\202"
end_define
begin_comment
DECL|macro|UNICODE_DJE
comment|// Character from the Serbian Cyrillic alphabet
end_comment
begin_class
DECL|class|tst_QtJson
class|class
name|tst_QtJson
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QtJson
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
constructor_decl|;
private|private
name|Q_SLOTS
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
name|void
name|testValueSimple
parameter_list|()
function_decl|;
name|void
name|testNumbers
parameter_list|()
function_decl|;
name|void
name|testNumbers_2
parameter_list|()
function_decl|;
name|void
name|testNumbers_3
parameter_list|()
function_decl|;
name|void
name|testObjectSimple
parameter_list|()
function_decl|;
name|void
name|testObjectSmallKeys
parameter_list|()
function_decl|;
name|void
name|testArraySimple
parameter_list|()
function_decl|;
name|void
name|testValueObject
parameter_list|()
function_decl|;
name|void
name|testValueArray
parameter_list|()
function_decl|;
name|void
name|testObjectNested
parameter_list|()
function_decl|;
name|void
name|testArrayNested
parameter_list|()
function_decl|;
name|void
name|testArrayNestedEmpty
parameter_list|()
function_decl|;
name|void
name|testArrayComfortOperators
parameter_list|()
function_decl|;
name|void
name|testObjectNestedEmpty
parameter_list|()
function_decl|;
name|void
name|testValueRef
parameter_list|()
function_decl|;
name|void
name|testObjectIteration
parameter_list|()
function_decl|;
name|void
name|testArrayIteration
parameter_list|()
function_decl|;
name|void
name|testObjectFind
parameter_list|()
function_decl|;
name|void
name|testDocument
parameter_list|()
function_decl|;
name|void
name|nullValues
parameter_list|()
function_decl|;
name|void
name|nullArrays
parameter_list|()
function_decl|;
name|void
name|nullObject
parameter_list|()
function_decl|;
name|void
name|keySorting
parameter_list|()
function_decl|;
name|void
name|undefinedValues
parameter_list|()
function_decl|;
name|void
name|fromVariantMap
parameter_list|()
function_decl|;
name|void
name|toVariantMap
parameter_list|()
function_decl|;
name|void
name|toVariantList
parameter_list|()
function_decl|;
name|void
name|toJson
parameter_list|()
function_decl|;
name|void
name|toJsonSillyNumericValues
parameter_list|()
function_decl|;
name|void
name|toJsonLargeNumericValues
parameter_list|()
function_decl|;
name|void
name|fromJson
parameter_list|()
function_decl|;
name|void
name|fromJsonErrors
parameter_list|()
function_decl|;
name|void
name|fromBinary
parameter_list|()
function_decl|;
name|void
name|toAndFromBinary_data
parameter_list|()
function_decl|;
name|void
name|toAndFromBinary
parameter_list|()
function_decl|;
name|void
name|parseNumbers
parameter_list|()
function_decl|;
name|void
name|parseStrings
parameter_list|()
function_decl|;
name|void
name|parseDuplicateKeys
parameter_list|()
function_decl|;
name|void
name|testParser
parameter_list|()
function_decl|;
name|void
name|compactArray
parameter_list|()
function_decl|;
name|void
name|compactObject
parameter_list|()
function_decl|;
name|void
name|validation
parameter_list|()
function_decl|;
name|void
name|assignToDocument
parameter_list|()
function_decl|;
name|void
name|testDuplicateKeys
parameter_list|()
function_decl|;
name|void
name|testCompaction
parameter_list|()
function_decl|;
name|void
name|testDebugStream
parameter_list|()
function_decl|;
name|void
name|testCompactionError
parameter_list|()
function_decl|;
name|void
name|parseUnicodeEscapes
parameter_list|()
function_decl|;
name|void
name|assignObjects
parameter_list|()
function_decl|;
name|void
name|assignArrays
parameter_list|()
function_decl|;
name|void
name|testTrailingComma
parameter_list|()
function_decl|;
name|void
name|testDetachBug
parameter_list|()
function_decl|;
name|void
name|valueEquals
parameter_list|()
function_decl|;
name|void
name|bom
parameter_list|()
function_decl|;
name|void
name|nesting
parameter_list|()
function_decl|;
name|void
name|longStrings
parameter_list|()
function_decl|;
private|private:
DECL|member|testDataDir
name|QString
name|testDataDir
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QtJson
name|tst_QtJson
operator|::
name|tst_QtJson
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QtJson
operator|::
name|initTestCase
parameter_list|()
block|{
name|testDataDir
operator|=
name|QFileInfo
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"test.json"
argument_list|)
argument_list|)
operator|.
name|absolutePath
argument_list|()
expr_stmt|;
if|if
condition|(
name|testDataDir
operator|.
name|isEmpty
argument_list|()
condition|)
name|testDataDir
operator|=
name|QCoreApplication
operator|::
name|applicationDirPath
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QtJson
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QtJson
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QtJson
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|testValueSimple
name|void
name|tst_QtJson
operator|::
name|testValueSimple
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"number"
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|array
operator|.
name|append
argument_list|(
operator|(
name|double
operator|)
name|i
argument_list|)
expr_stmt|;
name|QJsonValue
name|value
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|0.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toObject
argument_list|()
argument_list|,
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toArray
argument_list|()
argument_list|,
name|QJsonArray
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toDouble
argument_list|(
literal|99.
argument_list|)
argument_list|,
literal|99.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toString
argument_list|(
name|QString
argument_list|(
literal|"test"
argument_list|)
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toObject
argument_list|(
name|object
argument_list|)
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toArray
argument_list|(
name|array
argument_list|)
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|value
operator|=
literal|999.
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toBool
argument_list|(
literal|true
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toObject
argument_list|()
argument_list|,
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toArray
argument_list|()
argument_list|,
name|QJsonArray
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|0.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toObject
argument_list|()
argument_list|,
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toArray
argument_list|()
argument_list|,
name|QJsonArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testNumbers
name|void
name|tst_QtJson
operator|::
name|testNumbers
parameter_list|()
block|{
block|{
name|int
name|numbers
index|[]
init|=
block|{
literal|0
block|,
operator|-
literal|1
block|,
literal|1
block|,
operator|(
literal|1
operator|<<
literal|26
operator|)
block|,
operator|(
literal|1
operator|<<
literal|27
operator|)
block|,
operator|(
literal|1
operator|<<
literal|28
operator|)
block|,
operator|-
operator|(
literal|1
operator|<<
literal|26
operator|)
block|,
operator|-
operator|(
literal|1
operator|<<
literal|27
operator|)
block|,
operator|-
operator|(
literal|1
operator|<<
literal|28
operator|)
block|,
operator|(
literal|1
operator|<<
literal|26
operator|)
operator|-
literal|1
block|,
operator|(
literal|1
operator|<<
literal|27
operator|)
operator|-
literal|1
block|,
operator|(
literal|1
operator|<<
literal|28
operator|)
operator|-
literal|1
block|,
operator|-
operator|(
operator|(
literal|1
operator|<<
literal|26
operator|)
operator|-
literal|1
operator|)
block|,
operator|-
operator|(
operator|(
literal|1
operator|<<
literal|27
operator|)
operator|-
literal|1
operator|)
block|,
operator|-
operator|(
operator|(
literal|1
operator|<<
literal|28
operator|)
operator|-
literal|1
operator|)
block|}
decl_stmt|;
name|int
name|n
init|=
sizeof|sizeof
argument_list|(
name|numbers
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|int
argument_list|)
decl_stmt|;
name|QJsonArray
name|array
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
operator|++
name|i
control|)
name|array
operator|.
name|append
argument_list|(
operator|(
name|double
operator|)
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|QByteArray
name|serialized
init|=
name|QJsonDocument
argument_list|(
name|array
argument_list|)
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QJsonDocument
name|json
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|serialized
argument_list|)
decl_stmt|;
name|QJsonArray
name|array2
init|=
name|json
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
name|array2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|array
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array2
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array2
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|{
name|qint64
name|numbers
index|[]
init|=
block|{
literal|0
block|,
operator|-
literal|1
block|,
literal|1
block|,
operator|(
literal|1ll
operator|<<
literal|54
operator|)
block|,
operator|(
literal|1ll
operator|<<
literal|55
operator|)
block|,
operator|(
literal|1ll
operator|<<
literal|56
operator|)
block|,
operator|-
operator|(
literal|1ll
operator|<<
literal|54
operator|)
block|,
operator|-
operator|(
literal|1ll
operator|<<
literal|55
operator|)
block|,
operator|-
operator|(
literal|1ll
operator|<<
literal|56
operator|)
block|,
operator|(
literal|1ll
operator|<<
literal|54
operator|)
operator|-
literal|1
block|,
operator|(
literal|1ll
operator|<<
literal|55
operator|)
operator|-
literal|1
block|,
operator|(
literal|1ll
operator|<<
literal|56
operator|)
operator|-
literal|1
block|,
operator|-
operator|(
operator|(
literal|1ll
operator|<<
literal|54
operator|)
operator|-
literal|1
operator|)
block|,
operator|-
operator|(
operator|(
literal|1ll
operator|<<
literal|55
operator|)
operator|-
literal|1
operator|)
block|,
operator|-
operator|(
operator|(
literal|1ll
operator|<<
literal|56
operator|)
operator|-
literal|1
operator|)
block|}
decl_stmt|;
name|int
name|n
init|=
sizeof|sizeof
argument_list|(
name|numbers
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|qint64
argument_list|)
decl_stmt|;
name|QJsonArray
name|array
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
operator|++
name|i
control|)
name|array
operator|.
name|append
argument_list|(
operator|(
name|double
operator|)
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|QByteArray
name|serialized
init|=
name|QJsonDocument
argument_list|(
name|array
argument_list|)
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QJsonDocument
name|json
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|serialized
argument_list|)
decl_stmt|;
name|QJsonArray
name|array2
init|=
name|json
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
name|array2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|array
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array2
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array2
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|{
name|double
name|numbers
index|[]
init|=
block|{
literal|0
block|,
operator|-
literal|1
block|,
literal|1
block|,
name|double
argument_list|(
literal|1ll
operator|<<
literal|54
argument_list|)
block|,
name|double
argument_list|(
literal|1ll
operator|<<
literal|55
argument_list|)
block|,
name|double
argument_list|(
literal|1ll
operator|<<
literal|56
argument_list|)
block|,
name|double
argument_list|(
operator|-
operator|(
literal|1ll
operator|<<
literal|54
operator|)
argument_list|)
block|,
name|double
argument_list|(
operator|-
operator|(
literal|1ll
operator|<<
literal|55
operator|)
argument_list|)
block|,
name|double
argument_list|(
operator|-
operator|(
literal|1ll
operator|<<
literal|56
operator|)
argument_list|)
block|,
name|double
argument_list|(
operator|(
literal|1ll
operator|<<
literal|54
operator|)
operator|-
literal|1
argument_list|)
block|,
name|double
argument_list|(
operator|(
literal|1ll
operator|<<
literal|55
operator|)
operator|-
literal|1
argument_list|)
block|,
name|double
argument_list|(
operator|(
literal|1ll
operator|<<
literal|56
operator|)
operator|-
literal|1
argument_list|)
block|,
name|double
argument_list|(
operator|-
operator|(
operator|(
literal|1ll
operator|<<
literal|54
operator|)
operator|-
literal|1
operator|)
argument_list|)
block|,
name|double
argument_list|(
operator|-
operator|(
operator|(
literal|1ll
operator|<<
literal|55
operator|)
operator|-
literal|1
operator|)
argument_list|)
block|,
name|double
argument_list|(
operator|-
operator|(
operator|(
literal|1ll
operator|<<
literal|56
operator|)
operator|-
literal|1
operator|)
argument_list|)
block|,
literal|1.1
block|,
literal|0.1
block|,
operator|-
literal|0.1
block|,
operator|-
literal|1.1
block|,
literal|1e200
block|,
operator|-
literal|1e200
block|}
decl_stmt|;
name|int
name|n
init|=
sizeof|sizeof
argument_list|(
name|numbers
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|double
argument_list|)
decl_stmt|;
name|QJsonArray
name|array
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
operator|++
name|i
control|)
name|array
operator|.
name|append
argument_list|(
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|QByteArray
name|serialized
init|=
name|QJsonDocument
argument_list|(
name|array
argument_list|)
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QJsonDocument
name|json
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|serialized
argument_list|)
decl_stmt|;
name|QJsonArray
name|array2
init|=
name|json
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
name|array2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|array
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array2
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array2
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
name|numbers
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|testNumbers_2
name|void
name|tst_QtJson
operator|::
name|testNumbers_2
parameter_list|()
block|{
comment|// test cases from TC39 test suite for ECMAScript
comment|// http://hg.ecmascript.org/tests/test262/file/d067d2f0ca30/test/suite/ch08/8.5/8.5.1.js
comment|// Fill an array with 2 to the power of (0 ... -1075)
name|double
name|value
init|=
literal|1
decl_stmt|;
name|double
name|floatValues
index|[
literal|1076
index|]
decl_stmt|,
name|floatValues_1
index|[
literal|1076
index|]
decl_stmt|;
name|QJsonObject
name|jObject
decl_stmt|;
for|for
control|(
name|int
name|power
init|=
literal|0
init|;
name|power
operator|<=
literal|1075
condition|;
name|power
operator|++
control|)
block|{
name|floatValues
index|[
name|power
index|]
operator|=
name|value
expr_stmt|;
name|jObject
operator|.
name|insert
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|power
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|floatValues
index|[
name|power
index|]
argument_list|)
argument_list|)
expr_stmt|;
comment|// Use basic math operations for testing, which are required to support 'gradual underflow' rather
comment|// than Math.pow etc..., which are defined as 'implementation dependent'.
name|value
operator|=
name|value
operator|*
literal|0.5
expr_stmt|;
block|}
name|QJsonDocument
name|jDocument1
argument_list|(
name|jObject
argument_list|)
decl_stmt|;
name|QByteArray
name|ba
argument_list|(
name|jDocument1
operator|.
name|toJson
argument_list|()
argument_list|)
decl_stmt|;
name|QJsonDocument
name|jDocument2
argument_list|(
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|ba
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|power
init|=
literal|0
init|;
name|power
operator|<=
literal|1075
condition|;
name|power
operator|++
control|)
block|{
name|floatValues_1
index|[
name|power
index|]
operator|=
name|jDocument2
operator|.
name|object
argument_list|()
operator|.
name|value
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|power
argument_list|)
argument_list|)
operator|.
name|toDouble
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_BLACKBERRY
if|if
condition|(
name|power
operator|>=
literal|970
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"See QTBUG-37066"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY2
argument_list|(
name|floatValues
index|[
name|power
index|]
operator|==
name|floatValues_1
index|[
name|power
index|]
argument_list|,
name|QString
argument_list|(
literal|"floatValues[%1] != floatValues_1[%1]"
argument_list|)
operator|.
name|arg
argument_list|(
name|power
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// The last value is below min denorm and should round to 0, everything else should contain a value
name|QVERIFY2
argument_list|(
name|floatValues_1
index|[
literal|1075
index|]
operator|==
literal|0
argument_list|,
literal|"Value after min denorm should round to 0"
argument_list|)
expr_stmt|;
comment|// Validate the last actual value is min denorm
name|QVERIFY2
argument_list|(
name|floatValues_1
index|[
literal|1074
index|]
operator|==
literal|4.9406564584124654417656879286822e-324
argument_list|,
name|QString
argument_list|(
literal|"Min denorm value is incorrect: %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|floatValues_1
index|[
literal|1074
index|]
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
comment|// Validate that every value is half the value before it up to 1
for|for
control|(
name|int
name|index
init|=
literal|1074
init|;
name|index
operator|>
literal|0
condition|;
name|index
operator|--
control|)
block|{
name|QVERIFY2
argument_list|(
name|floatValues_1
index|[
name|index
index|]
operator|!=
literal|0
argument_list|,
name|QString
argument_list|(
literal|"2**- %1 should not be 0"
argument_list|)
operator|.
name|arg
argument_list|(
name|index
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|floatValues_1
index|[
name|index
operator|-
literal|1
index|]
operator|==
operator|(
name|floatValues_1
index|[
name|index
index|]
operator|*
literal|2
operator|)
argument_list|,
name|QString
argument_list|(
literal|"Value should be double adjacent value at index %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|index
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testNumbers_3
name|void
name|tst_QtJson
operator|::
name|testNumbers_3
parameter_list|()
block|{
comment|// test case from QTBUG-31926
name|double
name|d1
init|=
literal|1.123451234512345
decl_stmt|;
name|double
name|d2
init|=
literal|1.123451234512346
decl_stmt|;
name|QJsonObject
name|jObject
decl_stmt|;
name|jObject
operator|.
name|insert
argument_list|(
literal|"d1"
argument_list|,
name|QJsonValue
argument_list|(
name|d1
argument_list|)
argument_list|)
expr_stmt|;
name|jObject
operator|.
name|insert
argument_list|(
literal|"d2"
argument_list|,
name|QJsonValue
argument_list|(
name|d2
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonDocument
name|jDocument1
argument_list|(
name|jObject
argument_list|)
decl_stmt|;
name|QByteArray
name|ba
argument_list|(
name|jDocument1
operator|.
name|toJson
argument_list|()
argument_list|)
decl_stmt|;
name|QJsonDocument
name|jDocument2
argument_list|(
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|ba
argument_list|)
argument_list|)
decl_stmt|;
name|double
name|d1_1
argument_list|(
name|jDocument2
operator|.
name|object
argument_list|()
operator|.
name|value
argument_list|(
literal|"d1"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|)
decl_stmt|;
name|double
name|d2_1
argument_list|(
name|jDocument2
operator|.
name|object
argument_list|()
operator|.
name|value
argument_list|(
literal|"d2"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|d1_1
operator|!=
name|d2_1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testObjectSimple
name|void
name|tst_QtJson
operator|::
name|testObjectSimple
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"number"
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"number"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"number"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"string"
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"string"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"string"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"boolean"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"boolean"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QStringList
name|keys
init|=
name|object
operator|.
name|keys
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|keys
operator|.
name|contains
argument_list|(
literal|"number"
argument_list|)
argument_list|,
literal|"key number not found"
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|keys
operator|.
name|contains
argument_list|(
literal|"string"
argument_list|)
argument_list|,
literal|"key string not found"
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|keys
operator|.
name|contains
argument_list|(
literal|"boolean"
argument_list|)
argument_list|,
literal|"key boolean not found"
argument_list|)
expr_stmt|;
comment|// if we put a JsonValue into the JsonObject and retrieve
comment|// it, it should be identical.
name|QJsonValue
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"value"
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"value"
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|object
operator|.
name|size
argument_list|()
decl_stmt|;
name|object
operator|.
name|remove
argument_list|(
literal|"boolean"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
name|size
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|object
operator|.
name|contains
argument_list|(
literal|"boolean"
argument_list|)
argument_list|,
literal|"key boolean should have been removed"
argument_list|)
expr_stmt|;
name|QJsonValue
name|taken
init|=
name|object
operator|.
name|take
argument_list|(
literal|"value"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|taken
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
operator|!
name|object
operator|.
name|contains
argument_list|(
literal|"value"
argument_list|)
argument_list|,
literal|"key value should have been removed"
argument_list|)
expr_stmt|;
name|QString
name|before
init|=
name|object
operator|.
name|value
argument_list|(
literal|"string"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"string"
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"string"
argument_list|)
operator|.
name|toString
argument_list|()
operator|!=
name|before
argument_list|,
literal|"value should have been updated"
argument_list|)
expr_stmt|;
name|size
operator|=
name|object
operator|.
name|size
argument_list|()
expr_stmt|;
name|QJsonObject
name|subobject
decl_stmt|;
name|subobject
operator|.
name|insert
argument_list|(
literal|"number"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|subobject
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"foobar"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"subobject"
argument_list|,
name|subobject
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
name|size
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QJsonValue
name|subvalue
init|=
name|object
operator|.
name|take
argument_list|(
name|QLatin1String
argument_list|(
literal|"subobject"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subvalue
operator|.
name|toObject
argument_list|()
argument_list|,
name|subobject
argument_list|)
expr_stmt|;
comment|// make object detach by modifying it many times
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|64
condition|;
operator|++
name|i
control|)
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|subvalue
operator|.
name|toObject
argument_list|()
argument_list|,
name|subobject
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testObjectSmallKeys
name|void
name|tst_QtJson
operator|::
name|testObjectSmallKeys
parameter_list|()
block|{
name|QJsonObject
name|data1
decl_stmt|;
name|data1
operator|.
name|insert
argument_list|(
name|QStringLiteral
argument_list|(
literal|"1"
argument_list|)
argument_list|,
literal|123.
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|data1
operator|.
name|contains
argument_list|(
name|QStringLiteral
argument_list|(
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|data1
operator|.
name|value
argument_list|(
name|QStringLiteral
argument_list|(
literal|"1"
argument_list|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
literal|123
argument_list|)
expr_stmt|;
name|data1
operator|.
name|insert
argument_list|(
name|QStringLiteral
argument_list|(
literal|"12"
argument_list|)
argument_list|,
literal|133.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|data1
operator|.
name|value
argument_list|(
name|QStringLiteral
argument_list|(
literal|"12"
argument_list|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
literal|133
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|data1
operator|.
name|contains
argument_list|(
name|QStringLiteral
argument_list|(
literal|"12"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|data1
operator|.
name|insert
argument_list|(
name|QStringLiteral
argument_list|(
literal|"123"
argument_list|)
argument_list|,
literal|323.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|data1
operator|.
name|value
argument_list|(
name|QStringLiteral
argument_list|(
literal|"12"
argument_list|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
literal|133
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|data1
operator|.
name|contains
argument_list|(
name|QStringLiteral
argument_list|(
literal|"123"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|data1
operator|.
name|value
argument_list|(
name|QStringLiteral
argument_list|(
literal|"123"
argument_list|)
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|data1
operator|.
name|value
argument_list|(
name|QStringLiteral
argument_list|(
literal|"123"
argument_list|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
literal|323
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testArraySimple
name|void
name|tst_QtJson
operator|::
name|testArraySimple
parameter_list|()
block|{
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// if we put a JsonValue into the JsonArray and retrieve
comment|// it, it should be identical.
name|QJsonValue
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|3
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|array
operator|.
name|size
argument_list|()
decl_stmt|;
name|array
operator|.
name|removeAt
argument_list|(
literal|2
argument_list|)
expr_stmt|;
operator|--
name|size
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QJsonValue
name|taken
init|=
name|array
operator|.
name|takeAt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
operator|--
name|size
expr_stmt|;
name|QCOMPARE
argument_list|(
name|taken
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
comment|// check whether null values work
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|size
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|last
argument_list|()
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Null
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|last
argument_list|()
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|first
argument_list|()
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|first
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|prepend
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|first
argument_list|()
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|first
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|replace
argument_list|(
literal|0
argument_list|,
operator|-
literal|555.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|first
argument_list|()
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|first
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
operator|-
literal|555.
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testValueObject
name|void
name|tst_QtJson
operator|::
name|testValueObject
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"number"
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"string"
argument_list|,
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"boolean"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonValue
name|value
argument_list|(
name|object
argument_list|)
decl_stmt|;
comment|// if we don't modify the original JsonObject, toObject()
comment|// on the JsonValue should return the same object (non-detached).
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toObject
argument_list|()
argument_list|,
name|object
argument_list|)
expr_stmt|;
comment|// if we modify the original object, it should detach
name|object
operator|.
name|insert
argument_list|(
literal|"test"
argument_list|,
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|value
operator|.
name|toObject
argument_list|()
operator|!=
name|object
argument_list|,
literal|"object should have detached"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testValueArray
name|void
name|tst_QtJson
operator|::
name|testValueArray
parameter_list|()
block|{
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QJsonValue
name|value
argument_list|(
name|array
argument_list|)
decl_stmt|;
comment|// if we don't modify the original JsonArray, toArray()
comment|// on the JsonValue should return the same object (non-detached).
name|QCOMPARE
argument_list|(
name|value
operator|.
name|toArray
argument_list|()
argument_list|,
name|array
argument_list|)
expr_stmt|;
comment|// if we modify the original array, it should detach
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|value
operator|.
name|toArray
argument_list|()
operator|!=
name|array
argument_list|,
literal|"array should have detached"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testObjectNested
name|void
name|tst_QtJson
operator|::
name|testObjectNested
parameter_list|()
block|{
name|QJsonObject
name|inner
decl_stmt|,
name|outer
decl_stmt|;
name|inner
operator|.
name|insert
argument_list|(
literal|"number"
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|outer
operator|.
name|insert
argument_list|(
literal|"nested"
argument_list|,
name|inner
argument_list|)
expr_stmt|;
comment|// if we don't modify the original JsonObject, value()
comment|// should return the same object (non-detached).
name|QJsonObject
name|value
init|=
name|outer
operator|.
name|value
argument_list|(
literal|"nested"
argument_list|)
operator|.
name|toObject
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|value
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|value
argument_list|(
literal|"number"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
comment|// if we modify the original object, it should detach and not
comment|// affect the nested object
name|inner
operator|.
name|insert
argument_list|(
literal|"number"
argument_list|,
literal|555.
argument_list|)
expr_stmt|;
name|value
operator|=
name|outer
operator|.
name|value
argument_list|(
literal|"nested"
argument_list|)
operator|.
name|toObject
argument_list|()
expr_stmt|;
name|QVERIFY2
argument_list|(
name|inner
operator|.
name|value
argument_list|(
literal|"number"
argument_list|)
operator|.
name|toDouble
argument_list|()
operator|!=
name|value
operator|.
name|value
argument_list|(
literal|"number"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|"object should have detached"
argument_list|)
expr_stmt|;
comment|// array in object
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|123.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|456.
argument_list|)
expr_stmt|;
name|outer
operator|.
name|insert
argument_list|(
literal|"array"
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|value
argument_list|(
literal|"array"
argument_list|)
operator|.
name|toArray
argument_list|()
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|value
argument_list|(
literal|"array"
argument_list|)
operator|.
name|toArray
argument_list|()
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|456.
argument_list|)
expr_stmt|;
comment|// two deep objects
name|QJsonObject
name|twoDeep
decl_stmt|;
name|twoDeep
operator|.
name|insert
argument_list|(
literal|"boolean"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|inner
operator|.
name|insert
argument_list|(
literal|"nested"
argument_list|,
name|twoDeep
argument_list|)
expr_stmt|;
name|outer
operator|.
name|insert
argument_list|(
literal|"nested"
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|value
argument_list|(
literal|"nested"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|value
argument_list|(
literal|"nested"
argument_list|)
operator|.
name|toObject
argument_list|()
argument_list|,
name|twoDeep
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|value
argument_list|(
literal|"nested"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|value
argument_list|(
literal|"nested"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|value
argument_list|(
literal|"boolean"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testArrayNested
name|void
name|tst_QtJson
operator|::
name|testArrayNested
parameter_list|()
block|{
name|QJsonArray
name|inner
decl_stmt|,
name|outer
decl_stmt|;
name|inner
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|outer
operator|.
name|append
argument_list|(
name|inner
argument_list|)
expr_stmt|;
comment|// if we don't modify the original JsonArray, value()
comment|// should return the same array (non-detached).
name|QJsonArray
name|value
init|=
name|outer
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|value
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
comment|// if we modify the original array, it should detach and not
comment|// affect the nested array
name|inner
operator|.
name|append
argument_list|(
literal|555.
argument_list|)
expr_stmt|;
name|value
operator|=
name|outer
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toArray
argument_list|()
expr_stmt|;
name|QVERIFY2
argument_list|(
name|inner
operator|.
name|size
argument_list|()
operator|!=
name|value
operator|.
name|size
argument_list|()
argument_list|,
literal|"array should have detached"
argument_list|)
expr_stmt|;
comment|// objects in arrays
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"boolean"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|outer
operator|.
name|append
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|last
argument_list|()
operator|.
name|toObject
argument_list|()
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|last
argument_list|()
operator|.
name|toObject
argument_list|()
operator|.
name|value
argument_list|(
literal|"boolean"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// two deep arrays
name|QJsonArray
name|twoDeep
decl_stmt|;
name|twoDeep
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"nested"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|inner
operator|.
name|append
argument_list|(
name|twoDeep
argument_list|)
expr_stmt|;
name|outer
operator|.
name|append
argument_list|(
name|inner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|last
argument_list|()
operator|.
name|toArray
argument_list|()
operator|.
name|last
argument_list|()
operator|.
name|toArray
argument_list|()
argument_list|,
name|twoDeep
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|outer
operator|.
name|last
argument_list|()
operator|.
name|toArray
argument_list|()
operator|.
name|last
argument_list|()
operator|.
name|toArray
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"nested"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testArrayNestedEmpty
name|void
name|tst_QtJson
operator|::
name|testArrayNestedEmpty
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|QJsonArray
name|inner
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"inner"
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
decl_stmt|;
name|QJsonArray
name|value
init|=
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"count"
argument_list|,
literal|0.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toArray
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonDocument
argument_list|(
name|object
argument_list|)
operator|.
name|toBinaryData
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testObjectNestedEmpty
name|void
name|tst_QtJson
operator|::
name|testObjectNestedEmpty
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|QJsonObject
name|inner
decl_stmt|;
name|QJsonObject
name|inner2
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"inner"
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"inner2"
argument_list|,
name|inner2
argument_list|)
expr_stmt|;
name|QJsonObject
name|value
init|=
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toObject
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"count"
argument_list|,
literal|0.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Object
argument_list|)
expr_stmt|;
name|QJsonDocument
argument_list|(
name|object
argument_list|)
operator|.
name|toBinaryData
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"inner2"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|QJsonDocument
argument_list|(
name|object
argument_list|)
operator|.
name|toBinaryData
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonObject
name|reconstituted
argument_list|(
name|doc
operator|.
name|object
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reconstituted
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reconstituted
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reconstituted
operator|.
name|value
argument_list|(
literal|"inner2"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Object
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testArrayComfortOperators
name|void
name|tst_QtJson
operator|::
name|testArrayComfortOperators
parameter_list|()
block|{
name|QJsonArray
name|first
decl_stmt|;
name|first
operator|.
name|append
argument_list|(
literal|123.
argument_list|)
expr_stmt|;
name|first
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonArray
name|second
init|=
name|QJsonArray
argument_list|()
operator|<<
literal|123.
operator|<<
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|first
argument_list|,
name|second
argument_list|)
expr_stmt|;
name|first
operator|=
name|first
operator|+
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
expr_stmt|;
name|second
operator|+=
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|first
argument_list|,
name|second
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testValueRef
name|void
name|tst_QtJson
operator|::
name|testValueRef
parameter_list|()
block|{
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|1.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|2.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|3.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|4.1
argument_list|)
expr_stmt|;
name|array
index|[
literal|1
index|]
operator|=
literal|false
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|3.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|4
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
decl_stmt|;
name|object
index|[
name|QLatin1String
argument_list|(
literal|"key"
argument_list|)
index|]
operator|=
literal|true
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"null"
argument_list|)
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"null"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|object
index|[
name|QLatin1String
argument_list|(
literal|"null"
argument_list|)
index|]
operator|=
literal|100.
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"null"
argument_list|)
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
name|object
index|[
name|QLatin1String
argument_list|(
literal|"null"
argument_list|)
index|]
decl_stmt|;
name|QCOMPARE
argument_list|(
name|val
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|100.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|array
index|[
literal|1
index|]
operator|=
name|array
index|[
literal|2
index|]
operator|=
name|object
index|[
name|QLatin1String
argument_list|(
literal|"key"
argument_list|)
index|]
operator|=
literal|42
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
index|[
literal|1
index|]
argument_list|,
name|array
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
index|[
literal|2
index|]
argument_list|,
name|object
index|[
name|QLatin1String
argument_list|(
literal|"key"
argument_list|)
index|]
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"key"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testObjectIteration
name|void
name|tst_QtJson
operator|::
name|testObjectIteration
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|object
index|[
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
index|]
operator|=
operator|(
name|double
operator|)
name|i
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|QJsonObject
operator|::
name|iterator
name|it
init|=
name|object
operator|.
name|begin
argument_list|()
init|;
name|it
operator|!=
name|object
operator|.
name|end
argument_list|()
condition|;
operator|++
name|it
control|)
block|{
name|QJsonValue
name|value
init|=
name|it
operator|.
name|value
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|double
operator|)
name|it
operator|.
name|key
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
name|value
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonObject
name|object2
init|=
name|object
decl_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|==
name|object2
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
operator|*
name|object2
operator|.
name|begin
argument_list|()
decl_stmt|;
name|object2
operator|.
name|erase
argument_list|(
name|object2
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object2
operator|.
name|size
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
for|for
control|(
name|QJsonObject
operator|::
name|const_iterator
name|it
init|=
name|object2
operator|.
name|constBegin
argument_list|()
init|;
name|it
operator|!=
name|object2
operator|.
name|constEnd
argument_list|()
condition|;
operator|++
name|it
control|)
block|{
name|QJsonValue
name|value
init|=
name|it
operator|.
name|value
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|.
name|value
argument_list|()
operator|!=
name|val
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|double
operator|)
name|it
operator|.
name|key
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
name|value
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|{
name|QJsonObject
name|object2
init|=
name|object
decl_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|==
name|object2
argument_list|)
expr_stmt|;
name|QJsonObject
operator|::
name|iterator
name|it
init|=
name|object2
operator|.
name|find
argument_list|(
name|QString
operator|::
name|number
argument_list|(
literal|5
argument_list|)
argument_list|)
decl_stmt|;
name|object2
operator|.
name|erase
argument_list|(
name|it
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object2
operator|.
name|size
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonObject
operator|::
name|Iterator
name|it
init|=
name|object
operator|.
name|begin
argument_list|()
decl_stmt|;
name|it
operator|+=
literal|5
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|5.
argument_list|)
expr_stmt|;
name|it
operator|-=
literal|3
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.
argument_list|)
expr_stmt|;
name|QJsonObject
operator|::
name|Iterator
name|it2
init|=
name|it
operator|+
literal|5
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it2
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|7.
argument_list|)
expr_stmt|;
name|it2
operator|=
name|it
operator|-
literal|1
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it2
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonObject
operator|::
name|ConstIterator
name|it
init|=
name|object
operator|.
name|constBegin
argument_list|()
decl_stmt|;
name|it
operator|+=
literal|5
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|5.
argument_list|)
expr_stmt|;
name|it
operator|-=
literal|3
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.
argument_list|)
expr_stmt|;
name|QJsonObject
operator|::
name|ConstIterator
name|it2
init|=
name|it
operator|+
literal|5
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it2
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|7.
argument_list|)
expr_stmt|;
name|it2
operator|=
name|it
operator|-
literal|1
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
name|it2
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
block|}
name|QJsonObject
operator|::
name|Iterator
name|it
init|=
name|object
operator|.
name|begin
argument_list|()
decl_stmt|;
while|while
condition|(
operator|!
name|object
operator|.
name|isEmpty
argument_list|()
condition|)
name|it
operator|=
name|object
operator|.
name|erase
argument_list|(
name|it
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|object
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testArrayIteration
name|void
name|tst_QtJson
operator|::
name|testArrayIteration
parameter_list|()
block|{
name|QJsonArray
name|array
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|array
operator|.
name|append
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|QJsonArray
operator|::
name|iterator
name|it
init|=
name|array
operator|.
name|begin
argument_list|()
init|;
name|it
operator|!=
name|array
operator|.
name|end
argument_list|()
condition|;
operator|++
name|it
operator|,
operator|++
name|i
control|)
block|{
name|QJsonValue
name|value
init|=
operator|(
operator|*
name|it
operator|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|double
operator|)
name|i
argument_list|,
name|value
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonArray
name|array2
init|=
name|array
decl_stmt|;
name|QVERIFY
argument_list|(
name|array
operator|==
name|array2
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
operator|*
name|array2
operator|.
name|begin
argument_list|()
decl_stmt|;
name|array2
operator|.
name|erase
argument_list|(
name|array2
operator|.
name|begin
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array2
operator|.
name|size
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|i
operator|=
literal|1
expr_stmt|;
for|for
control|(
name|QJsonArray
operator|::
name|const_iterator
name|it
init|=
name|array2
operator|.
name|constBegin
argument_list|()
init|;
name|it
operator|!=
name|array2
operator|.
name|constEnd
argument_list|()
condition|;
operator|++
name|it
operator|,
operator|++
name|i
control|)
block|{
name|QJsonValue
name|value
init|=
operator|(
operator|*
name|it
operator|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|double
operator|)
name|i
argument_list|,
name|value
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|{
name|QJsonArray
operator|::
name|Iterator
name|it
init|=
name|array
operator|.
name|begin
argument_list|()
decl_stmt|;
name|it
operator|+=
literal|5
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|(
operator|*
name|it
operator|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|5.
argument_list|)
expr_stmt|;
name|it
operator|-=
literal|3
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|(
operator|*
name|it
operator|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.
argument_list|)
expr_stmt|;
name|QJsonArray
operator|::
name|Iterator
name|it2
init|=
name|it
operator|+
literal|5
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|*
name|it2
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|7.
argument_list|)
expr_stmt|;
name|it2
operator|=
name|it
operator|-
literal|1
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|*
name|it2
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonArray
operator|::
name|ConstIterator
name|it
init|=
name|array
operator|.
name|constBegin
argument_list|()
decl_stmt|;
name|it
operator|+=
literal|5
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|(
operator|*
name|it
operator|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|5.
argument_list|)
expr_stmt|;
name|it
operator|-=
literal|3
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|(
operator|*
name|it
operator|)
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.
argument_list|)
expr_stmt|;
name|QJsonArray
operator|::
name|ConstIterator
name|it2
init|=
name|it
operator|+
literal|5
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|*
name|it2
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|7.
argument_list|)
expr_stmt|;
name|it2
operator|=
name|it
operator|-
literal|1
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QJsonValue
argument_list|(
operator|*
name|it2
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
block|}
name|QJsonArray
operator|::
name|Iterator
name|it
init|=
name|array
operator|.
name|begin
argument_list|()
decl_stmt|;
while|while
condition|(
operator|!
name|array
operator|.
name|isEmpty
argument_list|()
condition|)
name|it
operator|=
name|array
operator|.
name|erase
argument_list|(
name|it
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|array
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testObjectFind
name|void
name|tst_QtJson
operator|::
name|testObjectFind
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
name|object
index|[
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
index|]
operator|=
name|i
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QJsonObject
operator|::
name|iterator
name|it
init|=
name|object
operator|.
name|find
argument_list|(
name|QLatin1String
argument_list|(
literal|"1"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
operator|*
name|it
operator|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
name|it
operator|=
name|object
operator|.
name|find
argument_list|(
name|QLatin1String
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
operator|*
name|it
operator|)
operator|.
name|type
argument_list|()
operator|==
name|QJsonValue
operator|::
name|Undefined
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|object
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonObject
operator|::
name|const_iterator
name|cit
init|=
name|object
operator|.
name|constFind
argument_list|(
name|QLatin1String
argument_list|(
literal|"1"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
operator|*
name|cit
operator|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
name|cit
operator|=
name|object
operator|.
name|constFind
argument_list|(
name|QLatin1String
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
operator|*
name|it
operator|)
operator|.
name|type
argument_list|()
operator|==
name|QJsonValue
operator|::
name|Undefined
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|it
operator|==
name|object
operator|.
name|end
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testDocument
name|void
name|tst_QtJson
operator|::
name|testDocument
parameter_list|()
block|{
name|QJsonDocument
name|doc
decl_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
decl_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"Key"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|object
argument_list|()
operator|==
name|object
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|array
argument_list|()
operator|==
name|QJsonArray
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|=
name|QJsonDocument
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|array
argument_list|()
operator|==
name|array
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|object
argument_list|()
operator|==
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonObject
name|outer
decl_stmt|;
name|outer
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"outerKey"
argument_list|)
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|QJsonObject
name|inner
decl_stmt|;
name|inner
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"innerKey"
argument_list|)
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|outer
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"innter"
argument_list|)
argument_list|,
name|inner
argument_list|)
expr_stmt|;
name|QJsonArray
name|innerArray
decl_stmt|;
name|innerArray
operator|.
name|append
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|outer
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"innterArray"
argument_list|)
argument_list|,
name|innerArray
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc2
argument_list|(
name|outer
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"innter"
argument_list|)
argument_list|)
operator|.
name|toObject
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc2
operator|.
name|object
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"innerKey"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc2
operator|.
name|object
argument_list|()
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"innerKey"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc3
decl_stmt|;
name|doc3
operator|.
name|setObject
argument_list|(
name|outer
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"innter"
argument_list|)
argument_list|)
operator|.
name|toObject
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc3
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc3
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc3
operator|.
name|object
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"innerKey"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc3
operator|.
name|object
argument_list|()
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"innerKey"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc4
argument_list|(
name|outer
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"innterArray"
argument_list|)
argument_list|)
operator|.
name|toArray
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|doc4
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc4
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc4
operator|.
name|array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc4
operator|.
name|array
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc5
decl_stmt|;
name|doc5
operator|.
name|setArray
argument_list|(
name|outer
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"innterArray"
argument_list|)
argument_list|)
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc5
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc5
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc5
operator|.
name|array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc5
operator|.
name|array
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
literal|23
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nullValues
name|void
name|tst_QtJson
operator|::
name|nullValues
parameter_list|()
block|{
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QString
argument_list|(
literal|"key"
argument_list|)
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|contains
argument_list|(
literal|"key"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"key"
argument_list|)
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nullArrays
name|void
name|tst_QtJson
operator|::
name|nullArrays
parameter_list|()
block|{
name|QJsonArray
name|nullArray
decl_stmt|;
name|QJsonArray
name|nonNull
decl_stmt|;
name|nonNull
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
argument_list|,
name|QJsonArray
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|nullArray
operator|!=
name|nonNull
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|nonNull
operator|!=
name|nullArray
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|takeAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|first
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|last
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|nullArray
operator|.
name|removeAt
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|nullArray
operator|.
name|removeAt
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|nullArray
operator|.
name|append
argument_list|(
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|nullArray
operator|.
name|removeAt
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|takeAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|first
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullArray
operator|.
name|last
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|nullArray
operator|.
name|removeAt
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|nullArray
operator|.
name|removeAt
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nullObject
name|void
name|tst_QtJson
operator|::
name|nullObject
parameter_list|()
block|{
name|QJsonObject
name|nullObject
decl_stmt|;
name|QJsonObject
name|nonNull
decl_stmt|;
name|nonNull
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
argument_list|,
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|nullObject
operator|!=
name|nonNull
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|nonNull
operator|!=
name|nullObject
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|keys
argument_list|()
argument_list|,
name|QStringList
argument_list|()
argument_list|)
expr_stmt|;
name|nullObject
operator|.
name|remove
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
argument_list|,
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|take
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|contains
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|nullObject
operator|.
name|insert
argument_list|(
literal|"foo"
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|nullObject
operator|.
name|remove
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|keys
argument_list|()
argument_list|,
name|QStringList
argument_list|()
argument_list|)
expr_stmt|;
name|nullObject
operator|.
name|remove
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
argument_list|,
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|take
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|nullObject
operator|.
name|contains
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keySorting
name|void
name|tst_QtJson
operator|::
name|keySorting
parameter_list|()
block|{
specifier|const
name|char
modifier|*
name|json
init|=
literal|"{ \"B\": true, \"A\": false }"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonObject
name|o
init|=
name|doc
operator|.
name|object
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QJsonObject
operator|::
name|const_iterator
name|it
init|=
name|o
operator|.
name|constBegin
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|undefinedValues
name|void
name|tst_QtJson
operator|::
name|undefinedValues
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"Key"
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"Key"
argument_list|,
name|QLatin1String
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"Key"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Undefined
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"Key"
argument_list|,
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"Key"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Undefined
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Null
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Undefined
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Undefined
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromVariantMap
name|void
name|tst_QtJson
operator|::
name|fromVariantMap
parameter_list|()
block|{
name|QVariantMap
name|map
decl_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"key1"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"key2"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
init|=
name|QJsonObject
operator|::
name|fromVariantMap
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVariantList
name|list
decl_stmt|;
name|list
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|list
operator|.
name|append
argument_list|(
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|list
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|list
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|insert
argument_list|(
literal|"list"
argument_list|,
name|list
argument_list|)
expr_stmt|;
name|object
operator|=
name|QJsonObject
operator|::
name|fromVariantMap
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"key1"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"key2"
argument_list|)
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"list"
argument_list|)
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Array
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|object
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"list"
argument_list|)
argument_list|)
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Null
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toVariantMap
name|void
name|tst_QtJson
operator|::
name|toVariantMap
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|Type
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|.
name|toVariant
argument_list|()
operator|.
name|type
argument_list|()
argument_list|)
argument_list|,
name|QMetaType
operator|::
name|QVariantMap
argument_list|)
expr_stmt|;
comment|// QTBUG-32524
name|QJsonObject
name|object
decl_stmt|;
name|QVariantMap
name|map
init|=
name|object
operator|.
name|toVariantMap
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|map
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"Key"
argument_list|,
name|QString
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"null"
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"Array"
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|map
operator|=
name|object
operator|.
name|toVariantMap
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|map
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|map
operator|.
name|value
argument_list|(
literal|"Key"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|QString
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|map
operator|.
name|value
argument_list|(
literal|"null"
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|map
operator|.
name|value
argument_list|(
literal|"Array"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|List
argument_list|)
expr_stmt|;
name|QVariantList
name|list
init|=
name|map
operator|.
name|value
argument_list|(
literal|"Array"
argument_list|)
operator|.
name|toList
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|999.
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|3
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toVariantList
name|void
name|tst_QtJson
operator|::
name|toVariantList
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|Type
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|.
name|toVariant
argument_list|()
operator|.
name|type
argument_list|()
argument_list|)
argument_list|,
name|QMetaType
operator|::
name|QVariantList
argument_list|)
expr_stmt|;
comment|// QTBUG-32524
name|QJsonArray
name|array
decl_stmt|;
name|QVariantList
name|list
init|=
name|array
operator|.
name|toVariantList
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|list
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QString
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonArray
name|inner
decl_stmt|;
name|inner
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|inner
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|inner
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|inner
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|inner
argument_list|)
expr_stmt|;
name|list
operator|=
name|array
operator|.
name|toVariantList
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
index|[
literal|0
index|]
argument_list|,
name|QVariant
argument_list|(
name|QString
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
index|[
literal|1
index|]
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|list
index|[
literal|2
index|]
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|List
argument_list|)
expr_stmt|;
name|QVariantList
name|vlist
init|=
name|list
index|[
literal|2
index|]
operator|.
name|toList
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|vlist
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vlist
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vlist
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|999.
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vlist
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|,
name|QVariant
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|vlist
operator|.
name|at
argument_list|(
literal|3
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toJson
name|void
name|tst_QtJson
operator|::
name|toJson
parameter_list|()
block|{
comment|// Test QJsonDocument::Indented format
block|{
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"\\Key\n"
argument_list|,
name|QString
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"null"
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"\\\a\n\r\b\tabcABC\""
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"Array"
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|QByteArray
name|json
init|=
name|QJsonDocument
argument_list|(
name|object
argument_list|)
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QByteArray
name|expected
init|=
literal|"{\n"
literal|"    \"Array\": [\n"
literal|"        true,\n"
literal|"        999,\n"
literal|"        \"string\",\n"
literal|"        null,\n"
literal|"        \"\\\\\\u0007\\n\\r\\b\\tabcABC\\\"\"\n"
literal|"    ],\n"
literal|"    \"\\\\Key\\n\": \"Value\",\n"
literal|"    \"null\": null\n"
literal|"}\n"
decl_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
decl_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|json
operator|=
name|doc
operator|.
name|toJson
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|json
operator|=
name|doc
operator|.
name|toJson
argument_list|()
expr_stmt|;
name|expected
operator|=
literal|"[\n"
literal|"    true,\n"
literal|"    999,\n"
literal|"    \"string\",\n"
literal|"    null,\n"
literal|"    \"\\\\\\u0007\\n\\r\\b\\tabcABC\\\"\"\n"
literal|"]\n"
expr_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
comment|// Test QJsonDocument::Compact format
block|{
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"\\Key\n"
argument_list|,
name|QString
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"null"
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|999.
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"\\\a\n\r\b\tabcABC\""
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
literal|"Array"
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|QByteArray
name|json
init|=
name|QJsonDocument
argument_list|(
name|object
argument_list|)
operator|.
name|toJson
argument_list|(
name|QJsonDocument
operator|::
name|Compact
argument_list|)
decl_stmt|;
name|QByteArray
name|expected
init|=
literal|"{\"Array\":[true,999,\"string\",null,\"\\\\\\u0007\\n\\r\\b\\tabcABC\\\"\"],\"\\\\Key\\n\":\"Value\",\"null\":null}"
decl_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
decl_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|json
operator|=
name|doc
operator|.
name|toJson
argument_list|(
name|QJsonDocument
operator|::
name|Compact
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|json
operator|=
name|doc
operator|.
name|toJson
argument_list|(
name|QJsonDocument
operator|::
name|Compact
argument_list|)
expr_stmt|;
name|expected
operator|=
literal|"[true,999,\"string\",null,\"\\\\\\u0007\\n\\r\\b\\tabcABC\\\"\"]"
expr_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toJsonSillyNumericValues
name|void
name|tst_QtJson
operator|::
name|toJsonSillyNumericValues
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|infinity
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// encode to: null
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
operator|-
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|infinity
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// encode to: null
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|quiet_NaN
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// encode to: null
name|object
operator|.
name|insert
argument_list|(
literal|"Array"
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|QByteArray
name|json
init|=
name|QJsonDocument
argument_list|(
name|object
argument_list|)
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QByteArray
name|expected
init|=
literal|"{\n"
literal|"    \"Array\": [\n"
literal|"        null,\n"
literal|"        null,\n"
literal|"        null\n"
literal|"    ]\n"
literal|"}\n"
decl_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
decl_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|json
operator|=
name|doc
operator|.
name|toJson
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toJsonLargeNumericValues
name|void
name|tst_QtJson
operator|::
name|toJsonLargeNumericValues
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
literal|1.234567
argument_list|)
argument_list|)
expr_stmt|;
comment|// actual precision bug in Qt 5.0.0
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
literal|1.7976931348623157e+308
argument_list|)
argument_list|)
expr_stmt|;
comment|// JS Number.MAX_VALUE
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
literal|5e-324
argument_list|)
argument_list|)
expr_stmt|;
comment|// JS Number.MIN_VALUE
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|min
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|max
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|epsilon
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|denorm_min
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
operator|-
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|min
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
operator|-
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|max
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
operator|-
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|epsilon
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
operator|-
name|std
operator|::
name|numeric_limits
argument_list|<
name|double
argument_list|>
operator|::
name|denorm_min
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
operator|-
literal|0.0
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
literal|9007199254740992LL
argument_list|)
argument_list|)
expr_stmt|;
comment|// JS Number max integer
name|array
operator|.
name|append
argument_list|(
name|QJsonValue
argument_list|(
operator|-
literal|9007199254740992LL
argument_list|)
argument_list|)
expr_stmt|;
comment|// JS Number min integer
name|object
operator|.
name|insert
argument_list|(
literal|"Array"
argument_list|,
name|array
argument_list|)
expr_stmt|;
name|QByteArray
name|json
init|=
name|QJsonDocument
argument_list|(
name|object
argument_list|)
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QByteArray
name|expected
init|=
literal|"{\n"
literal|"    \"Array\": [\n"
literal|"        1.234567,\n"
literal|"        1.7976931348623157e+308,\n"
comment|//     ((4.9406564584124654e-324 == 5e-324) == true)
comment|// I can only think JavaScript has a special formatter to
comment|//  emit this value for this IEEE754 bit pattern.
literal|"        4.9406564584124654e-324,\n"
literal|"        2.2250738585072014e-308,\n"
literal|"        1.7976931348623157e+308,\n"
literal|"        2.2204460492503131e-16,\n"
literal|"        4.9406564584124654e-324,\n"
literal|"        0,\n"
literal|"        -2.2250738585072014e-308,\n"
literal|"        -1.7976931348623157e+308,\n"
literal|"        -2.2204460492503131e-16,\n"
literal|"        -4.9406564584124654e-324,\n"
literal|"        0,\n"
literal|"        9007199254740992,\n"
literal|"        -9007199254740992\n"
literal|"    ]\n"
literal|"}\n"
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_BLACKBERRY
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"See QTBUG-37066"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
decl_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|json
operator|=
name|doc
operator|.
name|toJson
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_BLACKBERRY
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"See QTBUG-37066"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|json
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromJson
name|void
name|tst_QtJson
operator|::
name|fromJson
parameter_list|()
block|{
block|{
name|QByteArray
name|json
init|=
literal|"[\n    true\n]\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|json
argument_list|)
expr_stmt|;
block|}
block|{
comment|//regression test: test if unicode_control_characters are correctly decoded
name|QByteArray
name|json
init|=
literal|"[\n    \""
name|UNICODE_NON_CHARACTER
literal|"\"\n]\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
name|UNICODE_NON_CHARACTER
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|json
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|json
init|=
literal|"[]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|json
init|=
literal|"{}"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
init|=
name|doc
operator|.
name|object
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|json
init|=
literal|"{\n    \"Key\": true\n}\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
init|=
name|doc
operator|.
name|object
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"Key"
argument_list|)
argument_list|,
name|QJsonValue
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|json
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|json
init|=
literal|"[ null, true, false, \"Foo\", 1, [], {} ]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Null
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|4
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|4
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|5
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Array
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|5
argument_list|)
operator|.
name|toArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|6
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|6
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|json
init|=
literal|"{ \"0\": null, \"1\": true, \"2\": false, \"3\": \"Foo\", \"4\": 1, \"5\": [], \"6\": {} }"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
init|=
name|doc
operator|.
name|object
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"0"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Null
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"1"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"1"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"2"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Bool
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"2"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"3"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"3"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"4"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"4"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"5"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Array
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"5"
argument_list|)
operator|.
name|toArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"6"
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"6"
argument_list|)
operator|.
name|toObject
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|compactJson
init|=
literal|"{\"Array\": [true,999,\"string\",null,\"\\\\\\u0007\\n\\r\\b\\tabcABC\\\"\"],\"\\\\Key\\n\": \"Value\",\"null\": null}"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|compactJson
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonObject
name|object
init|=
name|doc
operator|.
name|object
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"\\Key\n"
argument_list|)
operator|.
name|isString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"\\Key\n"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Value"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"null"
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"Array"
argument_list|)
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|object
operator|.
name|value
argument_list|(
literal|"Array"
argument_list|)
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|isBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|isDouble
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|999.
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|isString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|4
argument_list|)
operator|.
name|isString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|at
argument_list|(
literal|4
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"\\\a\n\r\b\tabcABC\""
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromJsonErrors
name|void
name|tst_QtJson
operator|::
name|fromJsonErrors
parameter_list|()
block|{
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"{\n    \n\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|UnterminatedObject
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|8
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"{\n    \"key\" 10\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|MissingNameSeparator
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|13
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    \n\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|UnterminatedArray
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|8
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n   1, true\n\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|UnterminatedArray
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|14
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n  1 true\n\n"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|MissingValueSeparator
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    nul"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    nulzz"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    tru"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    trud]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    fal"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|7
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    falsd]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    11111"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|TerminationByNumber
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    -1E10000]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalNumber
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|14
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    -1e-10000]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalNumber
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|15
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    \"\\u12\"]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalEscapeSequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|11
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    \"foo"
name|INVALID_UNICODE
literal|"bar\"]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalUTF8String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|12
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    \""
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|UnterminatedString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|8
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    \"c"
name|UNICODE_DJE
literal|"a\\u12\"]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalEscapeSequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|15
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    \"c"
name|UNICODE_DJE
literal|"a"
name|INVALID_UNICODE
literal|"bar\"]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|IllegalUTF8String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|13
argument_list|)
expr_stmt|;
block|}
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QByteArray
name|json
init|=
literal|"[\n    \"c"
name|UNICODE_DJE
literal|"a ]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|UnterminatedString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|offset
argument_list|,
literal|14
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromBinary
name|void
name|tst_QtJson
operator|::
name|fromBinary
parameter_list|()
block|{
name|QFile
name|file
argument_list|(
name|testDataDir
operator|+
literal|"/test.json"
argument_list|)
decl_stmt|;
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QByteArray
name|testJson
init|=
name|file
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|testJson
argument_list|)
decl_stmt|;
name|QJsonDocument
name|outdoc
init|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|doc
operator|.
name|toBinaryData
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|outdoc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|==
name|outdoc
argument_list|)
expr_stmt|;
name|QFile
name|bfile
argument_list|(
name|testDataDir
operator|+
literal|"/test.bjson"
argument_list|)
decl_stmt|;
name|bfile
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QByteArray
name|binary
init|=
name|bfile
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QJsonDocument
name|bdoc
init|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|binary
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|bdoc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|toVariant
argument_list|()
operator|==
name|bdoc
operator|.
name|toVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|==
name|bdoc
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toAndFromBinary_data
name|void
name|tst_QtJson
operator|::
name|toAndFromBinary_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"filename"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test.json"
argument_list|)
operator|<<
operator|(
name|testDataDir
operator|+
literal|"/test.json"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test2.json"
argument_list|)
operator|<<
operator|(
name|testDataDir
operator|+
literal|"/test2.json"
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toAndFromBinary
name|void
name|tst_QtJson
operator|::
name|toAndFromBinary
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|filename
argument_list|)
expr_stmt|;
name|QFile
name|file
argument_list|(
name|filename
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QByteArray
name|data
init|=
name|file
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonDocument
name|outdoc
init|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|doc
operator|.
name|toBinaryData
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|outdoc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|==
name|outdoc
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parseNumbers
name|void
name|tst_QtJson
operator|::
name|parseNumbers
parameter_list|()
block|{
block|{
comment|// test number parsing
struct|struct
name|Numbers
block|{
specifier|const
name|char
modifier|*
name|str
decl_stmt|;
name|int
name|n
decl_stmt|;
block|}
struct|;
name|Numbers
name|numbers
index|[]
init|=
block|{
block|{
literal|"0"
block|,
literal|0
block|}
block|,
block|{
literal|"1"
block|,
literal|1
block|}
block|,
block|{
literal|"10"
block|,
literal|10
block|}
block|,
block|{
literal|"-1"
block|,
operator|-
literal|1
block|}
block|,
block|{
literal|"100000"
block|,
literal|100000
block|}
block|,
block|{
literal|"-999"
block|,
operator|-
literal|999
block|}
block|}
decl_stmt|;
name|int
name|size
init|=
sizeof|sizeof
argument_list|(
name|numbers
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|Numbers
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|json
init|=
literal|"[ "
decl_stmt|;
name|json
operator|+=
name|numbers
index|[
name|i
index|]
operator|.
name|str
expr_stmt|;
name|json
operator|+=
literal|" ]"
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|val
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|val
operator|.
name|toDouble
argument_list|()
argument_list|,
operator|(
name|double
operator|)
name|numbers
index|[
name|i
index|]
operator|.
name|n
argument_list|)
expr_stmt|;
block|}
block|}
block|{
comment|// test number parsing
struct|struct
name|Numbers
block|{
specifier|const
name|char
modifier|*
name|str
decl_stmt|;
name|double
name|n
decl_stmt|;
block|}
struct|;
name|Numbers
name|numbers
index|[]
init|=
block|{
block|{
literal|"0"
block|,
literal|0
block|}
block|,
block|{
literal|"1"
block|,
literal|1
block|}
block|,
block|{
literal|"10"
block|,
literal|10
block|}
block|,
block|{
literal|"-1"
block|,
operator|-
literal|1
block|}
block|,
block|{
literal|"100000"
block|,
literal|100000
block|}
block|,
block|{
literal|"-999"
block|,
operator|-
literal|999
block|}
block|,
block|{
literal|"1.1"
block|,
literal|1.1
block|}
block|,
block|{
literal|"1e10"
block|,
literal|1e10
block|}
block|,
block|{
literal|"-1.1"
block|,
operator|-
literal|1.1
block|}
block|,
block|{
literal|"-1e10"
block|,
operator|-
literal|1e10
block|}
block|,
block|{
literal|"-1E10"
block|,
operator|-
literal|1e10
block|}
block|,
block|{
literal|"1.1e10"
block|,
literal|1.1e10
block|}
block|,
block|{
literal|"1.1e308"
block|,
literal|1.1e308
block|}
block|,
block|{
literal|"-1.1e308"
block|,
operator|-
literal|1.1e308
block|}
block|,
block|{
literal|"1.1e-308"
block|,
literal|1.1e-308
block|}
block|,
block|{
literal|"-1.1e-308"
block|,
operator|-
literal|1.1e-308
block|}
block|,
block|{
literal|"1.1e+308"
block|,
literal|1.1e+308
block|}
block|,
block|{
literal|"-1.1e+308"
block|,
operator|-
literal|1.1e+308
block|}
block|,
block|{
literal|"1.e+308"
block|,
literal|1.e+308
block|}
block|,
block|{
literal|"-1.e+308"
block|,
operator|-
literal|1.e+308
block|}
block|}
decl_stmt|;
name|int
name|size
init|=
sizeof|sizeof
argument_list|(
name|numbers
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|Numbers
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|json
init|=
literal|"[ "
decl_stmt|;
name|json
operator|+=
name|numbers
index|[
name|i
index|]
operator|.
name|str
expr_stmt|;
name|json
operator|+=
literal|" ]"
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_BLACKBERRY
if|if
condition|(
literal|0
operator|==
name|QString
operator|::
name|compare
argument_list|(
name|numbers
index|[
name|i
index|]
operator|.
name|str
argument_list|,
literal|"1.1e-308"
argument_list|)
condition|)
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"See QTBUG-37066"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|val
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|Double
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|val
operator|.
name|toDouble
argument_list|()
argument_list|,
name|numbers
index|[
name|i
index|]
operator|.
name|n
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|parseStrings
name|void
name|tst_QtJson
operator|::
name|parseStrings
parameter_list|()
block|{
specifier|const
name|char
modifier|*
name|strings
index|[]
init|=
block|{
literal|"Foo"
block|,
literal|"abc\\\"abc"
block|,
literal|"abc\\\\abc"
block|,
literal|"abc\\babc"
block|,
literal|"abc\\fabc"
block|,
literal|"abc\\nabc"
block|,
literal|"abc\\rabc"
block|,
literal|"abc\\tabc"
block|,
literal|"abc\\u0019abc"
block|,
literal|"abc"
name|UNICODE_DJE
literal|"abc"
block|,
name|UNICODE_NON_CHARACTER
block|}
decl_stmt|;
name|int
name|size
init|=
sizeof|sizeof
argument_list|(
name|strings
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|json
init|=
literal|"[\n    \""
decl_stmt|;
name|json
operator|+=
name|strings
index|[
name|i
index|]
expr_stmt|;
name|json
operator|+=
literal|"\"\n]\n"
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|val
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|json
argument_list|)
expr_stmt|;
block|}
struct|struct
name|Pairs
block|{
specifier|const
name|char
modifier|*
name|in
decl_stmt|;
specifier|const
name|char
modifier|*
name|out
decl_stmt|;
block|}
struct|;
name|Pairs
name|pairs
index|[]
init|=
block|{
block|{
literal|"abc\\/abc"
block|,
literal|"abc/abc"
block|}
block|,
block|{
literal|"abc\\u0402abc"
block|,
literal|"abc"
name|UNICODE_DJE
literal|"abc"
block|}
block|,
block|{
literal|"abc\\u0065abc"
block|,
literal|"abceabc"
block|}
block|,
block|{
literal|"abc\\uFFFFabc"
block|,
literal|"abc"
name|UNICODE_NON_CHARACTER
literal|"abc"
block|}
block|}
decl_stmt|;
name|size
operator|=
sizeof|sizeof
argument_list|(
name|pairs
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|Pairs
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|json
init|=
literal|"[\n    \""
decl_stmt|;
name|json
operator|+=
name|pairs
index|[
name|i
index|]
operator|.
name|in
expr_stmt|;
name|json
operator|+=
literal|"\"\n]\n"
expr_stmt|;
name|QByteArray
name|out
init|=
literal|"[\n    \""
decl_stmt|;
name|out
operator|+=
name|pairs
index|[
name|i
index|]
operator|.
name|out
expr_stmt|;
name|out
operator|+=
literal|"\"\n]\n"
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QJsonValue
name|val
init|=
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|val
operator|.
name|type
argument_list|()
argument_list|,
name|QJsonValue
operator|::
name|String
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|parseDuplicateKeys
name|void
name|tst_QtJson
operator|::
name|parseDuplicateKeys
parameter_list|()
block|{
specifier|const
name|char
modifier|*
name|json
init|=
literal|"{ \"B\": true, \"A\": null, \"B\": false }"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QJsonObject
name|o
init|=
name|doc
operator|.
name|object
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QJsonObject
operator|::
name|const_iterator
name|it
init|=
name|o
operator|.
name|constBegin
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"A"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|,
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|it
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|key
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"B"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|it
operator|.
name|value
argument_list|()
argument_list|,
name|QJsonValue
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testParser
name|void
name|tst_QtJson
operator|::
name|testParser
parameter_list|()
block|{
name|QFile
name|file
argument_list|(
name|testDataDir
operator|+
literal|"/test.json"
argument_list|)
decl_stmt|;
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QByteArray
name|testJson
init|=
name|file
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|testJson
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compactArray
name|void
name|tst_QtJson
operator|::
name|compactArray
parameter_list|()
block|{
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"First Entry"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"Second Entry"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"Third Entry"
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
argument_list|(
name|array
argument_list|)
decl_stmt|;
name|int
name|s
init|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|array
operator|.
name|removeAt
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s
operator|>
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"[\n"
literal|"    \"First Entry\",\n"
literal|"    \"Third Entry\"\n"
literal|"]\n"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|removeAt
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s
operator|>
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"[\n"
literal|"    \"Third Entry\"\n"
literal|"]\n"
argument_list|)
argument_list|)
expr_stmt|;
name|array
operator|.
name|removeAt
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s
operator|>
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"[\n"
literal|"]\n"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compactObject
name|void
name|tst_QtJson
operator|::
name|compactObject
parameter_list|()
block|{
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"Key1"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"First Entry"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"Key2"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Second Entry"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"Key3"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"Third Entry"
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
argument_list|(
name|object
argument_list|)
decl_stmt|;
name|int
name|s
init|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|object
operator|.
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"Key2"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s
operator|>
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"{\n"
literal|"    \"Key1\": \"First Entry\",\n"
literal|"    \"Key3\": \"Third Entry\"\n"
literal|"}\n"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"Key1"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s
operator|>
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"{\n"
literal|"    \"Key3\": \"Third Entry\"\n"
literal|"}\n"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"Key3"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s
operator|>
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|=
name|doc
operator|.
name|toBinaryData
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|toJson
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"{\n"
literal|"}\n"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|validation
name|void
name|tst_QtJson
operator|::
name|validation
parameter_list|()
block|{
comment|// this basically tests that we don't crash on corrupt data
name|QFile
name|file
argument_list|(
name|testDataDir
operator|+
literal|"/test.json"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QByteArray
name|testJson
init|=
name|file
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testJson
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|testJson
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QByteArray
name|binary
init|=
name|doc
operator|.
name|toBinaryData
argument_list|()
decl_stmt|;
comment|// only test the first 1000 bytes. Testing the full file takes too long
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|corrupted
init|=
name|binary
decl_stmt|;
name|corrupted
index|[
name|i
index|]
operator|=
name|char
argument_list|(
literal|0xff
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|corrupted
argument_list|)
decl_stmt|;
if|if
condition|(
name|doc
operator|.
name|isNull
argument_list|()
condition|)
continue|continue;
name|QByteArray
name|json
init|=
name|doc
operator|.
name|toJson
argument_list|()
decl_stmt|;
block|}
name|QFile
name|file2
argument_list|(
name|testDataDir
operator|+
literal|"/test3.json"
argument_list|)
decl_stmt|;
name|file2
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|testJson
operator|=
name|file2
operator|.
name|readAll
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testJson
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|doc
operator|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|testJson
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|binary
operator|=
name|doc
operator|.
name|toBinaryData
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|binary
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|corrupted
init|=
name|binary
decl_stmt|;
name|corrupted
index|[
name|i
index|]
operator|=
name|char
argument_list|(
literal|0xff
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|corrupted
argument_list|)
decl_stmt|;
if|if
condition|(
name|doc
operator|.
name|isNull
argument_list|()
condition|)
continue|continue;
name|QByteArray
name|json
init|=
name|doc
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|corrupted
operator|=
name|binary
expr_stmt|;
name|corrupted
index|[
name|i
index|]
operator|=
literal|0x00
expr_stmt|;
name|doc
operator|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|corrupted
argument_list|)
expr_stmt|;
if|if
condition|(
name|doc
operator|.
name|isNull
argument_list|()
condition|)
continue|continue;
name|json
operator|=
name|doc
operator|.
name|toJson
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|assignToDocument
name|void
name|tst_QtJson
operator|::
name|assignToDocument
parameter_list|()
block|{
block|{
specifier|const
name|char
modifier|*
name|json
init|=
literal|"{ \"inner\": { \"key\": true } }"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QJsonObject
name|o
init|=
name|doc
operator|.
name|object
argument_list|()
decl_stmt|;
name|QJsonValue
name|inner
init|=
name|o
operator|.
name|value
argument_list|(
literal|"inner"
argument_list|)
decl_stmt|;
name|QJsonDocument
name|innerDoc
argument_list|(
name|inner
operator|.
name|toObject
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|innerDoc
operator|!=
name|doc
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|innerDoc
operator|.
name|object
argument_list|()
operator|==
name|inner
operator|.
name|toObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
specifier|const
name|char
modifier|*
name|json
init|=
literal|"[ [ true ] ]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QJsonArray
name|a
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QJsonValue
name|inner
init|=
name|a
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QJsonDocument
name|innerDoc
argument_list|(
name|inner
operator|.
name|toArray
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|innerDoc
operator|!=
name|doc
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|innerDoc
operator|.
name|array
argument_list|()
operator|==
name|inner
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testDuplicateKeys
name|void
name|tst_QtJson
operator|::
name|testDuplicateKeys
parameter_list|()
block|{
name|QJsonObject
name|obj
decl_stmt|;
name|obj
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"zap"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"zap"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testCompaction
name|void
name|tst_QtJson
operator|::
name|testCompaction
parameter_list|()
block|{
comment|// modify object enough times to trigger compactionCounter
comment|// and make sure the data is still valid
name|QJsonObject
name|obj
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|33
condition|;
operator|++
name|i
control|)
block|{
name|obj
operator|.
name|remove
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|value
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromBinaryData
argument_list|(
name|QJsonDocument
argument_list|(
name|obj
argument_list|)
operator|.
name|toBinaryData
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isArray
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|doc
operator|.
name|isObject
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|object
argument_list|()
operator|==
name|obj
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testDebugStream
name|void
name|tst_QtJson
operator|::
name|testDebugStream
parameter_list|()
block|{
block|{
comment|// QJsonObject
name|QJsonObject
name|object
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonObject()"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|object
expr_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonObject({\"foo\":\"bar\"})"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|object
expr_stmt|;
block|}
block|{
comment|// QJsonArray
name|QJsonArray
name|array
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonArray()"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|array
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonArray([1,\"foo\"])"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|array
expr_stmt|;
block|}
block|{
comment|// QJsonDocument
name|QJsonDocument
name|doc
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonDocument()"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|doc
expr_stmt|;
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonDocument({\"foo\":\"bar\"})"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|doc
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonDocument([1,\"foo\"])"
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setArray
argument_list|(
name|array
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|doc
expr_stmt|;
block|}
block|{
comment|// QJsonValue
name|QJsonValue
name|value
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonValue(null)"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|value
expr_stmt|;
name|value
operator|=
name|QJsonValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// bool
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonValue(bool, true)"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|value
expr_stmt|;
name|value
operator|=
name|QJsonValue
argument_list|(
operator|(
name|double
operator|)
literal|4.2
argument_list|)
expr_stmt|;
comment|// double
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonValue(double, 4.2)"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|value
expr_stmt|;
name|value
operator|=
name|QJsonValue
argument_list|(
operator|(
name|int
operator|)
literal|42
argument_list|)
expr_stmt|;
comment|// int
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonValue(double, 42)"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|value
expr_stmt|;
name|value
operator|=
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
comment|// string
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonValue(string, \"foo\")"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|value
expr_stmt|;
name|QJsonArray
name|array
decl_stmt|;
name|array
operator|.
name|append
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|array
operator|.
name|append
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|QJsonValue
argument_list|(
name|array
argument_list|)
expr_stmt|;
comment|// array
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonValue(array, QJsonArray([1,\"foo\"]) )"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|value
expr_stmt|;
name|QJsonObject
name|object
decl_stmt|;
name|object
operator|.
name|insert
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|QJsonValue
argument_list|(
name|object
argument_list|)
expr_stmt|;
comment|// object
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtDebugMsg
argument_list|,
literal|"QJsonValue(object, QJsonObject({\"foo\":\"bar\"}) )"
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|value
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testCompactionError
name|void
name|tst_QtJson
operator|::
name|testCompactionError
parameter_list|()
block|{
name|QJsonObject
name|schemaObject
decl_stmt|;
name|schemaObject
operator|.
name|insert
argument_list|(
literal|"_Type"
argument_list|,
name|QLatin1String
argument_list|(
literal|"_SchemaType"
argument_list|)
argument_list|)
expr_stmt|;
name|schemaObject
operator|.
name|insert
argument_list|(
literal|"name"
argument_list|,
name|QLatin1String
argument_list|(
literal|"Address"
argument_list|)
argument_list|)
expr_stmt|;
name|schemaObject
operator|.
name|insert
argument_list|(
literal|"schema"
argument_list|,
name|QJsonObject
argument_list|()
argument_list|)
expr_stmt|;
block|{
name|QJsonObject
name|content
argument_list|(
name|schemaObject
argument_list|)
decl_stmt|;
name|QJsonDocument
name|doc
argument_list|(
name|content
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QByteArray
name|hash
init|=
name|QCryptographicHash
operator|::
name|hash
argument_list|(
name|doc
operator|.
name|toBinaryData
argument_list|()
argument_list|,
name|QCryptographicHash
operator|::
name|Md5
argument_list|)
operator|.
name|toHex
argument_list|()
decl_stmt|;
name|schemaObject
operator|.
name|insert
argument_list|(
literal|"_Version"
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|hash
operator|.
name|constData
argument_list|()
argument_list|,
name|hash
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QJsonObject
name|schema
decl_stmt|;
name|schema
operator|.
name|insert
argument_list|(
literal|"streetNumber"
argument_list|,
name|schema
operator|.
name|value
argument_list|(
literal|"number"
argument_list|)
operator|.
name|toObject
argument_list|()
argument_list|)
expr_stmt|;
name|schemaObject
operator|.
name|insert
argument_list|(
literal|"schema"
argument_list|,
name|schema
argument_list|)
expr_stmt|;
block|{
name|QJsonObject
name|content
argument_list|(
name|schemaObject
argument_list|)
decl_stmt|;
name|content
operator|.
name|remove
argument_list|(
literal|"_Uuid"
argument_list|)
expr_stmt|;
name|content
operator|.
name|remove
argument_list|(
literal|"_Version"
argument_list|)
expr_stmt|;
name|QJsonDocument
name|doc
argument_list|(
name|content
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QByteArray
name|hash
init|=
name|QCryptographicHash
operator|::
name|hash
argument_list|(
name|doc
operator|.
name|toBinaryData
argument_list|()
argument_list|,
name|QCryptographicHash
operator|::
name|Md5
argument_list|)
operator|.
name|toHex
argument_list|()
decl_stmt|;
name|schemaObject
operator|.
name|insert
argument_list|(
literal|"_Version"
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|hash
operator|.
name|constData
argument_list|()
argument_list|,
name|hash
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|parseUnicodeEscapes
name|void
name|tst_QtJson
operator|::
name|parseUnicodeEscapes
parameter_list|()
block|{
specifier|const
name|QByteArray
name|json
init|=
literal|"[ \"A\\u00e4\\u00C4\" ]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QString
name|result
init|=
name|QLatin1String
argument_list|(
literal|"A"
argument_list|)
decl_stmt|;
name|result
operator|+=
name|QChar
argument_list|(
literal|0xe4
argument_list|)
expr_stmt|;
name|result
operator|+=
name|QChar
argument_list|(
literal|0xc4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|array
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|assignObjects
name|void
name|tst_QtJson
operator|::
name|assignObjects
parameter_list|()
block|{
specifier|const
name|char
modifier|*
name|json
init|=
literal|"[ { \"Key\": 1 }, { \"Key\": 2 } ]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QJsonObject
name|object
init|=
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toObject
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"Key"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
name|object
operator|=
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toObject
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|value
argument_list|(
literal|"Key"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|assignArrays
name|void
name|tst_QtJson
operator|::
name|assignArrays
parameter_list|()
block|{
specifier|const
name|char
modifier|*
name|json
init|=
literal|"[ [ 1 ], [ 2 ] ]"
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|)
decl_stmt|;
name|QJsonArray
name|array
init|=
name|doc
operator|.
name|array
argument_list|()
decl_stmt|;
name|QJsonArray
name|inner
init|=
name|array
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|inner
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.
argument_list|)
expr_stmt|;
name|inner
operator|=
name|array
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toArray
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|inner
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testTrailingComma
name|void
name|tst_QtJson
operator|::
name|testTrailingComma
parameter_list|()
block|{
specifier|const
name|char
modifier|*
name|jsons
index|[]
init|=
block|{
literal|"{ \"Key\": 1, }"
block|,
literal|"[ { \"Key\": 1 }, ]"
block|}
decl_stmt|;
for|for
control|(
name|unsigned
name|i
init|=
literal|0
init|;
name|i
operator|<
sizeof|sizeof
argument_list|(
name|jsons
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|jsons
index|[
literal|0
index|]
argument_list|)
condition|;
operator|++
name|i
control|)
block|{
name|QJsonParseError
name|error
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|jsons
index|[
name|i
index|]
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|error
operator|.
name|error
argument_list|,
name|QJsonParseError
operator|::
name|MissingObject
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testDetachBug
name|void
name|tst_QtJson
operator|::
name|testDetachBug
parameter_list|()
block|{
name|QJsonObject
name|dynamic
decl_stmt|;
name|QJsonObject
name|embedded
decl_stmt|;
name|QJsonObject
name|local
decl_stmt|;
name|embedded
operator|.
name|insert
argument_list|(
literal|"Key1"
argument_list|,
name|QString
argument_list|(
literal|"Value1"
argument_list|)
argument_list|)
expr_stmt|;
name|embedded
operator|.
name|insert
argument_list|(
literal|"Key2"
argument_list|,
name|QString
argument_list|(
literal|"Value2"
argument_list|)
argument_list|)
expr_stmt|;
name|dynamic
operator|.
name|insert
argument_list|(
name|QStringLiteral
argument_list|(
literal|"Bogus"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"bogusValue"
argument_list|)
argument_list|)
expr_stmt|;
name|dynamic
operator|.
name|insert
argument_list|(
literal|"embedded"
argument_list|,
name|embedded
argument_list|)
expr_stmt|;
name|local
operator|=
name|dynamic
operator|.
name|value
argument_list|(
literal|"embedded"
argument_list|)
operator|.
name|toObject
argument_list|()
expr_stmt|;
name|dynamic
operator|.
name|remove
argument_list|(
literal|"embedded"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|local
operator|.
name|keys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|local
operator|.
name|remove
argument_list|(
literal|"Key1"
argument_list|)
expr_stmt|;
name|local
operator|.
name|remove
argument_list|(
literal|"Key2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|local
operator|.
name|keys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|local
operator|.
name|insert
argument_list|(
literal|"Key1"
argument_list|,
name|QString
argument_list|(
literal|"anotherValue"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|local
operator|.
name|keys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|valueEquals
name|void
name|tst_QtJson
operator|::
name|valueEquals
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|()
operator|==
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|()
operator|!=
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|()
operator|!=
name|QJsonValue
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|()
operator|!=
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|()
operator|!=
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|()
operator|!=
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|true
argument_list|)
operator|==
name|QJsonValue
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|true
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|true
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|true
argument_list|)
operator|!=
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|true
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|true
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|true
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|==
name|QJsonValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|==
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|1.1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|!=
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
operator|==
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|2.
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
operator|!=
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonArray
name|nonEmptyArray
decl_stmt|;
name|nonEmptyArray
operator|.
name|append
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|!=
name|nonEmptyArray
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QJsonObject
name|nonEmptyObject
decl_stmt|;
name|nonEmptyObject
operator|.
name|insert
argument_list|(
literal|"Key"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|!=
name|nonEmptyObject
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonValue
operator|::
name|Undefined
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
literal|1.
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|QJsonObject
argument_list|()
argument_list|)
operator|!=
name|QJsonValue
argument_list|(
name|QJsonArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|"foo"
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QLatin1String
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|"foo"
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QString
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|"\x66\x6f\x6f"
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QString
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|"\x62\x61\x72"
argument_list|)
operator|==
name|QJsonValue
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|UNICODE_NON_CHARACTER
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QString
argument_list|(
name|UNICODE_NON_CHARACTER
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
name|UNICODE_DJE
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QString
argument_list|(
name|UNICODE_DJE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QJsonValue
argument_list|(
literal|"\xc3\xa9"
argument_list|)
operator|==
name|QJsonValue
argument_list|(
name|QString
argument_list|(
literal|"\xc3\xa9"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|bom
name|void
name|tst_QtJson
operator|::
name|bom
parameter_list|()
block|{
name|QFile
name|file
argument_list|(
name|testDataDir
operator|+
literal|"/bom.json"
argument_list|)
decl_stmt|;
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QByteArray
name|json
init|=
name|file
operator|.
name|readAll
argument_list|()
decl_stmt|;
comment|// Import json document into a QJsonDocument
name|QJsonParseError
name|error
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|error
operator|.
name|error
operator|==
name|QJsonParseError
operator|::
name|NoError
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nesting
name|void
name|tst_QtJson
operator|::
name|nesting
parameter_list|()
block|{
comment|// check that we abort parsing too deeply nested json documents.
comment|// this is to make sure we don't crash because the parser exhausts the
comment|// stack.
specifier|const
name|char
modifier|*
name|array_data
init|=
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
literal|"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]"
decl_stmt|;
name|QByteArray
name|json
argument_list|(
name|array_data
argument_list|)
decl_stmt|;
name|QJsonParseError
name|error
decl_stmt|;
name|QJsonDocument
name|doc
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|error
operator|.
name|error
operator|==
name|QJsonParseError
operator|::
name|NoError
argument_list|)
expr_stmt|;
name|json
operator|.
name|prepend
argument_list|(
literal|"["
argument_list|)
expr_stmt|;
name|json
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
name|doc
operator|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|error
operator|.
name|error
operator|==
name|QJsonParseError
operator|::
name|DeepNesting
argument_list|)
expr_stmt|;
name|json
operator|=
name|QByteArray
argument_list|(
literal|"true "
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1024
condition|;
operator|++
name|i
control|)
block|{
name|json
operator|.
name|prepend
argument_list|(
literal|"{ \"Key\": "
argument_list|)
expr_stmt|;
name|json
operator|.
name|append
argument_list|(
literal|" }"
argument_list|)
expr_stmt|;
block|}
name|doc
operator|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|error
operator|.
name|error
operator|==
name|QJsonParseError
operator|::
name|NoError
argument_list|)
expr_stmt|;
name|json
operator|.
name|prepend
argument_list|(
literal|"["
argument_list|)
expr_stmt|;
name|json
operator|.
name|append
argument_list|(
literal|"]"
argument_list|)
expr_stmt|;
name|doc
operator|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|json
argument_list|,
operator|&
name|error
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|doc
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|error
operator|.
name|error
operator|==
name|QJsonParseError
operator|::
name|DeepNesting
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|longStrings
name|void
name|tst_QtJson
operator|::
name|longStrings
parameter_list|()
block|{
comment|// test around 15 and 16 bit boundaries, as these are limits
comment|// in the data structures (for Latin1String in qjson_p.h)
name|QString
name|s
argument_list|(
literal|0x7ff0
argument_list|,
literal|'a'
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0x7ff0
init|;
name|i
operator|<
literal|0x8010
condition|;
name|i
operator|++
control|)
block|{
name|s
operator|.
name|append
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|QMap
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|map
decl_stmt|;
name|map
index|[
literal|"key"
index|]
operator|=
name|s
expr_stmt|;
comment|/* Create a QJsonDocument from the QMap ... */
name|QJsonDocument
name|d1
init|=
name|QJsonDocument
operator|::
name|fromVariant
argument_list|(
name|QVariant
argument_list|(
name|map
argument_list|)
argument_list|)
decl_stmt|;
comment|/* ... and a QByteArray from the QJsonDocument */
name|QByteArray
name|a1
init|=
name|d1
operator|.
name|toJson
argument_list|()
decl_stmt|;
comment|/* Create a QJsonDocument from the QByteArray ... */
name|QJsonDocument
name|d2
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|a1
argument_list|)
decl_stmt|;
comment|/* ... and a QByteArray from the QJsonDocument */
name|QByteArray
name|a2
init|=
name|d2
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|a1
operator|==
name|a2
argument_list|)
expr_stmt|;
block|}
name|s
operator|=
name|QString
argument_list|(
literal|0xfff0
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0xfff0
init|;
name|i
operator|<
literal|0x10010
condition|;
name|i
operator|++
control|)
block|{
name|s
operator|.
name|append
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|QMap
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|map
decl_stmt|;
name|map
index|[
literal|"key"
index|]
operator|=
name|s
expr_stmt|;
comment|/* Create a QJsonDocument from the QMap ... */
name|QJsonDocument
name|d1
init|=
name|QJsonDocument
operator|::
name|fromVariant
argument_list|(
name|QVariant
argument_list|(
name|map
argument_list|)
argument_list|)
decl_stmt|;
comment|/* ... and a QByteArray from the QJsonDocument */
name|QByteArray
name|a1
init|=
name|d1
operator|.
name|toJson
argument_list|()
decl_stmt|;
comment|/* Create a QJsonDocument from the QByteArray ... */
name|QJsonDocument
name|d2
init|=
name|QJsonDocument
operator|::
name|fromJson
argument_list|(
name|a1
argument_list|)
decl_stmt|;
comment|/* ... and a QByteArray from the QJsonDocument */
name|QByteArray
name|a2
init|=
name|d2
operator|.
name|toJson
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|a1
operator|==
name|a2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QtJson
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtjson.moc"
end_include
end_unit
