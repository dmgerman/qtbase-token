begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_include
include|#
directive|include
file|<QtWidgets/QPushButton>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGraphicsScene>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGraphicsSceneEvent>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGraphicsTextItem>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"qstatemachine.h"
end_include
begin_include
include|#
directive|include
file|"qstate.h"
end_include
begin_include
include|#
directive|include
file|"qhistorystate.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_include
include|#
directive|include
file|"qkeyeventtransition.h"
end_include
begin_include
include|#
directive|include
file|"qmouseeventtransition.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"private/qstate_p.h"
end_include
begin_include
include|#
directive|include
file|"private/qstatemachine_p.h"
end_include
begin_decl_stmt
DECL|variable|globalTick
specifier|static
name|int
name|globalTick
decl_stmt|;
end_decl_stmt
begin_comment
comment|// Run exec for a maximum of TIMEOUT msecs
end_comment
begin_define
DECL|macro|QCOREAPPLICATION_EXEC
define|#
directive|define
name|QCOREAPPLICATION_EXEC
parameter_list|(
name|TIMEOUT
parameter_list|)
define|\
value|{ \     QTimer timer; \     timer.setSingleShot(true); \     timer.setInterval(TIMEOUT); \     timer.start(); \     connect(&timer, SIGNAL(timeout()), QCoreApplication::instance(), SLOT(quit())); \     QCoreApplication::exec(); \ }
end_define
begin_class
DECL|class|SignalEmitter
class|class
name|SignalEmitter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|SignalEmitter
name|SignalEmitter
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|emitSignalWithNoArg
name|void
name|emitSignalWithNoArg
parameter_list|()
block|{
emit|emit
name|signalWithNoArg
argument_list|()
emit|;
block|}
DECL|function|emitSignalWithIntArg
name|void
name|emitSignalWithIntArg
parameter_list|(
name|int
name|arg
parameter_list|)
block|{
emit|emit
name|signalWithIntArg
argument_list|(
name|arg
argument_list|)
emit|;
block|}
DECL|function|emitSignalWithStringArg
name|void
name|emitSignalWithStringArg
parameter_list|(
specifier|const
name|QString
modifier|&
name|arg
parameter_list|)
block|{
emit|emit
name|signalWithStringArg
argument_list|(
name|arg
argument_list|)
emit|;
block|}
DECL|function|emitSignalWithDefaultArg
name|void
name|emitSignalWithDefaultArg
parameter_list|()
block|{
emit|emit
name|signalWithDefaultArg
argument_list|()
emit|;
block|}
name|Q_SIGNALS
label|:
name|void
name|signalWithNoArg
parameter_list|()
function_decl|;
name|void
name|signalWithIntArg
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|signalWithStringArg
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|)
function_decl|;
name|void
name|signalWithDefaultArg
parameter_list|(
name|int
name|i
init|=
literal|42
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|tst_QStateMachine
class|class
name|tst_QStateMachine
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|rootState
parameter_list|()
function_decl|;
name|void
name|machineWithParent
parameter_list|()
function_decl|;
name|void
name|addAndRemoveState
parameter_list|()
function_decl|;
name|void
name|stateEntryAndExit
parameter_list|()
function_decl|;
name|void
name|assignProperty
parameter_list|()
function_decl|;
name|void
name|assignPropertyWithAnimation
parameter_list|()
function_decl|;
name|void
name|postEvent
parameter_list|()
function_decl|;
name|void
name|cancelDelayedEvent
parameter_list|()
function_decl|;
name|void
name|postDelayedEventAndStop
parameter_list|()
function_decl|;
name|void
name|postDelayedEventFromThread
parameter_list|()
function_decl|;
name|void
name|stopAndPostEvent
parameter_list|()
function_decl|;
name|void
name|stateFinished
parameter_list|()
function_decl|;
name|void
name|parallelStates
parameter_list|()
function_decl|;
name|void
name|parallelRootState
parameter_list|()
function_decl|;
name|void
name|allSourceToTargetConfigurations
parameter_list|()
function_decl|;
name|void
name|signalTransitions
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|eventTransitions
parameter_list|()
function_decl|;
name|void
name|graphicsSceneEventTransitions
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|historyStates
parameter_list|()
function_decl|;
name|void
name|startAndStop
parameter_list|()
function_decl|;
name|void
name|targetStateWithNoParent
parameter_list|()
function_decl|;
name|void
name|targetStateDeleted
parameter_list|()
function_decl|;
name|void
name|transitionToRootState
parameter_list|()
function_decl|;
name|void
name|transitionFromRootState
parameter_list|()
function_decl|;
name|void
name|transitionEntersParent
parameter_list|()
function_decl|;
name|void
name|defaultErrorState
parameter_list|()
function_decl|;
name|void
name|customGlobalErrorState
parameter_list|()
function_decl|;
name|void
name|customLocalErrorStateInBrokenState
parameter_list|()
function_decl|;
name|void
name|customLocalErrorStateInOtherState
parameter_list|()
function_decl|;
name|void
name|customLocalErrorStateInParentOfBrokenState
parameter_list|()
function_decl|;
name|void
name|customLocalErrorStateOverridesParent
parameter_list|()
function_decl|;
name|void
name|errorStateHasChildren
parameter_list|()
function_decl|;
name|void
name|errorStateHasErrors
parameter_list|()
function_decl|;
name|void
name|errorStateIsRootState
parameter_list|()
function_decl|;
name|void
name|errorStateEntersParentFirst
parameter_list|()
function_decl|;
name|void
name|customErrorStateIsNull
parameter_list|()
function_decl|;
name|void
name|clearError
parameter_list|()
function_decl|;
name|void
name|historyStateHasNowhereToGo
parameter_list|()
function_decl|;
name|void
name|historyStateAsInitialState
parameter_list|()
function_decl|;
name|void
name|historyStateAfterRestart
parameter_list|()
function_decl|;
name|void
name|brokenStateIsNeverEntered
parameter_list|()
function_decl|;
name|void
name|customErrorStateNotInGraph
parameter_list|()
function_decl|;
name|void
name|transitionToStateNotInGraph
parameter_list|()
function_decl|;
name|void
name|restoreProperties
parameter_list|()
function_decl|;
name|void
name|defaultGlobalRestorePolicy
parameter_list|()
function_decl|;
name|void
name|globalRestorePolicySetToRestore
parameter_list|()
function_decl|;
name|void
name|globalRestorePolicySetToDontRestore
parameter_list|()
function_decl|;
name|void
name|noInitialStateForInitialState
parameter_list|()
function_decl|;
name|void
name|transitionWithParent
parameter_list|()
function_decl|;
name|void
name|transitionsFromParallelStateWithNoChildren
parameter_list|()
function_decl|;
name|void
name|parallelStateTransition
parameter_list|()
function_decl|;
name|void
name|parallelStateAssignmentsDone
parameter_list|()
function_decl|;
name|void
name|nestedRestoreProperties
parameter_list|()
function_decl|;
name|void
name|nestedRestoreProperties2
parameter_list|()
function_decl|;
name|void
name|simpleAnimation
parameter_list|()
function_decl|;
name|void
name|twoAnimations
parameter_list|()
function_decl|;
name|void
name|twoAnimatedTransitions
parameter_list|()
function_decl|;
name|void
name|playAnimationTwice
parameter_list|()
function_decl|;
name|void
name|nestedTargetStateForAnimation
parameter_list|()
function_decl|;
name|void
name|propertiesAssignedSignalTransitionsReuseAnimationGroup
parameter_list|()
function_decl|;
name|void
name|animatedGlobalRestoreProperty
parameter_list|()
function_decl|;
name|void
name|specificTargetValueOfAnimation
parameter_list|()
function_decl|;
name|void
name|addDefaultAnimation
parameter_list|()
function_decl|;
name|void
name|addDefaultAnimationWithUnusedAnimation
parameter_list|()
function_decl|;
name|void
name|removeDefaultAnimation
parameter_list|()
function_decl|;
name|void
name|overrideDefaultAnimationWithSpecific
parameter_list|()
function_decl|;
name|void
name|nestedStateMachines
parameter_list|()
function_decl|;
name|void
name|goToState
parameter_list|()
function_decl|;
name|void
name|goToStateFromSourceWithTransition
parameter_list|()
function_decl|;
name|void
name|clonedSignals
parameter_list|()
function_decl|;
name|void
name|postEventFromOtherThread
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
name|void
name|eventFilterForApplication
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|eventClassesExported
parameter_list|()
function_decl|;
name|void
name|stopInTransitionToFinalState
parameter_list|()
function_decl|;
name|void
name|stopInEventTest_data
parameter_list|()
function_decl|;
name|void
name|stopInEventTest
parameter_list|()
function_decl|;
name|void
name|testIncrementReceivers
parameter_list|()
function_decl|;
name|void
name|initialStateIsEnteredBeforeStartedEmitted
parameter_list|()
function_decl|;
name|void
name|deletePropertyAssignmentObjectBeforeEntry
parameter_list|()
function_decl|;
name|void
name|deletePropertyAssignmentObjectBeforeRestore
parameter_list|()
function_decl|;
name|void
name|deleteInitialState
parameter_list|()
function_decl|;
name|void
name|setPropertyAfterRestore
parameter_list|()
function_decl|;
name|void
name|transitionWithNoTarget_data
parameter_list|()
function_decl|;
name|void
name|transitionWithNoTarget
parameter_list|()
function_decl|;
name|void
name|initialStateIsFinal
parameter_list|()
function_decl|;
name|void
name|restorePropertiesSimple
parameter_list|()
function_decl|;
name|void
name|restoreProperties2
parameter_list|()
function_decl|;
name|void
name|restoreProperties3
parameter_list|()
function_decl|;
name|void
name|restoreProperties4
parameter_list|()
function_decl|;
name|void
name|restorePropertiesSelfTransition
parameter_list|()
function_decl|;
name|void
name|changeStateWhileAnimatingProperty
parameter_list|()
function_decl|;
name|void
name|propertiesAreAssignedBeforeEntryCallbacks_data
parameter_list|()
function_decl|;
name|void
name|propertiesAreAssignedBeforeEntryCallbacks
parameter_list|()
function_decl|;
name|void
name|multiTargetTransitionInsideParallelStateGroup
parameter_list|()
function_decl|;
name|void
name|signalTransitionNormalizeSignature
parameter_list|()
function_decl|;
name|void
name|createSignalTransitionWhenRunning
parameter_list|()
function_decl|;
name|void
name|createEventTransitionWhenRunning
parameter_list|()
function_decl|;
name|void
name|signalTransitionSenderInDifferentThread
parameter_list|()
function_decl|;
name|void
name|signalTransitionRegistrationThreadSafety
parameter_list|()
function_decl|;
name|void
name|childModeConstructor
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|TestState
class|class
name|TestState
super|:
specifier|public
name|QState
block|{
public|public:
DECL|enum|Event
enum|enum
name|Event
block|{
DECL|enumerator|Entry
name|Entry
block|,
DECL|enumerator|Exit
name|Exit
block|}
enum|;
DECL|function|TestState
name|TestState
parameter_list|(
name|QState
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QState
argument_list|(
name|parent
argument_list|)
block|{}
DECL|member|events
name|QList
argument_list|<
name|QPair
argument_list|<
name|int
argument_list|,
name|Event
argument_list|>
argument_list|>
name|events
decl_stmt|;
protected|protected:
DECL|function|onEntry
specifier|virtual
name|void
name|onEntry
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
name|events
operator|.
name|append
argument_list|(
name|qMakePair
argument_list|(
name|globalTick
operator|++
argument_list|,
name|Entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|onExit
specifier|virtual
name|void
name|onExit
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
name|events
operator|.
name|append
argument_list|(
name|qMakePair
argument_list|(
name|globalTick
operator|++
argument_list|,
name|Exit
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|TestTransition
class|class
name|TestTransition
super|:
specifier|public
name|QAbstractTransition
block|{
public|public:
DECL|function|TestTransition
name|TestTransition
parameter_list|(
name|QAbstractState
modifier|*
name|target
parameter_list|)
member_init_list|:
name|QAbstractTransition
argument_list|()
block|{
name|setTargetState
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
DECL|member|triggers
name|QList
argument_list|<
name|int
argument_list|>
name|triggers
decl_stmt|;
protected|protected:
DECL|function|eventTest
specifier|virtual
name|bool
name|eventTest
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
DECL|function|onTransition
specifier|virtual
name|void
name|onTransition
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
name|triggers
operator|.
name|append
argument_list|(
name|globalTick
operator|++
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|EventTransition
class|class
name|EventTransition
super|:
specifier|public
name|QAbstractTransition
block|{
public|public:
DECL|function|EventTransition
name|EventTransition
parameter_list|(
name|QEvent
operator|::
name|Type
name|type
parameter_list|,
name|QAbstractState
modifier|*
name|target
parameter_list|,
name|QState
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractTransition
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_type
argument_list|(
name|type
argument_list|)
block|{
name|setTargetState
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
DECL|function|EventTransition
name|EventTransition
parameter_list|(
name|QEvent
operator|::
name|Type
name|type
parameter_list|,
specifier|const
name|QList
argument_list|<
name|QAbstractState
modifier|*
argument_list|>
modifier|&
name|targets
parameter_list|,
name|QState
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QAbstractTransition
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_type
argument_list|(
name|type
argument_list|)
block|{
name|setTargetStates
argument_list|(
name|targets
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|eventTest
specifier|virtual
name|bool
name|eventTest
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
return|return
operator|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|m_type
operator|)
return|;
block|}
DECL|function|onTransition
specifier|virtual
name|void
name|onTransition
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{}
private|private:
DECL|member|m_type
name|QEvent
operator|::
name|Type
name|m_type
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|transitionToRootState
name|void
name|tst_QStateMachine
operator|::
name|transitionToRootState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setObjectName
argument_list|(
literal|"machine"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initial"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|trans
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
name|initialState
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|initialState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: No common ancestor for targets and source of transition from state 'initial'"
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transitionFromRootState
name|void
name|tst_QStateMachine
operator|::
name|transitionFromRootState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|root
init|=
operator|&
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|EventTransition
modifier|*
name|trans
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|root
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transitionEntersParent
name|void
name|tst_QStateMachine
operator|::
name|transitionEntersParent
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|entryController
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|entryController
operator|->
name|setObjectName
argument_list|(
literal|"entryController"
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"greatGrandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"grandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"parentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"stateEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|greatGrandParent
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|greatGrandParent
operator|->
name|setObjectName
argument_list|(
literal|"grandParent"
argument_list|)
expr_stmt|;
name|greatGrandParent
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"greatGrandParentEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|greatGrandParent
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|greatGrandParent
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|grandParent
init|=
operator|new
name|QState
argument_list|(
name|greatGrandParent
argument_list|)
decl_stmt|;
name|grandParent
operator|->
name|setObjectName
argument_list|(
literal|"grandParent"
argument_list|)
expr_stmt|;
name|grandParent
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"grandParentEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|parent
init|=
operator|new
name|QState
argument_list|(
name|grandParent
argument_list|)
decl_stmt|;
name|parent
operator|->
name|setObjectName
argument_list|(
literal|"parent"
argument_list|)
expr_stmt|;
name|parent
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"parentEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|state
init|=
operator|new
name|QState
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|state
operator|->
name|setObjectName
argument_list|(
literal|"state"
argument_list|)
expr_stmt|;
name|state
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"stateEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialStateOfGreatGrandParent
init|=
operator|new
name|QState
argument_list|(
name|greatGrandParent
argument_list|)
decl_stmt|;
name|initialStateOfGreatGrandParent
operator|->
name|setObjectName
argument_list|(
literal|"initialStateOfGreatGrandParent"
argument_list|)
expr_stmt|;
name|greatGrandParent
operator|->
name|setInitialState
argument_list|(
name|initialStateOfGreatGrandParent
argument_list|)
expr_stmt|;
name|initialStateOfGreatGrandParent
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|state
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"greatGrandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"grandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"parentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"stateEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|greatGrandParent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|initialStateOfGreatGrandParent
argument_list|)
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"greatGrandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"grandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"parentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"stateEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"greatGrandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"grandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"parentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"stateEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|greatGrandParent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|grandParent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|state
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultErrorState
name|void
name|tst_QStateMachine
operator|::
name|defaultErrorState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorState
argument_list|()
argument_list|,
cast|reinterpret_cast
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"MyInitialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: Missing initial state in compound state 'MyInitialState'"
argument_list|)
expr_stmt|;
comment|// initialState has no initial state
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|,
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Missing initial state in compound state 'MyInitialState'"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|CustomErrorState
class|class
name|CustomErrorState
super|:
specifier|public
name|QState
block|{
public|public:
DECL|function|CustomErrorState
name|CustomErrorState
parameter_list|(
name|QStateMachine
modifier|*
name|machine
parameter_list|,
name|QState
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QState
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|error
argument_list|(
name|QStateMachine
operator|::
name|NoError
argument_list|)
member_init_list|,
name|m_machine
argument_list|(
name|machine
argument_list|)
block|{     }
DECL|function|onEntry
name|void
name|onEntry
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
name|error
operator|=
name|m_machine
operator|->
name|error
argument_list|()
expr_stmt|;
name|errorString
operator|=
name|m_machine
operator|->
name|errorString
argument_list|()
expr_stmt|;
block|}
DECL|member|error
name|QStateMachine
operator|::
name|Error
name|error
decl_stmt|;
DECL|member|errorString
name|QString
name|errorString
decl_stmt|;
private|private:
DECL|member|m_machine
name|QStateMachine
modifier|*
name|m_machine
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|customGlobalErrorState
name|void
name|tst_QStateMachine
operator|::
name|customGlobalErrorState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|CustomErrorState
modifier|*
name|customErrorState
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|customErrorState
operator|->
name|setObjectName
argument_list|(
literal|"customErrorState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|(
name|customErrorState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|initialState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|initialState
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|customErrorState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customErrorState
operator|->
name|error
argument_list|,
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customErrorState
operator|->
name|errorString
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Missing initial state in compound state 'brokenState'"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|,
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Missing initial state in compound state 'brokenState'"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customLocalErrorStateInBrokenState
name|void
name|tst_QStateMachine
operator|::
name|customLocalErrorStateInBrokenState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|CustomErrorState
modifier|*
name|customErrorState
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|brokenState
operator|->
name|setErrorState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|customErrorState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customErrorState
operator|->
name|error
argument_list|,
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customLocalErrorStateInOtherState
name|void
name|tst_QStateMachine
operator|::
name|customLocalErrorStateInOtherState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|CustomErrorState
modifier|*
name|customErrorState
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::setErrorState: error state cannot belong to a different state machine"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|setErrorState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: Missing initial state in compound state 'brokenState'"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customLocalErrorStateInParentOfBrokenState
name|void
name|tst_QStateMachine
operator|::
name|customLocalErrorStateInParentOfBrokenState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|CustomErrorState
modifier|*
name|customErrorState
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|parentOfBrokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|parentOfBrokenState
argument_list|)
expr_stmt|;
name|parentOfBrokenState
operator|->
name|setObjectName
argument_list|(
literal|"parentOfBrokenState"
argument_list|)
expr_stmt|;
name|parentOfBrokenState
operator|->
name|setErrorState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|(
name|parentOfBrokenState
argument_list|)
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|parentOfBrokenState
operator|->
name|setInitialState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|customErrorState
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customLocalErrorStateOverridesParent
name|void
name|tst_QStateMachine
operator|::
name|customLocalErrorStateOverridesParent
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|CustomErrorState
modifier|*
name|customErrorStateForParent
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorStateForParent
argument_list|)
expr_stmt|;
name|CustomErrorState
modifier|*
name|customErrorStateForBrokenState
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorStateForBrokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|parentOfBrokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|parentOfBrokenState
argument_list|)
expr_stmt|;
name|parentOfBrokenState
operator|->
name|setObjectName
argument_list|(
literal|"parentOfBrokenState"
argument_list|)
expr_stmt|;
name|parentOfBrokenState
operator|->
name|setErrorState
argument_list|(
name|customErrorStateForParent
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|(
name|parentOfBrokenState
argument_list|)
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|brokenState
operator|->
name|setErrorState
argument_list|(
name|customErrorStateForBrokenState
argument_list|)
expr_stmt|;
name|parentOfBrokenState
operator|->
name|setInitialState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|customErrorStateForBrokenState
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customErrorStateForBrokenState
operator|->
name|error
argument_list|,
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customErrorStateForParent
operator|->
name|error
argument_list|,
name|QStateMachine
operator|::
name|NoError
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|errorStateHasChildren
name|void
name|tst_QStateMachine
operator|::
name|errorStateHasChildren
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|CustomErrorState
modifier|*
name|customErrorState
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|customErrorState
operator|->
name|setObjectName
argument_list|(
literal|"customErrorState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childOfErrorState
init|=
operator|new
name|QState
argument_list|(
name|customErrorState
argument_list|)
decl_stmt|;
name|childOfErrorState
operator|->
name|setObjectName
argument_list|(
literal|"childOfErrorState"
argument_list|)
expr_stmt|;
name|customErrorState
operator|->
name|setInitialState
argument_list|(
name|childOfErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|customErrorState
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|childOfErrorState
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|errorStateHasErrors
name|void
name|tst_QStateMachine
operator|::
name|errorStateHasErrors
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|CustomErrorState
modifier|*
name|customErrorState
init|=
operator|new
name|CustomErrorState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|customErrorState
operator|->
name|setObjectName
argument_list|(
literal|"customErrorState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
name|customErrorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childOfErrorState
init|=
operator|new
name|QState
argument_list|(
name|customErrorState
argument_list|)
decl_stmt|;
name|childOfErrorState
operator|->
name|setObjectName
argument_list|(
literal|"childOfErrorState"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: Missing initial state in compound state 'customErrorState'"
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|,
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Missing initial state in compound state 'customErrorState'"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|errorStateIsRootState
name|void
name|tst_QStateMachine
operator|::
name|errorStateIsRootState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::setErrorState: root state cannot be error state"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
operator|&
name|machine
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: Missing initial state in compound state 'brokenState'"
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|errorStateEntersParentFirst
name|void
name|tst_QStateMachine
operator|::
name|errorStateEntersParentFirst
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|entryController
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|entryController
operator|->
name|setObjectName
argument_list|(
literal|"entryController"
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"greatGrandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"grandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"parentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"errorStateEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|greatGrandParent
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|greatGrandParent
operator|->
name|setObjectName
argument_list|(
literal|"greatGrandParent"
argument_list|)
expr_stmt|;
name|greatGrandParent
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"greatGrandParentEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|greatGrandParent
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|greatGrandParent
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|grandParent
init|=
operator|new
name|QState
argument_list|(
name|greatGrandParent
argument_list|)
decl_stmt|;
name|grandParent
operator|->
name|setObjectName
argument_list|(
literal|"grandParent"
argument_list|)
expr_stmt|;
name|grandParent
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"grandParentEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|parent
init|=
operator|new
name|QState
argument_list|(
name|grandParent
argument_list|)
decl_stmt|;
name|parent
operator|->
name|setObjectName
argument_list|(
literal|"parent"
argument_list|)
expr_stmt|;
name|parent
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"parentEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|errorState
init|=
operator|new
name|QState
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|errorState
operator|->
name|setObjectName
argument_list|(
literal|"errorState"
argument_list|)
expr_stmt|;
name|errorState
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"errorStateEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
name|errorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialStateOfGreatGrandParent
init|=
operator|new
name|QState
argument_list|(
name|greatGrandParent
argument_list|)
decl_stmt|;
name|initialStateOfGreatGrandParent
operator|->
name|setObjectName
argument_list|(
literal|"initialStateOfGreatGrandParent"
argument_list|)
expr_stmt|;
name|greatGrandParent
operator|->
name|setInitialState
argument_list|(
name|initialStateOfGreatGrandParent
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|(
name|greatGrandParent
argument_list|)
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|setObjectName
argument_list|(
literal|"childState"
argument_list|)
expr_stmt|;
name|initialStateOfGreatGrandParent
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"greatGrandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"grandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"parentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"errorStateEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|greatGrandParent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|initialStateOfGreatGrandParent
argument_list|)
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"greatGrandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"grandParentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"parentEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"errorStateEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"greatGrandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"grandParentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"parentEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"errorStateEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|greatGrandParent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|grandParent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|errorState
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customErrorStateIsNull
name|void
name|tst_QStateMachine
operator|::
name|customErrorStateIsNull
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: Missing initial state in compound state ''"
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorState
argument_list|()
argument_list|,
cast|reinterpret_cast
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearError
name|void
name|tst_QStateMachine
operator|::
name|clearError
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
comment|// avoid warnings
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|,
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Missing initial state in compound state 'brokenState'"
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|clearError
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|,
name|QStateMachine
operator|::
name|NoError
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|errorString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|historyStateAsInitialState
name|void
name|tst_QStateMachine
operator|::
name|historyStateAsInitialState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QHistoryState
modifier|*
name|hs
init|=
operator|new
name|QHistoryState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|hs
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|hs
operator|->
name|setDefaultState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QHistoryState
modifier|*
name|s2h
init|=
operator|new
name|QHistoryState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s2h
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s21
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2h
operator|->
name|setDefaultState
argument_list|(
name|s21
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s21
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|historyStateHasNowhereToGo
name|void
name|tst_QStateMachine
operator|::
name|historyStateHasNowhereToGo
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
comment|// avoid warnings
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|brokenState
operator|->
name|setInitialState
argument_list|(
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|QHistoryState
modifier|*
name|historyState
init|=
operator|new
name|QHistoryState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|historyState
operator|->
name|setObjectName
argument_list|(
literal|"historyState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|historyState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|machine
operator|.
name|errorState
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|,
name|QStateMachine
operator|::
name|NoDefaultStateInHistoryStateError
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Missing default state in history state 'historyState'"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|historyStateAfterRestart
name|void
name|tst_QStateMachine
operator|::
name|historyStateAfterRestart
parameter_list|()
block|{
comment|// QTBUG-8842
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s21
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s22
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QHistoryState
modifier|*
name|s2h
init|=
operator|new
name|QHistoryState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2h
operator|->
name|setDefaultState
argument_list|(
name|s21
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2h
argument_list|)
argument_list|)
expr_stmt|;
name|s21
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s22
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|2
condition|;
operator|++
name|x
control|)
block|{
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
comment|// s1 -> s2h -> s21 (default state)
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
comment|// This used to fail on the 2nd run because the
comment|// history had not been cleared.
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s21
argument_list|)
argument_list|)
expr_stmt|;
comment|// s21 -> s22
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s22
argument_list|)
argument_list|)
expr_stmt|;
comment|// s2 -> s1 (s22 saved in s2h)
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
comment|// s1 -> s2h -> s22 (saved state)
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s22
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|brokenStateIsNeverEntered
name|void
name|tst_QStateMachine
operator|::
name|brokenStateIsNeverEntered
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|entryController
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"brokenStateEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"childStateEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|entryController
operator|->
name|setProperty
argument_list|(
literal|"errorStateEntered"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|errorState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|errorState
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"errorStateEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
name|errorState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|brokenState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|brokenState
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"brokenStateEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|brokenState
operator|->
name|setObjectName
argument_list|(
literal|"brokenState"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|brokenState
argument_list|)
decl_stmt|;
name|childState
operator|->
name|assignProperty
argument_list|(
name|entryController
argument_list|,
literal|"childStateEntered"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|brokenState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"errorStateEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"brokenStateEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|entryController
operator|->
name|property
argument_list|(
literal|"childStateEntered"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transitionToStateNotInGraph
name|void
name|tst_QStateMachine
operator|::
name|transitionToStateNotInGraph
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
name|independentState
decl_stmt|;
name|independentState
operator|.
name|setObjectName
argument_list|(
literal|"independentState"
argument_list|)
expr_stmt|;
name|initialState
operator|->
name|addTransition
argument_list|(
operator|&
name|independentState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: No common ancestor for targets and source of transition from state 'initialState'"
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customErrorStateNotInGraph
name|void
name|tst_QStateMachine
operator|::
name|customErrorStateNotInGraph
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
name|errorState
decl_stmt|;
name|errorState
operator|.
name|setObjectName
argument_list|(
literal|"errorState"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::setErrorState: error state cannot belong to a different state machine"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setErrorState
argument_list|(
operator|&
name|errorState
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|errorState
argument_list|()
argument_list|,
cast|reinterpret_cast
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|initialBrokenState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|initialBrokenState
operator|->
name|setObjectName
argument_list|(
literal|"initialBrokenState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialBrokenState
argument_list|)
expr_stmt|;
operator|new
name|QState
argument_list|(
name|initialBrokenState
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: Missing initial state in compound state 'initialBrokenState'"
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|restoreProperties
name|void
name|tst_QStateMachine
operator|::
name|restoreProperties
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|globalRestorePolicy
argument_list|()
argument_list|,
name|QState
operator|::
name|DontRestoreProperties
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"b"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|S1
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|S1
operator|->
name|setObjectName
argument_list|(
literal|"S1"
argument_list|)
expr_stmt|;
name|S1
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"a"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|S1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|S2
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|S2
operator|->
name|setObjectName
argument_list|(
literal|"S2"
argument_list|)
expr_stmt|;
name|S2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"b"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|S2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|S3
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|S3
operator|->
name|setObjectName
argument_list|(
literal|"S3"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|S3
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|S4
init|=
operator|new
name|QFinalState
argument_list|()
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|S4
argument_list|)
expr_stmt|;
name|S1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|S2
argument_list|)
argument_list|)
expr_stmt|;
name|S2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|S3
argument_list|)
argument_list|)
expr_stmt|;
name|S3
operator|->
name|addTransition
argument_list|(
name|S4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|S1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rootState
name|void
name|tst_QStateMachine
operator|::
name|rootState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qobject_cast
argument_list|<
name|QState
operator|*
argument_list|>
argument_list|(
name|machine
operator|.
name|parentState
argument_list|()
argument_list|)
argument_list|,
operator|(
name|QState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|machine
argument_list|()
argument_list|,
operator|(
name|QStateMachine
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|parentState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QState
operator|*
argument_list|>
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|s2
operator|->
name|setParent
argument_list|(
operator|&
name|machine
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|parentState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QState
operator|*
argument_list|>
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|machineWithParent
name|void
name|tst_QStateMachine
operator|::
name|machineWithParent
parameter_list|()
block|{
name|QObject
name|object
decl_stmt|;
name|QStateMachine
modifier|*
name|machine
init|=
operator|new
name|QStateMachine
argument_list|(
operator|&
name|object
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|->
name|parent
argument_list|()
argument_list|,
operator|&
name|object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|->
name|parentState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QState
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addAndRemoveState
name|void
name|tst_QStateMachine
operator|::
name|addAndRemoveState
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QStateMachine
name|machine
decl_stmt|;
name|QStatePrivate
modifier|*
name|root_d
init|=
name|QStatePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::addState: cannot add null state"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|parentState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|machine
argument_list|()
argument_list|,
operator|(
name|QStateMachine
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|machine
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QStateMachine
operator|*
argument_list|>
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|parentState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QState
operator|*
argument_list|>
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::addState: state has already been added to this machine"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|parentState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|parentState
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QState
operator|*
argument_list|>
argument_list|(
operator|&
name|machine
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::addState: state has already been added to this machine"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|removeState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|parentState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|removeState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|parentState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root_d
operator|->
name|childStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::removeState: cannot remove null state"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|removeState
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|{
name|QStateMachine
name|machine2
decl_stmt|;
block|{
name|QString
name|warning
decl_stmt|;
name|warning
operator|.
name|sprintf
argument_list|(
literal|"QStateMachine::removeState: state %p's machine (%p) is different from this machine (%p)"
argument_list|,
operator|&
name|machine2
argument_list|,
operator|(
name|void
operator|*
operator|)
literal|0
argument_list|,
operator|&
name|machine
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|qPrintable
argument_list|(
name|warning
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|removeState
argument_list|(
operator|&
name|machine2
argument_list|)
expr_stmt|;
block|}
comment|// ### check this behavior
name|machine
operator|.
name|addState
argument_list|(
operator|&
name|machine2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine2
operator|.
name|parent
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|machine
argument_list|)
expr_stmt|;
block|}
operator|delete
name|s1
expr_stmt|;
operator|delete
name|s2
expr_stmt|;
comment|// ### how to deal with this?
comment|// machine.removeState(machine.errorState());
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|stateEntryAndExit
name|void
name|tst_QStateMachine
operator|::
name|stateEntryAndExit
parameter_list|()
block|{
comment|// Two top-level states
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|TestState
modifier|*
name|s1
init|=
operator|new
name|TestState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::addTransition: cannot add transition to null state"
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|(
name|QAbstractState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::addTransition: cannot add null transition"
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|(
name|QAbstractTransition
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::removeTransition: cannot remove null transition"
argument_list|)
expr_stmt|;
name|s1
operator|->
name|removeTransition
argument_list|(
operator|(
name|QAbstractTransition
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|TestState
modifier|*
name|s2
init|=
operator|new
name|TestState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|TestTransition
modifier|*
name|t
init|=
operator|new
name|TestTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|machine
argument_list|()
argument_list|,
operator|(
name|QStateMachine
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|sourceState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetStates
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|t
operator|->
name|setTargetState
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|t
operator|->
name|targetStates
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|t
operator|->
name|setTargetState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QAbstractTransition::setTargetStates: target state(s) cannot be null"
argument_list|)
expr_stmt|;
name|t
operator|->
name|setTargetStates
argument_list|(
name|QList
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|()
operator|<<
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|t
operator|->
name|setTargetStates
argument_list|(
name|QList
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|()
operator|<<
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|targetStates
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|sourceState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|machine
argument_list|()
argument_list|,
operator|&
name|machine
argument_list|)
expr_stmt|;
block|{
name|QAbstractTransition
modifier|*
name|trans
init|=
name|s2
operator|->
name|addTransition
argument_list|(
name|s3
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|trans
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s3
argument_list|)
expr_stmt|;
block|{
name|QString
name|warning
decl_stmt|;
name|warning
operator|.
name|sprintf
argument_list|(
literal|"QState::removeTransition: transition %p's source state (%p) is different from this state (%p)"
argument_list|,
name|trans
argument_list|,
name|s2
argument_list|,
name|s1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|qPrintable
argument_list|(
name|warning
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|removeTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
block|}
name|s2
operator|->
name|removeTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s3
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
operator|(
name|QState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
block|}
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|initialState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
block|{
name|QString
name|warning
decl_stmt|;
name|warning
operator|.
name|sprintf
argument_list|(
literal|"QState::setInitialState: state %p is not a child of this state (%p)"
argument_list|,
operator|&
name|machine
argument_list|,
operator|&
name|machine
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|qPrintable
argument_list|(
name|warning
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
operator|&
name|machine
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|initialState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|globalTick
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s1EnteredSpy
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|s1ExitedSpy
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|exited
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|tTriggeredSpy
argument_list|(
name|t
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|s2EnteredSpy
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|s2ExitedSpy
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|exited
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|s1EnteredSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s1ExitedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tTriggeredSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s2EnteredSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s2ExitedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
comment|// s1 is entered
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s1 is exited
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
comment|// t is triggered
name|QCOMPARE
argument_list|(
name|t
operator|->
name|triggers
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|->
name|triggers
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// s2 is entered
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s2 is exited
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1EnteredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1ExitedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tTriggeredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2EnteredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2ExitedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Two top-level states, one has two child states
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|TestState
modifier|*
name|s1
init|=
operator|new
name|TestState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|TestState
modifier|*
name|s11
init|=
operator|new
name|TestState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|TestState
modifier|*
name|s12
init|=
operator|new
name|TestState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|TestState
modifier|*
name|s2
init|=
operator|new
name|TestState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s11
argument_list|)
expr_stmt|;
name|TestTransition
modifier|*
name|t1
init|=
operator|new
name|TestTransition
argument_list|(
name|s12
argument_list|)
decl_stmt|;
name|s11
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|TestTransition
modifier|*
name|t2
init|=
operator|new
name|TestTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s12
operator|->
name|addTransition
argument_list|(
name|t2
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|s3
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|globalTick
operator|=
literal|0
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
comment|// s1 is entered
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s11 is entered
name|QCOMPARE
argument_list|(
name|s11
operator|->
name|events
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s11
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s11
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s11 is exited
name|QCOMPARE
argument_list|(
name|s11
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s11
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
comment|// t1 is triggered
name|QCOMPARE
argument_list|(
name|t1
operator|->
name|triggers
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t1
operator|->
name|triggers
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// s12 is entered
name|QCOMPARE
argument_list|(
name|s12
operator|->
name|events
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s12
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s12
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s12 is exited
name|QCOMPARE
argument_list|(
name|s12
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s12
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
comment|// s1 is exited
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
comment|// t2 is triggered
name|QCOMPARE
argument_list|(
name|t2
operator|->
name|triggers
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t2
operator|->
name|triggers
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|7
argument_list|)
expr_stmt|;
comment|// s2 is entered
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s2 is exited
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|assignProperty
name|void
name|tst_QStateMachine
operator|::
name|assignProperty
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::assignProperty: cannot assign property 'foo' of null object"
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
literal|0
argument_list|,
literal|"foo"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|s1
argument_list|,
literal|"objectName"
argument_list|,
literal|"s1"
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|s1
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"s1"
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|s1
argument_list|,
literal|"objectName"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|s1
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|s1
argument_list|,
literal|"noSuchProperty"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|s1
operator|->
name|dynamicPropertyNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|dynamicPropertyNames
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"noSuchProperty"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QSignalSpy
name|propertiesAssignedSpy
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|propertiesAssignedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|propertiesAssignedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// nested states
block|{
name|QState
modifier|*
name|s11
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|QString
name|str
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"set by nested state"
argument_list|)
decl_stmt|;
name|s11
operator|->
name|assignProperty
argument_list|(
name|s11
argument_list|,
literal|"objectName"
argument_list|,
name|str
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s11
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|s11
operator|->
name|objectName
argument_list|()
argument_list|,
name|str
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|assignPropertyWithAnimation
name|void
name|tst_QStateMachine
operator|::
name|assignPropertyWithAnimation
parameter_list|()
block|{
comment|// Single animation
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|isAnimated
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setAnimated
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|isAnimated
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setAnimated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|isAnimated
argument_list|()
argument_list|)
expr_stmt|;
name|QObject
name|obj
decl_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|trans
init|=
name|s1
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|trans
operator|->
name|animations
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QAbstractTransition::addAnimation: cannot add null animation"
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|animations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|animations
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractAnimation
operator|*
operator|)
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|.
name|parent
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QAbstractTransition::removeAnimation: cannot remove null animation"
argument_list|)
expr_stmt|;
name|trans
operator|->
name|removeAnimation
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|trans
operator|->
name|removeAnimation
argument_list|(
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|trans
operator|->
name|animations
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|animations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|animations
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractAnimation
operator|*
operator|)
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|789
argument_list|)
expr_stmt|;
block|}
comment|// Two animations
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
name|obj
decl_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|trans
init|=
name|s1
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim2
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|)
decl_stmt|;
name|anim2
operator|.
name|setDuration
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim2
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|789
argument_list|)
expr_stmt|;
block|}
comment|// Animation group
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
name|obj
decl_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"baz"
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|trans
init|=
name|s1
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QSequentialAnimationGroup
name|group
decl_stmt|;
name|group
operator|.
name|addAnimation
argument_list|(
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|group
operator|.
name|addAnimation
argument_list|(
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|group
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"baz"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|789
argument_list|)
expr_stmt|;
block|}
comment|// Nested states
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
name|obj
decl_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ExclusiveStates
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setChildMode
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setChildMode
argument_list|(
name|QState
operator|::
name|ExclusiveStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ExclusiveStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|initialState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setObjectName
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|setObjectName
argument_list|(
literal|"s2"
argument_list|)
expr_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s21
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s21
operator|->
name|setObjectName
argument_list|(
literal|"s21"
argument_list|)
expr_stmt|;
name|s21
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s22
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s22
operator|->
name|setObjectName
argument_list|(
literal|"s22"
argument_list|)
expr_stmt|;
name|s22
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s21
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2
operator|->
name|initialState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s21
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|trans
init|=
name|s1
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim2
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|)
decl_stmt|;
name|anim2
operator|.
name|setDuration
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim2
argument_list|)
expr_stmt|;
name|s21
operator|->
name|addTransition
argument_list|(
name|s21
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s22
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s22
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|789
argument_list|)
expr_stmt|;
block|}
comment|// Aborted animation
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|QObject
name|obj
decl_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|group
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|group
operator|->
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|trans
init|=
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
literal|8000
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim
argument_list|)
expr_stmt|;
name|QPropertyAnimation
name|anim2
argument_list|(
operator|&
name|obj
argument_list|,
literal|"bar"
argument_list|)
decl_stmt|;
name|anim2
operator|.
name|setDuration
argument_list|(
literal|8000
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
operator|&
name|anim2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|s3
operator|->
name|assignProperty
argument_list|(
operator|&
name|obj
argument_list|,
literal|"foo"
argument_list|,
literal|911
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QSignalSpy
name|propertiesAssignedSpy
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|propertiesAssignedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|propertiesAssignedSpy
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
comment|// will cause animations from s1-->s2 to abort
name|QTRY_COMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|propertiesAssignedSpy
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|911
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|789
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_struct
DECL|struct|StringEvent
struct|struct
name|StringEvent
super|:
specifier|public
name|QEvent
block|{
public|public:
DECL|function|StringEvent
name|StringEvent
parameter_list|(
specifier|const
name|QString
modifier|&
name|val
parameter_list|)
member_init_list|:
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
member_init_list|,
name|value
argument_list|(
name|val
argument_list|)
block|{}
DECL|member|value
name|QString
name|value
decl_stmt|;
block|}
struct|;
end_struct
begin_class
DECL|class|StringTransition
class|class
name|StringTransition
super|:
specifier|public
name|QAbstractTransition
block|{
public|public:
DECL|function|StringTransition
name|StringTransition
parameter_list|(
specifier|const
name|QString
modifier|&
name|value
parameter_list|,
name|QAbstractState
modifier|*
name|target
parameter_list|)
member_init_list|:
name|QAbstractTransition
argument_list|()
member_init_list|,
name|m_value
argument_list|(
name|value
argument_list|)
block|{
name|setTargetState
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|eventTest
specifier|virtual
name|bool
name|eventTest
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|!=
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
condition|)
return|return
literal|false
return|;
name|StringEvent
modifier|*
name|se
init|=
cast|static_cast
argument_list|<
name|StringEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
return|return
operator|(
name|m_value
operator|==
name|se
operator|->
name|value
operator|)
operator|&&
operator|(
operator|!
name|m_cond
operator|.
name|isValid
argument_list|()
operator|||
operator|(
name|m_cond
operator|.
name|indexIn
argument_list|(
name|m_value
argument_list|)
operator|!=
operator|-
literal|1
operator|)
operator|)
return|;
block|}
DECL|function|onTransition
specifier|virtual
name|void
name|onTransition
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{}
private|private:
DECL|member|m_value
name|QString
name|m_value
decl_stmt|;
DECL|member|m_cond
name|QRegExp
name|m_cond
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|StringEventPoster
class|class
name|StringEventPoster
super|:
specifier|public
name|QState
block|{
public|public:
DECL|function|StringEventPoster
name|StringEventPoster
parameter_list|(
specifier|const
name|QString
modifier|&
name|value
parameter_list|,
name|QState
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QState
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_value
argument_list|(
name|value
argument_list|)
member_init_list|,
name|m_delay
argument_list|(
operator|-
literal|1
argument_list|)
block|{}
DECL|function|setString
name|void
name|setString
parameter_list|(
specifier|const
name|QString
modifier|&
name|value
parameter_list|)
block|{
name|m_value
operator|=
name|value
expr_stmt|;
block|}
DECL|function|setDelay
name|void
name|setDelay
parameter_list|(
name|int
name|delay
parameter_list|)
block|{
name|m_delay
operator|=
name|delay
expr_stmt|;
block|}
protected|protected:
DECL|function|onEntry
specifier|virtual
name|void
name|onEntry
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|m_delay
operator|==
operator|-
literal|1
condition|)
name|machine
argument_list|()
operator|->
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
name|m_value
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|machine
argument_list|()
operator|->
name|postDelayedEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
name|m_value
argument_list|)
argument_list|,
name|m_delay
argument_list|)
expr_stmt|;
block|}
DECL|function|onExit
specifier|virtual
name|void
name|onExit
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{}
private|private:
DECL|member|m_value
name|QString
name|m_value
decl_stmt|;
DECL|member|m_delay
name|int
name|m_delay
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|postEvent
name|void
name|tst_QStateMachine
operator|::
name|postEvent
parameter_list|()
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|2
condition|;
operator|++
name|x
control|)
block|{
name|QStateMachine
name|machine
decl_stmt|;
block|{
name|QEvent
name|e
argument_list|(
name|QEvent
operator|::
name|None
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::postEvent: cannot post event when the state machine is not running"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|&
name|e
argument_list|)
expr_stmt|;
block|}
name|StringEventPoster
modifier|*
name|s1
init|=
operator|new
name|StringEventPoster
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
if|if
condition|(
name|x
operator|==
literal|1
condition|)
name|s1
operator|->
name|setDelay
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"a"
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setString
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|()
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s3
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"b"
argument_list|,
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|finishedSpy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|cancelDelayedEvent
name|void
name|tst_QStateMachine
operator|::
name|cancelDelayedEvent
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::cancelDelayedEvent: the machine is not running"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|cancelDelayedEvent
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"a"
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|id1
init|=
name|machine
operator|.
name|postDelayedEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"c"
argument_list|)
argument_list|,
literal|50000
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|id1
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|int
name|id2
init|=
name|machine
operator|.
name|postDelayedEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"b"
argument_list|)
argument_list|,
literal|25000
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|id2
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|id2
operator|!=
name|id1
argument_list|)
expr_stmt|;
name|int
name|id3
init|=
name|machine
operator|.
name|postDelayedEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"a"
argument_list|)
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|id3
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|id3
operator|!=
name|id2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|cancelDelayedEvent
argument_list|(
name|id1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|cancelDelayedEvent
argument_list|(
name|id1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|cancelDelayedEvent
argument_list|(
name|id2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|cancelDelayedEvent
argument_list|(
name|id2
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|postDelayedEventAndStop
name|void
name|tst_QStateMachine
operator|::
name|postDelayedEventAndStop
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"a"
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|id1
init|=
name|machine
operator|.
name|postDelayedEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"a"
argument_list|)
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|id1
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|id2
init|=
name|machine
operator|.
name|postDelayedEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"a"
argument_list|)
argument_list|,
literal|1000
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|id2
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|DelayedEventPosterThread
class|class
name|DelayedEventPosterThread
super|:
specifier|public
name|QThread
block|{
name|Q_OBJECT
public|public:
DECL|function|DelayedEventPosterThread
name|DelayedEventPosterThread
parameter_list|(
name|QStateMachine
modifier|*
name|machine
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QThread
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|firstEventWasCancelled
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|m_machine
argument_list|(
name|machine
argument_list|)
member_init_list|,
name|m_count
argument_list|(
literal|0
argument_list|)
block|{
name|moveToThread
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|m_machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|postEvent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|member|firstEventWasCancelled
specifier|mutable
name|bool
name|firstEventWasCancelled
decl_stmt|;
private|private
name|Q_SLOTS
private|:
DECL|function|postEvent
name|void
name|postEvent
parameter_list|()
block|{
name|int
name|id
init|=
name|m_machine
operator|->
name|postDelayedEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|,
literal|1000
argument_list|)
decl_stmt|;
name|firstEventWasCancelled
operator|=
name|m_machine
operator|->
name|cancelDelayedEvent
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|m_machine
operator|->
name|postDelayedEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|quit
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|m_machine
name|QStateMachine
modifier|*
name|m_machine
decl_stmt|;
DECL|member|m_count
name|int
name|m_count
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|postDelayedEventFromThread
name|void
name|tst_QStateMachine
operator|::
name|postDelayedEventFromThread
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|f
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|DelayedEventPosterThread
name|poster
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|poster
operator|.
name|start
argument_list|()
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|poster
operator|.
name|firstEventWasCancelled
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stopAndPostEvent
name|void
name|tst_QStateMachine
operator|::
name|stopAndPostEvent
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stateFinished
name|void
name|tst_QStateMachine
operator|::
name|stateFinished
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s1_1
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1_2
init|=
operator|new
name|QFinalState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s1_1
operator|->
name|addTransition
argument_list|(
name|s1_2
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s1_1
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parallelStates
name|void
name|tst_QStateMachine
operator|::
name|parallelStates
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|s1
operator|->
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|TestState
modifier|*
name|s1_1
init|=
operator|new
name|TestState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s1_1_1
init|=
operator|new
name|QState
argument_list|(
name|s1_1
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1_1_f
init|=
operator|new
name|QFinalState
argument_list|(
name|s1_1
argument_list|)
decl_stmt|;
name|s1_1_1
operator|->
name|addTransition
argument_list|(
name|s1_1_f
argument_list|)
expr_stmt|;
name|s1_1
operator|->
name|setInitialState
argument_list|(
name|s1_1_1
argument_list|)
expr_stmt|;
name|TestState
modifier|*
name|s1_2
init|=
operator|new
name|TestState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s1_2_1
init|=
operator|new
name|QState
argument_list|(
name|s1_2
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1_2_f
init|=
operator|new
name|QFinalState
argument_list|(
name|s1_2
argument_list|)
decl_stmt|;
name|s1_2_1
operator|->
name|addTransition
argument_list|(
name|s1_2_f
argument_list|)
expr_stmt|;
name|s1_2
operator|->
name|setInitialState
argument_list|(
name|s1_2_1
argument_list|)
expr_stmt|;
block|{
name|QString
name|warning
decl_stmt|;
name|warning
operator|.
name|sprintf
argument_list|(
literal|"QState::setInitialState: ignoring attempt to set initial state of parallel state group %p"
argument_list|,
name|s1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|qPrintable
argument_list|(
name|warning
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|machine
operator|.
name|addState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|()
decl_stmt|;
name|machine
operator|.
name|addState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|globalTick
operator|=
literal|0
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
comment|// s1_1 is entered
name|QCOMPARE
argument_list|(
name|s1_1
operator|->
name|events
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1_1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1_1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s1_2 is entered
name|QCOMPARE
argument_list|(
name|s1_2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|first
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1_2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Entry
argument_list|)
expr_stmt|;
comment|// s1_1 is exited
name|QCOMPARE
argument_list|(
name|s1_1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1_1
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
comment|// s1_2 is exited
name|QCOMPARE
argument_list|(
name|s1_2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|first
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1_2
operator|->
name|events
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|second
argument_list|,
name|TestState
operator|::
name|Exit
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parallelRootState
name|void
name|tst_QStateMachine
operator|::
name|parallelRootState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|root
init|=
operator|&
name|machine
decl_stmt|;
name|QCOMPARE
argument_list|(
name|root
operator|->
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ExclusiveStates
argument_list|)
expr_stmt|;
name|root
operator|->
name|setChildMode
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|root
operator|->
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1_f
init|=
operator|new
name|QFinalState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s1_f
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s2_f
init|=
operator|new
name|QFinalState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s2_f
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1_f
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2_f
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|allSourceToTargetConfigurations
name|void
name|tst_QStateMachine
operator|::
name|allSourceToTargetConfigurations
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s0
operator|->
name|setObjectName
argument_list|(
literal|"s0"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|s0
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setObjectName
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s11
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s11
operator|->
name|setObjectName
argument_list|(
literal|"s11"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
name|s0
argument_list|)
decl_stmt|;
name|s2
operator|->
name|setObjectName
argument_list|(
literal|"s2"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s21
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s21
operator|->
name|setObjectName
argument_list|(
literal|"s21"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s211
init|=
operator|new
name|QState
argument_list|(
name|s21
argument_list|)
decl_stmt|;
name|s211
operator|->
name|setObjectName
argument_list|(
literal|"s211"
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|f
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|f
operator|->
name|setObjectName
argument_list|(
literal|"f"
argument_list|)
expr_stmt|;
name|s0
operator|->
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s11
argument_list|)
expr_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s21
argument_list|)
expr_stmt|;
name|s21
operator|->
name|setInitialState
argument_list|(
name|s211
argument_list|)
expr_stmt|;
name|s11
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"g"
argument_list|,
name|s211
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"a"
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"b"
argument_list|,
name|s11
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"c"
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"d"
argument_list|,
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"f"
argument_list|,
name|s211
argument_list|)
argument_list|)
expr_stmt|;
name|s211
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"d"
argument_list|,
name|s21
argument_list|)
argument_list|)
expr_stmt|;
name|s211
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"g"
argument_list|,
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|s211
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"h"
argument_list|,
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|s21
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"b"
argument_list|,
name|s211
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"c"
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"f"
argument_list|,
name|s11
argument_list|)
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"e"
argument_list|,
name|s211
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"f"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"h"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TestSignalTransition
class|class
name|TestSignalTransition
super|:
specifier|public
name|QSignalTransition
block|{
public|public:
DECL|function|TestSignalTransition
name|TestSignalTransition
parameter_list|(
name|QState
modifier|*
name|sourceState
init|=
literal|0
parameter_list|)
member_init_list|:
name|QSignalTransition
argument_list|(
name|sourceState
argument_list|)
member_init_list|,
name|m_eventTestSender
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_eventTestSignalIndex
argument_list|(
operator|-
literal|1
argument_list|)
member_init_list|,
name|m_transitionSender
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_transitionSignalIndex
argument_list|(
operator|-
literal|1
argument_list|)
block|{}
DECL|function|TestSignalTransition
name|TestSignalTransition
parameter_list|(
name|QObject
modifier|*
name|sender
parameter_list|,
specifier|const
name|char
modifier|*
name|signal
parameter_list|,
name|QAbstractState
modifier|*
name|target
parameter_list|)
member_init_list|:
name|QSignalTransition
argument_list|(
name|sender
argument_list|,
name|signal
argument_list|)
member_init_list|,
name|m_eventTestSender
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_eventTestSignalIndex
argument_list|(
operator|-
literal|1
argument_list|)
member_init_list|,
name|m_transitionSender
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_transitionSignalIndex
argument_list|(
operator|-
literal|1
argument_list|)
block|{
name|setTargetState
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
DECL|function|eventTestSenderReceived
name|QObject
modifier|*
name|eventTestSenderReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_eventTestSender
return|;
block|}
DECL|function|eventTestSignalIndexReceived
name|int
name|eventTestSignalIndexReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_eventTestSignalIndex
return|;
block|}
DECL|function|eventTestArgumentsReceived
name|QVariantList
name|eventTestArgumentsReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_eventTestArgs
return|;
block|}
DECL|function|transitionSenderReceived
name|QObject
modifier|*
name|transitionSenderReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_transitionSender
return|;
block|}
DECL|function|transitionSignalIndexReceived
name|int
name|transitionSignalIndexReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_transitionSignalIndex
return|;
block|}
DECL|function|transitionArgumentsReceived
name|QVariantList
name|transitionArgumentsReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_transitionArgs
return|;
block|}
protected|protected:
DECL|function|eventTest
name|bool
name|eventTest
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QSignalTransition
operator|::
name|eventTest
argument_list|(
name|e
argument_list|)
condition|)
return|return
literal|false
return|;
name|QStateMachine
operator|::
name|SignalEvent
modifier|*
name|se
init|=
cast|static_cast
argument_list|<
name|QStateMachine
operator|::
name|SignalEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|m_eventTestSender
operator|=
name|se
operator|->
name|sender
argument_list|()
expr_stmt|;
name|m_eventTestSignalIndex
operator|=
name|se
operator|->
name|signalIndex
argument_list|()
expr_stmt|;
name|m_eventTestArgs
operator|=
name|se
operator|->
name|arguments
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
DECL|function|onTransition
name|void
name|onTransition
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
name|QSignalTransition
operator|::
name|onTransition
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|QStateMachine
operator|::
name|SignalEvent
modifier|*
name|se
init|=
cast|static_cast
argument_list|<
name|QStateMachine
operator|::
name|SignalEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|m_transitionSender
operator|=
name|se
operator|->
name|sender
argument_list|()
expr_stmt|;
name|m_transitionSignalIndex
operator|=
name|se
operator|->
name|signalIndex
argument_list|()
expr_stmt|;
name|m_transitionArgs
operator|=
name|se
operator|->
name|arguments
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|m_eventTestSender
name|QObject
modifier|*
name|m_eventTestSender
decl_stmt|;
DECL|member|m_eventTestSignalIndex
name|int
name|m_eventTestSignalIndex
decl_stmt|;
DECL|member|m_eventTestArgs
name|QVariantList
name|m_eventTestArgs
decl_stmt|;
DECL|member|m_transitionSender
name|QObject
modifier|*
name|m_transitionSender
decl_stmt|;
DECL|member|m_transitionSignalIndex
name|int
name|m_transitionSignalIndex
decl_stmt|;
DECL|member|m_transitionArgs
name|QVariantList
name|m_transitionArgs
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|signalTransitions
name|void
name|tst_QStateMachine
operator|::
name|signalTransitions
parameter_list|()
block|{
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::addTransition: sender cannot be null"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0
operator|->
name|addTransition
argument_list|(
literal|0
argument_list|,
name|SIGNAL
argument_list|(
name|noSuchSignal
argument_list|()
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|,
operator|(
name|QSignalTransition
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::addTransition: signal cannot be null"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
operator|(
name|QSignalTransition
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::addTransition: cannot add transition to null state"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
literal|0
argument_list|)
argument_list|,
operator|(
name|QSignalTransition
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QState::addTransition: no such signal SignalEmitter::noSuchSignal()"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|noSuchSignal
argument_list|()
argument_list|)
argument_list|,
name|s1
argument_list|)
argument_list|,
operator|(
name|QSignalTransition
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QSignalTransition
modifier|*
name|trans
init|=
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|trans
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|senderObject
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|trans
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithIntArg
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithIntArg
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithIntArg
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|trans
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|SignalEmitter
name|emitter2
decl_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|trans
operator|->
name|setSenderObject
argument_list|(
operator|&
name|emitter2
argument_list|)
expr_stmt|;
name|emitter2
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QSignalTransition: no such signal: SignalEmitter::noSuchSignal()"
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|noSuchSignal
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
name|SIGNAL
argument_list|(
name|noSuchSignal
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|QSignalTransition
modifier|*
name|trans
init|=
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
literal|"signalWithNoArg()"
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|trans
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|senderObject
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"signalWithNoArg()"
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setSignal
argument_list|(
literal|"signalWithIntArg(int)"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"signalWithIntArg(int)"
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithIntArg
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|TestSignalTransition
modifier|*
name|trans
init|=
operator|new
name|TestSignalTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithIntArg
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithIntArg
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestSenderReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestSignalIndexReceived
argument_list|()
argument_list|,
name|emitter
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signalWithIntArg(int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestArgumentsReceived
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestArgumentsReceived
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionSenderReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionSignalIndexReceived
argument_list|()
argument_list|,
name|emitter
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signalWithIntArg(int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionArgumentsReceived
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionArgumentsReceived
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|TestSignalTransition
modifier|*
name|trans
init|=
operator|new
name|TestSignalTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithStringArg
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QString
name|testString
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"hello"
argument_list|)
decl_stmt|;
name|emitter
operator|.
name|emitSignalWithStringArg
argument_list|(
name|testString
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestSenderReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestSignalIndexReceived
argument_list|()
argument_list|,
name|emitter
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signalWithStringArg(QString)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestArgumentsReceived
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTestArgumentsReceived
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|testString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionSenderReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionSignalIndexReceived
argument_list|()
argument_list|,
name|emitter
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signalWithStringArg(QString)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionArgumentsReceived
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|transitionArgumentsReceived
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|testString
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|TestSignalTransition
modifier|*
name|trans
init|=
operator|new
name|TestSignalTransition
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|senderObject
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|trans
operator|->
name|setSenderObject
argument_list|(
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|senderObject
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Multiple transitions for same (object,signal)
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QSignalTransition
modifier|*
name|t0
init|=
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|QSignalTransition
modifier|*
name|t1
init|=
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s0
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|s0
operator|->
name|removeTransition
argument_list|(
name|t0
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|removeTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|t0
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// multiple signal transitions from same source
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s1
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithIntArg
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithStringArg
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithIntArg
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithStringArg
argument_list|(
literal|"hello"
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// signature normalization
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QSignalTransition
modifier|*
name|t0
init|=
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|( )
argument_list|)
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|t0
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t0
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|( )
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalTransition
modifier|*
name|t1
init|=
name|s0
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithStringArg
argument_list|(
specifier|const
name|QString
operator|&
argument_list|)
argument_list|)
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|t1
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t1
operator|->
name|signal
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithStringArg
argument_list|(
specifier|const
name|QString
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|TestEventTransition
class|class
name|TestEventTransition
super|:
specifier|public
name|QEventTransition
block|{
public|public:
DECL|function|TestEventTransition
name|TestEventTransition
parameter_list|(
name|QState
modifier|*
name|sourceState
init|=
literal|0
parameter_list|)
member_init_list|:
name|QEventTransition
argument_list|(
name|sourceState
argument_list|)
member_init_list|,
name|m_eventSource
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_eventType
argument_list|(
name|QEvent
operator|::
name|None
argument_list|)
block|{}
DECL|function|TestEventTransition
name|TestEventTransition
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|QEvent
operator|::
name|Type
name|type
parameter_list|,
name|QAbstractState
modifier|*
name|target
parameter_list|)
member_init_list|:
name|QEventTransition
argument_list|(
name|object
argument_list|,
name|type
argument_list|)
member_init_list|,
name|m_eventSource
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_eventType
argument_list|(
name|QEvent
operator|::
name|None
argument_list|)
block|{
name|setTargetState
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
DECL|function|eventSourceReceived
name|QObject
modifier|*
name|eventSourceReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_eventSource
return|;
block|}
DECL|function|eventTypeReceived
name|QEvent
operator|::
name|Type
name|eventTypeReceived
parameter_list|()
specifier|const
block|{
return|return
name|m_eventType
return|;
block|}
protected|protected:
DECL|function|eventTest
name|bool
name|eventTest
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QEventTransition
operator|::
name|eventTest
argument_list|(
name|e
argument_list|)
condition|)
return|return
literal|false
return|;
name|QStateMachine
operator|::
name|WrappedEvent
modifier|*
name|we
init|=
cast|static_cast
argument_list|<
name|QStateMachine
operator|::
name|WrappedEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|m_eventSource
operator|=
name|we
operator|->
name|object
argument_list|()
expr_stmt|;
name|m_eventType
operator|=
name|we
operator|->
name|event
argument_list|()
operator|->
name|type
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
private|private:
DECL|member|m_eventSource
name|QObject
modifier|*
name|m_eventSource
decl_stmt|;
DECL|member|m_eventType
name|QEvent
operator|::
name|Type
name|m_eventType
decl_stmt|;
block|}
class|;
end_class
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_function
DECL|function|eventTransitions
name|void
name|tst_QStateMachine
operator|::
name|eventTransitions
parameter_list|()
block|{
name|QPushButton
name|button
decl_stmt|;
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QMouseEventTransition
modifier|*
name|trans
decl_stmt|;
name|trans
operator|=
operator|new
name|QMouseEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventType
argument_list|()
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|button
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setEventType
argument_list|(
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventType
argument_list|()
argument_list|,
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|trans
operator|->
name|setEventType
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QPushButton
name|button2
decl_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|trans
operator|->
name|setEventSource
argument_list|(
operator|&
name|button2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button2
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|2
condition|;
operator|++
name|x
control|)
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|trans
decl_stmt|;
if|if
condition|(
name|x
operator|==
literal|0
condition|)
block|{
name|trans
operator|=
operator|new
name|QEventTransition
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventSource
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventType
argument_list|()
argument_list|,
name|QEvent
operator|::
name|None
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setEventSource
argument_list|(
operator|&
name|button
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setEventType
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|x
operator|==
literal|1
condition|)
block|{
name|trans
operator|=
operator|new
name|QEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventSource
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|button
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventType
argument_list|()
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QMouseEventTransition
modifier|*
name|trans
init|=
operator|new
name|QMouseEventTransition
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventSource
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventType
argument_list|()
argument_list|,
name|QEvent
operator|::
name|None
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|button
argument_list|()
argument_list|,
name|Qt
operator|::
name|NoButton
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setEventSource
argument_list|(
operator|&
name|button
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setEventType
argument_list|(
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setButton
argument_list|(
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QKeyEventTransition
modifier|*
name|trans
init|=
operator|new
name|QKeyEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|KeyPress
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventType
argument_list|()
argument_list|,
name|QEvent
operator|::
name|KeyPress
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|key
argument_list|()
argument_list|,
operator|(
name|int
operator|)
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QKeyEventTransition
modifier|*
name|trans
init|=
operator|new
name|QKeyEventTransition
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventSource
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventType
argument_list|()
argument_list|,
name|QEvent
operator|::
name|None
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|key
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setEventSource
argument_list|(
operator|&
name|button
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setEventType
argument_list|(
name|QEvent
operator|::
name|KeyPress
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setKey
argument_list|(
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|keyPress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Multiple transitions for same (object,event)
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|t0
init|=
operator|new
name|QEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
decl_stmt|;
name|t0
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|t0
argument_list|)
expr_stmt|;
name|QEventTransition
modifier|*
name|t1
init|=
operator|new
name|QEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
decl_stmt|;
name|t1
operator|->
name|setTargetState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|s0
operator|->
name|removeTransition
argument_list|(
name|t0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|removeTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|t0
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// multiple event transitions from same source
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|t0
init|=
operator|new
name|QEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
decl_stmt|;
name|t0
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|t0
argument_list|)
expr_stmt|;
name|QEventTransition
modifier|*
name|t1
init|=
operator|new
name|QEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|MouseButtonRelease
argument_list|)
decl_stmt|;
name|t1
operator|->
name|setTargetState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// custom event
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|trans
init|=
operator|new
name|QEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|trans
operator|->
name|setTargetState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QObject event transitions are not supported for custom types"
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// custom transition
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s1
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|TestEventTransition
modifier|*
name|trans
init|=
operator|new
name|TestEventTransition
argument_list|(
operator|&
name|button
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventSourceReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTypeReceived
argument_list|()
argument_list|,
name|QEvent
operator|::
name|None
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
operator|&
name|button
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventSourceReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|button
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|eventTypeReceived
argument_list|()
argument_list|,
name|QEvent
operator|::
name|MouseButtonPress
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|graphicsSceneEventTransitions
name|void
name|tst_QStateMachine
operator|::
name|graphicsSceneEventTransitions
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsTextItem
modifier|*
name|textItem
init|=
name|scene
operator|.
name|addText
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|t
init|=
operator|new
name|QEventTransition
argument_list|(
name|textItem
argument_list|,
name|QEvent
operator|::
name|GraphicsSceneMouseMove
argument_list|)
decl_stmt|;
name|t
operator|->
name|setTargetState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QGraphicsSceneMouseEvent
name|mouseEvent
argument_list|(
name|QEvent
operator|::
name|GraphicsSceneMouseMove
argument_list|)
decl_stmt|;
name|scene
operator|.
name|sendEvent
argument_list|(
name|textItem
argument_list|,
operator|&
name|mouseEvent
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|historyStates
name|void
name|tst_QStateMachine
operator|::
name|historyStates
parameter_list|()
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|2
condition|;
operator|++
name|x
control|)
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|root
init|=
operator|&
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s00
init|=
operator|new
name|QState
argument_list|(
name|s0
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s01
init|=
operator|new
name|QState
argument_list|(
name|s0
argument_list|)
decl_stmt|;
name|QHistoryState
modifier|*
name|s0h
decl_stmt|;
if|if
condition|(
name|x
operator|==
literal|0
condition|)
block|{
name|s0h
operator|=
operator|new
name|QHistoryState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0h
operator|->
name|historyType
argument_list|()
argument_list|,
name|QHistoryState
operator|::
name|ShallowHistory
argument_list|)
expr_stmt|;
name|s0h
operator|->
name|setHistoryType
argument_list|(
name|QHistoryState
operator|::
name|DeepHistory
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|s0h
operator|=
operator|new
name|QHistoryState
argument_list|(
name|QHistoryState
operator|::
name|DeepHistory
argument_list|,
name|s0
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|s0h
operator|->
name|historyType
argument_list|()
argument_list|,
name|QHistoryState
operator|::
name|DeepHistory
argument_list|)
expr_stmt|;
name|s0h
operator|->
name|setHistoryType
argument_list|(
name|QHistoryState
operator|::
name|ShallowHistory
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0h
operator|->
name|historyType
argument_list|()
argument_list|,
name|QHistoryState
operator|::
name|ShallowHistory
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0h
operator|->
name|defaultState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|s0h
operator|->
name|setDefaultState
argument_list|(
name|s00
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s0h
operator|->
name|defaultState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s00
argument_list|)
expr_stmt|;
name|QString
name|warning
decl_stmt|;
name|warning
operator|.
name|sprintf
argument_list|(
literal|"QHistoryState::setDefaultState: state %p does not belong to this history state's group (%p)"
argument_list|,
name|s0
argument_list|,
name|s0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
name|qPrintable
argument_list|(
name|warning
argument_list|)
argument_list|)
expr_stmt|;
name|s0h
operator|->
name|setDefaultState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|s00
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"a"
argument_list|,
name|s01
argument_list|)
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"b"
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"c"
argument_list|,
name|s0h
argument_list|)
argument_list|)
expr_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
operator|new
name|StringTransition
argument_list|(
literal|"d"
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|root
operator|->
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|s0
operator|->
name|setInitialState
argument_list|(
name|s00
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s00
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s01
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s01
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|StringEvent
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|startAndStop
name|void
name|tst_QStateMachine
operator|::
name|startAndStop
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::start: No initial state set for machine. Refusing to start."
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::start(): already running"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|machine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|machine
operator|.
name|stop
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|targetStateWithNoParent
name|void
name|tst_QStateMachine
operator|::
name|targetStateWithNoParent
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setObjectName
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|QState
name|s2
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|s2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: No common ancestor for targets and source of transition from state 's1'"
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|,
name|QStateMachine
operator|::
name|NoCommonAncestorForTransitionError
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|targetStateDeleted
name|void
name|tst_QStateMachine
operator|::
name|targetStateDeleted
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setObjectName
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QAbstractTransition
modifier|*
name|trans
init|=
name|s1
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
operator|delete
name|s2
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|trans
operator|->
name|targetStates
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultGlobalRestorePolicy
name|void
name|tst_QStateMachine
operator|::
name|defaultGlobalRestorePolicy
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|propertyHolder
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"b"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"a"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"b"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|noInitialStateForInitialState
name|void
name|tst_QStateMachine
operator|::
name|noInitialStateForInitialState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|initialState
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|initialState
operator|->
name|setObjectName
argument_list|(
literal|"initialState"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|initialState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|childState
init|=
operator|new
name|QState
argument_list|(
name|initialState
argument_list|)
decl_stmt|;
operator|(
name|void
operator|)
name|childState
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Unrecoverable error detected in running state machine: "
literal|"Missing initial state in compound state 'initialState'"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|isRunning
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|machine
operator|.
name|error
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QStateMachine
operator|::
name|NoInitialStateError
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|globalRestorePolicySetToDontRestore
name|void
name|tst_QStateMachine
operator|::
name|globalRestorePolicySetToDontRestore
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|DontRestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|propertyHolder
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"b"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"a"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"b"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|globalRestorePolicySetToRestore
name|void
name|tst_QStateMachine
operator|::
name|globalRestorePolicySetToRestore
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|propertyHolder
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"b"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"a"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"b"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"b"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transitionWithParent
name|void
name|tst_QStateMachine
operator|::
name|transitionWithParent
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|EventTransition
modifier|*
name|trans
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetState
argument_list|()
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetStates
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|trans
operator|->
name|targetStates
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|(
name|QAbstractState
operator|*
operator|)
name|s2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|simpleAnimation
name|void
name|tst_QStateMachine
operator|::
name|simpleAnimation
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"fooBar"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"fooBar"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|EventTransition
modifier|*
name|et
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|QPropertyAnimation
modifier|*
name|animation
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"fooBar"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|et
operator|->
name|addAnimation
argument_list|(
name|animation
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|et
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|animation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"fooBar"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SlotCalledCounter
class|class
name|SlotCalledCounter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|SlotCalledCounter
name|SlotCalledCounter
parameter_list|()
member_init_list|:
name|counter
argument_list|(
literal|0
argument_list|)
block|{}
DECL|member|counter
name|int
name|counter
decl_stmt|;
public|public
name|slots
public|:
DECL|function|slot
name|void
name|slot
parameter_list|()
block|{
name|counter
operator|++
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|twoAnimations
name|void
name|tst_QStateMachine
operator|::
name|twoAnimations
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|3.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"bar"
argument_list|,
literal|10.0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|animationFoo
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|QPropertyAnimation
modifier|*
name|animationBar
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"bar"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|animationBar
operator|->
name|setDuration
argument_list|(
literal|900
argument_list|)
expr_stmt|;
name|SlotCalledCounter
name|counter
decl_stmt|;
name|connect
argument_list|(
name|animationFoo
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|animationBar
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|EventTransition
modifier|*
name|et
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|et
operator|->
name|addAnimation
argument_list|(
name|animationFoo
argument_list|)
expr_stmt|;
name|et
operator|->
name|addAnimation
argument_list|(
name|animationBar
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|et
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|10.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|counter
operator|.
name|counter
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|twoAnimatedTransitions
name|void
name|tst_QStateMachine
operator|::
name|twoAnimatedTransitions
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|5.0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|fooAnimation
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|EventTransition
modifier|*
name|trans
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
name|fooAnimation
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|fooAnimation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s4
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s4
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|fooAnimation2
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s4
argument_list|)
decl_stmt|;
name|trans
operator|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s4
argument_list|)
expr_stmt|;
name|s3
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
name|fooAnimation2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s5
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s5
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s4
operator|->
name|addTransition
argument_list|(
name|fooAnimation2
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s5
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|5.0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|playAnimationTwice
name|void
name|tst_QStateMachine
operator|::
name|playAnimationTwice
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|5.0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|fooAnimation
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|EventTransition
modifier|*
name|trans
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
name|fooAnimation
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|fooAnimation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s4
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s4
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|trans
operator|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s4
argument_list|)
expr_stmt|;
name|s3
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
name|fooAnimation
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s5
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s5
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s4
operator|->
name|addTransition
argument_list|(
name|fooAnimation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s5
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|5.0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nestedTargetStateForAnimation
name|void
name|tst_QStateMachine
operator|::
name|nestedTargetStateForAnimation
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|3.0
argument_list|)
expr_stmt|;
name|SlotCalledCounter
name|counter
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2Child
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2Child
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"bar"
argument_list|,
literal|10.0
argument_list|)
expr_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s2Child
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2Child2
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2Child2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"bar"
argument_list|,
literal|11.0
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|at
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2Child2
argument_list|)
decl_stmt|;
name|s2Child
operator|->
name|addTransition
argument_list|(
name|at
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|animation
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"bar"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|animation
operator|->
name|setDuration
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|animation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|at
operator|->
name|addAnimation
argument_list|(
name|animation
argument_list|)
expr_stmt|;
name|at
operator|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|at
argument_list|)
expr_stmt|;
name|animation
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|animation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|at
operator|->
name|addAnimation
argument_list|(
name|animation
argument_list|)
expr_stmt|;
name|animation
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"bar"
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|animation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|at
operator|->
name|addAnimation
argument_list|(
name|animation
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|s2Child
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|10.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|counter
operator|.
name|counter
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertiesAssignedSignalTransitionsReuseAnimationGroup
name|void
name|tst_QStateMachine
operator|::
name|propertiesAssignedSignalTransitionsReuseAnimationGroup
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s3
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s4
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QParallelAnimationGroup
name|animationGroup
decl_stmt|;
name|animationGroup
operator|.
name|addAnimation
argument_list|(
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|animationFinishedSpy
argument_list|(
operator|&
name|animationGroup
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|animationFinishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
operator|->
name|addAnimation
argument_list|(
operator|&
name|animationGroup
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
operator|->
name|addAnimation
argument_list|(
operator|&
name|animationGroup
argument_list|)
expr_stmt|;
name|s3
operator|->
name|addTransition
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|propertiesAssigned
argument_list|()
argument_list|)
argument_list|,
name|s4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|machineFinishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|machineFinishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|machineFinishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|animationFinishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|animatedGlobalRestoreProperty
name|void
name|tst_QStateMachine
operator|::
name|animatedGlobalRestoreProperty
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|SlotCalledCounter
name|counter
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s4
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s4
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|at
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|at
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|pa
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|at
operator|->
name|addAnimation
argument_list|(
name|pa
argument_list|)
expr_stmt|;
name|at
operator|=
name|s2
operator|->
name|addTransition
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|pa
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|at
operator|->
name|addAnimation
argument_list|(
name|pa
argument_list|)
expr_stmt|;
name|at
operator|=
name|s3
operator|->
name|addTransition
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s4
argument_list|)
expr_stmt|;
name|pa
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
name|s4
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|at
operator|->
name|addAnimation
argument_list|(
name|pa
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|counter
operator|.
name|counter
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|specificTargetValueOfAnimation
name|void
name|tst_QStateMachine
operator|::
name|specificTargetValueOfAnimation
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|anim
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|anim
operator|->
name|setEndValue
argument_list|(
literal|10.0
argument_list|)
expr_stmt|;
name|EventTransition
modifier|*
name|trans
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|trans
argument_list|)
expr_stmt|;
name|trans
operator|->
name|addAnimation
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|anim
operator|->
name|endValue
argument_list|()
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|10.0
argument_list|)
expr_stmt|;
operator|delete
name|anim
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addDefaultAnimation
name|void
name|tst_QStateMachine
operator|::
name|addDefaultAnimation
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|()
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|pa
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|pa
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
operator|delete
name|object
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addDefaultAnimationWithUnusedAnimation
name|void
name|tst_QStateMachine
operator|::
name|addDefaultAnimationWithUnusedAnimation
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|SlotCalledCounter
name|counter
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|pa
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|pa
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|pa
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"bar"
argument_list|,
operator|&
name|machine
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|pa
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|pa
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|counter
operator|.
name|counter
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeDefaultAnimation
name|void
name|tst_QStateMachine
operator|::
name|removeDefaultAnimation
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
name|propertyHolder
decl_stmt|;
name|propertyHolder
operator|.
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|anim
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|propertyHolder
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|contains
argument_list|(
name|anim
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|removeDefaultAnimation
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|anim2
init|=
operator|new
name|QPropertyAnimation
argument_list|(
operator|&
name|propertyHolder
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|anim2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|contains
argument_list|(
name|anim
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|contains
argument_list|(
name|anim2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|removeDefaultAnimation
argument_list|(
name|anim
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|contains
argument_list|(
name|anim2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|removeDefaultAnimation
argument_list|(
name|anim2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|defaultAnimations
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|anim
expr_stmt|;
operator|delete
name|anim2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|overrideDefaultAnimationWithSpecific
name|void
name|tst_QStateMachine
operator|::
name|overrideDefaultAnimationWithSpecific
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|SlotCalledCounter
name|counter
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|s3
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|at
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|at
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|defaultAnimation
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|defaultAnimation
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|moreSpecificAnimation
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|object
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
name|moreSpecificAnimation
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|moreSpecificAnimation
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QAbstractAnimation
operator|::
name|State
argument_list|,
name|QAbstractAnimation
operator|::
name|State
argument_list|)
argument_list|)
argument_list|,
operator|&
name|counter
argument_list|,
name|SLOT
argument_list|(
name|slot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|defaultAnimation
argument_list|)
expr_stmt|;
name|at
operator|->
name|addAnimation
argument_list|(
name|moreSpecificAnimation
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|counter
operator|.
name|counter
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// specific animation started and stopped
operator|delete
name|defaultAnimation
expr_stmt|;
operator|delete
name|moreSpecificAnimation
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parallelStateAssignmentsDone
name|void
name|tst_QStateMachine
operator|::
name|parallelStateAssignmentsDone
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QObject
modifier|*
name|propertyHolder
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"zoot"
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|parallelState
init|=
operator|new
name|QState
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|parallelState
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"foo"
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
name|parallelState
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"bar"
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
name|parallelState
argument_list|)
decl_stmt|;
name|s3
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"zoot"
argument_list|,
literal|987
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|parallelState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|123
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|456
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"zoot"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|789
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|321
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|654
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"zoot"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|987
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transitionsFromParallelStateWithNoChildren
name|void
name|tst_QStateMachine
operator|::
name|transitionsFromParallelStateWithNoChildren
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|parallelState
init|=
operator|new
name|QState
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|parallelState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|parallelState
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1
argument_list|,
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|parallelState
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1
argument_list|,
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parallelStateTransition
name|void
name|tst_QStateMachine
operator|::
name|parallelStateTransition
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|parallelState
init|=
operator|new
name|QState
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|parallelState
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|parallelState
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
name|parallelState
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s1InitialChild
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s1InitialChild
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2InitialChild
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s2InitialChild
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1OtherChild
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s1OtherChild
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|parallelState
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1InitialChild
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2InitialChild
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|parallelState
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1OtherChild
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2InitialChild
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nestedRestoreProperties
name|void
name|tst_QStateMachine
operator|::
name|nestedRestoreProperties
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|propertyHolder
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"foo"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s21
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s21
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"bar"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s21
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s22
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s22
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"bar"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|s21
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s22
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s21
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nestedRestoreProperties2
name|void
name|tst_QStateMachine
operator|::
name|nestedRestoreProperties2
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|propertyHolder
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"foo"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|propertyHolder
operator|->
name|setProperty
argument_list|(
literal|"bar"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"foo"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s21
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s21
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"bar"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s21
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s22
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s22
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"foo"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|s22
operator|->
name|assignProperty
argument_list|(
name|propertyHolder
argument_list|,
literal|"bar"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|s21
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s22
argument_list|)
argument_list|)
expr_stmt|;
name|s22
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s21
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s21
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s22
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s21
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"foo"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|propertyHolder
operator|->
name|property
argument_list|(
literal|"bar"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nestedStateMachines
name|void
name|tst_QStateMachine
operator|::
name|nestedStateMachines
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|group
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|group
operator|->
name|setChildMode
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|QStateMachine
modifier|*
name|subMachines
index|[
literal|3
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|QState
modifier|*
name|subGroup
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|QStateMachine
modifier|*
name|subMachine
init|=
operator|new
name|QStateMachine
argument_list|(
name|subGroup
argument_list|)
decl_stmt|;
block|{
name|QState
modifier|*
name|initial
init|=
operator|new
name|QState
argument_list|(
name|subMachine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|done
init|=
operator|new
name|QFinalState
argument_list|(
name|subMachine
argument_list|)
decl_stmt|;
name|initial
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|done
argument_list|)
argument_list|)
expr_stmt|;
name|subMachine
operator|->
name|setInitialState
argument_list|(
name|initial
argument_list|)
expr_stmt|;
block|}
name|QFinalState
modifier|*
name|subMachineDone
init|=
operator|new
name|QFinalState
argument_list|(
name|subGroup
argument_list|)
decl_stmt|;
name|subMachine
operator|->
name|addTransition
argument_list|(
name|subMachine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|subMachineDone
argument_list|)
expr_stmt|;
name|subGroup
operator|->
name|setInitialState
argument_list|(
name|subMachine
argument_list|)
expr_stmt|;
name|subMachines
index|[
name|i
index|]
operator|=
name|subMachine
expr_stmt|;
block|}
name|QFinalState
modifier|*
name|final
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|group
operator|->
name|addTransition
argument_list|(
name|group
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|final
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
operator|+
literal|2
operator|*
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|group
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|subMachines
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
comment|// starts the submachines
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
name|subMachines
index|[
name|i
index|]
operator|->
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|goToState
name|void
name|tst_QStateMachine
operator|::
name|goToState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QStateMachinePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
operator|->
name|goToState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QStateMachinePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
operator|->
name|goToState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QStateMachinePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
operator|->
name|goToState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QStateMachinePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
operator|->
name|goToState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|QStateMachinePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
operator|->
name|goToState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
comment|// go to state in group
name|QState
modifier|*
name|s2_1
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|s2
operator|->
name|setInitialState
argument_list|(
name|s2_1
argument_list|)
expr_stmt|;
name|QStateMachinePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
operator|->
name|goToState
argument_list|(
name|s2_1
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2_1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|goToStateFromSourceWithTransition
name|void
name|tst_QStateMachine
operator|::
name|goToStateFromSourceWithTransition
parameter_list|()
block|{
comment|// QTBUG-21813
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|QSignalTransition
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QStateMachinePrivate
operator|::
name|get
argument_list|(
operator|&
name|machine
argument_list|)
operator|->
name|goToState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|CloneSignalTransition
class|class
name|CloneSignalTransition
super|:
specifier|public
name|QSignalTransition
block|{
public|public:
DECL|function|CloneSignalTransition
name|CloneSignalTransition
parameter_list|(
name|QObject
modifier|*
name|sender
parameter_list|,
specifier|const
name|char
modifier|*
name|signal
parameter_list|,
name|QAbstractState
modifier|*
name|target
parameter_list|)
member_init_list|:
name|QSignalTransition
argument_list|(
name|sender
argument_list|,
name|signal
argument_list|)
block|{
name|setTargetState
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
DECL|function|onTransition
name|void
name|onTransition
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
name|QSignalTransition
operator|::
name|onTransition
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|QStateMachine
operator|::
name|SignalEvent
modifier|*
name|se
init|=
cast|static_cast
argument_list|<
name|QStateMachine
operator|::
name|SignalEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|eventSignalIndex
operator|=
name|se
operator|->
name|signalIndex
argument_list|()
expr_stmt|;
block|}
DECL|member|eventSignalIndex
name|int
name|eventSignalIndex
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|clonedSignals
name|void
name|tst_QStateMachine
operator|::
name|clonedSignals
parameter_list|()
block|{
name|SignalEmitter
name|emitter
decl_stmt|;
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|CloneSignalTransition
modifier|*
name|t1
init|=
operator|new
name|CloneSignalTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithDefaultArg
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithDefaultArg
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t1
operator|->
name|eventSignalIndex
argument_list|,
name|emitter
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signalWithDefaultArg()"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|EventPosterThread
class|class
name|EventPosterThread
super|:
specifier|public
name|QThread
block|{
name|Q_OBJECT
public|public:
DECL|function|EventPosterThread
name|EventPosterThread
parameter_list|(
name|QStateMachine
modifier|*
name|machine
parameter_list|,
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QThread
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_machine
argument_list|(
name|machine
argument_list|)
member_init_list|,
name|m_count
argument_list|(
literal|0
argument_list|)
block|{
name|moveToThread
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|m_machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|postEvent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|run
specifier|virtual
name|void
name|run
parameter_list|()
block|{
name|exec
argument_list|()
expr_stmt|;
block|}
private|private
name|Q_SLOTS
private|:
DECL|function|postEvent
name|void
name|postEvent
parameter_list|()
block|{
name|m_machine
operator|->
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|++
name|m_count
operator|<
literal|1000
condition|)
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|postEvent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|quit
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|m_machine
name|QStateMachine
modifier|*
name|m_machine
decl_stmt|;
DECL|member|m_count
name|int
name|m_count
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|postEventFromOtherThread
name|void
name|tst_QStateMachine
operator|::
name|postEventFromOtherThread
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|EventPosterThread
name|poster
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|StringEventPoster
modifier|*
name|s1
init|=
operator|new
name|StringEventPoster
argument_list|(
literal|"foo"
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|f
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|poster
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|f
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|poster
operator|.
name|start
argument_list|()
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_WIDGETS
end_ifndef
begin_function
DECL|function|eventFilterForApplication
name|void
name|tst_QStateMachine
operator|::
name|eventFilterForApplication
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
block|{
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
block|}
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|transition
init|=
operator|new
name|QEventTransition
argument_list|(
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|QEvent
operator|::
name|ApplicationActivate
argument_list|)
decl_stmt|;
name|transition
operator|->
name|setTargetState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|transition
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|ApplicationActivate
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|eventClassesExported
name|void
name|tst_QStateMachine
operator|::
name|eventClassesExported
parameter_list|()
block|{
comment|// make sure this links
name|QStateMachine
operator|::
name|WrappedEvent
modifier|*
name|wrappedEvent
init|=
operator|new
name|QStateMachine
operator|::
name|WrappedEvent
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|wrappedEvent
argument_list|)
expr_stmt|;
name|QStateMachine
operator|::
name|SignalEvent
modifier|*
name|signalEvent
init|=
operator|new
name|QStateMachine
operator|::
name|SignalEvent
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QList
argument_list|<
name|QVariant
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|signalEvent
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stopInTransitionToFinalState
name|void
name|tst_QStateMachine
operator|::
name|stopInTransitionToFinalState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QAbstractTransition
modifier|*
name|t1
init|=
name|s1
operator|->
name|addTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|t1
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
operator|&
name|machine
argument_list|,
name|SLOT
argument_list|(
name|stop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|s2EnteredSpy
argument_list|(
name|s2
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s2EnteredSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Stopping should take precedence over finished.
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s2EnteredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|StopInEventTestTransition
class|class
name|StopInEventTestTransition
super|:
specifier|public
name|QAbstractTransition
block|{
public|public:
DECL|function|eventTest
name|bool
name|eventTest
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|User
condition|)
name|machine
argument_list|()
operator|->
name|stop
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
DECL|function|onTransition
name|void
name|onTransition
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{ }
block|}
class|;
end_class
begin_function
DECL|function|stopInEventTest_data
name|void
name|tst_QStateMachine
operator|::
name|stopInEventTest_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"eventPriority"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalPriority"
argument_list|)
operator|<<
name|int
argument_list|(
name|QStateMachine
operator|::
name|NormalPriority
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HighPriority"
argument_list|)
operator|<<
name|int
argument_list|(
name|QStateMachine
operator|::
name|HighPriority
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stopInEventTest
name|void
name|tst_QStateMachine
operator|::
name|stopInEventTest
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|eventPriority
argument_list|)
expr_stmt|;
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|StopInEventTestTransition
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|startedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|startedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|startedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|stoppedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|stoppedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|finishedSpy
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|,
name|QStateMachine
operator|::
name|EventPriority
argument_list|(
name|eventPriority
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|stoppedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|IncrementReceiversTest
class|class
name|IncrementReceiversTest
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
signals|signals:
name|void
name|mySignal
parameter_list|()
function_decl|;
public|public:
DECL|function|connectNotify
specifier|virtual
name|void
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|signalList
operator|.
name|append
argument_list|(
name|signal
argument_list|)
expr_stmt|;
block|}
DECL|member|signalList
name|QList
argument_list|<
name|QMetaMethod
argument_list|>
name|signalList
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testIncrementReceivers
name|void
name|tst_QStateMachine
operator|::
name|testIncrementReceivers
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|IncrementReceiversTest
name|testObject
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|testObject
argument_list|,
name|SIGNAL
argument_list|(
name|mySignal
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|testObject
argument_list|,
literal|"mySignal"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testObject
operator|.
name|signalList
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testObject
operator|.
name|signalList
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|IncrementReceiversTest
operator|::
name|mySignal
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initialStateIsEnteredBeforeStartedEmitted
name|void
name|tst_QStateMachine
operator|::
name|initialStateIsEnteredBeforeStartedEmitted
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s2
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
comment|// When started() is emitted, s1 should be the active state, and this
comment|// transition should trigger.
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deletePropertyAssignmentObjectBeforeEntry
name|void
name|tst_QStateMachine
operator|::
name|deletePropertyAssignmentObjectBeforeEntry
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|o1
init|=
operator|new
name|QObject
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|o1
argument_list|,
literal|"objectName"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
operator|delete
name|o1
expr_stmt|;
name|QObject
modifier|*
name|o2
init|=
operator|new
name|QObject
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|o2
argument_list|,
literal|"objectName"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Shouldn't crash
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o2
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|o2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deletePropertyAssignmentObjectBeforeRestore
name|void
name|tst_QStateMachine
operator|::
name|deletePropertyAssignmentObjectBeforeRestore
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|o1
init|=
operator|new
name|QObject
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|o1
argument_list|,
literal|"objectName"
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|o2
init|=
operator|new
name|QObject
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|o2
argument_list|,
literal|"objectName"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|o1
operator|->
name|objectName
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|o2
operator|->
name|objectName
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o1
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|o2
operator|->
name|objectName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|o1
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
comment|// Shouldn't crash
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|o2
operator|->
name|objectName
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|o2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteInitialState
name|void
name|tst_QStateMachine
operator|::
name|deleteInitialState
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
operator|delete
name|s1
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QStateMachine::start: No initial state set for machine. Refusing to start."
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Shouldn't crash
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPropertyAfterRestore
name|void
name|tst_QStateMachine
operator|::
name|setPropertyAfterRestore
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"a"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s3
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"a"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s4
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s3
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s4
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// restored
comment|// Set property outside of state machine; this is the value
comment|// that should be remembered in the next transition
name|object
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// restored
operator|delete
name|object
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transitionWithNoTarget_data
name|void
name|tst_QStateMachine
operator|::
name|transitionWithNoTarget_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"restorePolicy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"DontRestoreProperties"
argument_list|)
operator|<<
name|int
argument_list|(
name|QState
operator|::
name|DontRestoreProperties
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RestoreProperties"
argument_list|)
operator|<<
name|int
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|transitionWithNoTarget
name|void
name|tst_QStateMachine
operator|::
name|transitionWithNoTarget
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|restorePolicy
argument_list|)
expr_stmt|;
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
cast|static_cast
argument_list|<
name|QState
operator|::
name|RestorePolicy
argument_list|>
argument_list|(
name|restorePolicy
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
decl_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|object
argument_list|,
literal|"a"
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|EventTransition
modifier|*
name|t1
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
comment|/*target=*/
literal|0
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s1EnteredSpy
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|s1ExitedSpy
argument_list|(
name|s1
argument_list|,
name|SIGNAL
argument_list|(
name|exited
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|t1TriggeredSpy
argument_list|(
name|t1
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1EnteredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1ExitedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t1TriggeredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|object
operator|->
name|setProperty
argument_list|(
literal|"a"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|t1TriggeredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1EnteredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1ExitedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// the assignProperty should not be re-executed, nor should the old value
comment|// be restored
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|t1TriggeredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1EnteredSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s1ExitedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|property
argument_list|(
literal|"a"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
operator|delete
name|object
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initialStateIsFinal
name|void
name|tst_QStateMachine
operator|::
name|initialStateIsFinal
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QFinalState
modifier|*
name|f
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|QSignalSpy
name|finishedSpy
argument_list|(
operator|&
name|machine
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|finishedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|PropertyObject
class|class
name|PropertyObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_PROPERTY
parameter_list|(
name|int
name|prop
name|READ
name|prop
name|WRITE
name|setProp
parameter_list|)
specifier|public
private|:
DECL|function|PropertyObject
name|PropertyObject
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_propValue
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_propWriteCount
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|prop
name|int
name|prop
parameter_list|()
specifier|const
block|{
return|return
name|m_propValue
return|;
block|}
DECL|function|setProp
name|void
name|setProp
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|m_propValue
operator|=
name|value
expr_stmt|;
operator|++
name|m_propWriteCount
expr_stmt|;
block|}
DECL|function|propWriteCount
name|int
name|propWriteCount
parameter_list|()
specifier|const
block|{
return|return
name|m_propWriteCount
return|;
block|}
private|private:
DECL|member|m_propValue
name|int
name|m_propValue
decl_stmt|;
DECL|member|m_propWriteCount
name|int
name|m_propWriteCount
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|restorePropertiesSimple
name|void
name|tst_QStateMachine
operator|::
name|restorePropertiesSimple
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|PropertyObject
modifier|*
name|po
init|=
operator|new
name|PropertyObject
decl_stmt|;
name|po
operator|->
name|setProp
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s3
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s4
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s4
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|s3
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s4
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s5
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s4
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s5
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s6
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s5
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s6
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// restored
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s5
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// restored
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s6
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
operator|delete
name|po
expr_stmt|;
block|}
end_function
begin_function
DECL|function|restoreProperties2
name|void
name|tst_QStateMachine
operator|::
name|restoreProperties2
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|PropertyObject
modifier|*
name|po
init|=
operator|new
name|PropertyObject
decl_stmt|;
name|po
operator|->
name|setProp
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s11
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s11
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s12
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s11
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s12
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s13
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s13
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|s12
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s13
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s14
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s14
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|s13
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s14
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s15
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s14
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s15
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s16
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s15
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s16
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|s16
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s11
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s12
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s13
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s14
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s15
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// restored s1
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s16
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// restored original
operator|delete
name|po
expr_stmt|;
block|}
end_function
begin_function
DECL|function|restoreProperties3
name|void
name|tst_QStateMachine
operator|::
name|restoreProperties3
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|PropertyObject
modifier|*
name|po
init|=
operator|new
name|PropertyObject
decl_stmt|;
name|po
operator|->
name|setProp
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s11
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s11
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|s1
operator|->
name|setInitialState
argument_list|(
name|s11
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s12
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s11
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s12
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s13
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|s13
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|s12
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s13
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s13
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s11
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// s11
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s12
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// restored s1
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s13
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// restored original
operator|delete
name|po
expr_stmt|;
block|}
end_function
begin_comment
comment|// QTBUG-20362
end_comment
begin_function
DECL|function|restoreProperties4
name|void
name|tst_QStateMachine
operator|::
name|restoreProperties4
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|PropertyObject
modifier|*
name|po1
init|=
operator|new
name|PropertyObject
decl_stmt|;
name|po1
operator|->
name|setProp
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|PropertyObject
modifier|*
name|po2
init|=
operator|new
name|PropertyObject
decl_stmt|;
name|po2
operator|->
name|setProp
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|setChildMode
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s11
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s111
init|=
operator|new
name|QState
argument_list|(
name|s11
argument_list|)
decl_stmt|;
name|s111
operator|->
name|assignProperty
argument_list|(
name|po1
argument_list|,
literal|"prop"
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|s11
operator|->
name|setInitialState
argument_list|(
name|s111
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s112
init|=
operator|new
name|QState
argument_list|(
name|s11
argument_list|)
decl_stmt|;
name|s112
operator|->
name|assignProperty
argument_list|(
name|po1
argument_list|,
literal|"prop"
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|s111
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s112
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s12
init|=
operator|new
name|QState
argument_list|(
name|s1
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s121
init|=
operator|new
name|QState
argument_list|(
name|s12
argument_list|)
decl_stmt|;
name|s121
operator|->
name|assignProperty
argument_list|(
name|po2
argument_list|,
literal|"prop"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|s12
operator|->
name|setInitialState
argument_list|(
name|s121
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s122
init|=
operator|new
name|QState
argument_list|(
name|s12
argument_list|)
decl_stmt|;
name|s122
operator|->
name|assignProperty
argument_list|(
name|po2
argument_list|,
literal|"prop"
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|s121
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
cast|static_cast
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|s122
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s112
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s11
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s111
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s12
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s121
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|prop
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|prop
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s112
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|prop
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
cast|static_cast
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s122
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|prop
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po1
operator|->
name|prop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// restored original
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po2
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// restored original
operator|delete
name|po1
expr_stmt|;
operator|delete
name|po2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|restorePropertiesSelfTransition
name|void
name|tst_QStateMachine
operator|::
name|restorePropertiesSelfTransition
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|PropertyObject
modifier|*
name|po
init|=
operator|new
name|PropertyObject
decl_stmt|;
name|po
operator|->
name|setProp
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|po
argument_list|,
literal|"prop"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
cast|static_cast
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
cast|static_cast
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|propWriteCount
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|po
operator|->
name|prop
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// restored
operator|delete
name|po
expr_stmt|;
block|}
end_function
begin_function
DECL|function|changeStateWhileAnimatingProperty
name|void
name|tst_QStateMachine
operator|::
name|changeStateWhileAnimatingProperty
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|o1
init|=
operator|new
name|QObject
decl_stmt|;
name|o1
operator|->
name|setProperty
argument_list|(
literal|"x"
argument_list|,
literal|10.
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|o2
init|=
operator|new
name|QObject
decl_stmt|;
name|o2
operator|->
name|setProperty
argument_list|(
literal|"y"
argument_list|,
literal|20.
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|group
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|group
operator|->
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|o1
argument_list|,
literal|"x"
argument_list|,
literal|15.
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|a1
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|o1
argument_list|,
literal|"x"
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|a1
operator|->
name|setDuration
argument_list|(
literal|800
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|group
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|o2
argument_list|,
literal|"y"
argument_list|,
literal|25.
argument_list|)
expr_stmt|;
name|QPropertyAnimation
modifier|*
name|a2
init|=
operator|new
name|QPropertyAnimation
argument_list|(
name|o2
argument_list|,
literal|"y"
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|a2
operator|->
name|setDuration
argument_list|(
literal|800
argument_list|)
expr_stmt|;
name|machine
operator|.
name|addDefaultAnimation
argument_list|(
name|a2
argument_list|)
expr_stmt|;
name|group
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
cast|static_cast
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|400
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
cast|static_cast
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
cast|static_cast
argument_list|<
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOREAPPLICATION_EXEC
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|o1
operator|->
name|property
argument_list|(
literal|"x"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|15.
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|o2
operator|->
name|property
argument_list|(
literal|"y"
argument_list|)
operator|.
name|toDouble
argument_list|()
argument_list|,
literal|20.
argument_list|)
expr_stmt|;
operator|delete
name|o1
expr_stmt|;
operator|delete
name|o2
expr_stmt|;
block|}
end_function
begin_class
DECL|class|AssignPropertyTestState
class|class
name|AssignPropertyTestState
super|:
specifier|public
name|QState
block|{
name|Q_OBJECT
public|public:
DECL|function|AssignPropertyTestState
name|AssignPropertyTestState
parameter_list|(
name|QState
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QState
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|onEntryPassed
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|enteredPassed
argument_list|(
literal|false
argument_list|)
block|{
name|QObject
operator|::
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|entered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|onEntered
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|onEntry
specifier|virtual
name|void
name|onEntry
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
name|onEntryPassed
operator|=
name|property
argument_list|(
literal|"wasAssigned"
argument_list|)
operator|.
name|toBool
argument_list|()
expr_stmt|;
block|}
DECL|member|onEntryPassed
name|bool
name|onEntryPassed
decl_stmt|;
DECL|member|enteredPassed
name|bool
name|enteredPassed
decl_stmt|;
private|private
name|Q_SLOTS
private|:
DECL|function|onEntered
name|void
name|onEntered
parameter_list|()
block|{
name|enteredPassed
operator|=
name|property
argument_list|(
literal|"wasAssigned"
argument_list|)
operator|.
name|toBool
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|propertiesAreAssignedBeforeEntryCallbacks_data
name|void
name|tst_QStateMachine
operator|::
name|propertiesAreAssignedBeforeEntryCallbacks_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"restorePolicy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"DontRestoreProperties"
argument_list|)
operator|<<
name|int
argument_list|(
name|QState
operator|::
name|DontRestoreProperties
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"RestoreProperties"
argument_list|)
operator|<<
name|int
argument_list|(
name|QState
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertiesAreAssignedBeforeEntryCallbacks
name|void
name|tst_QStateMachine
operator|::
name|propertiesAreAssignedBeforeEntryCallbacks
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|restorePolicy
argument_list|)
expr_stmt|;
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
cast|static_cast
argument_list|<
name|QState
operator|::
name|RestorePolicy
argument_list|>
argument_list|(
name|restorePolicy
argument_list|)
argument_list|)
expr_stmt|;
name|AssignPropertyTestState
modifier|*
name|s1
init|=
operator|new
name|AssignPropertyTestState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|assignProperty
argument_list|(
name|s1
argument_list|,
literal|"wasAssigned"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|AssignPropertyTestState
modifier|*
name|s2
init|=
operator|new
name|AssignPropertyTestState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|assignProperty
argument_list|(
name|s2
argument_list|,
literal|"wasAssigned"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|s1
operator|->
name|property
argument_list|(
literal|"wasAssigned"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s1
operator|->
name|onEntryPassed
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s1
operator|->
name|enteredPassed
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|s2
operator|->
name|property
argument_list|(
literal|"wasAssigned"
argument_list|)
operator|.
name|toBool
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s2
operator|->
name|onEntryPassed
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|s2
operator|->
name|enteredPassed
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// QTBUG-25958
end_comment
begin_function
DECL|function|multiTargetTransitionInsideParallelStateGroup
name|void
name|tst_QStateMachine
operator|::
name|multiTargetTransitionInsideParallelStateGroup
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|,
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s21
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s211
init|=
operator|new
name|QState
argument_list|(
name|s21
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s212
init|=
operator|new
name|QState
argument_list|(
name|s21
argument_list|)
decl_stmt|;
name|s21
operator|->
name|setInitialState
argument_list|(
name|s212
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s22
init|=
operator|new
name|QState
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s221
init|=
operator|new
name|QState
argument_list|(
name|s22
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|s222
init|=
operator|new
name|QState
argument_list|(
name|s22
argument_list|)
decl_stmt|;
name|s22
operator|->
name|setInitialState
argument_list|(
name|s222
argument_list|)
expr_stmt|;
name|QAbstractTransition
modifier|*
name|t1
init|=
operator|new
name|EventTransition
argument_list|(
name|QEvent
operator|::
name|User
argument_list|,
name|QList
argument_list|<
name|QAbstractState
operator|*
argument_list|>
argument_list|()
operator|<<
name|s211
operator|<<
name|s221
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|machine
operator|.
name|postEvent
argument_list|(
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s21
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s211
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s22
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s221
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|signalTransitionNormalizeSignature
name|void
name|tst_QStateMachine
operator|::
name|signalTransitionNormalizeSignature
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s0
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s0
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|TestSignalTransition
modifier|*
name|t0
init|=
operator|new
name|TestSignalTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|( )
argument_list|)
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|s0
operator|->
name|addTransition
argument_list|(
name|t0
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s0
argument_list|)
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t0
operator|->
name|eventTestSenderReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t0
operator|->
name|eventTestSignalIndexReceived
argument_list|()
argument_list|,
name|emitter
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signalWithNoArg()"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t0
operator|->
name|eventTestArgumentsReceived
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t0
operator|->
name|transitionSenderReceived
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t0
operator|->
name|transitionSignalIndexReceived
argument_list|()
argument_list|,
name|emitter
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signalWithNoArg()"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t0
operator|->
name|transitionArgumentsReceived
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createSignalTransitionWhenRunning
name|void
name|tst_QStateMachine
operator|::
name|createSignalTransitionWhenRunning
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create by addTransition()
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|SignalEmitter
name|emitter
decl_stmt|;
name|QAbstractTransition
modifier|*
name|t1
init|=
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|t1
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s1
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create by constructor that takes sender, signal, source (parent) state
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QSignalTransition
modifier|*
name|t2
init|=
operator|new
name|QSignalTransition
argument_list|(
operator|&
name|emitter
argument_list|,
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|t2
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|t2
operator|->
name|setTargetState
argument_list|(
name|s3
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create by constructor that takes source (parent) state
name|QState
modifier|*
name|s4
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QSignalTransition
modifier|*
name|t3
init|=
operator|new
name|QSignalTransition
argument_list|(
name|s3
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|t3
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|t3
operator|->
name|setSenderObject
argument_list|(
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|t3
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|t3
operator|->
name|setTargetState
argument_list|(
name|s4
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s4
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create by constructor without parent, then set the parent
name|QState
modifier|*
name|s5
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QSignalTransition
modifier|*
name|t4
init|=
operator|new
name|QSignalTransition
argument_list|()
decl_stmt|;
name|t4
operator|->
name|setSenderObject
argument_list|(
operator|&
name|emitter
argument_list|)
expr_stmt|;
name|t4
operator|->
name|setParent
argument_list|(
name|s4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t4
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s4
argument_list|)
expr_stmt|;
name|t4
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|signalWithNoArg
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|t4
operator|->
name|setTargetState
argument_list|(
name|s5
argument_list|)
expr_stmt|;
name|emitter
operator|.
name|emitSignalWithNoArg
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s5
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createEventTransitionWhenRunning
name|void
name|tst_QStateMachine
operator|::
name|createEventTransitionWhenRunning
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create by constructor that takes event source, type, source (parent) state
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QObject
name|object
decl_stmt|;
name|QEventTransition
modifier|*
name|t1
init|=
operator|new
name|QEventTransition
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|Timer
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|t1
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s1
argument_list|)
expr_stmt|;
name|t1
operator|->
name|setTargetState
argument_list|(
name|s2
argument_list|)
expr_stmt|;
name|object
operator|.
name|startTimer
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// Will cause QEvent::Timer to fire every 10ms
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s2
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create by constructor that takes source (parent) state
name|QState
modifier|*
name|s3
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|t2
init|=
operator|new
name|QEventTransition
argument_list|(
name|s2
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|t2
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|t2
operator|->
name|setEventSource
argument_list|(
operator|&
name|object
argument_list|)
expr_stmt|;
name|t2
operator|->
name|setEventType
argument_list|(
name|QEvent
operator|::
name|Timer
argument_list|)
expr_stmt|;
name|t2
operator|->
name|setTargetState
argument_list|(
name|s3
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create by constructor without parent, then set the parent
name|QState
modifier|*
name|s4
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|QEventTransition
modifier|*
name|t3
init|=
operator|new
name|QEventTransition
argument_list|()
decl_stmt|;
name|t3
operator|->
name|setEventSource
argument_list|(
operator|&
name|object
argument_list|)
expr_stmt|;
name|t3
operator|->
name|setParent
argument_list|(
name|s3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t3
operator|->
name|sourceState
argument_list|()
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|t3
operator|->
name|setEventType
argument_list|(
name|QEvent
operator|::
name|Timer
argument_list|)
expr_stmt|;
name|t3
operator|->
name|setTargetState
argument_list|(
name|s4
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s4
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SignalEmitterThread
class|class
name|SignalEmitterThread
super|:
specifier|public
name|QThread
block|{
name|Q_OBJECT
public|public:
DECL|function|SignalEmitterThread
name|SignalEmitterThread
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QThread
argument_list|(
name|parent
argument_list|)
block|{
name|moveToThread
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
name|Q_SIGNALS
label|:
name|void
name|signal1
parameter_list|()
function_decl|;
name|void
name|signal2
parameter_list|()
function_decl|;
public|public
name|Q_SLOTS
public|:
DECL|function|emitSignals
name|void
name|emitSignals
parameter_list|()
block|{
emit|emit
name|signal1
argument_list|()
emit|;
emit|emit
name|signal2
argument_list|()
emit|;
block|}
block|}
class|;
end_class
begin_comment
comment|// QTBUG-19789
end_comment
begin_function
DECL|function|signalTransitionSenderInDifferentThread
name|void
name|tst_QStateMachine
operator|::
name|signalTransitionSenderInDifferentThread
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|SignalEmitterThread
name|thread
decl_stmt|;
name|QState
modifier|*
name|s2
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
operator|&
name|thread
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|s2
argument_list|)
expr_stmt|;
name|QFinalState
modifier|*
name|s3
init|=
operator|new
name|QFinalState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|s2
operator|->
name|addTransition
argument_list|(
operator|&
name|thread
argument_list|,
name|SIGNAL
argument_list|(
name|signal2
argument_list|()
argument_list|)
argument_list|,
name|s3
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|thread
operator|.
name|isRunning
argument_list|()
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|thread
argument_list|,
literal|"emitSignals"
argument_list|)
expr_stmt|;
comment|// thread emits both signal1() and signal2(), so we should end in s3
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Run the machine again; transitions should still be registered
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|thread
argument_list|,
literal|"emitSignals"
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s3
argument_list|)
argument_list|)
expr_stmt|;
name|thread
operator|.
name|quit
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SignalTransitionMutatorThread
class|class
name|SignalTransitionMutatorThread
super|:
specifier|public
name|QThread
block|{
public|public:
DECL|function|SignalTransitionMutatorThread
name|SignalTransitionMutatorThread
parameter_list|(
name|QSignalTransition
modifier|*
name|transition
parameter_list|)
member_init_list|:
name|m_transition
argument_list|(
name|transition
argument_list|)
block|{}
DECL|function|run
name|void
name|run
parameter_list|()
block|{
comment|// Cause repeated registration and unregistration
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50000
condition|;
operator|++
name|i
control|)
block|{
name|m_transition
operator|->
name|setSenderObject
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|m_transition
operator|->
name|setSenderObject
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
private|private:
DECL|member|m_transition
name|QSignalTransition
modifier|*
name|m_transition
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Should not crash:
end_comment
begin_function
DECL|function|signalTransitionRegistrationThreadSafety
name|void
name|tst_QStateMachine
operator|::
name|signalTransitionRegistrationThreadSafety
parameter_list|()
block|{
name|QStateMachine
name|machine
decl_stmt|;
name|QState
modifier|*
name|s1
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|s1
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|machine
operator|.
name|configuration
argument_list|()
operator|.
name|contains
argument_list|(
name|s1
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalTransition
modifier|*
name|t1
init|=
operator|new
name|QSignalTransition
argument_list|()
decl_stmt|;
name|t1
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|objectNameChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|QSignalTransition
modifier|*
name|t2
init|=
operator|new
name|QSignalTransition
argument_list|()
decl_stmt|;
name|t2
operator|->
name|setSignal
argument_list|(
name|SIGNAL
argument_list|(
name|objectNameChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|s1
operator|->
name|addTransition
argument_list|(
name|t2
argument_list|)
expr_stmt|;
name|SignalTransitionMutatorThread
name|thread
argument_list|(
name|t1
argument_list|)
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|thread
operator|.
name|isRunning
argument_list|()
argument_list|)
expr_stmt|;
comment|// Cause repeated registration and unregistration
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50000
condition|;
operator|++
name|i
control|)
block|{
name|t2
operator|->
name|setSenderObject
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|t2
operator|->
name|setSenderObject
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|thread
operator|.
name|quit
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|childModeConstructor
name|void
name|tst_QStateMachine
operator|::
name|childModeConstructor
parameter_list|()
block|{
block|{
name|QStateMachine
name|machine
argument_list|(
name|QState
operator|::
name|ExclusiveStates
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ExclusiveStates
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|parent
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|parentState
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|parent
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|parentState
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
argument_list|(
name|QState
operator|::
name|ExclusiveStates
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ExclusiveStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|parentState
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|machine
operator|.
name|parentState
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
name|QState
name|state
decl_stmt|;
block|{
name|QStateMachine
name|machine
argument_list|(
name|QState
operator|::
name|ExclusiveStates
argument_list|,
operator|&
name|state
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ExclusiveStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|state
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|parentState
argument_list|()
argument_list|,
operator|&
name|state
argument_list|)
expr_stmt|;
block|}
block|{
name|QStateMachine
name|machine
argument_list|(
name|QState
operator|::
name|ParallelStates
argument_list|,
operator|&
name|state
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|childMode
argument_list|()
argument_list|,
name|QState
operator|::
name|ParallelStates
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|state
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|machine
operator|.
name|parentState
argument_list|()
argument_list|,
operator|&
name|state
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QStateMachine
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qstatemachine.moc"
end_include
end_unit
