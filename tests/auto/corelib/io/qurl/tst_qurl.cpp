begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Copyright (C) 2012 Intel Corporation. ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_define
DECL|macro|QT_DEPRECATED
define|#
directive|define
name|QT_DEPRECATED
end_define
begin_define
DECL|macro|QT_DISABLE_DEPRECATED_BEFORE
define|#
directive|define
name|QT_DISABLE_DEPRECATED_BEFORE
value|0
end_define
begin_include
include|#
directive|include
file|<qurl.h>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/QDebug>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qfileinfo.h>
end_include
begin_include
include|#
directive|include
file|<qtextcodec.h>
end_include
begin_include
include|#
directive|include
file|<qmap.h>
end_include
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QUrl::FormattingOptions
argument_list|)
end_macro
begin_class
DECL|class|tst_QUrl
class|class
name|tst_QUrl
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|effectiveTLDs_data
parameter_list|()
function_decl|;
name|void
name|effectiveTLDs
parameter_list|()
function_decl|;
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|constructing
parameter_list|()
function_decl|;
name|void
name|hashInPath
parameter_list|()
function_decl|;
name|void
name|unc
parameter_list|()
function_decl|;
name|void
name|assignment
parameter_list|()
function_decl|;
name|void
name|comparison
parameter_list|()
function_decl|;
name|void
name|comparison2_data
parameter_list|()
function_decl|;
name|void
name|comparison2
parameter_list|()
function_decl|;
name|void
name|copying
parameter_list|()
function_decl|;
name|void
name|setUrl
parameter_list|()
function_decl|;
name|void
name|i18n_data
parameter_list|()
function_decl|;
name|void
name|i18n
parameter_list|()
function_decl|;
name|void
name|resolving_data
parameter_list|()
function_decl|;
name|void
name|resolving
parameter_list|()
function_decl|;
name|void
name|toString_data
parameter_list|()
function_decl|;
name|void
name|toString
parameter_list|()
function_decl|;
name|void
name|toString_constructed_data
parameter_list|()
function_decl|;
name|void
name|toString_constructed
parameter_list|()
function_decl|;
name|void
name|toAndFromStringList_data
parameter_list|()
function_decl|;
name|void
name|toAndFromStringList
parameter_list|()
function_decl|;
name|void
name|isParentOf_data
parameter_list|()
function_decl|;
name|void
name|isParentOf
parameter_list|()
function_decl|;
name|void
name|toLocalFile_data
parameter_list|()
function_decl|;
name|void
name|toLocalFile
parameter_list|()
function_decl|;
name|void
name|fromLocalFile_data
parameter_list|()
function_decl|;
name|void
name|fromLocalFile
parameter_list|()
function_decl|;
name|void
name|macTypes
parameter_list|()
function_decl|;
name|void
name|relative
parameter_list|()
function_decl|;
name|void
name|compat_legacy
parameter_list|()
function_decl|;
name|void
name|compat_constructor_01_data
parameter_list|()
function_decl|;
name|void
name|compat_constructor_01
parameter_list|()
function_decl|;
name|void
name|compat_constructor_02_data
parameter_list|()
function_decl|;
name|void
name|compat_constructor_02
parameter_list|()
function_decl|;
name|void
name|compat_constructor_03_data
parameter_list|()
function_decl|;
name|void
name|compat_constructor_03
parameter_list|()
function_decl|;
name|void
name|compat_isValid_01_data
parameter_list|()
function_decl|;
name|void
name|compat_isValid_01
parameter_list|()
function_decl|;
name|void
name|compat_isValid_02_data
parameter_list|()
function_decl|;
name|void
name|compat_isValid_02
parameter_list|()
function_decl|;
name|void
name|compat_path_data
parameter_list|()
function_decl|;
name|void
name|compat_path
parameter_list|()
function_decl|;
name|void
name|compat_fileName_data
parameter_list|()
function_decl|;
name|void
name|compat_fileName
parameter_list|()
function_decl|;
name|void
name|compat_decode_data
parameter_list|()
function_decl|;
name|void
name|compat_decode
parameter_list|()
function_decl|;
name|void
name|compat_encode_data
parameter_list|()
function_decl|;
name|void
name|compat_encode
parameter_list|()
function_decl|;
name|void
name|percentEncoding_data
parameter_list|()
function_decl|;
name|void
name|percentEncoding
parameter_list|()
function_decl|;
name|void
name|swap
parameter_list|()
function_decl|;
name|void
name|symmetry
parameter_list|()
function_decl|;
name|void
name|ipvfuture_data
parameter_list|()
function_decl|;
name|void
name|ipvfuture
parameter_list|()
function_decl|;
name|void
name|ipv6_data
parameter_list|()
function_decl|;
name|void
name|ipv6
parameter_list|()
function_decl|;
name|void
name|ipv6_2_data
parameter_list|()
function_decl|;
name|void
name|ipv6_2
parameter_list|()
function_decl|;
name|void
name|moreIpv6
parameter_list|()
function_decl|;
name|void
name|toPercentEncoding_data
parameter_list|()
function_decl|;
name|void
name|toPercentEncoding
parameter_list|()
function_decl|;
name|void
name|isRelative_data
parameter_list|()
function_decl|;
name|void
name|isRelative
parameter_list|()
function_decl|;
name|void
name|hasQuery_data
parameter_list|()
function_decl|;
name|void
name|hasQuery
parameter_list|()
function_decl|;
name|void
name|nameprep
parameter_list|()
function_decl|;
name|void
name|isValid
parameter_list|()
function_decl|;
name|void
name|schemeValidator_data
parameter_list|()
function_decl|;
name|void
name|schemeValidator
parameter_list|()
function_decl|;
name|void
name|invalidSchemeValidator
parameter_list|()
function_decl|;
name|void
name|strictParser_data
parameter_list|()
function_decl|;
name|void
name|strictParser
parameter_list|()
function_decl|;
name|void
name|tolerantParser
parameter_list|()
function_decl|;
name|void
name|correctEncodedMistakes_data
parameter_list|()
function_decl|;
name|void
name|correctEncodedMistakes
parameter_list|()
function_decl|;
name|void
name|correctDecodedMistakes_data
parameter_list|()
function_decl|;
name|void
name|correctDecodedMistakes
parameter_list|()
function_decl|;
name|void
name|tldRestrictions_data
parameter_list|()
function_decl|;
name|void
name|tldRestrictions
parameter_list|()
function_decl|;
name|void
name|emptyQueryOrFragment
parameter_list|()
function_decl|;
name|void
name|hasFragment_data
parameter_list|()
function_decl|;
name|void
name|hasFragment
parameter_list|()
function_decl|;
name|void
name|setEncodedFragment_data
parameter_list|()
function_decl|;
name|void
name|setEncodedFragment
parameter_list|()
function_decl|;
name|void
name|fromEncoded
parameter_list|()
function_decl|;
name|void
name|stripTrailingSlash_data
parameter_list|()
function_decl|;
name|void
name|stripTrailingSlash
parameter_list|()
function_decl|;
name|void
name|hosts_data
parameter_list|()
function_decl|;
name|void
name|hosts
parameter_list|()
function_decl|;
name|void
name|hostFlags_data
parameter_list|()
function_decl|;
name|void
name|hostFlags
parameter_list|()
function_decl|;
name|void
name|setPort
parameter_list|()
function_decl|;
name|void
name|toEncoded_data
parameter_list|()
function_decl|;
name|void
name|toEncoded
parameter_list|()
function_decl|;
name|void
name|setAuthority_data
parameter_list|()
function_decl|;
name|void
name|setAuthority
parameter_list|()
function_decl|;
name|void
name|setEmptyAuthority_data
parameter_list|()
function_decl|;
name|void
name|setEmptyAuthority
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|void
name|resolvedWithAbsoluteSchemes
parameter_list|()
specifier|const
function_decl|;
name|void
name|resolvedWithAbsoluteSchemes_data
parameter_list|()
specifier|const
function_decl|;
name|void
name|binaryData_data
parameter_list|()
function_decl|;
name|void
name|binaryData
parameter_list|()
function_decl|;
name|void
name|fromUserInput_data
parameter_list|()
function_decl|;
name|void
name|fromUserInput
parameter_list|()
function_decl|;
name|void
name|fileName_data
parameter_list|()
function_decl|;
name|void
name|fileName
parameter_list|()
function_decl|;
name|void
name|isEmptyForEncodedUrl
parameter_list|()
function_decl|;
name|void
name|toEncodedNotUsingUninitializedPath
parameter_list|()
function_decl|;
name|void
name|emptyAuthorityRemovesExistingAuthority_data
parameter_list|()
function_decl|;
name|void
name|emptyAuthorityRemovesExistingAuthority
parameter_list|()
function_decl|;
name|void
name|acceptEmptyAuthoritySegments
parameter_list|()
function_decl|;
name|void
name|lowercasesScheme
parameter_list|()
function_decl|;
name|void
name|componentEncodings_data
parameter_list|()
function_decl|;
name|void
name|componentEncodings
parameter_list|()
function_decl|;
name|void
name|setComponents_data
parameter_list|()
function_decl|;
name|void
name|setComponents
parameter_list|()
function_decl|;
name|void
name|streaming_data
parameter_list|()
function_decl|;
name|void
name|streaming
parameter_list|()
function_decl|;
name|void
name|detach
parameter_list|()
function_decl|;
name|void
name|testThreading
parameter_list|()
function_decl|;
private|private:
name|void
name|testThreadingHelper
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QUrl
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QUrl
name|obj1
decl_stmt|;
comment|// int QUrl::port()
comment|// void QUrl::setPort(int)
name|obj1
operator|.
name|setPort
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setPort
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|-
literal|1
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
comment|// Out of range, -1
name|obj1
operator|.
name|setPort
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|-
literal|1
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
comment|// Out of range, -1
name|obj1
operator|.
name|setPort
argument_list|(
literal|1234
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1234
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
comment|// static QStringList QUrl::idnWhitelist()
comment|// static void QUrl::setIdnWhitelist(QStringList)
name|QStringList
name|original
init|=
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
decl_stmt|;
comment|// save for later
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|QStringList
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|QStringList
argument_list|()
argument_list|)
expr_stmt|;
name|QStringList
name|norway
decl_stmt|;
name|norway
operator|<<
literal|"no"
expr_stmt|;
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|norway
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|norway
argument_list|)
expr_stmt|;
name|QStringList
name|modified
init|=
name|original
decl_stmt|;
name|modified
operator|<<
literal|"foo"
expr_stmt|;
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|modified
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|modified
argument_list|)
expr_stmt|;
comment|// reset to the original
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|original
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|original
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructing
name|void
name|tst_QUrl
operator|::
name|constructing
parameter_list|()
block|{
name|QUrl
name|url
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|==
name|url
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|url
operator|<
name|url
operator|)
argument_list|)
expr_stmt|;
name|QUrl
name|justHost
argument_list|(
literal|"qt-project.org"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|justHost
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|justHost
operator|.
name|host
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|justHost
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"qt-project.org"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|hostWithSlashes
argument_list|(
literal|"//qt-project.org"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|hostWithSlashes
operator|.
name|path
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hostWithSlashes
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"qt-project.org"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hashInPath
name|void
name|tst_QUrl
operator|::
name|hashInPath
parameter_list|()
block|{
name|QUrl
name|withHashInPath
decl_stmt|;
name|withHashInPath
operator|.
name|setPath
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|withHashInPath
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|withHashInPath
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"hi%23mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|withHashInPath
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"hi%23mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|withHashInPath
operator|.
name|toDisplayString
argument_list|(
name|QUrl
operator|::
name|PreferLocalFile
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"hi%23mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|fromHashInPath
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|withHashInPath
operator|.
name|toEncoded
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|withHashInPath
operator|==
name|fromHashInPath
argument_list|)
expr_stmt|;
specifier|const
name|QUrl
name|localWithHash
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"/hi#mum.txt"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|localWithHash
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|localWithHash
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"file:///hi%23mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|localWithHash
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"file:///hi%23mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|localWithHash
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|localWithHash
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|PreferLocalFile
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"/hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|localWithHash
operator|.
name|toDisplayString
argument_list|(
name|QUrl
operator|::
name|PreferLocalFile
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"/hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unc
name|void
name|tst_QUrl
operator|::
name|unc
parameter_list|()
block|{
name|QUrl
name|buildUNC
decl_stmt|;
name|buildUNC
operator|.
name|setScheme
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file"
argument_list|)
argument_list|)
expr_stmt|;
name|buildUNC
operator|.
name|setHost
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"somehost"
argument_list|)
argument_list|)
expr_stmt|;
name|buildUNC
operator|.
name|setPath
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"somepath"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buildUNC
operator|.
name|toLocalFile
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somepath"
argument_list|)
argument_list|)
expr_stmt|;
name|buildUNC
operator|.
name|toEncoded
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buildUNC
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|assignment
name|void
name|tst_QUrl
operator|::
name|assignment
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt-project.org/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|copy
decl_stmt|;
name|copy
operator|=
name|url
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|==
name|copy
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comparison
name|void
name|tst_QUrl
operator|::
name|comparison
parameter_list|()
block|{
name|QUrl
name|url1
argument_list|(
literal|"http://qt-project.org/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"http://qt-project.org/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url2
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url1
operator|==
name|url2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|url1
operator|<
name|url2
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|url2
operator|<
name|url1
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url1
operator|.
name|matches
argument_list|(
name|url2
argument_list|,
name|QUrl
operator|::
name|None
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url1
operator|.
name|matches
argument_list|(
name|url2
argument_list|,
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
argument_list|)
expr_stmt|;
comment|// 6.2.2 Syntax-based Normalization
name|QUrl
name|url3
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"example://a/b/c/%7Bfoo%7D"
argument_list|)
decl_stmt|;
name|QUrl
name|url4
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"eXAMPLE://a/./b/../b/%63/%7bfoo%7d"
argument_list|)
decl_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Normalization not implemented, will probably not be implemented like this"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url3
argument_list|,
name|url4
argument_list|)
expr_stmt|;
name|QUrl
name|url3bis
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"example://a/b/c/%7Bfoo%7D/"
argument_list|)
decl_stmt|;
name|QUrl
name|url3bisNoSlash
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"example://a/b/c/%7Bfoo%7D"
argument_list|)
decl_stmt|;
name|QUrl
name|url4bis
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"example://a/.//b/../b/c//%7Bfoo%7D/"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url4bis
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|NormalizePathSegments
argument_list|)
argument_list|,
name|url3bis
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url4bis
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|NormalizePathSegments
operator||
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
argument_list|,
name|url3bisNoSlash
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url3bis
operator|.
name|matches
argument_list|(
name|url4bis
argument_list|,
name|QUrl
operator|::
name|NormalizePathSegments
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url3bisNoSlash
operator|.
name|matches
argument_list|(
name|url4bis
argument_list|,
name|QUrl
operator|::
name|NormalizePathSegments
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url3bisNoSlash
operator|.
name|matches
argument_list|(
name|url4bis
argument_list|,
name|QUrl
operator|::
name|NormalizePathSegments
operator||
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url4EncodedDots
init|=
name|QUrl
argument_list|(
literal|"example://a/.//b/%2E%2E%2F/b/c/"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url4EncodedDots
operator|.
name|path
argument_list|(
name|QUrl
operator|::
name|PrettyDecoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"/.//b/..%2F/b/c/"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url4EncodedDots
operator|.
name|path
argument_list|(
name|QUrl
operator|::
name|FullyDecoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"/.//b/..//b/c/"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|url4EncodedDots
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"example://a/.//b/..%2F/b/c/"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url4EncodedDots
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"example://a/.//b/..%2F/b/c/"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url4EncodedDots
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|NormalizePathSegments
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"example://a/b/..%2F/b/c/"
argument_list|)
argument_list|)
expr_stmt|;
comment|// 6.2.2.1 Make sure hexdecimal characters in percent encoding are
comment|// treated case-insensitively
name|QUrl
name|url5
decl_stmt|;
name|url5
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=%2a"
argument_list|)
expr_stmt|;
name|QUrl
name|url6
decl_stmt|;
name|url6
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=%2A"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url5
operator|==
name|url6
argument_list|)
expr_stmt|;
name|QUrl
name|url7
decl_stmt|;
name|url7
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=C"
argument_list|)
expr_stmt|;
name|QUrl
name|url8
decl_stmt|;
name|url8
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=c"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url7
operator|!=
name|url8
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url7
operator|<
name|url8
argument_list|)
expr_stmt|;
comment|// Trailing slash difference
name|QUrl
name|url9
argument_list|(
literal|"http://qt-project.org/path/"
argument_list|)
decl_stmt|;
name|QUrl
name|url9NoSlash
argument_list|(
literal|"http://qt-project.org/path"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|url9
operator|==
name|url9NoSlash
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url9
operator|.
name|matches
argument_list|(
name|url9NoSlash
argument_list|,
name|QUrl
operator|::
name|None
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url9
operator|.
name|matches
argument_list|(
name|url9NoSlash
argument_list|,
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
argument_list|)
expr_stmt|;
comment|// RemoveFilename
name|QUrl
name|url10
argument_list|(
literal|"http://qt-project.org/file"
argument_list|)
decl_stmt|;
name|QUrl
name|url10bis
argument_list|(
literal|"http://qt-project.org/otherfile"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|url10
operator|==
name|url10bis
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url10
operator|.
name|matches
argument_list|(
name|url10bis
argument_list|,
name|QUrl
operator|::
name|None
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url10
operator|.
name|matches
argument_list|(
name|url10bis
argument_list|,
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url10
operator|.
name|matches
argument_list|(
name|url10bis
argument_list|,
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
argument_list|)
expr_stmt|;
comment|// RemoveAuthority
name|QUrl
name|authUrl1
argument_list|(
literal|"x://host/a/b"
argument_list|)
decl_stmt|;
name|QUrl
name|authUrl2
argument_list|(
literal|"x://host/a/"
argument_list|)
decl_stmt|;
name|QUrl
name|authUrl3
argument_list|(
literal|"x:/a/b"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|authUrl1
operator|.
name|matches
argument_list|(
name|authUrl2
argument_list|,
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|authUrl1
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
argument_list|,
name|authUrl3
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|authUrl1
operator|.
name|matches
argument_list|(
name|authUrl3
argument_list|,
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|authUrl2
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
argument_list|,
name|authUrl3
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|authUrl2
operator|.
name|matches
argument_list|(
name|authUrl3
argument_list|,
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|authUrl3
operator|.
name|matches
argument_list|(
name|authUrl2
argument_list|,
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|hostUrl1
argument_list|(
literal|"file:/foo"
argument_list|)
decl_stmt|;
name|QUrl
name|hostUrl2
argument_list|(
literal|"file:///foo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|hostUrl1
operator|==
name|hostUrl2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|hostUrl1
operator|.
name|matches
argument_list|(
name|hostUrl2
argument_list|,
name|QUrl
operator|::
name|None
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|hostUrl1
operator|.
name|matches
argument_list|(
name|hostUrl2
argument_list|,
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
argument_list|)
expr_stmt|;
comment|// RemovePassword
name|QUrl
name|passUrl1
argument_list|(
literal|"http://user:pass@host/"
argument_list|)
decl_stmt|;
name|QUrl
name|passUrl2
argument_list|(
literal|"http://user:PASS@host/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|passUrl1
operator|==
name|passUrl2
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|passUrl1
operator|!=
name|passUrl2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|passUrl1
operator|.
name|matches
argument_list|(
name|passUrl2
argument_list|,
name|QUrl
operator|::
name|None
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|passUrl1
operator|.
name|matches
argument_list|(
name|passUrl2
argument_list|,
name|QUrl
operator|::
name|RemovePassword
argument_list|)
argument_list|)
expr_stmt|;
comment|// RemovePassword, null vs empty
name|QUrl
name|emptyPassUrl1
argument_list|(
literal|"http://user:@host/"
argument_list|)
decl_stmt|;
name|QUrl
name|emptyPassUrl2
argument_list|(
literal|"http://user@host/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|emptyPassUrl1
operator|==
name|emptyPassUrl2
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|emptyPassUrl1
operator|!=
name|emptyPassUrl2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|emptyPassUrl1
operator|.
name|matches
argument_list|(
name|emptyPassUrl2
argument_list|,
name|QUrl
operator|::
name|None
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|emptyPassUrl1
operator|.
name|matches
argument_list|(
name|emptyPassUrl2
argument_list|,
name|QUrl
operator|::
name|RemovePassword
argument_list|)
argument_list|)
expr_stmt|;
comment|// RemoveQuery, RemoveFragment
name|QUrl
name|queryFragUrl1
argument_list|(
literal|"http://host/file?query#fragment"
argument_list|)
decl_stmt|;
name|QUrl
name|queryFragUrl2
argument_list|(
literal|"http://host/file?q2#f2"
argument_list|)
decl_stmt|;
name|QUrl
name|queryFragUrl3
argument_list|(
literal|"http://host/file"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|queryFragUrl1
operator|==
name|queryFragUrl2
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|queryFragUrl1
operator|!=
name|queryFragUrl2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|queryFragUrl1
operator|.
name|matches
argument_list|(
name|queryFragUrl2
argument_list|,
name|QUrl
operator|::
name|None
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|queryFragUrl1
operator|.
name|matches
argument_list|(
name|queryFragUrl2
argument_list|,
name|QUrl
operator|::
name|RemoveQuery
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|queryFragUrl1
operator|.
name|matches
argument_list|(
name|queryFragUrl2
argument_list|,
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|queryFragUrl1
operator|.
name|matches
argument_list|(
name|queryFragUrl2
argument_list|,
name|QUrl
operator|::
name|RemoveQuery
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|queryFragUrl1
operator|.
name|matches
argument_list|(
name|queryFragUrl3
argument_list|,
name|QUrl
operator|::
name|RemoveQuery
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|queryFragUrl3
operator|.
name|matches
argument_list|(
name|queryFragUrl1
argument_list|,
name|QUrl
operator|::
name|RemoveQuery
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comparison2_data
name|void
name|tst_QUrl
operator|::
name|comparison2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"url1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"url2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"ordering"
argument_list|)
expr_stmt|;
comment|// like strcmp
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null-null"
argument_list|)
operator|<<
name|QUrl
argument_list|()
operator|<<
name|QUrl
argument_list|()
operator|<<
literal|0
expr_stmt|;
name|QUrl
name|empty
decl_stmt|;
name|empty
operator|.
name|setPath
argument_list|(
literal|"/hello"
argument_list|)
expr_stmt|;
comment|// ensure it has detached
name|empty
operator|.
name|setPath
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|()
operator|<<
name|empty
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scheme-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x:"
argument_list|)
operator|<<
name|QUrl
argument_list|()
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"samescheme"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x:"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x:"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no-fragment-empty-fragment"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://kde.org/dir/"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://kde.org/dir/#"
argument_list|)
operator|<<
operator|-
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no-query-empty-query"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://kde.org/dir/"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://kde.org/dir/?"
argument_list|)
operator|<<
operator|-
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"simple-file-url"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"file:///home/dfaure/file"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"file:///home/dfaure/file"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fromLocalFile-vs-ctor"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"/home/dfaure/file"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"file:///home/dfaure/file"
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// the following three are by choice
comment|// the order could be the opposite and it would still be correct
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scheme-path"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x:"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"/tmp"
argument_list|)
operator|<<
operator|+
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment-path"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"#foo"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"/tmp"
argument_list|)
operator|<<
operator|-
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment-scheme"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"#foo"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x:"
argument_list|)
operator|<<
operator|-
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"noport-zeroport"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com:0"
argument_list|)
operator|<<
operator|-
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comparison2
name|void
name|tst_QUrl
operator|::
name|comparison2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|url1
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|url2
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|ordering
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url1
operator|.
name|toString
argument_list|()
operator|==
name|url2
operator|.
name|toString
argument_list|()
argument_list|,
name|ordering
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url1
operator|==
name|url2
argument_list|,
name|ordering
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url1
operator|!=
name|url2
argument_list|,
name|ordering
operator|!=
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|ordering
operator|==
literal|0
condition|)
name|QCOMPARE
argument_list|(
name|qHash
argument_list|(
name|url1
argument_list|)
argument_list|,
name|qHash
argument_list|(
name|url2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url1
operator|<
name|url2
argument_list|,
name|ordering
operator|<
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|!
operator|(
name|url1
operator|<
name|url2
operator|)
argument_list|,
name|ordering
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
argument_list|<
name|url1
argument_list|,
name|ordering
argument_list|>
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|!
operator|(
name|url2
operator|<
name|url1
operator|)
argument_list|,
name|ordering
operator|<=
literal|0
argument_list|)
expr_stmt|;
comment|// redundant checks (the above should catch these)
name|QCOMPARE
argument_list|(
name|url1
operator|<
name|url2
operator|||
name|url2
operator|<
name|url1
argument_list|,
name|ordering
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|url1
operator|<
name|url2
operator|&&
name|url2
operator|<
name|url1
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url1
operator|<
name|url2
operator|||
name|url1
operator|==
name|url2
operator|||
name|url2
operator|<
name|url1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|copying
name|void
name|tst_QUrl
operator|::
name|copying
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt-project.org/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|copy
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|==
name|copy
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setUrl
name|void
name|tst_QUrl
operator|::
name|setUrl
parameter_list|()
block|{
block|{
name|QUrl
name|url
argument_list|(
literal|"http://0.foo.com"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"0.foo.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|userInfo
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|authority
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toDisplayString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toDisplayString
argument_list|(
name|QUrl
operator|::
name|PreferLocalFile
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"hTTp://www.foo.bar:80"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|userInfo
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"www.foo.bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|authority
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"www.foo.bar:80"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar:80"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toDisplayString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar:80"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toDisplayString
argument_list|(
name|QUrl
operator|::
name|PreferLocalFile
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar:80"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"//www1.foo.bar"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www1.foo.bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://user%3A:pass%40@[56::56:56:56:127.0.0.1]:99"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|userName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"user:"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|password
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"pass@"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|userInfo
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"user%3A:pass@"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"56::56:56:56:7f00:1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|authority
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"user%3A:pass%40@[56::56:56:56:7f00:1]:99"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|url
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://user%3A:pass%40@[56::56:56:56:7f00:1]:99"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toDisplayString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://user%3A@[56::56:56:56:7f00:1]:99"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://user@localhost:8000/xmlhttprequest/resources/basic-auth-nouserpass/basic-auth-nouserpass.php"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|userName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"user"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|password
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|userInfo
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"user"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
literal|8000
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"/top//test/../test1/file.html"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test1/file.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"/top//test/../test1/file.html"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test1/file.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/usr/local/src/kde2/////kdelibs/kio"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///usr/local/src/kde2/////kdelibs/kio"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"mailto:bastian@kde.org"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url2
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"mailto:bastian@kde.org"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"mailto:bastian@kde.org?subject=hello"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"mailto:bastian@kde.org?subject=hello"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/usr/local/src/kde2/kdelibs/kio/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"../../////kdebase/konqueror"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///usr/local/src/kde2/////kdebase/konqueror"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QString
name|u1
init|=
literal|"file:/home/dfaure/my#myref"
decl_stmt|;
name|QUrl
name|url
init|=
name|u1
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/dfaure/my#myref"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|PreferLocalFile
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/dfaure/my#myref"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"myref"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"gg:www.kde.org"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"gg"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"www.kde.org"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"KDE"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"KDE"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"$HOME/.kde/share/config"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"$HOME/.kde/share/config"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/opt/kde2/qt2/doc/html/showimg-main-cpp.html#QObject::connect"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"QObject::connect"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/opt/kde2/qt2/doc/html/showimg-main-cpp.html#QObject:connect"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"QObject:connect"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// suburls
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/my%20tar%20file.tgz#gzip:/#tar:/#myref"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// or simply 'myref?'
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"gzip:/#tar:/#myref"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"error:/?error=14&errText=Unknown%20host%20asdfu.adgi.sdfgoi#http://asdfu.adgi.sdfgoi"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://asdfu.adgi.sdfgoi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// suburls
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/my%20tar%20file.tgz#gzip:/#tar:/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/cdrdao-1.1.5/dao/#CdrDriver.cc#"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/my%20tar%20file.tgz#gzip:/#tar:/README"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/dfaure/my tar file.tgz#gzip:/#tar:/README"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|notPretty
argument_list|(
literal|"http://ferret.lmh.ox.ac.uk/%7Ekdecvs/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|notPretty
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notPretty
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ferret.lmh.ox.ac.uk/~kdecvs/"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|notPretty2
argument_list|(
literal|"file:/home/test/directory%20with%20spaces"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|notPretty2
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notPretty2
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/test/directory with spaces"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|notPretty3
argument_list|(
literal|"fish://foo/%23README%23"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|notPretty3
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notPretty3
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"fish://foo/%23README%23"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url15581
decl_stmt|;
name|url15581
operator|.
name|setUrl
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/spaces in url.html"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15581
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/spaces in url.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15581
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/spaces%20in%20url.html"
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url15582
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%in%url.html"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url15582
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%25in%25url.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15582
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%25in%25url.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15582
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%25in%25url.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|carsten
decl_stmt|;
name|carsten
operator|.
name|setPath
argument_list|(
literal|"/home/gis/src/kde/kdelibs/kfile/.#kfiledetailview.cpp.1.18"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|carsten
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/gis/src/kde/kdelibs/kfile/.#kfiledetailview.cpp.1.18"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|charles
decl_stmt|;
name|charles
operator|.
name|setPath
argument_list|(
literal|"/home/charles/foo%20moo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|charles
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/charles/foo%20moo"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|charles
operator|.
name|path
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/charles/foo%2520moo"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|charles2
argument_list|(
literal|"file:/home/charles/foo%20moo"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|charles2
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/charles/foo moo"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|charles2
operator|.
name|path
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/charles/foo%20moo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|udir
decl_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|udir
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|udir
operator|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"/home/dfaure/file.txt"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/dfaure/file.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"file:///home/dfaure/file.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"file:///home/dfaure/file.txt"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"hello.com#?"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"hello.com"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1Char
argument_list|(
literal|'#'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1Char
argument_list|(
literal|'?'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4.example.com"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4.example.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4/"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4?foo"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4#bar"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"data:text/javascript,d5%20%3D%20'five\\u0027s'%3B"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"data"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"text/javascript,d5 = 'five\\u0027s';"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedPath
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"text/javascript,d5%20%3D%20'five%5Cu0027s'%3B"
argument_list|)
expr_stmt|;
block|}
block|{
comment|// invalid port number
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"foo://tel:2147483648"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
comment|//check it calls detach
name|QUrl
name|u1
argument_list|(
literal|"http://aaa.com"
argument_list|)
decl_stmt|;
name|QUrl
name|u2
init|=
name|u1
decl_stmt|;
name|u2
operator|.
name|setUrl
argument_list|(
literal|"http://bbb.com"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u1
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"aaa.com"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u2
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"bbb.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|i18n_data
name|void
name|tst_QUrl
operator|::
name|i18n_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"input"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"punyOutput"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Ã¸l"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://ole:passord@www.Ã¸l.no/index.html?ole=Ã¦semann&ilder gud=hei#top"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://ole:passord@www.xn--l-4ga.no/index.html?ole=%C3%A6semann&ilder%20gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rÃ¤ksmÃ¶rgÃ¥s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.rÃ¤ksmÃ¶rgÃ¥s.no/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://www.xn--rksmrgs-5wao1o.no/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bÃ¼hler"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.bÃ¼hler.no/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://www.xn--bhler-kva.no/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-latin1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.\316\261\316\270\316\256\316\275\316\261.info"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://www.xn--jxafb0a0a.info"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|i18n
name|void
name|tst_QUrl
operator|::
name|i18n
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|punyOutput
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|punyOutput
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|punyOutput
argument_list|)
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|punyOutput
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolving_data
name|void
name|tst_QUrl
operator|::
name|resolving_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"baseUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"relativeUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"resolvedUrl"
argument_list|)
expr_stmt|;
comment|// 5.4.1 Normal Examples (http://www.ietf.org/rfc/rfc3986.txt)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g:h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g:h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g:h"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"//g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|";x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|";x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/;x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g;x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g;x?y#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[empty]"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|".."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|".."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
comment|// 5.4.2  Abnormal Examples (http://www.ietf.org/rfc/rfc3986.txt)
comment|// Parsers must be careful in handling cases where there are more
comment|// relative path ".." segments than there are hierarchical levels in the
comment|// base URI's path.  Note that the ".." syntax cannot be used to change
comment|// the authority component of a URI.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
comment|// Similarly, parsers must remove the dot-segments "." and ".." when
comment|// they are complete components of a path, but not when they are only
comment|// part of a segment.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g."
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|".g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|".g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/.g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g.."
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"..g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"..g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/..g"
argument_list|)
expr_stmt|;
comment|// Less likely are cases where the relative URI reference uses
comment|// unnecessary or nonsensical forms of the "." and ".." complete path
comment|// segments.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./g/."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./g/."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g/./h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g/./h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g/h"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g/../h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g/../h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/h"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x=1/./y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x=1/./y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g;x=1/y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x=1/../y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x=1/../y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/y"
argument_list|)
expr_stmt|;
comment|// Some applications fail to separate the reference's query and/or
comment|// fragment components from a relative path before merging it with the
comment|// base path and removing dot-segments.  This error is rarely noticed,
comment|// since typical usage of a fragment never includes the hierarchy ("/")
comment|// character, and the query component is not normally used within
comment|// relative references.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y/./x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y/../x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g#s/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g#s/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g#s/./x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g#s/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g#s/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g#s/../x"
argument_list|)
expr_stmt|;
comment|// Some parsers allow the scheme name to be present in a relative URI
comment|// reference if it is the same as the base URI scheme.  This is
comment|// considered to be a loophole in prior specifications of partial URI
comment|// [RFC1630]. Its use should be avoided, but is allowed for backward
comment|// compatibility.
comment|// For strict parsers :
comment|//    QTest::newRow("http:g [for strict parsers]")<< QString::fromLatin1("http://a/b/c/d;p?q")<< QString::fromLatin1("http:g")<< QString::fromLatin1("http:g");
comment|// For backward compatibility :
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http:g [for backward compatibility]"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http:g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g"
argument_list|)
expr_stmt|;
comment|// Resolve relative with relative
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (1)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (2)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (3)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b/c/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (4)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (5)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (6)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (7)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b/c/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (8)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolving
name|void
name|tst_QUrl
operator|::
name|resolving
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|baseUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|relativeUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|resolvedUrl
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|baseUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|relativeUrl
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|resolvedUrl
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_data
name|void
name|tst_QUrl
operator|::
name|toString_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"options"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePassword
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
comment|// show that QUrl keeps the empty-but-present username if you remove the password
comment|// see data3-bis for another case
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2-bis"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePassword
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveUserInfo
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
comment|// show that QUrl keeps the empty-but-preset hostname if you remove the userinfo
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3-bis"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveUserInfo
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http:///index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePort
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http:/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePath
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveQuery
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePassword
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemoveUserInfo
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePort
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole:password@www.troll.no/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePath
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole:password@www.troll.no:9090?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/index.html?ole=semann&gud=hei"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveQuery
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http:/index.html#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePassword
operator||
name|QUrl
operator|::
name|RemovePort
operator||
name|QUrl
operator|::
name|RemovePath
operator||
name|QUrl
operator|::
name|RemoveQuery
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole@www.troll.no"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePassword
operator||
name|QUrl
operator|::
name|RemovePort
operator||
name|QUrl
operator|::
name|RemovePath
operator||
name|QUrl
operator|::
name|RemoveQuery
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole@www.troll.no"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data18"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/?my=query&your=query#yougotfragged"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|None
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/?my=query&your=query#yougotfragged"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nopath"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"host://protocol"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|None
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"host://protocol"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"underscore"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://foo_bar.host.com/rss.php"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|None
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://foo_bar.host.com/rss.php"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString
name|void
name|tst_QUrl
operator|::
name|toString
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QUrl
operator|::
name|FormattingOptions
name|opt
argument_list|(
name|options
argument_list|)
decl_stmt|;
name|QUrl
name|url
argument_list|(
name|urlString
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|opt
argument_list|)
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|adjusted
argument_list|(
name|opt
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|string
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toAndFromStringList_data
name|void
name|tst_QUrl
operator|::
name|toAndFromStringList_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QStringList
argument_list|>
argument_list|(
literal|"strings"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QStringList
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local"
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"file:///tmp"
operator|<<
literal|"file:///"
operator|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"remote"
argument_list|)
operator|<<
operator|(
name|QStringList
argument_list|()
operator|<<
literal|"http://qt-project.org"
operator|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toAndFromStringList
name|void
name|tst_QUrl
operator|::
name|toAndFromStringList
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QStringList
argument_list|,
name|strings
argument_list|)
expr_stmt|;
specifier|const
name|QList
argument_list|<
name|QUrl
argument_list|>
name|urls
init|=
name|QUrl
operator|::
name|fromStringList
argument_list|(
name|strings
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|urls
operator|.
name|count
argument_list|()
argument_list|,
name|strings
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QStringList
name|converted
init|=
name|QUrl
operator|::
name|toStringList
argument_list|(
name|urls
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|converted
argument_list|,
name|strings
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//### more tests ... what do we expect ...
end_comment
begin_function
DECL|function|isParentOf_data
name|void
name|tst_QUrl
operator|::
name|isParentOf_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"parent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"child"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/e?f"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/de"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/de"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/e"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_constructed_data
name|void
name|tst_QUrl
operator|::
name|toString_constructed_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"scheme"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"userName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"port"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"query"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fragment"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"asString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"asEncoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"options"
argument_list|)
expr_stmt|;
name|QString
name|n
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/index.html"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//qt-project.org/index.html"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"//qt-project.org/index.html"
argument_list|)
operator|<<
literal|0u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/root"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///root"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:///root"
argument_list|)
operator|<<
literal|0u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"userAndPass"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"dfaure"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"kde"
argument_list|)
operator|<<
literal|"kde.org"
operator|<<
literal|443
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://dfaure:kde@kde.org:443/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://dfaure:kde@kde.org:443/"
argument_list|)
operator|<<
literal|0u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PassWithoutUser"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"kde"
argument_list|)
operator|<<
literal|"kde.org"
operator|<<
literal|443
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://:kde@kde.org:443/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://:kde@kde.org:443/"
argument_list|)
operator|<<
literal|0u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PassWithoutUser-RemovePassword"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"kde"
argument_list|)
operator|<<
literal|"kde.org"
operator|<<
literal|443
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://kde.org:443/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://kde.org:443/"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePassword
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_constructed
name|void
name|tst_QUrl
operator|::
name|toString_constructed
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|scheme
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fragment
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|asString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|asEncoded
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|QUrl
name|url
decl_stmt|;
if|if
condition|(
operator|!
name|scheme
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setScheme
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|userName
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setUserName
argument_list|(
name|userName
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|password
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|host
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setHost
argument_list|(
name|host
argument_list|)
expr_stmt|;
if|if
condition|(
name|port
operator|!=
operator|-
literal|1
condition|)
name|url
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|query
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setEncodedQuery
argument_list|(
name|query
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fragment
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setFragment
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
operator|::
name|FormattingOptions
name|formattingOptions
argument_list|(
name|options
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|formattingOptions
argument_list|)
argument_list|,
name|asString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|(
name|formattingOptions
argument_list|)
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|asEncoded
argument_list|)
argument_list|)
expr_stmt|;
comment|// readable in case of differences
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|(
name|formattingOptions
argument_list|)
argument_list|,
name|asEncoded
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isParentOf
name|void
name|tst_QUrl
operator|::
name|isParentOf
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|parent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isParentOf
argument_list|(
name|QUrl
argument_list|(
name|child
argument_list|)
argument_list|)
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toLocalFile_data
name|void
name|tst_QUrl
operator|::
name|toLocalFile_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theFile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///c:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"c:/a.txt"
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///c:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/c:/a.txt"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somedir/somefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:////somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somedir/somefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"FILE:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///Mambo<%235>.mp3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/Mambo<#5>.mp3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a%25.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a%.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a%25%25.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a%%.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a%25a%25.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a%a%.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a%1f.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a\x1f.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///%2580.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/%80.txt"
argument_list|)
expr_stmt|;
comment|// and some that result in empty (i.e., not local)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"///a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo:/a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo://a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo:///a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toLocalFile
name|void
name|tst_QUrl
operator|::
name|toLocalFile
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theFile
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|theUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toLocalFile
argument_list|()
argument_list|,
name|theFile
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isLocalFile
argument_list|()
argument_list|,
operator|!
name|theFile
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromLocalFile_data
name|void
name|tst_QUrl
operator|::
name|fromLocalFile_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theFile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"thePath"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a/b.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a/b.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a/b.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"c:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///c:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/c:/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/somedir/somefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/Mambo<#5>.mp3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///Mambo<%235>.mp3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/Mambo<#5>.mp3"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a%.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a%25.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a%.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a%25.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a%2525.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a%25.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/%80.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///%2580.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/%80.txt"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromLocalFile
name|void
name|tst_QUrl
operator|::
name|fromLocalFile
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theFile
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|thePath
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|theFile
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|DecodeReserved
argument_list|)
argument_list|,
name|theUrl
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|thePath
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|macTypes
name|void
name|tst_QUrl
operator|::
name|macTypes
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|Q_OS_MAC
name|QSKIP
argument_list|(
literal|"This is a Mac-only test"
argument_list|)
expr_stmt|;
else|#
directive|else
specifier|extern
name|void
name|tst_QUrl_mactypes
argument_list|()
decl_stmt|;
comment|// in tst_qurl_mac.mm
name|void
name|tst_QUrl_mactypes
argument_list|()
decl_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|compat_legacy
name|void
name|tst_QUrl
operator|::
name|compat_legacy
parameter_list|()
block|{
block|{
name|QUrl
name|u
argument_list|(
literal|"file:bar"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/* others      */
block|{
name|QUrl
name|u
argument_list|(
literal|"http://qt-project.org/images/ban/pgs_front.jpg"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|tmp
argument_list|(
literal|"http://qt-project.org/images/ban/"
argument_list|)
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|QString
argument_list|(
literal|"pgs_front.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|tmp
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|QString
argument_list|(
literal|"http://qt-project.org/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|tmp
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|QString
argument_list|(
literal|"http://qt-project.org/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|QFileInfo
name|fi
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|)
decl_stmt|;
name|u
operator|.
name|setPath
argument_list|(
name|fi
operator|.
name|path
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|compat_constructor_01_data
name|void
name|tst_QUrl
operator|::
name|compat_constructor_01_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
expr_stmt|;
comment|// nolonger add file by default
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt/INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt/INSTALL"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt/INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt/INSTALL"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_01
name|void
name|tst_QUrl
operator|::
name|compat_constructor_01
parameter_list|()
block|{
comment|/* The following should work as expected:      *      * QUrlOperator op;      * op.copy( QString( "Makefile" ),      *          QString("ftp://rms:grmpf12@nibbler/home/rms/tmp"),      *          false );      *      * as well as the following:      *      * QUrlOperator op;      * op.copy(QString("ftp://ftp.qt-project.org/qt/INSTALL"), ".");      */
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
block|{
name|QUrl
name|empty
decl_stmt|;
name|QUrl
name|u
init|=
name|empty
operator|.
name|resolved
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|empty
decl_stmt|;
name|QUrl
name|u
init|=
name|empty
operator|.
name|resolved
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|compat_constructor_02_data
name|void
name|tst_QUrl
operator|::
name|compat_constructor_02_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/INSTALL"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt/INSTALL"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_02
name|void
name|tst_QUrl
operator|::
name|compat_constructor_02
parameter_list|()
block|{
comment|/* The following should work as expected:      *      * QUrlOperator op( "ftp://ftp.qt-project.org/qt" );      * op.copy(QString("INSTALL"), ".");      */
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QUrl
name|tmp
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_03_data
name|void
name|tst_QUrl
operator|::
name|compat_constructor_03_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/index.html"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/index.html"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org/foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/foo/index.txt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/foo/index.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local06"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local07"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local09"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo/bar/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo/bar/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"relProtocol00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"relProtocol01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/WinNT/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/WinNT/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/autoexec.bat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/autoexec.bat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:WinNT/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:WinNT/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:autoexec.bat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:autoexec.bat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nopath"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"protocol://host"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"protocol://host"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_03
name|void
name|tst_QUrl
operator|::
name|compat_constructor_03
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QUrl
name|u
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_01_data
name|void
name|tst_QUrl
operator|::
name|compat_isValid_01_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/qt/INSTALL"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:foo"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"#ftp://ftp.qt-project.org/qt/INSTALL"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/::foo"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_01
name|void
name|tst_QUrl
operator|::
name|compat_isValid_01
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|res
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|res
condition|)
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_02_data
name|void
name|tst_QUrl
operator|::
name|compat_isValid_02_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"protocol"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"port"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
name|QString
name|n
init|=
literal|""
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_01"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp.qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"/path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_06"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"/path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_07"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp.qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"/path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_01"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_03"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_04"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_05"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt-project.org"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_06"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
literal|80
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_07"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_08"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_09"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_02
name|void
name|tst_QUrl
operator|::
name|compat_isValid_02
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|protocol
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|QUrl
name|url
decl_stmt|;
if|if
condition|(
operator|!
name|protocol
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setScheme
argument_list|(
name|protocol
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|user
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setUserName
argument_list|(
name|user
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|password
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|host
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setHost
argument_list|(
name|host
argument_list|)
expr_stmt|;
if|if
condition|(
name|port
operator|!=
operator|-
literal|1
condition|)
name|url
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|res
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|res
condition|)
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_path_data
name|void
name|tst_QUrl
operator|::
name|compat_path_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol00"
argument_list|)
operator|<<
literal|"http://qt-project.org/images/ban/pgs_front.jpg"
operator|<<
literal|"/images/ban/pgs_front.jpg"
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN32
argument_list|)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winShare00"
argument_list|)
operator|<<
literal|"//Anarki/homes"
operator|<<
literal|"/homes"
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|compat_path
name|void
name|tst_QUrl
operator|::
name|compat_path
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QUrl
name|u
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_fileName_data
name|void
name|tst_QUrl
operator|::
name|compat_fileName_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN32
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathFileName - \\"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:\\windows\\tmp\\filename.txt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathFileName - /"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp/filename.txt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithSlash - \\"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:\\windows\\tmp\\"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithSlash - /"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp/"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithoutSlash - \\"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithoutSlash - /"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tmp"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Path00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Path01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/home/dev/test/"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PathFileName00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/home/dev/test"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_fileName
name|void
name|tst_QUrl
operator|::
name|compat_fileName
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QUrl
name|fileUrl
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QFileInfo
name|fi
argument_list|(
name|fileUrl
operator|.
name|toLocalFile
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|fi
operator|.
name|fileName
argument_list|()
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_decode_data
name|void
name|tst_QUrl
operator|::
name|compat_decode_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"decodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalString"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"filename"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalStringEncoded"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file%20name"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JustEncoded"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%20"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrl"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://qt-project.org"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrlEncoded"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://qt-project%20org"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"EmptyString"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NulByte"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"C%00%0A"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"C\0\n"
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Task27166"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"Fran%C3%A7aise"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"FranÃ§aise"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_decode
name|void
name|tst_QUrl
operator|::
name|compat_decode
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|decodedString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromPercentEncoding
argument_list|(
name|encodedString
argument_list|)
argument_list|,
name|decodedString
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_encode_data
name|void
name|tst_QUrl
operator|::
name|compat_encode_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"decodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalString"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"filename"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalStringEncoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file name"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file%20name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JustEncoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|" "
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%20"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrl"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http%3A//qt-project.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrlEncoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project org"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http%3A//qt-project%20org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"EmptyString"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NulByte"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"C\0\n"
argument_list|,
literal|3
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"C%00%0A"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Task27166"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"FranÃ§aise"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"Fran%C3%A7aise"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_encode
name|void
name|tst_QUrl
operator|::
name|compat_encode
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|decodedString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|toPercentEncoding
argument_list|(
name|decodedString
argument_list|,
literal|"/."
argument_list|)
argument_list|,
name|encodedString
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|relative
name|void
name|tst_QUrl
operator|::
name|relative
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"../ole"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../ole"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"./"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url3
argument_list|(
literal|".."
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url3
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|".."
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url4
argument_list|(
literal|"../.."
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url4
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../.."
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|percentEncoding_data
name|void
name|tst_QUrl
operator|::
name|percentEncoding_data
parameter_list|()
block|{
comment|// This test is limited. It's superseded by componentEncodings below
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"original"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_01"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"sdfsdf"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"sdfsdf"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_02"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã¦ss"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%C3%A6ss"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|percentEncoding
name|void
name|tst_QUrl
operator|::
name|percentEncoding
parameter_list|()
block|{
comment|// This test is limited. It's superseded by componentEncodings below
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|encoded
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|)
operator|==
name|QUrl
argument_list|(
name|original
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|encoded
argument_list|)
operator|==
name|QUrl
argument_list|(
name|original
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|original
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toPercentEncoding_data
name|void
name|tst_QUrl
operator|::
name|toPercentEncoding_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"original"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"excludeInEncoding"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"includeInEncoding"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_01"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcdevghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345678-._~"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"abcdevghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345678-._~"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_02"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"{\t\n\r^\"abc}"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%7B%09%0A%0D%5E%22abc%7D"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_03"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"://?#[]@!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%3A%2F%2F%3F%23%5B%5D%40%21%24%26%27%28%29%2A%2B%2C%3B%3D"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_04"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"://?#[]@!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%3A%2F%2F%3F%23%5B%5D%40!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_05"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcd"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"a%62%63d"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bc"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toPercentEncoding
name|void
name|tst_QUrl
operator|::
name|toPercentEncoding
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|excludeInEncoding
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|includeInEncoding
argument_list|)
expr_stmt|;
name|QByteArray
name|encodedUrl
init|=
name|QUrl
operator|::
name|toPercentEncoding
argument_list|(
name|original
argument_list|,
name|excludeInEncoding
argument_list|,
name|includeInEncoding
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|encodedUrl
operator|.
name|constData
argument_list|()
argument_list|,
name|encoded
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|original
argument_list|,
name|QUrl
operator|::
name|fromPercentEncoding
argument_list|(
name|encodedUrl
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swap
name|void
name|tst_QUrl
operator|::
name|swap
parameter_list|()
block|{
name|QUrl
name|u1
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://qt-project.org"
argument_list|)
argument_list|)
decl_stmt|,
name|u2
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.kdab.com"
argument_list|)
argument_list|)
decl_stmt|;
name|u1
operator|.
name|swap
argument_list|(
name|u2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u2
operator|.
name|host
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"qt-project.org"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u1
operator|.
name|host
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"www.kdab.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|symmetry
name|void
name|tst_QUrl
operator|::
name|symmetry
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.rÃ¤ksmÃ¶rgÃ¥s.se/pub?a=b&a=dÃ¸&a=f#vrÃ¦l"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"www.rÃ¤ksmÃ¶rgÃ¥s.se"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/pub"
argument_list|)
argument_list|)
expr_stmt|;
comment|// this will be encoded ...
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a=b&a=d%C3%B8&a=f"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"vrÃ¦l"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|onlyHost
argument_list|(
literal|"//qt-project.org"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|onlyHost
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//qt-project.org"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QString
name|urlString
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://desktop:33326/upnp/{32f525a6-6f31-426e-91ca-01c2e6c2c57e}"
argument_list|)
decl_stmt|;
name|QString
name|encodedUrlString
init|=
name|QString
argument_list|(
literal|"http://desktop:33326/upnp/%7B32f525a6-6f31-426e-91ca-01c2e6c2c57e%7D"
argument_list|)
decl_stmt|;
name|QUrl
name|urlPreviewList
argument_list|(
name|urlString
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|urlPreviewList
operator|.
name|toString
argument_list|()
argument_list|,
name|encodedUrlString
argument_list|)
expr_stmt|;
name|QByteArray
name|b
init|=
name|urlPreviewList
operator|.
name|toEncoded
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|constData
argument_list|()
argument_list|,
name|encodedUrlString
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|encodedUrlString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|encodedUrlString
argument_list|)
expr_stmt|;
block|}
block|{
name|QString
name|urlString
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://desktop:53423/deviceDescription?uuid={7977c17b-00bf-4af9-894e-fed28573c3a9}"
argument_list|)
decl_stmt|;
name|QString
name|encodedUrlString
init|=
name|QString
argument_list|(
literal|"http://desktop:53423/deviceDescription?uuid=%7B7977c17b-00bf-4af9-894e-fed28573c3a9%7D"
argument_list|)
decl_stmt|;
name|QUrl
name|urlPreviewList
argument_list|(
name|urlString
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|urlPreviewList
operator|.
name|toString
argument_list|()
argument_list|,
name|encodedUrlString
argument_list|)
expr_stmt|;
name|QByteArray
name|b
init|=
name|urlPreviewList
operator|.
name|toEncoded
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|constData
argument_list|()
argument_list|,
name|encodedUrlString
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|encodedUrlString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|encodedUrlString
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|ipvfuture_data
name|void
name|tst_QUrl
operator|::
name|ipvfuture_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"input"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isValid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"output"
argument_list|)
expr_stmt|;
comment|// No one uses IPvFuture yet, so we have no clue what it might contain
comment|// We're just testing that it can hold what the RFC says it should hold:
comment|//    IPvFuture     = "v" 1*HEXDIG "." 1*( unreserved / sub-delims / ":" )
name|QTest
operator|::
name|newRow
argument_list|(
literal|"missing-version-dot"
argument_list|)
operator|<<
literal|"x://[v]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"missing-version"
argument_list|)
operator|<<
literal|"x://[v.]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"missing-version-2"
argument_list|)
operator|<<
literal|"x://[v.1234]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"missing-dot"
argument_list|)
operator|<<
literal|"x://[v7]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"missing-dot-2"
argument_list|)
operator|<<
literal|"x://[v71234]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"missing-data"
argument_list|)
operator|<<
literal|"x://[v7.]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-hex-version"
argument_list|)
operator|<<
literal|"x://[vz.1234]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"digit-ver"
argument_list|)
operator|<<
literal|"x://[v7.1]"
operator|<<
literal|true
operator|<<
literal|"x://[v7.1]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lowercase-hex-ver"
argument_list|)
operator|<<
literal|"x://[va.1]"
operator|<<
literal|true
operator|<<
literal|"x://[vA.1]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lowercase-hex-ver"
argument_list|)
operator|<<
literal|"x://[vA.1]"
operator|<<
literal|true
operator|<<
literal|"x://[vA.1]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-digits"
argument_list|)
operator|<<
literal|"x://[v7.1234]"
operator|<<
literal|true
operator|<<
literal|"x://[v7.1234]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-unreserved"
argument_list|)
operator|<<
literal|"x://[v7.hello~-WORLD_.com]"
operator|<<
literal|true
operator|<<
literal|"x://[v7.hello~-WORLD_.com]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-sub-delims-colon"
argument_list|)
operator|<<
literal|"x://[v7.!$&'()*+,;=:]"
operator|<<
literal|true
operator|<<
literal|"x://[v7.!$&'()*+,;=:]"
expr_stmt|;
comment|// we're using the tolerant parser
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-encoded-digits"
argument_list|)
operator|<<
literal|"x://[v7.%31%32%33%34]"
operator|<<
literal|true
operator|<<
literal|"x://[v7.1234]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-encoded-unreserved"
argument_list|)
operator|<<
literal|"x://[v7.%7E%2D%54%5f%2E]"
operator|<<
literal|true
operator|<<
literal|"x://[v7.~-T_.]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-encoded-sub-delims-colon"
argument_list|)
operator|<<
literal|"x://[v7.%21%24%26%27%28%29%2A%2B%2C%3B%3D%3A]"
operator|<<
literal|true
operator|<<
literal|"x://[v7.!$&'()*+,;=:]"
expr_stmt|;
comment|// should we test "[%76%37%2ex]" -> "[v7.x]" ?
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-invalid-space"
argument_list|)
operator|<<
literal|"x://[v7.%20]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-invalid-control"
argument_list|)
operator|<<
literal|"x://[v7.\x7f]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-invalid-other-1"
argument_list|)
operator|<<
literal|"x://[v7.{1234}]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-invalid-other-2"
argument_list|)
operator|<<
literal|"x://[v7.<hello>]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-invalid-unicode"
argument_list|)
operator|<<
literal|"x://[v7.Ã¦Ã¸Ã¥]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-invalid-percent"
argument_list|)
operator|<<
literal|"x://[v7.%]"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data-invalid-percent-percent"
argument_list|)
operator|<<
literal|"x://[v7.%25]"
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ipvfuture
name|void
name|tst_QUrl
operator|::
name|ipvfuture
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|input
argument_list|)
decl_stmt|;
if|if
condition|(
name|isValid
condition|)
block|{
name|QVERIFY2
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
name|output
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url2
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|ipv6_data
name|void
name|tst_QUrl
operator|::
name|ipv6_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"ipv6Auth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isValid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"output"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:56:56:56:56:56:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[0:56:56:56:56:56:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::56:56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:0:56:56:56:56:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56::56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:56:0:56:56:56:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56::56:56:56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:56:56:0:56:56:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56::56:56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:56:56:56:0:56:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56::56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:56:56:56:56:0:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56:56::56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:56:56:56:56:56:0:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56:56:56::]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56:56:56:56:56:56:56:0]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4 with one less"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56::56:56:56:56:56]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4 with less and ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::56:56:56:127.0.0.1]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56::56:56:56:7f00:1]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 7 with one and ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::255.0.0.0]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[56::ff00:0]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 2 with ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::56:56:56:56:56:0.0.0.255]"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//[0:56:56:56:56:56:0:ff]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 2 with half ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::56:56:56:56:56:56:0.255]"
argument_list|)
operator|<<
literal|false
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4 with less and ip4 and port and useinfo"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//user:pass@[56::56:56:56:127.0.0.1]:99"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"//user:pass@[56::56:56:56:7f00:1]:99"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case :,"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[:,]"
argument_list|)
operator|<<
literal|false
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case ::bla"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::bla]"
argument_list|)
operator|<<
literal|false
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case v4-mapped"
argument_list|)
operator|<<
literal|"//[0:0:0:0:0:ffff:7f00:1]"
operator|<<
literal|true
operator|<<
literal|"//[::ffff:127.0.0.1]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-digit"
argument_list|)
operator|<<
literal|"//[::%31]"
operator|<<
literal|true
operator|<<
literal|"//[::1]"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-colon"
argument_list|)
operator|<<
literal|"//[%3A%3A]"
operator|<<
literal|true
operator|<<
literal|"//[::]"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ipv6
name|void
name|tst_QUrl
operator|::
name|ipv6
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|ipv6Auth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|ipv6Auth
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|,
operator|!
name|isValid
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|ipv6_2_data
name|void
name|tst_QUrl
operator|::
name|ipv6_2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"input"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"output"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[::ffff:129.144.52.38]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[::FFFF:129.144.52.38]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::FFFF:129.144.52.38]/cgi/test.cgi"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ipv6_2
name|void
name|tst_QUrl
operator|::
name|ipv6_2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moreIpv6
name|void
name|tst_QUrl
operator|::
name|moreIpv6
parameter_list|()
block|{
name|QUrl
name|waba1
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi"
argument_list|)
decl_stmt|;
name|waba1
operator|.
name|setHost
argument_list|(
literal|"::ffff:129.144.52.38"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|waba1
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isRelative_data
name|void
name|tst_QUrl
operator|::
name|isRelative_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"not"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://qt-project.org"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"55288"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"node64.html#fig:form:ana"
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// kde
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto: URL, is relative"
argument_list|)
operator|<<
literal|"mailto:faure@kde.org"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"man: URL, is relative"
argument_list|)
operator|<<
literal|"man:mmap"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"javascript: URL, is relative"
argument_list|)
operator|<<
literal|"javascript:doSomething()"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file: URL, is relative"
argument_list|)
operator|<<
literal|"file:/blah"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/path, is relative"
argument_list|)
operator|<<
literal|"/path"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"something, is relative"
argument_list|)
operator|<<
literal|"something"
operator|<<
literal|true
expr_stmt|;
comment|// end kde
block|}
end_function
begin_function
DECL|function|isRelative
name|void
name|tst_QUrl
operator|::
name|isRelative
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|url
argument_list|)
operator|.
name|isRelative
argument_list|()
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasQuery_data
name|void
name|tst_QUrl
operator|::
name|hasQuery_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no query items"
argument_list|)
operator|<<
literal|"http://www.foo.bar"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty query"
argument_list|)
operator|<<
literal|"http://www.foo.bar?"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty query 2"
argument_list|)
operator|<<
literal|"http://www.foo.bar/?"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query"
argument_list|)
operator|<<
literal|"http://www.foo.bar?query"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query="
argument_list|)
operator|<<
literal|"http://www.foo.bar?query="
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query=value"
argument_list|)
operator|<<
literal|"http://www.foo.bar?query=value"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%3f"
argument_list|)
operator|<<
literal|"http://www.foo.bar/file%3f"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%3f-query"
argument_list|)
operator|<<
literal|"http://www.foo.bar/file%3fquery"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%3f-query=value"
argument_list|)
operator|<<
literal|"http://www.foo.bar/file%3fquery=value"
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasQuery
name|void
name|tst_QUrl
operator|::
name|hasQuery
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QUrl
name|qurl
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|hasQuery
argument_list|()
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|,
operator|!
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nameprep
name|void
name|tst_QUrl
operator|::
name|nameprep
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.fu"
literal|"\xc3"
literal|"\x9f"
literal|"ball.de/"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.fussball.de/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isValid
name|void
name|tst_QUrl
operator|::
name|isValid
parameter_list|()
block|{
block|{
name|QUrl
name|url
argument_list|(
name|QString
argument_list|(
literal|"A=B"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"A=B"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://strange<username>@ok-hostname/"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|//< and> are not allowed in userinfo in strict mode
name|url
operator|.
name|setUserName
argument_list|(
literal|"normal_username"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://strange<username>@ok-hostname/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|//< and> are allowed in tolerant mode
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://strange%3Cusername%3E@ok-hostname/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://strange;hostname/here"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/here"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
literal|"strange;hostname"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
literal|"foobar@bar"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
literal|"strange;hostname"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Invalid hostname"
argument_list|)
argument_list|,
name|qPrintable
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"foo://stuff;1/g"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/g"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"stuff;1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"stuff-1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"stuff;1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Invalid hostname"
argument_list|)
argument_list|,
name|qPrintable
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://example.com"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPath
argument_list|(
literal|"relative"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Path component is relative and authority is present"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setPath
argument_list|(
literal|"http://example.com"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"':' before any '/'"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|schemeValidator_data
name|void
name|tst_QUrl
operator|::
name|schemeValidator_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
comment|// ftp
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp:"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"ftp:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp://ftp.qt-project.org"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp://ftp.qt-project.org"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp://ftp.qt-project.org/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp://ftp.qt-project.org/"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt-project.org/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp:/index.html"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp:/index.html"
argument_list|)
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
comment|// mailto
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"mailto:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto://smtp.trolltech.com/ole@bull.name"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto://smtp.trolltech.com/ole@bull.name"
argument_list|)
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"mailto:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto:ole@bull.name"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto:ole@bull.name"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"mailto:ole@bull.name"
argument_list|)
expr_stmt|;
comment|// file
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:/etc/passwd"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"file:///etc/passwd"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|schemeValidator
name|void
name|tst_QUrl
operator|::
name|schemeValidator
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toString
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|encodedUrl
argument_list|)
decl_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"ftp:/index.html"
argument_list|,
literal|"high-level URL validation not reimplemented yet"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"mailto://smtp.trolltech.com/ole@bull.name"
argument_list|,
literal|"high-level URL validation not reimplemented yet"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|result
condition|)
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidSchemeValidator
name|void
name|tst_QUrl
operator|::
name|invalidSchemeValidator
parameter_list|()
block|{
comment|// test that if scheme does not start with an ALPHA, QUrl::isValid() returns false
block|{
name|QUrl
name|url
argument_list|(
literal|"1http://qt-project.org"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|path
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"1http"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt-project.org"
argument_list|)
decl_stmt|;
name|url
operator|.
name|setScheme
argument_list|(
literal|"111http://qt-project.org"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// non-ALPHA character at other positions in the scheme are ok
block|{
name|QUrl
name|url
argument_list|(
literal|"ht111tp://qt-project.org"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"ht111tp"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt-project.org"
argument_list|)
decl_stmt|;
name|url
operator|.
name|setScheme
argument_list|(
literal|"ht123tp://qt-project.org"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setScheme
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"ht321tp://qt-project.org"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|strictParser_data
name|void
name|tst_QUrl
operator|::
name|strictParser_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"input"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"needle"
argument_list|)
expr_stmt|;
comment|// QUrl doesn't detect an error in the scheme when parsing because
comment|// it falls back to parsing as a path. So, these errors are path errors
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-scheme"
argument_list|)
operator|<<
literal|"ht%://example.com"
operator|<<
literal|"character '%' not permitted"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty-scheme"
argument_list|)
operator|<<
literal|":/"
operator|<<
literal|"':' before any '/'"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-user1"
argument_list|)
operator|<<
literal|"http://bad<user_name>@ok-hostname"
operator|<<
literal|"Invalid user name (character '<' not permitted)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-user2"
argument_list|)
operator|<<
literal|"http://bad%@ok-hostname"
operator|<<
literal|"Invalid user name (character '%' not permitted)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-password"
argument_list|)
operator|<<
literal|"http://user:pass\x7F@ok-hostname"
operator|<<
literal|"Invalid password (character '\x7F' not permitted)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-regname"
argument_list|)
operator|<<
literal|"http://bad<hostname>"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-regname-2"
argument_list|)
operator|<<
literal|"http://b%61d"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-ipv6"
argument_list|)
operator|<<
literal|"http://[:::]"
operator|<<
literal|"Invalid IPv6 address"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-ipv6-char1"
argument_list|)
operator|<<
literal|"http://[::g]"
operator|<<
literal|"Invalid IPv6 address (character 'g' not permitted)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-ipv6-char2"
argument_list|)
operator|<<
literal|"http://[z::]"
operator|<<
literal|"Invalid IPv6 address (character 'z' not permitted)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-ipvfuture-1"
argument_list|)
operator|<<
literal|"http://[v7]"
operator|<<
literal|"Invalid IPvFuture address"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-ipvfuture-2"
argument_list|)
operator|<<
literal|"http://[v7.]"
operator|<<
literal|"Invalid IPvFuture address"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-ipvfuture-3"
argument_list|)
operator|<<
literal|"http://[v789]"
operator|<<
literal|"Invalid IPvFuture address"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-ipvfuture-char1"
argument_list|)
operator|<<
literal|"http://[v7.^]"
operator|<<
literal|"Invalid IPvFuture address"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-encoded-ipv6"
argument_list|)
operator|<<
literal|"x://[%3a%3a%31]"
operator|<<
literal|"Invalid IPv6 address"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-encoded-ipvfuture"
argument_list|)
operator|<<
literal|"x://[v7.%7E%2D%54%5f%2E]"
operator|<<
literal|"Invalid IPvFuture address"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unbalanced-brackets"
argument_list|)
operator|<<
literal|"http://[ff02::1"
operator|<<
literal|"Expected ']' to match '[' in hostname"
expr_stmt|;
comment|// invalid hostnames happen in TolerantMode too
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-hostname-leading-dot"
argument_list|)
operator|<<
literal|"http://.co.uk"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-hostname-double-dot"
argument_list|)
operator|<<
literal|"http://co..uk"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-hostname-non-LDH"
argument_list|)
operator|<<
literal|"http://foo,bar.example.com"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-space"
argument_list|)
operator|<<
literal|"http:// "
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-nbsp"
argument_list|)
operator|<<
literal|"http://\xc2\xa0"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-control-1f"
argument_list|)
operator|<<
literal|"http://\x1f"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-control-7f"
argument_list|)
operator|<<
literal|"http://\x7f"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-control-80"
argument_list|)
operator|<<
literal|"http://\xc2\x80"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-private-bmp"
argument_list|)
operator|<<
literal|"http://\xee\x80\x80"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-private-plane15"
argument_list|)
operator|<<
literal|"http://\xf3\xb0\x80\x80"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-private-plane16"
argument_list|)
operator|<<
literal|"http://\xf4\x80\x80\x80"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-ffff"
argument_list|)
operator|<<
literal|"http://\xef\xbf\xbf"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-surrogate-1"
argument_list|)
operator|<<
literal|"http://"
operator|+
name|QString
argument_list|(
name|QChar
argument_list|(
literal|0xD800
argument_list|)
argument_list|)
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-surrogate-2"
argument_list|)
operator|<<
literal|"http://"
operator|+
name|QString
argument_list|(
name|QChar
argument_list|(
literal|0xDC00
argument_list|)
argument_list|)
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-prohibited-char-surrogate-3"
argument_list|)
operator|<<
literal|"http://"
operator|+
name|QString
argument_list|(
name|QChar
argument_list|(
literal|0xD800
argument_list|)
argument_list|)
operator|+
literal|"a"
operator|<<
literal|"Invalid hostname (contains invalid characters)"
expr_stmt|;
comment|// FIXME: add some tests for prohibited BiDi (RFC 3454 section 6)
comment|// port errors happen in TolerantMode too
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty-port-1"
argument_list|)
operator|<<
literal|"http://example.com:"
operator|<<
literal|"Port field was empty"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty-port-2"
argument_list|)
operator|<<
literal|"http://example.com:/"
operator|<<
literal|"Port field was empty"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-port-1"
argument_list|)
operator|<<
literal|"http://example.com:-1"
operator|<<
literal|"Invalid port"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-port-2"
argument_list|)
operator|<<
literal|"http://example.com:abc"
operator|<<
literal|"Invalid port"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-port-3"
argument_list|)
operator|<<
literal|"http://example.com:9a"
operator|<<
literal|"Invalid port"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-range"
argument_list|)
operator|<<
literal|"http://example.com:65536"
operator|<<
literal|"out of range"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-path"
argument_list|)
operator|<<
literal|"foo:/path%\x1F"
operator|<<
literal|"Invalid path (character '%' not permitted)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-query"
argument_list|)
operator|<<
literal|"foo:?\\#"
operator|<<
literal|"Invalid query (character '\\' not permitted)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-fragment"
argument_list|)
operator|<<
literal|"#{}"
operator|<<
literal|"Invalid fragment (character '{' not permitted)"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|strictParser
name|void
name|tst_QUrl
operator|::
name|strictParser
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|needle
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|input
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
name|input
argument_list|)
argument_list|,
literal|"Error string does not contain the original input (\""
operator|+
name|input
operator|.
name|toLatin1
argument_list|()
operator|+
literal|"\"): "
operator|+
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
comment|// Note: if the following fails due to changes in the parser, simply update the test data
name|QVERIFY2
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
name|needle
argument_list|)
argument_list|,
literal|"Error string changed and does not contain \""
operator|+
name|needle
operator|.
name|toLatin1
argument_list|()
operator|+
literal|"\" anymore: "
operator|+
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tolerantParser
name|void
name|tst_QUrl
operator|::
name|tolerantParser
parameter_list|()
block|{
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/path with spaces.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://www.example.com/path%20with%20spaces.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://www.example.com/path%20with%20spaces.html"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/path with spaces.html"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url15581
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%in%url.htm>"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url15581
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15581
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%25in%25url.htm%3E"
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|webkit22616
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/testya.php?browser-info=s:1400x1050x24:f:9.0%20r152:t:%u0442%u0435%u0441%u0442"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|webkit22616
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// Qt 5 behaviour change: one broken % means all % are considered broken
comment|//      QCOMPARE(webkit22616.toEncoded().constData(),
comment|//               "http://example.com/testya.php?browser-info=s:1400x1050x24:f:9.0%20r152:t:%25u0442%25u0435%25u0441%25u0442");
name|QCOMPARE
argument_list|(
name|webkit22616
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://example.com/testya.php?browser-info=s:1400x1050x24:f:9.0%2520r152:t:%25u0442%25u0435%25u0441%25u0442"
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"//[0:56:56:56:56:56:56:56]"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[0:56:56:56:56:56:56:56]"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"//[0:56:56:56:56:56:56:56]"
argument_list|)
argument_list|)
expr_stmt|;
comment|// invoke the tolerant parser's error correction
name|url
operator|.
name|setUrl
argument_list|(
literal|"%hello.com/f%"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"%25hello.com/f%25"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"%25hello.com/f%25"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"%25hello.com/f%25"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://www.host.com/foo.php?P0=[2006-3-8]"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"//[0:56:56:56:56:56:56:56]"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[0:56:56:56:56:56:56:56]"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"data:text/css,div%20{%20border-right:%20solid;%20}"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"data:text/css,div%20%7B%20border-right:%20solid;%20%7D"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"data:text/css,div%20%7B%20border-right:%20solid;%20%7D"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"data:text/css,div %7B border-right: solid; %7D"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|tsdgeos
argument_list|(
literal|"http://google.com/c?c=Translation+%C2%BB+trunk|"
argument_list|)
decl_stmt|;
name|QUrl
name|tsdgeosQUrl
decl_stmt|;
name|tsdgeosQUrl
operator|.
name|setEncodedUrl
argument_list|(
name|tsdgeos
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tsdgeosQUrl
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// failed in Qt-4.4, works in Qt-4.5
name|QByteArray
name|tsdgeosExpected
argument_list|(
literal|"http://google.com/c?c=Translation+%C2%BB+trunk%7C"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QString
argument_list|(
name|tsdgeosQUrl
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
argument_list|(
name|tsdgeosExpected
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://strange<username>@hostname/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://strange%3Cusername%3E@hostname/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://en%63o%64%65%64.hostname/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://encoded.hostname/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|correctEncodedMistakes_data
name|void
name|tst_QUrl
operator|::
name|correctEncodedMistakes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toDecoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"3%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"3%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25!!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25az"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%25"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|correctEncodedMistakes
name|void
name|tst_QUrl
operator|::
name|correctEncodedMistakes
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toDecoded
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|encodedUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|toDecoded
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|correctDecodedMistakes_data
name|void
name|tst_QUrl
operator|::
name|correctDecodedMistakes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"decodedUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toDecoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3%"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"3%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"3%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25!!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25az"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|correctDecodedMistakes
name|void
name|tst_QUrl
operator|::
name|correctDecodedMistakes
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|decodedUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toDecoded
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|decodedUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|toDecoded
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|tldRestrictions_data
name|void
name|tst_QUrl
operator|::
name|tldRestrictions_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"tld"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"encode"
argument_list|)
expr_stmt|;
comment|// current whitelist
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ac"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ac"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ar"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"asia"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"asia"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"at"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"at"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"biz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"biz"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"br"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"br"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"cat"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ch"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ch"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cl"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"cl"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cn"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"cn"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"com"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"com"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"de"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"de"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dk"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dk"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"es"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"es"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fi"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fi"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"gr"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"gr"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hu"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hu"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"il"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"il"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"info"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"info"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"io"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"io"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"is"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"is"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ir"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ir"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"jp"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"kr"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kr"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"li"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"li"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"lt"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lu"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"lu"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lv"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"lv"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"museum"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"museum"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"name"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"name"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"net"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"name"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"no"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nu"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"nu"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"nz"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"org"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"org"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pl"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"pl"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pr"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"pr"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"se"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"se"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"sh"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"sh"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tel"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tel"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"th"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"th"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tm"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tw"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tw"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ua"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ua"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vn"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"vn"
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// known blacklists:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tldRestrictions
name|void
name|tst_QUrl
operator|::
name|tldRestrictions
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|tld
argument_list|)
expr_stmt|;
comment|// www.brÃ¸d.tld
name|QByteArray
name|ascii
init|=
literal|"www.xn--brd-1na."
operator|+
name|tld
operator|.
name|toLatin1
argument_list|()
decl_stmt|;
name|QString
name|unicode
init|=
name|QLatin1String
argument_list|(
literal|"www.br\370d."
argument_list|)
operator|+
name|tld
decl_stmt|;
name|QString
name|encoded
init|=
name|QUrl
operator|::
name|fromAce
argument_list|(
name|ascii
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
operator|!
name|encoded
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|encoded
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.xn--brd-1na."
operator|+
name|tld
operator|.
name|toLatin1
argument_list|()
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.xn--brd-1na."
argument_list|)
operator|+
name|tld
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.br\370d."
argument_list|)
operator|+
name|tld
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|url
operator|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.br%C3%B8d."
operator|+
name|tld
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyQueryOrFragment
name|void
name|tst_QUrl
operator|::
name|emptyQueryOrFragment
parameter_list|()
block|{
name|QUrl
name|qurl
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi?"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://www.kde.org/cgi/test.cgi?"
argument_list|)
expr_stmt|;
comment|// Empty refs should be preserved
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi?"
argument_list|)
argument_list|)
expr_stmt|;
name|qurl
operator|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi#"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://www.kde.org/cgi/test.cgi#"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi#"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// start with an empty one
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// add fragment
name|url
operator|.
name|setFragment
argument_list|(
name|QLatin1String
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz#abc"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove fragment
name|url
operator|.
name|setFragment
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add empty fragment
name|url
operator|.
name|setFragment
argument_list|(
name|QLatin1String
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz#"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// start with an empty one
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// add encodedQuery
name|url
operator|.
name|setQuery
argument_list|(
literal|"abc=def"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|query
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"abc=def"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz?abc=def"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedQuery
argument_list|(
literal|"abc=def"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz?abc=def"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove encodedQuery
name|url
operator|.
name|setQuery
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedQuery
argument_list|(
name|QByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add empty encodedQuery
name|url
operator|.
name|setQuery
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz?"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedQuery
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz?"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|hasFragment_data
name|void
name|tst_QUrl
operator|::
name|hasFragment_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no fragment"
argument_list|)
operator|<<
literal|"http://www.foo.bar"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty fragment"
argument_list|)
operator|<<
literal|"http://www.foo.bar#"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty fragment 2"
argument_list|)
operator|<<
literal|"http://www.foo.bar/#"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment"
argument_list|)
operator|<<
literal|"http://www.foo.bar#baz"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment2"
argument_list|)
operator|<<
literal|"http://www.foo.bar/#baz"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%23"
argument_list|)
operator|<<
literal|"http://www.foo.bar/%23"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%23-and-something"
argument_list|)
operator|<<
literal|"http://www.foo.bar/%23baz"
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasFragment
name|void
name|tst_QUrl
operator|::
name|hasFragment
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QUrl
name|qurl
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|hasFragment
argument_list|()
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|,
operator|!
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setEncodedFragment_data
name|void
name|tst_QUrl
operator|::
name|setEncodedFragment_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"base"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"fragment"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
typedef|typedef
name|QByteArray
name|BA
typedef|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|()
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|""
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"basic test"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"abc"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#abc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"initial url has fragment"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#old"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"new"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#new"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded fragment"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"a%20c"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#a%20c"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"with #"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"a#b"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#a%23b"
argument_list|)
expr_stmt|;
comment|// toString uses "a#b"
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"\xc3\xa9"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#%C3%A9"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"binary"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"\x00\xc0\x80"
argument_list|,
literal|3
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#%00%C0%80"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setEncodedFragment
name|void
name|tst_QUrl
operator|::
name|setEncodedFragment
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|fragment
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QUrl
name|u
decl_stmt|;
name|u
operator|.
name|setEncodedUrl
argument_list|(
name|base
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|u
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|u
operator|.
name|setEncodedFragment
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|u
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|!
name|fragment
operator|.
name|isNull
argument_list|()
argument_list|,
name|u
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|u
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromEncoded
name|void
name|tst_QUrl
operator|::
name|fromEncoded
parameter_list|()
block|{
name|QUrl
name|qurl2
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"print:/specials/Print%20To%20File%20(PDF%252FAcrobat)"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl2
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/specials/Print To File (PDF%2FAcrobat)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QFileInfo
argument_list|(
name|qurl2
operator|.
name|path
argument_list|()
argument_list|)
operator|.
name|fileName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Print To File (PDF%2FAcrobat)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl2
operator|.
name|fileName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Print To File (PDF%2FAcrobat)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl2
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"print:/specials/Print%20To%20File%20(PDF%252FAcrobat)"
argument_list|)
expr_stmt|;
name|QUrl
name|qurl
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://\303\244.de"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qurl
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://xn--4ca.de"
argument_list|)
expr_stmt|;
name|QUrl
name|qurltest
argument_list|(
name|QUrl
operator|::
name|fromPercentEncoding
argument_list|(
literal|"http://\303\244.de"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qurltest
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|qurl_newline_1
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.foo.bar/foo/bar\ngnork"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qurl_newline_1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl_newline_1
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://www.foo.bar/foo/bar%0Agnork"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stripTrailingSlash_data
name|void
name|tst_QUrl
operator|::
name|stripTrailingSlash_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedStrip"
argument_list|)
expr_stmt|;
comment|// toString(Strip)
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedDir"
argument_list|)
expr_stmt|;
comment|// toString(RemoveFilename)
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedDirStrip"
argument_list|)
expr_stmt|;
comment|// toString(RemoveFilename|Strip)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"subdir no slash"
argument_list|)
operator|<<
literal|"ftp://kde.org/dir/subdir"
operator|<<
literal|"ftp://kde.org/dir/subdir"
operator|<<
literal|"ftp://kde.org/dir/"
operator|<<
literal|"ftp://kde.org/dir"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp no slash"
argument_list|)
operator|<<
literal|"ftp://kde.org/dir"
operator|<<
literal|"ftp://kde.org/dir"
operator|<<
literal|"ftp://kde.org/"
operator|<<
literal|"ftp://kde.org/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp slash"
argument_list|)
operator|<<
literal|"ftp://kde.org/dir/"
operator|<<
literal|"ftp://kde.org/dir"
operator|<<
literal|"ftp://kde.org/dir/"
operator|<<
literal|"ftp://kde.org/dir"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp_two_slashes"
argument_list|)
operator|<<
literal|"ftp://kde.org/dir//"
operator|<<
literal|"ftp://kde.org/dir"
operator|<<
literal|"ftp://kde.org/dir//"
operator|<<
literal|"ftp://kde.org/dir"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file slash"
argument_list|)
operator|<<
literal|"file:///dir/"
operator|<<
literal|"file:///dir"
operator|<<
literal|"file:///dir/"
operator|<<
literal|"file:///dir"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file no slash"
argument_list|)
operator|<<
literal|"file:///dir"
operator|<<
literal|"file:///dir"
operator|<<
literal|"file:///"
operator|<<
literal|"file:///"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file root"
argument_list|)
operator|<<
literal|"file:///"
operator|<<
literal|"file:///"
operator|<<
literal|"file:///"
operator|<<
literal|"file:///"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file_root_manyslashes"
argument_list|)
operator|<<
literal|"file://///"
operator|<<
literal|"file:///"
operator|<<
literal|"file://///"
operator|<<
literal|"file:///"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no path"
argument_list|)
operator|<<
literal|"remote://"
operator|<<
literal|"remote://"
operator|<<
literal|"remote://"
operator|<<
literal|"remote://"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stripTrailingSlash
name|void
name|tst_QUrl
operator|::
name|stripTrailingSlash
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedStrip
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedDir
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedDirStrip
argument_list|)
expr_stmt|;
name|QUrl
name|u
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
argument_list|,
name|expectedStrip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
argument_list|,
name|expectedDir
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|RemoveFilename
operator||
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
argument_list|,
name|expectedDirStrip
argument_list|)
expr_stmt|;
comment|// Same thing, using QUrl::adjusted()
name|QCOMPARE
argument_list|(
name|u
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedStrip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedDir
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|RemoveFilename
operator||
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedDirStrip
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hosts_data
name|void
name|tst_QUrl
operator|::
name|hosts_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http:///file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http:/file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
comment|// numeric hostnames -> decoded as IPv4 as per inet_aton(3)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http://123/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://123/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"0.0.0.123"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http://456/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://456/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"0.0.1.200"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http://1000/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://1000/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"0.0.3.232"
argument_list|)
expr_stmt|;
comment|// IP literals
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-ip-literal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://1.2.3.4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-ip-literal-with-port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://1.2.3.4:80"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::1]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-with-port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::1]:80"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"long-ipv6-literal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[2001:200:0:8002:203:47ff:fea5:3085]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2001:200:0:8002:203:47ff:fea5:3085"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"long-ipv6-literal-with-port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[2001:200:0:8002:203:47ff:fea5:3085]:80"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2001:200:0:8002:203:47ff:fea5:3085"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-v4compat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::255.254.253.252]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::255.254.253.252"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-v4mapped"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:255.254.253.252]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::ffff:255.254.253.252"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-v4mapped-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:fffe:fdfc]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::ffff:255.254.253.252"
argument_list|)
expr_stmt|;
comment|// no embedded v4 unless the cases above
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-v4decoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[1000::ffff:127.128.129.1]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1000::ffff:7f80:8101"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"long-ipv6-literal-v4decoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[fec0:8000::8002:1000:ffff:200.100.50.250]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fec0:8000:0:8002:1000:ffff:c864:32fa"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"longer-ipv6-literal-v4decoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[fec0:8000:4000:8002:1000:ffff:200.100.50.250]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fec0:8000:4000:8002:1000:ffff:c864:32fa"
argument_list|)
expr_stmt|;
comment|// normal hostnames
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://intern"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"intern"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt-project.org"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"qt-project.org"
argument_list|)
expr_stmt|;
comment|// IDN hostnames
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn"
argument_list|)
operator|<<
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://\345r.no"
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"\345r.no"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-ace"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://xn--r-1fa.no"
argument_list|)
operator|<<
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"\345r.no"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hosts
name|void
name|tst_QUrl
operator|::
name|hosts
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|QUrl
argument_list|(
name|url
argument_list|)
operator|.
name|host
argument_list|()
argument_list|,
literal|"host"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hostFlags_data
name|void
name|tst_QUrl
operator|::
name|hostFlags_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
operator|::
name|FormattingOptions
argument_list|>
argument_list|(
literal|"options"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedHost"
argument_list|)
expr_stmt|;
name|QString
name|swedish
init|=
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.rÃ¤ksmÃ¶rgÃ¥s.se/pub?a=b&a=dÃ¸&a=f#vrÃ¦l"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"se_fullydecoded"
argument_list|)
operator|<<
name|swedish
operator|<<
name|QUrl
operator|::
name|FormattingOptions
argument_list|(
name|QUrl
operator|::
name|FullyDecoded
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"www.rÃ¤ksmÃ¶rgÃ¥s.se"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"se_fullyencoded"
argument_list|)
operator|<<
name|swedish
operator|<<
name|QUrl
operator|::
name|FormattingOptions
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"www.xn--rksmrgs-5wao1o.se"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"se_prettydecoded"
argument_list|)
operator|<<
name|swedish
operator|<<
name|QUrl
operator|::
name|FormattingOptions
argument_list|(
name|QUrl
operator|::
name|PrettyDecoded
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"www.rÃ¤ksmÃ¶rgÃ¥s.se"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"se_encodespaces"
argument_list|)
operator|<<
name|swedish
operator|<<
name|QUrl
operator|::
name|FormattingOptions
argument_list|(
name|QUrl
operator|::
name|EncodeSpaces
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"www.rÃ¤ksmÃ¶rgÃ¥s.se"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hostFlags
name|void
name|tst_QUrl
operator|::
name|hostFlags
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
operator|::
name|FormattingOptions
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedHost
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|(
name|options
argument_list|)
argument_list|,
name|expectedHost
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPort
name|void
name|tst_QUrl
operator|::
name|setPort
parameter_list|()
block|{
block|{
name|QUrl
name|url
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//a:80"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
literal|65536
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"out of range"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toEncoded_data
name|void
name|tst_QUrl
operator|::
name|toEncoded_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
operator|::
name|FormattingOptions
argument_list|>
argument_list|(
literal|"options"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file:///dir/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:///dir/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|FormattingOptions
argument_list|(
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:///dir"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toEncoded
name|void
name|tst_QUrl
operator|::
name|toEncoded
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
operator|::
name|FormattingOptions
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|url
argument_list|)
operator|.
name|toEncoded
argument_list|(
name|options
argument_list|)
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setAuthority_data
name|void
name|tst_QUrl
operator|::
name|setAuthority_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"authority"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Plain auth"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"62.70.27.22:21"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//62.70.27.22:21"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Yet another plain auth"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"192.168.1.1:21"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//192.168.1.1:21"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"192.168.1.1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//192.168.1.1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/full hostname without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku.troll.no"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku.troll.no"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/hostname without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/full hostname that ends with number, without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku.troll.no.2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku.troll.no.2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/hostname that ends with number, without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Empty auth"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setAuthority
name|void
name|tst_QUrl
operator|::
name|setAuthority
parameter_list|()
block|{
name|QUrl
name|u
decl_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|authority
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|u
operator|.
name|setAuthority
argument_list|(
name|authority
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setEmptyAuthority_data
name|void
name|tst_QUrl
operator|::
name|setEmptyAuthority_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"authority"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedUrlString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null host and authority"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty host and authority"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setEmptyAuthority
name|void
name|tst_QUrl
operator|::
name|setEmptyAuthority
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|authority
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedUrlString
argument_list|)
expr_stmt|;
name|QUrl
name|u
decl_stmt|;
name|u
operator|.
name|setHost
argument_list|(
name|host
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedUrlString
argument_list|)
expr_stmt|;
name|u
operator|.
name|setAuthority
argument_list|(
name|authority
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedUrlString
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|tst_QUrl
operator|::
name|clear
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
argument_list|,
name|url2
argument_list|)
expr_stmt|;
name|url
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|!=
name|url2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|binaryData_data
name|void
name|tst_QUrl
operator|::
name|binaryData_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username"
argument_list|)
operator|<<
literal|"http://%01%0D%0A%7F@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-at"
argument_list|)
operator|<<
literal|"http://abc%40_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-nul"
argument_list|)
operator|<<
literal|"http://abc%00_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-colon"
argument_list|)
operator|<<
literal|"http://abc%3A_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-nonutf8"
argument_list|)
operator|<<
literal|"http://abc%E1_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password"
argument_list|)
operator|<<
literal|"http://user:%01%0D%0A%7F@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-at"
argument_list|)
operator|<<
literal|"http://user:abc%40_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-nul"
argument_list|)
operator|<<
literal|"http://user:abc%00_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-nonutf8"
argument_list|)
operator|<<
literal|"http://user:abc%E1_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file"
argument_list|)
operator|<<
literal|"http://foo/%01%0D%0A%7F"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-nul"
argument_list|)
operator|<<
literal|"http://foo/abc%00_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-hash"
argument_list|)
operator|<<
literal|"http://foo/abc%23_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-question"
argument_list|)
operator|<<
literal|"http://foo/abc%3F_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/abc%E1_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-slash"
argument_list|)
operator|<<
literal|"http://foo/abc%2F_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref"
argument_list|)
operator|<<
literal|"http://foo/file#a%01%0D%0A%7F"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref-nul"
argument_list|)
operator|<<
literal|"http://foo/file#abc%00_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref-question"
argument_list|)
operator|<<
literal|"http://foo/file#abc?_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/file#abc%E1_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-value"
argument_list|)
operator|<<
literal|"http://foo/query?foo=%01%0D%0A%7F"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-value-nul"
argument_list|)
operator|<<
literal|"http://foo/query?foo=abc%00_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-value-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/query?foo=abc%E1_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-name"
argument_list|)
operator|<<
literal|"http://foo/query/a%01%0D%0A%7Fz=foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-name-nul"
argument_list|)
operator|<<
literal|"http://foo/query/abc%00_def=foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-name-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/query/abc%E1_def=foo"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|binaryData
name|void
name|tst_QUrl
operator|::
name|binaryData
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QUrl
name|u
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|url
operator|.
name|toUtf8
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|u
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|u
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|url2
init|=
name|QString
operator|::
name|fromUtf8
argument_list|(
name|u
operator|.
name|toEncoded
argument_list|()
argument_list|)
decl_stmt|;
comment|//QCOMPARE(url2.length(), url.length());
name|QCOMPARE
argument_list|(
name|url2
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromUserInput_data
name|void
name|tst_QUrl
operator|::
name|fromUserInput_data
parameter_list|()
block|{
comment|//
comment|// most of this test is:
comment|//  Copyright (C) Research In Motion Limited 2009. All rights reserved.
comment|// Distributed under the BSD license.
comment|// See qurl.cpp
comment|//
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"guessUrlFromString"
argument_list|)
expr_stmt|;
comment|// Null
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QUrl
argument_list|()
expr_stmt|;
comment|// File
name|QDirIterator
name|it
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|c
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"file-%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
operator|++
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|it
operator|.
name|filePath
argument_list|()
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|it
operator|.
name|filePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// basic latin1
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc3\xa5.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://\xc3\xa5.com/"
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-0b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc3\xa5.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://%C3%A5.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-0c"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc3\xa5.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://xn--5ca.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
comment|// unicode
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xce\xbb.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://\xce\xbb.com/"
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-1b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xce\xbb.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://%CE%BB.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-1c"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xce\xbb.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://xn--wxa.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
comment|// no scheme
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-0"
argument_list|)
operator|<<
literal|"example.org"
operator|<<
name|QUrl
argument_list|(
literal|"http://example.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-1"
argument_list|)
operator|<<
literal|"www.example.org"
operator|<<
name|QUrl
argument_list|(
literal|"http://www.example.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-2"
argument_list|)
operator|<<
literal|"ftp.example.org"
operator|<<
name|QUrl
argument_list|(
literal|"ftp://ftp.example.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-3"
argument_list|)
operator|<<
literal|"hostname"
operator|<<
name|QUrl
argument_list|(
literal|"http://hostname"
argument_list|)
expr_stmt|;
comment|// no host
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nohost-1"
argument_list|)
operator|<<
literal|"http://"
operator|<<
name|QUrl
argument_list|(
literal|"http://"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nohost-2"
argument_list|)
operator|<<
literal|"smb:"
operator|<<
name|QUrl
argument_list|(
literal|"smb:"
argument_list|)
expr_stmt|;
comment|// QUrl's tolerant parser should already handle this
name|QTest
operator|::
name|newRow
argument_list|(
literal|"not-encoded-0"
argument_list|)
operator|<<
literal|"http://example.org/test page.html"
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.org/test%20page.html"
argument_list|)
expr_stmt|;
comment|// Make sure the :80, i.e. port doesn't screw anything up
name|QUrl
name|portUrl
argument_list|(
literal|"http://example.org"
argument_list|)
decl_stmt|;
name|portUrl
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-0"
argument_list|)
operator|<<
literal|"example.org:80"
operator|<<
name|portUrl
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-1"
argument_list|)
operator|<<
literal|"http://example.org:80"
operator|<<
name|portUrl
expr_stmt|;
name|portUrl
operator|.
name|setPath
argument_list|(
literal|"/path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-2"
argument_list|)
operator|<<
literal|"example.org:80/path"
operator|<<
name|portUrl
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-3"
argument_list|)
operator|<<
literal|"http://example.org:80/path"
operator|<<
name|portUrl
expr_stmt|;
comment|// mailto doesn't have a ://, but is valid
name|QUrl
name|mailto
argument_list|(
literal|"ben@example.net"
argument_list|)
decl_stmt|;
name|mailto
operator|.
name|setScheme
argument_list|(
literal|"mailto"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto"
argument_list|)
operator|<<
literal|"mailto:ben@example.net"
operator|<<
name|mailto
expr_stmt|;
comment|// misc
name|QTest
operator|::
name|newRow
argument_list|(
literal|"localhost-1"
argument_list|)
operator|<<
literal|"localhost:80"
operator|<<
name|QUrl
argument_list|(
literal|"http://localhost:80"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"spaces-0"
argument_list|)
operator|<<
literal|"  http://example.org/test page.html "
operator|<<
name|QUrl
argument_list|(
literal|"http://example.org/test%20page.html"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"trash-0"
argument_list|)
operator|<<
literal|"example.org/test?someData=42%&someOtherData=abcde#anchor"
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.org/test?someData=42%25&someOtherData=abcde#anchor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"other-scheme-0"
argument_list|)
operator|<<
literal|"spotify:track:0hO542doVbfGDAGQULMORT"
operator|<<
name|QUrl
argument_list|(
literal|"spotify:track:0hO542doVbfGDAGQULMORT"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"other-scheme-1"
argument_list|)
operator|<<
literal|"weirdscheme:80:otherstuff"
operator|<<
name|QUrl
argument_list|(
literal|"weirdscheme:80:otherstuff"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"number-path-0"
argument_list|)
operator|<<
literal|"tel:2147483648"
operator|<<
name|QUrl
argument_list|(
literal|"tel:2147483648"
argument_list|)
expr_stmt|;
comment|// FYI: The scheme in the resulting url user
name|QUrl
name|authUrl
argument_list|(
literal|"user:pass@domain.com"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"misc-1"
argument_list|)
operator|<<
literal|"user:pass@domain.com"
operator|<<
name|authUrl
expr_stmt|;
comment|// FTP with double slashes in path
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp-double-slash-1"
argument_list|)
operator|<<
literal|"ftp.example.com//path"
operator|<<
name|QUrl
argument_list|(
literal|"ftp://ftp.example.com/%2Fpath"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp-double-slash-1"
argument_list|)
operator|<<
literal|"ftp://ftp.example.com//path"
operator|<<
name|QUrl
argument_list|(
literal|"ftp://ftp.example.com/%2Fpath"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromUserInput
name|void
name|tst_QUrl
operator|::
name|fromUserInput
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|guessUrlFromString
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromUserInput
argument_list|(
name|string
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
argument_list|,
name|guessUrlFromString
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fileName_data
name|void
name|tst_QUrl
operator|::
name|fileName_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedDirPath"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedPrettyDecodedFileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expectedFullyDecodedFileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fromDocu"
argument_list|)
operator|<<
literal|"http://qt-project.org/support/file.html"
operator|<<
literal|"/support/"
operator|<<
literal|"file.html"
operator|<<
literal|"file.html"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"absoluteFile"
argument_list|)
operator|<<
literal|"file:///temp/tmp.txt"
operator|<<
literal|"/temp/"
operator|<<
literal|"tmp.txt"
operator|<<
literal|"tmp.txt"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"absoluteDir"
argument_list|)
operator|<<
literal|"file:///temp/"
operator|<<
literal|"/temp/"
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"absoluteInRoot"
argument_list|)
operator|<<
literal|"file:///temp"
operator|<<
literal|"/"
operator|<<
literal|"temp"
operator|<<
literal|"temp"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"relative"
argument_list|)
operator|<<
literal|"temp/tmp.txt"
operator|<<
literal|"temp/"
operator|<<
literal|"tmp.txt"
operator|<<
literal|"tmp.txt"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"relativeNoSlash"
argument_list|)
operator|<<
literal|"tmp.txt"
operator|<<
name|QString
argument_list|()
operator|<<
literal|"tmp.txt"
operator|<<
literal|"tmp.txt"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded"
argument_list|)
operator|<<
literal|"print:/specials/Print%20To%20File%20(PDF%252FAcrobat)"
operator|<<
literal|"/specials/"
operator|<<
literal|"Print To File (PDF%252FAcrobat)"
operator|<<
literal|"Print To File (PDF%2FAcrobat)"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fileName
name|void
name|tst_QUrl
operator|::
name|fileName
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedDirPath
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedPrettyDecodedFileName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expectedFullyDecodedFileName
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|adjusted
argument_list|(
name|QUrl
operator|::
name|RemoveFilename
argument_list|)
operator|.
name|path
argument_list|()
argument_list|,
name|expectedDirPath
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fileName
argument_list|(
name|QUrl
operator|::
name|PrettyDecoded
argument_list|)
argument_list|,
name|expectedPrettyDecodedFileName
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fileName
argument_list|(
name|QUrl
operator|::
name|FullyDecoded
argument_list|)
argument_list|,
name|expectedFullyDecodedFileName
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// This is a regression test for a previously fixed bug where isEmpty didn't
end_comment
begin_comment
comment|// work for an encoded URL that was yet to be decoded.  The test checks that
end_comment
begin_comment
comment|// isEmpty works for an encoded URL both after and before decoding.
end_comment
begin_function
DECL|function|isEmptyForEncodedUrl
name|void
name|tst_QUrl
operator|::
name|isEmptyForEncodedUrl
parameter_list|()
block|{
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// This test verifies that the QUrl::toEncoded() does not rely on the
end_comment
begin_comment
comment|// potentially uninitialized unencoded path.
end_comment
begin_function
DECL|function|toEncodedNotUsingUninitializedPath
name|void
name|tst_QUrl
operator|::
name|toEncodedNotUsingUninitializedPath
parameter_list|()
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedPath
argument_list|(
literal|"/test.txt"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"example.com"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"//example.com/test.txt"
argument_list|)
expr_stmt|;
name|url
operator|.
name|path
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"//example.com/test.txt"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolvedWithAbsoluteSchemes
name|void
name|tst_QUrl
operator|::
name|resolvedWithAbsoluteSchemes
parameter_list|()
specifier|const
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|relative
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|expected
argument_list|)
expr_stmt|;
comment|/* Check our input. */
name|QVERIFY
argument_list|(
name|relative
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|base
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|expected
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QUrl
name|result
argument_list|(
name|base
operator|.
name|resolved
argument_list|(
name|relative
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|result
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolvedWithAbsoluteSchemes_data
name|void
name|tst_QUrl
operator|::
name|resolvedWithAbsoluteSchemes_data
parameter_list|()
specifier|const
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"base"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"relative"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Absolute file:/// against absolute FTP."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"file:///foo/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"ftp://example.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"ftp://example.com/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Absolute file:/// against absolute HTTP."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"file:///foo/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Absolute file:/// against data scheme."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"file:///foo/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"data:application/xml,%3Ce%2F%3E"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"data:application/xml,%3Ce%2F%3E"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Resolve with base url and port."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.foo.com:8080/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"newfile.html"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.foo.com:8080/newfile.html"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Resolve with relative path"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/a/../?my=query&your=query#yougotfragged"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/?my=query&your=query#yougotfragged"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyAuthorityRemovesExistingAuthority_data
name|void
name|tst_QUrl
operator|::
name|emptyAuthorityRemovesExistingAuthority_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"input"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"regular"
argument_list|)
operator|<<
literal|"foo://example.com/something"
operator|<<
literal|"foo:/something"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
literal|"foo:///something"
operator|<<
literal|"foo:/something"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyAuthorityRemovesExistingAuthority
name|void
name|tst_QUrl
operator|::
name|emptyAuthorityRemovesExistingAuthority
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|QUrl
name|orig
init|=
name|url
decl_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|authority
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|!=
name|orig
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
argument_list|,
name|QUrl
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|acceptEmptyAuthoritySegments
name|void
name|tst_QUrl
operator|::
name|acceptEmptyAuthoritySegments
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
literal|"remote://"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"remote://"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify that foo:///bar is not mangled to foo:/bar nor vice-versa
name|QString
name|foo_triple_bar
argument_list|(
literal|"foo:///bar"
argument_list|)
decl_stmt|,
name|foo_uni_bar
argument_list|(
literal|"foo:/bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QUrl
argument_list|(
name|foo_triple_bar
argument_list|)
operator|!=
name|QUrl
argument_list|(
name|foo_uni_bar
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_triple_bar
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|foo_triple_bar
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_triple_bar
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|foo_triple_bar
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_uni_bar
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|foo_uni_bar
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_uni_bar
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|foo_uni_bar
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_triple_bar
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|foo_triple_bar
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_triple_bar
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|foo_triple_bar
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_uni_bar
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|foo_uni_bar
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|foo_uni_bar
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|foo_uni_bar
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
comment|// However, file:/bar is the same as file:///bar
name|QString
name|file_triple_bar
argument_list|(
literal|"file:///bar"
argument_list|)
decl_stmt|,
name|file_uni_bar
argument_list|(
literal|"file:/bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QUrl
argument_list|(
name|file_triple_bar
argument_list|)
operator|==
name|QUrl
argument_list|(
name|file_uni_bar
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|file_uni_bar
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|file_triple_bar
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|file_uni_bar
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|file_triple_bar
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|effectiveTLDs_data
name|void
name|tst_QUrl
operator|::
name|effectiveTLDs_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"domain"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"TLD"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes0"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://test.co.uk"
argument_list|)
operator|<<
literal|".co.uk"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes1"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://test.com"
argument_list|)
operator|<<
literal|".com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes2"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.test.de"
argument_list|)
operator|<<
literal|".de"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes3"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://test.ulm.museum"
argument_list|)
operator|<<
literal|".ulm.museum"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes4"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.com.krodsherad.no"
argument_list|)
operator|<<
literal|".krodsherad.no"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes5"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.co.uk.1.bg"
argument_list|)
operator|<<
literal|".1.bg"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes6"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.com.com.cn"
argument_list|)
operator|<<
literal|".com.cn"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes7"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.test.org.ws"
argument_list|)
operator|<<
literal|".org.ws"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes9"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.com.co.uk.wallonie.museum"
argument_list|)
operator|<<
literal|".wallonie.museum"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes10"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.com.evje-og-hornnes.no"
argument_list|)
operator|<<
literal|".evje-og-hornnes.no"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes11"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.bla.kamijima.ehime.jp"
argument_list|)
operator|<<
literal|".kamijima.ehime.jp"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes12"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.bla.kakuda.miyagi.jp"
argument_list|)
operator|<<
literal|".kakuda.miyagi.jp"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes13"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://mypage.betainabox.com"
argument_list|)
operator|<<
literal|".betainabox.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes14"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://mypage.rhcloud.com"
argument_list|)
operator|<<
literal|".rhcloud.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes15"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://mypage.int.az"
argument_list|)
operator|<<
literal|".int.az"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|effectiveTLDs
name|void
name|tst_QUrl
operator|::
name|effectiveTLDs
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|domain
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|TLD
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|domain
operator|.
name|topLevelDomain
argument_list|(
name|QUrl
operator|::
name|PrettyDecoded
argument_list|)
argument_list|,
name|TLD
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|domain
operator|.
name|topLevelDomain
argument_list|(
name|QUrl
operator|::
name|FullyDecoded
argument_list|)
argument_list|,
name|TLD
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|lowercasesScheme
name|void
name|tst_QUrl
operator|::
name|lowercasesScheme
parameter_list|()
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setScheme
argument_list|(
literal|"HELLO"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|componentEncodings_data
name|void
name|tst_QUrl
operator|::
name|componentEncodings_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"encoding"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"userName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"userInfo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"authority"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"query"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fragment"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toString"
argument_list|)
expr_stmt|;
specifier|const
name|int
name|MostDecoded
init|=
name|QUrl
operator|::
name|DecodeReserved
decl_stmt|;
comment|// the most decoded mode without being fully decoded
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QUrl
argument_list|()
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
expr_stmt|;
comment|// hostname cannot contain spaces
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-space"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://user name:pass word@host/path name?query value#fragment value"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|EncodeSpaces
argument_list|)
operator|<<
literal|"user%20name"
operator|<<
literal|"pass%20word"
operator|<<
literal|"user%20name:pass%20word"
operator|<<
literal|"host"
operator|<<
literal|"user%20name:pass%20word@host"
operator|<<
literal|"/path%20name"
operator|<<
literal|"query%20value"
operator|<<
literal|"fragment%20value"
operator|<<
literal|"x://user%20name:pass%20word@host/path%20name?query%20value#fragment%20value"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decoded-space"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://user%20name:pass%20word@host/path%20name?query%20value#fragment%20value"
argument_list|)
operator|<<
name|MostDecoded
operator|<<
literal|"user name"
operator|<<
literal|"pass word"
operator|<<
literal|"user name:pass word"
operator|<<
literal|"host"
operator|<<
literal|"user name:pass word@host"
operator|<<
literal|"/path name"
operator|<<
literal|"query value"
operator|<<
literal|"fragment value"
operator|<<
literal|"x://user name:pass word@host/path name?query value#fragment value"
expr_stmt|;
comment|// binary data is always encoded
comment|// this is also testing non-UTF8 data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"binary"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%c0%00:%c1%01@host/%c2%02?%c3%03#%d4%04"
argument_list|)
operator|<<
name|MostDecoded
operator|<<
literal|"%C0%00"
operator|<<
literal|"%C1%01"
operator|<<
literal|"%C0%00:%C1%01"
operator|<<
literal|"host"
operator|<<
literal|"%C0%00:%C1%01@host"
operator|<<
literal|"/%C2%02"
operator|<<
literal|"%C3%03"
operator|<<
literal|"%D4%04"
operator|<<
literal|"x://%C0%00:%C1%01@host/%C2%02?%C3%03#%D4%04"
expr_stmt|;
comment|// unicode tests
comment|// hostnames can participate in this test, but we need a top-level domain that accepts Unicode
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-unicode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"x://\xc2\x80:\xc3\x90@smÃ¸rbrÃ¸d.example.no/\xe0\xa0\x80?\xf0\x90\x80\x80#Ã©"
argument_list|)
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|EncodeUnicode
argument_list|)
operator|<<
literal|"%C2%80"
operator|<<
literal|"%C3%90"
operator|<<
literal|"%C2%80:%C3%90"
operator|<<
literal|"xn--smrbrd-cyad.example.no"
operator|<<
literal|"%C2%80:%C3%90@xn--smrbrd-cyad.example.no"
operator|<<
literal|"/%E0%A0%80"
operator|<<
literal|"%F0%90%80%80"
operator|<<
literal|"%C3%A9"
operator|<<
literal|"x://%C2%80:%C3%90@xn--smrbrd-cyad.example.no/%E0%A0%80?%F0%90%80%80#%C3%A9"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decoded-unicode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%C2%80:%C3%90@XN--SMRBRD-cyad.example.NO/%E0%A0%80?%F0%90%80%80#%C3%A9"
argument_list|)
operator|<<
name|MostDecoded
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc2\x80"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc3\x90"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc2\x80:\xc3\x90"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"smÃ¸rbrÃ¸d.example.no"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc2\x80:\xc3\x90@smÃ¸rbrÃ¸d.example.no"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"/\xe0\xa0\x80"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xf0\x90\x80\x80"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã©"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"x://\xc2\x80:\xc3\x90@smÃ¸rbrÃ¸d.example.no/\xe0\xa0\x80?\xf0\x90\x80\x80#Ã©"
argument_list|)
expr_stmt|;
comment|//    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
comment|// these are always decoded
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decoded-unreserved"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%61:%71@%41%30%2eexample%2ecom/%7e?%5f#%51"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
operator|<<
literal|"a"
operator|<<
literal|"q"
operator|<<
literal|"a:q"
operator|<<
literal|"a0.example.com"
operator|<<
literal|"a:q@a0.example.com"
operator|<<
literal|"/~"
operator|<<
literal|"_"
operator|<<
literal|"Q"
operator|<<
literal|"x://a:q@a0.example.com/~?_#Q"
expr_stmt|;
comment|//    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
comment|//                  / "*" / "+" / "," / ";" / "="
comment|// these are always left alone
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decoded-subdelims"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://!$&:'()@host/*+,?$=(+)#;="
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
operator|<<
literal|"!$&"
operator|<<
literal|"'()"
operator|<<
literal|"!$&:'()"
operator|<<
literal|"host"
operator|<<
literal|"!$&:'()@host"
operator|<<
literal|"/*+,"
operator|<<
literal|"$=(+)"
operator|<<
literal|";="
operator|<<
literal|"x://!$&:'()@host/*+,?$=(+)#;="
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-subdelims"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%21%24%26:%27%28%29@host/%2a%2b%2c?%26=%26&%3d=%3d#%3b%3d"
argument_list|)
operator|<<
name|MostDecoded
operator|<<
literal|"%21%24%26"
operator|<<
literal|"%27%28%29"
operator|<<
literal|"%21%24%26:%27%28%29"
operator|<<
literal|"host"
operator|<<
literal|"%21%24%26:%27%28%29@host"
operator|<<
literal|"/%2A%2B%2C"
operator|<<
literal|"%26=%26&%3D=%3D"
operator|<<
literal|"%3B%3D"
operator|<<
literal|"x://%21%24%26:%27%28%29@host/%2A%2B%2C?%26=%26&%3D=%3D#%3B%3D"
expr_stmt|;
comment|//    gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"
comment|// these are the separators between fields
comment|// they must appear encoded in certain positions in the full URL, no exceptions
comment|// when in those positions, they appear decoded in the isolated parts
comment|// in other positions and the other delimiters are always left untransformed
comment|// 1) test the delimiters that must appear encoded
comment|//    (if they were decoded, they'd would change the URL parsing)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-gendelims-changing"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%5b%3a%2f%3f%23%40%5d:%5b%2f%3f%23%40%5d@host/%2f%3f%23?%23"
argument_list|)
operator|<<
name|MostDecoded
operator|<<
literal|"[:/?#@]"
operator|<<
literal|"[/?#@]"
operator|<<
literal|"[%3A/?#@]:[/?#@]"
operator|<<
literal|"host"
operator|<<
literal|"%5B%3A/?#%40%5D:%5B/?#%40%5D@host"
operator|<<
literal|"/%2F?#"
operator|<<
literal|"#"
operator|<<
literal|""
operator|<<
literal|"x://%5B%3A%2F%3F%23%40%5D:%5B%2F%3F%23%40%5D@host/%2F%3F%23?%23"
expr_stmt|;
comment|// 2) test that the other delimiters remain decoded
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decoded-gendelims-unchanging"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://::@host/:@/[]?:/?@[]?#:/?@[]"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
operator|<<
literal|""
operator|<<
literal|":"
operator|<<
literal|"::"
operator|<<
literal|"host"
operator|<<
literal|"::@host"
operator|<<
literal|"/:@/[]"
operator|<<
literal|":/?@[]?"
operator|<<
literal|":/?@[]"
operator|<<
literal|"x://::@host/:@/[]?:/?@[]?#:/?@[]"
expr_stmt|;
comment|// 3) and test that the same encoded sequences remain encoded
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-gendelims-unchanging"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://:%3A@host/%3A%40%5B%5D?%3A%2F%3F%40%5B%5D#%23%3A%2F%3F%40%5B%5D"
argument_list|)
operator|<<
name|MostDecoded
operator|<<
literal|""
operator|<<
literal|"%3A"
operator|<<
literal|":%3A"
operator|<<
literal|"host"
operator|<<
literal|":%3A@host"
operator|<<
literal|"/%3A%40%5B%5D"
operator|<<
literal|"%3A%2F%3F%40%5B%5D"
operator|<<
literal|"%23%3A%2F%3F%40%5B%5D"
operator|<<
literal|"x://:%3A@host/%3A%40%5B%5D?%3A%2F%3F%40%5B%5D#%23%3A%2F%3F%40%5B%5D"
expr_stmt|;
comment|// test the query
comment|// since QUrl doesn't know what chars the user wants to use for the pair and value delimiters,
comment|// it keeps the delimiters alone except for "#", which must always be encoded.
comment|// In the following test, all delimiter characters appear both as encoded and as decoded (except for "#")
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unencoded-delims-query"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"?!$()*+,;=:/?[]@%21%24%26%27%28%29%2a%2b%2c%2f%3a%3b%3d%3f%40%5b%5d"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|"!$()*+,;=:/?[]@%21%24%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D"
operator|<<
name|QString
argument_list|()
operator|<<
literal|"?!$()*+,;=:/?[]@%21%24%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"undecoded-delims-query"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"?!$()*+,;=:/?[]@%21%24%26%27%28%29%2a%2b%2c%2f%3a%3b%3d%3f%40%5b%5d"
argument_list|)
operator|<<
name|MostDecoded
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|"!$()*+,;=:/?[]@%21%24%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D"
operator|<<
name|QString
argument_list|()
operator|<<
literal|"?!$()*+,;=:/?[]@%21%24%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D"
expr_stmt|;
comment|// reserved characters:  '"' / "<" / ">" / "^" / "\" / "{" / "|" "}"
comment|// the RFC does not allow them undecoded anywhere, but we do
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded-reserved"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://\"<>^\\{|}:\"<>^\\{|}@host/\"<>^\\{|}?\"<>^\\{|}#\"<>^\\{|}"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|FullyEncoded
argument_list|)
operator|<<
literal|"%22%3C%3E%5E%5C%7B%7C%7D"
operator|<<
literal|"%22%3C%3E%5E%5C%7B%7C%7D"
operator|<<
literal|"%22%3C%3E%5E%5C%7B%7C%7D:%22%3C%3E%5E%5C%7B%7C%7D"
operator|<<
literal|"host"
operator|<<
literal|"%22%3C%3E%5E%5C%7B%7C%7D:%22%3C%3E%5E%5C%7B%7C%7D@host"
operator|<<
literal|"/%22%3C%3E%5E%5C%7B%7C%7D"
operator|<<
literal|"%22%3C%3E%5E%5C%7B%7C%7D"
operator|<<
literal|"%22%3C%3E%5E%5C%7B%7C%7D"
operator|<<
literal|"x://%22%3C%3E%5E%5C%7B%7C%7D:%22%3C%3E%5E%5C%7B%7C%7D@host/%22%3C%3E%5E%5C%7B%7C%7D"
literal|"?%22%3C%3E%5E%5C%7B%7C%7D#%22%3C%3E%5E%5C%7B%7C%7D"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"decoded-reserved"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%22%3C%3E%5E%5C%7B%7C%7D:%22%3C%3E%5E%5C%7B%7C%7D@host"
literal|"/%22%3C%3E%5E%5C%7B%7C%7D?%22%3C%3E%5E%5C%7B%7C%7D#%22%3C%3E%5E%5C%7B%7C%7D"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|DecodeReserved
argument_list|)
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}:\"<>^\\{|}"
operator|<<
literal|"host"
operator|<<
literal|"\"<>^\\{|}:\"<>^\\{|}@host"
operator|<<
literal|"/\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"x://\"<>^\\{|}:\"<>^\\{|}@host/\"<>^\\{|}?\"<>^\\{|}#\"<>^\\{|}"
expr_stmt|;
comment|// Beauty is in the eye of the beholder
comment|// Test PrettyDecoder against our expectations
comment|// spaces and unicode are considered pretty and are decoded
comment|// this includes hostnames
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pretty-spaces-unicode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%20%c3%a9:%c3%a9%20@XN--SMRBRD-cyad.example.NO/%c3%a9%20?%20%c3%a9#%c3%a9%20"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|PrettyDecoded
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|" Ã©"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã© "
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|" Ã©:Ã© "
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"smÃ¸rbrÃ¸d.example.no"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|" Ã©:Ã© @smÃ¸rbrÃ¸d.example.no"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"/Ã© "
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|" Ã©"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã© "
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"x:// Ã©:Ã© @smÃ¸rbrÃ¸d.example.no/Ã© ? Ã©#Ã© "
argument_list|)
expr_stmt|;
comment|// the pretty form decodes all unambiguous gen-delims in the individual parts
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pretty-gendelims"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://%5b%3a%40%2f%3f%23%5d:%5b%40%2f%3f%23%5d@host/%3f%23?%23"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|PrettyDecoded
argument_list|)
operator|<<
literal|"[:@/?#]"
operator|<<
literal|"[@/?#]"
operator|<<
literal|"[%3A@/?#]:[@/?#]"
operator|<<
literal|"host"
operator|<<
literal|"%5B%3A%40/?#%5D:%5B%40/?#%5D@host"
operator|<<
literal|"/?#"
operator|<<
literal|"#"
operator|<<
literal|""
operator|<<
literal|"x://%5B%3A%40%2F%3F%23%5D:%5B%40%2F%3F%23%5D@host/%3F%23?%23"
expr_stmt|;
comment|// the pretty form keeps the other characters decoded everywhere
comment|// except when rebuilding the full URL, when we only allow "{}" to remain decoded
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pretty-reserved"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"x://\"<>^\\{|}:\"<>^\\{|}@host/\"<>^\\{|}?\"<>^\\{|}#\"<>^\\{|}"
argument_list|)
operator|<<
name|int
argument_list|(
name|QUrl
operator|::
name|PrettyDecoded
argument_list|)
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}:\"<>^\\{|}"
operator|<<
literal|"host"
operator|<<
literal|"\"<>^\\{|}:\"<>^\\{|}@host"
operator|<<
literal|"/\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"\"<>^\\{|}"
operator|<<
literal|"x://%22%3C%3E%5E%5C%7B%7C%7D:%22%3C%3E%5E%5C%7B%7C%7D@host/%22%3C%3E%5E%5C%7B%7C%7D"
literal|"?%22%3C%3E%5E%5C%7B%7C%7D#%22%3C%3E%5E%5C%7B%7C%7D"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|componentEncodings
name|void
name|tst_QUrl
operator|::
name|componentEncodings
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|userInfo
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|authority
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fragment
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toString
argument_list|)
expr_stmt|;
name|QUrl
operator|::
name|ComponentFormattingOptions
name|formatting
argument_list|(
name|encoding
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|userName
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|password
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|userInfo
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|userInfo
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|authority
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|authority
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|query
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|fragment
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|formatting
argument_list|)
argument_list|,
operator|(
operator|(
operator|(
name|QString
argument_list|(
name|toString
argument_list|)
operator|)
operator|)
operator|)
argument_list|)
expr_stmt|;
comment|// the weird () and space is to align the output
if|if
condition|(
name|formatting
operator|==
name|QUrl
operator|::
name|FullyEncoded
condition|)
block|{
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedUserName
argument_list|()
argument_list|,
name|userName
operator|.
name|toUtf8
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedPassword
argument_list|()
argument_list|,
name|password
operator|.
name|toUtf8
argument_list|()
argument_list|)
expr_stmt|;
comment|// no encodedUserInfo
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedHost
argument_list|()
argument_list|,
name|host
operator|.
name|toUtf8
argument_list|()
argument_list|)
expr_stmt|;
comment|// no encodedAuthority
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedPath
argument_list|()
argument_list|,
name|path
operator|.
name|toUtf8
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
argument_list|,
name|query
operator|.
name|toUtf8
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedFragment
argument_list|()
argument_list|,
name|fragment
operator|.
name|toUtf8
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// repeat with the URL we got from toString
name|QUrl
name|url2
argument_list|(
name|toString
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|userName
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|password
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|userInfo
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|userInfo
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|host
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|authority
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|authority
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|path
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|query
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|fragment
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|fragment
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|toString
argument_list|(
name|formatting
argument_list|)
argument_list|,
name|toString
argument_list|)
expr_stmt|;
comment|// and use the comparison operator
name|QCOMPARE
argument_list|(
name|url2
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
end_function
begin_enum
DECL|enum|Component
enum|enum
name|Component
block|{
DECL|enumerator|Scheme
name|Scheme
init|=
literal|0x01
block|,
DECL|enumerator|UserName
name|UserName
init|=
literal|0x02
block|,
DECL|enumerator|Password
name|Password
init|=
literal|0x04
block|,
DECL|enumerator|UserInfo
name|UserInfo
init|=
name|UserName
operator||
name|Password
block|,
DECL|enumerator|Host
name|Host
init|=
literal|0x08
block|,
DECL|enumerator|Port
name|Port
init|=
literal|0x10
block|,
DECL|enumerator|Authority
name|Authority
init|=
name|UserInfo
operator||
name|Host
operator||
name|Port
block|,
DECL|enumerator|Path
name|Path
init|=
literal|0x20
block|,
DECL|enumerator|Hierarchy
name|Hierarchy
init|=
name|Authority
operator||
name|Path
block|,
DECL|enumerator|Query
name|Query
init|=
literal|0x40
block|,
DECL|enumerator|Fragment
name|Fragment
init|=
literal|0x80
block|,
DECL|enumerator|FullUrl
name|FullUrl
init|=
literal|0xff
block|}
enum|;
end_enum
begin_function
DECL|function|setComponents_data
name|void
name|tst_QUrl
operator|::
name|setComponents_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"original"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"component"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"newValue"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"parsingMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isValid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"encoding"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"output"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toString"
argument_list|)
expr_stmt|;
specifier|const
name|int
name|Tolerant
init|=
name|QUrl
operator|::
name|TolerantMode
decl_stmt|;
specifier|const
name|int
name|Strict
init|=
name|QUrl
operator|::
name|StrictMode
decl_stmt|;
specifier|const
name|int
name|Decoded
init|=
name|QUrl
operator|::
name|DecodedMode
decl_stmt|;
specifier|const
name|int
name|PrettyDecoded
init|=
name|QUrl
operator|::
name|PrettyDecoded
decl_stmt|;
specifier|const
name|int
name|FullyDecoded
init|=
name|QUrl
operator|::
name|FullyDecoded
decl_stmt|;
comment|// -- test empty vs null --
comment|// there's no empty-but-present scheme or path
comment|// a URL with an empty scheme is a "URI reference"
comment|// and the path is always non-empty if it's present
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scheme-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Scheme
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"//example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scheme-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Scheme
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"//example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/path"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"http://example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/path"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"http://example.com"
expr_stmt|;
comment|// If the %3A gets decoded to ":", the URL becomes invalid;
comment|// see test path-invalid-1 below
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-%3A-before-slash"
argument_list|)
operator|<<
name|QUrl
argument_list|()
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"c%3A/"
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"c%3A/"
operator|<<
literal|"c%3A/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-doubleslash"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"trash:/"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"//path"
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"/path"
operator|<<
literal|"trash:/path"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-withdotdot"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"file:///tmp"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"//tmp/..///root/."
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"/root"
operator|<<
literal|"file:///root"
expr_stmt|;
comment|// the other fields can be present and be empty
comment|// that is, their delimiters would be present, but there would be nothing to one side
name|QTest
operator|::
name|newRow
argument_list|(
literal|"userinfo-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user:pass@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"http://example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"userinfo-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user:pass@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"http://@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"userinfo-colon"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
literal|":"
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|":"
operator|<<
literal|"http://:@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"http://example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"http://@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-empty-password-nonempty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user:pass@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"http://:pass@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-empty-password-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user:@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"http://:@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user:pass@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"http://user@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user:pass@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"http://user:@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"host-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"foo://example.com/path"
argument_list|)
operator|<<
name|int
argument_list|(
name|Host
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"foo:/path"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"host-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"foo://example.com/path"
argument_list|)
operator|<<
name|int
argument_list|(
name|Host
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"foo:///path"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"authority-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"foo://example.com/path"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"foo:/path"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"authority-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"foo://example.com/path"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"foo:///path"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/?q=foo"
argument_list|)
operator|<<
name|int
argument_list|(
name|Query
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"http://example.com/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/?q=foo"
argument_list|)
operator|<<
name|int
argument_list|(
name|Query
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"http://example.com/?"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment-null"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/#bar"
argument_list|)
operator|<<
name|int
argument_list|(
name|Fragment
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
name|QString
argument_list|()
operator|<<
literal|"http://example.com/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment-empty"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/#bar"
argument_list|)
operator|<<
name|int
argument_list|(
name|Fragment
argument_list|)
operator|<<
literal|""
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|"http://example.com/#"
expr_stmt|;
comment|// -- test some non-valid components --
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-scheme-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Scheme
argument_list|)
operator|<<
literal|"1http"
operator|<<
name|Tolerant
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-scheme-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Scheme
argument_list|)
operator|<<
literal|"http%40"
operator|<<
name|Tolerant
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-scheme-3"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Scheme
argument_list|)
operator|<<
literal|"http%61"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-username-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|"{}"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-username-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|"foo/bar"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-username-3"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|"foo:bar"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-password-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
literal|"{}"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-password-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
literal|"foo/bar"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-password-3"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
literal|"foo:bar"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-userinfo-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
literal|"{}"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-userinfo-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
literal|"foo/bar"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-host-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Host
argument_list|)
operator|<<
literal|"-not-valid-"
operator|<<
name|Tolerant
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-host-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Host
argument_list|)
operator|<<
literal|"%31%30.%30.%30.%31"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-authority-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
literal|"-not-valid-"
operator|<<
name|Tolerant
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-authority-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
literal|"%31%30.%30.%30.%31"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-path-0"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"{}"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-query-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Query
argument_list|)
operator|<<
literal|"{}"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-fragment-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Fragment
argument_list|)
operator|<<
literal|"{}"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
comment|// these test cases are "compound invalid":
comment|// they produces isValid == false, but the original is still available
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-path-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"/relative"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"c:/"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|"c:/"
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-path-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"relative"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|"relative"
operator|<<
literal|""
expr_stmt|;
comment|// -- test bad percent encoding --
comment|// unnecessary to test the scheme, since percent-decoding is not performed in it;
comment|// see tests above
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-username"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|"bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-password"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://user@example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
literal|"bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-userinfo-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
literal|"bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-userinfo-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
literal|"bar%:foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-userinfo-3"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserInfo
argument_list|)
operator|<<
literal|"bar:%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-authority-1"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
literal|"bar%foo@example.org"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-authority-2"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
literal|"bar%:foo@example.org"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-authority-3"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
literal|"bar:%foo@example.org"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-authority-4"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Authority
argument_list|)
operator|<<
literal|"bar:foo@bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-host"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Host
argument_list|)
operator|<<
literal|"bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-path"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"/bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-query"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Query
argument_list|)
operator|<<
literal|"bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bad-percent-fragment"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Fragment
argument_list|)
operator|<<
literal|"bar%foo"
operator|<<
name|Strict
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
comment|// -- test decoded behaviour --
comment|// '%' characters are not permitted in the scheme, this tests that it fails to set anything
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-scheme-encode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Scheme
argument_list|)
operator|<<
literal|"http%61"
operator|<<
name|Decoded
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-encode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|"h%61llo:world"
operator|<<
name|Decoded
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"h%2561llo:world"
operator|<<
literal|"http://h%2561llo%3Aworld@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-encode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
literal|"h%61llo:world@"
operator|<<
name|Decoded
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"h%2561llo:world@"
operator|<<
literal|"http://:h%2561llo:world%40@example.com"
expr_stmt|;
comment|// '%' characters are not permitted in the hostname, these test that it fails to set anything
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-host-encode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Host
argument_list|)
operator|<<
literal|"ex%61mple.com"
operator|<<
name|Decoded
operator|<<
literal|false
operator|<<
name|PrettyDecoded
operator|<<
literal|""
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-encode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/foo"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"/bar%23"
operator|<<
name|Decoded
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"/bar%2523"
operator|<<
literal|"http://example.com/bar%2523"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-encode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/foo?q"
argument_list|)
operator|<<
name|int
argument_list|(
name|Query
argument_list|)
operator|<<
literal|"bar%23"
operator|<<
name|Decoded
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"bar%2523"
operator|<<
literal|"http://example.com/foo?bar%2523"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment-encode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/foo#z"
argument_list|)
operator|<<
name|int
argument_list|(
name|Fragment
argument_list|)
operator|<<
literal|"bar%23"
operator|<<
name|Decoded
operator|<<
literal|true
operator|<<
name|PrettyDecoded
operator|<<
literal|"bar%2523"
operator|<<
literal|"http://example.com/foo#bar%2523"
expr_stmt|;
comment|// force decoding
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-decode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|UserName
argument_list|)
operator|<<
literal|"hello%3Aworld%25"
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|FullyDecoded
operator|<<
literal|"hello:world%"
operator|<<
literal|"http://hello%3Aworld%25@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-decode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com"
argument_list|)
operator|<<
name|int
argument_list|(
name|Password
argument_list|)
operator|<<
literal|"}}>b9o%25kR("
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|FullyDecoded
operator|<<
literal|"}}>b9o%kR("
operator|<<
literal|"http://:%7D%7D%3Eb9o%25kR(@example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-decode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/"
argument_list|)
operator|<<
name|int
argument_list|(
name|Path
argument_list|)
operator|<<
literal|"/bar%25foo"
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|FullyDecoded
operator|<<
literal|"/bar%foo"
operator|<<
literal|"http://example.com/bar%25foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-decode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/foo?qq"
argument_list|)
operator|<<
name|int
argument_list|(
name|Query
argument_list|)
operator|<<
literal|"bar%25foo"
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|FullyDecoded
operator|<<
literal|"bar%foo"
operator|<<
literal|"http://example.com/foo?bar%25foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment-decode"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://example.com/foo#qq"
argument_list|)
operator|<<
name|int
argument_list|(
name|Fragment
argument_list|)
operator|<<
literal|"bar%25foo"
operator|<<
name|Tolerant
operator|<<
literal|true
operator|<<
name|FullyDecoded
operator|<<
literal|"bar%foo"
operator|<<
literal|"http://example.com/foo#bar%25foo"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setComponents
name|void
name|tst_QUrl
operator|::
name|setComponents
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QUrl
name|copy
argument_list|(
name|original
argument_list|)
decl_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|component
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|parsingMode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|newValue
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|output
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|component
condition|)
block|{
case|case
name|Scheme
case|:
comment|// scheme is only parsed in strict mode
name|copy
operator|.
name|setScheme
argument_list|(
name|newValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|scheme
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|Path
case|:
name|copy
operator|.
name|setPath
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|path
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|UserInfo
case|:
name|copy
operator|.
name|setUserInfo
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|userInfo
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|UserName
case|:
name|copy
operator|.
name|setUserName
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|userName
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|Password
case|:
name|copy
operator|.
name|setPassword
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|password
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|Host
case|:
name|copy
operator|.
name|setHost
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|host
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|Authority
case|:
name|copy
operator|.
name|setAuthority
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|authority
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|Query
case|:
name|copy
operator|.
name|setQuery
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|hasQuery
argument_list|()
argument_list|,
operator|!
name|newValue
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|query
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
case|case
name|Fragment
case|:
name|copy
operator|.
name|setFragment
argument_list|(
name|newValue
argument_list|,
name|QUrl
operator|::
name|ParsingMode
argument_list|(
name|parsingMode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|hasFragment
argument_list|()
argument_list|,
operator|!
name|newValue
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|fragment
argument_list|(
name|QUrl
operator|::
name|ComponentFormattingOptions
argument_list|(
name|encoding
argument_list|)
argument_list|)
argument_list|,
name|output
argument_list|)
expr_stmt|;
break|break;
block|}
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|isValid
argument_list|()
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
if|if
condition|(
name|isValid
condition|)
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|copy
operator|.
name|toString
argument_list|()
argument_list|,
name|toString
argument_list|)
expr_stmt|;
comment|// Check round-tripping
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|copy
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|toString
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QVERIFY
argument_list|(
name|copy
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|streaming_data
name|void
name|tst_QUrl
operator|::
name|streaming_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"origURL"
argument_list|)
operator|<<
literal|"http://www.website.com/directory/?#ref"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"urlWithPassAndNoUser"
argument_list|)
operator|<<
literal|"ftp://:password@ftp.kde.org/path"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"accentuated"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"trash:/Ã©tÃ©"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"withPercents"
argument_list|)
operator|<<
literal|"http://host/path%25path?%3Fque%25ry#%23ref%25"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
literal|""
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QUrl
argument_list|(
literal|"ptal://mlc:usb"
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid"
argument_list|)
operator|<<
literal|"ptal://mlc:usb"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6"
argument_list|)
operator|<<
literal|"http://[::ffff:129.144.52.38]:81?query"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|streaming
name|void
name|tst_QUrl
operator|::
name|streaming
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QByteArray
name|buffer
decl_stmt|;
name|QDataStream
name|writeStream
argument_list|(
operator|&
name|buffer
argument_list|,
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
decl_stmt|;
name|writeStream
operator|<<
name|url
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
name|QUrl
name|restored
decl_stmt|;
name|stream
operator|>>
name|restored
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|restored
operator|.
name|url
argument_list|()
argument_list|,
name|url
operator|.
name|url
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QVERIFY
argument_list|(
operator|!
name|restored
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|detach
name|void
name|tst_QUrl
operator|::
name|detach
parameter_list|()
block|{
name|QUrl
name|empty
decl_stmt|;
name|empty
operator|.
name|detach
argument_list|()
expr_stmt|;
name|QUrl
name|foo
argument_list|(
literal|"http://www.kde.org"
argument_list|)
decl_stmt|;
name|QUrl
name|foo2
init|=
name|foo
decl_stmt|;
name|foo2
operator|.
name|detach
argument_list|()
expr_stmt|;
comment|// not that it's needed, given that setHost detaches, of course. But this increases coverage :)
name|foo2
operator|.
name|setHost
argument_list|(
literal|"www.gnome.org"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|foo2
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"www.gnome.org"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|foo
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"www.kde.org"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// Test accessing the same QUrl from multiple threads concurrently
end_comment
begin_comment
comment|// To maximize the chances of a race (and of a report from helgrind), we actually use
end_comment
begin_comment
comment|// 10 urls rather than one.
end_comment
begin_class
DECL|class|UrlStorage
class|class
name|UrlStorage
block|{
public|public:
DECL|function|UrlStorage
name|UrlStorage
parameter_list|()
block|{
name|m_urls
operator|.
name|resize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_urls
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|m_urls
index|[
name|i
index|]
operator|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.kde.org"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
expr_stmt|;
block|}
DECL|member|m_urls
name|QVector
argument_list|<
name|QUrl
argument_list|>
name|m_urls
decl_stmt|;
block|}
class|;
end_class
begin_decl_stmt
DECL|variable|s_urlStorage
specifier|static
specifier|const
name|UrlStorage
modifier|*
name|s_urlStorage
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|testThreadingHelper
name|void
name|tst_QUrl
operator|::
name|testThreadingHelper
parameter_list|()
block|{
specifier|const
name|UrlStorage
modifier|*
name|storage
init|=
name|s_urlStorage
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|storage
operator|->
name|m_urls
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QUrl
modifier|&
name|u
init|=
name|storage
operator|->
name|m_urls
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
comment|// QVERIFY/QCOMPARE trigger race conditions in helgrind
if|if
condition|(
operator|!
name|u
operator|.
name|isValid
argument_list|()
condition|)
name|qFatal
argument_list|(
literal|"invalid url"
argument_list|)
expr_stmt|;
if|if
condition|(
name|u
operator|.
name|scheme
argument_list|()
operator|!=
name|QLatin1String
argument_list|(
literal|"http"
argument_list|)
condition|)
name|qFatal
argument_list|(
literal|"invalid scheme"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|u
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|'h'
argument_list|)
condition|)
name|qFatal
argument_list|(
literal|"invalid toString"
argument_list|)
expr_stmt|;
name|QUrl
name|copy
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|copy
operator|.
name|setHost
argument_list|(
literal|"www.new-host.com"
argument_list|)
expr_stmt|;
name|QUrl
name|copy2
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|copy2
operator|.
name|setUserName
argument_list|(
literal|"dfaure"
argument_list|)
expr_stmt|;
name|QUrl
name|copy3
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|copy3
operator|.
name|setUrl
argument_list|(
literal|"http://www.new-host.com"
argument_list|)
expr_stmt|;
name|QUrl
name|copy4
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|copy4
operator|.
name|detach
argument_list|()
expr_stmt|;
name|QUrl
name|copy5
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|QUrl
name|resolved1
init|=
name|u
operator|.
name|resolved
argument_list|(
name|QUrl
argument_list|(
literal|"index.html"
argument_list|)
argument_list|)
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|resolved1
argument_list|)
expr_stmt|;
name|QUrl
name|resolved2
init|=
name|QUrl
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|.
name|resolved
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|resolved2
argument_list|)
expr_stmt|;
name|QString
name|local
init|=
name|u
operator|.
name|toLocalFile
argument_list|()
decl_stmt|;
name|Q_UNUSED
argument_list|(
name|local
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|10
argument_list|)
expr_stmt|;
comment|// give time for the other threads to start
block|}
block|}
end_function
begin_include
include|#
directive|include
file|<QThreadPool>
end_include
begin_include
include|#
directive|include
file|<QtConcurrent>
end_include
begin_function
DECL|function|testThreading
name|void
name|tst_QUrl
operator|::
name|testThreading
parameter_list|()
block|{
name|s_urlStorage
operator|=
operator|new
name|UrlStorage
expr_stmt|;
name|QThreadPool
operator|::
name|globalInstance
argument_list|()
operator|->
name|setMaxThreadCount
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QFutureSynchronizer
argument_list|<
name|void
argument_list|>
name|sync
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
operator|++
name|i
control|)
name|sync
operator|.
name|addFuture
argument_list|(
name|QtConcurrent
operator|::
name|run
argument_list|(
name|this
argument_list|,
operator|&
name|tst_QUrl
operator|::
name|testThreadingHelper
argument_list|)
argument_list|)
expr_stmt|;
name|sync
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
operator|delete
name|s_urlStorage
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QUrl
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qurl.moc"
end_include
end_unit
