begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/QDebug>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qfileinfo.h>
end_include
begin_include
include|#
directive|include
file|<qurl.h>
end_include
begin_include
include|#
directive|include
file|<qtextcodec.h>
end_include
begin_include
include|#
directive|include
file|<qmap.h>
end_include
begin_include
include|#
directive|include
file|"private/qtldurl_p.h"
end_include
begin_comment
comment|// For testsuites
end_comment
begin_define
DECL|macro|IDNA_ACE_PREFIX
define|#
directive|define
name|IDNA_ACE_PREFIX
value|"xn--"
end_define
begin_define
DECL|macro|IDNA_SUCCESS
define|#
directive|define
name|IDNA_SUCCESS
value|1
end_define
begin_define
DECL|macro|STRINGPREP_NO_UNASSIGNED
define|#
directive|define
name|STRINGPREP_NO_UNASSIGNED
value|1
end_define
begin_define
DECL|macro|STRINGPREP_CONTAINS_UNASSIGNED
define|#
directive|define
name|STRINGPREP_CONTAINS_UNASSIGNED
value|2
end_define
begin_define
DECL|macro|STRINGPREP_CONTAINS_PROHIBITED
define|#
directive|define
name|STRINGPREP_CONTAINS_PROHIBITED
value|3
end_define
begin_define
DECL|macro|STRINGPREP_BIDI_BOTH_L_AND_RAL
define|#
directive|define
name|STRINGPREP_BIDI_BOTH_L_AND_RAL
value|4
end_define
begin_define
DECL|macro|STRINGPREP_BIDI_LEADTRAIL_NOT_RAL
define|#
directive|define
name|STRINGPREP_BIDI_LEADTRAIL_NOT_RAL
value|5
end_define
begin_struct
DECL|struct|ushortarray
struct|struct
name|ushortarray
block|{
DECL|function|ushortarray
name|ushortarray
parameter_list|(
name|unsigned
name|short
modifier|*
name|array
init|=
literal|0
parameter_list|)
block|{
if|if
condition|(
name|array
condition|)
name|memcpy
argument_list|(
name|points
argument_list|,
name|array
argument_list|,
sizeof|sizeof
argument_list|(
name|points
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|member|points
name|unsigned
name|short
name|points
index|[
literal|100
index|]
decl_stmt|;
block|}
struct|;
end_struct
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|ushortarray
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QUrl::FormattingOptions
argument_list|)
end_macro
begin_class
DECL|class|tst_QUrl
class|class
name|tst_QUrl
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|effectiveTLDs_data
parameter_list|()
function_decl|;
name|void
name|effectiveTLDs
parameter_list|()
function_decl|;
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|constructing
parameter_list|()
function_decl|;
name|void
name|hashInPath
parameter_list|()
function_decl|;
name|void
name|unc
parameter_list|()
function_decl|;
name|void
name|assignment
parameter_list|()
function_decl|;
name|void
name|comparison
parameter_list|()
function_decl|;
name|void
name|copying
parameter_list|()
function_decl|;
name|void
name|setUrl
parameter_list|()
function_decl|;
name|void
name|i18n_data
parameter_list|()
function_decl|;
name|void
name|i18n
parameter_list|()
function_decl|;
name|void
name|punycode_data
parameter_list|()
function_decl|;
name|void
name|punycode
parameter_list|()
function_decl|;
name|void
name|resolving_data
parameter_list|()
function_decl|;
name|void
name|resolving
parameter_list|()
function_decl|;
name|void
name|toString_data
parameter_list|()
function_decl|;
name|void
name|toString
parameter_list|()
function_decl|;
name|void
name|toString_constructed_data
parameter_list|()
function_decl|;
name|void
name|toString_constructed
parameter_list|()
function_decl|;
name|void
name|isParentOf_data
parameter_list|()
function_decl|;
name|void
name|isParentOf
parameter_list|()
function_decl|;
name|void
name|toLocalFile_data
parameter_list|()
function_decl|;
name|void
name|toLocalFile
parameter_list|()
function_decl|;
name|void
name|fromLocalFile_data
parameter_list|()
function_decl|;
name|void
name|fromLocalFile
parameter_list|()
function_decl|;
name|void
name|relative
parameter_list|()
function_decl|;
name|void
name|compat_legacy
parameter_list|()
function_decl|;
name|void
name|compat_constructor_01_data
parameter_list|()
function_decl|;
name|void
name|compat_constructor_01
parameter_list|()
function_decl|;
name|void
name|compat_constructor_02_data
parameter_list|()
function_decl|;
name|void
name|compat_constructor_02
parameter_list|()
function_decl|;
name|void
name|compat_constructor_03_data
parameter_list|()
function_decl|;
name|void
name|compat_constructor_03
parameter_list|()
function_decl|;
name|void
name|compat_isValid_01_data
parameter_list|()
function_decl|;
name|void
name|compat_isValid_01
parameter_list|()
function_decl|;
name|void
name|compat_isValid_02_data
parameter_list|()
function_decl|;
name|void
name|compat_isValid_02
parameter_list|()
function_decl|;
name|void
name|compat_path_data
parameter_list|()
function_decl|;
name|void
name|compat_path
parameter_list|()
function_decl|;
name|void
name|compat_fileName_data
parameter_list|()
function_decl|;
name|void
name|compat_fileName
parameter_list|()
function_decl|;
name|void
name|compat_decode_data
parameter_list|()
function_decl|;
name|void
name|compat_decode
parameter_list|()
function_decl|;
name|void
name|compat_encode_data
parameter_list|()
function_decl|;
name|void
name|compat_encode
parameter_list|()
function_decl|;
name|void
name|percentEncoding_data
parameter_list|()
function_decl|;
name|void
name|percentEncoding
parameter_list|()
function_decl|;
name|void
name|swap
parameter_list|()
function_decl|;
name|void
name|symmetry
parameter_list|()
function_decl|;
name|void
name|ipv6_data
parameter_list|()
function_decl|;
name|void
name|ipv6
parameter_list|()
function_decl|;
name|void
name|ipv6_2_data
parameter_list|()
function_decl|;
name|void
name|ipv6_2
parameter_list|()
function_decl|;
name|void
name|moreIpv6
parameter_list|()
function_decl|;
name|void
name|toPercentEncoding_data
parameter_list|()
function_decl|;
name|void
name|toPercentEncoding
parameter_list|()
function_decl|;
name|void
name|isRelative_data
parameter_list|()
function_decl|;
name|void
name|isRelative
parameter_list|()
function_decl|;
name|void
name|setQueryItems
parameter_list|()
function_decl|;
name|void
name|queryItems
parameter_list|()
function_decl|;
name|void
name|hasQuery_data
parameter_list|()
function_decl|;
name|void
name|hasQuery
parameter_list|()
function_decl|;
name|void
name|hasQueryItem_data
parameter_list|()
function_decl|;
name|void
name|hasQueryItem
parameter_list|()
function_decl|;
name|void
name|nameprep
parameter_list|()
function_decl|;
name|void
name|isValid
parameter_list|()
function_decl|;
name|void
name|schemeValidator_data
parameter_list|()
function_decl|;
name|void
name|schemeValidator
parameter_list|()
function_decl|;
name|void
name|invalidSchemeValidator
parameter_list|()
function_decl|;
name|void
name|tolerantParser
parameter_list|()
function_decl|;
name|void
name|correctEncodedMistakes_data
parameter_list|()
function_decl|;
name|void
name|correctEncodedMistakes
parameter_list|()
function_decl|;
name|void
name|correctDecodedMistakes_data
parameter_list|()
function_decl|;
name|void
name|correctDecodedMistakes
parameter_list|()
function_decl|;
name|void
name|idna_testsuite_data
parameter_list|()
function_decl|;
name|void
name|idna_testsuite
parameter_list|()
function_decl|;
name|void
name|nameprep_testsuite_data
parameter_list|()
function_decl|;
name|void
name|nameprep_testsuite
parameter_list|()
function_decl|;
name|void
name|nameprep_highcodes_data
parameter_list|()
function_decl|;
name|void
name|nameprep_highcodes
parameter_list|()
function_decl|;
name|void
name|ace_testsuite_data
parameter_list|()
function_decl|;
name|void
name|ace_testsuite
parameter_list|()
function_decl|;
name|void
name|std3violations_data
parameter_list|()
function_decl|;
name|void
name|std3violations
parameter_list|()
function_decl|;
name|void
name|std3deviations_data
parameter_list|()
function_decl|;
name|void
name|std3deviations
parameter_list|()
function_decl|;
name|void
name|tldRestrictions_data
parameter_list|()
function_decl|;
name|void
name|tldRestrictions
parameter_list|()
function_decl|;
name|void
name|emptyQueryOrFragment
parameter_list|()
function_decl|;
name|void
name|hasFragment_data
parameter_list|()
function_decl|;
name|void
name|hasFragment
parameter_list|()
function_decl|;
name|void
name|setEncodedFragment_data
parameter_list|()
function_decl|;
name|void
name|setEncodedFragment
parameter_list|()
function_decl|;
name|void
name|fromEncoded
parameter_list|()
function_decl|;
name|void
name|stripTrailingSlash
parameter_list|()
function_decl|;
name|void
name|hosts_data
parameter_list|()
function_decl|;
name|void
name|hosts
parameter_list|()
function_decl|;
name|void
name|setPort
parameter_list|()
function_decl|;
name|void
name|toEncoded_data
parameter_list|()
function_decl|;
name|void
name|toEncoded
parameter_list|()
function_decl|;
name|void
name|setAuthority_data
parameter_list|()
function_decl|;
name|void
name|setAuthority
parameter_list|()
function_decl|;
name|void
name|errorString
parameter_list|()
function_decl|;
name|void
name|clear
parameter_list|()
function_decl|;
name|void
name|resolvedWithAbsoluteSchemes
parameter_list|()
specifier|const
function_decl|;
name|void
name|resolvedWithAbsoluteSchemes_data
parameter_list|()
specifier|const
function_decl|;
name|void
name|binaryData_data
parameter_list|()
function_decl|;
name|void
name|binaryData
parameter_list|()
function_decl|;
name|void
name|fromUserInput_data
parameter_list|()
function_decl|;
name|void
name|fromUserInput
parameter_list|()
function_decl|;
name|void
name|isEmptyForEncodedUrl
parameter_list|()
function_decl|;
name|void
name|toEncodedNotUsingUninitializedPath
parameter_list|()
function_decl|;
name|void
name|emptyAuthorityRemovesExistingAuthority
parameter_list|()
function_decl|;
name|void
name|acceptEmptyAuthoritySegments
parameter_list|()
function_decl|;
name|void
name|removeAllEncodedQueryItems_data
parameter_list|()
function_decl|;
name|void
name|removeAllEncodedQueryItems
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QUrl
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QUrl
name|obj1
decl_stmt|;
comment|// int QUrl::port()
comment|// void QUrl::setPort(int)
name|obj1
operator|.
name|setPort
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QUrl::setPort: Out of range"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setPort
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|-
literal|1
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
comment|// Out of range, -1
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QUrl::setPort: Out of range"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setPort
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|-
literal|1
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
comment|// Out of range, -1
name|obj1
operator|.
name|setPort
argument_list|(
literal|1234
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|1234
argument_list|,
name|obj1
operator|.
name|port
argument_list|()
argument_list|)
expr_stmt|;
comment|// static QStringList QUrl::idnWhitelist()
comment|// static void QUrl::setIdnWhitelist(QStringList)
name|QStringList
name|original
init|=
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
decl_stmt|;
comment|// save for later
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|QStringList
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|QStringList
argument_list|()
argument_list|)
expr_stmt|;
name|QStringList
name|norway
decl_stmt|;
name|norway
operator|<<
literal|"no"
expr_stmt|;
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|norway
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|norway
argument_list|)
expr_stmt|;
name|QStringList
name|modified
init|=
name|original
decl_stmt|;
name|modified
operator|<<
literal|"foo"
expr_stmt|;
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|modified
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|modified
argument_list|)
expr_stmt|;
comment|// reset to the original
name|QUrl
operator|::
name|setIdnWhitelist
argument_list|(
name|original
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|idnWhitelist
argument_list|()
argument_list|,
name|original
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructing
name|void
name|tst_QUrl
operator|::
name|constructing
parameter_list|()
block|{
name|QUrl
name|url
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|justHost
argument_list|(
literal|"qt.nokia.com"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|justHost
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|justHost
operator|.
name|host
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|justHost
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"qt.nokia.com"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|hostWithSlashes
argument_list|(
literal|"//qt.nokia.com"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|hostWithSlashes
operator|.
name|path
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|hostWithSlashes
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"qt.nokia.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hashInPath
name|void
name|tst_QUrl
operator|::
name|hashInPath
parameter_list|()
block|{
name|QUrl
name|withHashInPath
decl_stmt|;
name|withHashInPath
operator|.
name|setPath
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|withHashInPath
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"hi#mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|withHashInPath
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"hi%23mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|withHashInPath
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"hi%23mum.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|fromHashInPath
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|withHashInPath
operator|.
name|toEncoded
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|withHashInPath
operator|==
name|fromHashInPath
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unc
name|void
name|tst_QUrl
operator|::
name|unc
parameter_list|()
block|{
name|QUrl
name|buildUNC
decl_stmt|;
name|buildUNC
operator|.
name|setScheme
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file"
argument_list|)
argument_list|)
expr_stmt|;
name|buildUNC
operator|.
name|setHost
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"somehost"
argument_list|)
argument_list|)
expr_stmt|;
name|buildUNC
operator|.
name|setPath
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"somepath"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buildUNC
operator|.
name|toLocalFile
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somepath"
argument_list|)
argument_list|)
expr_stmt|;
name|buildUNC
operator|.
name|toEncoded
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|buildUNC
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|assignment
name|void
name|tst_QUrl
operator|::
name|assignment
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt.nokia.com/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|copy
decl_stmt|;
name|copy
operator|=
name|url
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|==
name|copy
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comparison
name|void
name|tst_QUrl
operator|::
name|comparison
parameter_list|()
block|{
name|QUrl
name|url1
argument_list|(
literal|"http://qt.nokia.com/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"http://qt.nokia.com/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url2
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url1
operator|==
name|url2
argument_list|)
expr_stmt|;
comment|// 6.2.2 Syntax-based Normalization
name|QUrl
name|url3
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"example://a/b/c/%7Bfoo%7D"
argument_list|)
decl_stmt|;
name|QUrl
name|url4
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"eXAMPLE://a/./b/../b/%63/%7bfoo%7d"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url3
operator|==
name|url4
argument_list|)
expr_stmt|;
comment|// 6.2.2.1 Make sure hexdecimal characters in percent encoding are
comment|// treated case-insensitively
name|QUrl
name|url5
decl_stmt|;
name|url5
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=%2a"
argument_list|)
expr_stmt|;
name|QUrl
name|url6
decl_stmt|;
name|url6
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=%2A"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url5
operator|==
name|url6
argument_list|)
expr_stmt|;
comment|// ensure that encoded characters in the query do not match
name|QUrl
name|url7
decl_stmt|;
name|url7
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=%63"
argument_list|)
expr_stmt|;
name|QUrl
name|url8
decl_stmt|;
name|url8
operator|.
name|setEncodedQuery
argument_list|(
literal|"a=c"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url7
operator|!=
name|url8
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|copying
name|void
name|tst_QUrl
operator|::
name|copying
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt.nokia.com/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|copy
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|==
name|copy
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setUrl
name|void
name|tst_QUrl
operator|::
name|setUrl
parameter_list|()
block|{
block|{
name|QUrl
name|url
argument_list|(
literal|"http://0.foo.com"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"0.foo.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|userInfo
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|authority
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"hTTp://www.foo.bar:80"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|userInfo
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"www.foo.bar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|authority
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"www.foo.bar:80"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"//www1.foo.bar"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www1.foo.bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://user:pass@[56::56:56:56:127.0.0.1]:99"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|userInfo
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"user:pass"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"56::56:56:56:127.0.0.1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|authority
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"user:pass@[56::56:56:56:127.0.0.1]:99"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
literal|99
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"/top//test/../test1/file.html"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test1/file.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"/top//test/../test1/file.html"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test1/file.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.foo.bar/top//test2/file2.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/usr/local/src/kde2/////kdelibs/kio"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///usr/local/src/kde2/////kdelibs/kio"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"mailto:bastian@kde.org"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url2
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"mailto:bastian@kde.org"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"mailto:bastian@kde.org?subject=hello"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"mailto:bastian@kde.org?subject=hello"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/usr/local/src/kde2/kdelibs/kio/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"../../////kdebase/konqueror"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|url2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///usr/local/src/kde2/////kdebase/konqueror"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QString
name|u1
init|=
literal|"file:/home/dfaure/my#myref"
decl_stmt|;
name|QUrl
name|url
init|=
name|u1
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/dfaure/my#myref"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"myref"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QString
name|u1
init|=
literal|"file:/home/dfaure/my#myref"
decl_stmt|;
name|QUrl
name|url
init|=
name|u1
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/dfaure/my#myref"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"myref"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"gg:www.kde.org"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"gg"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"www.kde.org"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"KDE"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"KDE"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"$HOME/.kde/share/config"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"$HOME/.kde/share/config"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/opt/kde2/qt2/doc/html/showimg-main-cpp.html#QObject::connect"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"QObject::connect"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/opt/kde2/qt2/doc/html/showimg-main-cpp.html#QObject:connect"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"QObject:connect"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// suburls
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/my%20tar%20file.tgz#gzip:/#tar:/#myref"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// or simply 'myref?'
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"gzip:/#tar:/#myref"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"error:/?error=14&errText=Unknown%20host%20asdfu.adgi.sdfgoi#http://asdfu.adgi.sdfgoi"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://asdfu.adgi.sdfgoi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// suburls
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/my%20tar%20file.tgz#gzip:/#tar:/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/cdrdao-1.1.5/dao/#CdrDriver.cc#"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"file:/home/dfaure/my%20tar%20file.tgz#gzip:/#tar:/README"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/dfaure/my tar file.tgz#gzip:/#tar:/README"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|notPretty
decl_stmt|;
name|notPretty
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://ferret.lmh.ox.ac.uk/%7Ekdecvs/"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|notPretty
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notPretty
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ferret.lmh.ox.ac.uk/~kdecvs/"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|notPretty2
decl_stmt|;
name|notPretty2
operator|.
name|setEncodedUrl
argument_list|(
literal|"file:/home/test/directory%20with%20spaces"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|notPretty2
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notPretty2
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///home/test/directory with spaces"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|notPretty3
argument_list|(
literal|"fish://foo/%23README%23"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|notPretty3
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|notPretty3
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"fish://foo/%23README%23"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url15581
decl_stmt|;
name|url15581
operator|.
name|setUrl
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/spaces in url.html"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15581
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/spaces in url.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15581
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/spaces%20in%20url.html"
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url15582
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%in%url.html"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url15582
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%25in%25url.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15582
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%25in%25url.html"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|carsten
decl_stmt|;
name|carsten
operator|.
name|setPath
argument_list|(
literal|"/home/gis/src/kde/kdelibs/kfile/.#kfiledetailview.cpp.1.18"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|carsten
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/gis/src/kde/kdelibs/kfile/.#kfiledetailview.cpp.1.18"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|charles
decl_stmt|;
name|charles
operator|.
name|setPath
argument_list|(
literal|"/home/charles/foo%20moo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|charles
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/charles/foo%20moo"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|charles2
decl_stmt|;
name|charles2
operator|.
name|setEncodedUrl
argument_list|(
literal|"file:/home/charles/foo%20moo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|charles2
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/charles/foo moo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|udir
decl_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|udir
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|udir
operator|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
literal|"/home/dfaure/file.txt"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/home/dfaure/file.txt"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|udir
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"file:///home/dfaure/file.txt"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"hello.com#?"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"hello.com"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1Char
argument_list|(
literal|'#'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1Char
argument_list|(
literal|'?'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4.example.com"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4.example.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4/"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4?foo"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://1.2.3.4#bar"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"data:text/javascript,d5%20%3D%20'five\\u0027s'%3B"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"data"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"text/javascript,d5 = 'five\\u0027s';"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedPath
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"text/javascript,d5%20%3D%20'five%5Cu0027s'%3B"
argument_list|)
expr_stmt|;
block|}
block|{
comment|//check it calls detach
name|QUrl
name|u1
argument_list|(
literal|"http://aaa.com"
argument_list|)
decl_stmt|;
name|QUrl
name|u2
init|=
name|u1
decl_stmt|;
name|u2
operator|.
name|setUrl
argument_list|(
literal|"http://bbb.com"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u1
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"aaa.com"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u2
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"bbb.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|i18n_data
name|void
name|tst_QUrl
operator|::
name|i18n_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"input"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"punyOutput"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Ã¸l"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://ole:passord@www.Ã¸l.no/index.html?ole=Ã¦semann&ilder gud=hei#top"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://ole:passord@www.xn--l-4ga.no/index.html?ole=%C3%A6semann&ilder%20gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rÃ¤ksmÃ¶rgÃ¥s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.rÃ¤ksmÃ¶rgÃ¥s.no/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://www.xn--rksmrgs-5wao1o.no/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bÃ¼hler"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.bÃ¼hler.no/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://www.xn--bhler-kva.no/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-latin1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.\316\261\316\270\316\256\316\275\316\261.info"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://www.xn--jxafb0a0a.info"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|i18n
name|void
name|tst_QUrl
operator|::
name|i18n
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|punyOutput
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|punyOutput
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|punyOutput
argument_list|)
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|punyOutput
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolving_data
name|void
name|tst_QUrl
operator|::
name|resolving_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"baseUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"relativeUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"resolvedUrl"
argument_list|)
expr_stmt|;
comment|// 5.4.1 Normal Examples (http://www.ietf.org/rfc/rfc3986.txt)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g:h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g:h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g:h"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"//g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|";x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|";x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/;x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g;x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x?y#s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g;x?y#s"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[empty]"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|".."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|".."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
comment|// 5.4.2  Abnormal Examples (http://www.ietf.org/rfc/rfc3986.txt)
comment|// Parsers must be careful in handling cases where there are more
comment|// relative path ".." segments than there are hierarchical levels in the
comment|// base URI's path.  Note that the ".." syntax cannot be used to change
comment|// the authority component of a URI.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../../../../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
comment|// Similarly, parsers must remove the dot-segments "." and ".." when
comment|// they are complete components of a path, but not when they are only
comment|// part of a segment.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/./g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g."
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|".g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|".g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/.g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g.."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g.."
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"..g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"..g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/..g"
argument_list|)
expr_stmt|;
comment|// Less likely are cases where the relative URI reference uses
comment|// unnecessary or nonsensical forms of the "." and ".." complete path
comment|// segments.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./../g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/g"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"./g/."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./g/."
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g/./h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g/./h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g/h"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g/../h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g/../h"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/h"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x=1/./y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x=1/./y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g;x=1/y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g;x=1/../y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g;x=1/../y"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/y"
argument_list|)
expr_stmt|;
comment|// Some applications fail to separate the reference's query and/or
comment|// fragment components from a relative path before merging it with the
comment|// base path and removing dot-segments.  This error is rarely noticed,
comment|// since typical usage of a fragment never includes the hierarchy ("/")
comment|// character, and the query component is not normally used within
comment|// relative references.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y/./x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g?y/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g?y/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g?y/../x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g#s/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g#s/./x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g#s/./x"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"g#s/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"g#s/../x"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g#s/../x"
argument_list|)
expr_stmt|;
comment|// Some parsers allow the scheme name to be present in a relative URI
comment|// reference if it is the same as the base URI scheme.  This is
comment|// considered to be a loophole in prior specifications of partial URI
comment|// [RFC1630]. Its use should be avoided, but is allowed for backward
comment|// compatibility.
comment|// For strict parsers :
comment|//    QTest::newRow("http:g [for strict parsers]")<< QString::fromLatin1("http://a/b/c/d;p?q")<< QString::fromLatin1("http:g")<< QString::fromLatin1("http:g");
comment|// For backward compatibility :
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http:g [for backward compatibility]"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/d;p?q"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http:g"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a/b/c/g"
argument_list|)
expr_stmt|;
comment|// Resolve relative with relative
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (1)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (2)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (3)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b/c/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (4)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (5)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (6)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (7)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b/c/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b/a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"../a (8)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolving
name|void
name|tst_QUrl
operator|::
name|resolving
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|baseUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|relativeUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|resolvedUrl
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|baseUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|resolved
argument_list|(
name|relativeUrl
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|resolvedUrl
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_data
name|void
name|tst_QUrl
operator|::
name|toString_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"options"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePassword
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveUserInfo
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePort
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http:/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePath
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveQuery
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePassword
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemoveUserInfo
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePort
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole:password@www.troll.no/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemoveAuthority
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/index.html?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePath
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole:password@www.troll.no:9090?ole=semann&gud=hei#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/index.html?ole=semann&gud=hei"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveAuthority
operator||
name|QUrl
operator|::
name|RemoveQuery
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http:/index.html#top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemovePassword
operator||
name|QUrl
operator|::
name|RemovePort
operator||
name|QUrl
operator|::
name|RemovePath
operator||
name|QUrl
operator|::
name|RemoveQuery
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole@www.troll.no"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://ole:password@www.troll.no:9090/index.html?ole=semann&gud=hei#top"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
operator||
name|QUrl
operator|::
name|RemovePassword
operator||
name|QUrl
operator|::
name|RemovePort
operator||
name|QUrl
operator|::
name|RemovePath
operator||
name|QUrl
operator|::
name|RemoveQuery
operator||
name|QUrl
operator|::
name|RemoveFragment
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//ole@www.troll.no"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data18"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/?my=query&your=query#yougotfragged"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|None
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/?my=query&your=query#yougotfragged"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nopath"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"host://protocol"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|None
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"host://protocol"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"underscore"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://foo_bar.host.com/rss.php"
argument_list|)
operator|<<
name|uint
argument_list|(
name|QUrl
operator|::
name|None
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://foo_bar.host.com/rss.php"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString
name|void
name|tst_QUrl
operator|::
name|toString
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|urlString
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|FormattingOptions
argument_list|(
name|options
argument_list|)
argument_list|)
argument_list|,
name|string
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//### more tests ... what do we expect ...
end_comment
begin_function
DECL|function|isParentOf_data
name|void
name|tst_QUrl
operator|::
name|isParentOf_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"parent"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"child"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/e?f"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/de"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/de"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://a.b.c/d/e"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_constructed_data
name|void
name|tst_QUrl
operator|::
name|toString_constructed_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"scheme"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"userName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"port"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"query"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fragment"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"asString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"asEncoded"
argument_list|)
expr_stmt|;
name|QString
name|n
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"index.html"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//qt.nokia.com/index.html"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"//qt.nokia.com/index.html"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/root"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///root"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:///root"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"userAndPass"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"dfaure"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"kde"
argument_list|)
operator|<<
literal|"kde.org"
operator|<<
literal|443
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://dfaure:kde@kde.org:443/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://dfaure:kde@kde.org:443/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PassWithoutUser"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"kde"
argument_list|)
operator|<<
literal|"kde.org"
operator|<<
literal|443
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
name|n
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://:kde@kde.org:443/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://:kde@kde.org:443/"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toString_constructed
name|void
name|tst_QUrl
operator|::
name|toString_constructed
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|scheme
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|query
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fragment
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|asString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|asEncoded
argument_list|)
expr_stmt|;
name|QUrl
name|url
decl_stmt|;
if|if
condition|(
operator|!
name|scheme
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setScheme
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|userName
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setUserName
argument_list|(
name|userName
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|password
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|host
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setHost
argument_list|(
name|host
argument_list|)
expr_stmt|;
if|if
condition|(
name|port
operator|!=
operator|-
literal|1
condition|)
name|url
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|query
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setEncodedQuery
argument_list|(
name|query
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fragment
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setFragment
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|asString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|asEncoded
argument_list|)
argument_list|)
expr_stmt|;
comment|// readable in case of differences
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|asEncoded
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isParentOf
name|void
name|tst_QUrl
operator|::
name|isParentOf
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|parent
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isParentOf
argument_list|(
name|QUrl
argument_list|(
name|child
argument_list|)
argument_list|)
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toLocalFile_data
name|void
name|tst_QUrl
operator|::
name|toLocalFile_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theFile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///c:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"c:/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somedir/somefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:////somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somedir/somefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"FILE:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
comment|// and some that result in empty (i.e., not local)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"///a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo:/a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo://a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"xdata5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"foo:///a.txt"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toLocalFile
name|void
name|tst_QUrl
operator|::
name|toLocalFile
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theFile
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|theUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toLocalFile
argument_list|()
argument_list|,
name|theFile
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromLocalFile_data
name|void
name|tst_QUrl
operator|::
name|fromLocalFile_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theFile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"theUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"thePath"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a/b.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///a/b.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/a/b.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"c:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file:///c:/a.txt"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/c:/a.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/somedir/somefile"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/somedir/somefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//somehost/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"file://somehost/"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromLocalFile
name|void
name|tst_QUrl
operator|::
name|fromLocalFile
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theFile
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|theUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|thePath
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|theFile
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|theUrl
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|thePath
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_legacy
name|void
name|tst_QUrl
operator|::
name|compat_legacy
parameter_list|()
block|{
block|{
name|QUrl
name|u
argument_list|(
literal|"file:bar"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|(
name|QUrl
operator|::
name|RemoveScheme
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/* others      */
block|{
name|QUrl
name|u
argument_list|(
literal|"http://qt.nokia.com/images/ban/pgs_front.jpg"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|tmp
argument_list|(
literal|"http://qt.nokia.com/images/ban/"
argument_list|)
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|QString
argument_list|(
literal|"pgs_front.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|tmp
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|QString
argument_list|(
literal|"http://qt.nokia.com/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|tmp
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|QString
argument_list|(
literal|"http://qt.nokia.com/images/ban/pgs_front.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|QFileInfo
name|fi
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|)
decl_stmt|;
name|u
operator|.
name|setPath
argument_list|(
name|fi
operator|.
name|path
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/images/ban"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|compat_constructor_01_data
name|void
name|tst_QUrl
operator|::
name|compat_constructor_01_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
expr_stmt|;
comment|// nolonger add file by default
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Makefile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt/INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt/INSTALL"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt/INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt/INSTALL"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_01
name|void
name|tst_QUrl
operator|::
name|compat_constructor_01
parameter_list|()
block|{
comment|/* The following should work as expected:      *      * QUrlOperator op;      * op.copy( QString( "Makefile" ),      *          QString("ftp://rms:grmpf12@nibbler/home/rms/tmp"),      *          false );      *      * as well as the following:      *      * QUrlOperator op;      * op.copy(QString("ftp://ftp.qt.nokia.com/qt/INSTALL"), ".");      */
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
block|{
name|QUrl
name|empty
decl_stmt|;
name|QUrl
name|u
init|=
name|empty
operator|.
name|resolved
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|empty
decl_stmt|;
name|QUrl
name|u
init|=
name|empty
operator|.
name|resolved
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|compat_constructor_02_data
name|void
name|tst_QUrl
operator|::
name|compat_constructor_02_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/INSTALL"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"INSTALL"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt/INSTALL"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_02
name|void
name|tst_QUrl
operator|::
name|compat_constructor_02
parameter_list|()
block|{
comment|/* The following should work as expected:      *      * QUrlOperator op( "ftp://ftp.qt.nokia.com/qt" );      * op.copy(QString("INSTALL"), ".");      */
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QUrl
name|tmp
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QUrl
name|u
init|=
name|tmp
operator|.
name|resolved
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_03_data
name|void
name|tst_QUrl
operator|::
name|compat_constructor_03_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
comment|//next we fill it with data
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/index.html"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/index.html"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com/foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/foo/index.txt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/foo/index.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/foo/bar/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local06"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local07"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo/bar/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"local09"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo/bar/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///foo/bar/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"relProtocol00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"relProtocol01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:/bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo:/bar"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/WinNT/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/WinNT/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/autoexec.bat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/autoexec.bat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:WinNT/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:WinNT/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"windowsDrive05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:autoexec.bat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:autoexec.bat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"nopath"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"protocol://host"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"protocol://host"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_constructor_03
name|void
name|tst_QUrl
operator|::
name|compat_constructor_03
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QUrl
name|u
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_01_data
name|void
name|tst_QUrl
operator|::
name|compat_isValid_01_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"urlStr"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/qt/INSTALL"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/foo"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:foo"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"#ftp://ftp.qt.nokia.com/qt/INSTALL"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/::foo"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_01
name|void
name|tst_QUrl
operator|::
name|compat_isValid_01
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|urlStr
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|urlStr
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
operator|==
name|res
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_02_data
name|void
name|tst_QUrl
operator|::
name|compat_isValid_02_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"protocol"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"port"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
name|QString
name|n
init|=
literal|""
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_01"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_03"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_04"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp.qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_05"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_06"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ok_07"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp.qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|QString
argument_list|(
literal|"path"
argument_list|)
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_01"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_02"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_03"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_04"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_05"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"ftp.qt.nokia.com"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_06"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
name|n
operator|<<
literal|80
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_07"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|n
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_08"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|n
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"err_09"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ftp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"bar"
argument_list|)
operator|<<
name|n
operator|<<
operator|-
literal|1
operator|<<
name|n
operator|<<
operator|(
name|bool
operator|)
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_isValid_02
name|void
name|tst_QUrl
operator|::
name|compat_isValid_02
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|protocol
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|host
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|QUrl
name|url
decl_stmt|;
if|if
condition|(
operator|!
name|protocol
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setScheme
argument_list|(
name|protocol
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|user
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setUserName
argument_list|(
name|user
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|password
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|host
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setHost
argument_list|(
name|host
argument_list|)
expr_stmt|;
if|if
condition|(
name|port
operator|!=
operator|-
literal|1
condition|)
name|url
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
name|url
operator|.
name|setPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
operator|==
name|res
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_path_data
name|void
name|tst_QUrl
operator|::
name|compat_path_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"res"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"protocol00"
argument_list|)
operator|<<
literal|"http://qt.nokia.com/images/ban/pgs_front.jpg"
operator|<<
literal|"/images/ban/pgs_front.jpg"
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN32
argument_list|)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"winShare00"
argument_list|)
operator|<<
literal|"//Anarki/homes"
operator|<<
literal|"/homes"
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|compat_path
name|void
name|tst_QUrl
operator|::
name|compat_path
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QUrl
name|u
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
name|u
operator|.
name|path
argument_list|()
argument_list|,
literal|"res"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_fileName_data
name|void
name|tst_QUrl
operator|::
name|compat_fileName_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WIN32
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathFileName - \\"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:\\windows\\tmp\\filename.txt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathFileName - /"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp/filename.txt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename.txt"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithSlash - \\"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:\\windows\\tmp\\"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithSlash - /"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp/"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithoutSlash - \\"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tmp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Windows - DrivePathWithoutSlash - /"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c:/windows/tmp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tmp"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Path00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Path01"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/home/dev/test/"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"PathFileName00"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"/home/dev/test"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_fileName
name|void
name|tst_QUrl
operator|::
name|compat_fileName
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|QUrl
name|fileUrl
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QFileInfo
name|fi
argument_list|(
name|fileUrl
operator|.
name|toLocalFile
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|fi
operator|.
name|fileName
argument_list|()
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_decode_data
name|void
name|tst_QUrl
operator|::
name|compat_decode_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"decodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalString"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"filename"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalStringEncoded"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file%20name"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JustEncoded"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%20"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrl"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrlEncoded"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http://qt%20nokia%20com"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt nokia com"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"EmptyString"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Task27166"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"Fran%C3%A7aise"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"FranÃ§aise"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_decode
name|void
name|tst_QUrl
operator|::
name|compat_decode
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|decodedString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromPercentEncoding
argument_list|(
name|encodedString
argument_list|)
argument_list|,
name|decodedString
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_encode_data
name|void
name|tst_QUrl
operator|::
name|compat_encode_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"decodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalString"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"filename"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"filename"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NormalStringEncoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file name"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file%20name"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"JustEncoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|" "
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%20"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrl"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http%3A//qt.nokia.com"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HTTPUrlEncoded"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt nokia com"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"http%3A//qt%20nokia%20com"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"EmptyString"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Task27166"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"FranÃ§aise"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"Fran%C3%A7aise"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|compat_encode
name|void
name|tst_QUrl
operator|::
name|compat_encode
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|decodedString
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|toPercentEncoding
argument_list|(
name|decodedString
argument_list|,
literal|"/."
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|,
name|encodedString
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|relative
name|void
name|tst_QUrl
operator|::
name|relative
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"../ole"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../ole"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"./"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url2
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"./"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url3
argument_list|(
literal|".."
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url3
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|".."
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|url4
argument_list|(
literal|"../.."
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url4
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"../.."
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|percentEncoding_data
name|void
name|tst_QUrl
operator|::
name|percentEncoding_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"original"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_01"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"sdfsdf"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"sdfsdf"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_02"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã¦ss"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%C3%A6ss"
argument_list|)
expr_stmt|;
comment|// not unreserved or reserved
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_03"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"{}"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%7B%7D"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|percentEncoding
name|void
name|tst_QUrl
operator|::
name|percentEncoding
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|encoded
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|)
operator|==
name|QUrl
argument_list|(
name|original
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toEncoded
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|encoded
argument_list|)
operator|==
name|QUrl
argument_list|(
name|original
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|QUrl
argument_list|(
name|original
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|original
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toPercentEncoding_data
name|void
name|tst_QUrl
operator|::
name|toPercentEncoding_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"original"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"excludeInEncoding"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"includeInEncoding"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_01"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcdevghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345678-._~"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"abcdevghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345678-._~"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_02"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"{\t\n\r^\"abc}"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%7B%09%0A%0D%5E%22abc%7D"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_03"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"://?#[]@!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%3A%2F%2F%3F%23%5B%5D%40%21%24%26%27%28%29%2A%2B%2C%3B%3D"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_04"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"://?#[]@!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%3A%2F%2F%3F%23%5B%5D%40!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"!$&'()*+,;="
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test_05"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcd"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"a%62%63d"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bc"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toPercentEncoding
name|void
name|tst_QUrl
operator|::
name|toPercentEncoding
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|excludeInEncoding
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|includeInEncoding
argument_list|)
expr_stmt|;
name|QByteArray
name|encodedUrl
init|=
name|QUrl
operator|::
name|toPercentEncoding
argument_list|(
name|original
argument_list|,
name|excludeInEncoding
argument_list|,
name|includeInEncoding
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|encodedUrl
operator|.
name|constData
argument_list|()
argument_list|,
name|encoded
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|original
argument_list|,
name|QUrl
operator|::
name|fromPercentEncoding
argument_list|(
name|encodedUrl
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swap
name|void
name|tst_QUrl
operator|::
name|swap
parameter_list|()
block|{
name|QUrl
name|u1
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
argument_list|)
decl_stmt|,
name|u2
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.kdab.com"
argument_list|)
argument_list|)
decl_stmt|;
name|u1
operator|.
name|swap
argument_list|(
name|u2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u2
operator|.
name|host
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"qt.nokia.com"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u1
operator|.
name|host
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"www.kdab.com"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|symmetry
name|void
name|tst_QUrl
operator|::
name|symmetry
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.rÃ¤ksmÃ¶rgÃ¥s.se/pub?a=b&a=dÃ¸&a=f#vrÃ¦l"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"www.rÃ¤ksmÃ¶rgÃ¥s.se"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/pub"
argument_list|)
argument_list|)
expr_stmt|;
comment|// this will be encoded ...
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a=b&a=d%C3%B8&a=f"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
comment|// unencoded
name|QCOMPARE
argument_list|(
name|url
operator|.
name|allQueryItemValues
argument_list|(
literal|"a"
argument_list|)
operator|.
name|join
argument_list|(
literal|""
argument_list|)
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"bdÃ¸f"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"vrÃ¦l"
argument_list|)
argument_list|)
expr_stmt|;
name|QUrl
name|onlyHost
argument_list|(
literal|"//qt.nokia.com"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|onlyHost
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//qt.nokia.com"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|QString
name|urlString
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://desktop:33326/upnp/{32f525a6-6f31-426e-91ca-01c2e6c2c57e}"
argument_list|)
decl_stmt|;
name|QUrl
name|urlPreviewList
argument_list|(
name|urlString
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|urlPreviewList
operator|.
name|toString
argument_list|()
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
name|QByteArray
name|b
init|=
name|urlPreviewList
operator|.
name|toEncoded
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://desktop:33326/upnp/%7B32f525a6-6f31-426e-91ca-01c2e6c2c57e%7D"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
block|}
block|{
name|QString
name|urlString
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://desktop:53423/deviceDescription?uuid={7977c17b-00bf-4af9-894e-fed28573c3a9}"
argument_list|)
decl_stmt|;
name|QUrl
name|urlPreviewList
argument_list|(
name|urlString
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|urlPreviewList
operator|.
name|toString
argument_list|()
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
name|QByteArray
name|b
init|=
name|urlPreviewList
operator|.
name|toEncoded
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://desktop:53423/deviceDescription?uuid=%7B7977c17b-00bf-4af9-894e-fed28573c3a9%7D"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|b
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|urlString
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|ipv6_data
name|void
name|tst_QUrl
operator|::
name|ipv6_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"ipv6Auth"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"isValid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 3"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::56:56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56::56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56::56:56:56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 6"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56::56:56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56::56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56:56::56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 9"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56:56:56:56:56:56:56::]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4 with one less"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::56:56:56:56:56]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4 with less and ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::56:56:56:127.0.0.1]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 7 with one and ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[56::255.0.0.0]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 2 with ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::56:56:56:56:56:0.0.0.255]"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 2 with half ip4"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::56:56:56:56:56:56:0.255]"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case 4 with less and ip4 and port and useinfo"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//user:pass@[56::56:56:56:127.0.0.1]:99"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case :,"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[:,]"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"case ::bla"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//[::bla]"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ipv6
name|void
name|tst_QUrl
operator|::
name|ipv6
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|ipv6Auth
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|ipv6Auth
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|isValid
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|ipv6Auth
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|ipv6Auth
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_function
DECL|function|ipv6_2_data
name|void
name|tst_QUrl
operator|::
name|ipv6_2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"input"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"output"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[::ffff:129.144.52.38]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"[::FFFF:129.144.52.38]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::FFFF:129.144.52.38]/cgi/test.cgi"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ipv6_2
name|void
name|tst_QUrl
operator|::
name|ipv6_2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|input
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
name|url
operator|.
name|host
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moreIpv6
name|void
name|tst_QUrl
operator|::
name|moreIpv6
parameter_list|()
block|{
name|QUrl
name|waba1
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi"
argument_list|)
decl_stmt|;
name|waba1
operator|.
name|setHost
argument_list|(
literal|"::ffff:129.144.52.38"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|waba1
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://[::ffff:129.144.52.38]/cgi/test.cgi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|punycode_data
name|void
name|tst_QUrl
operator|::
name|punycode_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"original"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Ã¸l"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã¸l"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xn--l-4ga"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"BÃ¼hler"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"BÃ¼hler"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xn--Bhler-kva"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rÃ¤ksmÃ¶rgÃ¥s"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"rÃ¤ksmÃ¶rgÃ¥s"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"xn--rksmrgs-5wao1o"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|punycode
name|void
name|tst_QUrl
operator|::
name|punycode
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromPunycode
argument_list|(
name|encoded
argument_list|)
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromPunycode
argument_list|(
name|QUrl
operator|::
name|toPunycode
argument_list|(
name|original
argument_list|)
argument_list|)
argument_list|,
name|original
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|toPunycode
argument_list|(
name|original
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|,
name|encoded
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isRelative_data
name|void
name|tst_QUrl
operator|::
name|isRelative_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"not"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"55288"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"node64.html#fig:form:ana"
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// kde
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto: URL, is relative"
argument_list|)
operator|<<
literal|"mailto:faure@kde.org"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"man: URL, is relative"
argument_list|)
operator|<<
literal|"man:mmap"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"javascript: URL, is relative"
argument_list|)
operator|<<
literal|"javascript:doSomething()"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file: URL, is relative"
argument_list|)
operator|<<
literal|"file:/blah"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/path, is relative"
argument_list|)
operator|<<
literal|"/path"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"something, is relative"
argument_list|)
operator|<<
literal|"something"
operator|<<
literal|true
expr_stmt|;
comment|// end kde
block|}
end_function
begin_function
DECL|function|isRelative
name|void
name|tst_QUrl
operator|::
name|isRelative
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|url
argument_list|)
operator|.
name|isRelative
argument_list|()
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setQueryItems
name|void
name|tst_QUrl
operator|::
name|setQueryItems
parameter_list|()
block|{
name|QUrl
name|url
decl_stmt|;
name|QList
argument_list|<
name|QPair
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
argument_list|>
name|query
decl_stmt|;
name|query
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"type"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"login"
argument_list|)
argument_list|)
expr_stmt|;
name|query
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"name"
argument_list|)
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"Ã¥ge nissemannsen"
argument_list|)
argument_list|)
expr_stmt|;
name|query
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"ole&du"
argument_list|)
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"anne+jÃ¸rgen=sant"
argument_list|)
argument_list|)
expr_stmt|;
name|query
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"prosent"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"%"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setQueryItems
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"type=login&name=%C3%A5ge%20nissemannsen&ole%26du="
literal|"anne+j%C3%B8rgen%3Dsant&prosent=%25"
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setQueryDelimiters
argument_list|(
literal|'>'
argument_list|,
literal|'/'
argument_list|)
expr_stmt|;
name|url
operator|.
name|setQueryItems
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"type>login/name>%C3%A5ge%20nissemannsen/ole&du>"
literal|"anne+j%C3%B8rgen=sant/prosent>%25"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setFragment
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"top"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"top"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setScheme
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"qt.nokia.com"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://qt.nokia.com?type>login/name>%C3%A5ge%20nissemannsen/ole&du>"
literal|"anne+j%C3%B8rgen=sant/prosent>%25#top"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://qt.nokia.com?type>login/name>Ã¥ge nissemannsen"
literal|"/ole&du>anne+jÃ¸rgen=sant/prosent>%25#top"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|queryItems
name|void
name|tst_QUrl
operator|::
name|queryItems
parameter_list|()
block|{
name|QUrl
name|url
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QPair
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
argument_list|>
name|newItems
decl_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"2"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"3"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"4"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"a b"
argument_list|)
argument_list|)
expr_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"5"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"&"
argument_list|)
argument_list|)
expr_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"foo bar"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"hello world"
argument_list|)
argument_list|)
expr_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"foo+bar"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"hello+world"
argument_list|)
argument_list|)
expr_stmt|;
name|newItems
operator|+=
name|qMakePair
argument_list|(
name|QString
argument_list|(
literal|"tex"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"a + b = c"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setQueryItems
argument_list|(
name|newItems
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QPair
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
argument_list|>
name|setItems
init|=
name|url
operator|.
name|queryItems
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|newItems
operator|==
name|setItems
argument_list|)
expr_stmt|;
name|url
operator|.
name|addQueryItem
argument_list|(
literal|"1"
argument_list|,
literal|"z"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasQueryItem
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"1"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"a"
argument_list|)
expr_stmt|;
name|url
operator|.
name|addQueryItem
argument_list|(
literal|"1"
argument_list|,
literal|"zz"
argument_list|)
expr_stmt|;
name|QStringList
name|expected
decl_stmt|;
name|expected
operator|+=
literal|"a"
expr_stmt|;
name|expected
operator|+=
literal|"z"
expr_stmt|;
name|expected
operator|+=
literal|"zz"
expr_stmt|;
name|QCOMPARE
argument_list|(
name|expected
argument_list|,
name|url
operator|.
name|allQueryItemValues
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|removeQueryItem
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|allQueryItemValues
argument_list|(
literal|"1"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"1"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"z"
argument_list|)
expr_stmt|;
name|url
operator|.
name|removeAllQueryItems
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasQueryItem
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"4"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"a b"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"5"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"&"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"tex"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"a + b = c"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"foo bar"
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"hello world"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://www.google.com/search?q=a+b"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"q"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"a+b"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://www.google.com/search?q=a=b"
argument_list|)
expr_stmt|;
comment|// invalid, but should be tolerated
name|QCOMPARE
argument_list|(
name|url
operator|.
name|queryItemValue
argument_list|(
literal|"q"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"a=b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasQuery_data
name|void
name|tst_QUrl
operator|::
name|hasQuery_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no query items"
argument_list|)
operator|<<
literal|"http://www.foo.bar"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty query"
argument_list|)
operator|<<
literal|"http://www.foo.bar?"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty query 2"
argument_list|)
operator|<<
literal|"http://www.foo.bar/?"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query"
argument_list|)
operator|<<
literal|"http://www.foo.bar?query"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query="
argument_list|)
operator|<<
literal|"http://www.foo.bar?query="
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query=value"
argument_list|)
operator|<<
literal|"http://www.foo.bar?query=value"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%3f"
argument_list|)
operator|<<
literal|"http://www.foo.bar/file%3f"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%3f-query"
argument_list|)
operator|<<
literal|"http://www.foo.bar/file%3fquery"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%3f-query=value"
argument_list|)
operator|<<
literal|"http://www.foo.bar/file%3fquery=value"
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasQuery
name|void
name|tst_QUrl
operator|::
name|hasQuery
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QUrl
name|qurl
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|hasQuery
argument_list|()
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|,
operator|!
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasQueryItem_data
name|void
name|tst_QUrl
operator|::
name|hasQueryItem_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"item"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no query items"
argument_list|)
operator|<<
literal|"http://www.foo.bar"
operator|<<
literal|"baz"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query item: hello"
argument_list|)
operator|<<
literal|"http://www.foo.bar?hello=world"
operator|<<
literal|"hello"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no query item: world"
argument_list|)
operator|<<
literal|"http://www.foo.bar?hello=world"
operator|<<
literal|"world"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query item: qt"
argument_list|)
operator|<<
literal|"http://www.foo.bar?hello=world&qt=rocks"
operator|<<
literal|"qt"
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasQueryItem
name|void
name|tst_QUrl
operator|::
name|hasQueryItem
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|item
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
argument_list|(
name|url
argument_list|)
operator|.
name|hasQueryItem
argument_list|(
name|item
argument_list|)
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nameprep
name|void
name|tst_QUrl
operator|::
name|nameprep
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://www.fu"
literal|"\xc3"
literal|"\x9f"
literal|"ball.de/"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"http://www.fussball.de/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isValid
name|void
name|tst_QUrl
operator|::
name|isValid
parameter_list|()
block|{
block|{
name|QUrl
name|url
argument_list|(
name|QString
argument_list|(
literal|"A=B"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"A=B"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://strange<username>@ok-hostname/"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|//< and> are not allowed in userinfo in strict mode
name|url
operator|.
name|setUserName
argument_list|(
literal|"normal_username"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://strange<username>@ok-hostname/"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|//< and> are allowed in tolerant mode
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://strange;hostname/here"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/here"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
literal|"strange;hostname"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
literal|"foobar@bar"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
literal|"strange;hostname"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"invalid hostname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"foo://stuff;1/g"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/g"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"stuff;1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"stuff-1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"stuff;1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|errorString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"invalid hostname"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|schemeValidator_data
name|void
name|tst_QUrl
operator|::
name|schemeValidator_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toString"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QByteArray
argument_list|()
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
comment|// ftp
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp:"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"ftp:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp://ftp.qt.nokia.com"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp://ftp.qt.nokia.com"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp://ftp.qt.nokia.com/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp://ftp.qt.nokia.com/"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"ftp://ftp.qt.nokia.com/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ftp:/index.html"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ftp:/index.html"
argument_list|)
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
comment|// mailto
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"mailto:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto://smtp.trolltech.com/ole@bull.name"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto://smtp.trolltech.com/ole@bull.name"
argument_list|)
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto:"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"mailto:"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto:ole@bull.name"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"mailto:ole@bull.name"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"mailto:ole@bull.name"
argument_list|)
expr_stmt|;
comment|// file
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file:"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:/etc/passwd"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"file:///etc/passwd"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|schemeValidator
name|void
name|tst_QUrl
operator|::
name|schemeValidator
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toString
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|encodedUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidSchemeValidator
name|void
name|tst_QUrl
operator|::
name|invalidSchemeValidator
parameter_list|()
block|{
comment|// test that if scheme does not start with an ALPHA, QUrl::isValid() returns false
block|{
name|QUrl
name|url
argument_list|(
literal|"1http://qt.nokia.com"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
decl_stmt|;
name|url
operator|.
name|setScheme
argument_list|(
literal|"111http://qt.nokia.com"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"1http://qt.nokia.com"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|// non-ALPHA character at other positions in the scheme are ok
block|{
name|QUrl
name|url
argument_list|(
literal|"ht111tp://qt.nokia.com"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
decl_stmt|;
name|url
operator|.
name|setScheme
argument_list|(
literal|"ht123tp://qt.nokia.com"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"ht321tp://qt.nokia.com"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|tolerantParser
name|void
name|tst_QUrl
operator|::
name|tolerantParser
parameter_list|()
block|{
block|{
name|QUrl
name|url
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/path with spaces.html"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://www.example.com/path%20with%20spaces.html"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/path with spaces.html"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://www.example.com/path%20with spaces.html"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url15581
argument_list|(
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%in%url.htm>"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|url15581
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url15581
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://alain.knaff.linux.lu/bug-reports/kde/percentage%25in%25url.htm%3E"
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|webkit22616
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/testya.php?browser-info=s:1400x1050x24:f:9.0%20r152:t:%u0442%u0435%u0441%u0442"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|webkit22616
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|webkit22616
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://example.com/testya.php?browser-info=s:1400x1050x24:f:9.0%20r152:t:%25u0442%25u0435%25u0441%25u0442"
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"[].jpg"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"%5B%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"/some/[path]/[]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"/some/%5Bpath%5D/%5B%5D"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]#[]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[::56:56:56:56:56:56:56]#%5B%5D"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]?[]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[::56:56:56:56:56:56:56]?%5B%5D"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"%hello.com/f%"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"%25hello.com/f%25"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://www.host.com/foo.php?P0=[2006-3-8]"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"http://foo.bar/[image][1].jpg"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"http://foo.bar/%5Bimage%5D%5B1%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"[].jpg"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"%5B%5D.jpg"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"/some/[path]/[]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"/some/%5Bpath%5D/%5B%5D"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[::56:56:56:56:56:56:56]"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]#[]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[::56:56:56:56:56:56:56]#%5B%5D"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"//[::56:56:56:56:56:56:56]?[]"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"//[::56:56:56:56:56:56:56]?%5B%5D"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"data:text/css,div%20{%20border-right:%20solid;%20}"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"data:text/css,div%20%7B%20border-right:%20solid;%20%7D"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QByteArray
name|tsdgeos
argument_list|(
literal|"http://google.com/c?c=Translation+%C2%BB+trunk|"
argument_list|)
decl_stmt|;
name|QUrl
name|tsdgeosQUrl
decl_stmt|;
name|tsdgeosQUrl
operator|.
name|setEncodedUrl
argument_list|(
name|tsdgeos
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tsdgeosQUrl
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// failed in Qt-4.4, works in Qt-4.5
name|QByteArray
name|tsdgeosExpected
argument_list|(
literal|"http://google.com/c?c=Translation+%C2%BB+trunk%7C"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QString
argument_list|(
name|tsdgeosQUrl
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
argument_list|(
name|tsdgeosExpected
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
literal|"http://strange<username>@hostname/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"http://strange%3Cusername%3E@hostname/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|correctEncodedMistakes_data
name|void
name|tst_QUrl
operator|::
name|correctEncodedMistakes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encodedUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toDecoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"toEncoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"3%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"3%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"3%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25!!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25az"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%25"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|correctEncodedMistakes
name|void
name|tst_QUrl
operator|::
name|correctEncodedMistakes
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encodedUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toDecoded
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|toEncoded
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|encodedUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|Q_UNUSED
argument_list|(
name|toDecoded
argument_list|)
expr_stmt|;
comment|// no full-decoding available at the moment
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|toEncoded
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|toEncoded
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|correctDecodedMistakes_data
name|void
name|tst_QUrl
operator|::
name|correctDecodedMistakes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"decodedUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toDecoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"toEncoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"3%"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"3%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"3%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"3%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%!!"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25!!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%a"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%az"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25az"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"13%25"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"13%25"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"13%25"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"13%25"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|correctDecodedMistakes
name|void
name|tst_QUrl
operator|::
name|correctDecodedMistakes
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|decodedUrl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toDecoded
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|toEncoded
argument_list|)
expr_stmt|;
name|QUrl
name|url
argument_list|(
name|decodedUrl
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|Q_UNUSED
argument_list|(
name|toDecoded
argument_list|)
expr_stmt|;
comment|// no full-decoding available at the moment
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|toEncoded
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
argument_list|,
name|toEncoded
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|idna_testsuite_data
name|void
name|tst_QUrl
operator|::
name|idna_testsuite_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"numchars"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|ushortarray
argument_list|>
argument_list|(
literal|"unicode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"punycode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"allowunassigned"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"usestd3asciirules"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"toasciirc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"tounicoderc"
argument_list|)
expr_stmt|;
name|unsigned
name|short
name|d1
index|[]
init|=
block|{
literal|0x0644
block|,
literal|0x064A
block|,
literal|0x0647
block|,
literal|0x0645
block|,
literal|0x0627
block|,
literal|0x0628
block|,
literal|0x062A
block|,
literal|0x0643
block|,
literal|0x0644
block|,
literal|0x0645
block|,
literal|0x0648
block|,
literal|0x0634
block|,
literal|0x0639
block|,
literal|0x0631
block|,
literal|0x0628
block|,
literal|0x064A
block|,
literal|0x061F
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Arabic (Egyptian)"
argument_list|)
operator|<<
literal|17
operator|<<
name|ushortarray
argument_list|(
name|d1
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"egbpdaj6bu4bxfgehfvwxn"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d2
index|[]
init|=
block|{
literal|0x4ED6
block|,
literal|0x4EEC
block|,
literal|0x4E3A
block|,
literal|0x4EC0
block|,
literal|0x4E48
block|,
literal|0x4E0D
block|,
literal|0x8BF4
block|,
literal|0x4E2D
block|,
literal|0x6587
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Chinese (simplified)"
argument_list|)
operator|<<
literal|9
operator|<<
name|ushortarray
argument_list|(
name|d2
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"ihqwcrb4cv8a8dqg056pqjye"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d3
index|[]
init|=
block|{
literal|0x4ED6
block|,
literal|0x5011
block|,
literal|0x7232
block|,
literal|0x4EC0
block|,
literal|0x9EBD
block|,
literal|0x4E0D
block|,
literal|0x8AAA
block|,
literal|0x4E2D
block|,
literal|0x6587
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Chinese (traditional)"
argument_list|)
operator|<<
literal|9
operator|<<
name|ushortarray
argument_list|(
name|d3
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"ihqwctvzc91f659drss3x8bo0yb"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d4
index|[]
init|=
block|{
literal|0x0050
block|,
literal|0x0072
block|,
literal|0x006F
block|,
literal|0x010D
block|,
literal|0x0070
block|,
literal|0x0072
block|,
literal|0x006F
block|,
literal|0x0073
block|,
literal|0x0074
block|,
literal|0x011B
block|,
literal|0x006E
block|,
literal|0x0065
block|,
literal|0x006D
block|,
literal|0x006C
block|,
literal|0x0075
block|,
literal|0x0076
block|,
literal|0x00ED
block|,
literal|0x010D
block|,
literal|0x0065
block|,
literal|0x0073
block|,
literal|0x006B
block|,
literal|0x0079
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Czech"
argument_list|)
operator|<<
literal|22
operator|<<
name|ushortarray
argument_list|(
name|d4
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"Proprostnemluvesky-uyb24dma41a"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d5
index|[]
init|=
block|{
literal|0x05DC
block|,
literal|0x05DE
block|,
literal|0x05D4
block|,
literal|0x05D4
block|,
literal|0x05DD
block|,
literal|0x05E4
block|,
literal|0x05E9
block|,
literal|0x05D5
block|,
literal|0x05D8
block|,
literal|0x05DC
block|,
literal|0x05D0
block|,
literal|0x05DE
block|,
literal|0x05D3
block|,
literal|0x05D1
block|,
literal|0x05E8
block|,
literal|0x05D9
block|,
literal|0x05DD
block|,
literal|0x05E2
block|,
literal|0x05D1
block|,
literal|0x05E8
block|,
literal|0x05D9
block|,
literal|0x05EA
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Hebrew"
argument_list|)
operator|<<
literal|22
operator|<<
name|ushortarray
argument_list|(
name|d5
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"4dbcagdahymbxekheh6e0a7fei0b"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d6
index|[]
init|=
block|{
literal|0x092F
block|,
literal|0x0939
block|,
literal|0x0932
block|,
literal|0x094B
block|,
literal|0x0917
block|,
literal|0x0939
block|,
literal|0x093F
block|,
literal|0x0928
block|,
literal|0x094D
block|,
literal|0x0926
block|,
literal|0x0940
block|,
literal|0x0915
block|,
literal|0x094D
block|,
literal|0x092F
block|,
literal|0x094B
block|,
literal|0x0902
block|,
literal|0x0928
block|,
literal|0x0939
block|,
literal|0x0940
block|,
literal|0x0902
block|,
literal|0x092C
block|,
literal|0x094B
block|,
literal|0x0932
block|,
literal|0x0938
block|,
literal|0x0915
block|,
literal|0x0924
block|,
literal|0x0947
block|,
literal|0x0939
block|,
literal|0x0948
block|,
literal|0x0902
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Hindi (Devanagari)"
argument_list|)
operator|<<
literal|30
operator|<<
name|ushortarray
argument_list|(
name|d6
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"i1baa7eci9glrd9b2ae1bj0hfcgg6iyaf8o0a1dig0cd"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d7
index|[]
init|=
block|{
literal|0x306A
block|,
literal|0x305C
block|,
literal|0x307F
block|,
literal|0x3093
block|,
literal|0x306A
block|,
literal|0x65E5
block|,
literal|0x672C
block|,
literal|0x8A9E
block|,
literal|0x3092
block|,
literal|0x8A71
block|,
literal|0x3057
block|,
literal|0x3066
block|,
literal|0x304F
block|,
literal|0x308C
block|,
literal|0x306A
block|,
literal|0x3044
block|,
literal|0x306E
block|,
literal|0x304B
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese (kanji and hiragana)"
argument_list|)
operator|<<
literal|18
operator|<<
name|ushortarray
argument_list|(
name|d7
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"n8jok5ay5dzabd5bym9f0cm5685rrjetr6pdxa"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d8
index|[]
init|=
block|{
literal|0x043F
block|,
literal|0x043E
block|,
literal|0x0447
block|,
literal|0x0435
block|,
literal|0x043C
block|,
literal|0x0443
block|,
literal|0x0436
block|,
literal|0x0435
block|,
literal|0x043E
block|,
literal|0x043D
block|,
literal|0x0438
block|,
literal|0x043D
block|,
literal|0x0435
block|,
literal|0x0433
block|,
literal|0x043E
block|,
literal|0x0432
block|,
literal|0x043E
block|,
literal|0x0440
block|,
literal|0x044F
block|,
literal|0x0442
block|,
literal|0x043F
block|,
literal|0x043E
block|,
literal|0x0440
block|,
literal|0x0443
block|,
literal|0x0441
block|,
literal|0x0441
block|,
literal|0x043A
block|,
literal|0x0438
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Russian (Cyrillic)"
argument_list|)
operator|<<
literal|28
operator|<<
name|ushortarray
argument_list|(
name|d8
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"b1abfaaepdrnnbgefbadotcwatmq2g4l"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d9
index|[]
init|=
block|{
literal|0x0050
block|,
literal|0x006F
block|,
literal|0x0072
block|,
literal|0x0071
block|,
literal|0x0075
block|,
literal|0x00E9
block|,
literal|0x006E
block|,
literal|0x006F
block|,
literal|0x0070
block|,
literal|0x0075
block|,
literal|0x0065
block|,
literal|0x0064
block|,
literal|0x0065
block|,
literal|0x006E
block|,
literal|0x0073
block|,
literal|0x0069
block|,
literal|0x006D
block|,
literal|0x0070
block|,
literal|0x006C
block|,
literal|0x0065
block|,
literal|0x006D
block|,
literal|0x0065
block|,
literal|0x006E
block|,
literal|0x0074
block|,
literal|0x0065
block|,
literal|0x0068
block|,
literal|0x0061
block|,
literal|0x0062
block|,
literal|0x006C
block|,
literal|0x0061
block|,
literal|0x0072
block|,
literal|0x0065
block|,
literal|0x006E
block|,
literal|0x0045
block|,
literal|0x0073
block|,
literal|0x0070
block|,
literal|0x0061
block|,
literal|0x00F1
block|,
literal|0x006F
block|,
literal|0x006C
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Spanish"
argument_list|)
operator|<<
literal|40
operator|<<
name|ushortarray
argument_list|(
name|d9
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"PorqunopuedensimplementehablarenEspaol-fmd56a"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d10
index|[]
init|=
block|{
literal|0x0054
block|,
literal|0x1EA1
block|,
literal|0x0069
block|,
literal|0x0073
block|,
literal|0x0061
block|,
literal|0x006F
block|,
literal|0x0068
block|,
literal|0x1ECD
block|,
literal|0x006B
block|,
literal|0x0068
block|,
literal|0x00F4
block|,
literal|0x006E
block|,
literal|0x0067
block|,
literal|0x0074
block|,
literal|0x0068
block|,
literal|0x1EC3
block|,
literal|0x0063
block|,
literal|0x0068
block|,
literal|0x1EC9
block|,
literal|0x006E
block|,
literal|0x00F3
block|,
literal|0x0069
block|,
literal|0x0074
block|,
literal|0x0069
block|,
literal|0x1EBF
block|,
literal|0x006E
block|,
literal|0x0067
block|,
literal|0x0056
block|,
literal|0x0069
block|,
literal|0x1EC7
block|,
literal|0x0074
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Vietnamese"
argument_list|)
operator|<<
literal|31
operator|<<
name|ushortarray
argument_list|(
name|d10
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"TisaohkhngthchnitingVit-kjcr8268qyxafd2f1b9g"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d11
index|[]
init|=
block|{
literal|0x0033
block|,
literal|0x5E74
block|,
literal|0x0042
block|,
literal|0x7D44
block|,
literal|0x91D1
block|,
literal|0x516B
block|,
literal|0x5148
block|,
literal|0x751F
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese"
argument_list|)
operator|<<
literal|8
operator|<<
name|ushortarray
argument_list|(
name|d11
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"3B-ww4c5e180e575a65lsy2b"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d12
index|[]
init|=
block|{
literal|0x5B89
block|,
literal|0x5BA4
block|,
literal|0x5948
block|,
literal|0x7F8E
block|,
literal|0x6075
block|,
literal|0x002D
block|,
literal|0x0077
block|,
literal|0x0069
block|,
literal|0x0074
block|,
literal|0x0068
block|,
literal|0x002D
block|,
literal|0x0053
block|,
literal|0x0055
block|,
literal|0x0050
block|,
literal|0x0045
block|,
literal|0x0052
block|,
literal|0x002D
block|,
literal|0x004D
block|,
literal|0x004F
block|,
literal|0x004E
block|,
literal|0x004B
block|,
literal|0x0045
block|,
literal|0x0059
block|,
literal|0x0053
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese2"
argument_list|)
operator|<<
literal|24
operator|<<
name|ushortarray
argument_list|(
name|d12
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"-with-SUPER-MONKEYS-pc58ag80a8qai00g7n9n"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d13
index|[]
init|=
block|{
literal|0x0048
block|,
literal|0x0065
block|,
literal|0x006C
block|,
literal|0x006C
block|,
literal|0x006F
block|,
literal|0x002D
block|,
literal|0x0041
block|,
literal|0x006E
block|,
literal|0x006F
block|,
literal|0x0074
block|,
literal|0x0068
block|,
literal|0x0065
block|,
literal|0x0072
block|,
literal|0x002D
block|,
literal|0x0057
block|,
literal|0x0061
block|,
literal|0x0079
block|,
literal|0x002D
block|,
literal|0x305D
block|,
literal|0x308C
block|,
literal|0x305E
block|,
literal|0x308C
block|,
literal|0x306E
block|,
literal|0x5834
block|,
literal|0x6240
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese3"
argument_list|)
operator|<<
literal|25
operator|<<
name|ushortarray
argument_list|(
name|d13
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"Hello-Another-Way--fc4qua05auwb3674vfr0b"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d14
index|[]
init|=
block|{
literal|0x3072
block|,
literal|0x3068
block|,
literal|0x3064
block|,
literal|0x5C4B
block|,
literal|0x6839
block|,
literal|0x306E
block|,
literal|0x4E0B
block|,
literal|0x0032
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese4"
argument_list|)
operator|<<
literal|8
operator|<<
name|ushortarray
argument_list|(
name|d14
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"2-u9tlzr9756bt3uc0v"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d15
index|[]
init|=
block|{
literal|0x004D
block|,
literal|0x0061
block|,
literal|0x006A
block|,
literal|0x0069
block|,
literal|0x3067
block|,
literal|0x004B
block|,
literal|0x006F
block|,
literal|0x0069
block|,
literal|0x3059
block|,
literal|0x308B
block|,
literal|0x0035
block|,
literal|0x79D2
block|,
literal|0x524D
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese5"
argument_list|)
operator|<<
literal|13
operator|<<
name|ushortarray
argument_list|(
name|d15
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"MajiKoi5-783gue6qz075azm5e"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d16
index|[]
init|=
block|{
literal|0x30D1
block|,
literal|0x30D5
block|,
literal|0x30A3
block|,
literal|0x30FC
block|,
literal|0x0064
block|,
literal|0x0065
block|,
literal|0x30EB
block|,
literal|0x30F3
block|,
literal|0x30D0
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese6"
argument_list|)
operator|<<
literal|9
operator|<<
name|ushortarray
argument_list|(
name|d16
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"de-jg4avhby1noc0d"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d17
index|[]
init|=
block|{
literal|0x305D
block|,
literal|0x306E
block|,
literal|0x30B9
block|,
literal|0x30D4
block|,
literal|0x30FC
block|,
literal|0x30C9
block|,
literal|0x3067
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Japanese7"
argument_list|)
operator|<<
literal|7
operator|<<
name|ushortarray
argument_list|(
name|d17
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"d9juau41awczczp"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d18
index|[]
init|=
block|{
literal|0x03b5
block|,
literal|0x03bb
block|,
literal|0x03bb
block|,
literal|0x03b7
block|,
literal|0x03bd
block|,
literal|0x03b9
block|,
literal|0x03ba
block|,
literal|0x03ac
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Greek"
argument_list|)
operator|<<
literal|8
operator|<<
name|ushortarray
argument_list|(
name|d18
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"hxargifdar"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d19
index|[]
init|=
block|{
literal|0x0062
block|,
literal|0x006f
block|,
literal|0x006e
block|,
literal|0x0121
block|,
literal|0x0075
block|,
literal|0x0073
block|,
literal|0x0061
block|,
literal|0x0127
block|,
literal|0x0127
block|,
literal|0x0061
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Maltese (Malti)"
argument_list|)
operator|<<
literal|10
operator|<<
name|ushortarray
argument_list|(
name|d19
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"bonusaa-5bb1da"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
name|unsigned
name|short
name|d20
index|[]
init|=
block|{
literal|0x043f
block|,
literal|0x043e
block|,
literal|0x0447
block|,
literal|0x0435
block|,
literal|0x043c
block|,
literal|0x0443
block|,
literal|0x0436
block|,
literal|0x0435
block|,
literal|0x043e
block|,
literal|0x043d
block|,
literal|0x0438
block|,
literal|0x043d
block|,
literal|0x0435
block|,
literal|0x0433
block|,
literal|0x043e
block|,
literal|0x0432
block|,
literal|0x043e
block|,
literal|0x0440
block|,
literal|0x044f
block|,
literal|0x0442
block|,
literal|0x043f
block|,
literal|0x043e
block|,
literal|0x0440
block|,
literal|0x0443
block|,
literal|0x0441
block|,
literal|0x0441
block|,
literal|0x043a
block|,
literal|0x0438
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Russian (Cyrillic)"
argument_list|)
operator|<<
literal|28
operator|<<
name|ushortarray
argument_list|(
name|d20
argument_list|)
operator|<<
name|QByteArray
argument_list|(
name|IDNA_ACE_PREFIX
literal|"b1abfaaepdrnnbgefbadotcwatmq2g4l"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
name|IDNA_SUCCESS
operator|<<
name|IDNA_SUCCESS
expr_stmt|;
block|}
end_function
begin_function
DECL|function|idna_testsuite
name|void
name|tst_QUrl
operator|::
name|idna_testsuite
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|numchars
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|ushortarray
argument_list|,
name|unicode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|punycode
argument_list|)
expr_stmt|;
name|QString
name|s
init|=
name|QString
operator|::
name|fromUtf16
argument_list|(
name|unicode
operator|.
name|points
argument_list|,
name|numchars
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|punycode
argument_list|,
name|QUrl
operator|::
name|toPunycode
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nameprep_testsuite_data
name|void
name|tst_QUrl
operator|::
name|nameprep_testsuite_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"in"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"out"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"profile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Map to nothing"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foo\xC2\xAD\xCD\x8F\xE1\xA0\x86\xE1\xA0\x8B"
literal|"bar"
literal|"\xE2\x80\x8B\xE2\x81\xA0"
literal|"baz\xEF\xB8\x80\xEF\xB8\x88"
literal|"\xEF\xB8\x8F\xEF\xBB\xBF"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foobarbaz"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case folding ASCII U+0043 U+0041 U+0046 U+0045"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"CAFE"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"cafe"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case folding 8bit U+00DF (german sharp s)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC3\x9F"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ss"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case folding U+0130 (turkish capital I with dot)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC4\xB0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"i\xcc\x87"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case folding multibyte U+0143 U+037A"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC5\x83\xCD\xBA"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC5\x84 \xCE\xB9"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case folding U+2121 U+33C6 U+1D7BB"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE2\x84\xA1\xE3\x8F\x86\xF0\x9D\x9E\xBB"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"telc\xE2\x88\x95"
literal|"kg\xCF\x83"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Normalization of U+006a U+030c U+00A0 U+00AA"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x6A\xCC\x8C\xC2\xA0\xC2\xAA"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC7\xB0 a"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Case folding U+1FB7 and normalization"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\xBE\xB7"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\xBE\xB6\xCE\xB9"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Self-reverting case folding U+01F0 and normalization"
argument_list|)
comment|//<< QString::fromUtf8("\xC7\xF0") ### typo in the original testsuite
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC7\xB0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC7\xB0"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Self-reverting case folding U+0390 and normalization"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCE\x90"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCE\x90"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Self-reverting case folding U+03B0 and normalization"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCE\xB0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCE\xB0"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Self-reverting case folding U+1E96 and normalization"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\xBA\x96"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\xBA\x96"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Self-reverting case folding U+1F56 and normalization"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\xBD\x96"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\xBD\x96"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ASCII space character U+0020"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x20"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x20"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-ASCII 8bit space character U+00A0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC2\xA0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x20"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-ASCII multibyte space character U+1680"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\x9A\x80"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-ASCII multibyte space character U+2000"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE2\x80\x80"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x20"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Zero Width Space U+200b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE2\x80\x8b"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-ASCII multibyte space character U+3000"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE3\x80\x80"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x20"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ASCII control characters U+0010 U+007F"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x10\x7F"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\x10\x7F"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-ASCII 8bit control character U+0085"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xC2\x85"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-ASCII multibyte control character U+180E"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE1\xA0\x8E"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Zero Width No-Break Space U+FEFF"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xEF\xBB\xBF"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-ASCII control character U+1D175"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF0\x9D\x85\xB5"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Plane 0 private use character U+F123"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xEF\x84\xA3"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Plane 15 private use character U+F1234"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF3\xB1\x88\xB4"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Plane 16 private use character U+10F234"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF4\x8F\x88\xB4"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-character code point U+8FFFE"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF2\x8F\xBF\xBE"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-character code point U+10FFFF"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF4\x8F\xBF\xBF"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Surrogate code U+DF42"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xED\xBD\x82"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Non-plain text character U+FFFD"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xEF\xBF\xBD"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Ideographic description character U+2FF5"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE2\xBF\xB5"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Display property character U+0341"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCD\x81"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCC\x81"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Left-to-right mark U+200E"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE2\x80\x8E"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCC\x81"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Deprecated U+202A"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xE2\x80\xAA"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCC\x81"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Language tagging character U+E0001"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF3\xA0\x80\x81"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xCC\x81"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Language tagging character U+E0042"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF3\xA0\x81\x82"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_CONTAINS_PROHIBITED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Bidi: RandALCat character U+05BE and LCat characters"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foo\xD6\xBE"
literal|"bar"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_BIDI_BOTH_L_AND_RAL
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Bidi: RandALCat character U+FD50 and LCat characters"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foo\xEF\xB5\x90"
literal|"bar"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_BIDI_BOTH_L_AND_RAL
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Bidi: RandALCat character U+FB38 and LCat characters"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foo\xEF\xB9\xB6"
literal|"bar"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foo \xd9\x8e"
literal|"bar"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Bidi: RandALCat without trailing RandALCat U+0627 U+0031"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xD8\xA7\x31"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
name|STRINGPREP_BIDI_LEADTRAIL_NOT_RAL
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Bidi: RandALCat character U+0627 U+0031 U+0628"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xD8\xA7\x31\xD8\xA8"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xD8\xA7\x31\xD8\xA8"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Unassigned code point U+E0002"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xF3\xA0\x80\x82"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
name|STRINGPREP_NO_UNASSIGNED
operator|<<
name|STRINGPREP_CONTAINS_UNASSIGNED
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Larger test (shrinking)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"X\xC2\xAD\xC3\x9F\xC4\xB0\xE2\x84\xA1\x6a\xcc\x8c\xc2\xa0\xc2"
literal|"\xaa\xce\xb0\xe2\x80\x80"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"xssi\xcc\x87"
literal|"tel\xc7\xb0 a\xce\xb0 "
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"Nameprep"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Larger test (expanding)"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"X\xC3\x9F\xe3\x8c\x96\xC4\xB0\xE2\x84\xA1\xE2\x92\x9F\xE3\x8c\x80"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"xss\xe3\x82\xad\xe3\x83\xad\xe3\x83\xa1\xe3\x83\xbc\xe3\x83\x88"
literal|"\xe3\x83\xab"
literal|"i\xcc\x87"
literal|"tel\x28"
literal|"d\x29\xe3\x82\xa2\xe3\x83\x91"
literal|"\xe3\x83\xbc\xe3\x83\x88"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_function_decl
name|QT_BEGIN_NAMESPACE
specifier|extern
name|void
name|qt_nameprep
parameter_list|(
name|QString
modifier|*
name|source
parameter_list|,
name|int
name|from
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|extern
name|bool
name|qt_check_std3rules
parameter_list|(
specifier|const
name|QChar
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_function_decl
begin_function
name|QT_END_NAMESPACE
endif|#
directive|endif
DECL|function|nameprep_testsuite
name|void
name|tst_QUrl
operator|::
name|nameprep_testsuite
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|in
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|profile
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"Left-to-right mark U+200E"
argument_list|,
literal|"Investigate further"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"Deprecated U+202A"
argument_list|,
literal|"Investigate further"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|"Language tagging character U+E0001"
argument_list|,
literal|"Investigate further"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|qt_nameprep
argument_list|(
operator|&
name|in
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|in
argument_list|,
name|out
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|nameprep_highcodes_data
name|void
name|tst_QUrl
operator|::
name|nameprep_highcodes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"in"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"out"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"profile"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"flags"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"rc"
argument_list|)
expr_stmt|;
block|{
name|QChar
name|st
index|[]
init|=
block|{
literal|'-'
block|,
literal|0xd801
block|,
literal|0xdc1d
block|,
literal|'a'
block|}
decl_stmt|;
name|QChar
name|se
index|[]
init|=
block|{
literal|'-'
block|,
literal|0xd801
block|,
literal|0xdc45
block|,
literal|'a'
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"highcodes (U+1041D)"
argument_list|)
operator|<<
name|QString
argument_list|(
name|st
argument_list|,
sizeof|sizeof
argument_list|(
name|st
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|st
index|[
literal|0
index|]
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
name|se
argument_list|,
sizeof|sizeof
argument_list|(
name|se
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|se
index|[
literal|0
index|]
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
block|}
block|{
name|QChar
name|st
index|[]
init|=
block|{
literal|0x011C
block|,
literal|0xd835
block|,
literal|0xdf6e
block|,
literal|0x0110
block|}
decl_stmt|;
name|QChar
name|se
index|[]
init|=
block|{
literal|0x011D
block|,
literal|0x03C9
block|,
literal|0x0111
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"highcodes (U+1D76E)"
argument_list|)
operator|<<
name|QString
argument_list|(
name|st
argument_list|,
sizeof|sizeof
argument_list|(
name|st
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|st
index|[
literal|0
index|]
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
name|se
argument_list|,
sizeof|sizeof
argument_list|(
name|se
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|se
index|[
literal|0
index|]
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
block|}
block|{
name|QChar
name|st
index|[]
init|=
block|{
literal|'D'
block|,
literal|0xdb40
block|,
literal|0xdc20
block|,
literal|'o'
block|,
literal|0xd834
block|,
literal|0xdd7a
block|,
literal|'\''
block|,
literal|0x2060
block|,
literal|'h'
block|}
decl_stmt|;
name|QChar
name|se
index|[]
init|=
block|{
literal|'d'
block|,
literal|'o'
block|,
literal|'\''
block|,
literal|'h'
block|}
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"highcodes (D, U+E0020, o, U+1D17A, ', U+2060, h)"
argument_list|)
operator|<<
name|QString
argument_list|(
name|st
argument_list|,
sizeof|sizeof
argument_list|(
name|st
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|st
index|[
literal|0
index|]
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
name|se
argument_list|,
sizeof|sizeof
argument_list|(
name|se
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|se
index|[
literal|0
index|]
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|nameprep_highcodes
name|void
name|tst_QUrl
operator|::
name|nameprep_highcodes
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|in
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|profile
argument_list|)
expr_stmt|;
name|qt_nameprep
argument_list|(
operator|&
name|in
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|in
argument_list|,
name|out
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|ace_testsuite_data
name|void
name|tst_QUrl
operator|::
name|ace_testsuite_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"in"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"toace"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"fromace"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"unicode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascii-lower"
argument_list|)
operator|<<
literal|"fluke"
operator|<<
literal|"fluke"
operator|<<
literal|"fluke"
operator|<<
literal|"fluke"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascii-mixed"
argument_list|)
operator|<<
literal|"FLuke"
operator|<<
literal|"fluke"
operator|<<
literal|"fluke"
operator|<<
literal|"fluke"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ascii-upper"
argument_list|)
operator|<<
literal|"FLUKE"
operator|<<
literal|"fluke"
operator|<<
literal|"fluke"
operator|<<
literal|"fluke"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"asciifolded"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"stra\337e"
argument_list|)
operator|<<
literal|"strasse"
operator|<<
literal|"."
operator|<<
literal|"strasse"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"asciifolded-dotcom"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"stra\337e.example.com"
argument_list|)
operator|<<
literal|"strasse.example.com"
operator|<<
literal|"."
operator|<<
literal|"strasse.example.com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"greek-mu"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"\265V"
argument_list|)
operator|<<
literal|"xn--v-lmb"
operator|<<
literal|"."
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\316\274v"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-ascii-lower"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
operator|<<
literal|"xn--alqualond-34a"
operator|<<
literal|"."
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-ascii-mixed"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Alqualond\353"
argument_list|)
operator|<<
literal|"xn--alqualond-34a"
operator|<<
literal|"."
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"non-ascii-upper"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"ALQUALOND\313"
argument_list|)
operator|<<
literal|"xn--alqualond-34a"
operator|<<
literal|"."
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-lower"
argument_list|)
operator|<<
literal|"xn--alqualond-34a"
operator|<<
literal|"xn--alqualond-34a"
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-mixed"
argument_list|)
operator|<<
literal|"Xn--alqualond-34a"
operator|<<
literal|"xn--alqualond-34a"
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-mixed2"
argument_list|)
operator|<<
literal|"XN--alqualond-34a"
operator|<<
literal|"xn--alqualond-34a"
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-mixed3"
argument_list|)
operator|<<
literal|"xn--ALQUALOND-34a"
operator|<<
literal|"xn--alqualond-34a"
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-mixed4"
argument_list|)
operator|<<
literal|"xn--alqualond-34A"
operator|<<
literal|"xn--alqualond-34a"
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-upper"
argument_list|)
operator|<<
literal|"XN--ALQUALOND-34A"
operator|<<
literal|"xn--alqualond-34a"
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"alqualond\353"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"separator-3002"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"example\343\200\202com"
argument_list|)
operator|<<
literal|"example.com"
operator|<<
literal|"."
operator|<<
literal|"example.com"
expr_stmt|;
name|QString
name|egyptianIDN
init|=
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\331\210\330\262\330\247\330\261\330\251\055\330\247\331\204\330"
literal|"\243\330\252\330\265\330\247\331\204\330\247\330\252.\331\205"
literal|"\330\265\330\261"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"egyptian-tld-ace"
argument_list|)
operator|<<
literal|"xn----rmckbbajlc6dj7bxne2c.xn--wgbh1c"
operator|<<
literal|"xn----rmckbbajlc6dj7bxne2c.xn--wgbh1c"
operator|<<
literal|"."
operator|<<
name|egyptianIDN
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"egyptian-tld-unicode"
argument_list|)
operator|<<
name|egyptianIDN
operator|<<
literal|"xn----rmckbbajlc6dj7bxne2c.xn--wgbh1c"
operator|<<
literal|"."
operator|<<
name|egyptianIDN
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"egyptian-tld-mix1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\331\210\330\262\330\247\330\261\330\251\055\330\247\331\204\330"
literal|"\243\330\252\330\265\330\247\331\204\330\247\330\252.xn--wgbh1c"
argument_list|)
operator|<<
literal|"xn----rmckbbajlc6dj7bxne2c.xn--wgbh1c"
operator|<<
literal|"."
operator|<<
name|egyptianIDN
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"egyptian-tld-mix2"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"xn----rmckbbajlc6dj7bxne2c.\331\205\330\265\330\261"
argument_list|)
operator|<<
literal|"xn----rmckbbajlc6dj7bxne2c.xn--wgbh1c"
operator|<<
literal|"."
operator|<<
name|egyptianIDN
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ace_testsuite
name|void
name|tst_QUrl
operator|::
name|ace_testsuite
parameter_list|()
block|{
specifier|static
specifier|const
name|char
name|canonsuffix
index|[]
init|=
literal|".troll.no"
decl_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|in
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|toace
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|fromace
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|unicode
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|suffix
init|=
name|canonsuffix
decl_stmt|;
if|if
condition|(
name|toace
operator|.
name|contains
argument_list|(
literal|'.'
argument_list|)
condition|)
name|suffix
operator|=
literal|0
expr_stmt|;
name|QString
name|domain
init|=
name|in
operator|+
name|suffix
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|QUrl
operator|::
name|toAce
argument_list|(
name|domain
argument_list|)
argument_list|)
argument_list|,
name|toace
operator|+
name|suffix
argument_list|)
expr_stmt|;
if|if
condition|(
name|fromace
operator|!=
literal|"."
condition|)
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromAce
argument_list|(
name|domain
operator|.
name|toLatin1
argument_list|()
argument_list|)
argument_list|,
name|fromace
operator|+
name|suffix
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromAce
argument_list|(
name|QUrl
operator|::
name|toAce
argument_list|(
name|domain
argument_list|)
argument_list|)
argument_list|,
name|unicode
operator|+
name|suffix
argument_list|)
expr_stmt|;
name|domain
operator|=
name|in
operator|+
operator|(
name|suffix
condition|?
literal|".troll.No"
else|:
literal|""
operator|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|QUrl
operator|::
name|toAce
argument_list|(
name|domain
argument_list|)
argument_list|)
argument_list|,
name|toace
operator|+
name|suffix
argument_list|)
expr_stmt|;
if|if
condition|(
name|fromace
operator|!=
literal|"."
condition|)
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromAce
argument_list|(
name|domain
operator|.
name|toLatin1
argument_list|()
argument_list|)
argument_list|,
name|fromace
operator|+
name|suffix
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromAce
argument_list|(
name|QUrl
operator|::
name|toAce
argument_list|(
name|domain
argument_list|)
argument_list|)
argument_list|,
name|unicode
operator|+
name|suffix
argument_list|)
expr_stmt|;
name|domain
operator|=
name|in
operator|+
operator|(
name|suffix
condition|?
literal|".troll.NO"
else|:
literal|""
operator|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|QUrl
operator|::
name|toAce
argument_list|(
name|domain
argument_list|)
argument_list|)
argument_list|,
name|toace
operator|+
name|suffix
argument_list|)
expr_stmt|;
if|if
condition|(
name|fromace
operator|!=
literal|"."
condition|)
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromAce
argument_list|(
name|domain
operator|.
name|toLatin1
argument_list|()
argument_list|)
argument_list|,
name|fromace
operator|+
name|suffix
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromAce
argument_list|(
name|QUrl
operator|::
name|toAce
argument_list|(
name|domain
argument_list|)
argument_list|)
argument_list|,
name|unicode
operator|+
name|suffix
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|std3violations_data
name|void
name|tst_QUrl
operator|::
name|std3violations_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"source"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"validUrl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"too-long"
argument_list|)
operator|<<
literal|"this-domain-is-far-too-long-for-its-own-good-and-should-have-been-limited-to-63-chars"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dash-begin"
argument_list|)
operator|<<
literal|"-x-foo"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dash-end"
argument_list|)
operator|<<
literal|"x-foo-"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dash-begin-end"
argument_list|)
operator|<<
literal|"-foo-"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"control"
argument_list|)
operator|<<
literal|"\033foo"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bang"
argument_list|)
operator|<<
literal|"foo!"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"plus"
argument_list|)
operator|<<
literal|"foo+bar"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dot"
argument_list|)
operator|<<
literal|"foo.bar"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"startingdot"
argument_list|)
operator|<<
literal|".bar"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"startingdot2"
argument_list|)
operator|<<
literal|".example.com"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"slash"
argument_list|)
operator|<<
literal|"foo/bar"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"colon"
argument_list|)
operator|<<
literal|"foo:80"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"question"
argument_list|)
operator|<<
literal|"foo?bar"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"at"
argument_list|)
operator|<<
literal|"foo@bar"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"backslash"
argument_list|)
operator|<<
literal|"foo\\bar"
operator|<<
literal|false
expr_stmt|;
comment|// these characters are transformed by NFKC to non-LDH characters
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dot-like"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foo\342\200\244bar"
argument_list|)
operator|<<
literal|false
expr_stmt|;
comment|// U+2024 ONE DOT LEADER
name|QTest
operator|::
name|newRow
argument_list|(
literal|"slash-like"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"foo\357\274\217bar"
argument_list|)
operator|<<
literal|false
expr_stmt|;
comment|// U+FF0F FULLWIDTH SOLIDUS
comment|// The following should be invalid but isn't
comment|// the DIVISON SLASH doesn't case-fold to a slash
comment|// is this a problem with RFC 3490?
comment|//QTest::newRow("slash-like2")<< QString::fromUtf8("foo\342\210\225bar")<< false; // U+2215 DIVISION SLASH
block|}
end_function
begin_function
DECL|function|std3violations
name|void
name|tst_QUrl
operator|::
name|std3violations
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|source
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
block|{
name|QString
name|prepped
init|=
name|source
decl_stmt|;
name|qt_nameprep
argument_list|(
operator|&
name|prepped
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|qt_check_std3rules
argument_list|(
name|prepped
operator|.
name|constData
argument_list|()
argument_list|,
name|prepped
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
if|if
condition|(
name|source
operator|.
name|contains
argument_list|(
literal|'.'
argument_list|)
condition|)
return|return;
comment|// this test ends here
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setHost
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|validUrl
argument_list|)
expr_stmt|;
if|if
condition|(
name|validUrl
condition|)
return|return;
comment|// test ends here for these cases
name|url
operator|=
name|QUrl
argument_list|(
literal|"http://"
operator|+
name|source
operator|+
literal|"/some/path"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|std3deviations_data
name|void
name|tst_QUrl
operator|::
name|std3deviations_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"source"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ending-dot"
argument_list|)
operator|<<
literal|"example.com."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ending-dot3002"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"example.com"
argument_list|)
operator|+
name|QChar
argument_list|(
literal|0x3002
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"underline"
argument_list|)
operator|<<
literal|"foo_bar"
expr_stmt|;
comment|//QTBUG-7434
block|}
end_function
begin_function
DECL|function|std3deviations
name|void
name|tst_QUrl
operator|::
name|std3deviations
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|source
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QUrl
operator|::
name|toAce
argument_list|(
name|source
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setHost
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tldRestrictions_data
name|void
name|tst_QUrl
operator|::
name|tldRestrictions_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"tld"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"encode"
argument_list|)
expr_stmt|;
comment|// current whitelist
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ac"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ac"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"at"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"at"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"br"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"br"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"cat"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ch"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ch"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cl"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"cl"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"cn"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"cn"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"de"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"de"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"dk"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dk"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fi"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fi"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hu"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hu"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"info"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"info"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"io"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"io"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"jp"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"jp"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"kr"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"kr"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"li"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"li"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"lt"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"lt"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"museum"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"museum"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"no"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"se"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"se"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"sh"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"sh"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"th"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"th"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tm"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tm"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tw"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"tw"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vn"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"vn"
argument_list|)
operator|<<
literal|true
expr_stmt|;
comment|// known blacklists:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"com"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"com"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"foo"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"foo"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tldRestrictions
name|void
name|tst_QUrl
operator|::
name|tldRestrictions
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|tld
argument_list|)
expr_stmt|;
comment|// www.brÃ¸d.tld
name|QByteArray
name|ascii
init|=
literal|"www.xn--brd-1na."
operator|+
name|tld
operator|.
name|toLatin1
argument_list|()
decl_stmt|;
name|QString
name|unicode
init|=
name|QLatin1String
argument_list|(
literal|"www.br\370d."
argument_list|)
operator|+
name|tld
decl_stmt|;
name|QString
name|encoded
init|=
name|QUrl
operator|::
name|fromAce
argument_list|(
name|ascii
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
operator|!
name|encoded
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|encoded
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.xn--brd-1na."
operator|+
name|tld
operator|.
name|toLatin1
argument_list|()
argument_list|)
decl_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.xn--brd-1na."
argument_list|)
operator|+
name|tld
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setUrl
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.br\370d."
argument_list|)
operator|+
name|tld
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|url
operator|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.br%C3%B8d."
operator|+
name|tld
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
operator|!
name|url
operator|.
name|host
argument_list|()
operator|.
name|contains
argument_list|(
literal|".xn--"
argument_list|)
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|url
operator|.
name|host
argument_list|()
operator|==
name|unicode
argument_list|,
literal|"encode"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyQueryOrFragment
name|void
name|tst_QUrl
operator|::
name|emptyQueryOrFragment
parameter_list|()
block|{
name|QUrl
name|qurl
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi?"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://www.kde.org/cgi/test.cgi?"
argument_list|)
expr_stmt|;
comment|// Empty refs should be preserved
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi?"
argument_list|)
argument_list|)
expr_stmt|;
name|qurl
operator|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi#"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://www.kde.org/cgi/test.cgi#"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"http://www.kde.org/cgi/test.cgi#"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// start with an empty one
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// add fragment
name|url
operator|.
name|setFragment
argument_list|(
name|QLatin1String
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz#abc"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove fragment
name|url
operator|.
name|setFragment
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add empty fragment
name|url
operator|.
name|setFragment
argument_list|(
name|QLatin1String
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz#"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// start with an empty one
name|QUrl
name|url
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
comment|// add encodedQuery
name|url
operator|.
name|setEncodedQuery
argument_list|(
literal|"abc=def"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
argument_list|)
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"abc=def"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz?abc=def"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// remove encodedQuery
name|url
operator|.
name|setEncodedQuery
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// add empty encodedQuery
name|url
operator|.
name|setEncodedQuery
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|hasQuery
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|encodedQuery
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://www.foo.bar/baz?"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|hasFragment_data
name|void
name|tst_QUrl
operator|::
name|hasFragment_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"trueFalse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no fragment"
argument_list|)
operator|<<
literal|"http://www.foo.bar"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty fragment"
argument_list|)
operator|<<
literal|"http://www.foo.bar#"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty fragment 2"
argument_list|)
operator|<<
literal|"http://www.foo.bar/#"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment"
argument_list|)
operator|<<
literal|"http://www.foo.bar#baz"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"fragment2"
argument_list|)
operator|<<
literal|"http://www.foo.bar/#baz"
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%23"
argument_list|)
operator|<<
literal|"http://www.foo.bar/%23"
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"%23-and-something"
argument_list|)
operator|<<
literal|"http://www.foo.bar/%23baz"
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hasFragment
name|void
name|tst_QUrl
operator|::
name|hasFragment
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QUrl
name|qurl
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|hasFragment
argument_list|()
argument_list|,
name|trueFalse
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|fragment
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|,
operator|!
name|trueFalse
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setEncodedFragment_data
name|void
name|tst_QUrl
operator|::
name|setEncodedFragment_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"base"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"fragment"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
typedef|typedef
name|QByteArray
name|BA
typedef|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|""
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"basic test"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"abc"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#abc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"initial url has fragment"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#old"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"new"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#new"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"encoded fragment"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"a%20c"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#a%20c"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"with #"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"a#b"
argument_list|)
operator|<<
name|BA
argument_list|(
literal|"http://www.kde.org#a#b"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setEncodedFragment
name|void
name|tst_QUrl
operator|::
name|setEncodedFragment
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|fragment
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QUrl
name|u
decl_stmt|;
name|u
operator|.
name|setEncodedUrl
argument_list|(
name|base
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|u
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|u
operator|.
name|setEncodedFragment
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|u
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|u
operator|.
name|hasFragment
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
name|u
operator|.
name|toEncoded
argument_list|()
argument_list|)
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
name|expected
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromEncoded
name|void
name|tst_QUrl
operator|::
name|fromEncoded
parameter_list|()
block|{
name|QUrl
name|qurl2
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"print:/specials/Print%20To%20File%20(PDF%252FAcrobat)"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|qurl2
operator|.
name|path
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/specials/Print To File (PDF%2FAcrobat)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QFileInfo
argument_list|(
name|qurl2
operator|.
name|path
argument_list|()
argument_list|)
operator|.
name|fileName
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Print To File (PDF%2FAcrobat)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl2
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"print:/specials/Print%20To%20File%20(PDF%252FAcrobat)"
argument_list|)
expr_stmt|;
name|QUrl
name|qurl
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://\303\244.de"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qurl
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://xn--4ca.de"
argument_list|)
expr_stmt|;
name|QUrl
name|qurltest
argument_list|(
name|QUrl
operator|::
name|fromPercentEncoding
argument_list|(
literal|"http://\303\244.de"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qurltest
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QUrl
name|qurl_newline_1
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.foo.bar/foo/bar\ngnork"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|qurl_newline_1
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qurl_newline_1
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"http://www.foo.bar/foo/bar%0Agnork"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stripTrailingSlash
name|void
name|tst_QUrl
operator|::
name|stripTrailingSlash
parameter_list|()
block|{
name|QUrl
name|u1
argument_list|(
literal|"ftp://ftp.de.kde.org/dir"
argument_list|)
decl_stmt|;
name|QUrl
name|u2
argument_list|(
literal|"ftp://ftp.de.kde.org/dir/"
argument_list|)
decl_stmt|;
name|QUrl
operator|::
name|FormattingOptions
name|options
init|=
name|QUrl
operator|::
name|None
decl_stmt|;
name|options
operator||=
name|QUrl
operator|::
name|StripTrailingSlash
expr_stmt|;
name|QString
name|str1
init|=
name|u1
operator|.
name|toString
argument_list|(
name|options
argument_list|)
decl_stmt|;
name|QString
name|str2
init|=
name|u2
operator|.
name|toString
argument_list|(
name|options
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|str1
argument_list|,
name|u1
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|str2
argument_list|,
name|u1
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|bool
name|same
init|=
name|str1
operator|==
name|str2
decl_stmt|;
name|QVERIFY
argument_list|(
name|same
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hosts_data
name|void
name|tst_QUrl
operator|::
name|hosts_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:///file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"file:/file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http:///file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"empty4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http:/file"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
comment|// numeric hostnames
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http://123/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://123/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"123"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http://456/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://456/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"456"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"http://1000/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://1000/"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1000"
argument_list|)
expr_stmt|;
comment|// IP literals
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-ip-literal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://1.2.3.4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-ip-literal-with-port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://1.2.3.4:80"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1.2.3.4"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::1]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-with-port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::1]:80"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"long-ipv6-literal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[2001:200:0:8002:203:47ff:fea5:3085]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2001:200:0:8002:203:47ff:fea5:3085"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"long-ipv6-literal-with-port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[2001:200:0:8002:203:47ff:fea5:3085]:80"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"2001:200:0:8002:203:47ff:fea5:3085"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-v4compat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[::255.254.253.252]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"::255.254.253.252"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ipv6-literal-v4compat-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[1000::ffff:127.128.129.1]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"1000::ffff:127.128.129.1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"long-ipv6-literal-v4compat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[fec0:8000::8002:1000:ffff:200.100.50.250]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fec0:8000::8002:1000:ffff:200.100.50.250"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"longer-ipv6-literal-v4compat"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://[fec0:8000:4000:8002:1000:ffff:200.100.50.250]"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"fec0:8000:4000:8002:1000:ffff:200.100.50.250"
argument_list|)
expr_stmt|;
comment|// normal hostnames
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://intern"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"intern"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://qt.nokia.com"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"qt.nokia.com"
argument_list|)
expr_stmt|;
comment|// IDN hostnames
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn"
argument_list|)
operator|<<
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"http://\345r.no"
argument_list|)
argument_list|)
operator|<<
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"\345r.no"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"idn-ace"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"http://xn--r-1fa.no"
argument_list|)
operator|<<
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"\345r.no"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hosts
name|void
name|tst_QUrl
operator|::
name|hosts
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|QUrl
argument_list|(
name|url
argument_list|)
operator|.
name|host
argument_list|()
argument_list|,
literal|"host"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPort
name|void
name|tst_QUrl
operator|::
name|setPort
parameter_list|()
block|{
block|{
name|QUrl
name|url
decl_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"//:80"
argument_list|)
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QUrl::setPort: Out of range"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setPort
argument_list|(
literal|65536
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|port
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toEncoded_data
name|void
name|tst_QUrl
operator|::
name|toEncoded_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
operator|::
name|FormattingOptions
argument_list|>
argument_list|(
literal|"options"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"encoded"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file:///dir/"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:///dir/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|FormattingOptions
argument_list|(
name|QUrl
operator|::
name|StripTrailingSlash
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"file:///dir"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toEncoded
name|void
name|tst_QUrl
operator|::
name|toEncoded
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
operator|::
name|FormattingOptions
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|url
argument_list|)
operator|.
name|toEncoded
argument_list|(
name|options
argument_list|)
argument_list|,
name|encoded
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setAuthority_data
name|void
name|tst_QUrl
operator|::
name|setAuthority_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"authority"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Plain auth"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"62.70.27.22:21"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//62.70.27.22:21"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Yet another plain auth"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"192.168.1.1:21"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//192.168.1.1:21"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"192.168.1.1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//192.168.1.1"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/full hostname without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku.troll.no"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku.troll.no"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/hostname without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/full hostname that ends with number, without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku.troll.no.2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku.troll.no.2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Auth w/hostname that ends with number, without port"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"shusaku2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"//shusaku2"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Empty auth"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setAuthority
name|void
name|tst_QUrl
operator|::
name|setAuthority
parameter_list|()
block|{
name|QUrl
name|u
decl_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|authority
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|u
operator|.
name|setAuthority
argument_list|(
name|authority
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|errorString
name|void
name|tst_QUrl
operator|::
name|errorString
parameter_list|()
block|{
name|QUrl
name|u
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://strange<username>@bad_hostname/"
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|u
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|errorString
init|=
literal|"Invalid URL \"http://strange<username>@bad_hostname/\": "
literal|"error at position 14: expected end of URL, but found '<'"
decl_stmt|;
name|QCOMPARE
argument_list|(
name|u
operator|.
name|errorString
argument_list|()
argument_list|,
name|errorString
argument_list|)
expr_stmt|;
name|QUrl
name|v
decl_stmt|;
name|errorString
operator|=
literal|"Invalid URL \"\": "
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|errorString
argument_list|()
argument_list|,
name|errorString
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|tst_QUrl
operator|::
name|clear
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|QUrl
name|url2
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
argument_list|,
name|url2
argument_list|)
expr_stmt|;
name|url
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|!=
name|url2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|binaryData_data
name|void
name|tst_QUrl
operator|::
name|binaryData_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username"
argument_list|)
operator|<<
literal|"http://%01%0D%0A%7F@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-at"
argument_list|)
operator|<<
literal|"http://abc%40_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-nul"
argument_list|)
operator|<<
literal|"http://abc%00_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-colon"
argument_list|)
operator|<<
literal|"http://abc%3A_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"username-nonutf8"
argument_list|)
operator|<<
literal|"http://abc%E1_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password"
argument_list|)
operator|<<
literal|"http://user:%01%0D%0A%7F@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-at"
argument_list|)
operator|<<
literal|"http://user:abc%40_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-nul"
argument_list|)
operator|<<
literal|"http://user:abc%00_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"password-nonutf8"
argument_list|)
operator|<<
literal|"http://user:abc%E1_def@foo/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file"
argument_list|)
operator|<<
literal|"http://foo/%01%0D%0A%7F"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-nul"
argument_list|)
operator|<<
literal|"http://foo/abc%00_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-hash"
argument_list|)
operator|<<
literal|"http://foo/abc%23_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-question"
argument_list|)
operator|<<
literal|"http://foo/abc%3F_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/abc%E1_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"file-slash"
argument_list|)
operator|<<
literal|"http://foo/abc%2f_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref"
argument_list|)
operator|<<
literal|"http://foo/file#a%01%0D%0A%7F"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref-nul"
argument_list|)
operator|<<
literal|"http://foo/file#abc%00_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref-question"
argument_list|)
operator|<<
literal|"http://foo/file#abc?_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ref-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/file#abc%E1_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-value"
argument_list|)
operator|<<
literal|"http://foo/query?foo=%01%0D%0A%7F"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-value-nul"
argument_list|)
operator|<<
literal|"http://foo/query?foo=abc%00_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-value-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/query?foo=abc%E1_def"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-name"
argument_list|)
operator|<<
literal|"http://foo/query/a%01%0D%0A%7Fz=foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-name-nul"
argument_list|)
operator|<<
literal|"http://foo/query/abc%00_def=foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"query-name-nonutf8"
argument_list|)
operator|<<
literal|"http://foo/query/abc%E1_def=foo"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|binaryData
name|void
name|tst_QUrl
operator|::
name|binaryData
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QUrl
name|u
init|=
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|url
operator|.
name|toUtf8
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|u
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|u
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|url2
init|=
name|QString
operator|::
name|fromUtf8
argument_list|(
name|u
operator|.
name|toEncoded
argument_list|()
argument_list|)
decl_stmt|;
comment|//QCOMPARE(url2.length(), url.length());
name|QCOMPARE
argument_list|(
name|url2
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromUserInput_data
name|void
name|tst_QUrl
operator|::
name|fromUserInput_data
parameter_list|()
block|{
comment|//
comment|// most of this test is:
comment|//  Copyright (C) Research In Motion Limited 2009. All rights reserved.
comment|// Distributed under the BSD license.
comment|// See qurl.cpp
comment|//
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"guessUrlFromString"
argument_list|)
expr_stmt|;
comment|// Null
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QUrl
argument_list|()
expr_stmt|;
comment|// File
name|QDirIterator
name|it
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|c
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
literal|"file-%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
operator|++
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|it
operator|.
name|filePath
argument_list|()
operator|<<
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|it
operator|.
name|filePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// basic latin1
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-0"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc3\xa5.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://\xc3\xa5.com/"
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-0b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc3\xa5.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://%C3%A5.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-0c"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xc3\xa5.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://xn--5ca.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
comment|// unicode
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-1"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xce\xbb.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"http://\xce\xbb.com/"
argument_list|)
operator|.
name|toUtf8
argument_list|()
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-1b"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xce\xbb.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://%CE%BB.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"unicode-1c"
argument_list|)
operator|<<
name|QString
operator|::
name|fromUtf8
argument_list|(
literal|"\xce\xbb.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://xn--wxa.com/"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
comment|// no scheme
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-0"
argument_list|)
operator|<<
literal|"example.org"
operator|<<
name|QUrl
argument_list|(
literal|"http://example.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-1"
argument_list|)
operator|<<
literal|"www.example.org"
operator|<<
name|QUrl
argument_list|(
literal|"http://www.example.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-2"
argument_list|)
operator|<<
literal|"ftp.example.org"
operator|<<
name|QUrl
argument_list|(
literal|"ftp://ftp.example.org"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"add scheme-3"
argument_list|)
operator|<<
literal|"hostname"
operator|<<
name|QUrl
argument_list|(
literal|"http://hostname"
argument_list|)
expr_stmt|;
comment|// QUrl's tolerant parser should already handle this
name|QTest
operator|::
name|newRow
argument_list|(
literal|"not-encoded-0"
argument_list|)
operator|<<
literal|"http://example.org/test page.html"
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.org/test%20page.html"
argument_list|)
expr_stmt|;
comment|// Make sure the :80, i.e. port doesn't screw anything up
name|QUrl
name|portUrl
argument_list|(
literal|"http://example.org"
argument_list|)
decl_stmt|;
name|portUrl
operator|.
name|setPort
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-0"
argument_list|)
operator|<<
literal|"example.org:80"
operator|<<
name|portUrl
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-1"
argument_list|)
operator|<<
literal|"http://example.org:80"
operator|<<
name|portUrl
expr_stmt|;
name|portUrl
operator|.
name|setPath
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-1"
argument_list|)
operator|<<
literal|"example.org:80/path"
operator|<<
name|portUrl
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"port-1"
argument_list|)
operator|<<
literal|"http://example.org:80/path"
operator|<<
name|portUrl
expr_stmt|;
comment|// mailto doesn't have a ://, but is valid
name|QUrl
name|mailto
argument_list|(
literal|"ben@example.net"
argument_list|)
decl_stmt|;
name|mailto
operator|.
name|setScheme
argument_list|(
literal|"mailto"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mailto"
argument_list|)
operator|<<
literal|"mailto:ben@example.net"
operator|<<
name|mailto
expr_stmt|;
comment|// misc
name|QTest
operator|::
name|newRow
argument_list|(
literal|"localhost-1"
argument_list|)
operator|<<
literal|"localhost:80"
operator|<<
name|QUrl
argument_list|(
literal|"http://localhost:80"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"spaces-0"
argument_list|)
operator|<<
literal|"  http://example.org/test page.html "
operator|<<
name|QUrl
argument_list|(
literal|"http://example.org/test%20page.html"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"trash-0"
argument_list|)
operator|<<
literal|"example.org/test?someData=42%&someOtherData=abcde#anchor"
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.org/test?someData=42%25&someOtherData=abcde#anchor"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"other-scheme-0"
argument_list|)
operator|<<
literal|"spotify:track:0hO542doVbfGDAGQULMORT"
operator|<<
name|QUrl
argument_list|(
literal|"spotify:track:0hO542doVbfGDAGQULMORT"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"other-scheme-1"
argument_list|)
operator|<<
literal|"weirdscheme:80:otherstuff"
operator|<<
name|QUrl
argument_list|(
literal|"weirdscheme:80:otherstuff"
argument_list|)
expr_stmt|;
comment|// FYI: The scheme in the resulting url user
name|QUrl
name|authUrl
argument_list|(
literal|"user:pass@domain.com"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"misc-1"
argument_list|)
operator|<<
literal|"user:pass@domain.com"
operator|<<
name|authUrl
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fromUserInput
name|void
name|tst_QUrl
operator|::
name|fromUserInput
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|string
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|guessUrlFromString
argument_list|)
expr_stmt|;
name|QUrl
name|url
init|=
name|QUrl
operator|::
name|fromUserInput
argument_list|(
name|string
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|url
argument_list|,
name|guessUrlFromString
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// This is a regression test for a previously fixed bug where isEmpty didn't
end_comment
begin_comment
comment|// work for an encoded URL that was yet to be decoded.  The test checks that
end_comment
begin_comment
comment|// isEmpty works for an encoded URL both after and before decoding.
end_comment
begin_function
DECL|function|isEmptyForEncodedUrl
name|void
name|tst_QUrl
operator|::
name|isEmptyForEncodedUrl
parameter_list|()
block|{
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedUrl
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|url
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|url
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|path
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"LABEL=USB_STICK"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// This test verifies that the QUrl::toEncoded() does not rely on the
end_comment
begin_comment
comment|// potentially uninitialized unencoded path.
end_comment
begin_function
DECL|function|toEncodedNotUsingUninitializedPath
name|void
name|tst_QUrl
operator|::
name|toEncodedNotUsingUninitializedPath
parameter_list|()
block|{
name|QUrl
name|url
decl_stmt|;
name|url
operator|.
name|setEncodedPath
argument_list|(
literal|"test.txt"
argument_list|)
expr_stmt|;
name|url
operator|.
name|setHost
argument_list|(
literal|"example.com"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"//example.com/test.txt"
argument_list|)
expr_stmt|;
name|url
operator|.
name|path
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|,
literal|"//example.com/test.txt"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolvedWithAbsoluteSchemes
name|void
name|tst_QUrl
operator|::
name|resolvedWithAbsoluteSchemes
parameter_list|()
specifier|const
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|base
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|relative
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|expected
argument_list|)
expr_stmt|;
comment|/* Check our input. */
name|QVERIFY
argument_list|(
name|relative
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|base
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|expected
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QUrl
name|result
argument_list|(
name|base
operator|.
name|resolved
argument_list|(
name|relative
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|result
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resolvedWithAbsoluteSchemes_data
name|void
name|tst_QUrl
operator|::
name|resolvedWithAbsoluteSchemes_data
parameter_list|()
specifier|const
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"base"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"relative"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Absolute file:/// against absolute FTP."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"file:///foo/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"ftp://example.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"ftp://example.com/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Absolute file:/// against absolute HTTP."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"file:///foo/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Absolute file:/// against data scheme."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"file:///foo/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"data:application/xml,%3Ce%2F%3E"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"data:application/xml,%3Ce%2F%3E"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Resolve with base url and port."
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.foo.com:8080/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"newfile.html"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.foo.com:8080/newfile.html"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Resolve with relative path"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://example.com/"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/a/../?my=query&your=query#yougotfragged"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://andreas:hemmelig@www.vg.no/?my=query&your=query#yougotfragged"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|emptyAuthorityRemovesExistingAuthority
name|void
name|tst_QUrl
operator|::
name|emptyAuthorityRemovesExistingAuthority
parameter_list|()
block|{
name|QUrl
name|url
argument_list|(
literal|"http://example.com/something"
argument_list|)
decl_stmt|;
name|url
operator|.
name|setAuthority
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
operator|.
name|authority
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|acceptEmptyAuthoritySegments
name|void
name|tst_QUrl
operator|::
name|acceptEmptyAuthoritySegments
parameter_list|()
block|{
comment|// Verify that foo:///bar is not mangled to foo:/bar
name|QString
name|foo_triple_bar
argument_list|(
literal|"foo:///bar"
argument_list|)
decl_stmt|,
name|foo_uni_bar
argument_list|(
literal|"foo:/bar"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|foo_triple_bar
argument_list|,
name|QUrl
argument_list|(
name|foo_triple_bar
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|foo_uni_bar
argument_list|,
name|QUrl
argument_list|(
name|foo_uni_bar
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|foo_triple_bar
argument_list|,
name|QUrl
argument_list|(
name|foo_triple_bar
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|foo_uni_bar
argument_list|,
name|QUrl
argument_list|(
name|foo_uni_bar
argument_list|,
name|QUrl
operator|::
name|StrictMode
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|effectiveTLDs_data
name|void
name|tst_QUrl
operator|::
name|effectiveTLDs_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"domain"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"TLD"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes0"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://test.co.uk"
argument_list|)
operator|<<
literal|".co.uk"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes1"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://test.com"
argument_list|)
operator|<<
literal|".com"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes2"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.test.de"
argument_list|)
operator|<<
literal|".de"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes3"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://test.ulm.museum"
argument_list|)
operator|<<
literal|".ulm.museum"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes4"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.com.krodsherad.no"
argument_list|)
operator|<<
literal|".krodsherad.no"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes5"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.co.uk.1.bg"
argument_list|)
operator|<<
literal|".1.bg"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes6"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.com.com.cn"
argument_list|)
operator|<<
literal|".com.cn"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes7"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.test.org.ws"
argument_list|)
operator|<<
literal|".org.ws"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"yes9"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://www.com.co.uk.wallonie.museum"
argument_list|)
operator|<<
literal|".wallonie.museum"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|effectiveTLDs
name|void
name|tst_QUrl
operator|::
name|effectiveTLDs
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|domain
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|TLD
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|domain
operator|.
name|topLevelDomain
argument_list|()
argument_list|,
name|TLD
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeAllEncodedQueryItems_data
name|void
name|tst_QUrl
operator|::
name|removeAllEncodedQueryItems_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"url"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"key"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"result"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test1"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&bbb=b&ccc=c"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bbb"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&ccc=c"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test2"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&bbb=b&ccc=c"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"aaa"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?bbb=b&ccc=c"
argument_list|)
expr_stmt|;
comment|//    QTest::newRow("test3")<< QUrl::fromEncoded("http://qt.nokia.com/foo?aaa=a&bbb=b&ccc=c")<< QByteArray("ccc")<< QUrl::fromEncoded("http://qt.nokia.com/foo?aaa=a&bbb=b");
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test4"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&bbb=b&ccc=c"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"b%62b"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&bbb=b&ccc=c"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test5"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&b%62b=b&ccc=c"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"b%62b"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&ccc=c"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"test6"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&b%62b=b&ccc=c"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"bbb"
argument_list|)
operator|<<
name|QUrl
operator|::
name|fromEncoded
argument_list|(
literal|"http://qt.nokia.com/foo?aaa=a&b%62b=b&ccc=c"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeAllEncodedQueryItems
name|void
name|tst_QUrl
operator|::
name|removeAllEncodedQueryItems
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|url
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|key
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|url
operator|.
name|removeAllEncodedQueryItems
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|url
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QUrl
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qurl.moc"
end_include
end_unit
