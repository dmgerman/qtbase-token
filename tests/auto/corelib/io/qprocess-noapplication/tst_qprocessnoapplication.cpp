begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Intel Corporation. ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<QtCore/QProcess>
end_include
begin_include
include|#
directive|include
file|<QtCore/QThread>
end_include
begin_include
include|#
directive|include
file|<QtTest>
end_include
begin_class
DECL|class|tst_QProcessNoApplication
class|class
name|tst_QProcessNoApplication
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|Q_SLOTS
private|:
name|void
name|initializationDeadlock
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|initializationDeadlock
name|void
name|tst_QProcessNoApplication
operator|::
name|initializationDeadlock
parameter_list|()
block|{
comment|// see QTBUG-27260
comment|// QProcess on Unix uses (or used to, at the time of the writing of this test)
comment|// a global class called QProcessManager.
comment|// This class is instantiated (or was) only in the main thread, which meant that
comment|// blocking the main thread while waiting for QProcess could mean a deadlock.
struct|struct
name|MyThread
super|:
specifier|public
name|QThread
block|{
name|void
name|run
parameter_list|()
block|{
comment|// what we execute does not matter, as long as we try to
comment|// and that the process exits
name|QProcess
operator|::
name|execute
argument_list|(
literal|"true"
argument_list|)
expr_stmt|;
block|}
block|}
struct|;
name|char
modifier|*
name|argv
index|[]
init|=
block|{
cast|const_cast
argument_list|<
name|char
operator|*
argument_list|>
argument_list|(
name|QTest
operator|::
name|currentAppName
argument_list|()
argument_list|)
block|,
literal|0
block|}
decl_stmt|;
name|int
name|argc
init|=
literal|1
decl_stmt|;
name|QCoreApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|MyThread
name|thread
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QProcessNoApplication
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qprocessnoapplication.moc"
end_include
end_unit
