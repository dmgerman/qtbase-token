begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Intel Corporation. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QString>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtCore/private/qipaddress_p.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|__GLIBC__
end_ifdef
begin_include
include|#
directive|include
file|<sys/socket.h>
end_include
begin_include
include|#
directive|include
file|<netinet/in.h>
end_include
begin_include
include|#
directive|include
file|<arpa/inet.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|tst_QIpAddress
class|class
name|tst_QIpAddress
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|Q_SLOTS
private|:
name|void
name|parseIp4_data
parameter_list|()
function_decl|;
name|void
name|parseIp4
parameter_list|()
function_decl|;
name|void
name|invalidParseIp4_data
parameter_list|()
function_decl|;
name|void
name|invalidParseIp4
parameter_list|()
function_decl|;
name|void
name|ip4ToString_data
parameter_list|()
function_decl|;
name|void
name|ip4ToString
parameter_list|()
function_decl|;
name|void
name|parseIp6_data
parameter_list|()
function_decl|;
name|void
name|parseIp6
parameter_list|()
function_decl|;
name|void
name|invalidParseIp6_data
parameter_list|()
function_decl|;
name|void
name|invalidParseIp6
parameter_list|()
function_decl|;
name|void
name|ip6ToString_data
parameter_list|()
function_decl|;
name|void
name|ip6ToString
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_struct
DECL|struct|Ip6
struct|struct
name|Ip6
block|{
DECL|member|u8
name|QIPAddressUtils
operator|::
name|IPv6Address
name|u8
decl_stmt|;
DECL|function|Ip6
name|Ip6
parameter_list|()
block|{
operator|*
name|this
operator|=
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|function|Ip6
name|Ip6
parameter_list|(
name|quint16
name|p1
parameter_list|,
name|quint16
name|p2
parameter_list|,
name|quint16
name|p3
parameter_list|,
name|quint16
name|p4
parameter_list|,
name|quint16
name|p5
parameter_list|,
name|quint16
name|p6
parameter_list|,
name|quint16
name|p7
parameter_list|,
name|quint16
name|p8
parameter_list|)
block|{
name|u8
index|[
literal|0
index|]
operator|=
name|p1
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|2
index|]
operator|=
name|p2
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|4
index|]
operator|=
name|p3
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|6
index|]
operator|=
name|p4
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|8
index|]
operator|=
name|p5
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|10
index|]
operator|=
name|p6
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|12
index|]
operator|=
name|p7
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|14
index|]
operator|=
name|p8
operator|>>
literal|8
expr_stmt|;
name|u8
index|[
literal|1
index|]
operator|=
name|p1
operator|&
literal|0xff
expr_stmt|;
name|u8
index|[
literal|3
index|]
operator|=
name|p2
operator|&
literal|0xff
expr_stmt|;
name|u8
index|[
literal|5
index|]
operator|=
name|p3
operator|&
literal|0xff
expr_stmt|;
name|u8
index|[
literal|7
index|]
operator|=
name|p4
operator|&
literal|0xff
expr_stmt|;
name|u8
index|[
literal|9
index|]
operator|=
name|p5
operator|&
literal|0xff
expr_stmt|;
name|u8
index|[
literal|11
index|]
operator|=
name|p6
operator|&
literal|0xff
expr_stmt|;
name|u8
index|[
literal|13
index|]
operator|=
name|p7
operator|&
literal|0xff
expr_stmt|;
name|u8
index|[
literal|15
index|]
operator|=
name|p8
operator|&
literal|0xff
expr_stmt|;
block|}
DECL|function|operator ==
name|bool
name|operator
name|==
parameter_list|(
specifier|const
name|Ip6
modifier|&
name|other
parameter_list|)
specifier|const
block|{
return|return
name|memcmp
argument_list|(
name|u8
argument_list|,
name|other
operator|.
name|u8
argument_list|,
sizeof|sizeof
name|u8
argument_list|)
operator|==
literal|0
return|;
block|}
block|}
struct|;
end_struct
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|Ip6
argument_list|)
end_macro
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_namespace
DECL|namespace|QTest
namespace|namespace
name|QTest
block|{
template|template
parameter_list|<>
DECL|function|toString
name|char
modifier|*
name|toString
parameter_list|(
specifier|const
name|Ip6
modifier|&
name|ip6
parameter_list|)
block|{
name|char
name|buf
index|[
sizeof|sizeof
expr|"1111:2222:3333:4444:5555:6666:7777:8888"
operator|+
literal|2
expr|]
expr_stmt|;
name|sprintf
argument_list|(
name|buf
argument_list|,
literal|"%x:%x:%x:%x:%x:%x:%x:%x"
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|0
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|1
index|]
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|2
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|3
index|]
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|4
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|5
index|]
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|6
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|7
index|]
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|8
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|9
index|]
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|10
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|11
index|]
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|12
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|13
index|]
argument_list|,
name|ip6
operator|.
name|u8
index|[
literal|14
index|]
operator|<<
literal|8
operator||
name|ip6
operator|.
name|u8
index|[
literal|15
index|]
argument_list|)
expr_stmt|;
return|return
name|qstrdup
argument_list|(
name|buf
argument_list|)
return|;
block|}
block|}
end_namespace
begin_function
name|QT_END_NAMESPACE
DECL|function|parseIp4_data
name|void
name|tst_QIpAddress
operator|::
name|parseIp4_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QIPAddressUtils
operator|::
name|IPv4Address
argument_list|>
argument_list|(
literal|"ip"
argument_list|)
expr_stmt|;
comment|// valid strings
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0.0.0.0"
argument_list|)
operator|<<
literal|"0.0.0.0"
operator|<<
literal|0u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10.0.0.1"
argument_list|)
operator|<<
literal|"10.0.0.1"
operator|<<
literal|0x0a000001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"127.0.0.1"
argument_list|)
operator|<<
literal|"127.0.0.1"
operator|<<
literal|0x7f000001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"172.16.0.1"
argument_list|)
operator|<<
literal|"172.16.0.1"
operator|<<
literal|0xac100001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"172.16.16.1"
argument_list|)
operator|<<
literal|"172.16.16.1"
operator|<<
literal|0xac101001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"172.16.16.16"
argument_list|)
operator|<<
literal|"172.16.16.16"
operator|<<
literal|0xac101010u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"192.168.0.1"
argument_list|)
operator|<<
literal|"192.168.0.1"
operator|<<
literal|0xc0a80001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"192.168.16.1"
argument_list|)
operator|<<
literal|"192.168.16.1"
operator|<<
literal|0xc0a81001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"192.168.16.16"
argument_list|)
operator|<<
literal|"192.168.16.16"
operator|<<
literal|0xc0a81010u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"192.168.192.1"
argument_list|)
operator|<<
literal|"192.168.192.1"
operator|<<
literal|0xc0a8c001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"192.168.192.16"
argument_list|)
operator|<<
literal|"192.168.192.16"
operator|<<
literal|0xc0a8c010u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"192.168.192.255"
argument_list|)
operator|<<
literal|"192.168.192.255"
operator|<<
literal|0xc0a8c0ffu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"224.0.0.1"
argument_list|)
operator|<<
literal|"224.0.0.1"
operator|<<
literal|0xe0000001u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"239.255.255.255"
argument_list|)
operator|<<
literal|"239.255.255.255"
operator|<<
literal|0xefffffffu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"255.255.255.255"
argument_list|)
operator|<<
literal|"255.255.255.255"
operator|<<
name|uint
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// still valid but unusual
name|QTest
operator|::
name|newRow
argument_list|(
literal|"000.000.000.000"
argument_list|)
operator|<<
literal|"000.000.000.000"
operator|<<
literal|0u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"000001.000002.000000003.000000000004"
argument_list|)
operator|<<
literal|"000001.000002.000000003.000000000004"
operator|<<
literal|0x01020304u
expr_stmt|;
comment|// octals:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"012.0250.0377.0377"
argument_list|)
operator|<<
literal|"012.0250.0377.0377"
operator|<<
literal|0x0aa8ffffu
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0000000000012.00000000000250.000000000000377.0000000000000000000000000000000000000377"
argument_list|)
operator|<<
literal|"0000000000012.00000000000250.000000000000377.0000000000000000000000000000000000000377"
operator|<<
literal|0x0aa8ffffu
expr_stmt|;
comment|// hex:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0xa.0xa.0x7f.0xff"
argument_list|)
operator|<<
literal|"0xa.0xa.0x7f.0xff"
operator|<<
literal|0x0a0a7fffu
expr_stmt|;
comment|// dots missing, less than 255:
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3"
argument_list|)
operator|<<
literal|"1.2.3"
operator|<<
literal|0x01020003u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2"
argument_list|)
operator|<<
literal|"1.2"
operator|<<
literal|0x01000002u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1"
argument_list|)
operator|<<
literal|"1"
operator|<<
literal|1u
expr_stmt|;
comment|// dots missing, more than 255, no overwrite
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.257"
argument_list|)
operator|<<
literal|"1.2.257"
operator|<<
literal|0x01020101u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.0x010101"
argument_list|)
operator|<<
literal|"1.0x010101"
operator|<<
literal|0x01010101u
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2130706433"
argument_list|)
operator|<<
literal|"2130706433"
operator|<<
literal|0x7f000001u
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parseIp4
name|void
name|tst_QIpAddress
operator|::
name|parseIp4
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QIPAddressUtils
operator|::
name|IPv4Address
argument_list|,
name|ip
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|__GLIBC__
block|{
name|in_addr
name|inet_result
decl_stmt|;
name|int
name|inet_ok
init|=
name|inet_aton
argument_list|(
name|data
operator|.
name|toLatin1
argument_list|()
argument_list|,
operator|&
name|inet_result
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|inet_ok
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ntohl
argument_list|(
name|inet_result
operator|.
name|s_addr
argument_list|)
argument_list|,
name|ip
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|QIPAddressUtils
operator|::
name|IPv4Address
name|result
decl_stmt|;
name|bool
name|ok
init|=
name|QIPAddressUtils
operator|::
name|parseIp4
argument_list|(
name|result
argument_list|,
name|data
operator|.
name|constBegin
argument_list|()
argument_list|,
name|data
operator|.
name|constEnd
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|ip
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidParseIp4_data
name|void
name|tst_QIpAddress
operator|::
name|invalidParseIp4_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"data"
argument_list|)
expr_stmt|;
comment|// too many dots
name|QTest
operator|::
name|newRow
argument_list|(
literal|"."
argument_list|)
operator|<<
literal|"."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|".."
argument_list|)
operator|<<
literal|".."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"..."
argument_list|)
operator|<<
literal|"..."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"...."
argument_list|)
operator|<<
literal|"...."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|".1.2.3"
argument_list|)
operator|<<
literal|".1.2.3"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1."
argument_list|)
operator|<<
literal|"1."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2."
argument_list|)
operator|<<
literal|"1.2."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3."
argument_list|)
operator|<<
literal|"1.2.3."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3.4."
argument_list|)
operator|<<
literal|"1.2.3.4."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3..4"
argument_list|)
operator|<<
literal|"1.2.3..4"
expr_stmt|;
comment|// octet more than 255
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2.2.2.257"
argument_list|)
operator|<<
literal|"2.2.2.257"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2.2.257.2"
argument_list|)
operator|<<
literal|"2.2.257.2"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2.257.2.2"
argument_list|)
operator|<<
literal|"2.257.2.2"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"257.2.2.2"
argument_list|)
operator|<<
literal|"257.2.2.2"
expr_stmt|;
comment|// number more than field available
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2.2.0x01010101"
argument_list|)
operator|<<
literal|"2.2.0x01010101"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"2.0x01010101"
argument_list|)
operator|<<
literal|"2.0x01010101"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4294967296"
argument_list|)
operator|<<
literal|"4294967296"
expr_stmt|;
comment|// bad octals
name|QTest
operator|::
name|newRow
argument_list|(
literal|"09"
argument_list|)
operator|<<
literal|"09"
expr_stmt|;
comment|// bad hex
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0x1g"
argument_list|)
operator|<<
literal|"0x1g"
expr_stmt|;
comment|// negative numbers
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-1"
argument_list|)
operator|<<
literal|"-1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-1.1"
argument_list|)
operator|<<
literal|"-1.1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.-1"
argument_list|)
operator|<<
literal|"1.-1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.1.1.-1"
argument_list|)
operator|<<
literal|"1.1.1.-1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"300-05"
argument_list|)
operator|<<
literal|"300-05"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"127.-1"
argument_list|)
operator|<<
literal|"127.-1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-127-10"
argument_list|)
operator|<<
literal|"-127-10"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"198.-16"
argument_list|)
operator|<<
literal|"198-16"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"-127.-0."
argument_list|)
operator|<<
literal|"-127.-0."
expr_stmt|;
comment|// letters
name|QTest
operator|::
name|newRow
argument_list|(
literal|"abc"
argument_list|)
operator|<<
literal|"abc"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"localhost"
argument_list|)
operator|<<
literal|"localhost"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3a.4"
argument_list|)
operator|<<
literal|"1.2.3a.4"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a.2.3.4"
argument_list|)
operator|<<
literal|"a.2.3.4"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3.4a"
argument_list|)
operator|<<
literal|"1.2.3.4a"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidParseIp4
name|void
name|tst_QIpAddress
operator|::
name|invalidParseIp4
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|data
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|__GLIBC__
block|{
name|in_addr
name|inet_result
decl_stmt|;
name|int
name|inet_ok
init|=
name|inet_aton
argument_list|(
name|data
operator|.
name|toLatin1
argument_list|()
argument_list|,
operator|&
name|inet_result
argument_list|)
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_DARWIN
name|QEXPECT_FAIL
argument_list|(
literal|"4294967296"
argument_list|,
literal|"Mac's library does parse this one"
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
operator|!
name|inet_ok
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|QIPAddressUtils
operator|::
name|IPv4Address
name|result
decl_stmt|;
name|bool
name|ok
init|=
name|QIPAddressUtils
operator|::
name|parseIp4
argument_list|(
name|result
argument_list|,
name|data
operator|.
name|constBegin
argument_list|()
argument_list|,
name|data
operator|.
name|constEnd
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|ok
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ip4ToString_data
name|void
name|tst_QIpAddress
operator|::
name|ip4ToString_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QIPAddressUtils
operator|::
name|IPv4Address
argument_list|>
argument_list|(
literal|"ip"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0.0.0.0"
argument_list|)
operator|<<
literal|0u
operator|<<
literal|"0.0.0.0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3.4"
argument_list|)
operator|<<
literal|0x01020304u
operator|<<
literal|"1.2.3.4"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"127.0.0.1"
argument_list|)
operator|<<
literal|0x7f000001u
operator|<<
literal|"127.0.0.1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"111.222.33.44"
argument_list|)
operator|<<
literal|0x6fde212cu
operator|<<
literal|"111.222.33.44"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"255.255.255.255"
argument_list|)
operator|<<
literal|0xffffffffu
operator|<<
literal|"255.255.255.255"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ip4ToString
name|void
name|tst_QIpAddress
operator|::
name|ip4ToString
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QIPAddressUtils
operator|::
name|IPv4Address
argument_list|,
name|ip
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expected
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|__GLIBC__
name|in_addr
name|inet_ip
decl_stmt|;
name|inet_ip
operator|.
name|s_addr
operator|=
name|htonl
argument_list|(
name|ip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
argument_list|(
name|inet_ntoa
argument_list|(
name|inet_ip
argument_list|)
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QString
name|result
decl_stmt|;
name|QIPAddressUtils
operator|::
name|toString
argument_list|(
name|result
argument_list|,
name|ip
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parseIp6_data
name|void
name|tst_QIpAddress
operator|::
name|parseIp6_data
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|Ip6
argument_list|>
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"address"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|Ip6
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
comment|// 7 colons, no ::
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:0:0"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:0:0"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:0:1"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:0:1"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:1:1"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:1:1"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:0:103"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:0:103"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0x103
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:8"
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:8"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ffee:ddcc:bbaa:9988:7766:5544:3322:1100"
argument_list|)
operator|<<
literal|"ffee:ddcc:bbaa:9988:7766:5544:3322:1100"
operator|<<
name|Ip6
argument_list|(
literal|0xffee
argument_list|,
literal|0xddcc
argument_list|,
literal|0xbbaa
argument_list|,
literal|0x9988
argument_list|,
literal|0x7766
argument_list|,
literal|0x5544
argument_list|,
literal|0x3322
argument_list|,
literal|0x1100
argument_list|)
expr_stmt|;
comment|// too many zeroes
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:0:00103"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:0:00103"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0x103
argument_list|)
expr_stmt|;
comment|// double-colon
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:2:3:4:5:6:7"
argument_list|)
operator|<<
literal|"::1:2:3:4:5:6:7"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7::"
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7::"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::2:3:4:5:6:7"
argument_list|)
operator|<<
literal|"1::2:3:4:5:6:7"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2::3:4:5:6:7"
argument_list|)
operator|<<
literal|"1:2::3:4:5:6:7"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3::4:5:6:7"
argument_list|)
operator|<<
literal|"1:2:3::4:5:6:7"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4::5:6:7"
argument_list|)
operator|<<
literal|"1:2:3:4::5:6:7"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5::6:7"
argument_list|)
operator|<<
literal|"1:2:3:4:5::6:7"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6::7"
argument_list|)
operator|<<
literal|"1:2:3:4:5:6::7"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:2:3:4:5:6"
argument_list|)
operator|<<
literal|"::1:2:3:4:5:6"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6::"
argument_list|)
operator|<<
literal|"1:2:3:4:5:6::"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::2:3:4:5:6"
argument_list|)
operator|<<
literal|"1::2:3:4:5:6"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2::3:4:5:6"
argument_list|)
operator|<<
literal|"1:2::3:4:5:6"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3::4:5:6"
argument_list|)
operator|<<
literal|"1:2:3::4:5:6"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4::5:6"
argument_list|)
operator|<<
literal|"1:2:3:4::5:6"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5::6"
argument_list|)
operator|<<
literal|"1:2:3:4:5::6"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:2:3:4:5"
argument_list|)
operator|<<
literal|"::1:2:3:4:5"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5::"
argument_list|)
operator|<<
literal|"1:2:3:4:5::"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::2:3:4:5"
argument_list|)
operator|<<
literal|"1::2:3:4:5"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2::3:4:5"
argument_list|)
operator|<<
literal|"1:2::3:4:5"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3::4:5"
argument_list|)
operator|<<
literal|"1:2:3::4:5"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4::5"
argument_list|)
operator|<<
literal|"1:2:3:4::5"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:2:3:4"
argument_list|)
operator|<<
literal|"::1:2:3:4"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4::"
argument_list|)
operator|<<
literal|"1:2:3:4::"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::2:3:4"
argument_list|)
operator|<<
literal|"1::2:3:4"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2::3:4"
argument_list|)
operator|<<
literal|"1:2::3:4"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3::4"
argument_list|)
operator|<<
literal|"1:2:3::4"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:2:3"
argument_list|)
operator|<<
literal|"::1:2:3"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3::"
argument_list|)
operator|<<
literal|"1:2:3::"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::2:3"
argument_list|)
operator|<<
literal|"1::2:3"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2::3"
argument_list|)
operator|<<
literal|"1:2::3"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:2"
argument_list|)
operator|<<
literal|"::1:2"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2::"
argument_list|)
operator|<<
literal|"1:2::"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::2"
argument_list|)
operator|<<
literal|"1::2"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1"
argument_list|)
operator|<<
literal|"::1"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::"
argument_list|)
operator|<<
literal|"1::"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::"
argument_list|)
operator|<<
literal|"::"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// embedded IPv4
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:10.0.16.1"
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:10.0.16.1"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|0xa00
argument_list|,
literal|0x1001
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::10.0.16.1"
argument_list|)
operator|<<
literal|"1::10.0.16.1"
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0xa00
argument_list|,
literal|0x1001
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::10.0.16.1"
argument_list|)
operator|<<
literal|"::10.0.16.1"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0xa00
argument_list|,
literal|0x1001
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::0.0.0.0"
argument_list|)
operator|<<
literal|"::0.0.0.0"
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parseIp6
name|void
name|tst_QIpAddress
operator|::
name|parseIp6
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|address
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|Ip6
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|__GLIBC__
argument_list|)
operator|&&
name|defined
argument_list|(
name|AF_INET6
argument_list|)
name|Ip6
name|inet_result
decl_stmt|;
name|bool
name|inet_ok
init|=
name|inet_pton
argument_list|(
name|AF_INET6
argument_list|,
name|address
operator|.
name|toLatin1
argument_list|()
argument_list|,
operator|&
name|inet_result
operator|.
name|u8
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|inet_ok
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|inet_result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|Ip6
name|result
decl_stmt|;
name|bool
name|ok
init|=
name|QIPAddressUtils
operator|::
name|parseIp6
argument_list|(
name|result
operator|.
name|u8
argument_list|,
name|address
operator|.
name|constBegin
argument_list|()
argument_list|,
name|address
operator|.
name|constEnd
argument_list|()
argument_list|)
operator|==
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidParseIp6_data
name|void
name|tst_QIpAddress
operator|::
name|invalidParseIp6_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"address"
argument_list|)
expr_stmt|;
comment|// too many colons
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0::0:0:0:0"
argument_list|)
operator|<<
literal|"0:0:0:0::0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:::"
argument_list|)
operator|<<
literal|"0:::"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":::0"
argument_list|)
operator|<<
literal|":::0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16:::::::::::::::::::::::"
argument_list|)
operator|<<
literal|"16:::::::::::::::::::::::"
expr_stmt|;
comment|// non-hex
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a:b:c:d:e:f:g:h"
argument_list|)
operator|<<
literal|"a:b:c:d:e:f:g:h"
expr_stmt|;
comment|// too big number
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:0:10103"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:0:10103"
expr_stmt|;
comment|// too short
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:0:"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:0:"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:0"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0:"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0:"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:0"
argument_list|)
operator|<<
literal|"0:0:0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0:"
argument_list|)
operator|<<
literal|"0:0:0:0:0:"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:0"
argument_list|)
operator|<<
literal|"0:0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0:"
argument_list|)
operator|<<
literal|"0:0:0:0:"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:0"
argument_list|)
operator|<<
literal|"0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:"
argument_list|)
operator|<<
literal|"0:0:0:"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0"
argument_list|)
operator|<<
literal|"0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:"
argument_list|)
operator|<<
literal|"0:0:"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0"
argument_list|)
operator|<<
literal|"0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:"
argument_list|)
operator|<<
literal|"0:"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0"
argument_list|)
operator|<<
literal|"0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":0"
argument_list|)
operator|<<
literal|":0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":0:0"
argument_list|)
operator|<<
literal|":0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":0:0:0"
argument_list|)
operator|<<
literal|":0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":0:0:0:0"
argument_list|)
operator|<<
literal|":0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":0:0:0:0:0"
argument_list|)
operator|<<
literal|":0:0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":0:0:0:0:0:0"
argument_list|)
operator|<<
literal|":0:0:0:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|":0:0:0:0:0:0:0"
argument_list|)
operator|<<
literal|":0:0:0:0:0:0:0"
expr_stmt|;
comment|// IPv4
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3.4"
argument_list|)
operator|<<
literal|"1.2.3.4"
expr_stmt|;
comment|// embedded IPv4 in the wrong position
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3.4::"
argument_list|)
operator|<<
literal|"1.2.3.4::"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"f:1.2.3.4::"
argument_list|)
operator|<<
literal|"f:1.2.3.4::"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"f:e:d:c:b:1.2.3.4:0"
argument_list|)
operator|<<
literal|"f:e:d:c:b:1.2.3.4:0"
expr_stmt|;
comment|// bad embedded IPv4
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2.3"
argument_list|)
operator|<<
literal|"::1.2.3"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2.257"
argument_list|)
operator|<<
literal|"::1.2.257"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2"
argument_list|)
operator|<<
literal|"::1.2"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::0250.0x10101"
argument_list|)
operator|<<
literal|"::0250.0x10101"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2.3.0250"
argument_list|)
operator|<<
literal|"::1.2.3.0250"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2.3.0xff"
argument_list|)
operator|<<
literal|"::1.2.3.0xff"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2.3.07"
argument_list|)
operator|<<
literal|"::1.2.3.07"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2.3.010"
argument_list|)
operator|<<
literal|"::1.2.3.010"
expr_stmt|;
comment|// separated by something else
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.2.3.4.5.6.7.8"
argument_list|)
operator|<<
literal|"1.2.3.4.5.6.7.8"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1,2,3,4,5,6,7,8"
argument_list|)
operator|<<
literal|"1,2,3,4,5,6,7,8"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1..2"
argument_list|)
operator|<<
literal|"1..2"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:.2"
argument_list|)
operator|<<
literal|"1:.2"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1.:2"
argument_list|)
operator|<<
literal|"1.:2"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|invalidParseIp6
name|void
name|tst_QIpAddress
operator|::
name|invalidParseIp6
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|address
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|__GLIBC__
argument_list|)
operator|&&
name|defined
argument_list|(
name|AF_INET6
argument_list|)
name|Ip6
name|inet_result
decl_stmt|;
name|bool
name|inet_ok
init|=
name|inet_pton
argument_list|(
name|AF_INET6
argument_list|,
name|address
operator|.
name|toLatin1
argument_list|()
argument_list|,
operator|&
name|inet_result
operator|.
name|u8
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|inet_ok
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|Ip6
name|result
decl_stmt|;
name|bool
name|ok
init|=
name|QIPAddressUtils
operator|::
name|parseIp6
argument_list|(
name|result
operator|.
name|u8
argument_list|,
name|address
operator|.
name|constBegin
argument_list|()
argument_list|,
name|address
operator|.
name|constEnd
argument_list|()
argument_list|)
operator|==
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|ok
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ip6ToString_data
name|void
name|tst_QIpAddress
operator|::
name|ip6ToString_data
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|Ip6
argument_list|>
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|Ip6
argument_list|>
argument_list|(
literal|"ip"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:8"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:8"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:88"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0x88
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:88"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:888"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0x888
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:888"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:8888"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0x8888
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:8888"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:8880"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0x8880
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:8880"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:8808"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0x8808
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:8808"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:8088"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0x8088
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:8088"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6:7:0"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
literal|0
argument_list|)
operator|<<
literal|"1:2:3:4:5:6:7:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:1:2:3:4:5:6:7"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|)
operator|<<
literal|"0:1:2:3:4:5:6:7"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:2:3:4:5:6::"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|"1:2:3:4:5:6::"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:2:3:4:5:6"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
operator|<<
literal|"::1:2:3:4:5:6"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:0:0:2::3"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
operator|<<
literal|"1:0:0:2::3"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1:::2:0:0:3"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
operator|<<
literal|"1::2:0:0:3"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::2:0:0:0"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|"1::2:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0:0:0:1::"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|"0:0:0:1::"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1:0:0:0"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|"::1:0:0:0"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ff02::1"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0xff02
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
literal|"ff02::1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::1"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
literal|"1::1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
operator|<<
literal|"::1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1::"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|"1::"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|"::"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::1.2.3.4"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0x102
argument_list|,
literal|0x304
argument_list|)
operator|<<
literal|"::1.2.3.4"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"::ffff:1.2.3.4"
argument_list|)
operator|<<
name|Ip6
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0xffff
argument_list|,
literal|0x102
argument_list|,
literal|0x304
argument_list|)
operator|<<
literal|"::ffff:1.2.3.4"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ip6ToString
name|void
name|tst_QIpAddress
operator|::
name|ip6ToString
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|Ip6
argument_list|,
name|ip
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expected
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|__GLIBC__
argument_list|)
operator|&&
name|defined
argument_list|(
name|AF_INET6
argument_list|)
block|{
name|char
name|buf
index|[
name|INET6_ADDRSTRLEN
index|]
decl_stmt|;
name|bool
name|ok
init|=
name|inet_ntop
argument_list|(
name|AF_INET6
argument_list|,
name|ip
operator|.
name|u8
argument_list|,
name|buf
argument_list|,
sizeof|sizeof
name|buf
argument_list|)
operator|!=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QString
argument_list|(
name|buf
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|QString
name|result
decl_stmt|;
name|QIPAddressUtils
operator|::
name|toString
argument_list|(
name|result
argument_list|,
name|ip
operator|.
name|u8
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QIpAddress
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qipaddress.moc"
end_include
end_unit
