begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<QtNetwork/QtNetwork>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|"../../../network-settings.h"
end_include
begin_class
DECL|class|tst_QIODevice
class|class
name|tst_QIODevice
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|constructing_QTcpSocket
parameter_list|()
function_decl|;
name|void
name|constructing_QFile
parameter_list|()
function_decl|;
name|void
name|read_QByteArray
parameter_list|()
function_decl|;
name|void
name|unget
parameter_list|()
function_decl|;
name|void
name|peek
parameter_list|()
function_decl|;
name|void
name|peekAndRead
parameter_list|()
function_decl|;
name|void
name|readLine_data
parameter_list|()
function_decl|;
name|void
name|readLine
parameter_list|()
function_decl|;
name|void
name|readLine2_data
parameter_list|()
function_decl|;
name|void
name|readLine2
parameter_list|()
function_decl|;
name|void
name|readAllKeepPosition
parameter_list|()
function_decl|;
name|void
name|writeInTextMode
parameter_list|()
function_decl|;
name|void
name|transaction_data
parameter_list|()
function_decl|;
name|void
name|transaction
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|initTestCase
name|void
name|tst_QIODevice
operator|::
name|initTestCase
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_ANDROID
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_ANDROID_NO_SDK
argument_list|)
name|QVERIFY
argument_list|(
name|QFileInfo
argument_list|(
name|QStringLiteral
argument_list|(
literal|"./tst_qiodevice.cpp"
argument_list|)
argument_list|)
operator|.
name|exists
argument_list|()
operator|||
name|QFile
operator|::
name|copy
argument_list|(
name|QStringLiteral
argument_list|(
literal|":/tst_qiodevice.cpp"
argument_list|)
argument_list|,
name|QStringLiteral
argument_list|(
literal|"./tst_qiodevice.cpp"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QIODevice
operator|::
name|getSetCheck
parameter_list|()
block|{
comment|// OpenMode QIODevice::openMode()
comment|// void QIODevice::setOpenMode(OpenMode)
class|class
name|MyIODevice
super|:
specifier|public
name|QTcpSocket
block|{
public|public:
using|using
name|QTcpSocket
operator|::
name|setOpenMode
using|;
block|}
class|;
name|MyIODevice
name|var1
decl_stmt|;
name|var1
operator|.
name|setOpenMode
argument_list|(
name|QIODevice
operator|::
name|OpenMode
argument_list|(
name|QIODevice
operator|::
name|NotOpen
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QIODevice
operator|::
name|OpenMode
argument_list|(
name|QIODevice
operator|::
name|NotOpen
argument_list|)
argument_list|,
name|var1
operator|.
name|openMode
argument_list|()
argument_list|)
expr_stmt|;
name|var1
operator|.
name|setOpenMode
argument_list|(
name|QIODevice
operator|::
name|OpenMode
argument_list|(
name|QIODevice
operator|::
name|ReadWrite
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QIODevice
operator|::
name|OpenMode
argument_list|(
name|QIODevice
operator|::
name|ReadWrite
argument_list|)
argument_list|,
name|var1
operator|.
name|openMode
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//----------------------------------------------------------------------------------
end_comment
begin_function
DECL|function|constructing_QTcpSocket
name|void
name|tst_QIODevice
operator|::
name|constructing_QTcpSocket
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
name|defined
argument_list|(
name|WINCE_EMULATOR_TEST
argument_list|)
name|QSKIP
argument_list|(
literal|"Networking tests in a WinCE emulator are unstable"
argument_list|)
expr_stmt|;
endif|#
directive|endif
if|if
condition|(
operator|!
name|QtNetworkSettings
operator|::
name|verifyTestNetworkSettings
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"No network test server available"
argument_list|)
expr_stmt|;
name|QTcpSocket
name|socket
decl_stmt|;
name|QIODevice
modifier|*
name|device
init|=
operator|&
name|socket
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|device
operator|->
name|isOpen
argument_list|()
argument_list|)
expr_stmt|;
name|socket
operator|.
name|connectToHost
argument_list|(
name|QtNetworkSettings
operator|::
name|serverName
argument_list|()
argument_list|,
literal|143
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|socket
operator|.
name|waitForConnected
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|device
operator|->
name|isOpen
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|device
operator|->
name|canReadLine
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|device
operator|->
name|waitForReadyRead
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|char
name|buf
index|[
literal|1024
index|]
decl_stmt|;
name|memset
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|buf
argument_list|)
argument_list|)
expr_stmt|;
name|qlonglong
name|lineLength
init|=
name|device
operator|->
name|readLine
argument_list|(
name|buf
argument_list|,
sizeof|sizeof
argument_list|(
name|buf
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|lineLength
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|socket
operator|.
name|pos
argument_list|()
argument_list|,
name|qlonglong
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|socket
operator|.
name|close
argument_list|()
expr_stmt|;
name|socket
operator|.
name|connectToHost
argument_list|(
name|QtNetworkSettings
operator|::
name|serverName
argument_list|()
argument_list|,
literal|143
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|socket
operator|.
name|waitForConnected
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|device
operator|->
name|isOpen
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|device
operator|->
name|canReadLine
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|device
operator|->
name|waitForReadyRead
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|char
name|buf2
index|[
literal|1024
index|]
decl_stmt|;
name|memset
argument_list|(
name|buf2
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|buf2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|socket
operator|.
name|readLine
argument_list|(
name|buf2
argument_list|,
sizeof|sizeof
argument_list|(
name|buf2
argument_list|)
argument_list|)
argument_list|,
name|lineLength
argument_list|)
expr_stmt|;
name|char
modifier|*
name|c1
init|=
name|buf
decl_stmt|;
name|char
modifier|*
name|c2
init|=
name|buf2
decl_stmt|;
while|while
condition|(
operator|*
name|c1
operator|&&
operator|*
name|c2
condition|)
block|{
name|QCOMPARE
argument_list|(
operator|*
name|c1
argument_list|,
operator|*
name|c2
argument_list|)
expr_stmt|;
operator|++
name|c1
expr_stmt|;
operator|++
name|c2
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
operator|*
name|c1
argument_list|,
operator|*
name|c2
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//----------------------------------------------------------------------------------
end_comment
begin_function
DECL|function|constructing_QFile
name|void
name|tst_QIODevice
operator|::
name|constructing_QFile
parameter_list|()
block|{
name|QFile
name|file
decl_stmt|;
name|QIODevice
modifier|*
name|device
init|=
operator|&
name|file
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|device
operator|->
name|isOpen
argument_list|()
argument_list|)
expr_stmt|;
name|file
operator|.
name|setFileName
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"tst_qiodevice.cpp"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|device
operator|->
name|isOpen
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|int
operator|)
name|device
operator|->
name|openMode
argument_list|()
argument_list|,
operator|(
name|int
operator|)
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|char
name|buf
index|[
literal|1024
index|]
decl_stmt|;
name|memset
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|buf
argument_list|)
argument_list|)
expr_stmt|;
name|qlonglong
name|lineLength
init|=
name|device
operator|->
name|readLine
argument_list|(
name|buf
argument_list|,
sizeof|sizeof
argument_list|(
name|buf
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|lineLength
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|file
operator|.
name|pos
argument_list|()
argument_list|,
name|lineLength
argument_list|)
expr_stmt|;
name|file
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|char
name|buf2
index|[
literal|1024
index|]
decl_stmt|;
name|memset
argument_list|(
name|buf2
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|buf2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|file
operator|.
name|readLine
argument_list|(
name|buf2
argument_list|,
sizeof|sizeof
argument_list|(
name|buf2
argument_list|)
argument_list|)
argument_list|,
name|lineLength
argument_list|)
expr_stmt|;
name|char
modifier|*
name|c1
init|=
name|buf
decl_stmt|;
name|char
modifier|*
name|c2
init|=
name|buf2
decl_stmt|;
while|while
condition|(
operator|*
name|c1
operator|&&
operator|*
name|c2
condition|)
block|{
name|QCOMPARE
argument_list|(
operator|*
name|c1
argument_list|,
operator|*
name|c2
argument_list|)
expr_stmt|;
operator|++
name|c1
expr_stmt|;
operator|++
name|c2
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
operator|*
name|c1
argument_list|,
operator|*
name|c2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|read_QByteArray
name|void
name|tst_QIODevice
operator|::
name|read_QByteArray
parameter_list|()
block|{
name|QFile
name|f
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"tst_qiodevice.cpp"
argument_list|)
argument_list|)
decl_stmt|;
name|f
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QByteArray
name|b
init|=
name|f
operator|.
name|read
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|length
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|b
operator|=
name|f
operator|.
name|read
argument_list|(
literal|256
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|length
argument_list|()
argument_list|,
literal|256
argument_list|)
expr_stmt|;
name|b
operator|=
name|f
operator|.
name|read
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|.
name|length
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//--------------------------------------------------------------------
end_comment
begin_function
DECL|function|unget
name|void
name|tst_QIODevice
operator|::
name|unget
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|&&
name|defined
argument_list|(
name|WINCE_EMULATOR_TEST
argument_list|)
name|QSKIP
argument_list|(
literal|"Networking tests in a WinCE emulator are unstable"
argument_list|)
expr_stmt|;
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
name|QSKIP
argument_list|(
literal|"The unget network test is unstable on Mac. See QTBUG-39983."
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QBuffer
name|buffer
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QBuffer
operator|::
name|ReadWrite
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|write
argument_list|(
literal|"ZXCV"
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|read
argument_list|(
literal|4
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"ZXCV"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'a'
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'b'
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'c'
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'d'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|char
name|buf
index|[
literal|6
index|]
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|buf
argument_list|,
literal|5
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|buf
argument_list|)
argument_list|,
literal|"dcba"
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'a'
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'b'
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'c'
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'d'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|buf
index|[
literal|0
index|]
operator|=
literal|'@'
expr_stmt|;
name|buf
index|[
literal|1
index|]
operator|=
literal|'@'
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QIODevice::readLine (QBuffer): Called with maxSize< 2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|buf
argument_list|,
literal|1
argument_list|)
argument_list|,
name|qint64
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|buf
argument_list|,
literal|2
argument_list|)
argument_list|,
name|qint64
argument_list|(
name|i
operator|<
literal|4
condition|?
literal|1
else|:
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|i
condition|)
block|{
case|case
literal|0
case|:
name|QCOMPARE
argument_list|(
name|buf
index|[
literal|0
index|]
argument_list|,
literal|'d'
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|QCOMPARE
argument_list|(
name|buf
index|[
literal|0
index|]
argument_list|,
literal|'c'
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|QCOMPARE
argument_list|(
name|buf
index|[
literal|0
index|]
argument_list|,
literal|'b'
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|QCOMPARE
argument_list|(
name|buf
index|[
literal|0
index|]
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|QCOMPARE
argument_list|(
name|buf
index|[
literal|0
index|]
argument_list|,
literal|'\0'
argument_list|)
expr_stmt|;
break|break;
block|}
name|QCOMPARE
argument_list|(
name|buf
index|[
literal|1
index|]
argument_list|,
name|i
operator|<
literal|4
condition|?
literal|'\0'
else|:
literal|'@'
argument_list|)
expr_stmt|;
block|}
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"\n"
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|readLine
argument_list|(
name|buf
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|buf
argument_list|)
argument_list|,
literal|"XC"
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
literal|'Q'
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|buf
argument_list|,
literal|3
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QTcpSocket
name|socket
decl_stmt|;
name|QIODevice
modifier|*
name|dev
decl_stmt|;
name|QByteArray
name|result
decl_stmt|;
specifier|const
name|char
modifier|*
name|lineResult
decl_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
block|{
name|dev
operator|=
operator|&
name|buffer
expr_stmt|;
name|result
operator|=
name|QByteArray
argument_list|(
literal|"ZXCV"
argument_list|)
expr_stmt|;
name|lineResult
operator|=
literal|"ZXCV"
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|QtNetworkSettings
operator|::
name|verifyTestNetworkSettings
argument_list|()
condition|)
name|QSKIP
argument_list|(
literal|"No network test server available"
argument_list|)
expr_stmt|;
name|socket
operator|.
name|connectToHost
argument_list|(
name|QtNetworkSettings
operator|::
name|serverName
argument_list|()
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|socket
operator|.
name|write
argument_list|(
literal|"GET / HTTP/1.0\r\n\r\n"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|socket
operator|.
name|waitForReadyRead
argument_list|()
argument_list|)
expr_stmt|;
name|dev
operator|=
operator|&
name|socket
expr_stmt|;
name|result
operator|=
name|QByteArray
argument_list|(
literal|"HTTP"
argument_list|)
expr_stmt|;
name|lineResult
operator|=
literal|"Date"
expr_stmt|;
block|}
name|char
name|ch
decl_stmt|,
name|ch2
decl_stmt|;
name|dev
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|dev
operator|->
name|getChar
argument_list|(
operator|&
name|ch
argument_list|)
expr_stmt|;
name|dev
operator|->
name|ungetChar
argument_list|(
name|ch
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dev
operator|->
name|peek
argument_list|(
literal|4
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|dev
operator|->
name|getChar
argument_list|(
operator|&
name|ch
argument_list|)
expr_stmt|;
name|dev
operator|->
name|getChar
argument_list|(
operator|&
name|ch2
argument_list|)
expr_stmt|;
name|dev
operator|->
name|ungetChar
argument_list|(
name|ch2
argument_list|)
expr_stmt|;
name|dev
operator|->
name|ungetChar
argument_list|(
name|ch
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dev
operator|->
name|read
argument_list|(
literal|1
argument_list|)
argument_list|,
name|result
operator|.
name|left
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dev
operator|->
name|read
argument_list|(
literal|3
argument_list|)
argument_list|,
name|result
operator|.
name|right
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
name|dev
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
else|else
name|dev
operator|->
name|readLine
argument_list|()
expr_stmt|;
name|dev
operator|->
name|getChar
argument_list|(
operator|&
name|ch
argument_list|)
expr_stmt|;
name|dev
operator|->
name|ungetChar
argument_list|(
name|ch
argument_list|)
expr_stmt|;
name|dev
operator|->
name|readLine
argument_list|(
name|buf
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|buf
argument_list|)
argument_list|,
name|lineResult
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|==
literal|1
condition|)
name|socket
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//--------------------------------------------------------------------
end_comment
begin_function
DECL|function|peek
name|void
name|tst_QIODevice
operator|::
name|peek
parameter_list|()
block|{
name|QBuffer
name|buffer
decl_stmt|;
name|QFile
operator|::
name|remove
argument_list|(
literal|"peektestfile"
argument_list|)
expr_stmt|;
name|QFile
name|file
argument_list|(
literal|"peektestfile"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QIODevice
modifier|*
name|device
init|=
name|i
condition|?
operator|(
name|QIODevice
operator|*
operator|)
operator|&
name|file
else|:
operator|(
name|QIODevice
operator|*
operator|)
operator|&
name|buffer
decl_stmt|;
name|device
operator|->
name|open
argument_list|(
name|QBuffer
operator|::
name|ReadWrite
argument_list|)
expr_stmt|;
name|device
operator|->
name|write
argument_list|(
literal|"ZXCV"
argument_list|)
expr_stmt|;
name|device
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|peek
argument_list|(
literal|4
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"ZXCV"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|device
operator|->
name|write
argument_list|(
literal|"ABCDE"
argument_list|)
expr_stmt|;
name|device
operator|->
name|seek
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|peek
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"D"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|peek
argument_list|(
literal|5
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"DE"
argument_list|)
argument_list|)
expr_stmt|;
name|device
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|read
argument_list|(
literal|4
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"ABCD"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|device
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|device
operator|->
name|write
argument_list|(
literal|"ZXCV"
argument_list|)
expr_stmt|;
name|device
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|char
name|buf
index|[
literal|5
index|]
decl_stmt|;
name|buf
index|[
literal|4
index|]
operator|=
literal|0
expr_stmt|;
name|device
operator|->
name|peek
argument_list|(
name|buf
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|buf
argument_list|)
argument_list|,
literal|"ZXCV"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|device
operator|->
name|read
argument_list|(
name|buf
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|buf
argument_list|)
argument_list|,
literal|"ZXCV"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|device
operator|->
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QFile
operator|::
name|remove
argument_list|(
literal|"peektestfile"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|peekAndRead
name|void
name|tst_QIODevice
operator|::
name|peekAndRead
parameter_list|()
block|{
name|QByteArray
name|originalData
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
name|originalData
operator|+=
literal|"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
expr_stmt|;
name|QBuffer
name|buffer
decl_stmt|;
name|QFile
operator|::
name|remove
argument_list|(
literal|"peektestfile"
argument_list|)
expr_stmt|;
name|QFile
name|file
argument_list|(
literal|"peektestfile"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|QByteArray
name|readData
decl_stmt|;
name|QIODevice
modifier|*
name|device
init|=
name|i
condition|?
operator|(
name|QIODevice
operator|*
operator|)
operator|&
name|file
else|:
operator|(
name|QIODevice
operator|*
operator|)
operator|&
name|buffer
decl_stmt|;
name|device
operator|->
name|open
argument_list|(
name|QBuffer
operator|::
name|ReadWrite
argument_list|)
expr_stmt|;
name|device
operator|->
name|write
argument_list|(
name|originalData
argument_list|)
expr_stmt|;
name|device
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|device
operator|->
name|atEnd
argument_list|()
condition|)
block|{
name|char
name|peekIn
index|[
literal|26
index|]
decl_stmt|;
name|device
operator|->
name|peek
argument_list|(
name|peekIn
argument_list|,
literal|26
argument_list|)
expr_stmt|;
name|readData
operator|+=
name|device
operator|->
name|read
argument_list|(
literal|26
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|readData
argument_list|,
name|originalData
argument_list|)
expr_stmt|;
block|}
name|QFile
operator|::
name|remove
argument_list|(
literal|"peektestfile"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readLine_data
name|void
name|tst_QIODevice
operator|::
name|readLine_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"0"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"\nAA"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"A\nAA"
argument_list|)
expr_stmt|;
name|QByteArray
name|data
argument_list|(
literal|9000
argument_list|,
literal|'A'
argument_list|)
decl_stmt|;
name|data
index|[
literal|8193
index|]
operator|=
literal|'\n'
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8194"
argument_list|)
operator|<<
name|data
expr_stmt|;
name|data
index|[
literal|8193
index|]
operator|=
literal|'A'
expr_stmt|;
name|data
index|[
literal|8192
index|]
operator|=
literal|'\n'
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8193"
argument_list|)
operator|<<
name|data
expr_stmt|;
name|data
index|[
literal|8192
index|]
operator|=
literal|'A'
expr_stmt|;
name|data
index|[
literal|8191
index|]
operator|=
literal|'\n'
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192"
argument_list|)
operator|<<
name|data
expr_stmt|;
name|data
index|[
literal|8191
index|]
operator|=
literal|'A'
expr_stmt|;
name|data
index|[
literal|8190
index|]
operator|=
literal|'\n'
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8191"
argument_list|)
operator|<<
name|data
expr_stmt|;
name|data
index|[
literal|5999
index|]
operator|=
literal|'\n'
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"6000"
argument_list|)
operator|<<
name|data
expr_stmt|;
name|data
index|[
literal|4095
index|]
operator|=
literal|'\n'
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096"
argument_list|)
operator|<<
name|data
expr_stmt|;
name|data
index|[
literal|4094
index|]
operator|=
literal|'\n'
expr_stmt|;
name|data
index|[
literal|4095
index|]
operator|=
literal|'A'
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4095"
argument_list|)
operator|<<
name|data
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readLine
name|void
name|tst_QIODevice
operator|::
name|readLine
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QBuffer
name|buffer
argument_list|(
operator|&
name|data
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadWrite
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|canReadLine
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|linelen
init|=
name|data
operator|.
name|indexOf
argument_list|(
literal|'\n'
argument_list|)
operator|+
literal|1
decl_stmt|;
name|QByteArray
name|line
decl_stmt|;
name|line
operator|.
name|reserve
argument_list|(
name|linelen
operator|+
literal|100
argument_list|)
expr_stmt|;
name|int
name|result
init|=
name|buffer
operator|.
name|readLine
argument_list|(
name|line
operator|.
name|data
argument_list|()
argument_list|,
name|linelen
operator|+
literal|100
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|linelen
argument_list|)
expr_stmt|;
comment|// try the exact length of the line (plus terminating \0)
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|buffer
operator|.
name|readLine
argument_list|(
name|line
operator|.
name|data
argument_list|()
argument_list|,
name|linelen
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|result
argument_list|,
name|linelen
argument_list|)
expr_stmt|;
comment|// try with a line length limit
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|=
name|buffer
operator|.
name|readLine
argument_list|(
name|linelen
operator|+
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|line
operator|.
name|size
argument_list|()
argument_list|,
name|linelen
argument_list|)
expr_stmt|;
comment|// try without a length limit
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|=
name|buffer
operator|.
name|readLine
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|line
operator|.
name|size
argument_list|()
argument_list|,
name|linelen
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readLine2_data
name|void
name|tst_QIODevice
operator|::
name|readLine2_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"line"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1024 - 4"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|1024
operator|-
literal|4
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1024 - 3"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|1024
operator|-
literal|3
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1024 - 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|1024
operator|-
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1024 - 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|1024
operator|-
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1024"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|1024
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1024 + 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|1024
operator|+
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1024 + 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|1024
operator|+
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096 - 4"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|4096
operator|-
literal|4
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096 - 3"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|4096
operator|-
literal|3
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096 - 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|4096
operator|-
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096 - 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|4096
operator|-
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|4096
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096 + 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|4096
operator|+
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"4096 + 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|4096
operator|+
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192 - 4"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|8192
operator|-
literal|4
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192 - 3"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|8192
operator|-
literal|3
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192 - 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|8192
operator|-
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192 - 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|8192
operator|-
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|8192
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192 + 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|8192
operator|+
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"8192 + 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|8192
operator|+
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16384 - 4"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|16384
operator|-
literal|4
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16384 - 3"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|16384
operator|-
literal|3
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16384 - 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|16384
operator|-
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16384 - 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|16384
operator|-
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16384"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|16384
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16384 + 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|16384
operator|+
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"16384 + 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|16384
operator|+
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"20000"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|20000
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32768 - 4"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|32768
operator|-
literal|4
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32768 - 3"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|32768
operator|-
literal|3
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32768 - 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|32768
operator|-
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32768 - 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|32768
operator|-
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32768"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|32768
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32768 + 1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|32768
operator|+
literal|1
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"32768 + 2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|32768
operator|+
literal|2
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"40000"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|40000
argument_list|,
literal|'x'
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readLine2
name|void
name|tst_QIODevice
operator|::
name|readLine2
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|int
name|length
init|=
name|line
operator|.
name|size
argument_list|()
decl_stmt|;
name|QByteArray
name|data
argument_list|(
literal|"First line.\r\n"
argument_list|)
decl_stmt|;
name|data
operator|.
name|append
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|data
operator|.
name|append
argument_list|(
literal|"\r\n"
argument_list|)
expr_stmt|;
name|data
operator|.
name|append
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|data
operator|.
name|append
argument_list|(
literal|"\r\n"
argument_list|)
expr_stmt|;
name|data
operator|.
name|append
argument_list|(
literal|"\r\n0123456789"
argument_list|)
expr_stmt|;
block|{
name|QBuffer
name|buffer
argument_list|(
operator|&
name|data
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QByteArray
name|temp
decl_stmt|;
name|temp
operator|.
name|resize
argument_list|(
literal|64536
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
name|length
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
name|length
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|length
operator|+
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|length
operator|+
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QBuffer
name|buffer
argument_list|(
operator|&
name|data
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
operator||
name|QIODevice
operator|::
name|Text
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QByteArray
name|temp
decl_stmt|;
name|temp
operator|.
name|resize
argument_list|(
literal|64536
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
name|length
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
name|length
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|(
name|temp
operator|.
name|data
argument_list|()
argument_list|,
name|temp
operator|.
name|size
argument_list|()
argument_list|)
argument_list|,
name|qint64
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|length
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|length
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|SequentialReadBuffer
class|class
name|SequentialReadBuffer
super|:
specifier|public
name|QIODevice
block|{
public|public:
DECL|function|SequentialReadBuffer
name|SequentialReadBuffer
parameter_list|(
specifier|const
name|char
modifier|*
name|data
parameter_list|)
member_init_list|:
name|QIODevice
argument_list|()
member_init_list|,
name|buf
argument_list|(
operator|new
name|QByteArray
argument_list|(
name|data
argument_list|)
argument_list|)
member_init_list|,
name|offset
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ownbuf
argument_list|(
literal|true
argument_list|)
block|{ }
DECL|function|SequentialReadBuffer
name|SequentialReadBuffer
parameter_list|(
name|QByteArray
modifier|*
name|byteArray
parameter_list|)
member_init_list|:
name|QIODevice
argument_list|()
member_init_list|,
name|buf
argument_list|(
name|byteArray
argument_list|)
member_init_list|,
name|offset
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ownbuf
argument_list|(
literal|false
argument_list|)
block|{ }
DECL|function|~SequentialReadBuffer
specifier|virtual
name|~
name|SequentialReadBuffer
parameter_list|()
block|{
if|if
condition|(
name|ownbuf
condition|)
operator|delete
name|buf
expr_stmt|;
block|}
name|bool
name|isSequential
parameter_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
literal|true
return|;
block|}
DECL|function|buffer
specifier|const
name|QByteArray
modifier|&
name|buffer
parameter_list|()
specifier|const
block|{
return|return
operator|*
name|buf
return|;
block|}
protected|protected:
name|qint64
name|readData
parameter_list|(
name|char
modifier|*
name|data
parameter_list|,
name|qint64
name|maxSize
parameter_list|)
name|Q_DECL_OVERRIDE
block|{
name|maxSize
operator|=
name|qMin
argument_list|(
name|maxSize
argument_list|,
name|qint64
argument_list|(
name|buf
operator|->
name|size
argument_list|()
operator|-
name|offset
argument_list|)
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|data
argument_list|,
name|buf
operator|->
name|constData
argument_list|()
operator|+
name|offset
argument_list|,
name|maxSize
argument_list|)
expr_stmt|;
name|offset
operator|+=
name|maxSize
expr_stmt|;
return|return
name|maxSize
return|;
block|}
name|qint64
name|writeData
parameter_list|(
specifier|const
name|char
modifier|*
comment|/* data */
parameter_list|,
name|qint64
comment|/* maxSize */
parameter_list|)
name|Q_DECL_OVERRIDE
block|{
return|return
operator|-
literal|1
return|;
block|}
private|private:
DECL|member|buf
name|QByteArray
modifier|*
name|buf
decl_stmt|;
DECL|member|offset
name|int
name|offset
decl_stmt|;
DECL|member|ownbuf
name|bool
name|ownbuf
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Test readAll() on position change for sequential device
end_comment
begin_function
DECL|function|readAllKeepPosition
name|void
name|tst_QIODevice
operator|::
name|readAllKeepPosition
parameter_list|()
block|{
name|SequentialReadBuffer
name|buffer
argument_list|(
literal|"Hello world!"
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|char
name|c
decl_stmt|;
name|QVERIFY
argument_list|(
name|buffer
operator|.
name|getChar
argument_list|(
operator|&
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|ungetChar
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QByteArray
name|resultArray
init|=
name|buffer
operator|.
name|readAll
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|pos
argument_list|()
argument_list|,
name|qint64
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|resultArray
argument_list|,
name|buffer
operator|.
name|buffer
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|RandomAccessBuffer
class|class
name|RandomAccessBuffer
super|:
specifier|public
name|QIODevice
block|{
public|public:
DECL|function|RandomAccessBuffer
name|RandomAccessBuffer
parameter_list|(
specifier|const
name|char
modifier|*
name|data
parameter_list|)
member_init_list|:
name|QIODevice
argument_list|()
member_init_list|,
name|buf
argument_list|(
name|data
argument_list|)
block|{ }
protected|protected:
name|qint64
name|readData
parameter_list|(
name|char
modifier|*
name|data
parameter_list|,
name|qint64
name|maxSize
parameter_list|)
name|Q_DECL_OVERRIDE
block|{
name|maxSize
operator|=
name|qMin
argument_list|(
name|maxSize
argument_list|,
name|qint64
argument_list|(
name|buf
operator|.
name|size
argument_list|()
operator|-
name|pos
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|data
argument_list|,
name|buf
operator|.
name|constData
argument_list|()
operator|+
name|pos
argument_list|()
argument_list|,
name|maxSize
argument_list|)
expr_stmt|;
return|return
name|maxSize
return|;
block|}
name|qint64
name|writeData
parameter_list|(
specifier|const
name|char
modifier|*
name|data
parameter_list|,
name|qint64
name|maxSize
parameter_list|)
name|Q_DECL_OVERRIDE
block|{
name|maxSize
operator|=
name|qMin
argument_list|(
name|maxSize
argument_list|,
name|qint64
argument_list|(
name|buf
operator|.
name|size
argument_list|()
operator|-
name|pos
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|memcpy
argument_list|(
name|buf
operator|.
name|data
argument_list|()
operator|+
name|pos
argument_list|()
argument_list|,
name|data
argument_list|,
name|maxSize
argument_list|)
expr_stmt|;
return|return
name|maxSize
return|;
block|}
private|private:
DECL|member|buf
name|QByteArray
name|buf
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// Test write() on skipping correct number of bytes in read buffer
end_comment
begin_function
DECL|function|writeInTextMode
name|void
name|tst_QIODevice
operator|::
name|writeInTextMode
parameter_list|()
block|{
comment|// Unlike other platforms, Windows implementation expands '\n' into
comment|// "\r\n" sequence in write(). Ensure that write() properly works with
comment|// a read buffer on random-access devices.
ifndef|#
directive|ifndef
name|Q_OS_WIN
name|QSKIP
argument_list|(
literal|"This is a Windows-only test"
argument_list|)
expr_stmt|;
else|#
directive|else
name|RandomAccessBuffer
name|buffer
argument_list|(
literal|"one\r\ntwo\r\nthree\r\n"
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|open
argument_list|(
name|QBuffer
operator|::
name|ReadWrite
operator||
name|QBuffer
operator|::
name|Text
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"one\n"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|write
argument_list|(
literal|"two\n"
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|buffer
operator|.
name|readLine
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"three\n"
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|transaction_data
name|void
name|tst_QIODevice
operator|::
name|transaction_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"sequential"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qint8
argument_list|>
argument_list|(
literal|"i8Data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qint16
argument_list|>
argument_list|(
literal|"i16Data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qint32
argument_list|>
argument_list|(
literal|"i32Data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|qint64
argument_list|>
argument_list|(
literal|"i64Data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"bData"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|float
argument_list|>
argument_list|(
literal|"fData"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|double
argument_list|>
argument_list|(
literal|"dData"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"strData"
argument_list|)
expr_stmt|;
name|bool
name|sequential
init|=
literal|true
decl_stmt|;
do|do
block|{
name|QByteArray
name|devName
argument_list|(
name|sequential
condition|?
literal|"sequential"
else|:
literal|"random-access"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|devName
operator|+
literal|'1'
argument_list|)
argument_list|)
operator|<<
name|sequential
operator|<<
name|qint8
argument_list|(
literal|1
argument_list|)
operator|<<
name|qint16
argument_list|(
literal|2
argument_list|)
operator|<<
name|qint32
argument_list|(
literal|3
argument_list|)
operator|<<
name|qint64
argument_list|(
literal|4
argument_list|)
operator|<<
literal|true
operator|<<
literal|5.0f
operator|<<
name|double
argument_list|(
literal|6.0
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"Hello world!"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|devName
operator|+
literal|'2'
argument_list|)
argument_list|)
operator|<<
name|sequential
operator|<<
name|qint8
argument_list|(
literal|1
operator|<<
literal|6
argument_list|)
operator|<<
name|qint16
argument_list|(
literal|1
operator|<<
literal|14
argument_list|)
operator|<<
name|qint32
argument_list|(
literal|1
operator|<<
literal|30
argument_list|)
operator|<<
operator|(
name|qint64
argument_list|(
literal|1
argument_list|)
operator|<<
literal|62
operator|)
operator|<<
literal|false
operator|<<
literal|123.0f
operator|<<
name|double
argument_list|(
literal|234.0
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|devName
operator|+
literal|'3'
argument_list|)
argument_list|)
operator|<<
name|sequential
operator|<<
name|qint8
argument_list|(
operator|-
literal|1
argument_list|)
operator|<<
name|qint16
argument_list|(
operator|-
literal|2
argument_list|)
operator|<<
name|qint32
argument_list|(
operator|-
literal|3
argument_list|)
operator|<<
name|qint64
argument_list|(
operator|-
literal|4
argument_list|)
operator|<<
literal|true
operator|<<
operator|-
literal|123.0f
operator|<<
name|double
argument_list|(
operator|-
literal|234.0
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"Qt rocks!"
argument_list|)
expr_stmt|;
name|sequential
operator|=
operator|!
name|sequential
expr_stmt|;
block|}
do|while
condition|(
operator|!
name|sequential
condition|)
do|;
block|}
end_function
begin_comment
comment|// Test transaction integrity
end_comment
begin_function
DECL|function|transaction
name|void
name|tst_QIODevice
operator|::
name|transaction
parameter_list|()
block|{
name|QByteArray
name|testBuffer
decl_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|sequential
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qint8
argument_list|,
name|i8Data
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qint16
argument_list|,
name|i16Data
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qint32
argument_list|,
name|i32Data
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|qint64
argument_list|,
name|i64Data
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|bData
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|float
argument_list|,
name|fData
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|double
argument_list|,
name|dData
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|strData
argument_list|)
expr_stmt|;
block|{
name|QDataStream
name|stream
argument_list|(
operator|&
name|testBuffer
argument_list|,
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
decl_stmt|;
name|stream
operator|<<
name|i8Data
operator|<<
name|i16Data
operator|<<
name|i32Data
operator|<<
name|i64Data
operator|<<
name|bData
operator|<<
name|fData
operator|<<
name|dData
operator|<<
name|strData
operator|.
name|constData
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|splitPos
init|=
literal|0
init|;
name|splitPos
operator|<=
name|testBuffer
operator|.
name|size
argument_list|()
condition|;
operator|++
name|splitPos
control|)
block|{
name|QByteArray
name|readBuffer
argument_list|(
name|testBuffer
operator|.
name|left
argument_list|(
name|splitPos
argument_list|)
argument_list|)
decl_stmt|;
name|QIODevice
modifier|*
name|dev
init|=
name|sequential
condition|?
operator|(
name|QIODevice
operator|*
operator|)
operator|new
name|SequentialReadBuffer
argument_list|(
operator|&
name|readBuffer
argument_list|)
else|:
operator|(
name|QIODevice
operator|*
operator|)
operator|new
name|QBuffer
argument_list|(
operator|&
name|readBuffer
argument_list|)
decl_stmt|;
name|dev
operator|->
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
name|dev
argument_list|)
decl_stmt|;
name|qint8
name|i8
decl_stmt|;
name|qint16
name|i16
decl_stmt|;
name|qint32
name|i32
decl_stmt|;
name|qint64
name|i64
decl_stmt|;
name|bool
name|b
decl_stmt|;
name|float
name|f
decl_stmt|;
name|double
name|d
decl_stmt|;
name|char
modifier|*
name|str
decl_stmt|;
forever|forever
block|{
name|QVERIFY
argument_list|(
operator|!
name|dev
operator|->
name|isTransactionStarted
argument_list|()
argument_list|)
expr_stmt|;
name|dev
operator|->
name|startTransaction
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|dev
operator|->
name|isTransactionStarted
argument_list|()
argument_list|)
expr_stmt|;
comment|// Try to read all data in one go. If the status of the data stream
comment|// indicates an unsuccessful operation, restart a read transaction
comment|// on the completed buffer.
name|stream
operator|>>
name|i8
operator|>>
name|i16
operator|>>
name|i32
operator|>>
name|i64
operator|>>
name|b
operator|>>
name|f
operator|>>
name|d
operator|>>
name|str
expr_stmt|;
name|QVERIFY
argument_list|(
name|stream
operator|.
name|atEnd
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|stream
operator|.
name|status
argument_list|()
operator|==
name|QDataStream
operator|::
name|Ok
condition|)
block|{
name|dev
operator|->
name|commitTransaction
argument_list|()
expr_stmt|;
break|break;
block|}
name|dev
operator|->
name|rollbackTransaction
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|splitPos
operator|==
literal|0
operator|||
operator|!
name|stream
operator|.
name|atEnd
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dev
operator|->
name|pos
argument_list|()
argument_list|,
name|Q_INT64_C
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dev
operator|->
name|bytesAvailable
argument_list|()
argument_list|,
name|qint64
argument_list|(
name|readBuffer
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|readBuffer
operator|.
name|size
argument_list|()
operator|<
name|testBuffer
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
index|[]
name|str
expr_stmt|;
name|readBuffer
operator|.
name|append
argument_list|(
name|testBuffer
operator|.
name|right
argument_list|(
name|testBuffer
operator|.
name|size
argument_list|()
operator|-
name|splitPos
argument_list|)
argument_list|)
expr_stmt|;
name|stream
operator|.
name|resetStatus
argument_list|()
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|dev
operator|->
name|isTransactionStarted
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|stream
operator|.
name|atEnd
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i8
argument_list|,
name|i8Data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i16
argument_list|,
name|i16Data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i32
argument_list|,
name|i32Data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|i64
argument_list|,
name|i64Data
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
argument_list|,
name|bData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|f
argument_list|,
name|fData
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
argument_list|,
name|dData
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|strData
operator|==
name|str
argument_list|)
expr_stmt|;
operator|delete
index|[]
name|str
expr_stmt|;
name|stream
operator|.
name|setDevice
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|dev
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QIODevice
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qiodevice.moc"
end_include
end_unit
