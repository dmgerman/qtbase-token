begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 John Layt<jlayt@kde.org> ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformprintplugin.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformprintersupport.h>
end_include
begin_include
include|#
directive|include
file|<private/qprintdevice_p.h>
end_include
begin_class
DECL|class|tst_QPrintDevice
class|class
name|tst_QPrintDevice
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|basics
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|basics
name|void
name|tst_QPrintDevice
operator|::
name|basics
parameter_list|()
block|{
name|QPlatformPrinterSupport
modifier|*
name|ps
init|=
name|QPlatformPrinterSupportPlugin
operator|::
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|ps
condition|)
name|QSKIP
argument_list|(
literal|"Could not load platform plugin"
argument_list|)
expr_stmt|;
name|QString
name|defaultId
init|=
name|ps
operator|->
name|defaultPrintDeviceId
argument_list|()
decl_stmt|;
if|if
condition|(
name|defaultId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"No default printer found"
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
literal|"Default Printer ID :"
operator|<<
name|defaultId
expr_stmt|;
name|QVERIFY
argument_list|(
name|ps
operator|->
name|availablePrintDeviceIds
argument_list|()
operator|.
name|contains
argument_list|(
name|defaultId
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|qDebug
argument_list|()
operator|<<
literal|"Available Printer IDs :"
operator|<<
name|ps
operator|->
name|availablePrintDeviceIds
argument_list|()
expr_stmt|;
comment|// Just exercise the api for now as we don't know what is installed
foreach|foreach
control|(
specifier|const
name|QString
name|id
decl|,
name|ps
operator|->
name|availablePrintDeviceIds
argument_list|()
control|)
block|{
name|QPrintDevice
name|printDevice
init|=
name|ps
operator|->
name|createPrintDevice
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"Created printer"
operator|<<
name|id
expr_stmt|;
name|QCOMPARE
argument_list|(
name|printDevice
operator|.
name|isValid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|printDevice
operator|.
name|id
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|name
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|location
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|makeAndModel
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|isValid
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|isDefault
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|isRemote
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|state
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportsMultipleCopies
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportsCollateCopies
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|defaultPageSize
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportedPageSizes
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportsCustomPageSizes
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|minimumPhysicalPageSize
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|maximumPhysicalPageSize
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|defaultResolution
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportedResolutions
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|defaultInputSlot
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportedInputSlots
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|defaultOutputBin
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportedOutputBins
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|defaultDuplexMode
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportedDuplexModes
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|defaultColorMode
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportedColorModes
argument_list|()
expr_stmt|;
name|printDevice
operator|.
name|supportedMimeTypes
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QPrintDevice
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qprintdevice.moc"
end_include
end_unit
