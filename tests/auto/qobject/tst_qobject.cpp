begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qpointer.h>
end_include
begin_include
include|#
directive|include
file|<qtimer.h>
end_include
begin_include
include|#
directive|include
file|<qregexp.h>
end_include
begin_include
include|#
directive|include
file|<qmetaobject.h>
end_include
begin_include
include|#
directive|include
file|<qvariant.h>
end_include
begin_include
include|#
directive|include
file|<QTcpServer>
end_include
begin_include
include|#
directive|include
file|<QTcpSocket>
end_include
begin_include
include|#
directive|include
file|<QThread>
end_include
begin_include
include|#
directive|include
file|<QMutex>
end_include
begin_include
include|#
directive|include
file|<QWaitCondition>
end_include
begin_include
include|#
directive|include
file|<QProcess>
end_include
begin_include
include|#
directive|include
file|"qobject.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
end_ifdef
begin_include
include|#
directive|include
file|<private/qobject_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_class
DECL|class|tst_QObject
class|class
name|tst_QObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QObject
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QObject
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|disconnect
parameter_list|()
function_decl|;
name|void
name|connectByName
parameter_list|()
function_decl|;
name|void
name|connectSignalsToSignalsWithDefaultArguments
parameter_list|()
function_decl|;
name|void
name|receivers
parameter_list|()
function_decl|;
name|void
name|normalize
parameter_list|()
function_decl|;
name|void
name|qobject_castTemplate
parameter_list|()
function_decl|;
name|void
name|findChildren
parameter_list|()
function_decl|;
name|void
name|connectDisconnectNotify_data
parameter_list|()
function_decl|;
name|void
name|connectDisconnectNotify
parameter_list|()
function_decl|;
name|void
name|emitInDefinedOrder
parameter_list|()
function_decl|;
name|void
name|customTypes
parameter_list|()
function_decl|;
name|void
name|streamCustomTypes
parameter_list|()
function_decl|;
name|void
name|metamethod
parameter_list|()
function_decl|;
name|void
name|namespaces
parameter_list|()
function_decl|;
name|void
name|threadSignalEmissionCrash
parameter_list|()
function_decl|;
name|void
name|thread
parameter_list|()
function_decl|;
name|void
name|thread0
parameter_list|()
function_decl|;
name|void
name|moveToThread
parameter_list|()
function_decl|;
name|void
name|sender
parameter_list|()
function_decl|;
name|void
name|declareInterface
parameter_list|()
function_decl|;
name|void
name|qpointerResetBeforeDestroyedSignal
parameter_list|()
function_decl|;
name|void
name|testUserData
parameter_list|()
function_decl|;
name|void
name|childDeletesItsSibling
parameter_list|()
function_decl|;
name|void
name|dynamicProperties
parameter_list|()
function_decl|;
name|void
name|floatProperty
parameter_list|()
function_decl|;
name|void
name|qrealProperty
parameter_list|()
function_decl|;
name|void
name|property
parameter_list|()
function_decl|;
name|void
name|recursiveSignalEmission
parameter_list|()
function_decl|;
name|void
name|blockingQueuedConnection
parameter_list|()
function_decl|;
name|void
name|compatibilityChildInsertedEvents
parameter_list|()
function_decl|;
name|void
name|installEventFilter
parameter_list|()
function_decl|;
name|void
name|deleteSelfInSlot
parameter_list|()
function_decl|;
name|void
name|disconnectSelfInSlotAndDeleteAfterEmit
parameter_list|()
function_decl|;
name|void
name|dumpObjectInfo
parameter_list|()
function_decl|;
name|void
name|connectToSender
parameter_list|()
function_decl|;
name|void
name|qobjectConstCast
parameter_list|()
function_decl|;
name|void
name|uniqConnection
parameter_list|()
function_decl|;
name|void
name|interfaceIid
parameter_list|()
function_decl|;
name|void
name|deleteQObjectWhenDeletingEvent
parameter_list|()
function_decl|;
name|void
name|overloads
parameter_list|()
function_decl|;
name|void
name|isSignalConnected
parameter_list|()
function_decl|;
name|void
name|qMetaObjectConnect
parameter_list|()
function_decl|;
name|void
name|qMetaObjectDisconnectOne
parameter_list|()
function_decl|;
name|void
name|sameName
parameter_list|()
function_decl|;
name|void
name|connectByMetaMethods
parameter_list|()
function_decl|;
name|void
name|connectByMetaMethodSlotInsteadOfSignal
parameter_list|()
function_decl|;
name|void
name|connectConstructorByMetaMethod
parameter_list|()
function_decl|;
name|void
name|disconnectByMetaMethod
parameter_list|()
function_decl|;
name|void
name|disconnectNotSignalMetaMethod
parameter_list|()
function_decl|;
name|void
name|autoConnectionBehavior
parameter_list|()
function_decl|;
name|void
name|baseDestroyed
parameter_list|()
function_decl|;
protected|protected:
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QObject
name|tst_QObject
operator|::
name|tst_QObject
parameter_list|()
block|{  }
end_constructor
begin_destructor
DECL|function|~tst_QObject
name|tst_QObject
operator|::
name|~
name|tst_QObject
parameter_list|()
block|{  }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QObject
operator|::
name|initTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QObject
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QObject
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QObject
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_class
DECL|class|SenderObject
class|class
name|SenderObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|SenderObject
name|SenderObject
parameter_list|()
member_init_list|:
name|aPublicSlotCalled
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|recursionCount
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|emitSignal1AfterRecursion
name|void
name|emitSignal1AfterRecursion
parameter_list|()
block|{
if|if
condition|(
name|recursionCount
operator|++
operator|<
literal|100
condition|)
name|emitSignal1AfterRecursion
argument_list|()
expr_stmt|;
else|else
name|emitSignal1
argument_list|()
expr_stmt|;
block|}
DECL|function|emitSignal1
name|void
name|emitSignal1
parameter_list|()
block|{
emit|emit
name|signal1
argument_list|()
emit|;
block|}
DECL|function|emitSignal2
name|void
name|emitSignal2
parameter_list|()
block|{
emit|emit
name|signal2
argument_list|()
emit|;
block|}
DECL|function|emitSignal3
name|void
name|emitSignal3
parameter_list|()
block|{
emit|emit
name|signal3
argument_list|()
emit|;
block|}
DECL|function|emitSignal4
name|void
name|emitSignal4
parameter_list|()
block|{
emit|emit
name|signal4
argument_list|()
emit|;
block|}
signals|signals:
name|void
name|signal1
parameter_list|()
function_decl|;
name|void
name|signal2
parameter_list|()
function_decl|;
name|void
name|signal3
parameter_list|()
function_decl|;
name|void
name|signal4
parameter_list|()
function_decl|;
name|QT_MOC_COMPAT
name|void
name|signal5
parameter_list|()
function_decl|;
public|public
name|slots
public|:
DECL|function|aPublicSlot
name|void
name|aPublicSlot
parameter_list|()
block|{
name|aPublicSlotCalled
operator|++
expr_stmt|;
block|}
public|public:
DECL|function|invoke1
name|Q_INVOKABLE
name|void
name|invoke1
parameter_list|()
block|{}
DECL|function|sinvoke1
name|Q_SCRIPTABLE
name|void
name|sinvoke1
parameter_list|()
block|{}
DECL|member|aPublicSlotCalled
name|int
name|aPublicSlotCalled
decl_stmt|;
protected|protected:
DECL|function|invoke2
name|Q_INVOKABLE
name|QT_MOC_COMPAT
name|void
name|invoke2
parameter_list|()
block|{}
DECL|function|invoke2
name|Q_INVOKABLE
name|QT_MOC_COMPAT
name|void
name|invoke2
parameter_list|(
name|int
parameter_list|)
block|{}
DECL|function|sinvoke2
name|Q_SCRIPTABLE
name|QT_MOC_COMPAT
name|void
name|sinvoke2
parameter_list|()
block|{}
private|private:
DECL|function|invoke3
name|Q_INVOKABLE
name|void
name|invoke3
parameter_list|(
name|int
name|hinz
init|=
literal|0
parameter_list|,
name|int
name|kunz
init|=
literal|0
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|hinz
argument_list|)
name|Q_UNUSED
argument_list|(
argument|kunz
argument_list|)
block|}
DECL|function|sinvoke3
name|Q_SCRIPTABLE
name|void
name|sinvoke3
parameter_list|()
block|{}
DECL|member|recursionCount
name|int
name|recursionCount
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|ReceiverObject
class|class
name|ReceiverObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|ReceiverObject
name|ReceiverObject
parameter_list|()
member_init_list|:
name|sequence_slot1
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|sequence_slot2
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|sequence_slot3
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|sequence_slot4
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
name|sequence_slot4
operator|=
literal|0
expr_stmt|;
name|sequence_slot3
operator|=
literal|0
expr_stmt|;
name|sequence_slot2
operator|=
literal|0
expr_stmt|;
name|sequence_slot1
operator|=
literal|0
expr_stmt|;
name|count_slot1
operator|=
literal|0
expr_stmt|;
name|count_slot2
operator|=
literal|0
expr_stmt|;
name|count_slot3
operator|=
literal|0
expr_stmt|;
name|count_slot4
operator|=
literal|0
expr_stmt|;
block|}
DECL|member|sequence_slot1
name|int
name|sequence_slot1
decl_stmt|;
DECL|member|sequence_slot2
name|int
name|sequence_slot2
decl_stmt|;
DECL|member|sequence_slot3
name|int
name|sequence_slot3
decl_stmt|;
DECL|member|sequence_slot4
name|int
name|sequence_slot4
decl_stmt|;
DECL|member|count_slot1
name|int
name|count_slot1
decl_stmt|;
DECL|member|count_slot2
name|int
name|count_slot2
decl_stmt|;
DECL|member|count_slot3
name|int
name|count_slot3
decl_stmt|;
DECL|member|count_slot4
name|int
name|count_slot4
decl_stmt|;
DECL|function|called
name|bool
name|called
parameter_list|(
name|int
name|slot
parameter_list|)
block|{
switch|switch
condition|(
name|slot
condition|)
block|{
case|case
literal|1
case|:
return|return
name|sequence_slot1
return|;
case|case
literal|2
case|:
return|return
name|sequence_slot2
return|;
case|case
literal|3
case|:
return|return
name|sequence_slot3
return|;
case|case
literal|4
case|:
return|return
name|sequence_slot4
return|;
default|default:
return|return
literal|false
return|;
block|}
block|}
DECL|member|sequence
specifier|static
name|int
name|sequence
decl_stmt|;
public|public
name|slots
public|:
DECL|function|slot1
name|void
name|slot1
parameter_list|()
block|{
name|sequence_slot1
operator|=
operator|++
name|sequence
expr_stmt|;
name|count_slot1
operator|++
expr_stmt|;
block|}
DECL|function|slot2
name|void
name|slot2
parameter_list|()
block|{
name|sequence_slot2
operator|=
operator|++
name|sequence
expr_stmt|;
name|count_slot2
operator|++
expr_stmt|;
block|}
DECL|function|slot3
name|void
name|slot3
parameter_list|()
block|{
name|sequence_slot3
operator|=
operator|++
name|sequence
expr_stmt|;
name|count_slot3
operator|++
expr_stmt|;
block|}
DECL|function|slot4
name|void
name|slot4
parameter_list|()
block|{
name|sequence_slot4
operator|=
operator|++
name|sequence
expr_stmt|;
name|count_slot4
operator|++
expr_stmt|;
block|}
block|}
class|;
end_class
begin_decl_stmt
DECL|member|sequence
name|int
name|ReceiverObject
operator|::
name|sequence
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|disconnect
name|void
name|tst_QObject
operator|::
name|disconnect
parameter_list|()
block|{
name|SenderObject
modifier|*
name|s
init|=
operator|new
name|SenderObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r1
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r2
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal2
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal3
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot3
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal4
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// usual disconnect with all parameters given
name|bool
name|ret
init|=
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ret
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|ret
operator|=
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|ret
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
comment|// disconnect all signals from s from all slots from r1
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
literal|0
argument_list|,
name|r1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot3
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal2
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// disconnect s's signal1() from all slots of r1
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// make sure all is disconnected again
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
literal|0
argument_list|,
name|r1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r2
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal2
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal2
argument_list|()
argument_list|)
argument_list|,
name|r2
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal3
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot3
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal3
argument_list|()
argument_list|)
argument_list|,
name|r2
argument_list|,
name|SLOT
argument_list|(
name|slot3
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// disconnect signal1() from all receivers
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// disconnect all signals of s from all receivers
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
operator|delete
name|r2
expr_stmt|;
operator|delete
name|r1
expr_stmt|;
operator|delete
name|s
expr_stmt|;
block|}
end_function
begin_class
DECL|class|AutoConnectSender
class|class
name|AutoConnectSender
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|AutoConnectSender
name|AutoConnectSender
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|emitSignalNoParams
name|void
name|emitSignalNoParams
parameter_list|()
block|{
emit|emit
name|signalNoParams
argument_list|()
emit|;
block|}
DECL|function|emitSignalWithParams
name|void
name|emitSignalWithParams
parameter_list|(
name|int
name|i
parameter_list|)
block|{
emit|emit
name|signalWithParams
argument_list|(
name|i
argument_list|)
emit|;
block|}
DECL|function|emitSignalWithParams
name|void
name|emitSignalWithParams
parameter_list|(
name|int
name|i
parameter_list|,
name|QString
name|string
parameter_list|)
block|{
emit|emit
name|signalWithParams
argument_list|(
name|i
argument_list|,
name|string
argument_list|)
emit|;
block|}
DECL|function|emitSignalManyParams
name|void
name|emitSignalManyParams
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|)
block|{
emit|emit
name|signalManyParams
argument_list|(
name|i1
argument_list|,
name|i2
argument_list|,
name|i3
argument_list|,
name|string
argument_list|,
name|onoff
argument_list|)
emit|;
block|}
DECL|function|emitSignalManyParams2
name|void
name|emitSignalManyParams2
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|)
block|{
emit|emit
name|signalManyParams2
argument_list|(
name|i1
argument_list|,
name|i2
argument_list|,
name|i3
argument_list|,
name|string
argument_list|,
name|onoff
argument_list|)
emit|;
block|}
DECL|function|emitSignalLoopBack
name|void
name|emitSignalLoopBack
parameter_list|()
block|{
emit|emit
name|signalLoopBack
argument_list|()
emit|;
block|}
signals|signals:
name|void
name|signalNoParams
parameter_list|()
function_decl|;
name|void
name|signalWithParams
parameter_list|(
name|int
name|i
parameter_list|)
function_decl|;
name|void
name|signalWithParams
parameter_list|(
name|int
name|i
parameter_list|,
name|QString
name|string
parameter_list|)
function_decl|;
name|void
name|signalManyParams
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|)
function_decl|;
name|void
name|signalManyParams
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|signalManyParams2
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|)
function_decl|;
name|void
name|signalLoopBack
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|AutoConnectReceiver
class|class
name|AutoConnectReceiver
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|AutoConnectReceiver
name|AutoConnectReceiver
parameter_list|()
block|{
name|reset
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|on_Sender_signalLoopBack
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|slotLoopBack
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
name|called_slot10
operator|=
literal|0
expr_stmt|;
name|called_slot9
operator|=
literal|0
expr_stmt|;
name|called_slot8
operator|=
literal|0
expr_stmt|;
name|called_slot7
operator|=
literal|0
expr_stmt|;
name|called_slot6
operator|=
literal|0
expr_stmt|;
name|called_slot5
operator|=
literal|0
expr_stmt|;
name|called_slot4
operator|=
literal|0
expr_stmt|;
name|called_slot3
operator|=
literal|0
expr_stmt|;
name|called_slot2
operator|=
literal|0
expr_stmt|;
name|called_slot1
operator|=
literal|0
expr_stmt|;
block|}
DECL|member|called_slot1
name|int
name|called_slot1
decl_stmt|;
DECL|member|called_slot2
name|int
name|called_slot2
decl_stmt|;
DECL|member|called_slot3
name|int
name|called_slot3
decl_stmt|;
DECL|member|called_slot4
name|int
name|called_slot4
decl_stmt|;
DECL|member|called_slot5
name|int
name|called_slot5
decl_stmt|;
DECL|member|called_slot6
name|int
name|called_slot6
decl_stmt|;
DECL|member|called_slot7
name|int
name|called_slot7
decl_stmt|;
DECL|member|called_slot8
name|int
name|called_slot8
decl_stmt|;
DECL|member|called_slot9
name|int
name|called_slot9
decl_stmt|;
DECL|member|called_slot10
name|int
name|called_slot10
decl_stmt|;
DECL|function|called
name|bool
name|called
parameter_list|(
name|int
name|slot
parameter_list|)
block|{
switch|switch
condition|(
name|slot
condition|)
block|{
case|case
literal|1
case|:
return|return
name|called_slot1
return|;
case|case
literal|2
case|:
return|return
name|called_slot2
return|;
case|case
literal|3
case|:
return|return
name|called_slot3
return|;
case|case
literal|4
case|:
return|return
name|called_slot4
return|;
case|case
literal|5
case|:
return|return
name|called_slot5
return|;
case|case
literal|6
case|:
return|return
name|called_slot6
return|;
case|case
literal|7
case|:
return|return
name|called_slot7
return|;
case|case
literal|8
case|:
return|return
name|called_slot8
return|;
case|case
literal|9
case|:
return|return
name|called_slot9
return|;
case|case
literal|10
case|:
return|return
name|called_slot10
return|;
default|default:
return|return
literal|false
return|;
block|}
block|}
public|public
name|slots
public|:
DECL|function|on_Sender_signalNoParams
name|void
name|on_Sender_signalNoParams
parameter_list|()
block|{
operator|++
name|called_slot1
expr_stmt|;
block|}
DECL|function|on_Sender_signalWithParams
name|void
name|on_Sender_signalWithParams
parameter_list|(
name|int
name|i
init|=
literal|0
parameter_list|)
block|{
operator|++
name|called_slot2
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
DECL|function|on_Sender_signalWithParams
name|void
name|on_Sender_signalWithParams
parameter_list|(
name|int
name|i
parameter_list|,
name|QString
name|string
parameter_list|)
block|{
operator|++
name|called_slot3
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|string
argument_list|)
expr_stmt|;
block|}
DECL|function|on_Sender_signalManyParams
name|void
name|on_Sender_signalManyParams
parameter_list|()
block|{
operator|++
name|called_slot4
expr_stmt|;
block|}
DECL|function|on_Sender_signalManyParams
name|void
name|on_Sender_signalManyParams
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|)
block|{
operator|++
name|called_slot5
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i1
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i2
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i3
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|string
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|onoff
argument_list|)
expr_stmt|;
block|}
DECL|function|on_Sender_signalManyParams
name|void
name|on_Sender_signalManyParams
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|,
name|bool
name|dummy
parameter_list|)
block|{
operator|++
name|called_slot6
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i1
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i2
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i3
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|string
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|onoff
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|dummy
argument_list|)
expr_stmt|;
block|}
DECL|function|on_Sender_signalManyParams2
name|void
name|on_Sender_signalManyParams2
parameter_list|(
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|int
name|i3
parameter_list|,
name|QString
name|string
parameter_list|,
name|bool
name|onoff
parameter_list|)
block|{
operator|++
name|called_slot7
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i1
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i2
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|i3
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|string
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|onoff
argument_list|)
expr_stmt|;
block|}
DECL|function|slotLoopBack
name|void
name|slotLoopBack
parameter_list|()
block|{
operator|++
name|called_slot8
expr_stmt|;
block|}
protected|protected
name|slots
protected|:
DECL|function|o
name|void
name|o
parameter_list|()
block|{
operator|++
name|called_slot9
expr_stmt|;
block|}
DECL|function|on
name|void
name|on
parameter_list|()
block|{
operator|++
name|called_slot10
expr_stmt|;
block|}
signals|signals:
name|void
name|on_Sender_signalLoopBack
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|connectByName
name|void
name|tst_QObject
operator|::
name|connectByName
parameter_list|()
block|{
name|AutoConnectReceiver
name|receiver
decl_stmt|;
name|AutoConnectSender
name|sender
argument_list|(
operator|&
name|receiver
argument_list|)
decl_stmt|;
name|sender
operator|.
name|setObjectName
argument_list|(
literal|"Sender"
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|connectSlotsByName
argument_list|(
operator|&
name|receiver
argument_list|)
expr_stmt|;
name|sender
operator|.
name|emitSignalNoParams
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|10
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sender
operator|.
name|emitSignalWithParams
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|10
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sender
operator|.
name|emitSignalWithParams
argument_list|(
literal|0
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|10
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sender
operator|.
name|emitSignalManyParams
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|"string"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|10
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sender
operator|.
name|emitSignalManyParams2
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|"string"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|10
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|reset
argument_list|()
expr_stmt|;
name|sender
operator|.
name|emitSignalLoopBack
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|8
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|9
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|10
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qobject_castTemplate
name|void
name|tst_QObject
operator|::
name|qobject_castTemplate
parameter_list|()
block|{
name|QObject
modifier|*
name|o
init|=
literal|0
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|qobject_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|o
operator|=
operator|new
name|SenderObject
expr_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|qobject_cast
argument_list|<
name|SenderObject
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|::
name|qobject_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|::
name|qobject_cast
argument_list|<
name|ReceiverObject
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|o
expr_stmt|;
block|}
end_function
begin_function
DECL|function|findChildren
name|void
name|tst_QObject
operator|::
name|findChildren
parameter_list|()
block|{
name|QObject
name|o
decl_stmt|;
name|QObject
name|o1
argument_list|(
operator|&
name|o
argument_list|)
decl_stmt|;
name|QObject
name|o2
argument_list|(
operator|&
name|o
argument_list|)
decl_stmt|;
name|QObject
name|o11
argument_list|(
operator|&
name|o1
argument_list|)
decl_stmt|;
name|QObject
name|o12
argument_list|(
operator|&
name|o1
argument_list|)
decl_stmt|;
name|QObject
name|o111
argument_list|(
operator|&
name|o11
argument_list|)
decl_stmt|;
name|QObject
name|unnamed
argument_list|(
operator|&
name|o
argument_list|)
decl_stmt|;
name|QTimer
name|t1
argument_list|(
operator|&
name|o
argument_list|)
decl_stmt|;
name|QTimer
name|t121
argument_list|(
operator|&
name|o12
argument_list|)
decl_stmt|;
name|QTimer
name|emptyname
argument_list|(
operator|&
name|o
argument_list|)
decl_stmt|;
name|o
operator|.
name|setObjectName
argument_list|(
literal|"o"
argument_list|)
expr_stmt|;
name|o1
operator|.
name|setObjectName
argument_list|(
literal|"o1"
argument_list|)
expr_stmt|;
name|o2
operator|.
name|setObjectName
argument_list|(
literal|"o2"
argument_list|)
expr_stmt|;
name|o11
operator|.
name|setObjectName
argument_list|(
literal|"o11"
argument_list|)
expr_stmt|;
name|o12
operator|.
name|setObjectName
argument_list|(
literal|"o12"
argument_list|)
expr_stmt|;
name|o111
operator|.
name|setObjectName
argument_list|(
literal|"o111"
argument_list|)
expr_stmt|;
name|t1
operator|.
name|setObjectName
argument_list|(
literal|"t1"
argument_list|)
expr_stmt|;
name|t121
operator|.
name|setObjectName
argument_list|(
literal|"t121"
argument_list|)
expr_stmt|;
name|emptyname
operator|.
name|setObjectName
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|op
init|=
literal|0
decl_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|o1
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|o2
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o11"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|o11
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o12"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|o12
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o111"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|o111
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|t1
argument_list|)
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t121"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|t121
argument_list|)
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|t1
argument_list|)
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t121"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|t121
argument_list|)
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o12"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"harry"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|o1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QObject
modifier|*
argument_list|>
name|l
decl_stmt|;
name|QList
argument_list|<
name|QTimer
modifier|*
argument_list|>
name|tl
decl_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|o1
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|o2
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o11"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|o11
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o12"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|o12
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o111"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|o111
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|t1
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t121"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|t121
argument_list|)
argument_list|)
expr_stmt|;
name|tl
operator|=
name|qFindChildren
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|t1
argument_list|)
expr_stmt|;
name|tl
operator|=
name|qFindChildren
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"t121"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|t121
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"harry"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tl
operator|=
name|qFindChildren
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o12"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"o1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|o1
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
name|QRegExp
argument_list|(
literal|"o.*"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|l
operator|.
name|contains
argument_list|(
operator|&
name|o1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|l
operator|.
name|contains
argument_list|(
operator|&
name|o2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|l
operator|.
name|contains
argument_list|(
operator|&
name|o11
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|l
operator|.
name|contains
argument_list|(
operator|&
name|o12
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|l
operator|.
name|contains
argument_list|(
operator|&
name|o111
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
name|QRegExp
argument_list|(
literal|"t.*"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|l
operator|.
name|contains
argument_list|(
operator|&
name|t1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|l
operator|.
name|contains
argument_list|(
operator|&
name|t121
argument_list|)
argument_list|)
expr_stmt|;
name|tl
operator|=
name|qFindChildren
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
name|QRegExp
argument_list|(
literal|".*"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tl
operator|.
name|contains
argument_list|(
operator|&
name|t1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tl
operator|.
name|contains
argument_list|(
operator|&
name|t121
argument_list|)
argument_list|)
expr_stmt|;
name|tl
operator|=
name|qFindChildren
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
name|QRegExp
argument_list|(
literal|"o.*"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
name|QRegExp
argument_list|(
literal|"harry"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// empty and null string check
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|o1
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
operator|&
name|unnamed
argument_list|)
expr_stmt|;
name|op
operator|=
name|qFindChild
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"unnamed"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|op
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|l
operator|=
name|qFindChildren
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|o
argument_list|,
literal|"unnamed"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|l
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tl
operator|=
name|o
operator|.
name|findChildren
argument_list|<
name|QTimer
operator|*
argument_list|>
argument_list|(
literal|"t1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tl
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|&
name|t1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|NotifyObject
class|class
name|NotifyObject
super|:
specifier|public
name|SenderObject
super|,
specifier|public
name|ReceiverObject
block|{
public|public:
DECL|function|NotifyObject
name|NotifyObject
parameter_list|()
member_init_list|:
name|SenderObject
argument_list|()
member_init_list|,
name|ReceiverObject
argument_list|()
block|{}
DECL|member|org_signal
name|QString
name|org_signal
decl_stmt|;
DECL|member|nw_signal
name|QString
name|nw_signal
decl_stmt|;
protected|protected:
DECL|function|connectNotify
name|void
name|connectNotify
parameter_list|(
specifier|const
name|char
modifier|*
name|signal
parameter_list|)
block|{
name|org_signal
operator|=
name|signal
expr_stmt|;
name|nw_signal
operator|=
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|signal
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
DECL|function|disconnectNotify
name|void
name|disconnectNotify
parameter_list|(
specifier|const
name|char
modifier|*
name|signal
parameter_list|)
block|{
name|org_signal
operator|=
name|signal
expr_stmt|;
name|nw_signal
operator|=
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|signal
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|connectDisconnectNotify_data
name|void
name|tst_QObject
operator|::
name|connectDisconnectNotify_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"a_signal"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"a_slot"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"combo1"
argument_list|)
operator|<<
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
operator|<<
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"combo2"
argument_list|)
operator|<<
name|SIGNAL
argument_list|(
name|signal2
argument_list|(
name|void
argument_list|)
argument_list|)
operator|<<
name|SLOT
argument_list|(
name|slot2
argument_list|(  )
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"combo3"
argument_list|)
operator|<<
name|SIGNAL
argument_list|(
name|signal3
argument_list|(  )
argument_list|)
operator|<<
name|SLOT
argument_list|(
name|slot3
argument_list|(
name|void
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"combo4"
argument_list|)
operator|<<
name|SIGNAL
argument_list|(
name|signal4
argument_list|(
name|void
argument_list|)
argument_list|)
operator|<<
name|SLOT
argument_list|(
name|slot4
argument_list|(
name|void
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectDisconnectNotify
name|void
name|tst_QObject
operator|::
name|connectDisconnectNotify
parameter_list|()
block|{
name|NotifyObject
modifier|*
name|s
init|=
operator|new
name|NotifyObject
decl_stmt|;
name|NotifyObject
modifier|*
name|r
init|=
operator|new
name|NotifyObject
decl_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|a_signal
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|a_slot
argument_list|)
expr_stmt|;
comment|// Test connectNotify
name|connect
argument_list|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
argument_list|,
name|a_signal
operator|.
name|toLatin1
argument_list|()
argument_list|,
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
argument_list|,
name|a_slot
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
argument_list|,
name|s
operator|->
name|nw_signal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
operator|.
name|toLatin1
argument_list|()
argument_list|,
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|a_signal
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test disconnectNotify
name|QObject
operator|::
name|disconnect
argument_list|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
argument_list|,
name|a_signal
operator|.
name|toLatin1
argument_list|()
argument_list|,
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
argument_list|,
name|a_slot
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
argument_list|,
name|s
operator|->
name|nw_signal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
operator|.
name|toLatin1
argument_list|()
argument_list|,
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|a_signal
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Reconnect
name|connect
argument_list|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
argument_list|,
name|a_signal
operator|.
name|toLatin1
argument_list|()
argument_list|,
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
argument_list|,
name|a_slot
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
comment|// Test disconnectNotify for a complete disconnect
operator|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
operator|)
operator|->
name|disconnect
argument_list|(
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
argument_list|)
expr_stmt|;
comment|// Obtaining meta methods
name|int
name|signalIndx
init|=
operator|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
operator|)
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|a_signal
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
operator|+
literal|1
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|methodIndx
init|=
operator|(
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
operator|)
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|a_slot
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
operator|+
literal|1
argument_list|)
operator|.
name|constData
argument_list|()
argument_list|)
decl_stmt|;
name|QMetaMethod
name|signal
init|=
operator|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
operator|)
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|signalIndx
argument_list|)
decl_stmt|;
name|QMetaMethod
name|method
init|=
operator|(
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
operator|)
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|methodIndx
argument_list|)
decl_stmt|;
comment|// Test connectNotify when connecting by QMetaMethod
name|connect
argument_list|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
argument_list|,
name|signal
argument_list|,
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
argument_list|,
name|method
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
argument_list|,
name|s
operator|->
name|nw_signal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
operator|.
name|toLatin1
argument_list|()
argument_list|,
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|a_signal
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test disconnectNotify when disconnecting by QMetaMethod
name|QObject
operator|::
name|disconnect
argument_list|(
operator|(
name|SenderObject
operator|*
operator|)
name|s
argument_list|,
name|signal
argument_list|,
operator|(
name|ReceiverObject
operator|*
operator|)
name|r
argument_list|,
name|method
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
argument_list|,
name|s
operator|->
name|nw_signal
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|->
name|org_signal
operator|.
name|toLatin1
argument_list|()
argument_list|,
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
name|a_signal
operator|.
name|toLatin1
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|s
expr_stmt|;
operator|delete
name|r
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SequenceObject
class|class
name|SequenceObject
super|:
specifier|public
name|ReceiverObject
block|{
name|Q_OBJECT
public|public:
DECL|member|next
name|QObject
modifier|*
name|next
decl_stmt|;
DECL|function|SequenceObject
name|SequenceObject
parameter_list|()
member_init_list|:
name|next
argument_list|(
literal|0
argument_list|)
block|{ }
public|public
name|slots
public|:
DECL|function|slot1_disconnectThis
name|void
name|slot1_disconnectThis
parameter_list|()
block|{
name|slot1
argument_list|()
expr_stmt|;
name|disconnect
argument_list|(
name|sender
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|slot1_disconnectThis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|slot2_reconnectThis
name|void
name|slot2_reconnectThis
parameter_list|()
block|{
name|slot2
argument_list|()
expr_stmt|;
specifier|const
name|QObject
modifier|*
name|s
init|=
name|sender
argument_list|()
decl_stmt|;
name|disconnect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|slot2_reconnectThis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|slot2_reconnectThis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|slot1_disconnectNext
name|void
name|slot1_disconnectNext
parameter_list|()
block|{
name|slot1
argument_list|()
expr_stmt|;
name|disconnect
argument_list|(
name|sender
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|next
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|slot2_reconnectNext
name|void
name|slot2_reconnectNext
parameter_list|()
block|{
name|slot2
argument_list|()
expr_stmt|;
comment|// modify the connection list in 'this'
name|disconnect
argument_list|(
name|sender
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|next
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|next
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// modify the sender list in 'this'
name|connect
argument_list|(
name|next
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|aboutToQuit
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|next
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|disconnect
argument_list|(
name|QCoreApplication
operator|::
name|instance
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|aboutToQuit
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|slot1_deleteNext
name|void
name|slot1_deleteNext
parameter_list|()
block|{
name|slot1
argument_list|()
expr_stmt|;
operator|delete
name|next
expr_stmt|;
block|}
DECL|function|slot2_deleteSender
name|void
name|slot2_deleteSender
parameter_list|()
block|{
name|slot2
argument_list|()
expr_stmt|;
operator|delete
name|sender
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|emitInDefinedOrder
name|void
name|tst_QObject
operator|::
name|emitInDefinedOrder
parameter_list|()
block|{
name|SenderObject
name|sender
decl_stmt|;
name|ReceiverObject
name|receiver1
decl_stmt|,
name|receiver2
decl_stmt|,
name|receiver3
decl_stmt|,
name|receiver4
decl_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver2
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver3
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver4
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver1
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver2
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver3
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver4
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|sequence
decl_stmt|;
name|ReceiverObject
operator|::
name|sequence
operator|=
name|sequence
operator|=
literal|0
expr_stmt|;
name|sender
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver1
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver2
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver3
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver4
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver1
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver2
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver3
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver4
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver2
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver2
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ReceiverObject
operator|::
name|sequence
operator|=
name|sequence
operator|=
literal|0
expr_stmt|;
name|sender
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver1
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver3
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver4
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver1
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver2
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver3
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver4
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver2
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ReceiverObject
operator|::
name|sequence
operator|=
name|sequence
operator|=
literal|0
expr_stmt|;
name|sender
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver3
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver4
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver1
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver2
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver3
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver4
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver2
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver1
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
comment|// ensure emission order even if the connections change during emission
name|SenderObject
modifier|*
name|sender2
init|=
operator|new
name|SenderObject
decl_stmt|;
name|SequenceObject
name|seq1
decl_stmt|,
name|seq2
decl_stmt|,
modifier|*
name|seq3
init|=
operator|new
name|SequenceObject
decl_stmt|,
name|seq4
decl_stmt|;
name|seq1
operator|.
name|next
operator|=
operator|&
name|seq2
expr_stmt|;
name|seq2
operator|.
name|next
operator|=
name|seq3
expr_stmt|;
name|seq3
operator|->
name|next
operator|=
operator|&
name|seq4
expr_stmt|;
comment|// try 1
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot1_disconnectThis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot1_disconnectNext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot2_reconnectThis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot2_reconnectNext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|SequenceObject
operator|::
name|sequence
operator|=
name|sequence
operator|=
literal|0
expr_stmt|;
name|sender2
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq3
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq3
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
name|seq3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|seq1
operator|.
name|reset
argument_list|()
expr_stmt|;
name|seq2
operator|.
name|reset
argument_list|()
expr_stmt|;
name|seq3
operator|->
name|reset
argument_list|()
expr_stmt|;
name|seq4
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// try 2
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot2_reconnectThis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot2_reconnectNext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot1_disconnectThis
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot1_disconnectNext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|SequenceObject
operator|::
name|sequence
operator|=
name|sequence
operator|=
literal|0
expr_stmt|;
name|sender2
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq3
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq3
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
name|seq3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|seq1
operator|.
name|reset
argument_list|()
expr_stmt|;
name|seq2
operator|.
name|reset
argument_list|()
expr_stmt|;
name|seq3
operator|->
name|reset
argument_list|()
expr_stmt|;
name|seq4
operator|.
name|reset
argument_list|()
expr_stmt|;
comment|// try 3
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot1_disconnectNext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot2_reconnectNext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|SequenceObject
operator|::
name|sequence
operator|=
name|sequence
operator|=
literal|0
expr_stmt|;
name|sender2
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq3
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq3
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
comment|// ensure emission order even if objects are destroyed during emission
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
name|seq3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|disconnect
argument_list|(
name|sender2
argument_list|,
literal|0
argument_list|,
operator|&
name|seq4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|seq1
operator|.
name|reset
argument_list|()
expr_stmt|;
name|seq2
operator|.
name|reset
argument_list|()
expr_stmt|;
name|seq3
operator|->
name|reset
argument_list|()
expr_stmt|;
name|seq4
operator|.
name|reset
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot1_deleteNext
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq2
argument_list|,
name|SLOT
argument_list|(
name|slot2_deleteSender
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|seq3
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq4
argument_list|,
name|SLOT
argument_list|(
name|slot2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|SenderObject
argument_list|>
name|psender
init|=
name|sender2
decl_stmt|;
name|QPointer
argument_list|<
name|SequenceObject
argument_list|>
name|pseq3
init|=
name|seq3
decl_stmt|;
name|SequenceObject
operator|::
name|sequence
operator|=
name|sequence
operator|=
literal|0
expr_stmt|;
name|sender2
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|psender
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
name|pseq3
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TRUE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|called
argument_list|(
literal|2
argument_list|)
argument_list|,
name|FALSE
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq4
operator|.
name|sequence_slot1
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq1
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|seq2
operator|.
name|sequence_slot2
argument_list|,
operator|++
name|sequence
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|SenderObject
argument_list|>
name|psender3
init|=
operator|new
name|SenderObject
decl_stmt|;
name|connect
argument_list|(
name|psender3
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|psender3
argument_list|,
name|SIGNAL
argument_list|(
name|signal2
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|psender3
argument_list|,
name|SIGNAL
argument_list|(
name|signal2
argument_list|()
argument_list|)
argument_list|,
operator|&
name|seq1
argument_list|,
name|SLOT
argument_list|(
name|slot2_deleteSender
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|psender3
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|psender3
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|instanceCount
specifier|static
name|int
name|instanceCount
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_struct
DECL|struct|CustomType
struct|struct
name|CustomType
block|{
DECL|function|CustomType
name|CustomType
parameter_list|(
name|int
name|l1
init|=
literal|0
parameter_list|,
name|int
name|l2
init|=
literal|0
parameter_list|,
name|int
name|l3
init|=
literal|0
parameter_list|)
member_init_list|:
name|i1
argument_list|(
name|l1
argument_list|)
member_init_list|,
name|i2
argument_list|(
name|l2
argument_list|)
member_init_list|,
name|i3
argument_list|(
name|l3
argument_list|)
block|{
operator|++
name|instanceCount
expr_stmt|;
block|}
DECL|function|CustomType
name|CustomType
parameter_list|(
specifier|const
name|CustomType
modifier|&
name|other
parameter_list|)
member_init_list|:
name|i1
argument_list|(
name|other
operator|.
name|i1
argument_list|)
member_init_list|,
name|i2
argument_list|(
name|other
operator|.
name|i2
argument_list|)
member_init_list|,
name|i3
argument_list|(
name|other
operator|.
name|i3
argument_list|)
block|{
operator|++
name|instanceCount
expr_stmt|;
block|}
DECL|function|~CustomType
name|~
name|CustomType
parameter_list|()
block|{
operator|--
name|instanceCount
expr_stmt|;
block|}
DECL|member|i1
DECL|member|i2
DECL|member|i3
name|int
name|i1
decl_stmt|,
name|i2
decl_stmt|,
name|i3
decl_stmt|;
DECL|function|value
name|int
name|value
parameter_list|()
block|{
return|return
name|i1
operator|+
name|i2
operator|+
name|i3
return|;
block|}
block|}
struct|;
end_struct
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|CustomType*
argument_list|)
end_macro
begin_class
DECL|class|QCustomTypeChecker
class|class
name|QCustomTypeChecker
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|QCustomTypeChecker
name|QCustomTypeChecker
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|doEmit
name|void
name|doEmit
parameter_list|(
name|CustomType
name|ct
parameter_list|)
block|{
emit|emit
name|signal1
argument_list|(
name|ct
argument_list|)
emit|;
block|}
public|public
name|slots
public|:
name|void
name|slot1
parameter_list|(
name|CustomType
name|ct
parameter_list|)
function_decl|;
signals|signals:
name|void
name|signal1
parameter_list|(
name|CustomType
name|ct
parameter_list|)
function_decl|;
public|public:
DECL|member|received
name|CustomType
name|received
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|slot1
name|void
name|QCustomTypeChecker
operator|::
name|slot1
parameter_list|(
name|CustomType
name|ct
parameter_list|)
block|{
name|received
operator|=
name|ct
expr_stmt|;
block|}
end_function
begin_function
DECL|function|customTypes
name|void
name|tst_QObject
operator|::
name|customTypes
parameter_list|()
block|{
name|CustomType
name|t0
decl_stmt|;
name|CustomType
name|t1
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|CustomType
name|t2
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
decl_stmt|;
block|{
name|QCustomTypeChecker
name|checker
decl_stmt|;
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|checker
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|(
name|CustomType
argument_list|)
argument_list|)
argument_list|,
operator|&
name|checker
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|(
name|CustomType
argument_list|)
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|checker
operator|.
name|received
operator|.
name|value
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checker
operator|.
name|doEmit
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|checker
operator|.
name|received
operator|.
name|value
argument_list|()
argument_list|,
name|t1
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|checker
operator|.
name|received
operator|=
name|t0
expr_stmt|;
name|int
name|idx
init|=
name|qRegisterMetaType
argument_list|<
name|CustomType
argument_list|>
argument_list|(
literal|"CustomType"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|type
argument_list|(
literal|"CustomType"
argument_list|)
argument_list|,
name|idx
argument_list|)
expr_stmt|;
name|checker
operator|.
name|disconnect
argument_list|()
expr_stmt|;
name|connect
argument_list|(
operator|&
name|checker
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|(
name|CustomType
argument_list|)
argument_list|)
argument_list|,
operator|&
name|checker
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|(
name|CustomType
argument_list|)
argument_list|)
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|checker
operator|.
name|doEmit
argument_list|(
name|t2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|checker
operator|.
name|received
operator|.
name|value
argument_list|()
argument_list|,
name|t0
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|checker
operator|.
name|received
operator|.
name|value
argument_list|()
argument_list|,
name|t2
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaType
operator|::
name|isRegistered
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qRegisterMetaType
argument_list|<
name|CustomType
argument_list|>
argument_list|(
literal|"CustomType"
argument_list|)
argument_list|,
name|idx
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|type
argument_list|(
literal|"CustomType"
argument_list|)
argument_list|,
name|idx
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaType
operator|::
name|isRegistered
argument_list|(
name|idx
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|operator <<
name|QDataStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|,
specifier|const
name|CustomType
modifier|&
name|ct
parameter_list|)
block|{
name|stream
operator|<<
name|ct
operator|.
name|i1
operator|<<
name|ct
operator|.
name|i2
operator|<<
name|ct
operator|.
name|i3
expr_stmt|;
return|return
name|stream
return|;
block|}
end_function
begin_function
DECL|function|operator >>
name|QDataStream
modifier|&
name|operator
name|>>
parameter_list|(
name|QDataStream
modifier|&
name|stream
parameter_list|,
name|CustomType
modifier|&
name|ct
parameter_list|)
block|{
name|stream
operator|>>
name|ct
operator|.
name|i1
expr_stmt|;
name|stream
operator|>>
name|ct
operator|.
name|i2
expr_stmt|;
name|stream
operator|>>
name|ct
operator|.
name|i3
expr_stmt|;
return|return
name|stream
return|;
block|}
end_function
begin_function
DECL|function|streamCustomTypes
name|void
name|tst_QObject
operator|::
name|streamCustomTypes
parameter_list|()
block|{
name|QByteArray
name|ba
decl_stmt|;
name|int
name|idx
init|=
name|qRegisterMetaType
argument_list|<
name|CustomType
argument_list|>
argument_list|(
literal|"CustomType"
argument_list|)
decl_stmt|;
name|qRegisterMetaTypeStreamOperators
argument_list|<
name|CustomType
argument_list|>
argument_list|(
literal|"CustomType"
argument_list|)
expr_stmt|;
block|{
name|CustomType
name|t1
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|ba
argument_list|,
operator|(
name|QIODevice
operator|::
name|OpenMode
operator|)
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
decl_stmt|;
name|QMetaType
operator|::
name|save
argument_list|(
name|stream
argument_list|,
name|idx
argument_list|,
operator|&
name|t1
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|{
name|CustomType
name|t2
decl_stmt|;
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QDataStream
name|stream
argument_list|(
operator|&
name|ba
argument_list|,
operator|(
name|QIODevice
operator|::
name|OpenMode
operator|)
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
decl_stmt|;
name|QMetaType
operator|::
name|load
argument_list|(
name|stream
argument_list|,
name|idx
argument_list|,
operator|&
name|t2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t2
operator|.
name|i1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t2
operator|.
name|i2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t2
operator|.
name|i3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|instanceCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_typedef
DECL|typedef|CustomString
typedef|typedef
name|QString
name|CustomString
typedef|;
end_typedef
begin_class
DECL|class|PropertyObject
class|class
name|PropertyObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_ENUMS
argument_list|(
name|Alpha
name|Priority
argument_list|)
name|Q_PROPERTY
argument_list|(
name|Alpha
name|alpha
name|READ
name|alpha
name|WRITE
name|setAlpha
argument_list|)
name|Q_PROPERTY
argument_list|(
name|Priority
name|priority
name|READ
name|priority
name|WRITE
name|setPriority
argument_list|)
name|Q_PROPERTY
argument_list|(
name|int
name|number
name|READ
name|number
name|WRITE
name|setNumber
argument_list|)
name|Q_PROPERTY
argument_list|(
name|QString
name|string
name|READ
name|string
name|WRITE
name|setString
argument_list|)
name|Q_PROPERTY
argument_list|(
name|QVariant
name|variant
name|READ
name|variant
name|WRITE
name|setVariant
argument_list|)
name|Q_PROPERTY
argument_list|(
name|CustomType
operator|*
name|custom
name|READ
name|custom
name|WRITE
name|setCustom
argument_list|)
name|Q_PROPERTY
argument_list|(
name|float
name|myFloat
name|READ
name|myFloat
name|WRITE
name|setMyFloat
argument_list|)
name|Q_PROPERTY
argument_list|(
name|qreal
name|myQReal
name|READ
name|myQReal
name|WRITE
name|setMyQReal
argument_list|)
name|Q_PROPERTY
argument_list|(
name|CustomString
name|customString
name|READ
name|customString
name|WRITE
name|setCustomString
argument_list|)
decl|public
range|:     enum
DECL|enum|Alpha
name|Alpha
block|{
DECL|enumerator|Alpha0
name|Alpha0
block|,
DECL|enumerator|Alpha1
name|Alpha1
block|,
DECL|enumerator|Alpha2
name|Alpha2
block|}
decl_stmt|;
DECL|enum|Priority
DECL|enumerator|High
DECL|enumerator|Low
DECL|enumerator|VeryHigh
DECL|enumerator|VeryLow
enum|enum
name|Priority
block|{
name|High
block|,
name|Low
block|,
name|VeryHigh
block|,
name|VeryLow
block|}
enum|;
DECL|function|PropertyObject
name|PropertyObject
parameter_list|()
member_init_list|:
name|m_alpha
argument_list|(
name|Alpha0
argument_list|)
member_init_list|,
name|m_priority
argument_list|(
name|High
argument_list|)
member_init_list|,
name|m_number
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_custom
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_float
argument_list|(
literal|42
argument_list|)
block|{}
DECL|function|alpha
name|Alpha
name|alpha
parameter_list|()
specifier|const
block|{
return|return
name|m_alpha
return|;
block|}
DECL|function|setAlpha
name|void
name|setAlpha
parameter_list|(
name|Alpha
name|alpha
parameter_list|)
block|{
name|m_alpha
operator|=
name|alpha
expr_stmt|;
block|}
DECL|function|priority
name|Priority
name|priority
parameter_list|()
specifier|const
block|{
return|return
name|m_priority
return|;
block|}
DECL|function|setPriority
name|void
name|setPriority
parameter_list|(
name|Priority
name|priority
parameter_list|)
block|{
name|m_priority
operator|=
name|priority
expr_stmt|;
block|}
DECL|function|number
name|int
name|number
parameter_list|()
specifier|const
block|{
return|return
name|m_number
return|;
block|}
DECL|function|setNumber
name|void
name|setNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
name|m_number
operator|=
name|number
expr_stmt|;
block|}
DECL|function|string
name|QString
name|string
parameter_list|()
specifier|const
block|{
return|return
name|m_string
return|;
block|}
DECL|function|setString
name|void
name|setString
parameter_list|(
specifier|const
name|QString
modifier|&
name|string
parameter_list|)
block|{
name|m_string
operator|=
name|string
expr_stmt|;
block|}
DECL|function|variant
name|QVariant
name|variant
parameter_list|()
specifier|const
block|{
return|return
name|m_variant
return|;
block|}
DECL|function|setVariant
name|void
name|setVariant
parameter_list|(
specifier|const
name|QVariant
modifier|&
name|variant
parameter_list|)
block|{
name|m_variant
operator|=
name|variant
expr_stmt|;
block|}
DECL|function|custom
name|CustomType
modifier|*
name|custom
parameter_list|()
specifier|const
block|{
return|return
name|m_custom
return|;
block|}
DECL|function|setCustom
name|void
name|setCustom
parameter_list|(
name|CustomType
modifier|*
name|custom
parameter_list|)
block|{
name|m_custom
operator|=
name|custom
expr_stmt|;
block|}
DECL|function|setMyFloat
name|void
name|setMyFloat
parameter_list|(
name|float
name|value
parameter_list|)
block|{
name|m_float
operator|=
name|value
expr_stmt|;
block|}
DECL|function|myFloat
specifier|inline
name|float
name|myFloat
parameter_list|()
specifier|const
block|{
return|return
name|m_float
return|;
block|}
DECL|function|setMyQReal
name|void
name|setMyQReal
parameter_list|(
name|qreal
name|value
parameter_list|)
block|{
name|m_qreal
operator|=
name|value
expr_stmt|;
block|}
DECL|function|myQReal
name|qreal
name|myQReal
parameter_list|()
specifier|const
block|{
return|return
name|m_qreal
return|;
block|}
DECL|function|customString
name|CustomString
name|customString
parameter_list|()
specifier|const
block|{
return|return
name|m_customString
return|;
block|}
DECL|function|setCustomString
name|void
name|setCustomString
parameter_list|(
specifier|const
name|QString
modifier|&
name|string
parameter_list|)
block|{
name|m_customString
operator|=
name|string
expr_stmt|;
block|}
private|private:
DECL|member|m_alpha
name|Alpha
name|m_alpha
decl_stmt|;
DECL|member|m_priority
name|Priority
name|m_priority
decl_stmt|;
DECL|member|m_number
name|int
name|m_number
decl_stmt|;
DECL|member|m_string
name|QString
name|m_string
decl_stmt|;
DECL|member|m_variant
name|QVariant
name|m_variant
decl_stmt|;
DECL|member|m_custom
name|CustomType
modifier|*
name|m_custom
decl_stmt|;
DECL|member|m_float
name|float
name|m_float
decl_stmt|;
DECL|member|m_qreal
name|qreal
name|m_qreal
decl_stmt|;
DECL|member|m_customString
name|CustomString
name|m_customString
decl_stmt|;
block|}
class|;
end_class
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|PropertyObject::Priority
argument_list|)
end_macro
begin_function
DECL|function|threadSignalEmissionCrash
name|void
name|tst_QObject
operator|::
name|threadSignalEmissionCrash
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
name|int
name|loopCount
init|=
literal|100
decl_stmt|;
else|#
directive|else
name|int
name|loopCount
init|=
literal|1000
decl_stmt|;
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|loopCount
condition|;
operator|++
name|i
control|)
block|{
name|QTcpSocket
name|socket
decl_stmt|;
name|socket
operator|.
name|connectToHost
argument_list|(
literal|"localhost"
argument_list|,
literal|80
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|TestThread
class|class
name|TestThread
super|:
specifier|public
name|QThread
block|{
name|Q_OBJECT
public|public:
DECL|function|run
specifier|inline
name|void
name|run
parameter_list|()
block|{
operator|*
name|object
operator|=
operator|new
name|QObject
expr_stmt|;
operator|*
name|child
operator|=
operator|new
name|QObject
argument_list|(
operator|*
name|object
argument_list|)
expr_stmt|;
name|mutex
operator|.
name|lock
argument_list|()
expr_stmt|;
name|cond
operator|.
name|wakeOne
argument_list|()
expr_stmt|;
name|cond
operator|.
name|wait
argument_list|(
operator|&
name|mutex
argument_list|)
expr_stmt|;
name|mutex
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
DECL|member|object
DECL|member|child
name|QObject
modifier|*
modifier|*
name|object
decl_stmt|,
modifier|*
modifier|*
name|child
decl_stmt|;
DECL|member|mutex
name|QMutex
name|mutex
decl_stmt|;
DECL|member|cond
name|QWaitCondition
name|cond
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|thread
name|void
name|tst_QObject
operator|::
name|thread
parameter_list|()
block|{
name|QThread
modifier|*
name|currentThread
init|=
name|QThread
operator|::
name|currentThread
argument_list|()
decl_stmt|;
comment|// the current thread is the same as the QApplication
comment|// thread... see tst_QApplication::thread()
block|{
name|QObject
name|object
decl_stmt|;
comment|// thread affinity for objects with no parent should be the
comment|// current thread
name|QVERIFY
argument_list|(
name|object
operator|.
name|thread
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
comment|// children inherit their parent's thread
name|QObject
name|child
argument_list|(
operator|&
name|object
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|.
name|thread
argument_list|()
argument_list|,
name|object
operator|.
name|thread
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QObject
modifier|*
name|object
init|=
literal|0
decl_stmt|;
name|QObject
modifier|*
name|child
init|=
literal|0
decl_stmt|;
block|{
name|TestThread
name|thr
decl_stmt|;
name|QVERIFY
argument_list|(
name|thr
operator|.
name|thread
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|thr
operator|.
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|thr
operator|.
name|object
operator|=
operator|&
name|object
expr_stmt|;
name|thr
operator|.
name|child
operator|=
operator|&
name|child
expr_stmt|;
name|thr
operator|.
name|mutex
operator|.
name|lock
argument_list|()
expr_stmt|;
name|thr
operator|.
name|start
argument_list|()
expr_stmt|;
name|thr
operator|.
name|cond
operator|.
name|wait
argument_list|(
operator|&
name|thr
operator|.
name|mutex
argument_list|)
expr_stmt|;
comment|// thread affinity for an object with no parent should be the
comment|// thread in which the object was created
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thr
argument_list|)
expr_stmt|;
comment|// children inherit their parent's thread
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|object
operator|->
name|thread
argument_list|()
argument_list|)
expr_stmt|;
name|thr
operator|.
name|cond
operator|.
name|wakeOne
argument_list|()
expr_stmt|;
name|thr
operator|.
name|mutex
operator|.
name|unlock
argument_list|()
expr_stmt|;
name|thr
operator|.
name|wait
argument_list|()
expr_stmt|;
comment|// even though the thread is no longer running, the affinity
comment|// should not change
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thr
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|object
operator|->
name|thread
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// the thread has been destroyed, thread affinity should
comment|// automatically reset to no thread
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|object
operator|->
name|thread
argument_list|()
argument_list|)
expr_stmt|;
operator|delete
name|object
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MoveToThreadObject
class|class
name|MoveToThreadObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|member|timerEventThread
name|QThread
modifier|*
name|timerEventThread
decl_stmt|;
DECL|member|customEventThread
name|QThread
modifier|*
name|customEventThread
decl_stmt|;
DECL|member|slotThread
name|QThread
modifier|*
name|slotThread
decl_stmt|;
DECL|function|MoveToThreadObject
name|MoveToThreadObject
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|timerEventThread
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|customEventThread
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|slotThread
argument_list|(
literal|0
argument_list|)
block|{ }
DECL|function|customEvent
name|void
name|customEvent
parameter_list|(
name|QEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|customEventThread
condition|)
name|qFatal
argument_list|(
literal|"%s: customEventThread should be null"
argument_list|,
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
name|customEventThread
operator|=
name|QThread
operator|::
name|currentThread
argument_list|()
expr_stmt|;
emit|emit
name|theSignal
argument_list|()
emit|;
block|}
DECL|function|timerEvent
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|timerEventThread
condition|)
name|qFatal
argument_list|(
literal|"%s: timerEventThread should be null"
argument_list|,
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
name|timerEventThread
operator|=
name|QThread
operator|::
name|currentThread
argument_list|()
expr_stmt|;
emit|emit
name|theSignal
argument_list|()
emit|;
block|}
public|public
name|slots
public|:
DECL|function|theSlot
name|void
name|theSlot
parameter_list|()
block|{
if|if
condition|(
name|slotThread
condition|)
name|qFatal
argument_list|(
literal|"%s: slotThread should be null"
argument_list|,
name|Q_FUNC_INFO
argument_list|)
expr_stmt|;
name|slotThread
operator|=
name|QThread
operator|::
name|currentThread
argument_list|()
expr_stmt|;
emit|emit
name|theSignal
argument_list|()
emit|;
block|}
signals|signals:
name|void
name|theSignal
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|MoveToThreadThread
class|class
name|MoveToThreadThread
super|:
specifier|public
name|QThread
block|{
public|public:
DECL|function|~MoveToThreadThread
name|~
name|MoveToThreadThread
parameter_list|()
block|{
if|if
condition|(
name|isRunning
argument_list|()
condition|)
block|{
name|terminate
argument_list|()
expr_stmt|;
name|wait
argument_list|()
expr_stmt|;
block|}
block|}
DECL|function|start
name|void
name|start
parameter_list|()
block|{
name|QEventLoop
name|eventLoop
decl_stmt|;
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|,
operator|&
name|eventLoop
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QThread
operator|::
name|start
argument_list|()
expr_stmt|;
comment|// wait for thread to start
operator|(
name|void
operator|)
name|eventLoop
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
DECL|function|run
name|void
name|run
parameter_list|()
block|{
operator|(
name|void
operator|)
name|exec
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|thread0
name|void
name|tst_QObject
operator|::
name|thread0
parameter_list|()
block|{
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
decl_stmt|;
name|object
operator|->
name|moveToThread
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QObject
modifier|*
name|child
init|=
operator|new
name|QObject
argument_list|(
name|object
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|parent
argument_list|()
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
if|#
directive|if
literal|0
comment|// We don't support moving children into a parent that has no thread
comment|// affinity (yet?).
block|QObject *child2 = new QObject;     child2->moveToThread(0);     child2->setParent(object);     QCOMPARE(child2->parent(), object);     QCOMPARE(child2->thread(), (QThread *)0);
endif|#
directive|endif
operator|delete
name|object
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveToThread
name|void
name|tst_QObject
operator|::
name|moveToThread
parameter_list|()
block|{
name|QThread
modifier|*
name|currentThread
init|=
name|QThread
operator|::
name|currentThread
argument_list|()
decl_stmt|;
block|{
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
decl_stmt|;
name|QObject
modifier|*
name|child
init|=
operator|new
name|QObject
argument_list|(
name|object
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|object
operator|->
name|moveToThread
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|object
operator|->
name|moveToThread
argument_list|(
name|currentThread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|object
operator|->
name|moveToThread
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
comment|// can delete an object with no thread anywhere
operator|delete
name|object
expr_stmt|;
block|}
block|{
name|MoveToThreadThread
name|thread
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QObject
modifier|*
name|object
init|=
operator|new
name|QObject
decl_stmt|;
name|QObject
modifier|*
name|child
init|=
operator|new
name|QObject
argument_list|(
name|object
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|opointer
init|=
name|object
decl_stmt|;
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|cpointer
init|=
name|object
decl_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|object
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|object
argument_list|,
literal|"deleteLater"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|wait
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|opointer
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|cpointer
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
comment|// make sure posted events are moved with the object
name|MoveToThreadThread
name|thread
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|MoveToThreadObject
modifier|*
name|object
init|=
operator|new
name|MoveToThreadObject
decl_stmt|;
name|MoveToThreadObject
modifier|*
name|child
init|=
operator|new
name|MoveToThreadObject
argument_list|(
name|object
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
name|child
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
name|object
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|object
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|wait
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|customEventThread
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|customEventThread
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|object
argument_list|,
literal|"deleteLater"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|wait
argument_list|()
expr_stmt|;
block|}
block|{
comment|// make sure timers are moved with the object
name|MoveToThreadThread
name|thread
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|MoveToThreadObject
modifier|*
name|object
init|=
operator|new
name|MoveToThreadObject
decl_stmt|;
name|MoveToThreadObject
modifier|*
name|child
init|=
operator|new
name|MoveToThreadObject
argument_list|(
name|object
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
comment|// Child timer will be registered after parent timer in the new
comment|// thread, and 10ms is less than symbian timer resolution, so
comment|// child->timerEventThread compare after thread.wait() will
comment|// usually fail unless timers are farther apart.
name|child
operator|->
name|startTimer
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|object
operator|->
name|startTimer
argument_list|(
literal|150
argument_list|)
expr_stmt|;
else|#
directive|else
name|child
operator|->
name|startTimer
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|object
operator|->
name|startTimer
argument_list|(
literal|100
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|object
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|wait
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|->
name|timerEventThread
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|timerEventThread
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|object
argument_list|,
literal|"deleteLater"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|wait
argument_list|()
expr_stmt|;
block|}
block|{
comment|// make sure socket notifiers are moved with the object
name|MoveToThreadThread
name|thread
decl_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QTcpServer
name|server
decl_stmt|;
name|QVERIFY
argument_list|(
name|server
operator|.
name|listen
argument_list|(
name|QHostAddress
operator|::
name|LocalHost
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTcpSocket
modifier|*
name|socket
init|=
operator|new
name|QTcpSocket
decl_stmt|;
name|MoveToThreadObject
modifier|*
name|child
init|=
operator|new
name|MoveToThreadObject
argument_list|(
name|socket
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|socket
argument_list|,
name|SIGNAL
argument_list|(
name|disconnected
argument_list|()
argument_list|)
argument_list|,
name|child
argument_list|,
name|SLOT
argument_list|(
name|theSlot
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|child
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|socket
operator|->
name|connectToHost
argument_list|(
name|server
operator|.
name|serverAddress
argument_list|()
argument_list|,
name|server
operator|.
name|serverPort
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|server
operator|.
name|waitForNewConnection
argument_list|(
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|QTcpSocket
modifier|*
name|serverSocket
init|=
name|server
operator|.
name|nextPendingConnection
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|serverSocket
argument_list|)
expr_stmt|;
name|socket
operator|->
name|waitForConnected
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|socket
operator|->
name|thread
argument_list|()
argument_list|,
name|currentThread
argument_list|)
expr_stmt|;
name|socket
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|socket
operator|->
name|thread
argument_list|()
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|serverSocket
operator|->
name|close
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|slotThread
argument_list|,
operator|(
name|QThread
operator|*
operator|)
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|socket
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|socket
argument_list|,
literal|"deleteLater"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|wait
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|property
name|void
name|tst_QObject
operator|::
name|property
parameter_list|()
block|{
name|PropertyObject
name|object
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|mo
init|=
name|object
operator|.
name|metaObject
argument_list|()
decl_stmt|;
name|QMetaProperty
name|property
decl_stmt|;
name|QVERIFY
argument_list|(
name|mo
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"alpha"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|property
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"alpha"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|property
operator|.
name|isEnumType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"Alpha"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
expr_stmt|;
name|QVariant
name|var
init|=
name|object
operator|.
name|property
argument_list|(
literal|"alpha"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|var
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|Alpha0
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|setAlpha
argument_list|(
name|PropertyObject
operator|::
name|Alpha1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"alpha"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|Alpha1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"alpha"
argument_list|,
name|PropertyObject
operator|::
name|Alpha2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"alpha"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|Alpha2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"alpha"
argument_list|,
literal|"Alpha1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"alpha"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|Alpha1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|object
operator|.
name|setProperty
argument_list|(
literal|"alpha"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"number"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|object
operator|.
name|setNumber
argument_list|(
literal|24
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"number"
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"number"
argument_list|,
literal|"42"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"string"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"string"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|object
operator|.
name|setString
argument_list|(
literal|"String1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"string"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"String1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"string"
argument_list|,
literal|"String2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"string"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"String2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|object
operator|.
name|setProperty
argument_list|(
literal|"string"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|int
name|idx
init|=
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"variant"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|idx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mo
operator|->
name|property
argument_list|(
name|idx
argument_list|)
operator|.
name|type
argument_list|()
operator|==
name|QVariant
operator|::
name|LastType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"variant"
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QVariant
name|variant1
argument_list|(
literal|42
argument_list|)
decl_stmt|;
name|QVariant
name|variant2
argument_list|(
literal|"string"
argument_list|)
decl_stmt|;
name|object
operator|.
name|setVariant
argument_list|(
name|variant1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"variant"
argument_list|)
argument_list|,
name|variant1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"variant"
argument_list|,
name|variant2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|variant
argument_list|()
argument_list|,
name|QVariant
argument_list|(
name|variant2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"variant"
argument_list|)
argument_list|,
name|variant2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"variant"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"variant"
argument_list|)
argument_list|,
name|QVariant
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"custom"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|property
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"custom"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|property
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|property
operator|.
name|isWritable
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|property
operator|.
name|isEnumType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"CustomType*"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|UserType
argument_list|)
expr_stmt|;
name|CustomType
modifier|*
name|customPointer
init|=
literal|0
decl_stmt|;
name|QVariant
name|customVariant
init|=
name|object
operator|.
name|property
argument_list|(
literal|"custom"
argument_list|)
decl_stmt|;
name|customPointer
operator|=
name|qVariantValue
argument_list|<
name|CustomType
operator|*
argument_list|>
argument_list|(
name|customVariant
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customPointer
argument_list|,
name|object
operator|.
name|custom
argument_list|()
argument_list|)
expr_stmt|;
name|CustomType
name|custom
decl_stmt|;
name|customPointer
operator|=
operator|&
name|custom
expr_stmt|;
name|qVariantSetValue
argument_list|(
name|customVariant
argument_list|,
name|customPointer
argument_list|)
expr_stmt|;
name|property
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"custom"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|property
operator|.
name|isWritable
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"CustomType*"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|UserType
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"custom"
argument_list|,
name|customVariant
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|custom
argument_list|()
argument_list|,
name|customPointer
argument_list|)
expr_stmt|;
name|customVariant
operator|=
name|object
operator|.
name|property
argument_list|(
literal|"custom"
argument_list|)
expr_stmt|;
name|customPointer
operator|=
name|qVariantValue
argument_list|<
name|CustomType
operator|*
argument_list|>
argument_list|(
name|customVariant
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|custom
argument_list|()
argument_list|,
name|customPointer
argument_list|)
expr_stmt|;
comment|// this enum property has a meta type, but it's not yet registered, so we know this fails
name|QVERIFY
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"priority"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|property
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|property
operator|.
name|isEnumType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"Priority"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|Int
argument_list|)
expr_stmt|;
name|var
operator|=
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|var
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|var
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|High
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|setPriority
argument_list|(
name|PropertyObject
operator|::
name|Low
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|Low
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"priority"
argument_list|,
name|PropertyObject
operator|::
name|VeryHigh
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|VeryHigh
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"priority"
argument_list|,
literal|"High"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|int
argument_list|(
name|PropertyObject
operator|::
name|High
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|object
operator|.
name|setProperty
argument_list|(
literal|"priority"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// now it's registered, so it works as expected
name|int
name|priorityMetaTypeId
init|=
name|qRegisterMetaType
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
literal|"PropertyObject::Priority"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"priority"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|property
operator|=
name|mo
operator|->
name|property
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|property
operator|.
name|isEnumType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"Priority"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|type
argument_list|()
argument_list|,
name|QVariant
operator|::
name|UserType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|property
operator|.
name|userType
argument_list|()
argument_list|,
name|priorityMetaTypeId
argument_list|)
expr_stmt|;
name|var
operator|=
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|var
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qVariantCanConvert
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|var
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qVariantValue
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|var
argument_list|)
argument_list|,
name|PropertyObject
operator|::
name|High
argument_list|)
expr_stmt|;
name|object
operator|.
name|setPriority
argument_list|(
name|PropertyObject
operator|::
name|Low
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qVariantValue
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
argument_list|,
name|PropertyObject
operator|::
name|Low
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"priority"
argument_list|,
name|PropertyObject
operator|::
name|VeryHigh
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qVariantValue
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
argument_list|,
name|PropertyObject
operator|::
name|VeryHigh
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"priority"
argument_list|,
literal|"High"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qVariantValue
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
argument_list|,
name|PropertyObject
operator|::
name|High
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|object
operator|.
name|setProperty
argument_list|(
literal|"priority"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|var
operator|=
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qVariantValue
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|var
argument_list|)
argument_list|,
name|PropertyObject
operator|::
name|High
argument_list|)
expr_stmt|;
name|object
operator|.
name|setPriority
argument_list|(
name|PropertyObject
operator|::
name|Low
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qVariantValue
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
argument_list|,
name|PropertyObject
operator|::
name|Low
argument_list|)
expr_stmt|;
name|object
operator|.
name|setProperty
argument_list|(
literal|"priority"
argument_list|,
name|var
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qVariantValue
argument_list|<
name|PropertyObject
operator|::
name|Priority
argument_list|>
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"priority"
argument_list|)
argument_list|)
argument_list|,
name|PropertyObject
operator|::
name|High
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|CustomString
argument_list|>
argument_list|(
literal|"CustomString"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|mo
operator|->
name|indexOfProperty
argument_list|(
literal|"customString"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"customString"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|object
operator|.
name|setCustomString
argument_list|(
literal|"String1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"customString"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"String1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|setProperty
argument_list|(
literal|"customString"
argument_list|,
literal|"String2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|property
argument_list|(
literal|"customString"
argument_list|)
argument_list|,
name|QVariant
argument_list|(
literal|"String2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|object
operator|.
name|setProperty
argument_list|(
literal|"customString"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|metamethod
name|void
name|tst_QObject
operator|::
name|metamethod
parameter_list|()
block|{
name|SenderObject
name|obj
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|mobj
init|=
name|obj
operator|.
name|metaObject
argument_list|()
decl_stmt|;
name|QMetaMethod
name|m
decl_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"invoke1()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"invoke1()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Method
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Public
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"sinvoke1()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"sinvoke1()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Method
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Public
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"invoke2()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"invoke2()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Method
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Protected
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"sinvoke2()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"sinvoke2()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Method
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Protected
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"invoke3()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"invoke3()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Method
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Private
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"sinvoke3()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"sinvoke3()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Method
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Private
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"signal5()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"signal5()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Signal
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Protected
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"aPublicSlot()"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QByteArray
argument_list|(
name|m
operator|.
name|signature
argument_list|()
argument_list|)
operator|==
literal|"aPublicSlot()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|methodType
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Slot
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|access
argument_list|()
operator|==
name|QMetaMethod
operator|::
name|Public
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Scriptable
operator|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
operator|(
name|m
operator|.
name|attributes
argument_list|()
operator|&
name|QMetaMethod
operator|::
name|Compatibility
operator|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"invoke1()"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterNames
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterTypes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"invoke2(int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterNames
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterTypes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterTypes
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"int"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m
operator|.
name|parameterNames
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|m
operator|=
name|mobj
operator|->
name|method
argument_list|(
name|mobj
operator|->
name|indexOfMethod
argument_list|(
literal|"invoke3(int,int)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterNames
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterTypes
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterTypes
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"int"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterNames
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"hinz"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterTypes
argument_list|()
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"int"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|m
operator|.
name|parameterNames
argument_list|()
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"kunz"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_namespace
DECL|namespace|QObjectTest
namespace|namespace
name|QObjectTest
block|{
DECL|class|TestObject
class|class
name|TestObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|TestObject
name|TestObject
parameter_list|()
member_init_list|:
name|QObject
argument_list|()
member_init_list|,
name|i
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|doEmit
name|void
name|doEmit
parameter_list|()
block|{
emit|emit
name|aSignal
argument_list|()
emit|;
block|}
DECL|member|i
name|int
name|i
decl_stmt|;
public|public
name|slots
public|:
DECL|function|aSlot
name|void
name|aSlot
parameter_list|()
block|{
operator|++
name|i
expr_stmt|;
block|}
signals|signals:
name|void
name|aSignal
parameter_list|()
function_decl|;
block|}
class|;
block|}
end_namespace
begin_function
DECL|function|namespaces
name|void
name|tst_QObject
operator|::
name|namespaces
parameter_list|()
block|{
name|QObjectTest
operator|::
name|TestObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|obj
argument_list|,
name|SIGNAL
argument_list|(
name|aSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|obj
argument_list|,
name|SLOT
argument_list|(
name|aSlot
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|doEmit
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|i
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|SuperObject
class|class
name|SuperObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|member|theSender
name|QObject
modifier|*
name|theSender
decl_stmt|;
DECL|member|theSignalId
name|int
name|theSignalId
decl_stmt|;
DECL|function|SuperObject
name|SuperObject
parameter_list|()
block|{
name|theSender
operator|=
literal|0
expr_stmt|;
name|theSignalId
operator|=
literal|0
expr_stmt|;
block|}
friend|friend
class_decl|class
name|tst_QObject
class_decl|;
using|using
name|QObject
operator|::
name|sender
using|;
public|public
name|slots
public|:
DECL|function|rememberSender
name|void
name|rememberSender
parameter_list|()
block|{
name|theSender
operator|=
name|sender
argument_list|()
expr_stmt|;
name|theSignalId
operator|=
name|senderSignalIndex
argument_list|()
expr_stmt|;
block|}
DECL|function|deleteAndRememberSender
name|void
name|deleteAndRememberSender
parameter_list|()
block|{
operator|delete
name|theSender
expr_stmt|;
name|rememberSender
argument_list|()
expr_stmt|;
block|}
signals|signals:
name|void
name|anotherSignal
parameter_list|()
function_decl|;
name|void
name|theSignal
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|sender
name|void
name|tst_QObject
operator|::
name|sender
parameter_list|()
block|{
block|{
name|SuperObject
name|sender
decl_stmt|;
name|SuperObject
name|receiver
decl_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|anotherSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|rememberSender
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|rememberSender
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|senderSignalIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
emit|emit
name|sender
operator|.
name|theSignal
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|theSender
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|sender
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|theSignalId
argument_list|,
name|sender
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"theSignal()"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|senderSignalIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
emit|emit
name|sender
operator|.
name|anotherSignal
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|theSignalId
argument_list|,
name|sender
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"anotherSignal()"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|senderSignalIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|{
name|SuperObject
modifier|*
name|sender
init|=
operator|new
name|SuperObject
decl_stmt|;
name|SuperObject
modifier|*
name|receiver
init|=
operator|new
name|SuperObject
decl_stmt|;
name|connect
argument_list|(
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|rememberSender
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
expr_stmt|;
name|QThread
name|thread
decl_stmt|;
name|receiver
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|senderSignalIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|theSender
operator|=
literal|0
expr_stmt|;
name|receiver
operator|->
name|theSignalId
operator|=
operator|-
literal|1
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
emit|emit
name|sender
operator|->
name|theSignal
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|theSender
argument_list|,
operator|(
name|QObject
operator|*
operator|)
name|sender
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|theSignalId
argument_list|,
name|sender
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"theSignal()"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|senderSignalIndex
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|receiver
expr_stmt|;
operator|delete
name|sender
expr_stmt|;
block|}
block|{
name|SuperObject
modifier|*
name|sender
init|=
operator|new
name|SuperObject
decl_stmt|;
name|SuperObject
name|receiver
decl_stmt|;
name|connect
argument_list|(
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|deleteAndRememberSender
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|receiver
operator|.
name|theSender
operator|=
name|sender
expr_stmt|;
emit|emit
name|sender
operator|->
name|theSignal
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|theSender
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|.
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|SuperObject
modifier|*
name|sender
init|=
operator|new
name|SuperObject
decl_stmt|;
name|SuperObject
modifier|*
name|receiver
init|=
operator|new
name|SuperObject
decl_stmt|;
name|connect
argument_list|(
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|theSignal
argument_list|()
argument_list|)
argument_list|,
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|deleteAndRememberSender
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
expr_stmt|;
name|QThread
name|thread
decl_stmt|;
name|receiver
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|thread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|theSender
operator|=
name|sender
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
emit|emit
name|sender
operator|->
name|theSignal
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|theSender
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|receiver
operator|->
name|sender
argument_list|()
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|receiver
expr_stmt|;
block|}
block|}
end_function
begin_namespace
DECL|namespace|Foo
namespace|namespace
name|Foo
block|{
DECL|struct|Bar
struct|struct
name|Bar
block|{
DECL|function|~Bar
specifier|virtual
name|~
name|Bar
parameter_list|()
block|{}
specifier|virtual
name|int
name|rtti
parameter_list|()
specifier|const
function_decl|=
literal|0
function_decl|;
block|}
struct|;
DECL|struct|Bleh
struct|struct
name|Bleh
block|{
DECL|function|~Bleh
specifier|virtual
name|~
name|Bleh
parameter_list|()
block|{}
specifier|virtual
name|int
name|rtti
parameter_list|()
specifier|const
function_decl|=
literal|0
function_decl|;
block|}
struct|;
block|}
end_namespace
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|Q_DECLARE_INTERFACE
argument_list|(
name|Foo
operator|::
name|Bar
argument_list|,
literal|"com.qtest.foobar"
argument_list|)
name|QT_END_NAMESPACE
DECL|macro|Bleh_iid
define|#
directive|define
name|Bleh_iid
value|"com.qtest.bleh"
name|QT_BEGIN_NAMESPACE
name|Q_DECLARE_INTERFACE
argument_list|(
name|Foo
operator|::
name|Bleh
argument_list|,
name|Bleh_iid
argument_list|)
name|QT_END_NAMESPACE
DECL|class|FooObject
name|class
name|FooObject
range|:
specifier|public
name|QObject
decl_stmt|, public
name|Foo
operator|::
name|Bar
argument_list|{
name|Q_OBJECT
name|Q_INTERFACES
argument_list|(
argument|Foo::Bar
argument_list|)
specifier|public
operator|:
DECL|function|rtti
name|int
name|rtti
argument_list|()
specifier|const
block|{
return|return
literal|42
return|;
block|}
expr|}
argument_list|;
DECL|class|BlehObject
expr|class
name|BlehObject
operator|:
specifier|public
name|QObject
argument_list|,
specifier|public
name|Foo
operator|::
name|Bleh
block|{
name|Q_OBJECT
name|Q_INTERFACES
argument_list|(
argument|Foo::Bleh
argument_list|)
specifier|public
operator|:
DECL|function|rtti
name|int
name|rtti
argument_list|()
specifier|const
block|{
return|return
literal|43
return|;
block|}
expr|}
block|;
DECL|function|declareInterface
name|void
name|tst_QObject
operator|::
name|declareInterface
operator|(
operator|)
block|{
name|FooObject
name|obj
block|;
name|Foo
operator|::
name|Bar
operator|*
name|bar
operator|=
name|qobject_cast
argument_list|<
name|Foo
operator|::
name|Bar
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|bar
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|bar
operator|->
name|rtti
argument_list|()
argument_list|,
literal|42
argument_list|)
block|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Foo
operator|::
name|Bar
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|,
name|bar
argument_list|)
block|;
name|BlehObject
name|bleh
block|;
name|bar
operator|=
name|qobject_cast
argument_list|<
name|Foo
operator|::
name|Bar
operator|*
argument_list|>
argument_list|(
operator|&
name|bleh
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|bar
argument_list|)
block|;
name|Foo
operator|::
name|Bleh
operator|*
name|b
operator|=
name|qobject_cast
argument_list|<
name|Foo
operator|::
name|Bleh
operator|*
argument_list|>
argument_list|(
operator|&
name|bleh
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|b
operator|->
name|rtti
argument_list|()
argument_list|,
literal|43
argument_list|)
block|;
name|QCOMPARE
argument_list|(
cast|static_cast
argument_list|<
name|Foo
operator|::
name|Bleh
operator|*
argument_list|>
argument_list|(
operator|&
name|bleh
argument_list|)
argument_list|,
name|b
argument_list|)
block|;  }
expr|class
DECL|class|CustomData
name|CustomData
operator|:
specifier|public
name|QObjectUserData
block|{
specifier|public
operator|:
DECL|member|id
name|int
name|id
block|; }
block|;
DECL|function|testUserData
name|void
name|tst_QObject
operator|::
name|testUserData
operator|(
operator|)
block|{
specifier|const
name|int
name|USER_DATA_COUNT
operator|=
literal|100
block|;
name|int
name|user_data_ids
index|[
name|USER_DATA_COUNT
index|]
block|;
comment|// Register a few
for|for
control|(
name|int
name|i
type|=0
init|;
name|i
operator|<
name|USER_DATA_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|user_data_ids
index|[
name|i
index|]
operator|=
name|QObject
operator|::
name|registerUserData
argument_list|()
block|;     }
comment|// Randomize the table a bit
for|for
control|(
name|int
name|i
type|=0
init|;
name|i
operator|<
literal|100
condition|;
operator|++
name|i
control|)
block|{
name|int
name|p1
operator|=
name|rand
argument_list|()
operator|%
name|USER_DATA_COUNT
block|;
name|int
name|p2
operator|=
name|rand
argument_list|()
operator|%
name|USER_DATA_COUNT
block|;
name|int
name|tmp
operator|=
name|user_data_ids
index|[
name|p1
index|]
block|;
name|user_data_ids
index|[
name|p1
index|]
operator|=
name|user_data_ids
index|[
name|p2
index|]
block|;
name|user_data_ids
index|[
name|p2
index|]
operator|=
name|tmp
block|;     }
comment|// insert the user data into an object
name|QObject
name|my_test_object
expr_stmt|;
for|for
control|(
name|int
name|i
type|=0
init|;
name|i
operator|<
name|USER_DATA_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|CustomData
operator|*
name|data
operator|=
operator|new
name|CustomData
block|;
name|data
operator|->
name|id
operator|=
name|user_data_ids
index|[
name|i
index|]
block|;
name|my_test_object
operator|.
name|setUserData
argument_list|(
name|data
operator|->
name|id
argument_list|,
name|data
argument_list|)
block|;     }
comment|// verify that all ids and positions are matching
for|for
control|(
name|int
name|i
type|=0
init|;
name|i
operator|<
name|USER_DATA_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|int
name|id
operator|=
name|user_data_ids
index|[
name|i
index|]
block|;
name|CustomData
operator|*
name|data
operator|=
cast|static_cast
argument_list|<
name|CustomData
operator|*
argument_list|>
argument_list|(
name|my_test_object
operator|.
name|userData
argument_list|(
name|id
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|data
operator|!=
literal|0
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|data
operator|->
name|id
operator|==
name|id
argument_list|)
block|;     }
block|}
expr|class
DECL|class|DestroyedListener
name|DestroyedListener
operator|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
specifier|public
operator|:
DECL|function|DestroyedListener
specifier|inline
name|DestroyedListener
argument_list|()
operator|:
name|pointerWasZero
argument_list|(
literal|false
argument_list|)
block|{}
DECL|member|pointer
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|pointer
block|;
DECL|member|pointerWasZero
name|bool
name|pointerWasZero
block|;
specifier|private
name|slots
operator|:
DECL|function|otherObjectDestroyed
specifier|inline
name|void
name|otherObjectDestroyed
argument_list|()
block|{
name|pointerWasZero
operator|=
name|pointer
operator|.
name|isNull
argument_list|()
block|; }
block|}
argument_list|;
DECL|function|qpointerResetBeforeDestroyedSignal
name|void
name|tst_QObject
operator|::
name|qpointerResetBeforeDestroyedSignal
operator|(
operator|)
block|{
name|QObject
operator|*
name|obj
operator|=
operator|new
name|QObject
block|;
name|DestroyedListener
name|listener
block|;
name|listener
operator|.
name|pointer
operator|=
name|obj
block|;
name|listener
operator|.
name|pointerWasZero
operator|=
literal|false
block|;
name|connect
argument_list|(
name|obj
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|listener
argument_list|,
name|SLOT
argument_list|(
name|otherObjectDestroyed
argument_list|()
argument_list|)
argument_list|)
block|;
operator|delete
name|obj
block|;
name|QVERIFY
argument_list|(
name|listener
operator|.
name|pointerWasZero
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|listener
operator|.
name|pointer
operator|.
name|isNull
argument_list|()
argument_list|)
block|; }
expr|class
DECL|class|DefaultArguments
name|DefaultArguments
operator|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
specifier|public
name|slots
operator|:
DECL|function|theSlot
name|void
name|theSlot
argument_list|(
argument|const QString&s
argument_list|)
block|{
name|result
operator|=
name|s
block|; }
name|signals
operator|:
name|void
name|theOriginalSignal
argument_list|()
block|;
name|void
name|theSecondSignal
argument_list|(
specifier|const
name|QString
operator|&
name|s
operator|=
name|QString
argument_list|(
literal|"secondDefault"
argument_list|)
argument_list|)
block|;
specifier|public
operator|:
DECL|function|emitTheOriginalSignal
name|void
name|emitTheOriginalSignal
argument_list|()
block|{
emit|emit
name|theOriginalSignal
argument_list|()
emit|;
block|}
DECL|function|emitTheSecondSignal
name|void
name|emitTheSecondSignal
argument_list|()
block|{
emit|emit
name|theSecondSignal
argument_list|()
emit|;
block|}
DECL|member|result
name|QString
name|result
block|; }
argument_list|;
DECL|function|connectSignalsToSignalsWithDefaultArguments
name|void
name|tst_QObject
operator|::
name|connectSignalsToSignalsWithDefaultArguments
operator|(
operator|)
block|{
name|DefaultArguments
name|o
block|;
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|theOriginalSignal
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|theSecondSignal
argument_list|()
argument_list|)
argument_list|)
block|;
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|theSecondSignal
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SLOT
argument_list|(
name|theSlot
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|o
operator|.
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
block|;
name|o
operator|.
name|emitTheSecondSignal
argument_list|()
block|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|result
argument_list|,
name|QString
argument_list|(
literal|"secondDefault"
argument_list|)
argument_list|)
block|;
name|o
operator|.
name|result
operator|=
literal|"Not called"
block|;
name|o
operator|.
name|emitTheOriginalSignal
argument_list|()
block|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|result
argument_list|,
name|QString
argument_list|(
literal|"secondDefault"
argument_list|)
argument_list|)
block|;  }
DECL|function|receivers
name|void
name|tst_QObject
operator|::
name|receivers
operator|(
operator|)
block|{
expr|class
name|Object
operator|:
specifier|public
name|QObject
block|{
specifier|public
operator|:
name|int
name|receivers
argument_list|(
argument|const char* signal
argument_list|)
specifier|const
block|{
return|return
name|QObject
operator|::
name|receivers
argument_list|(
name|signal
argument_list|)
return|;
block|}
expr|}
block|;
name|Object
name|object
block|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|receivers
argument_list|(
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
block|;
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|receivers
argument_list|(
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
block|;
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|receivers
argument_list|(
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|2
argument_list|)
block|;
name|object
operator|.
name|disconnect
argument_list|(
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|object
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|object
operator|.
name|receivers
argument_list|(
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|)
block|; }
expr|enum
DECL|enum|Enum
name|Enum
block|{ }
block|;  struct
DECL|struct|Struct
name|Struct
block|{ }
block|;
DECL|class|Class
expr|class
name|Class
block|{ }
block|;
DECL|class|Template
template|template
parameter_list|<
name|typename
name|T
parameter_list|>
class|class
name|Template
block|{
block|}
class|;
block|class
DECL|class|NormalizeObject
name|NormalizeObject
operator|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
specifier|public
operator|:
name|signals
operator|:
name|void
name|uintPointerSignal
argument_list|(
name|uint
operator|*
argument_list|)
block|;
name|void
name|ulongPointerSignal
argument_list|(
name|ulong
operator|*
argument_list|)
block|;
name|void
name|constUintPointerSignal
argument_list|(
specifier|const
name|uint
operator|*
argument_list|)
block|;
name|void
name|constUlongPointerSignal
argument_list|(
specifier|const
name|ulong
operator|*
argument_list|)
block|;
name|void
name|structSignal
argument_list|(
argument|Struct s
argument_list|)
block|;
name|void
name|classSignal
argument_list|(
argument|Class c
argument_list|)
block|;
name|void
name|enumSignal
argument_list|(
argument|Enum e
argument_list|)
block|;
name|void
name|structPointerSignal
argument_list|(
name|Struct
operator|*
name|s
argument_list|)
block|;
name|void
name|classPointerSignal
argument_list|(
name|Class
operator|*
name|c
argument_list|)
block|;
name|void
name|enumPointerSignal
argument_list|(
name|Enum
operator|*
name|e
argument_list|)
block|;
name|void
name|constStructPointerSignal
argument_list|(
specifier|const
name|Struct
operator|*
name|s
argument_list|)
block|;
name|void
name|constClassPointerSignal
argument_list|(
specifier|const
name|Class
operator|*
name|c
argument_list|)
block|;
name|void
name|constEnumPointerSignal
argument_list|(
specifier|const
name|Enum
operator|*
name|e
argument_list|)
block|;
name|void
name|constStructPointerConstPointerSignal
argument_list|(
specifier|const
name|Struct
operator|*
specifier|const
operator|*
name|s
argument_list|)
block|;
name|void
name|constClassPointerConstPointerSignal
argument_list|(
specifier|const
name|Class
operator|*
specifier|const
operator|*
name|c
argument_list|)
block|;
name|void
name|constEnumPointerConstPointerSignal
argument_list|(
specifier|const
name|Enum
operator|*
specifier|const
operator|*
name|e
argument_list|)
block|;
name|void
name|unsignedintSignal
argument_list|(
argument|unsigned int
argument_list|)
block|;
name|void
name|unsignedSignal
argument_list|(
name|unsigned
argument_list|)
block|;
name|void
name|unsignedlongSignal
argument_list|(
argument|unsigned long
argument_list|)
block|;
name|void
name|unsignedlonglongSignal
argument_list|(
name|quint64
argument_list|)
block|;
name|void
name|unsignedlongintSignal
argument_list|(
argument|unsigned long int
argument_list|)
block|;
name|void
name|unsignedshortSignal
argument_list|(
argument|unsigned short
argument_list|)
block|;
name|void
name|unsignedcharSignal
argument_list|(
argument|unsigned char
argument_list|)
block|;
name|void
name|typeRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
operator|&
argument_list|>
operator|&
name|ref
argument_list|)
block|;
name|void
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
name|ref
argument_list|)
block|;
name|void
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
name|ref
argument_list|)
block|;
name|void
name|typePointerConstRefSignal
argument_list|(
name|Class
operator|*
specifier|const
operator|&
argument_list|)
block|;
name|void
name|constTemplateSignal1
argument_list|(
name|Template
argument_list|<
name|int
argument_list|>
argument_list|)
block|;
name|void
name|constTemplateSignal2
argument_list|(
name|Template
argument_list|<
specifier|const
name|int
argument_list|>
argument_list|)
block|;
specifier|public
name|slots
operator|:
DECL|function|uintPointerSlot
name|void
name|uintPointerSlot
argument_list|(
argument|uint *
argument_list|)
block|{ }
DECL|function|ulongPointerSlot
name|void
name|ulongPointerSlot
argument_list|(
argument|ulong *
argument_list|)
block|{ }
DECL|function|constUintPointerSlot
name|void
name|constUintPointerSlot
argument_list|(
argument|const uint *
argument_list|)
block|{ }
DECL|function|constUlongPointerSlot
name|void
name|constUlongPointerSlot
argument_list|(
argument|const ulong *
argument_list|)
block|{ }
DECL|function|structSlot
name|void
name|structSlot
argument_list|(
argument|Struct s
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|classSlot
name|void
name|classSlot
argument_list|(
argument|Class c
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|enumSlot
name|void
name|enumSlot
argument_list|(
argument|Enum e
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|e
argument_list|)
block|; }
DECL|function|structPointerSlot
name|void
name|structPointerSlot
argument_list|(
argument|Struct *s
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|classPointerSlot
name|void
name|classPointerSlot
argument_list|(
argument|Class *c
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|enumPointerSlot
name|void
name|enumPointerSlot
argument_list|(
argument|Enum *e
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|e
argument_list|)
block|; }
DECL|function|constStructPointerSlot
name|void
name|constStructPointerSlot
argument_list|(
argument|const Struct *s
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|constClassPointerSlot
name|void
name|constClassPointerSlot
argument_list|(
argument|const Class *c
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|constEnumPointerSlot
name|void
name|constEnumPointerSlot
argument_list|(
argument|const Enum *e
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|e
argument_list|)
block|; }
DECL|function|constStructPointerConstPointerSlot
name|void
name|constStructPointerConstPointerSlot
argument_list|(
argument|const Struct * const *s
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|constClassPointerConstPointerSlot
name|void
name|constClassPointerConstPointerSlot
argument_list|(
argument|const Class * const *c
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|constEnumPointerConstPointerSlot
name|void
name|constEnumPointerConstPointerSlot
argument_list|(
argument|const Enum * const *e
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|e
argument_list|)
block|; }
DECL|function|uintSlot
name|void
name|uintSlot
argument_list|(
argument|uint
argument_list|)
block|{}
block|;
DECL|function|unsignedintSlot
name|void
name|unsignedintSlot
argument_list|(
argument|unsigned int
argument_list|)
block|{}
block|;
DECL|function|unsignedSlot
name|void
name|unsignedSlot
argument_list|(
argument|unsigned
argument_list|)
block|{}
block|;
DECL|function|unsignedlongSlot
name|void
name|unsignedlongSlot
argument_list|(
argument|unsigned long
argument_list|)
block|{}
block|;
DECL|function|unsignedlonglongSlot
name|void
name|unsignedlonglongSlot
argument_list|(
argument|quint64
argument_list|)
block|{}
block|;
DECL|function|unsignedlongintSlot
name|void
name|unsignedlongintSlot
argument_list|(
argument|unsigned long int
argument_list|)
block|{}
block|;
DECL|function|unsignedshortSlot
name|void
name|unsignedshortSlot
argument_list|(
argument|unsigned short
argument_list|)
block|{}
block|;
DECL|function|unsignedcharSlot
name|void
name|unsignedcharSlot
argument_list|(
argument|unsigned char
argument_list|)
block|{}
block|;
DECL|function|typeRefSlot
name|void
name|typeRefSlot
argument_list|(
argument|Template<Class&>&
argument_list|)
block|{}
DECL|function|constTypeRefSlot
name|void
name|constTypeRefSlot
argument_list|(
argument|const Template<const Class&>&
argument_list|)
block|{}
DECL|function|typeConstRefSlot
name|void
name|typeConstRefSlot
argument_list|(
argument|Template<Class const&> const&
argument_list|)
block|{}
DECL|function|typePointerConstRefSlot
name|void
name|typePointerConstRefSlot
argument_list|(
argument|Class * const&
argument_list|)
block|{}
DECL|function|constTemplateSlot1
name|void
name|constTemplateSlot1
argument_list|(
argument|Template<int> const
argument_list|)
block|{}
DECL|function|constTemplateSlot2
name|void
name|constTemplateSlot2
argument_list|(
argument|const Template<int>
argument_list|)
block|{}
DECL|function|constTemplateSlot3
name|void
name|constTemplateSlot3
argument_list|(
argument|const Template< const int>
argument_list|)
block|{}
block|}
argument_list|;
include|#
directive|include
file|"oldnormalizeobject.h"
DECL|function|normalize
name|void
name|tst_QObject
operator|::
name|normalize
operator|(
operator|)
block|{
name|NormalizeObject
name|object
block|;
comment|// unsigned int -> uint, unsigned long -> ulong
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|uintPointerSignal
argument_list|(
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|uintPointerSlot
argument_list|(
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|uintPointerSignal
argument_list|(
argument|unsigned int *
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|uintPointerSlot
argument_list|(
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|uintPointerSignal
argument_list|(
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|uintPointerSlot
argument_list|(
argument|unsigned int *
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constUintPointerSignal
argument_list|(
specifier|const
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constUintPointerSlot
argument_list|(
specifier|const
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constUintPointerSignal
argument_list|(
argument|const unsigned int *
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constUintPointerSlot
argument_list|(
specifier|const
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constUintPointerSignal
argument_list|(
specifier|const
name|uint
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constUintPointerSlot
argument_list|(
argument|const unsigned int *
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|ulongPointerSignal
argument_list|(
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|ulongPointerSlot
argument_list|(
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|ulongPointerSignal
argument_list|(
argument|unsigned long *
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|ulongPointerSlot
argument_list|(
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|ulongPointerSignal
argument_list|(
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|ulongPointerSlot
argument_list|(
argument|unsigned long *
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constUlongPointerSignal
argument_list|(
specifier|const
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constUlongPointerSlot
argument_list|(
specifier|const
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constUlongPointerSignal
argument_list|(
argument|const unsigned long *
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constUlongPointerSlot
argument_list|(
specifier|const
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constUlongPointerSignal
argument_list|(
specifier|const
name|ulong
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constUlongPointerSlot
argument_list|(
argument|const unsigned long *
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// struct, class, and enum are optional
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|structSignal
argument_list|(
expr|struct
name|Struct
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|structSlot
argument_list|(
expr|struct
name|Struct
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|structSignal
argument_list|(
name|Struct
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|structSlot
argument_list|(
expr|struct
name|Struct
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|structSignal
argument_list|(
expr|struct
name|Struct
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|structSlot
argument_list|(
name|Struct
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|classSignal
argument_list|(
expr|class
name|Class
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|classSlot
argument_list|(
expr|class
name|Class
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|classSignal
argument_list|(
name|Class
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|classSlot
argument_list|(
expr|class
name|Class
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|classSignal
argument_list|(
expr|class
name|Class
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|classSlot
argument_list|(
name|Class
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|enumSignal
argument_list|(
expr|enum
name|Enum
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|enumSlot
argument_list|(
expr|enum
name|Enum
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|enumSignal
argument_list|(
name|Enum
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|enumSlot
argument_list|(
expr|enum
name|Enum
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|enumSignal
argument_list|(
expr|enum
name|Enum
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|enumSlot
argument_list|(
name|Enum
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|structPointerSignal
argument_list|(
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|structPointerSlot
argument_list|(
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|structPointerSignal
argument_list|(
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|structPointerSlot
argument_list|(
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|structPointerSignal
argument_list|(
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|structPointerSlot
argument_list|(
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|classPointerSignal
argument_list|(
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|classPointerSlot
argument_list|(
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|classPointerSignal
argument_list|(
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|classPointerSlot
argument_list|(
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|classPointerSignal
argument_list|(
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|classPointerSlot
argument_list|(
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|enumPointerSignal
argument_list|(
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|enumPointerSlot
argument_list|(
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|enumPointerSignal
argument_list|(
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|enumPointerSlot
argument_list|(
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|enumPointerSignal
argument_list|(
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|enumPointerSlot
argument_list|(
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerSignal
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerSlot
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerSignal
argument_list|(
specifier|const
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerSlot
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerSignal
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerSlot
argument_list|(
specifier|const
name|Struct
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerSignal
argument_list|(
specifier|const
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerSlot
argument_list|(
specifier|const
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerSignal
argument_list|(
specifier|const
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerSlot
argument_list|(
specifier|const
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerSignal
argument_list|(
specifier|const
expr|class
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerSlot
argument_list|(
specifier|const
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerSignal
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerSlot
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerSignal
argument_list|(
specifier|const
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerSlot
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerSignal
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerSlot
argument_list|(
specifier|const
name|Enum
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerSignal
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerSlot
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerSignal
argument_list|(
name|Struct
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerSlot
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerSignal
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerSlot
argument_list|(
name|Struct
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerSignal
argument_list|(
expr|class
name|Class
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerSlot
argument_list|(
expr|class
name|Class
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerSignal
argument_list|(
name|Class
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerSlot
argument_list|(
expr|class
name|Class
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerSignal
argument_list|(
expr|class
name|Class
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerSlot
argument_list|(
name|Class
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerSignal
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerSlot
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerSignal
argument_list|(
name|Enum
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerSlot
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerSignal
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerSlot
argument_list|(
name|Enum
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerConstPointerSignal
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerConstPointerSlot
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerConstPointerSignal
argument_list|(
specifier|const
name|Struct
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerConstPointerSlot
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerConstPointerSignal
argument_list|(
specifier|const
expr|struct
name|Struct
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerConstPointerSlot
argument_list|(
specifier|const
name|Struct
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerConstPointerSignal
argument_list|(
specifier|const
expr|class
name|Class
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerConstPointerSlot
argument_list|(
specifier|const
expr|class
name|Class
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerConstPointerSignal
argument_list|(
specifier|const
name|Class
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerConstPointerSlot
argument_list|(
specifier|const
expr|class
name|Class
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerConstPointerSignal
argument_list|(
specifier|const
expr|class
name|Class
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerConstPointerSlot
argument_list|(
specifier|const
name|Class
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerConstPointerSignal
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerConstPointerSlot
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerConstPointerSignal
argument_list|(
specifier|const
name|Enum
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerConstPointerSlot
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerConstPointerSignal
argument_list|(
specifier|const
expr|enum
name|Enum
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerConstPointerSlot
argument_list|(
specifier|const
name|Enum
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerConstPointerSignal
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerConstPointerSlot
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerConstPointerSignal
argument_list|(
name|Struct
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerConstPointerSlot
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constStructPointerConstPointerSignal
argument_list|(
expr|struct
name|Struct
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constStructPointerConstPointerSlot
argument_list|(
name|Struct
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerConstPointerSignal
argument_list|(
expr|class
name|Class
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerConstPointerSlot
argument_list|(
expr|class
name|Class
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerConstPointerSignal
argument_list|(
name|Class
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerConstPointerSlot
argument_list|(
expr|class
name|Class
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constClassPointerConstPointerSignal
argument_list|(
expr|class
name|Class
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constClassPointerConstPointerSlot
argument_list|(
name|Class
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerConstPointerSignal
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerConstPointerSlot
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerConstPointerSignal
argument_list|(
name|Enum
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerConstPointerSlot
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constEnumPointerConstPointerSignal
argument_list|(
expr|enum
name|Enum
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constEnumPointerConstPointerSlot
argument_list|(
name|Enum
specifier|const
operator|*
specifier|const
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedintSignal
argument_list|(
argument|unsigned int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|unsignedintSlot
argument_list|(
argument|unsigned int
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedSignal
argument_list|(
name|unsigned
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|unsignedSlot
argument_list|(
name|unsigned
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedSignal
argument_list|(
name|unsigned
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|uintSlot
argument_list|(
name|uint
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedlongSignal
argument_list|(
argument|unsigned long
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|unsignedlongSlot
argument_list|(
argument|unsigned long
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedlonglongSignal
argument_list|(
name|quint64
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|unsignedlonglongSlot
argument_list|(
name|quint64
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedlongintSignal
argument_list|(
argument|unsigned long int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|unsignedlongintSlot
argument_list|(
argument|unsigned long int
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedshortSignal
argument_list|(
argument|unsigned short
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|unsignedshortSlot
argument_list|(
argument|unsigned short
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|unsignedcharSignal
argument_list|(
argument|unsigned char
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|unsignedcharSlot
argument_list|(
argument|unsigned char
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// connect when original template signature and mixed usage of 'T<C const&> const&',
comment|// 'const T<const C&>&', and 'T<const C&>'
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// same test again, this time with an object compiled with old moc output... we know that
comment|// it is not possible to connect everything, whic is the purpose for this test
name|OldNormalizeObject
name|oldobject
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// this fails in older versions, but passes now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// this fails in older versions, but passes now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// this fails in older versions, but passes now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// these fail in older Qt versions, but pass now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|constTypeRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// these also fail in older Qt versions, but pass now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|constTypeRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// this fails in older versions, but passes now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// this fails in older versions, but passes now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
specifier|const
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|// this fails in older versions, but passes now due to proper normalizing
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
specifier|const
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
specifier|const
name|Class
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|oldobject
operator|.
name|connect
argument_list|(
operator|&
name|oldobject
argument_list|,
name|SIGNAL
argument_list|(
name|typeConstRefSignal
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typeConstRefSlot
argument_list|(
name|Template
argument_list|<
name|Class
specifier|const
operator|&
argument_list|>
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typePointerConstRefSignal
argument_list|(
name|Class
operator|*
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typePointerConstRefSlot
argument_list|(
name|Class
operator|*
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typePointerConstRefSignal
argument_list|(
name|Class
operator|*
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typePointerConstRefSlot
argument_list|(
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typePointerConstRefSignal
argument_list|(
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typePointerConstRefSlot
argument_list|(
name|Class
operator|*
specifier|const
operator|&
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|object
operator|.
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|typePointerConstRefSignal
argument_list|(
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|typePointerConstRefSlot
argument_list|(
name|Class
operator|*
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTemplateSignal1
argument_list|(
name|Template
argument_list|<
name|int
argument_list|>
argument_list|)
argument_list|)
argument_list|,
operator|&
name|object
argument_list|,
name|SLOT
argument_list|(
name|constTemplateSlot1
argument_list|(
name|Template
argument_list|<
name|int
argument_list|>
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTemplateSignal1
argument_list|(
name|Template
argument_list|<
name|int
argument_list|>
argument_list|)
argument_list|)
argument_list|,
operator|&
name|object
argument_list|,
name|SLOT
argument_list|(
name|constTemplateSlot2
argument_list|(
name|Template
argument_list|<
name|int
argument_list|>
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTemplateSignal2
argument_list|(
name|Template
argument_list|<
specifier|const
name|int
argument_list|>
argument_list|)
argument_list|)
argument_list|,
operator|&
name|object
argument_list|,
name|SLOT
argument_list|(
name|constTemplateSlot3
argument_list|(
name|Template
argument_list|<
name|int
specifier|const
argument_list|>
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
comment|//type does not match
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QObject::connect: Incompatible sender/receiver arguments\n"
literal|"        NormalizeObject::constTemplateSignal1(Template<int>) --> NormalizeObject::constTemplateSlot3(Template<const int>)"
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|connect
argument_list|(
operator|&
name|object
argument_list|,
name|SIGNAL
argument_list|(
name|constTemplateSignal1
argument_list|(
name|Template
argument_list|<
name|int
argument_list|>
argument_list|)
argument_list|)
argument_list|,
operator|&
name|object
argument_list|,
name|SLOT
argument_list|(
name|constTemplateSlot3
argument_list|(
name|Template
argument_list|<
name|int
specifier|const
argument_list|>
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|; }
expr|class
DECL|class|SiblingDeleter
name|SiblingDeleter
operator|:
specifier|public
name|QObject
block|{
specifier|public
operator|:
DECL|function|SiblingDeleter
specifier|inline
name|SiblingDeleter
argument_list|(
name|QObject
operator|*
name|sibling
argument_list|,
name|QObject
operator|*
name|parent
argument_list|)
operator|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|,
name|sibling
argument_list|(
argument|sibling
argument_list|)
block|{}
DECL|function|~SiblingDeleter
specifier|inline
specifier|virtual
operator|~
name|SiblingDeleter
argument_list|()
block|{
operator|delete
name|sibling
block|; }
specifier|private
operator|:
DECL|member|sibling
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|sibling
block|; }
argument_list|;
DECL|function|childDeletesItsSibling
name|void
name|tst_QObject
operator|::
name|childDeletesItsSibling
operator|(
operator|)
block|{
name|QObject
operator|*
name|commonParent
operator|=
operator|new
name|QObject
argument_list|(
literal|0
argument_list|)
block|;
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|child
operator|=
operator|new
name|QObject
argument_list|(
literal|0
argument_list|)
block|;
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|siblingDeleter
operator|=
operator|new
name|SiblingDeleter
argument_list|(
name|child
argument_list|,
name|commonParent
argument_list|)
block|;
name|child
operator|->
name|setParent
argument_list|(
name|commonParent
argument_list|)
block|;
operator|delete
name|commonParent
block|;
comment|// don't crash
name|QVERIFY
argument_list|(
operator|!
name|child
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|siblingDeleter
argument_list|)
block|; }
DECL|function|floatProperty
name|void
name|tst_QObject
operator|::
name|floatProperty
operator|(
operator|)
block|{
name|PropertyObject
name|obj
block|;
specifier|const
name|int
name|idx
operator|=
name|obj
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfProperty
argument_list|(
literal|"myFloat"
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|idx
operator|>
literal|0
argument_list|)
block|;
name|QMetaProperty
name|prop
operator|=
name|obj
operator|.
name|metaObject
argument_list|()
operator|->
name|property
argument_list|(
name|idx
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|type
argument_list|()
operator|==
name|uint
argument_list|(
name|QMetaType
operator|::
name|type
argument_list|(
literal|"float"
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|prop
operator|.
name|write
argument_list|(
operator|&
name|obj
argument_list|,
name|QVariant
argument_list|(
literal|"Hello"
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|write
argument_list|(
operator|&
name|obj
argument_list|,
name|qVariantFromValue
argument_list|(
literal|128.0f
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVariant
name|v
operator|=
name|prop
operator|.
name|read
argument_list|(
operator|&
name|obj
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|int
argument_list|(
name|v
operator|.
name|userType
argument_list|()
argument_list|)
operator|==
name|QMetaType
operator|::
name|Float
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|qVariantValue
argument_list|<
name|float
argument_list|>
argument_list|(
name|v
argument_list|)
operator|==
literal|128.0f
argument_list|)
block|; }
DECL|function|qrealProperty
name|void
name|tst_QObject
operator|::
name|qrealProperty
operator|(
operator|)
block|{
name|PropertyObject
name|obj
block|;
specifier|const
name|int
name|idx
operator|=
name|obj
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfProperty
argument_list|(
literal|"myQReal"
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|idx
operator|>
literal|0
argument_list|)
block|;
name|QMetaProperty
name|prop
operator|=
name|obj
operator|.
name|metaObject
argument_list|()
operator|->
name|property
argument_list|(
name|idx
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|isValid
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|type
argument_list|()
operator|==
name|uint
argument_list|(
name|QMetaType
operator|::
name|type
argument_list|(
literal|"qreal"
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|prop
operator|.
name|write
argument_list|(
operator|&
name|obj
argument_list|,
name|QVariant
argument_list|(
literal|"Hello"
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|write
argument_list|(
operator|&
name|obj
argument_list|,
name|qVariantFromValue
argument_list|(
literal|128.0f
argument_list|)
argument_list|)
argument_list|)
block|;
name|QVariant
name|v
operator|=
name|prop
operator|.
name|read
argument_list|(
operator|&
name|obj
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|userType
argument_list|()
argument_list|,
name|qMetaTypeId
argument_list|<
name|qreal
argument_list|>
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|qVariantValue
argument_list|<
name|qreal
argument_list|>
argument_list|(
name|v
argument_list|)
operator|==
literal|128.0
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|prop
operator|.
name|write
argument_list|(
operator|&
name|obj
argument_list|,
name|qVariantFromValue
argument_list|(
name|double
argument_list|(
literal|127
argument_list|)
argument_list|)
argument_list|)
argument_list|)
block|;
name|v
operator|=
name|prop
operator|.
name|read
argument_list|(
operator|&
name|obj
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|userType
argument_list|()
argument_list|,
name|qMetaTypeId
argument_list|<
name|qreal
argument_list|>
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|qVariantValue
argument_list|<
name|qreal
argument_list|>
argument_list|(
name|v
argument_list|)
operator|==
literal|127.0
argument_list|)
block|; }
expr|class
DECL|class|DynamicPropertyObject
name|DynamicPropertyObject
operator|:
specifier|public
name|PropertyObject
block|{
specifier|public
operator|:
DECL|function|DynamicPropertyObject
specifier|inline
name|DynamicPropertyObject
argument_list|()
block|{}
DECL|function|event
specifier|inline
specifier|virtual
name|bool
name|event
argument_list|(
argument|QEvent *e
argument_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|DynamicPropertyChange
condition|)
block|{
name|changedDynamicProperties
operator|.
name|append
argument_list|(
cast|static_cast
argument_list|<
name|QDynamicPropertyChangeEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
operator|->
name|propertyName
argument_list|()
argument_list|)
block|;         }
return|return
name|QObject
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
DECL|member|changedDynamicProperties
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|changedDynamicProperties
block|; }
argument_list|;
DECL|function|dynamicProperties
name|void
name|tst_QObject
operator|::
name|dynamicProperties
operator|(
operator|)
block|{
name|DynamicPropertyObject
name|obj
block|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|dynamicPropertyNames
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|setProperty
argument_list|(
literal|"number"
argument_list|,
literal|42
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|isEmpty
argument_list|()
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"number"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|obj
operator|.
name|setProperty
argument_list|(
literal|"number"
argument_list|,
literal|"invalid string"
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|isEmpty
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|obj
operator|.
name|setProperty
argument_list|(
literal|"myuserproperty"
argument_list|,
literal|"Hello"
argument_list|)
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|first
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"myuserproperty"
argument_list|)
argument_list|)
block|;
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|clear
argument_list|()
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"myuserproperty"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Hello"
argument_list|)
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|dynamicPropertyNames
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|dynamicPropertyNames
argument_list|()
operator|.
name|first
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"myuserproperty"
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
operator|!
name|obj
operator|.
name|setProperty
argument_list|(
literal|"myuserproperty"
argument_list|,
name|QVariant
argument_list|()
argument_list|)
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|first
argument_list|()
argument_list|,
name|QByteArray
argument_list|(
literal|"myuserproperty"
argument_list|)
argument_list|)
block|;
name|obj
operator|.
name|changedDynamicProperties
operator|.
name|clear
argument_list|()
block|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|property
argument_list|(
literal|"myuserproperty"
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|obj
operator|.
name|dynamicPropertyNames
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
block|; }
DECL|function|recursiveSignalEmission
name|void
name|tst_QObject
operator|::
name|recursiveSignalEmission
operator|(
operator|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
operator|&&
name|defined
argument_list|(
name|Q_CC_NOKIAX86
argument_list|)
name|QSKIP
argument_list|(
literal|"Emulator builds in Symbian do not support launching processes linking to Qt"
argument_list|,
name|SkipAll
argument_list|)
block|;
elif|#
directive|elif
name|defined
argument_list|(
name|QT_NO_PROCESS
argument_list|)
name|QSKIP
argument_list|(
literal|"Test requires QProcess"
argument_list|,
name|SkipAll
argument_list|)
block|;
else|#
directive|else
name|QProcess
name|proc
block|;
name|proc
operator|.
name|start
argument_list|(
literal|"./signalbug"
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|proc
operator|.
name|waitForFinished
argument_list|()
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|proc
operator|.
name|exitStatus
argument_list|()
operator|==
name|QProcess
operator|::
name|NormalExit
argument_list|)
block|;
name|QCOMPARE
argument_list|(
name|proc
operator|.
name|exitCode
argument_list|()
argument_list|,
literal|0
argument_list|)
block|;
endif|#
directive|endif
block|}
DECL|function|blockingQueuedConnection
name|void
name|tst_QObject
operator|::
name|blockingQueuedConnection
operator|(
operator|)
block|{
block|{
name|SenderObject
name|sender
block|;
name|MoveToThreadThread
name|thread
block|;
name|ReceiverObject
name|receiver
block|;
name|receiver
operator|.
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
block|;
name|thread
operator|.
name|start
argument_list|()
block|;
name|receiver
operator|.
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
block|;
name|sender
operator|.
name|emitSignal1
argument_list|()
block|;
name|QVERIFY
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
block|;
name|receiver
operator|.
name|reset
argument_list|()
block|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|receiver
argument_list|,
literal|"slot1"
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
argument_list|)
block|;
name|QVERIFY
argument_list|(
name|receiver
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
block|;
name|thread
operator|.
name|quit
argument_list|()
block|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|()
argument_list|)
block|;     }
block|}
expr|class
DECL|class|EventSpy
name|EventSpy
operator|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
specifier|public
operator|:
DECL|typedef|EventList
typedef|typedef
name|QList
argument_list|<
name|QPair
argument_list|<
name|QObject
operator|*
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|>
argument_list|>
name|EventList
typedef|;
DECL|function|EventSpy
name|EventSpy
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
operator|:
name|QObject
argument_list|(
argument|parent
argument_list|)
block|{ }
DECL|function|eventList
name|EventList
name|eventList
argument_list|()
block|{
return|return
name|events
return|;
block|}
DECL|function|clear
name|void
name|clear
argument_list|()
block|{
name|events
operator|.
name|clear
argument_list|()
block|;     }
DECL|function|eventFilter
name|bool
name|eventFilter
argument_list|(
argument|QObject *object
argument_list|,
argument|QEvent *event
argument_list|)
block|{
name|events
operator|.
name|append
argument_list|(
name|qMakePair
argument_list|(
name|object
argument_list|,
name|event
operator|->
name|type
argument_list|()
argument_list|)
argument_list|)
block|;
return|return
literal|false
return|;
block|}
specifier|private
operator|:
DECL|member|events
name|EventList
name|events
argument_list|; }
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|compatibilityChildInsertedEvents
name|void
name|tst_QObject
operator|::
name|compatibilityChildInsertedEvents
parameter_list|()
block|{
name|EventSpy
operator|::
name|EventList
name|expected
decl_stmt|;
block|{
comment|// no children created, so we expect no events
name|QObject
name|object
decl_stmt|;
name|EventSpy
name|spy
decl_stmt|;
name|object
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventSpy
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 2 children, so we expect 2 ChildAdded and 2 ChildInserted events
name|QObject
name|object
decl_stmt|;
name|EventSpy
name|spy
decl_stmt|;
name|object
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
name|child1
argument_list|(
operator|&
name|object
argument_list|)
decl_stmt|;
name|QObject
name|child2
decl_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
operator|&
name|object
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventSpy
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventSpy
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|{
comment|// 2 children, but one is reparented away, so we expect:
comment|// 2 ChildAdded, 1 ChildRemoved, and 1 ChildInserted
name|QObject
name|object
decl_stmt|;
name|EventSpy
name|spy
decl_stmt|;
name|object
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
name|child1
argument_list|(
operator|&
name|object
argument_list|)
decl_stmt|;
name|QObject
name|child2
decl_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
operator|&
name|object
argument_list|)
expr_stmt|;
name|child2
operator|.
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventSpy
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|ChildAdded
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|ChildRemoved
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|expected
operator|=
name|EventSpy
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|1
argument_list|)
argument_list|)
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|Type
argument_list|(
name|QEvent
operator|::
name|User
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|installEventFilter
name|void
name|tst_QObject
operator|::
name|installEventFilter
parameter_list|()
block|{
name|QEvent
name|event
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
decl_stmt|;
name|EventSpy
operator|::
name|EventList
name|expected
decl_stmt|;
name|QObject
name|object
decl_stmt|;
name|EventSpy
name|spy
decl_stmt|;
name|object
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
comment|// nothing special, should just work
name|QCoreApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventSpy
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|User
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// moving the filter causes QCoreApplication to skip the filter
name|spy
operator|.
name|moveToThread
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QCoreApplication: Object event filter cannot be in a different thread."
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// move it back, and the filter works again
name|spy
operator|.
name|moveToThread
argument_list|(
name|object
operator|.
name|thread
argument_list|()
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|expected
operator|=
name|EventSpy
operator|::
name|EventList
argument_list|()
operator|<<
name|qMakePair
argument_list|(
operator|&
name|object
argument_list|,
name|QEvent
operator|::
name|User
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// cannot install an event filter that lives in a different thread
name|object
operator|.
name|removeEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|spy
operator|.
name|moveToThread
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QObject::installEventFilter(): Cannot filter events for objects in a different thread."
argument_list|)
expr_stmt|;
name|object
operator|.
name|installEventFilter
argument_list|(
operator|&
name|spy
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|object
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|eventList
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|EmitThread
class|class
name|EmitThread
super|:
specifier|public
name|QThread
block|{
name|Q_OBJECT
public|public:
DECL|function|run
name|void
name|run
parameter_list|(
name|void
parameter_list|)
block|{
emit|emit
name|work
argument_list|()
emit|;
block|}
signals|signals:
name|void
name|work
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|DeleteObject
class|class
name|DeleteObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
DECL|function|deleteSelf
name|void
name|deleteSelf
parameter_list|()
block|{
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|relaySignalAndProcessEvents
name|void
name|relaySignalAndProcessEvents
parameter_list|()
block|{
emit|emit
name|relayedSignal
argument_list|()
emit|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
block|}
signals|signals:
name|void
name|relayedSignal
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|deleteSelfInSlot
name|void
name|tst_QObject
operator|::
name|deleteSelfInSlot
parameter_list|()
block|{
block|{
name|SenderObject
name|sender
decl_stmt|;
name|DeleteObject
modifier|*
name|receiver
init|=
operator|new
name|DeleteObject
argument_list|()
decl_stmt|;
name|receiver
operator|->
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|deleteSelf
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
expr_stmt|;
name|QThread
name|thread
decl_stmt|;
name|receiver
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|connect
argument_list|(
name|receiver
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QPointer
argument_list|<
name|DeleteObject
argument_list|>
name|p
init|=
name|receiver
decl_stmt|;
name|sender
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|SenderObject
name|sender
decl_stmt|;
name|DeleteObject
modifier|*
name|receiver
init|=
operator|new
name|DeleteObject
argument_list|()
decl_stmt|;
name|receiver
operator|->
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|relaySignalAndProcessEvents
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|connect
argument_list|(
name|receiver
argument_list|,
name|SIGNAL
argument_list|(
name|relayedSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|deleteSelf
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QThread
name|thread
decl_stmt|;
name|receiver
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|connect
argument_list|(
name|receiver
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QPointer
argument_list|<
name|DeleteObject
argument_list|>
name|p
init|=
name|receiver
decl_stmt|;
name|sender
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|EmitThread
name|sender
decl_stmt|;
name|DeleteObject
modifier|*
name|receiver
init|=
operator|new
name|DeleteObject
argument_list|()
decl_stmt|;
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|work
argument_list|()
argument_list|)
argument_list|,
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|deleteSelf
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|DeleteObject
argument_list|>
name|p
init|=
name|receiver
decl_stmt|;
name|sender
operator|.
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|sender
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|DisconnectObject
class|class
name|DisconnectObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
DECL|function|disconnectSelf
name|void
name|disconnectSelf
parameter_list|()
block|{
name|disconnect
argument_list|(
name|sender
argument_list|()
argument_list|,
literal|0
argument_list|,
name|this
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|function|relaySignalAndProcessEvents
name|void
name|relaySignalAndProcessEvents
parameter_list|()
block|{
emit|emit
name|relayedSignal
argument_list|()
emit|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
block|}
signals|signals:
name|void
name|relayedSignal
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|disconnectSelfInSlotAndDeleteAfterEmit
name|void
name|tst_QObject
operator|::
name|disconnectSelfInSlotAndDeleteAfterEmit
parameter_list|()
block|{
block|{
name|SenderObject
name|sender
decl_stmt|;
name|DisconnectObject
modifier|*
name|receiver
init|=
operator|new
name|DisconnectObject
argument_list|()
decl_stmt|;
name|receiver
operator|->
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|disconnectSelf
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sender
operator|.
name|emitSignal1AfterRecursion
argument_list|()
expr_stmt|;
operator|delete
name|receiver
expr_stmt|;
block|}
block|{
name|SenderObject
name|sender
decl_stmt|;
name|DisconnectObject
modifier|*
name|receiver
init|=
operator|new
name|DisconnectObject
argument_list|()
decl_stmt|;
name|receiver
operator|->
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|disconnectSelf
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
expr_stmt|;
name|QThread
name|thread
decl_stmt|;
name|receiver
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|connect
argument_list|(
name|receiver
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QPointer
argument_list|<
name|DisconnectObject
argument_list|>
name|p
init|=
name|receiver
decl_stmt|;
name|sender
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|SenderObject
name|sender
decl_stmt|;
name|DisconnectObject
modifier|*
name|receiver
init|=
operator|new
name|DisconnectObject
argument_list|()
decl_stmt|;
name|receiver
operator|->
name|connect
argument_list|(
operator|&
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|relaySignalAndProcessEvents
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|BlockingQueuedConnection
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|connect
argument_list|(
name|receiver
argument_list|,
name|SIGNAL
argument_list|(
name|relayedSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|disconnectSelf
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
name|QThread
name|thread
decl_stmt|;
name|receiver
operator|->
name|moveToThread
argument_list|(
operator|&
name|thread
argument_list|)
expr_stmt|;
name|thread
operator|.
name|connect
argument_list|(
name|receiver
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QPointer
argument_list|<
name|DisconnectObject
argument_list|>
name|p
init|=
name|receiver
decl_stmt|;
name|sender
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|thread
operator|.
name|wait
argument_list|(
literal|10000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|dumpObjectInfo
name|void
name|tst_QObject
operator|::
name|dumpObjectInfo
parameter_list|()
block|{
name|QObject
name|a
decl_stmt|,
name|b
decl_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|a
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
operator|&
name|b
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|disconnect
argument_list|(
operator|&
name|b
argument_list|)
expr_stmt|;
name|a
operator|.
name|dumpObjectInfo
argument_list|()
expr_stmt|;
comment|// should not crash
block|}
end_function
begin_class
DECL|class|ConnectToSender
class|class
name|ConnectToSender
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
DECL|function|uselessSlot
name|void
name|uselessSlot
parameter_list|()
block|{
name|count
operator|++
expr_stmt|;
block|}
DECL|function|harmfullSlot
name|void
name|harmfullSlot
parameter_list|()
block|{
comment|//this used to crash
name|connect
argument_list|(
name|sender
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|signal4
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|uselessSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//play a little bit with the memory in order to really get a segfault.
name|connect
argument_list|(
name|sender
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|uselessSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|double
argument_list|>
argument_list|()
operator|<<
literal|45
operator|<<
literal|78
operator|<<
literal|65
operator|<<
literal|121
operator|<<
literal|45
operator|<<
literal|78
operator|<<
literal|12
expr_stmt|;
block|}
public|public:
DECL|member|count
name|int
name|count
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|connectToSender
name|void
name|tst_QObject
operator|::
name|connectToSender
parameter_list|()
block|{
name|SenderObject
name|s
decl_stmt|;
name|ConnectToSender
name|r
decl_stmt|;
name|r
operator|.
name|count
operator|=
literal|0
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|r
argument_list|,
name|SLOT
argument_list|(
name|harmfullSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|r
argument_list|,
name|SLOT
argument_list|(
name|uselessSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|s
operator|.
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|count
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qobjectConstCast
name|void
name|tst_QObject
operator|::
name|qobjectConstCast
parameter_list|()
block|{
name|FooObject
name|obj
decl_stmt|;
name|QObject
modifier|*
name|ptr
init|=
operator|&
name|obj
decl_stmt|;
specifier|const
name|QObject
modifier|*
name|cptr
init|=
operator|&
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
name|FooObject
operator|*
argument_list|>
argument_list|(
name|ptr
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|qobject_cast
argument_list|<
specifier|const
name|FooObject
operator|*
argument_list|>
argument_list|(
name|cptr
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|uniqConnection
name|void
name|tst_QObject
operator|::
name|uniqConnection
parameter_list|()
block|{
name|SenderObject
modifier|*
name|s
init|=
operator|new
name|SenderObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r1
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r2
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|ReceiverObject
operator|::
name|sequence
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r2
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot3
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal3
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot3
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|sequence_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|sequence_slot1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|sequence_slot3
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|ReceiverObject
operator|::
name|sequence
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal4
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal4
argument_list|()
argument_list|)
argument_list|,
name|r2
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal4
argument_list|()
argument_list|)
argument_list|,
name|r2
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|r2
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal4
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|sequence_slot4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|sequence_slot4
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|ReceiverObject
operator|::
name|sequence
operator|=
literal|0
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal4
argument_list|()
argument_list|)
argument_list|,
name|r1
argument_list|,
name|SLOT
argument_list|(
name|slot4
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot4
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|sequence_slot4
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|sequence_slot4
argument_list|,
literal|2
argument_list|)
expr_stmt|;
operator|delete
name|s
expr_stmt|;
operator|delete
name|r1
expr_stmt|;
operator|delete
name|r2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|interfaceIid
name|void
name|tst_QObject
operator|::
name|interfaceIid
parameter_list|()
block|{
name|QCOMPARE
argument_list|(
name|QByteArray
argument_list|(
name|qobject_interface_iid
argument_list|<
name|Foo
operator|::
name|Bleh
operator|*
argument_list|>
argument_list|()
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
name|Bleh_iid
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QByteArray
argument_list|(
name|qobject_interface_iid
argument_list|<
name|Foo
operator|::
name|Bar
operator|*
argument_list|>
argument_list|()
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"com.qtest.foobar"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QByteArray
argument_list|(
name|qobject_interface_iid
argument_list|<
name|FooObject
operator|*
argument_list|>
argument_list|()
argument_list|)
argument_list|,
name|QByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteQObjectWhenDeletingEvent
name|void
name|tst_QObject
operator|::
name|deleteQObjectWhenDeletingEvent
parameter_list|()
block|{
comment|//this is related to task 259514
comment|//before the fix this used to dead lock when the QObject from the event was destroyed
struct|struct
name|MyEvent
super|:
specifier|public
name|QEvent
block|{
name|MyEvent
parameter_list|()
member_init_list|:
name|QEvent
argument_list|(
name|QEvent
operator|::
name|User
argument_list|)
block|{ }
name|QObject
name|obj
decl_stmt|;
block|}
struct|;
name|QObject
name|o
decl_stmt|;
name|QApplication
operator|::
name|postEvent
argument_list|(
operator|&
name|o
argument_list|,
operator|new
name|MyEvent
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|removePostedEvents
argument_list|(
operator|&
name|o
argument_list|)
expr_stmt|;
comment|// here you would get a deadlock
block|}
end_function
begin_class
DECL|class|OverloadObject
class|class
name|OverloadObject
super|:
specifier|public
name|QObject
block|{
friend|friend
class_decl|class
name|tst_QObject
class_decl|;
name|Q_OBJECT
signals|signals:
name|void
name|sig
parameter_list|(
name|int
name|i
parameter_list|,
name|char
name|c
parameter_list|,
name|qreal
name|m
init|=
literal|12
parameter_list|)
function_decl|;
name|void
name|sig
parameter_list|(
name|int
name|i
parameter_list|,
name|int
name|j
init|=
literal|12
parameter_list|)
function_decl|;
name|void
name|sig
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
name|QObject
modifier|*
name|p
parameter_list|,
name|QObject
modifier|*
name|q
init|=
literal|0
parameter_list|,
name|QObject
modifier|*
name|r
init|=
literal|0
parameter_list|)
specifier|const
function_decl|;
name|void
name|other
parameter_list|(
name|int
name|a
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|sig
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
name|OverloadObject
modifier|*
name|p
init|=
literal|0
parameter_list|,
name|QObject
modifier|*
name|q
init|=
literal|0
parameter_list|,
name|QObject
modifier|*
name|r
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|sig
parameter_list|(
name|double
name|r
init|=
literal|0.5
parameter_list|)
function_decl|;
public|public
name|slots
public|:
DECL|function|slo
name|void
name|slo
parameter_list|(
name|int
name|i
parameter_list|,
name|int
name|j
init|=
literal|43
parameter_list|)
block|{
name|s_num
operator|+=
literal|1
expr_stmt|;
name|i1_num
operator|=
name|i
expr_stmt|;
name|i2_num
operator|=
name|j
expr_stmt|;
block|}
DECL|function|slo
name|void
name|slo
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
name|QObject
modifier|*
name|p
init|=
name|qApp
parameter_list|,
name|QObject
modifier|*
name|q
init|=
name|qApp
parameter_list|,
name|QObject
modifier|*
name|r
init|=
name|qApp
parameter_list|)
block|{
name|s_num
operator|+=
literal|10
expr_stmt|;
name|o1_obj
operator|=
name|o
expr_stmt|;
name|o2_obj
operator|=
name|p
expr_stmt|;
name|o3_obj
operator|=
name|q
expr_stmt|;
name|o4_obj
operator|=
name|r
expr_stmt|;
block|}
DECL|function|slo
name|void
name|slo
parameter_list|()
block|{
name|s_num
operator|+=
literal|100
expr_stmt|;
block|}
public|public:
DECL|member|s_num
name|int
name|s_num
decl_stmt|;
DECL|member|i1_num
name|int
name|i1_num
decl_stmt|;
DECL|member|i2_num
name|int
name|i2_num
decl_stmt|;
DECL|member|o1_obj
name|QObject
modifier|*
name|o1_obj
decl_stmt|;
DECL|member|o2_obj
name|QObject
modifier|*
name|o2_obj
decl_stmt|;
DECL|member|o3_obj
name|QObject
modifier|*
name|o3_obj
decl_stmt|;
DECL|member|o4_obj
name|QObject
modifier|*
name|o4_obj
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|overloads
name|void
name|tst_QObject
operator|::
name|overloads
parameter_list|()
block|{
name|OverloadObject
name|obj1
decl_stmt|;
name|OverloadObject
name|obj2
decl_stmt|;
name|QObject
name|obj3
decl_stmt|;
name|obj1
operator|.
name|s_num
operator|=
literal|0
expr_stmt|;
name|obj2
operator|.
name|s_num
operator|=
literal|0
expr_stmt|;
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL
argument_list|(
name|sig
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
operator|&
name|obj1
argument_list|,
name|SLOT
argument_list|(
name|slo
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL
argument_list|(
name|sig
argument_list|(
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
operator|&
name|obj1
argument_list|,
name|SLOT
argument_list|(
name|slo
argument_list|(
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL
argument_list|(
name|sig
argument_list|(
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
operator|&
name|obj2
argument_list|,
name|SLOT
argument_list|(
name|slo
argument_list|(
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL
argument_list|(
name|sig
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
operator|&
name|obj2
argument_list|,
name|SLOT
argument_list|(
name|slo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL
argument_list|(
name|sig
argument_list|(
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
operator|&
name|obj2
argument_list|,
name|SLOT
argument_list|(
name|slo
argument_list|(
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
literal|0.5
argument_list|)
emit|;
comment|//connected to nothing
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|)
emit|;
comment|//connected to nothing
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|s_num
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|s_num
argument_list|,
literal|0
argument_list|)
expr_stmt|;
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
literal|1
argument_list|)
emit|;
comment|//this signal is connected
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|s_num
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|i1_num
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|i2_num
argument_list|,
literal|43
argument_list|)
expr_stmt|;
comment|//default argument of the slot
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|s_num
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|i1_num
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|i2_num
argument_list|,
literal|12
argument_list|)
expr_stmt|;
comment|//default argument of the signal
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
operator|&
name|obj2
argument_list|)
emit|;
comment|//this signal is conencted to obj2
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|s_num
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|s_num
argument_list|,
literal|101
argument_list|)
expr_stmt|;
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
operator|&
name|obj2
argument_list|,
operator|&
name|obj3
argument_list|)
emit|;
comment|//this signal is connected
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|s_num
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|o1_obj
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|o2_obj
argument_list|,
operator|&
name|obj3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|o3_obj
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
comment|//default arg of the signal
name|QCOMPARE
argument_list|(
name|obj1
operator|.
name|o4_obj
argument_list|,
operator|(
name|QObject
operator|*
operator|)
name|qApp
argument_list|)
expr_stmt|;
comment|//default arg of the slot
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|s_num
argument_list|,
literal|111
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|o1_obj
argument_list|,
operator|(
name|QObject
operator|*
operator|)
operator|&
name|obj2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|o2_obj
argument_list|,
operator|&
name|obj3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|o3_obj
argument_list|,
operator|(
name|QObject
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
comment|//default arg of the signal
name|QCOMPARE
argument_list|(
name|obj2
operator|.
name|o4_obj
argument_list|,
operator|(
name|QObject
operator|*
operator|)
name|qApp
argument_list|)
expr_stmt|;
comment|//default arg of the slot
block|}
end_function
begin_class
DECL|class|ManySignals
class|class
name|ManySignals
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
friend|friend
class_decl|class
name|tst_QObject
class_decl|;
signals|signals:
name|void
name|sig00
parameter_list|()
function_decl|;
name|void
name|sig01
parameter_list|()
function_decl|;
name|void
name|sig02
parameter_list|()
function_decl|;
name|void
name|sig03
parameter_list|()
function_decl|;
name|void
name|sig04
parameter_list|()
function_decl|;
name|void
name|sig05
parameter_list|()
function_decl|;
name|void
name|sig06
parameter_list|()
function_decl|;
name|void
name|sig07
parameter_list|()
function_decl|;
name|void
name|sig08
parameter_list|()
function_decl|;
name|void
name|sig09
parameter_list|()
function_decl|;
name|void
name|sig10
parameter_list|()
function_decl|;
name|void
name|sig11
parameter_list|()
function_decl|;
name|void
name|sig12
parameter_list|()
function_decl|;
name|void
name|sig13
parameter_list|()
function_decl|;
name|void
name|sig14
parameter_list|()
function_decl|;
name|void
name|sig15
parameter_list|()
function_decl|;
name|void
name|sig16
parameter_list|()
function_decl|;
name|void
name|sig17
parameter_list|()
function_decl|;
name|void
name|sig18
parameter_list|()
function_decl|;
name|void
name|sig19
parameter_list|()
function_decl|;
name|void
name|sig20
parameter_list|()
function_decl|;
name|void
name|sig21
parameter_list|()
function_decl|;
name|void
name|sig22
parameter_list|()
function_decl|;
name|void
name|sig23
parameter_list|()
function_decl|;
name|void
name|sig24
parameter_list|()
function_decl|;
name|void
name|sig25
parameter_list|()
function_decl|;
name|void
name|sig26
parameter_list|()
function_decl|;
name|void
name|sig27
parameter_list|()
function_decl|;
name|void
name|sig28
parameter_list|()
function_decl|;
name|void
name|sig29
parameter_list|()
function_decl|;
name|void
name|sig30
parameter_list|()
function_decl|;
name|void
name|sig31
parameter_list|()
function_decl|;
name|void
name|sig32
parameter_list|()
function_decl|;
name|void
name|sig33
parameter_list|()
function_decl|;
name|void
name|sig34
parameter_list|()
function_decl|;
name|void
name|sig35
parameter_list|()
function_decl|;
name|void
name|sig36
parameter_list|()
function_decl|;
name|void
name|sig37
parameter_list|()
function_decl|;
name|void
name|sig38
parameter_list|()
function_decl|;
name|void
name|sig39
parameter_list|()
function_decl|;
name|void
name|sig40
parameter_list|()
function_decl|;
name|void
name|sig41
parameter_list|()
function_decl|;
name|void
name|sig42
parameter_list|()
function_decl|;
name|void
name|sig43
parameter_list|()
function_decl|;
name|void
name|sig44
parameter_list|()
function_decl|;
name|void
name|sig45
parameter_list|()
function_decl|;
name|void
name|sig46
parameter_list|()
function_decl|;
name|void
name|sig47
parameter_list|()
function_decl|;
name|void
name|sig48
parameter_list|()
function_decl|;
name|void
name|sig49
parameter_list|()
function_decl|;
name|void
name|sig50
parameter_list|()
function_decl|;
name|void
name|sig51
parameter_list|()
function_decl|;
name|void
name|sig52
parameter_list|()
function_decl|;
name|void
name|sig53
parameter_list|()
function_decl|;
name|void
name|sig54
parameter_list|()
function_decl|;
name|void
name|sig55
parameter_list|()
function_decl|;
name|void
name|sig56
parameter_list|()
function_decl|;
name|void
name|sig57
parameter_list|()
function_decl|;
name|void
name|sig58
parameter_list|()
function_decl|;
name|void
name|sig59
parameter_list|()
function_decl|;
name|void
name|sig60
parameter_list|()
function_decl|;
name|void
name|sig61
parameter_list|()
function_decl|;
name|void
name|sig62
parameter_list|()
function_decl|;
name|void
name|sig63
parameter_list|()
function_decl|;
name|void
name|sig64
parameter_list|()
function_decl|;
name|void
name|sig65
parameter_list|()
function_decl|;
name|void
name|sig66
parameter_list|()
function_decl|;
name|void
name|sig67
parameter_list|()
function_decl|;
name|void
name|sig68
parameter_list|()
function_decl|;
name|void
name|sig69
parameter_list|()
function_decl|;
public|public
name|slots
public|:
DECL|function|received
name|void
name|received
parameter_list|()
block|{
name|rec
operator|++
expr_stmt|;
block|}
public|public:
DECL|member|rec
name|int
name|rec
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|isSignalConnected
name|void
name|tst_QObject
operator|::
name|isSignalConnected
parameter_list|()
block|{
name|ManySignals
name|o
decl_stmt|;
name|o
operator|.
name|rec
operator|=
literal|0
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QObjectPrivate
modifier|*
name|priv
init|=
name|QObjectPrivate
operator|::
name|get
argument_list|(
operator|&
name|o
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"destroyed()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig00()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig05()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig15()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig29()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig60()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig61()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig00
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig69
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig34
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig03
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig69
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig34
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig03
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig18
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"destroyed()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig05()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig15()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig29()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig00()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig03()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig34()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig69()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig18()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig18
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig29
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig29
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig62
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig62
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig28
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig28
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig27
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig18()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig62()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig28()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig69()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig27()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|o
operator|.
name|rec
argument_list|,
literal|0
argument_list|)
expr_stmt|;
emit|emit
name|o
operator|.
name|sig01
argument_list|()
emit|;
emit|emit
name|o
operator|.
name|sig34
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|rec
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|o
argument_list|,
name|SIGNAL
argument_list|(
name|sig27
argument_list|()
argument_list|)
argument_list|,
operator|&
name|o
argument_list|,
name|SLOT
argument_list|(
name|received
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_BUILD_INTERNAL
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig00()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig03()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig34()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig18()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig62()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig28()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig69()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig27()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig04()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig21()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig25()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig55()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|priv
operator|->
name|isSignalConnected
argument_list|(
name|priv
operator|->
name|signalIndex
argument_list|(
literal|"sig61()"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
emit|emit
name|o
operator|.
name|sig00
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|rec
argument_list|,
literal|1
argument_list|)
expr_stmt|;
emit|emit
name|o
operator|.
name|sig69
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|rec
argument_list|,
literal|2
argument_list|)
expr_stmt|;
emit|emit
name|o
operator|.
name|sig36
argument_list|()
emit|;
name|QCOMPARE
argument_list|(
name|o
operator|.
name|rec
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qMetaObjectConnect
name|void
name|tst_QObject
operator|::
name|qMetaObjectConnect
parameter_list|()
block|{
name|SenderObject
modifier|*
name|s
init|=
operator|new
name|SenderObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r1
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r2
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|ReceiverObject
operator|::
name|sequence
operator|=
literal|0
expr_stmt|;
name|int
name|signal1Index
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signal1()"
argument_list|)
decl_stmt|;
name|int
name|signal3Index
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signal3()"
argument_list|)
decl_stmt|;
name|int
name|slot1Index
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSlot
argument_list|(
literal|"slot1()"
argument_list|)
decl_stmt|;
name|int
name|slot2Index
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSlot
argument_list|(
literal|"slot2()"
argument_list|)
decl_stmt|;
name|int
name|slot3Index
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSlot
argument_list|(
literal|"slot3()"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|slot1Index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|slot2Index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|slot3Index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|signal1Index
argument_list|,
name|r1
argument_list|,
name|slot1Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r2
argument_list|,
name|slot3Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
operator|-
literal|1
argument_list|,
name|r2
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|signal1Index
argument_list|,
name|r1
argument_list|,
name|slot1Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r2
argument_list|,
name|slot3Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
operator|-
literal|1
argument_list|,
name|r2
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal4
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//some "dynamic" signal
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|methodOffset
argument_list|()
operator|+
literal|20
argument_list|,
name|r1
argument_list|,
name|slot3Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|methodOffset
argument_list|()
operator|+
literal|35
argument_list|,
name|r2
argument_list|,
name|slot1Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
operator|-
literal|1
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|void
modifier|*
name|args
index|[]
init|=
block|{
literal|0
block|,
literal|0
block|}
decl_stmt|;
name|QMetaObject
operator|::
name|activate
argument_list|(
name|s
argument_list|,
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|methodOffset
argument_list|()
operator|+
literal|20
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|activate
argument_list|(
name|s
argument_list|,
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|methodOffset
argument_list|()
operator|+
literal|48
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|activate
argument_list|(
name|s
argument_list|,
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|methodOffset
argument_list|()
operator|+
literal|35
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|s
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
DECL|macro|SIGNAL_INDEX
define|#
directive|define
name|SIGNAL_INDEX
parameter_list|(
name|S
parameter_list|)
value|obj1.metaObject()->indexOfSignal(QMetaObject::normalizedSignature(#S))
name|OverloadObject
name|obj1
decl_stmt|;
name|QObject
name|obj2
decl_stmt|,
name|obj3
decl_stmt|;
name|QMetaObject
operator|::
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL_INDEX
argument_list|(
name|sig
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|r1
argument_list|,
name|slot1Index
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL_INDEX
argument_list|(
name|sig
argument_list|(
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|r2
argument_list|,
name|slot1Index
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL_INDEX
argument_list|(
name|sig
argument_list|(
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|,
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL_INDEX
argument_list|(
name|sig
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|r2
argument_list|,
name|slot2Index
argument_list|)
expr_stmt|;
name|QMetaObject
operator|::
name|connect
argument_list|(
operator|&
name|obj1
argument_list|,
name|SIGNAL_INDEX
argument_list|(
name|sig
argument_list|(
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|r1
argument_list|,
name|slot3Index
argument_list|)
expr_stmt|;
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
literal|0.5
argument_list|)
emit|;
comment|//connected to nothing
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
literal|1
argument_list|,
literal|'a'
argument_list|)
emit|;
comment|//connected to nothing
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
literal|1
argument_list|)
emit|;
comment|//this signal is connected
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
operator|&
name|obj2
argument_list|)
emit|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
emit|emit
name|obj1
operator|.
name|sig
argument_list|(
operator|&
name|obj2
argument_list|,
operator|&
name|obj3
argument_list|)
emit|;
comment|//this signal is connected
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r2
operator|->
name|count_slot3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|r1
expr_stmt|;
operator|delete
name|r2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qMetaObjectDisconnectOne
name|void
name|tst_QObject
operator|::
name|qMetaObjectDisconnectOne
parameter_list|()
block|{
name|SenderObject
modifier|*
name|s
init|=
operator|new
name|SenderObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r1
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|int
name|signal1Index
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signal1()"
argument_list|)
decl_stmt|;
name|int
name|signal3Index
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSignal
argument_list|(
literal|"signal3()"
argument_list|)
decl_stmt|;
name|int
name|slot1Index
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSlot
argument_list|(
literal|"slot1()"
argument_list|)
decl_stmt|;
name|int
name|slot2Index
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfSlot
argument_list|(
literal|"slot2()"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|signal1Index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|signal3Index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|slot1Index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|slot2Index
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|signal1Index
argument_list|,
name|r1
argument_list|,
name|slot1Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|connect
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|disconnectOne
argument_list|(
name|s
argument_list|,
name|signal1Index
argument_list|,
name|r1
argument_list|,
name|slot1Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|disconnectOne
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
operator|==
name|QMetaObject
operator|::
name|disconnectOne
argument_list|(
name|s
argument_list|,
name|signal1Index
argument_list|,
name|r1
argument_list|,
name|slot1Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|disconnectOne
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
literal|false
operator|==
name|QMetaObject
operator|::
name|disconnectOne
argument_list|(
name|s
argument_list|,
name|signal1Index
argument_list|,
name|r1
argument_list|,
name|slot1Index
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QMetaObject
operator|::
name|disconnectOne
argument_list|(
name|s
argument_list|,
name|signal3Index
argument_list|,
name|r1
argument_list|,
name|slot2Index
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r1
operator|->
name|count_slot2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|s
expr_stmt|;
operator|delete
name|r1
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ConfusingObject
class|class
name|ConfusingObject
super|:
specifier|public
name|SenderObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
DECL|function|signal1
name|void
name|signal1
parameter_list|()
block|{
name|s
operator|++
expr_stmt|;
block|}
signals|signals:
name|void
name|aPublicSlot
parameter_list|()
function_decl|;
public|public:
DECL|member|s
name|int
name|s
decl_stmt|;
DECL|function|ConfusingObject
name|ConfusingObject
parameter_list|()
member_init_list|:
name|s
argument_list|(
literal|0
argument_list|)
block|{}
friend|friend
class_decl|class
name|tst_QObject
class_decl|;
block|}
class|;
end_class
begin_function
DECL|function|sameName
name|void
name|tst_QObject
operator|::
name|sameName
parameter_list|()
block|{
name|ConfusingObject
name|c1
decl_stmt|,
name|c2
decl_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|c1
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|c1
argument_list|,
name|SLOT
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|c1
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c1
operator|.
name|s
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|c2
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|c1
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|c2
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c1
operator|.
name|s
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|c2
argument_list|,
name|SIGNAL
argument_list|(
name|aPublicSlot
argument_list|()
argument_list|)
argument_list|,
operator|&
name|c1
argument_list|,
name|SLOT
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|c2
operator|.
name|aPublicSlot
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c2
operator|.
name|aPublicSlotCalled
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c1
operator|.
name|aPublicSlotCalled
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c1
operator|.
name|s
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|c2
argument_list|,
name|SIGNAL
argument_list|(
name|aPublicSlot
argument_list|()
argument_list|)
argument_list|,
operator|&
name|c1
argument_list|,
name|SLOT
argument_list|(
name|aPublicSlot
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|c2
operator|.
name|aPublicSlot
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c2
operator|.
name|aPublicSlotCalled
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c1
operator|.
name|aPublicSlotCalled
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c1
operator|.
name|s
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectByMetaMethods
name|void
name|tst_QObject
operator|::
name|connectByMetaMethods
parameter_list|()
block|{
name|SenderObject
name|s
decl_stmt|;
name|ReceiverObject
name|r
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|smeta
init|=
name|s
operator|.
name|metaObject
argument_list|()
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|rmeta
init|=
name|r
operator|.
name|metaObject
argument_list|()
decl_stmt|;
name|int
name|sigIndx
init|=
name|smeta
operator|->
name|indexOfSignal
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
literal|"signal1()"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|slotIndx
init|=
name|rmeta
operator|->
name|indexOfSlot
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
literal|"slot1()"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|sigIndx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|slotIndx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QMetaMethod
name|signal
init|=
name|smeta
operator|->
name|method
argument_list|(
name|sigIndx
argument_list|)
decl_stmt|;
name|QMetaMethod
name|slot
init|=
name|rmeta
operator|->
name|method
argument_list|(
name|slotIndx
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|connect
argument_list|(
operator|&
name|s
argument_list|,
name|signal
argument_list|,
operator|&
name|r
argument_list|,
name|slot
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectByMetaMethodSlotInsteadOfSignal
name|void
name|tst_QObject
operator|::
name|connectByMetaMethodSlotInsteadOfSignal
parameter_list|()
block|{
name|SenderObject
name|s
decl_stmt|;
name|ReceiverObject
name|r
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|smeta
init|=
name|s
operator|.
name|metaObject
argument_list|()
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|rmeta
init|=
name|r
operator|.
name|metaObject
argument_list|()
decl_stmt|;
name|int
name|badIndx
init|=
name|smeta
operator|->
name|indexOfSlot
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
literal|"aPublicSlot()"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|slotIndx
init|=
name|rmeta
operator|->
name|indexOfSlot
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
literal|"slot1()"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|badIndx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|slotIndx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QMetaMethod
name|badMethod
init|=
name|smeta
operator|->
name|method
argument_list|(
name|badIndx
argument_list|)
decl_stmt|;
name|QMetaMethod
name|slot
init|=
name|rmeta
operator|->
name|method
argument_list|(
name|slotIndx
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QObject::connect: Cannot connect SenderObject::aPublicSlot() to ReceiverObject::slot1()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|connect
argument_list|(
operator|&
name|s
argument_list|,
name|badMethod
argument_list|,
operator|&
name|r
argument_list|,
name|slot
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|Constructable
class|class
name|Constructable
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|Constructable
name|Q_INVOKABLE
name|Constructable
parameter_list|()
block|{}
block|}
class|;
end_class
begin_function
DECL|function|connectConstructorByMetaMethod
name|void
name|tst_QObject
operator|::
name|connectConstructorByMetaMethod
parameter_list|()
block|{
name|Constructable
name|sc
decl_stmt|;
name|Constructable
name|rc
decl_stmt|;
name|SenderObject
name|s
decl_stmt|;
name|ReceiverObject
name|r
decl_stmt|;
specifier|const
name|QMetaObject
name|cmeta
init|=
name|Constructable
operator|::
name|staticMetaObject
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|smeta
init|=
name|s
operator|.
name|metaObject
argument_list|()
decl_stmt|;
specifier|const
name|QMetaObject
modifier|*
name|rmeta
init|=
name|r
operator|.
name|metaObject
argument_list|()
decl_stmt|;
name|int
name|constructorIndx
init|=
name|cmeta
operator|.
name|indexOfConstructor
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
literal|"Constructable()"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|sigIndx
init|=
name|smeta
operator|->
name|indexOfSignal
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
literal|"signal1()"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|slotIndx
init|=
name|rmeta
operator|->
name|indexOfSlot
argument_list|(
name|QMetaObject
operator|::
name|normalizedSignature
argument_list|(
literal|"slot1()"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|constructorIndx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|sigIndx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|slotIndx
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QMetaMethod
name|constructor
init|=
name|cmeta
operator|.
name|constructor
argument_list|(
name|constructorIndx
argument_list|)
decl_stmt|;
name|QMetaMethod
name|signal
init|=
name|smeta
operator|->
name|method
argument_list|(
name|sigIndx
argument_list|)
decl_stmt|;
name|QMetaMethod
name|slot
init|=
name|rmeta
operator|->
name|method
argument_list|(
name|slotIndx
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QObject::connect: Cannot connect Constructable::Constructable() to ReceiverObject::slot1()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|connect
argument_list|(
operator|&
name|sc
argument_list|,
name|constructor
argument_list|,
operator|&
name|r
argument_list|,
name|slot
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QObject::connect: Cannot connect SenderObject::signal1() to Constructable::Constructable()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|connect
argument_list|(
operator|&
name|s
argument_list|,
name|signal
argument_list|,
operator|&
name|rc
argument_list|,
name|constructor
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QObject::connect: Cannot connect Constructable::Constructable() to Constructable::Constructable()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|connect
argument_list|(
operator|&
name|sc
argument_list|,
name|constructor
argument_list|,
operator|&
name|rc
argument_list|,
name|constructor
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|disconnectByMetaMethod
name|void
name|tst_QObject
operator|::
name|disconnectByMetaMethod
parameter_list|()
block|{
name|SenderObject
modifier|*
name|s
init|=
operator|new
name|SenderObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r1
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|r2
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|QMetaMethod
name|signal1
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"signal1()"
argument_list|)
argument_list|)
decl_stmt|;
name|QMetaMethod
name|signal2
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"signal2()"
argument_list|)
argument_list|)
decl_stmt|;
name|QMetaMethod
name|signal3
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"signal3()"
argument_list|)
argument_list|)
decl_stmt|;
name|QMetaMethod
name|signal4
init|=
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|s
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"signal4()"
argument_list|)
argument_list|)
decl_stmt|;
name|QMetaMethod
name|slot1
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"slot1()"
argument_list|)
argument_list|)
decl_stmt|;
name|QMetaMethod
name|slot2
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"slot2()"
argument_list|)
argument_list|)
decl_stmt|;
name|QMetaMethod
name|slot3
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"slot3()"
argument_list|)
argument_list|)
decl_stmt|;
name|QMetaMethod
name|slot4
init|=
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|r1
operator|->
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"slot4()"
argument_list|)
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// usual disconnect with all parameters given
name|bool
name|ret
init|=
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot1
argument_list|)
decl_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|ret
argument_list|)
expr_stmt|;
name|ret
operator|=
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|ret
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot2
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot3
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal2
argument_list|,
name|r1
argument_list|,
name|slot4
argument_list|)
expr_stmt|;
comment|// disconnect s's signal1() from all slots of r1
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|QMetaMethod
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r1
operator|->
name|called
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// make sure all is disconnected again
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
literal|0
argument_list|,
name|r1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r2
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal2
argument_list|,
name|r1
argument_list|,
name|slot2
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal2
argument_list|,
name|r2
argument_list|,
name|slot2
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal3
argument_list|,
name|r1
argument_list|,
name|slot3
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal3
argument_list|,
name|r2
argument_list|,
name|slot3
argument_list|)
expr_stmt|;
comment|// disconnect signal1() from all receivers
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
literal|0
argument_list|,
name|QMetaMethod
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal2
argument_list|()
expr_stmt|;
name|s
operator|->
name|emitSignal3
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r2
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|r1
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|r1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|r2
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// disconnect all signals of s from all receivers
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r1
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|s
argument_list|,
name|signal1
argument_list|,
name|r2
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
comment|// disconnect all signals from slot1 of r1
name|QObject
operator|::
name|disconnect
argument_list|(
name|s
argument_list|,
name|QMetaMethod
argument_list|()
argument_list|,
name|r1
argument_list|,
name|slot1
argument_list|)
expr_stmt|;
name|s
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r1
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|r2
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|r2
expr_stmt|;
operator|delete
name|r1
expr_stmt|;
operator|delete
name|s
expr_stmt|;
block|}
end_function
begin_function
DECL|function|disconnectNotSignalMetaMethod
name|void
name|tst_QObject
operator|::
name|disconnectNotSignalMetaMethod
parameter_list|()
block|{
name|SenderObject
name|s
decl_stmt|;
name|ReceiverObject
name|r
decl_stmt|;
name|connect
argument_list|(
operator|&
name|s
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
operator|&
name|r
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QMetaMethod
name|slot
init|=
name|s
operator|.
name|metaObject
argument_list|()
operator|->
name|method
argument_list|(
name|s
operator|.
name|metaObject
argument_list|()
operator|->
name|indexOfMethod
argument_list|(
literal|"aPublicSlot()"
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"Object::disconnect: Attempt to unbind non-signal SenderObject::aPublicSlot()"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QObject
operator|::
name|disconnect
argument_list|(
operator|&
name|s
argument_list|,
name|slot
argument_list|,
operator|&
name|r
argument_list|,
name|QMetaMethod
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ThreadAffinityThread
class|class
name|ThreadAffinityThread
super|:
specifier|public
name|QThread
block|{
public|public:
DECL|member|sender
name|SenderObject
modifier|*
name|sender
decl_stmt|;
DECL|function|ThreadAffinityThread
name|ThreadAffinityThread
parameter_list|(
name|SenderObject
modifier|*
name|sender
parameter_list|)
member_init_list|:
name|sender
argument_list|(
name|sender
argument_list|)
block|{ }
DECL|function|run
name|void
name|run
parameter_list|()
block|{
name|sender
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|autoConnectionBehavior
name|void
name|tst_QObject
operator|::
name|autoConnectionBehavior
parameter_list|()
block|{
name|SenderObject
modifier|*
name|sender
init|=
operator|new
name|SenderObject
decl_stmt|;
name|ReceiverObject
modifier|*
name|receiver
init|=
operator|new
name|ReceiverObject
decl_stmt|;
name|connect
argument_list|(
name|sender
argument_list|,
name|SIGNAL
argument_list|(
name|signal1
argument_list|()
argument_list|)
argument_list|,
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|slot1
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// at emit, currentThread == sender->thread(), currentThread == receiver->thread(), sender->thread() == receiver->thread()
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|sender
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// at emit, currentThread != sender->thread(), currentThread != receiver->thread(), sender->thread() == receiver->thread()
name|ThreadAffinityThread
name|emitThread1
argument_list|(
name|sender
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|emitThread1
operator|.
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|emitThread1
operator|.
name|wait
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|(
name|receiver
argument_list|,
name|QEvent
operator|::
name|MetaCall
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// at emit, currentThread == sender->thread(), currentThread != receiver->thread(), sender->thread() != receiver->thread()
name|sender
operator|->
name|moveToThread
argument_list|(
operator|&
name|emitThread1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|emitThread1
operator|.
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|emitThread1
operator|.
name|wait
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|(
name|receiver
argument_list|,
name|QEvent
operator|::
name|MetaCall
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// at emit, currentThread != sender->thread(), currentThread == receiver->thread(), sender->thread() != receiver->thread()
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|sender
operator|->
name|emitSignal1
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// at emit, currentThread != sender->thread(), currentThread != receiver->thread(), sender->thread() != receiver->thread()
name|ThreadAffinityThread
name|emitThread2
argument_list|(
name|sender
argument_list|)
decl_stmt|;
name|QThread
name|receiverThread
decl_stmt|;
name|QTimer
modifier|*
name|timer
init|=
operator|new
name|QTimer
decl_stmt|;
name|timer
operator|->
name|setSingleShot
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|timer
operator|->
name|setInterval
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|receiverThread
argument_list|,
name|SIGNAL
argument_list|(
name|started
argument_list|()
argument_list|)
argument_list|,
name|timer
argument_list|,
name|SLOT
argument_list|(
name|start
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|timer
argument_list|,
name|SIGNAL
argument_list|(
name|timeout
argument_list|()
argument_list|)
argument_list|,
operator|&
name|receiverThread
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|DirectConnection
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|receiverThread
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|timer
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|timer
operator|->
name|moveToThread
argument_list|(
operator|&
name|receiverThread
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|moveToThread
argument_list|(
operator|&
name|receiverThread
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|emitThread2
operator|.
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|emitThread2
operator|.
name|wait
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|receiverThread
operator|.
name|start
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|receiverThread
operator|.
name|wait
argument_list|(
literal|30000
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|receiver
operator|->
name|called
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|receiver
operator|->
name|reset
argument_list|()
expr_stmt|;
operator|delete
name|sender
expr_stmt|;
operator|delete
name|receiver
expr_stmt|;
block|}
end_function
begin_class
DECL|class|BaseDestroyed
class|class
name|BaseDestroyed
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
DECL|member|fooList
name|QList
argument_list|<
name|QString
argument_list|>
name|fooList
decl_stmt|;
DECL|member|destroyed
name|bool
name|destroyed
decl_stmt|;
public|public:
DECL|function|BaseDestroyed
name|BaseDestroyed
parameter_list|()
member_init_list|:
name|destroyed
argument_list|(
literal|false
argument_list|)
block|{
name|fooList
operator|<<
literal|"a"
operator|<<
literal|"b"
expr_stmt|;
block|}
DECL|function|~BaseDestroyed
name|~
name|BaseDestroyed
parameter_list|()
block|{
name|QVERIFY
argument_list|(
operator|!
name|destroyed
argument_list|)
expr_stmt|;
name|destroyed
operator|=
literal|true
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|slotUseList
name|void
name|slotUseList
parameter_list|()
block|{
name|QVERIFY
argument_list|(
operator|!
name|destroyed
argument_list|)
expr_stmt|;
name|fooList
operator|<<
literal|"c"
operator|<<
literal|"d"
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|baseDestroyed
name|void
name|tst_QObject
operator|::
name|baseDestroyed
parameter_list|()
block|{
name|BaseDestroyed
name|d
decl_stmt|;
name|connect
argument_list|(
operator|&
name|d
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|()
argument_list|)
argument_list|,
operator|&
name|d
argument_list|,
name|SLOT
argument_list|(
name|slotUseList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//When d goes out of scope, slotUseList should not be called as the BaseDestroyed has
comment|// already been destroyed while ~QObject emit destroyed
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QObject
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qobject.moc"
end_include
end_unit
