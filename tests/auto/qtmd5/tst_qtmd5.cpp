begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT_NO_SOLUTIONS
end_ifdef
begin_macro
name|QTEST_NOOP_MAIN
end_macro
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|"qtmd5.h"
end_include
begin_class
DECL|class|tst_QtMD5
class|class
name|tst_QtMD5
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|computeMD5_data
parameter_list|()
function_decl|;
name|void
name|computeMD5
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|computeMD5_data
name|void
name|tst_QtMD5
operator|::
name|computeMD5_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|""
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d41d8cd98f00b204e9800998ecf8427e"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"a"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"0cc175b9c0f1b6a831c399e269772661"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"abc"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"900150983cd24fb0d6963f7d28e17f72"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"message digest"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"f96b697d7cb7938d525a2f31aaf161d0"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"c3fcd3d76192e4007dfb496cca67e13b"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"d174ab98d277d9f5a5611c2c9f419d9f"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QByteArray
argument_list|(
literal|"12345678901234567890123456789012345678901234567890123456789012345678901234567890"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"57edf4a22be3c955ac49da2e2107b67a"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|computeMD5
name|void
name|tst_QtMD5
operator|::
name|computeMD5
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|qtMD5
argument_list|(
name|data
argument_list|)
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QtMD5
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtmd5.moc"
end_include
begin_endif
endif|#
directive|endif
end_endif
end_unit
