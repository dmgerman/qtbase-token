begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtTest/qtesttouch.h>
end_include
begin_include
include|#
directive|include
file|<qevent.h>
end_include
begin_include
include|#
directive|include
file|<qwidget.h>
end_include
begin_include
include|#
directive|include
file|<qlayout.h>
end_include
begin_include
include|#
directive|include
file|<qgesture.h>
end_include
begin_include
include|#
directive|include
file|<qgesturerecognizer.h>
end_include
begin_include
include|#
directive|include
file|<qgraphicsitem.h>
end_include
begin_include
include|#
directive|include
file|<qgraphicswidget.h>
end_include
begin_include
include|#
directive|include
file|<qgraphicsview.h>
end_include
begin_include
include|#
directive|include
file|<qmainwindow.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_function
DECL|function|mapToGlobal
specifier|static
name|QPointF
name|mapToGlobal
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pt
parameter_list|,
name|QGraphicsItem
modifier|*
name|item
parameter_list|,
name|QGraphicsView
modifier|*
name|view
parameter_list|)
block|{
return|return
name|view
operator|->
name|viewport
argument_list|()
operator|->
name|mapToGlobal
argument_list|(
name|view
operator|->
name|mapFromScene
argument_list|(
name|item
operator|->
name|mapToScene
argument_list|(
name|pt
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_class
DECL|class|CustomGesture
class|class
name|CustomGesture
super|:
specifier|public
name|QGesture
block|{
name|Q_OBJECT
public|public:
DECL|member|GestureType
specifier|static
name|Qt
operator|::
name|GestureType
name|GestureType
decl_stmt|;
DECL|function|CustomGesture
name|CustomGesture
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGesture
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|serial
argument_list|(
literal|0
argument_list|)
block|{     }
DECL|member|serial
name|int
name|serial
decl_stmt|;
DECL|member|SerialMaybeThreshold
specifier|static
specifier|const
name|int
name|SerialMaybeThreshold
decl_stmt|;
DECL|member|SerialStartedThreshold
specifier|static
specifier|const
name|int
name|SerialStartedThreshold
decl_stmt|;
DECL|member|SerialFinishedThreshold
specifier|static
specifier|const
name|int
name|SerialFinishedThreshold
decl_stmt|;
block|}
class|;
end_class
begin_decl_stmt
DECL|member|GestureType
name|Qt
operator|::
name|GestureType
name|CustomGesture
operator|::
name|GestureType
init|=
name|Qt
operator|::
name|CustomGesture
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|SerialMaybeThreshold
specifier|const
name|int
name|CustomGesture
operator|::
name|SerialMaybeThreshold
init|=
literal|1
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|SerialStartedThreshold
specifier|const
name|int
name|CustomGesture
operator|::
name|SerialStartedThreshold
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|SerialFinishedThreshold
specifier|const
name|int
name|CustomGesture
operator|::
name|SerialFinishedThreshold
init|=
literal|6
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|CustomEvent
class|class
name|CustomEvent
super|:
specifier|public
name|QEvent
block|{
public|public:
DECL|member|EventType
specifier|static
name|int
name|EventType
decl_stmt|;
DECL|function|CustomEvent
specifier|explicit
name|CustomEvent
parameter_list|(
name|int
name|serial_
init|=
literal|0
parameter_list|)
member_init_list|:
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|CustomEvent
operator|::
name|EventType
argument_list|)
argument_list|)
member_init_list|,
name|serial
argument_list|(
name|serial_
argument_list|)
member_init_list|,
name|hasHotSpot
argument_list|(
literal|false
argument_list|)
block|{     }
DECL|member|serial
name|int
name|serial
decl_stmt|;
DECL|member|hotSpot
name|QPointF
name|hotSpot
decl_stmt|;
DECL|member|hasHotSpot
name|bool
name|hasHotSpot
decl_stmt|;
block|}
class|;
end_class
begin_decl_stmt
DECL|member|EventType
name|int
name|CustomEvent
operator|::
name|EventType
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|CustomGestureRecognizer
class|class
name|CustomGestureRecognizer
super|:
specifier|public
name|QGestureRecognizer
block|{
public|public:
DECL|member|ConsumeEvents
specifier|static
name|bool
name|ConsumeEvents
decl_stmt|;
DECL|function|CustomGestureRecognizer
name|CustomGestureRecognizer
parameter_list|()
block|{
if|if
condition|(
operator|!
name|CustomEvent
operator|::
name|EventType
condition|)
name|CustomEvent
operator|::
name|EventType
operator|=
name|QEvent
operator|::
name|registerEventType
argument_list|()
expr_stmt|;
block|}
DECL|function|create
name|QGesture
modifier|*
name|create
parameter_list|(
name|QObject
modifier|*
parameter_list|)
block|{
return|return
operator|new
name|CustomGesture
return|;
block|}
DECL|function|recognize
name|QGestureRecognizer
operator|::
name|Result
name|recognize
parameter_list|(
name|QGesture
modifier|*
name|state
parameter_list|,
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|CustomEvent
operator|::
name|EventType
condition|)
block|{
name|QGestureRecognizer
operator|::
name|Result
name|result
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|CustomGestureRecognizer
operator|::
name|ConsumeEvents
condition|)
name|result
operator||=
name|QGestureRecognizer
operator|::
name|ConsumeEventHint
expr_stmt|;
name|CustomGesture
modifier|*
name|g
init|=
cast|static_cast
argument_list|<
name|CustomGesture
operator|*
argument_list|>
argument_list|(
name|state
argument_list|)
decl_stmt|;
name|CustomEvent
modifier|*
name|e
init|=
cast|static_cast
argument_list|<
name|CustomEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|g
operator|->
name|serial
operator|=
name|e
operator|->
name|serial
expr_stmt|;
if|if
condition|(
name|e
operator|->
name|hasHotSpot
condition|)
name|g
operator|->
name|setHotSpot
argument_list|(
name|e
operator|->
name|hotSpot
argument_list|)
expr_stmt|;
if|if
condition|(
name|g
operator|->
name|serial
operator|>=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
condition|)
name|result
operator||=
name|QGestureRecognizer
operator|::
name|FinishGesture
expr_stmt|;
elseif|else
if|if
condition|(
name|g
operator|->
name|serial
operator|>=
name|CustomGesture
operator|::
name|SerialStartedThreshold
condition|)
name|result
operator||=
name|QGestureRecognizer
operator|::
name|TriggerGesture
expr_stmt|;
elseif|else
if|if
condition|(
name|g
operator|->
name|serial
operator|>=
name|CustomGesture
operator|::
name|SerialMaybeThreshold
condition|)
name|result
operator||=
name|QGestureRecognizer
operator|::
name|MayBeGesture
expr_stmt|;
else|else
name|result
operator|=
name|QGestureRecognizer
operator|::
name|CancelGesture
expr_stmt|;
return|return
name|result
return|;
block|}
return|return
name|QGestureRecognizer
operator|::
name|Ignore
return|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|(
name|QGesture
modifier|*
name|state
parameter_list|)
block|{
name|CustomGesture
modifier|*
name|g
init|=
cast|static_cast
argument_list|<
name|CustomGesture
operator|*
argument_list|>
argument_list|(
name|state
argument_list|)
decl_stmt|;
name|g
operator|->
name|serial
operator|=
literal|0
expr_stmt|;
name|QGestureRecognizer
operator|::
name|reset
argument_list|(
name|state
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_decl_stmt
DECL|member|ConsumeEvents
name|bool
name|CustomGestureRecognizer
operator|::
name|ConsumeEvents
init|=
literal|false
decl_stmt|;
end_decl_stmt
begin_comment
comment|// same as CustomGestureRecognizer but triggers early without the maybe state
end_comment
begin_class
DECL|class|CustomContinuousGestureRecognizer
class|class
name|CustomContinuousGestureRecognizer
super|:
specifier|public
name|QGestureRecognizer
block|{
public|public:
DECL|function|CustomContinuousGestureRecognizer
name|CustomContinuousGestureRecognizer
parameter_list|()
block|{
if|if
condition|(
operator|!
name|CustomEvent
operator|::
name|EventType
condition|)
name|CustomEvent
operator|::
name|EventType
operator|=
name|QEvent
operator|::
name|registerEventType
argument_list|()
expr_stmt|;
block|}
DECL|function|create
name|QGesture
modifier|*
name|create
parameter_list|(
name|QObject
modifier|*
parameter_list|)
block|{
return|return
operator|new
name|CustomGesture
return|;
block|}
DECL|function|recognize
name|QGestureRecognizer
operator|::
name|Result
name|recognize
parameter_list|(
name|QGesture
modifier|*
name|state
parameter_list|,
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|CustomEvent
operator|::
name|EventType
condition|)
block|{
name|QGestureRecognizer
operator|::
name|Result
name|result
init|=
name|QGestureRecognizer
operator|::
name|ConsumeEventHint
decl_stmt|;
name|CustomGesture
modifier|*
name|g
init|=
cast|static_cast
argument_list|<
name|CustomGesture
operator|*
argument_list|>
argument_list|(
name|state
argument_list|)
decl_stmt|;
name|CustomEvent
modifier|*
name|e
init|=
cast|static_cast
argument_list|<
name|CustomEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|g
operator|->
name|serial
operator|=
name|e
operator|->
name|serial
expr_stmt|;
if|if
condition|(
name|e
operator|->
name|hasHotSpot
condition|)
name|g
operator|->
name|setHotSpot
argument_list|(
name|e
operator|->
name|hotSpot
argument_list|)
expr_stmt|;
if|if
condition|(
name|g
operator|->
name|serial
operator|>=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
condition|)
name|result
operator||=
name|QGestureRecognizer
operator|::
name|FinishGesture
expr_stmt|;
elseif|else
if|if
condition|(
name|g
operator|->
name|serial
operator|>=
name|CustomGesture
operator|::
name|SerialMaybeThreshold
condition|)
name|result
operator||=
name|QGestureRecognizer
operator|::
name|TriggerGesture
expr_stmt|;
else|else
name|result
operator|=
name|QGestureRecognizer
operator|::
name|CancelGesture
expr_stmt|;
return|return
name|result
return|;
block|}
return|return
name|QGestureRecognizer
operator|::
name|Ignore
return|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|(
name|QGesture
modifier|*
name|state
parameter_list|)
block|{
name|CustomGesture
modifier|*
name|g
init|=
cast|static_cast
argument_list|<
name|CustomGesture
operator|*
argument_list|>
argument_list|(
name|state
argument_list|)
decl_stmt|;
name|g
operator|->
name|serial
operator|=
literal|0
expr_stmt|;
name|QGestureRecognizer
operator|::
name|reset
argument_list|(
name|state
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|GestureWidget
class|class
name|GestureWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|GestureWidget
name|GestureWidget
parameter_list|(
specifier|const
name|char
modifier|*
name|name
init|=
literal|0
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
if|if
condition|(
name|name
condition|)
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|reset
argument_list|()
expr_stmt|;
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
block|}
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
name|customEventsReceived
operator|=
literal|0
expr_stmt|;
name|gestureEventsReceived
operator|=
literal|0
expr_stmt|;
name|gestureOverrideEventsReceived
operator|=
literal|0
expr_stmt|;
name|events
operator|.
name|clear
argument_list|()
expr_stmt|;
name|overrideEvents
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ignoredGestures
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|member|customEventsReceived
name|int
name|customEventsReceived
decl_stmt|;
DECL|member|gestureEventsReceived
name|int
name|gestureEventsReceived
decl_stmt|;
DECL|member|gestureOverrideEventsReceived
name|int
name|gestureOverrideEventsReceived
decl_stmt|;
DECL|struct|Events
struct|struct
name|Events
block|{
DECL|member|all
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|all
decl_stmt|;
DECL|member|started
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|started
decl_stmt|;
DECL|member|updated
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|updated
decl_stmt|;
DECL|member|finished
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|finished
decl_stmt|;
DECL|member|canceled
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|canceled
decl_stmt|;
DECL|function|clear
name|void
name|clear
parameter_list|()
block|{
name|all
operator|.
name|clear
argument_list|()
expr_stmt|;
name|started
operator|.
name|clear
argument_list|()
expr_stmt|;
name|updated
operator|.
name|clear
argument_list|()
expr_stmt|;
name|finished
operator|.
name|clear
argument_list|()
expr_stmt|;
name|canceled
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|member|events
DECL|member|overrideEvents
block|}
name|events
struct|,
name|overrideEvents
struct|;
DECL|member|acceptGestureOverride
name|bool
name|acceptGestureOverride
decl_stmt|;
DECL|member|ignoredGestures
name|QSet
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|ignoredGestures
decl_stmt|;
protected|protected:
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
name|Events
modifier|*
name|eventsPtr
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
name|QGestureEvent
modifier|*
name|e
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
operator|++
name|gestureEventsReceived
expr_stmt|;
name|eventsPtr
operator|=
operator|&
name|events
expr_stmt|;
foreach|foreach
control|(
name|Qt
operator|::
name|GestureType
name|type
decl|,
name|ignoredGestures
control|)
name|e
operator|->
name|ignore
argument_list|(
name|e
operator|->
name|gesture
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|GestureOverride
condition|)
block|{
operator|++
name|gestureOverrideEventsReceived
expr_stmt|;
name|eventsPtr
operator|=
operator|&
name|overrideEvents
expr_stmt|;
if|if
condition|(
name|acceptGestureOverride
condition|)
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|eventsPtr
condition|)
block|{
name|QGestureEvent
modifier|*
name|e
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QGesture
modifier|*
argument_list|>
name|gestures
init|=
name|e
operator|->
name|gestures
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|QGesture
modifier|*
name|g
decl|,
name|gestures
control|)
block|{
name|eventsPtr
operator|->
name|all
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|g
operator|->
name|state
argument_list|()
condition|)
block|{
case|case
name|Qt
operator|::
name|GestureStarted
case|:
emit|emit
name|gestureStarted
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
name|eventsPtr
operator|->
name|started
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureUpdated
case|:
emit|emit
name|gestureUpdated
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
name|eventsPtr
operator|->
name|updated
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureFinished
case|:
emit|emit
name|gestureFinished
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
name|eventsPtr
operator|->
name|finished
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureCanceled
case|:
emit|emit
name|gestureCanceled
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
name|eventsPtr
operator|->
name|canceled
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
break|break;
default|default:
name|qWarning
argument_list|()
operator|<<
literal|"Unknown GestureState enum value:"
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|g
operator|->
name|state
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|CustomEvent
operator|::
name|EventType
condition|)
block|{
operator|++
name|customEventsReceived
expr_stmt|;
block|}
else|else
block|{
return|return
name|QWidget
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
return|return
literal|true
return|;
block|}
name|Q_SIGNALS
label|:
name|void
name|gestureStarted
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
name|void
name|gestureUpdated
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
name|void
name|gestureFinished
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
name|void
name|gestureCanceled
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
public|public
name|Q_SLOTS
public|:
DECL|function|deleteThis
name|void
name|deleteThis
parameter_list|()
block|{
operator|delete
name|this
expr_stmt|;
block|}
block|}
class|;
end_class
begin_comment
comment|// TODO rename to sendGestureSequence
end_comment
begin_function
DECL|function|sendCustomGesture
specifier|static
name|void
name|sendCustomGesture
parameter_list|(
name|CustomEvent
modifier|*
name|event
parameter_list|,
name|QObject
modifier|*
name|object
parameter_list|,
name|QGraphicsScene
modifier|*
name|scene
init|=
literal|0
parameter_list|)
block|{
name|QWeakPointer
argument_list|<
name|QObject
argument_list|>
name|receiver
argument_list|(
name|object
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|CustomGesture
operator|::
name|SerialMaybeThreshold
init|;
name|i
operator|<=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|&&
name|receiver
condition|;
operator|++
name|i
control|)
block|{
name|event
operator|->
name|serial
operator|=
name|i
expr_stmt|;
if|if
condition|(
name|scene
condition|)
name|scene
operator|->
name|sendEvent
argument_list|(
name|qobject_cast
argument_list|<
name|QGraphicsObject
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
argument_list|,
name|event
argument_list|)
expr_stmt|;
else|else
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|object
argument_list|,
name|event
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_class
DECL|class|tst_Gestures
class|class
name|tst_Gestures
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_Gestures
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_Gestures
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|customGesture
parameter_list|()
function_decl|;
name|void
name|autoCancelingGestures
parameter_list|()
function_decl|;
name|void
name|gestureOverChild
parameter_list|()
function_decl|;
name|void
name|multipleWidgetOnlyGestureInTree
parameter_list|()
function_decl|;
name|void
name|conflictingGestures
parameter_list|()
function_decl|;
name|void
name|conflictingGesturesInGraphicsView
parameter_list|()
function_decl|;
name|void
name|finishedWithoutStarted
parameter_list|()
function_decl|;
name|void
name|unknownGesture
parameter_list|()
function_decl|;
name|void
name|graphicsItemGesture
parameter_list|()
function_decl|;
name|void
name|graphicsView
parameter_list|()
function_decl|;
name|void
name|graphicsItemTreeGesture
parameter_list|()
function_decl|;
name|void
name|explicitGraphicsObjectTarget
parameter_list|()
function_decl|;
name|void
name|gestureOverChildGraphicsItem
parameter_list|()
function_decl|;
name|void
name|twoGesturesOnDifferentLevel
parameter_list|()
function_decl|;
name|void
name|multipleGesturesInTree
parameter_list|()
function_decl|;
name|void
name|multipleGesturesInComplexTree
parameter_list|()
function_decl|;
name|void
name|testMapToScene
parameter_list|()
function_decl|;
name|void
name|ungrabGesture
parameter_list|()
function_decl|;
name|void
name|consumeEventHint
parameter_list|()
function_decl|;
name|void
name|unregisterRecognizer
parameter_list|()
function_decl|;
name|void
name|autoCancelGestures
parameter_list|()
function_decl|;
name|void
name|autoCancelGestures2
parameter_list|()
function_decl|;
name|void
name|graphicsViewParentPropagation
parameter_list|()
function_decl|;
name|void
name|panelPropagation
parameter_list|()
function_decl|;
name|void
name|panelStacksBehindParent
parameter_list|()
function_decl|;
name|void
name|deleteGestureTargetWidget
parameter_list|()
function_decl|;
name|void
name|deleteGestureTargetItem_data
parameter_list|()
function_decl|;
name|void
name|deleteGestureTargetItem
parameter_list|()
function_decl|;
name|void
name|viewportCoordinates
parameter_list|()
function_decl|;
name|void
name|partialGesturePropagation
parameter_list|()
function_decl|;
name|void
name|testQGestureRecognizerCleanup
parameter_list|()
function_decl|;
name|void
name|testReuseCanceledGestures
parameter_list|()
function_decl|;
name|void
name|bug_13501_gesture_not_accepted
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_Gestures
name|tst_Gestures
operator|::
name|tst_Gestures
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_Gestures
name|tst_Gestures
operator|::
name|~
name|tst_Gestures
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_Gestures
operator|::
name|initTestCase
parameter_list|()
block|{
name|CustomGesture
operator|::
name|GestureType
operator|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|CustomGesture
operator|::
name|GestureType
operator|!=
name|Qt
operator|::
name|GestureType
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|CustomGesture
operator|::
name|GestureType
operator|!=
name|Qt
operator|::
name|CustomGesture
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_Gestures
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_Gestures
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_Gestures
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|customGesture
name|void
name|tst_Gestures
operator|::
name|customGesture
parameter_list|()
block|{
name|GestureWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|widget
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|widget
argument_list|)
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|widget
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|widget
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|widget
operator|.
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|all
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|started
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|updated
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|finished
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|canceled
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|consumeEventHint
name|void
name|tst_Gestures
operator|::
name|consumeEventHint
parameter_list|()
block|{
name|GestureWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|CustomGestureRecognizer
operator|::
name|ConsumeEvents
operator|=
literal|true
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|widget
argument_list|)
expr_stmt|;
name|CustomGestureRecognizer
operator|::
name|ConsumeEvents
operator|=
literal|false
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|customEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|autoCancelingGestures
name|void
name|tst_Gestures
operator|::
name|autoCancelingGestures
parameter_list|()
block|{
name|GestureWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
comment|// send partial gesture. The gesture will be in the "maybe" state, but will
comment|// never get enough events to fire, so Qt will have to kill it.
name|CustomEvent
name|ev
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|CustomGesture
operator|::
name|SerialMaybeThreshold
init|;
name|i
operator|<
name|CustomGesture
operator|::
name|SerialStartedThreshold
condition|;
operator|++
name|i
control|)
block|{
name|ev
operator|.
name|serial
operator|=
name|i
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|&
name|ev
argument_list|)
expr_stmt|;
block|}
comment|// wait long enough so the gesture manager will cancel the gesture
name|QTest
operator|::
name|qWait
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|customEventsReceived
argument_list|,
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|gestureOverChild
name|void
name|tst_Gestures
operator|::
name|gestureOverChild
parameter_list|()
block|{
name|GestureWidget
name|widget
argument_list|(
literal|"widget"
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|l
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|widget
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|child
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|customEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// enable gestures over the children
name|widget
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|widget
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|customEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|widget
operator|.
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|all
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|started
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|updated
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|finished
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|canceled
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multipleWidgetOnlyGestureInTree
name|void
name|tst_Gestures
operator|::
name|multipleWidgetOnlyGestureInTree
parameter_list|()
block|{
name|GestureWidget
name|parent
argument_list|(
literal|"parent"
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|l
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|child
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|parent
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|child
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
comment|// sending events to the child and making sure there is no conflict
name|CustomEvent
name|event
decl_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|customEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|parent
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// same for the parent widget
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|parent
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|customEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|conflictingGestures
name|void
name|tst_Gestures
operator|::
name|conflictingGestures
parameter_list|()
block|{
name|GestureWidget
name|parent
argument_list|(
literal|"parent"
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|l
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|child
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|parent
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|child
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
comment|// child accepts the override, parent will not receive anything
name|parent
operator|.
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|child
operator|->
name|acceptGestureOverride
operator|=
literal|true
expr_stmt|;
comment|// sending events to the child and making sure there is no conflict
name|CustomEvent
name|event
decl_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|parent
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// parent accepts the override
name|parent
operator|.
name|acceptGestureOverride
operator|=
literal|true
expr_stmt|;
name|child
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
comment|// sending events to the child and making sure there is no conflict
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|parent
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// nobody accepts the override, we will send normal events to the closest
comment|// context (i.e. to the child widget) and it will be propagated and
comment|// accepted by the parent widget
name|parent
operator|.
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|child
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|child
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
comment|// sending events to the child and making sure there is no conflict
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|parent
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// nobody accepts the override, and nobody accepts the gesture event
name|parent
operator|.
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|child
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|parent
operator|.
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|child
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
comment|// sending events to the child and making sure there is no conflict
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|parent
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// we set an attribute to make sure all gesture events are propagated
name|parent
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|ReceivePartialGestures
argument_list|)
expr_stmt|;
name|parent
operator|.
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|child
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|parent
operator|.
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|child
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
comment|// sending events to the child and making sure there is no conflict
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|parent
operator|.
name|reset
argument_list|()
expr_stmt|;
name|child
operator|->
name|reset
argument_list|()
expr_stmt|;
name|Qt
operator|::
name|GestureType
name|ContinuousGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomContinuousGestureRecognizer
argument_list|)
decl_stmt|;
specifier|static
specifier|const
name|int
name|ContinuousGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|child
operator|->
name|grabGesture
argument_list|(
name|ContinuousGesture
argument_list|)
expr_stmt|;
comment|// child accepts override. And it also receives another custom gesture.
name|parent
operator|.
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|child
operator|->
name|acceptGestureOverride
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|->
name|gestureEventsReceived
operator|>
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|()
argument_list|,
name|TotalGestureEventsCount
operator|+
name|ContinuousGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|ContinuousGesture
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|finishedWithoutStarted
name|void
name|tst_Gestures
operator|::
name|finishedWithoutStarted
parameter_list|()
block|{
name|GestureWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
comment|// the gesture will claim it finished, but it was never started.
name|CustomEvent
name|ev
decl_stmt|;
name|ev
operator|.
name|serial
operator|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
operator|&
name|widget
argument_list|,
operator|&
name|ev
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|customEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureEventsReceived
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|started
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|updated
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|finished
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|events
operator|.
name|canceled
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unknownGesture
name|void
name|tst_Gestures
operator|::
name|unknownGesture
parameter_list|()
block|{
name|GestureWidget
name|widget
decl_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|Qt
operator|::
name|CustomGesture
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|widget
operator|.
name|grabGesture
argument_list|(
name|Qt
operator|::
name|GestureType
argument_list|(
name|Qt
operator|::
name|PanGesture
operator|+
literal|512
argument_list|)
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
operator|&
name|widget
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
name|QCOMPARE
argument_list|(
name|widget
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|InstanceColors
specifier|static
specifier|const
name|QColor
name|InstanceColors
index|[]
init|=
block|{
name|Qt
operator|::
name|blue
block|,
name|Qt
operator|::
name|red
block|,
name|Qt
operator|::
name|green
block|,
name|Qt
operator|::
name|gray
block|,
name|Qt
operator|::
name|yellow
block|}
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|GestureItem
class|class
name|GestureItem
super|:
specifier|public
name|QGraphicsObject
block|{
name|Q_OBJECT
DECL|member|InstanceCount
specifier|static
name|int
name|InstanceCount
decl_stmt|;
public|public:
DECL|function|GestureItem
name|GestureItem
parameter_list|(
specifier|const
name|char
modifier|*
name|name
init|=
literal|0
parameter_list|)
block|{
name|instanceNumber
operator|=
name|InstanceCount
operator|++
expr_stmt|;
if|if
condition|(
name|name
condition|)
block|{
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|setToolTip
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|customEventsReceived
operator|=
literal|0
expr_stmt|;
name|gestureEventsReceived
operator|=
literal|0
expr_stmt|;
name|gestureOverrideEventsReceived
operator|=
literal|0
expr_stmt|;
name|events
operator|.
name|clear
argument_list|()
expr_stmt|;
name|overrideEvents
operator|.
name|clear
argument_list|()
expr_stmt|;
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|scene
operator|=
literal|0
expr_stmt|;
block|}
DECL|function|~GestureItem
name|~
name|GestureItem
parameter_list|()
block|{
operator|--
name|InstanceCount
expr_stmt|;
block|}
DECL|member|customEventsReceived
name|int
name|customEventsReceived
decl_stmt|;
DECL|member|gestureEventsReceived
name|int
name|gestureEventsReceived
decl_stmt|;
DECL|member|gestureOverrideEventsReceived
name|int
name|gestureOverrideEventsReceived
decl_stmt|;
DECL|struct|Events
struct|struct
name|Events
block|{
DECL|member|all
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|all
decl_stmt|;
DECL|member|started
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|started
decl_stmt|;
DECL|member|updated
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|updated
decl_stmt|;
DECL|member|finished
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|finished
decl_stmt|;
DECL|member|canceled
name|QList
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|canceled
decl_stmt|;
DECL|function|clear
name|void
name|clear
parameter_list|()
block|{
name|all
operator|.
name|clear
argument_list|()
expr_stmt|;
name|started
operator|.
name|clear
argument_list|()
expr_stmt|;
name|updated
operator|.
name|clear
argument_list|()
expr_stmt|;
name|finished
operator|.
name|clear
argument_list|()
expr_stmt|;
name|canceled
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|member|events
DECL|member|overrideEvents
block|}
name|events
struct|,
name|overrideEvents
struct|;
DECL|member|acceptGestureOverride
name|bool
name|acceptGestureOverride
decl_stmt|;
DECL|member|ignoredGestures
name|QSet
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|ignoredGestures
decl_stmt|;
DECL|member|ignoredStartedGestures
name|QSet
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|ignoredStartedGestures
decl_stmt|;
DECL|member|ignoredUpdatedGestures
name|QSet
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|ignoredUpdatedGestures
decl_stmt|;
DECL|member|ignoredFinishedGestures
name|QSet
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|ignoredFinishedGestures
decl_stmt|;
DECL|member|size
name|QRectF
name|size
decl_stmt|;
DECL|member|instanceNumber
name|int
name|instanceNumber
decl_stmt|;
DECL|function|reset
name|void
name|reset
parameter_list|()
block|{
name|customEventsReceived
operator|=
literal|0
expr_stmt|;
name|gestureEventsReceived
operator|=
literal|0
expr_stmt|;
name|gestureOverrideEventsReceived
operator|=
literal|0
expr_stmt|;
name|events
operator|.
name|clear
argument_list|()
expr_stmt|;
name|overrideEvents
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ignoredGestures
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ignoredStartedGestures
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ignoredUpdatedGestures
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ignoredFinishedGestures
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|function|boundingRect
name|QRectF
name|boundingRect
parameter_list|()
specifier|const
block|{
return|return
name|size
return|;
block|}
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
parameter_list|,
name|QWidget
modifier|*
parameter_list|)
block|{
name|QColor
name|color
init|=
name|InstanceColors
index|[
name|instanceNumber
operator|%
operator|(
sizeof|sizeof
argument_list|(
name|InstanceColors
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|InstanceColors
index|[
literal|0
index|]
argument_list|)
operator|)
index|]
decl_stmt|;
name|p
operator|->
name|fillRect
argument_list|(
name|boundingRect
argument_list|()
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
name|Events
modifier|*
name|eventsPtr
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
operator|++
name|gestureEventsReceived
expr_stmt|;
name|eventsPtr
operator|=
operator|&
name|events
expr_stmt|;
name|QGestureEvent
modifier|*
name|e
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
foreach|foreach
control|(
name|Qt
operator|::
name|GestureType
name|type
decl|,
name|ignoredGestures
control|)
name|e
operator|->
name|ignore
argument_list|(
name|e
operator|->
name|gesture
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QGesture
modifier|*
name|g
decl|,
name|e
operator|->
name|gestures
argument_list|()
control|)
block|{
switch|switch
condition|(
name|g
operator|->
name|state
argument_list|()
condition|)
block|{
case|case
name|Qt
operator|::
name|GestureStarted
case|:
if|if
condition|(
name|ignoredStartedGestures
operator|.
name|contains
argument_list|(
name|g
operator|->
name|gestureType
argument_list|()
argument_list|)
condition|)
name|e
operator|->
name|ignore
argument_list|(
name|g
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureUpdated
case|:
if|if
condition|(
name|ignoredUpdatedGestures
operator|.
name|contains
argument_list|(
name|g
operator|->
name|gestureType
argument_list|()
argument_list|)
condition|)
name|e
operator|->
name|ignore
argument_list|(
name|g
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureFinished
case|:
if|if
condition|(
name|ignoredFinishedGestures
operator|.
name|contains
argument_list|(
name|g
operator|->
name|gestureType
argument_list|()
argument_list|)
condition|)
name|e
operator|->
name|ignore
argument_list|(
name|g
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|GestureOverride
condition|)
block|{
operator|++
name|gestureOverrideEventsReceived
expr_stmt|;
name|eventsPtr
operator|=
operator|&
name|overrideEvents
expr_stmt|;
if|if
condition|(
name|acceptGestureOverride
condition|)
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|eventsPtr
condition|)
block|{
name|QGestureEvent
modifier|*
name|e
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QGesture
modifier|*
argument_list|>
name|gestures
init|=
name|e
operator|->
name|gestures
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|QGesture
modifier|*
name|g
decl|,
name|gestures
control|)
block|{
name|eventsPtr
operator|->
name|all
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|g
operator|->
name|state
argument_list|()
condition|)
block|{
case|case
name|Qt
operator|::
name|GestureStarted
case|:
name|eventsPtr
operator|->
name|started
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
emit|emit
name|gestureStarted
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
break|break;
case|case
name|Qt
operator|::
name|GestureUpdated
case|:
name|eventsPtr
operator|->
name|updated
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
emit|emit
name|gestureUpdated
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
break|break;
case|case
name|Qt
operator|::
name|GestureFinished
case|:
name|eventsPtr
operator|->
name|finished
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
emit|emit
name|gestureFinished
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
break|break;
case|case
name|Qt
operator|::
name|GestureCanceled
case|:
name|eventsPtr
operator|->
name|canceled
operator|<<
name|g
operator|->
name|gestureType
argument_list|()
expr_stmt|;
emit|emit
name|gestureCanceled
argument_list|(
name|e
operator|->
name|type
argument_list|()
argument_list|,
name|g
argument_list|)
emit|;
break|break;
default|default:
name|qWarning
argument_list|()
operator|<<
literal|"Unknown GestureState enum value:"
operator|<<
cast|static_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|g
operator|->
name|state
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|CustomEvent
operator|::
name|EventType
condition|)
block|{
operator|++
name|customEventsReceived
expr_stmt|;
block|}
else|else
block|{
return|return
name|QGraphicsObject
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
return|return
literal|true
return|;
block|}
name|Q_SIGNALS
label|:
name|void
name|gestureStarted
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
name|void
name|gestureUpdated
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
name|void
name|gestureFinished
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
name|void
name|gestureCanceled
parameter_list|(
name|QEvent
operator|::
name|Type
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
function_decl|;
public|public:
comment|// some arguments for the slots below:
DECL|member|scene
name|QGraphicsScene
modifier|*
name|scene
decl_stmt|;
public|public
name|Q_SLOTS
public|:
DECL|function|deleteThis
name|void
name|deleteThis
parameter_list|()
block|{
operator|delete
name|this
expr_stmt|;
block|}
DECL|function|addSelfToScene
name|void
name|addSelfToScene
parameter_list|(
name|QEvent
operator|::
name|Type
name|eventType
parameter_list|,
name|QGesture
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|eventType
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
name|disconnect
argument_list|(
name|sender
argument_list|()
argument_list|,
literal|0
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|addSelfToScene
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|,
name|QGesture
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|scene
operator|->
name|addItem
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
block|}
class|;
end_class
begin_decl_stmt
DECL|member|InstanceCount
name|int
name|GestureItem
operator|::
name|InstanceCount
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|graphicsItemGesture
name|void
name|tst_Gestures
operator|::
name|graphicsItemGesture
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|item
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
comment|// gesture without hotspot should not be delivered to items in the view
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QGestureManager::deliverEvent: could not find the target for gesture"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QGestureManager::deliverEvent: could not find the target for gesture"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QGestureManager::deliverEvent: could not find the target for gesture"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QGestureManager::deliverEvent: could not find the target for gesture"
argument_list|)
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// make sure the event is properly delivered if only the hotspot is set.
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item
operator|->
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|item
operator|->
name|events
operator|.
name|all
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|events
operator|.
name|started
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|events
operator|.
name|updated
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|events
operator|.
name|finished
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|events
operator|.
name|canceled
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// send gesture to the item which ignores it.
name|item
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|graphicsView
name|void
name|tst_Gestures
operator|::
name|graphicsView
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|item
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
comment|// make sure the event is properly delivered if only the hotspot is set.
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// change the viewport and try again
name|QWidget
modifier|*
name|newViewport
init|=
operator|new
name|QWidget
decl_stmt|;
name|view
operator|.
name|setViewport
argument_list|(
name|newViewport
argument_list|)
expr_stmt|;
name|item
operator|->
name|reset
argument_list|()
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// change the scene and try again
name|QGraphicsScene
name|newScene
decl_stmt|;
name|item
operator|=
operator|new
name|GestureItem
argument_list|(
literal|"newItem"
argument_list|)
expr_stmt|;
name|newScene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|view
operator|.
name|setScene
argument_list|(
operator|&
name|newScene
argument_list|)
expr_stmt|;
name|item
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// first without a gesture
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item
argument_list|,
operator|&
name|newScene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// then grab the gesture and try again
name|item
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item
argument_list|,
operator|&
name|newScene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|graphicsItemTreeGesture
name|void
name|tst_Gestures
operator|::
name|graphicsItemTreeGesture
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|item1
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|350
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1_child1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1_child1"
argument_list|)
decl_stmt|;
name|item1_child1
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|item1_child1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item1_child1
operator|->
name|setParentItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1_child2
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1_child2"
argument_list|)
decl_stmt|;
name|item1_child2
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item1_child2
operator|->
name|setPos
argument_list|(
literal|200
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|item1_child2
operator|->
name|setParentItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item1_child1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|item1
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1_child1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child2
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item1
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1_child1
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1_child1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child2
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|explicitGraphicsObjectTarget
name|void
name|tst_Gestures
operator|::
name|explicitGraphicsObjectTarget
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item2
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item2"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|item2
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item2
operator|->
name|setZValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item2_child1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item2_child1"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item2_child1
argument_list|)
expr_stmt|;
name|item2_child1
operator|->
name|setParentItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|item2_child1
operator|->
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|item2
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|item2_child1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
comment|// sending events to item1, but the hotSpot is set to item2
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|,
name|item2
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item2_child1
operator|->
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|events
operator|.
name|all
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|events
operator|.
name|started
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|events
operator|.
name|updated
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
operator|-
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|events
operator|.
name|finished
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|events
operator|.
name|canceled
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|gestureOverChildGraphicsItem
name|void
name|tst_Gestures
operator|::
name|gestureOverChildGraphicsItem
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item0
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item0"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setZValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item2
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item2"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|item2
operator|->
name|setPos
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item2
operator|->
name|setZValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item2_child1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item2_child1"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item2_child1
argument_list|)
expr_stmt|;
name|item2_child1
operator|->
name|setParentItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|item2_child1
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item2_child1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item0
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item2
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item2_child1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item0
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|item0
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item2
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item2_child1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item0
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|item0
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item2
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|ReceivePartialGestures
argument_list|)
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item2_child1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item0
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|twoGesturesOnDifferentLevel
name|void
name|tst_Gestures
operator|::
name|twoGesturesOnDifferentLevel
parameter_list|()
block|{
name|GestureWidget
name|parent
argument_list|(
literal|"parent"
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|l
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|parent
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|child
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|GestureType
name|SecondGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|parent
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|child
operator|->
name|grabGesture
argument_list|(
name|SecondGesture
argument_list|)
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
comment|// sending events that form a gesture to one widget, but they will be
comment|// filtered by two different gesture recognizers and will generate two
comment|// QGesture objects. Check that those gesture objects are delivered to
comment|// different widgets properly.
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|child
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|child
operator|->
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|all
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|SecondGesture
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|child
operator|->
name|events
operator|.
name|all
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|events
operator|.
name|all
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|SecondGesture
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multipleGesturesInTree
name|void
name|tst_Gestures
operator|::
name|multipleGesturesInTree
parameter_list|()
block|{
name|GestureWidget
name|a
argument_list|(
literal|"A"
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|A
init|=
operator|&
name|a
decl_stmt|;
name|GestureWidget
modifier|*
name|B
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"B"
argument_list|,
name|A
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|C
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"C"
argument_list|,
name|B
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|D
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"D"
argument_list|,
name|C
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|FirstGesture
init|=
name|CustomGesture
operator|::
name|GestureType
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|SecondGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|ThirdGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureFlags
name|flags
init|=
name|Qt
operator|::
name|ReceivePartialGestures
decl_stmt|;
name|A
operator|->
name|grabGesture
argument_list|(
name|FirstGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// A [1   3]
name|A
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// |
name|B
operator|->
name|grabGesture
argument_list|(
name|SecondGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// B [  2 3]
name|B
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// |
name|C
operator|->
name|grabGesture
argument_list|(
name|FirstGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// C [1 2 3]
name|C
operator|->
name|grabGesture
argument_list|(
name|SecondGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// |
name|C
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// D [1   3]
name|D
operator|->
name|grabGesture
argument_list|(
name|FirstGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|D
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// make sure all widgets ignore events, so they get propagated.
name|A
operator|->
name|ignoredGestures
operator|<<
name|FirstGesture
operator|<<
name|ThirdGesture
expr_stmt|;
name|B
operator|->
name|ignoredGestures
operator|<<
name|SecondGesture
operator|<<
name|ThirdGesture
expr_stmt|;
name|C
operator|->
name|ignoredGestures
operator|<<
name|FirstGesture
operator|<<
name|SecondGesture
operator|<<
name|ThirdGesture
expr_stmt|;
name|D
operator|->
name|ignoredGestures
operator|<<
name|FirstGesture
operator|<<
name|ThirdGesture
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|D
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
comment|// gesture override events
name|QCOMPARE
argument_list|(
name|D
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// normal gesture events
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|SecondGesture
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|ThirdGesture
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multipleGesturesInComplexTree
name|void
name|tst_Gestures
operator|::
name|multipleGesturesInComplexTree
parameter_list|()
block|{
name|GestureWidget
name|a
argument_list|(
literal|"A"
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|A
init|=
operator|&
name|a
decl_stmt|;
name|GestureWidget
modifier|*
name|B
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"B"
argument_list|,
name|A
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|C
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"C"
argument_list|,
name|B
argument_list|)
decl_stmt|;
name|GestureWidget
modifier|*
name|D
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"D"
argument_list|,
name|C
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|FirstGesture
init|=
name|CustomGesture
operator|::
name|GestureType
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|SecondGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|ThirdGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|FourthGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|FifthGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|SixthGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|SeventhGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureFlags
name|flags
init|=
name|Qt
operator|::
name|ReceivePartialGestures
decl_stmt|;
name|A
operator|->
name|grabGesture
argument_list|(
name|FirstGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// A [1,3,4]
name|A
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// |
name|A
operator|->
name|grabGesture
argument_list|(
name|FourthGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// B [2,3,5]
name|B
operator|->
name|grabGesture
argument_list|(
name|SecondGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// |
name|B
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// C [1,2,3,6]
name|B
operator|->
name|grabGesture
argument_list|(
name|FifthGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// |
name|C
operator|->
name|grabGesture
argument_list|(
name|FirstGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// D [1,3,7]
name|C
operator|->
name|grabGesture
argument_list|(
name|SecondGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|C
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|C
operator|->
name|grabGesture
argument_list|(
name|SixthGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|D
operator|->
name|grabGesture
argument_list|(
name|FirstGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|D
operator|->
name|grabGesture
argument_list|(
name|ThirdGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|D
operator|->
name|grabGesture
argument_list|(
name|SeventhGesture
argument_list|,
name|flags
argument_list|)
expr_stmt|;
comment|// make sure all widgets ignore events, so they get propagated.
name|QSet
argument_list|<
name|Qt
operator|::
name|GestureType
argument_list|>
name|allGestureTypes
decl_stmt|;
name|allGestureTypes
operator|<<
name|FirstGesture
operator|<<
name|SecondGesture
operator|<<
name|ThirdGesture
operator|<<
name|FourthGesture
operator|<<
name|FifthGesture
operator|<<
name|SixthGesture
operator|<<
name|SeventhGesture
expr_stmt|;
name|A
operator|->
name|ignoredGestures
operator|=
name|B
operator|->
name|ignoredGestures
operator|=
name|allGestureTypes
expr_stmt|;
name|C
operator|->
name|ignoredGestures
operator|=
name|D
operator|->
name|ignoredGestures
operator|=
name|allGestureTypes
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|D
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
comment|// gesture override events
name|QCOMPARE
argument_list|(
name|D
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|overrideEvents
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// normal gesture events
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FourthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FifthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SixthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|D
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SeventhGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FourthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FifthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SixthGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|C
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SeventhGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FourthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FifthGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SixthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|B
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SeventhGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FirstGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SecondGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|ThirdGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FourthGesture
argument_list|)
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|FifthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SixthGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|A
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|(
name|SeventhGesture
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|SecondGesture
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|ThirdGesture
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|FourthGesture
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|FifthGesture
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|SixthGesture
argument_list|)
expr_stmt|;
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|SeventhGesture
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testMapToScene
name|void
name|tst_Gestures
operator|::
name|testMapToScene
parameter_list|()
block|{
name|QGesture
name|gesture
decl_stmt|;
name|QList
argument_list|<
name|QGesture
modifier|*
argument_list|>
name|list
decl_stmt|;
name|list
operator|<<
operator|&
name|gesture
expr_stmt|;
name|QGestureEvent
name|event
argument_list|(
name|list
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|event
operator|.
name|mapToGraphicsScene
argument_list|(
name|gesture
operator|.
name|hotSpot
argument_list|()
argument_list|)
argument_list|,
name|QPointF
argument_list|()
argument_list|)
expr_stmt|;
comment|// not set, can't do much
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item0
init|=
operator|new
name|GestureItem
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setPos
argument_list|(
literal|14
argument_list|,
literal|16
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
comment|// need to show to give it a global coordinate
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|QPoint
name|origin
init|=
name|view
operator|.
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setWidget
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|event
operator|.
name|mapToGraphicsScene
argument_list|(
name|origin
operator|+
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|,
name|view
operator|.
name|mapToScene
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ungrabGesture
name|void
name|tst_Gestures
operator|::
name|ungrabGesture
parameter_list|()
comment|// a method on QWidget
block|{
class|class
name|MockGestureWidget
super|:
specifier|public
name|GestureWidget
block|{
public|public:
name|MockGestureWidget
parameter_list|(
specifier|const
name|char
modifier|*
name|name
init|=
literal|0
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|GestureWidget
argument_list|(
name|name
argument_list|,
name|parent
argument_list|)
block|{ }
name|QSet
argument_list|<
name|QGesture
modifier|*
argument_list|>
name|gestures
decl_stmt|;
protected|protected:
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
name|QGestureEvent
modifier|*
name|gestureEvent
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|gestureEvent
condition|)
foreach|foreach
control|(
name|QGesture
modifier|*
name|g
decl|,
name|gestureEvent
operator|->
name|gestures
argument_list|()
control|)
name|gestures
operator|.
name|insert
argument_list|(
name|g
argument_list|)
expr_stmt|;
block|}
return|return
name|GestureWidget
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
block|}
class|;
name|MockGestureWidget
name|parent
argument_list|(
literal|"A"
argument_list|)
decl_stmt|;
name|MockGestureWidget
modifier|*
name|a
init|=
operator|&
name|parent
decl_stmt|;
name|MockGestureWidget
modifier|*
name|b
init|=
operator|new
name|MockGestureWidget
argument_list|(
literal|"B"
argument_list|,
name|a
argument_list|)
decl_stmt|;
name|a
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|DontStartGestureOnChildren
argument_list|)
expr_stmt|;
name|b
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|b
operator|->
name|ignoredGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
comment|// sending an event will cause the QGesture objects to be instantiated for the widgets
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|->
name|gestures
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QGesture
argument_list|>
name|customGestureA
decl_stmt|;
name|customGestureA
operator|=
operator|*
operator|(
name|a
operator|->
name|gestures
operator|.
name|begin
argument_list|()
operator|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|customGestureA
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customGestureA
operator|->
name|gestureType
argument_list|()
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|->
name|gestures
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QPointer
argument_list|<
name|QGesture
argument_list|>
name|customGestureB
decl_stmt|;
name|customGestureB
operator|=
operator|*
operator|(
name|b
operator|->
name|gestures
operator|.
name|begin
argument_list|()
operator|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|customGestureB
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|customGestureA
operator|.
name|data
argument_list|()
operator|==
name|customGestureB
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customGestureB
operator|->
name|gestureType
argument_list|()
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|a
operator|->
name|gestures
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// sending an event will cause the QGesture objects to be instantiated for the widget
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|->
name|gestures
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|customGestureA
operator|=
operator|*
operator|(
name|a
operator|->
name|gestures
operator|.
name|begin
argument_list|()
operator|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|customGestureA
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|customGestureA
operator|->
name|gestureType
argument_list|()
argument_list|,
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|customGestureA
operator|.
name|data
argument_list|()
operator|!=
name|customGestureB
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|->
name|ungrabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
comment|//We changed the deletion of Gestures to lazy during QT-4022, so we can't ensure the QGesture is deleted until now
name|QVERIFY
argument_list|(
operator|!
name|customGestureB
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|->
name|gestures
operator|.
name|clear
argument_list|()
expr_stmt|;
name|a
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// send again to 'b' and make sure a never gets it.
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|b
argument_list|)
expr_stmt|;
comment|//After all Gestures are processed in the QGestureManager, we can ensure the QGesture is now deleted
name|QVERIFY
argument_list|(
name|customGestureA
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unregisterRecognizer
name|void
name|tst_Gestures
operator|::
name|unregisterRecognizer
parameter_list|()
comment|// a method on QApplication
block|{
comment|/*      The hardest usecase to get right is when we remove a recognizer while several      of the gestures it created are in active state and we immediately add a new recognizer      for the same type (thus replacing the old one).      The expected result is that all old gestures continue till they are finished/cancelled      and the new recognizer starts creating gestures immediately at registration.       This implies that deleting of the recognizer happens only when there are no more gestures      that it created. (since gestures might have a pointer to the recognizer)      */
block|}
end_function
begin_function
DECL|function|autoCancelGestures
name|void
name|tst_Gestures
operator|::
name|autoCancelGestures
parameter_list|()
block|{
class|class
name|MockWidget
super|:
specifier|public
name|GestureWidget
block|{
public|public:
name|MockWidget
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
member_init_list|:
name|GestureWidget
argument_list|(
name|name
argument_list|)
member_init_list|,
name|badGestureEvents
argument_list|(
literal|0
argument_list|)
block|{ }
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
name|QGestureEvent
modifier|*
name|ge
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|ge
operator|->
name|gestures
argument_list|()
operator|.
name|count
argument_list|()
operator|!=
literal|1
condition|)
operator|++
name|badGestureEvents
expr_stmt|;
comment|// event should contain exactly one gesture
name|ge
operator|->
name|gestures
argument_list|()
operator|.
name|first
argument_list|()
operator|->
name|setGestureCancelPolicy
argument_list|(
name|QGesture
operator|::
name|CancelAllInContext
argument_list|)
expr_stmt|;
block|}
return|return
name|GestureWidget
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
name|int
name|badGestureEvents
decl_stmt|;
block|}
class|;
specifier|const
name|Qt
operator|::
name|GestureType
name|secondGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|MockWidget
name|parent
argument_list|(
literal|"parent"
argument_list|)
decl_stmt|;
comment|// this one sets the cancel policy to CancelAllInContext
name|parent
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureWidget
modifier|*
name|child
init|=
operator|new
name|GestureWidget
argument_list|(
literal|"child"
argument_list|,
operator|&
name|parent
argument_list|)
decl_stmt|;
name|child
operator|->
name|setGeometry
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|parent
operator|.
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|child
operator|->
name|grabGesture
argument_list|(
name|secondGesture
argument_list|)
expr_stmt|;
name|parent
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|parent
argument_list|)
expr_stmt|;
comment|/*       An event is send to both the child and the parent, when the child gets it a gesture is triggered       and send to the child.       When the parent gets the event a new gesture is triggered and delivered to the parent. When the       parent gets it he accepts it and that causes the cancel policy to activate.       The cause of that is the gesture for the child is cancelled and send to the child as such.     */
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|serial
operator|=
name|CustomGesture
operator|::
name|SerialStartedThreshold
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|child
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|started
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|canceled
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|events
operator|.
name|all
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// clean up, make the parent gesture finish
name|event
operator|.
name|serial
operator|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
expr_stmt|;
name|QApplication
operator|::
name|sendEvent
argument_list|(
name|child
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|events
operator|.
name|all
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|.
name|badGestureEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|autoCancelGestures2
name|void
name|tst_Gestures
operator|::
name|autoCancelGestures2
parameter_list|()
block|{
class|class
name|MockItem
super|:
specifier|public
name|GestureItem
block|{
public|public:
name|MockItem
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
member_init_list|:
name|GestureItem
argument_list|(
name|name
argument_list|)
member_init_list|,
name|badGestureEvents
argument_list|(
literal|0
argument_list|)
block|{ }
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
name|QGestureEvent
modifier|*
name|ge
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|ge
operator|->
name|gestures
argument_list|()
operator|.
name|count
argument_list|()
operator|!=
literal|1
condition|)
operator|++
name|badGestureEvents
expr_stmt|;
comment|// event should contain exactly one gesture
name|ge
operator|->
name|gestures
argument_list|()
operator|.
name|first
argument_list|()
operator|->
name|setGestureCancelPolicy
argument_list|(
name|QGesture
operator|::
name|CancelAllInContext
argument_list|)
expr_stmt|;
block|}
return|return
name|GestureItem
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
name|int
name|badGestureEvents
decl_stmt|;
block|}
class|;
specifier|const
name|Qt
operator|::
name|GestureType
name|secondGesture
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|CustomGestureRecognizer
argument_list|)
decl_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|MockItem
modifier|*
name|parent
init|=
operator|new
name|MockItem
argument_list|(
literal|"parent"
argument_list|)
decl_stmt|;
name|GestureItem
modifier|*
name|child
init|=
operator|new
name|GestureItem
argument_list|(
literal|"child"
argument_list|)
decl_stmt|;
name|child
operator|->
name|setParentItem
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|parent
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|child
operator|->
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|parent
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|child
operator|->
name|grabGesture
argument_list|(
name|secondGesture
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|serial
operator|=
name|CustomGesture
operator|::
name|SerialStartedThreshold
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|child
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|scene
operator|.
name|sendEvent
argument_list|(
name|child
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|started
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|canceled
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|child
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
comment|// clean up, make the parent gesture finish
name|event
operator|.
name|serial
operator|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
expr_stmt|;
name|scene
operator|.
name|sendEvent
argument_list|(
name|child
argument_list|,
operator|&
name|event
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|events
operator|.
name|all
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|parent
operator|->
name|badGestureEvents
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|graphicsViewParentPropagation
name|void
name|tst_Gestures
operator|::
name|graphicsViewParentPropagation
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item0
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item0"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setZValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1_c1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1_child1"
argument_list|)
decl_stmt|;
name|item1_c1
operator|->
name|setParentItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|item1_c1
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1_c1_c1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1_child1_child1"
argument_list|)
decl_stmt|;
name|item1_c1_c1
operator|->
name|setParentItem
argument_list|(
name|item1_c1
argument_list|)
expr_stmt|;
name|item1_c1_c1
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|item0
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|ReceivePartialGestures
operator||
name|Qt
operator|::
name|IgnoredGesturesPropagateToParent
argument_list|)
expr_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|ReceivePartialGestures
operator||
name|Qt
operator|::
name|IgnoredGesturesPropagateToParent
argument_list|)
expr_stmt|;
name|item1_c1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|IgnoredGesturesPropagateToParent
argument_list|)
expr_stmt|;
name|item1_c1_c1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|ReceivePartialGestures
operator||
name|Qt
operator|::
name|IgnoredGesturesPropagateToParent
argument_list|)
expr_stmt|;
name|item0
operator|->
name|ignoredUpdatedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item0
operator|->
name|ignoredFinishedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1
operator|->
name|ignoredUpdatedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1
operator|->
name|ignoredFinishedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1_c1
operator|->
name|ignoredUpdatedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1_c1
operator|->
name|ignoredFinishedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1_c1_c1
operator|->
name|ignoredUpdatedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|item1_c1_c1
operator|->
name|ignoredFinishedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|item1_c1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item0
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_c1_c1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_c1_c1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_c1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_c1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|panelPropagation
name|void
name|tst_Gestures
operator|::
name|panelPropagation
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item0
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item0"
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|item0
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setZValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|item1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|180
argument_list|,
literal|180
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1_child1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1_child1[panel]"
argument_list|)
decl_stmt|;
name|item1_child1
operator|->
name|setFlags
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsPanel
argument_list|)
expr_stmt|;
name|item1_child1
operator|->
name|setParentItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|item1_child1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item1_child1
operator|->
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|item1_child1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|160
argument_list|,
literal|160
argument_list|)
expr_stmt|;
name|item1_child1
operator|->
name|setZValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1_child1_child1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1_child1_child1"
argument_list|)
decl_stmt|;
name|item1_child1_child1
operator|->
name|setParentItem
argument_list|(
name|item1_child1
argument_list|)
expr_stmt|;
name|item1_child1_child1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item1_child1_child1
operator|->
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|item1_child1_child1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|140
argument_list|,
literal|140
argument_list|)
expr_stmt|;
name|item1_child1_child1
operator|->
name|setZValue
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
specifier|static
specifier|const
name|int
name|TotalCustomEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialMaybeThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item1_child1_child1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item0
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|customEventsReceived
argument_list|,
name|TotalCustomEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|item0
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// try with a modal panel
name|item1_child1
operator|->
name|setPanelModality
argument_list|(
name|QGraphicsItem
operator|::
name|PanelModal
argument_list|)
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// try with a modal panel, however set the hotspot to be outside of the
comment|// panel and its parent
name|item1_child1
operator|->
name|setPanelModality
argument_list|(
name|QGraphicsItem
operator|::
name|PanelModal
argument_list|)
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item0
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item0
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item1_child1_child1
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// try with a scene modal panel
name|item1_child1
operator|->
name|setPanelModality
argument_list|(
name|QGraphicsItem
operator|::
name|SceneModal
argument_list|)
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item0
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item0
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1_child1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item0
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|panelStacksBehindParent
name|void
name|tst_Gestures
operator|::
name|panelStacksBehindParent
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|item1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|180
argument_list|,
literal|180
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|panel
init|=
operator|new
name|GestureItem
argument_list|(
literal|"panel"
argument_list|)
decl_stmt|;
name|panel
operator|->
name|setFlags
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsPanel
operator||
name|QGraphicsItem
operator|::
name|ItemStacksBehindParent
argument_list|)
expr_stmt|;
name|panel
operator|->
name|setPanelModality
argument_list|(
name|QGraphicsItem
operator|::
name|PanelModal
argument_list|)
expr_stmt|;
name|panel
operator|->
name|setParentItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|panel
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|panel
operator|->
name|setPos
argument_list|(
operator|-
literal|10
argument_list|,
operator|-
literal|10
argument_list|)
expr_stmt|;
name|panel
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|panel
operator|->
name|setZValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|panel
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|panel
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteGestureTargetWidget
name|void
name|tst_Gestures
operator|::
name|deleteGestureTargetWidget
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|deleteGestureTargetItem_data
name|void
name|tst_Gestures
operator|::
name|deleteGestureTargetItem_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"propagateUpdateGesture"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"emitter"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"receiver"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"signalName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QByteArray
argument_list|>
argument_list|(
literal|"slotName"
argument_list|)
expr_stmt|;
name|QByteArray
name|gestureUpdated
init|=
name|SIGNAL
argument_list|(
name|gestureUpdated
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|,
name|QGesture
operator|*
argument_list|)
argument_list|)
decl_stmt|;
name|QByteArray
name|gestureFinished
init|=
name|SIGNAL
argument_list|(
name|gestureFinished
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|,
name|QGesture
operator|*
argument_list|)
argument_list|)
decl_stmt|;
name|QByteArray
name|deleteThis
init|=
name|SLOT
argument_list|(
name|deleteThis
argument_list|()
argument_list|)
decl_stmt|;
name|QByteArray
name|deleteLater
init|=
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"delete1"
argument_list|)
operator|<<
literal|false
operator|<<
literal|"item1"
operator|<<
literal|"item1"
operator|<<
name|gestureUpdated
operator|<<
name|deleteThis
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"delete2"
argument_list|)
operator|<<
literal|false
operator|<<
literal|"item2"
operator|<<
literal|"item2"
operator|<<
name|gestureUpdated
operator|<<
name|deleteThis
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"delete3"
argument_list|)
operator|<<
literal|false
operator|<<
literal|"item1"
operator|<<
literal|"item2"
operator|<<
name|gestureUpdated
operator|<<
name|deleteThis
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteLater1"
argument_list|)
operator|<<
literal|false
operator|<<
literal|"item1"
operator|<<
literal|"item1"
operator|<<
name|gestureUpdated
operator|<<
name|deleteLater
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteLater2"
argument_list|)
operator|<<
literal|false
operator|<<
literal|"item2"
operator|<<
literal|"item2"
operator|<<
name|gestureUpdated
operator|<<
name|deleteLater
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteLater3"
argument_list|)
operator|<<
literal|false
operator|<<
literal|"item1"
operator|<<
literal|"item2"
operator|<<
name|gestureUpdated
operator|<<
name|deleteLater
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteLater4"
argument_list|)
operator|<<
literal|false
operator|<<
literal|"item2"
operator|<<
literal|"item1"
operator|<<
name|gestureUpdated
operator|<<
name|deleteLater
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"delete-self-and-propagate"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"item2"
operator|<<
literal|"item2"
operator|<<
name|gestureUpdated
operator|<<
name|deleteThis
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteLater-self-and-propagate"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"item2"
operator|<<
literal|"item2"
operator|<<
name|gestureUpdated
operator|<<
name|deleteLater
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"propagate-to-deletedLater"
argument_list|)
operator|<<
literal|true
operator|<<
literal|"item2"
operator|<<
literal|"item1"
operator|<<
name|gestureUpdated
operator|<<
name|deleteLater
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteGestureTargetItem
name|void
name|tst_Gestures
operator|::
name|deleteGestureTargetItem
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|propagateUpdateGesture
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|emitter
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|receiver
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|signalName
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QByteArray
argument_list|,
name|slotName
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item2
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item2"
argument_list|)
decl_stmt|;
name|item2
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item2
operator|->
name|setZValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|QMap
argument_list|<
name|QString
argument_list|,
name|GestureItem
modifier|*
argument_list|>
name|items
decl_stmt|;
name|items
operator|.
name|insert
argument_list|(
name|item1
operator|->
name|objectName
argument_list|()
argument_list|,
name|item1
argument_list|)
expr_stmt|;
name|items
operator|.
name|insert
argument_list|(
name|item2
operator|->
name|objectName
argument_list|()
argument_list|,
name|item2
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|propagateUpdateGesture
condition|)
name|item2
operator|->
name|ignoredUpdatedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|connect
argument_list|(
name|items
operator|.
name|value
argument_list|(
name|emitter
argument_list|,
literal|0
argument_list|)
argument_list|,
name|signalName
argument_list|,
name|items
operator|.
name|value
argument_list|(
name|receiver
argument_list|,
literal|0
argument_list|)
argument_list|,
name|slotName
argument_list|)
expr_stmt|;
comment|// some debug output to see the current test data tag, so if we crash
comment|// we know which one caused the crash.
name|qDebug
argument_list|()
operator|<<
literal|"<-- testing"
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item2
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|GraphicsView
class|class
name|GraphicsView
super|:
specifier|public
name|QGraphicsView
block|{
public|public:
DECL|function|GraphicsView
name|GraphicsView
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsView
argument_list|(
name|scene
argument_list|,
name|parent
argument_list|)
block|{     }
using|using
name|QGraphicsView
operator|::
name|setViewportMargins
using|;
block|}
class|;
end_class
begin_comment
comment|// just making sure that even if the graphicsview has margins hotspot still
end_comment
begin_comment
comment|// works properly. It should use viewport for converting global coordinates to
end_comment
begin_comment
comment|// scene coordinates.
end_comment
begin_function
DECL|function|viewportCoordinates
name|void
name|tst_Gestures
operator|::
name|viewportCoordinates
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|GraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setViewportMargins
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|15
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|item1
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
name|item1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
operator|!=
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|partialGesturePropagation
name|void
name|tst_Gestures
operator|::
name|partialGesturePropagation
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item2
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item2[partial]"
argument_list|)
decl_stmt|;
name|item2
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|ReceivePartialGestures
argument_list|)
expr_stmt|;
name|item2
operator|->
name|setZValue
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item3
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item3"
argument_list|)
decl_stmt|;
name|item3
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item3
operator|->
name|setZValue
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item3
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item4
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item4[partial]"
argument_list|)
decl_stmt|;
name|item4
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|,
name|Qt
operator|::
name|ReceivePartialGestures
argument_list|)
expr_stmt|;
name|item4
operator|->
name|setZValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item4
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|item1
operator|->
name|ignoredUpdatedGestures
operator|<<
name|CustomGesture
operator|::
name|GestureType
expr_stmt|;
name|CustomEvent
name|event
decl_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|item1
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item1
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item3
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item4
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
operator|-
literal|2
argument_list|)
expr_stmt|;
comment|// except for started and finished
name|QCOMPARE
argument_list|(
name|item3
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item4
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|WinNativePan
class|class
name|WinNativePan
super|:
specifier|public
name|QPanGesture
block|{
public|public:
DECL|function|WinNativePan
name|WinNativePan
parameter_list|()
block|{}
block|}
class|;
end_class
begin_class
DECL|class|Pan
class|class
name|Pan
super|:
specifier|public
name|QPanGesture
block|{
public|public:
DECL|function|Pan
name|Pan
parameter_list|()
block|{}
block|}
class|;
end_class
begin_class
DECL|class|CustomPan
class|class
name|CustomPan
super|:
specifier|public
name|QPanGesture
block|{
public|public:
DECL|function|CustomPan
name|CustomPan
parameter_list|()
block|{}
block|}
class|;
end_class
begin_comment
comment|// Recognizer for active gesture triggers on mouse press
end_comment
begin_class
DECL|class|PanRecognizer
class|class
name|PanRecognizer
super|:
specifier|public
name|QGestureRecognizer
block|{
public|public:
DECL|enum|PanType
DECL|enumerator|Platform
DECL|enumerator|Default
DECL|enumerator|Custom
enum|enum
name|PanType
block|{
name|Platform
block|,
name|Default
block|,
name|Custom
block|}
enum|;
DECL|function|PanRecognizer
name|PanRecognizer
parameter_list|(
name|int
name|id
parameter_list|)
member_init_list|:
name|m_id
argument_list|(
name|id
argument_list|)
block|{}
DECL|function|create
name|QGesture
modifier|*
name|create
parameter_list|(
name|QObject
modifier|*
parameter_list|)
block|{
switch|switch
condition|(
name|m_id
condition|)
block|{
case|case
name|Platform
case|:
return|return
operator|new
name|WinNativePan
argument_list|()
return|;
case|case
name|Default
case|:
return|return
operator|new
name|Pan
argument_list|()
return|;
default|default:
return|return
operator|new
name|CustomPan
argument_list|()
return|;
block|}
block|}
DECL|function|recognize
name|Result
name|recognize
parameter_list|(
name|QGesture
modifier|*
parameter_list|,
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
parameter_list|)
block|{
return|return
name|QGestureRecognizer
operator|::
name|Ignore
return|;
block|}
DECL|member|m_id
specifier|const
name|int
name|m_id
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testQGestureRecognizerCleanup
name|void
name|tst_Gestures
operator|::
name|testQGestureRecognizerCleanup
parameter_list|()
block|{
comment|// Clean first the current recognizers in QGManager
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|Qt
operator|::
name|PanGesture
argument_list|)
expr_stmt|;
comment|// v-- Qt singleton QGManager initialization
comment|// Mimic QGestureManager: register both default and "platform" recognizers
comment|// (this is done in windows when QT_NO_NATIVE_GESTURES is not defined)
name|PanRecognizer
modifier|*
name|def
init|=
operator|new
name|PanRecognizer
argument_list|(
name|PanRecognizer
operator|::
name|Default
argument_list|)
decl_stmt|;
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
name|def
argument_list|)
expr_stmt|;
name|PanRecognizer
modifier|*
name|plt
init|=
operator|new
name|PanRecognizer
argument_list|(
name|PanRecognizer
operator|::
name|Platform
argument_list|)
decl_stmt|;
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
name|plt
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"register: default ="
operator|<<
name|def
operator|<<
literal|"; platform ="
operator|<<
name|plt
expr_stmt|;
comment|// ^-- Qt singleton QGManager initialization
comment|// Here, application code would start
comment|// Create QGV (has a QAScrollArea, which uses Qt::PanGesture)
name|QMainWindow
modifier|*
name|w
init|=
operator|new
name|QMainWindow
decl_stmt|;
name|QGraphicsView
modifier|*
name|v
init|=
operator|new
name|QGraphicsView
argument_list|()
decl_stmt|;
name|w
operator|->
name|setCentralWidget
argument_list|(
name|v
argument_list|)
expr_stmt|;
comment|// Unregister Qt recognizers
name|QGestureRecognizer
operator|::
name|unregisterRecognizer
argument_list|(
name|Qt
operator|::
name|PanGesture
argument_list|)
expr_stmt|;
comment|// Register a custom Pan recognizer
comment|//QGestureRecognizer::registerRecognizer(new PanRecognizer(PanRecognizer::Custom));
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|w
argument_list|)
expr_stmt|;
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_class
DECL|class|ReuseCanceledGesturesRecognizer
class|class
name|ReuseCanceledGesturesRecognizer
super|:
specifier|public
name|QGestureRecognizer
block|{
public|public:
DECL|enum|Type
enum|enum
name|Type
block|{
DECL|enumerator|RmbAndCancelAllType
name|RmbAndCancelAllType
block|,
DECL|enumerator|LmbType
name|LmbType
block|}
enum|;
DECL|function|ReuseCanceledGesturesRecognizer
name|ReuseCanceledGesturesRecognizer
parameter_list|(
name|Type
name|type
parameter_list|)
member_init_list|:
name|m_type
argument_list|(
name|type
argument_list|)
block|{}
DECL|function|create
name|QGesture
modifier|*
name|create
parameter_list|(
name|QObject
modifier|*
parameter_list|)
block|{
name|QGesture
modifier|*
name|g
init|=
operator|new
name|QGesture
decl_stmt|;
return|return
name|g
return|;
block|}
DECL|function|recognize
name|Result
name|recognize
parameter_list|(
name|QGesture
modifier|*
name|gesture
parameter_list|,
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
name|QMouseEvent
modifier|*
name|me
init|=
cast|static_cast
argument_list|<
name|QMouseEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|MouseButton
name|mouseButton
argument_list|(
name|m_type
operator|==
name|LmbType
condition|?
name|Qt
operator|::
name|LeftButton
else|:
name|Qt
operator|::
name|RightButton
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|event
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QEvent
operator|::
name|MouseButtonPress
case|:
if|if
condition|(
name|me
operator|->
name|button
argument_list|()
operator|==
name|mouseButton
operator|&&
name|gesture
operator|->
name|state
argument_list|()
operator|==
name|Qt
operator|::
name|NoGesture
condition|)
block|{
name|gesture
operator|->
name|setHotSpot
argument_list|(
name|QPointF
argument_list|(
name|me
operator|->
name|globalPos
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_type
operator|==
name|RmbAndCancelAllType
condition|)
name|gesture
operator|->
name|setGestureCancelPolicy
argument_list|(
name|QGesture
operator|::
name|CancelAllInContext
argument_list|)
expr_stmt|;
return|return
name|QGestureRecognizer
operator|::
name|TriggerGesture
return|;
block|}
break|break;
case|case
name|QEvent
operator|::
name|MouseButtonRelease
case|:
if|if
condition|(
name|me
operator|->
name|button
argument_list|()
operator|==
name|mouseButton
operator|&&
name|gesture
operator|->
name|state
argument_list|()
operator|>
name|Qt
operator|::
name|NoGesture
condition|)
return|return
name|QGestureRecognizer
operator|::
name|FinishGesture
return|;
default|default:
break|break;
block|}
return|return
name|QGestureRecognizer
operator|::
name|Ignore
return|;
block|}
private|private:
DECL|member|m_type
name|Type
name|m_type
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|ReuseCanceledGesturesWidget
class|class
name|ReuseCanceledGesturesWidget
super|:
specifier|public
name|QGraphicsWidget
block|{
public|public:
DECL|function|ReuseCanceledGesturesWidget
name|ReuseCanceledGesturesWidget
parameter_list|(
name|Qt
operator|::
name|GestureType
name|gestureType
init|=
name|Qt
operator|::
name|TapGesture
parameter_list|,
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_gestureType
argument_list|(
name|gestureType
argument_list|)
member_init_list|,
name|m_started
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_updated
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_canceled
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_finished
argument_list|(
literal|0
argument_list|)
block|{     }
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
name|QGesture
modifier|*
name|gesture
init|=
cast|static_cast
argument_list|<
name|QGestureEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
operator|->
name|gesture
argument_list|(
name|m_gestureType
argument_list|)
decl_stmt|;
if|if
condition|(
name|gesture
condition|)
block|{
switch|switch
condition|(
name|gesture
operator|->
name|state
argument_list|()
condition|)
block|{
case|case
name|Qt
operator|::
name|GestureStarted
case|:
name|m_started
operator|++
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureUpdated
case|:
name|m_updated
operator|++
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureFinished
case|:
name|m_finished
operator|++
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|GestureCanceled
case|:
name|m_canceled
operator|++
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
return|return
literal|true
return|;
block|}
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|GraphicsSceneMousePress
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
name|QGraphicsWidget
operator|::
name|event
argument_list|(
name|event
argument_list|)
return|;
block|}
DECL|function|started
name|int
name|started
parameter_list|()
block|{
return|return
name|m_started
return|;
block|}
DECL|function|updated
name|int
name|updated
parameter_list|()
block|{
return|return
name|m_updated
return|;
block|}
DECL|function|finished
name|int
name|finished
parameter_list|()
block|{
return|return
name|m_finished
return|;
block|}
DECL|function|canceled
name|int
name|canceled
parameter_list|()
block|{
return|return
name|m_canceled
return|;
block|}
private|private:
DECL|member|m_gestureType
name|Qt
operator|::
name|GestureType
name|m_gestureType
decl_stmt|;
DECL|member|m_started
name|int
name|m_started
decl_stmt|;
DECL|member|m_updated
name|int
name|m_updated
decl_stmt|;
DECL|member|m_canceled
name|int
name|m_canceled
decl_stmt|;
DECL|member|m_finished
name|int
name|m_finished
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testReuseCanceledGestures
name|void
name|tst_Gestures
operator|::
name|testReuseCanceledGestures
parameter_list|()
block|{
name|Qt
operator|::
name|GestureType
name|cancellingGestureTypeId
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|ReuseCanceledGesturesRecognizer
argument_list|(
name|ReuseCanceledGesturesRecognizer
operator|::
name|RmbAndCancelAllType
argument_list|)
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|GestureType
name|tapGestureTypeId
init|=
name|QGestureRecognizer
operator|::
name|registerRecognizer
argument_list|(
operator|new
name|ReuseCanceledGesturesRecognizer
argument_list|(
name|ReuseCanceledGesturesRecognizer
operator|::
name|LmbType
argument_list|)
argument_list|)
decl_stmt|;
name|QMainWindow
name|mw
decl_stmt|;
name|mw
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|QGraphicsView
modifier|*
name|gv
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|mw
argument_list|)
decl_stmt|;
name|QGraphicsScene
modifier|*
name|scene
init|=
operator|new
name|QGraphicsScene
decl_stmt|;
name|gv
operator|->
name|setScene
argument_list|(
name|scene
argument_list|)
expr_stmt|;
name|scene
operator|->
name|setSceneRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
comment|// Create container and add to the scene
name|ReuseCanceledGesturesWidget
modifier|*
name|container
init|=
operator|new
name|ReuseCanceledGesturesWidget
decl_stmt|;
name|container
operator|->
name|grabGesture
argument_list|(
name|cancellingGestureTypeId
argument_list|)
expr_stmt|;
comment|//<< container grabs canceling gesture
comment|// Create widget and add to the scene
name|ReuseCanceledGesturesWidget
modifier|*
name|target
init|=
operator|new
name|ReuseCanceledGesturesWidget
argument_list|(
name|tapGestureTypeId
argument_list|,
name|container
argument_list|)
decl_stmt|;
name|target
operator|->
name|grabGesture
argument_list|(
name|tapGestureTypeId
argument_list|)
expr_stmt|;
name|container
operator|->
name|setGeometry
argument_list|(
name|scene
operator|->
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|scene
operator|->
name|addItem
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|mw
operator|.
name|setCentralWidget
argument_list|(
name|gv
argument_list|)
expr_stmt|;
comment|// Viewport needs to grab all gestures that widgets in scene grab
name|gv
operator|->
name|viewport
argument_list|()
operator|->
name|grabGesture
argument_list|(
name|cancellingGestureTypeId
argument_list|)
expr_stmt|;
name|gv
operator|->
name|viewport
argument_list|()
operator|->
name|grabGesture
argument_list|(
name|tapGestureTypeId
argument_list|)
expr_stmt|;
name|mw
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|mw
argument_list|)
expr_stmt|;
name|QPoint
name|targetPos
argument_list|(
name|gv
operator|->
name|mapFromScene
argument_list|(
name|target
operator|->
name|mapToScene
argument_list|(
name|target
operator|->
name|rect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|targetPos
operator|=
name|gv
operator|->
name|viewport
argument_list|()
operator|->
name|mapFromParent
argument_list|(
name|targetPos
argument_list|)
expr_stmt|;
comment|// "Tap" starts on child widget
name|QTest
operator|::
name|mousePress
argument_list|(
name|gv
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|targetPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|started
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|updated
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|finished
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|canceled
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Canceling gesture starts on parent
name|QTest
operator|::
name|mousePress
argument_list|(
name|gv
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|RightButton
argument_list|,
literal|0
argument_list|,
name|targetPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|started
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|updated
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|finished
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|canceled
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//<- child canceled
comment|// Canceling gesture ends
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|gv
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|RightButton
argument_list|,
literal|0
argument_list|,
name|targetPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|started
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|updated
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|finished
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|canceled
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Tap would end if not canceled
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|gv
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|targetPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|started
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|updated
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|finished
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|canceled
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// New "Tap" starts
name|QTest
operator|::
name|mousePress
argument_list|(
name|gv
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|targetPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|started
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|updated
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|finished
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|canceled
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|gv
operator|->
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|targetPos
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|started
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|updated
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|finished
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|target
operator|->
name|canceled
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|conflictingGesturesInGraphicsView
name|void
name|tst_Gestures
operator|::
name|conflictingGesturesInGraphicsView
parameter_list|()
block|{
name|QGraphicsScene
name|scene
decl_stmt|;
name|GraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|setWindowFlags
argument_list|(
name|Qt
operator|::
name|X11BypassWindowManagerHint
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item1
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item1"
argument_list|)
decl_stmt|;
name|item1
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item1
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setZValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|GestureItem
modifier|*
name|item2
init|=
operator|new
name|GestureItem
argument_list|(
literal|"item2"
argument_list|)
decl_stmt|;
name|item2
operator|->
name|grabGesture
argument_list|(
name|CustomGesture
operator|::
name|GestureType
argument_list|)
expr_stmt|;
name|item2
operator|->
name|size
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|item2
operator|->
name|setZValue
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureVisible
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|int
name|TotalGestureEventsCount
init|=
name|CustomGesture
operator|::
name|SerialFinishedThreshold
operator|-
name|CustomGesture
operator|::
name|SerialStartedThreshold
operator|+
literal|1
decl_stmt|;
name|CustomEvent
name|event
decl_stmt|;
comment|// nobody accepts override
name|item1
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|item2
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|item2
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
name|item2
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item2
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// the original target accepts override
name|item1
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|item2
operator|->
name|acceptGestureOverride
operator|=
literal|true
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|item2
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
name|item2
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item2
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|item1
operator|->
name|reset
argument_list|()
expr_stmt|;
name|item2
operator|->
name|reset
argument_list|()
expr_stmt|;
comment|// the item behind accepts override
name|item1
operator|->
name|acceptGestureOverride
operator|=
literal|true
expr_stmt|;
name|item2
operator|->
name|acceptGestureOverride
operator|=
literal|false
expr_stmt|;
name|event
operator|.
name|hotSpot
operator|=
name|mapToGlobal
argument_list|(
name|item2
operator|->
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
name|item2
argument_list|,
operator|&
name|view
argument_list|)
expr_stmt|;
name|event
operator|.
name|hasHotSpot
operator|=
literal|true
expr_stmt|;
name|sendCustomGesture
argument_list|(
operator|&
name|event
argument_list|,
name|item2
argument_list|,
operator|&
name|scene
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item2
operator|->
name|gestureEventsReceived
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureOverrideEventsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|item1
operator|->
name|gestureEventsReceived
argument_list|,
name|TotalGestureEventsCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|NoConsumeWidgetBug13501
class|class
name|NoConsumeWidgetBug13501
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
protected|protected:
DECL|function|event
name|bool
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|Gesture
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|QWidget
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|bug_13501_gesture_not_accepted
name|void
name|tst_Gestures
operator|::
name|bug_13501_gesture_not_accepted
parameter_list|()
block|{
comment|// Create a gesture event that is not accepted by any widget
comment|// make sure this does not lead to an assert in QGestureManager
name|NoConsumeWidgetBug13501
name|w
decl_stmt|;
name|w
operator|.
name|grabGesture
argument_list|(
name|Qt
operator|::
name|TapGesture
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|w
argument_list|)
expr_stmt|;
comment|//QTest::mousePress(&ignoreEvent, Qt::LeftButton);
name|QTouchDevice
modifier|*
name|device
init|=
operator|new
name|QTouchDevice
decl_stmt|;
name|device
operator|->
name|setType
argument_list|(
name|QTouchDevice
operator|::
name|TouchScreen
argument_list|)
expr_stmt|;
name|QWindowSystemInterface
operator|::
name|registerTouchDevice
argument_list|(
name|device
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|touchEvent
argument_list|(
operator|&
name|w
argument_list|,
name|device
argument_list|)
operator|.
name|press
argument_list|(
literal|0
argument_list|,
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
operator|&
name|w
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_Gestures
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_gestures.moc"
end_include
end_unit
