begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QHBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QLabel>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QLineEdit>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QListWidget>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QTreeWidget>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QTextEdit>
end_include
begin_include
include|#
directive|include
file|<QDBusArgument>
end_include
begin_include
include|#
directive|include
file|<QDBusConnection>
end_include
begin_include
include|#
directive|include
file|<QDBusMessage>
end_include
begin_include
include|#
directive|include
file|<QDBusInterface>
end_include
begin_include
include|#
directive|include
file|<QDBusReply>
end_include
begin_include
include|#
directive|include
file|<atspi/atspi-constants.h>
end_include
begin_include
include|#
directive|include
file|"../../../../src/platformsupport/linuxaccessibility/dbusconnection_p.h"
end_include
begin_include
include|#
directive|include
file|"../../../../src/platformsupport/linuxaccessibility/struct_marshallers_p.h"
end_include
begin_define
DECL|macro|COMPARE3
define|#
directive|define
name|COMPARE3
parameter_list|(
name|v1
parameter_list|,
name|v2
parameter_list|,
name|v3
parameter_list|)
value|QCOMPARE(v1, v3); QCOMPARE(v2, v3);
end_define
begin_class
DECL|class|AccessibleTestWindow
class|class
name|AccessibleTestWindow
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|AccessibleTestWindow
name|AccessibleTestWindow
parameter_list|()
block|{
name|DBusConnection
name|c
decl_stmt|;
name|m_address
operator|=
name|c
operator|.
name|connection
argument_list|()
operator|.
name|baseService
argument_list|()
operator|.
name|toLatin1
argument_list|()
operator|.
name|data
argument_list|()
expr_stmt|;
operator|new
name|QHBoxLayout
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|function|dbusAddress
name|QString
name|dbusAddress
parameter_list|()
specifier|const
block|{
return|return
name|m_address
return|;
block|}
DECL|function|addWidget
name|void
name|addWidget
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|layout
argument_list|()
operator|->
name|addWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|widget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
DECL|function|clearChildren
name|void
name|clearChildren
parameter_list|()
block|{
name|qDeleteAll
argument_list|(
name|children
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|QHBoxLayout
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_address
name|QString
name|m_address
decl_stmt|;
DECL|member|m_bus
name|QString
name|m_bus
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|tst_QtAtSpi
class|class
name|tst_QtAtSpi
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|testLabel
parameter_list|()
function_decl|;
name|void
name|testLineEdit
parameter_list|()
function_decl|;
name|void
name|testListWidget
parameter_list|()
function_decl|;
name|void
name|testTreeWidget
parameter_list|()
function_decl|;
name|void
name|testTextEdit
parameter_list|()
function_decl|;
name|void
name|testSlider
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
private|private:
name|void
name|registerDbus
parameter_list|()
function_decl|;
specifier|static
name|QString
name|getParent
parameter_list|(
name|QDBusInterface
modifier|*
name|interface
parameter_list|)
function_decl|;
specifier|static
name|QStringList
name|getChildren
parameter_list|(
name|QDBusInterface
modifier|*
name|interface
parameter_list|)
function_decl|;
name|QDBusInterface
modifier|*
name|getInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|path
parameter_list|,
specifier|const
name|QString
modifier|&
name|interfaceName
parameter_list|)
function_decl|;
DECL|member|m_window
name|AccessibleTestWindow
modifier|*
name|m_window
decl_stmt|;
DECL|member|bus
name|QString
name|bus
decl_stmt|;
DECL|member|address
name|QString
name|address
decl_stmt|;
DECL|member|root
name|QDBusInterface
modifier|*
name|root
decl_stmt|;
comment|// the root object on dbus (for the app)
DECL|member|rootApplication
name|QDBusInterface
modifier|*
name|rootApplication
decl_stmt|;
DECL|member|mainWindow
name|QDBusInterface
modifier|*
name|mainWindow
decl_stmt|;
DECL|member|dbus
name|DBusConnection
name|dbus
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// helper to find children of a dbus object
end_comment
begin_function
DECL|function|getChildren
name|QStringList
name|tst_QtAtSpi
operator|::
name|getChildren
parameter_list|(
name|QDBusInterface
modifier|*
name|interface
parameter_list|)
block|{
name|QSpiObjectReferenceArray
name|list
decl_stmt|;
name|interface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetChildren"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|value
argument_list|<
name|QDBusArgument
argument_list|>
argument_list|()
operator|>>
name|list
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|interface
operator|->
name|property
argument_list|(
literal|"ChildCount"
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
name|list
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QStringList
name|children
decl_stmt|;
name|Q_FOREACH
argument_list|(
argument|const QSpiObjectReference&ref
argument_list|,
argument|list
argument_list|)
name|children
operator|<<
name|ref
operator|.
name|path
operator|.
name|path
argument_list|()
expr_stmt|;
return|return
name|children
return|;
block|}
end_function
begin_function
DECL|function|getParent
name|QString
name|tst_QtAtSpi
operator|::
name|getParent
parameter_list|(
name|QDBusInterface
modifier|*
name|interface
parameter_list|)
block|{
if|if
condition|(
operator|!
name|interface
operator|->
name|isValid
argument_list|()
condition|)
return|return
name|QString
argument_list|()
return|;
name|QVariant
name|var
init|=
name|interface
operator|->
name|property
argument_list|(
literal|"Parent"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|var
operator|.
name|canConvert
argument_list|<
name|QSpiObjectReference
argument_list|>
argument_list|()
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"Invalid parent"
expr_stmt|;
return|return
name|QString
argument_list|()
return|;
block|}
name|QSpiObjectReference
name|parent
init|=
name|var
operator|.
name|value
argument_list|<
name|QSpiObjectReference
argument_list|>
argument_list|()
decl_stmt|;
return|return
name|parent
operator|.
name|path
operator|.
name|path
argument_list|()
return|;
block|}
end_function
begin_comment
comment|// helper to get dbus object
end_comment
begin_function
DECL|function|getInterface
name|QDBusInterface
modifier|*
name|tst_QtAtSpi
operator|::
name|getInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|path
parameter_list|,
specifier|const
name|QString
modifier|&
name|interfaceName
parameter_list|)
block|{
return|return
operator|new
name|QDBusInterface
argument_list|(
name|address
argument_list|,
name|path
argument_list|,
name|interfaceName
argument_list|,
name|dbus
operator|.
name|connection
argument_list|()
argument_list|,
name|this
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|initTestCase
name|void
name|tst_QtAtSpi
operator|::
name|initTestCase
parameter_list|()
block|{
comment|// Oxygen style creates many extra items, it's simply unusable here
name|qDebug
argument_list|()
operator|<<
literal|"Using plastique style..."
expr_stmt|;
name|qApp
operator|->
name|setStyle
argument_list|(
literal|"plastique"
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setApplicationName
argument_list|(
literal|"tst_QtAtSpi app"
argument_list|)
expr_stmt|;
name|dbus
operator|=
name|DBusConnection
argument_list|()
expr_stmt|;
name|m_window
operator|=
operator|new
name|AccessibleTestWindow
argument_list|()
expr_stmt|;
name|m_window
operator|->
name|show
argument_list|()
expr_stmt|;
comment|// this has the side-effect of immediately activating accessibility
name|qDebug
argument_list|()
operator|<<
literal|"Explicitly activating accessibility..."
expr_stmt|;
operator|delete
name|QAccessible
operator|::
name|queryAccessibleInterface
argument_list|(
name|m_window
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowExposed
argument_list|(
name|m_window
argument_list|)
expr_stmt|;
name|address
operator|=
name|m_window
operator|->
name|dbusAddress
argument_list|()
expr_stmt|;
name|registerDbus
argument_list|()
expr_stmt|;
name|QStringList
name|appChildren
init|=
name|getChildren
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QString
name|window
init|=
name|appChildren
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|mainWindow
operator|=
name|getInterface
argument_list|(
name|window
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QtAtSpi
operator|::
name|cleanupTestCase
parameter_list|()
block|{
operator|delete
name|mainWindow
expr_stmt|;
operator|delete
name|rootApplication
expr_stmt|;
operator|delete
name|root
expr_stmt|;
operator|delete
name|m_window
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerDbus
name|void
name|tst_QtAtSpi
operator|::
name|registerDbus
parameter_list|()
block|{
name|QVERIFY
argument_list|(
name|dbus
operator|.
name|connection
argument_list|()
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|=
name|getInterface
argument_list|(
literal|"/org/a11y/atspi/accessible/root"
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
expr_stmt|;
name|rootApplication
operator|=
name|getInterface
argument_list|(
literal|"/org/a11y/atspi/accessible/root"
argument_list|,
literal|"org.a11y.atspi.Application"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|root
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rootApplication
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QStringList
name|appChildren
init|=
name|getChildren
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|QString
name|window
init|=
name|appChildren
operator|.
name|at
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|mainWindow
operator|=
name|getInterface
argument_list|(
name|window
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
expr_stmt|;
block|}
end_function
begin_define
DECL|macro|ROOTPATH
define|#
directive|define
name|ROOTPATH
value|"/org/a11y/atspi/accessible"
end_define
begin_function
DECL|function|testLabel
name|void
name|tst_QtAtSpi
operator|::
name|testLabel
parameter_list|()
block|{
name|QLabel
modifier|*
name|l
init|=
operator|new
name|QLabel
argument_list|(
name|m_window
argument_list|)
decl_stmt|;
name|l
operator|->
name|setText
argument_list|(
literal|"Hello A11y"
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|addWidget
argument_list|(
name|l
argument_list|)
expr_stmt|;
comment|// Application
name|QCOMPARE
argument_list|(
name|getParent
argument_list|(
name|mainWindow
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|ATSPI_DBUS_PATH_ROOT
argument_list|)
argument_list|)
expr_stmt|;
name|QStringList
name|children
init|=
name|getChildren
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|labelInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|labelInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|labelInterface
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Hello A11y"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|getChildren
argument_list|(
name|labelInterface
argument_list|)
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|labelInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"label"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|labelInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRole"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toUInt
argument_list|()
argument_list|,
literal|29u
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|getParent
argument_list|(
name|labelInterface
argument_list|)
argument_list|,
name|mainWindow
operator|->
name|path
argument_list|()
argument_list|)
expr_stmt|;
name|l
operator|->
name|setText
argument_list|(
literal|"New text"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|labelInterface
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|l
operator|->
name|text
argument_list|()
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|clearChildren
argument_list|()
expr_stmt|;
operator|delete
name|labelInterface
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testLineEdit
name|void
name|tst_QtAtSpi
operator|::
name|testLineEdit
parameter_list|()
block|{
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
argument_list|(
name|m_window
argument_list|)
decl_stmt|;
name|lineEdit
operator|->
name|setText
argument_list|(
literal|"a11y test QLineEdit"
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|addWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|QStringList
name|children
init|=
name|getChildren
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|accessibleInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|editableTextInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.EditableText"
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|textInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Text"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|accessibleInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editableTextInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|textInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|accessibleInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"text"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetText"
argument_list|,
literal|5
argument_list|,
operator|-
literal|1
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"test QLineEdit"
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|newText
init|=
literal|"Text has changed!"
decl_stmt|;
name|editableTextInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"SetTextContents"
argument_list|,
name|newText
argument_list|)
expr_stmt|;
name|COMPARE3
argument_list|(
name|lineEdit
operator|->
name|text
argument_list|()
argument_list|,
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetText"
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|newText
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetText"
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text"
argument_list|)
argument_list|)
expr_stmt|;
name|editableTextInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"DeleteText"
argument_list|,
literal|4
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|COMPARE3
argument_list|(
name|lineEdit
operator|->
name|text
argument_list|()
argument_list|,
literal|"Te"
operator|+
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetText"
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"ed!"
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text changed!"
argument_list|)
argument_list|)
expr_stmt|;
name|editableTextInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"InsertText"
argument_list|,
literal|12
argument_list|,
literal|" again "
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|text
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Text changed again!"
argument_list|)
argument_list|)
expr_stmt|;
name|COMPARE3
argument_list|(
name|lineEdit
operator|->
name|text
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
name|textInterface
operator|->
name|property
argument_list|(
literal|"CharacterCount"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|19
argument_list|)
expr_stmt|;
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"SetCaretOffset"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|COMPARE3
argument_list|(
name|lineEdit
operator|->
name|cursorPosition
argument_list|()
argument_list|,
name|textInterface
operator|->
name|property
argument_list|(
literal|"CaretOffset"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"AddSelection"
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|data
init|=
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetSelection"
argument_list|,
literal|0
argument_list|)
operator|.
name|arguments
argument_list|()
decl_stmt|;
name|COMPARE3
argument_list|(
name|data
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|selectionStart
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|data
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|selectedText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetNSelections"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"SetSelection"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|data
operator|=
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetSelection"
argument_list|,
literal|0
argument_list|)
operator|.
name|arguments
argument_list|()
expr_stmt|;
name|COMPARE3
argument_list|(
name|data
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|selectionStart
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|COMPARE3
argument_list|(
name|data
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|lineEdit
operator|->
name|selectedText
argument_list|()
operator|.
name|length
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"RemoveSelection"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|lineEdit
operator|->
name|selectionStart
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetNSelections"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|clearChildren
argument_list|()
expr_stmt|;
operator|delete
name|accessibleInterface
expr_stmt|;
operator|delete
name|textInterface
expr_stmt|;
operator|delete
name|editableTextInterface
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testListWidget
name|void
name|tst_QtAtSpi
operator|::
name|testListWidget
parameter_list|()
block|{
name|QListWidget
modifier|*
name|lw
init|=
operator|new
name|QListWidget
decl_stmt|;
name|lw
operator|->
name|addItem
argument_list|(
literal|"Hello"
argument_list|)
expr_stmt|;
name|lw
operator|->
name|addItem
argument_list|(
literal|"Good morning"
argument_list|)
expr_stmt|;
name|lw
operator|->
name|addItem
argument_list|(
literal|"Good bye"
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|addWidget
argument_list|(
name|lw
argument_list|)
expr_stmt|;
name|QStringList
name|children
init|=
name|getChildren
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|listIface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|listIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"list"
argument_list|)
argument_list|)
expr_stmt|;
name|QStringList
name|tableChildren
init|=
name|getChildren
argument_list|(
name|listIface
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tableChildren
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell1
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell1
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"list item"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell1
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Hello"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell2
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell2
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"list item"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell2
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Good morning"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell3
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell3
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"list item"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell3
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Good bye"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|cell1
expr_stmt|;
operator|delete
name|cell2
expr_stmt|;
operator|delete
name|cell3
expr_stmt|;
name|m_window
operator|->
name|clearChildren
argument_list|()
expr_stmt|;
operator|delete
name|listIface
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testTreeWidget
name|void
name|tst_QtAtSpi
operator|::
name|testTreeWidget
parameter_list|()
block|{
name|QTreeWidget
modifier|*
name|tree
init|=
operator|new
name|QTreeWidget
decl_stmt|;
name|tree
operator|->
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|tree
operator|->
name|setHeaderLabels
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"Header 1"
operator|<<
literal|"Header 2"
argument_list|)
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|top1
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"0.0"
operator|<<
literal|"0.1"
argument_list|)
decl_stmt|;
name|tree
operator|->
name|addTopLevelItem
argument_list|(
name|top1
argument_list|)
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|top2
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"1.0"
operator|<<
literal|"1.1"
argument_list|)
decl_stmt|;
name|tree
operator|->
name|addTopLevelItem
argument_list|(
name|top2
argument_list|)
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|child1
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|QStringList
argument_list|()
operator|<<
literal|"1.0 0.0"
operator|<<
literal|"1.0 0.1"
argument_list|)
decl_stmt|;
name|top2
operator|->
name|addChild
argument_list|(
name|child1
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|addWidget
argument_list|(
name|tree
argument_list|)
expr_stmt|;
name|QStringList
name|children
init|=
name|getChildren
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|treeIface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|treeIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"tree"
argument_list|)
argument_list|)
expr_stmt|;
name|QStringList
name|tableChildren
init|=
name|getChildren
argument_list|(
name|treeIface
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tableChildren
operator|.
name|size
argument_list|()
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell1
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell1
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"column header"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell1
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Header 1"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell2
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell2
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRoleName"
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"column header"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cell2
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"Header 2"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell3
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell3
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell4
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell4
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"0.1"
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|->
name|expandItem
argument_list|(
name|top2
argument_list|)
expr_stmt|;
name|tableChildren
operator|=
name|getChildren
argument_list|(
name|treeIface
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tableChildren
operator|.
name|size
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell5
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|6
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell5
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"1.0 0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|cell6
init|=
name|getInterface
argument_list|(
name|tableChildren
operator|.
name|at
argument_list|(
literal|7
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|cell6
operator|->
name|property
argument_list|(
literal|"Name"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"1.0 0.1"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
modifier|*
name|treeTableIface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Table"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|0
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|1
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|2
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|3
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|4
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|5
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|6
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRowAtIndex"
argument_list|,
literal|7
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|0
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|1
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|2
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|3
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|4
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|5
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|6
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|treeTableIface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetColumnAtIndex"
argument_list|,
literal|7
argument_list|)
operator|.
name|arguments
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|treeTableIface
expr_stmt|;
operator|delete
name|cell1
expr_stmt|;
operator|delete
name|cell2
expr_stmt|;
operator|delete
name|cell3
expr_stmt|;
operator|delete
name|cell4
expr_stmt|;
operator|delete
name|cell5
expr_stmt|;
operator|delete
name|cell6
expr_stmt|;
name|m_window
operator|->
name|clearChildren
argument_list|()
expr_stmt|;
operator|delete
name|treeIface
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testTextEdit
name|void
name|tst_QtAtSpi
operator|::
name|testTextEdit
parameter_list|()
block|{
name|QTextEdit
modifier|*
name|textEdit
init|=
operator|new
name|QTextEdit
argument_list|(
name|m_window
argument_list|)
decl_stmt|;
name|textEdit
operator|->
name|setText
argument_list|(
literal|"<html><head></head><body>This is a<b>sample</b> text.<br />"
literal|"How are you today</body></html>"
argument_list|)
expr_stmt|;
name|textEdit
operator|->
name|show
argument_list|()
expr_stmt|;
name|m_window
operator|->
name|addWidget
argument_list|(
name|textEdit
argument_list|)
expr_stmt|;
name|QStringList
name|children
init|=
name|getChildren
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|accessibleInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|editableTextInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.EditableText"
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|textInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Text"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|accessibleInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|editableTextInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|textInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|callResult
decl_stmt|;
name|QDBusMessage
name|msg
init|=
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetText"
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|callResult
operator|=
name|msg
operator|.
name|arguments
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|callResult
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"This "
argument_list|)
argument_list|)
expr_stmt|;
name|msg
operator|=
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetTextAtOffset"
argument_list|,
literal|12
argument_list|,
operator|(
name|uint
operator|)
name|ATSPI_TEXT_BOUNDARY_WORD_START
argument_list|)
expr_stmt|;
name|callResult
operator|=
name|msg
operator|.
name|arguments
argument_list|()
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Word should contain space at end according to atspi."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|callResult
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
literal|"sample "
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|callResult
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"Due to missing space the count is off by one."
argument_list|,
name|Continue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|callResult
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|17
argument_list|)
expr_stmt|;
comment|// Check if at least CharacterExtents and RangeExtents give a consistent result
name|QDBusReply
argument_list|<
name|QRect
argument_list|>
name|replyRect20
init|=
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetCharacterExtents"
argument_list|,
literal|20
argument_list|,
name|ATSPI_COORD_TYPE_SCREEN
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|replyRect20
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QRect
name|r1
init|=
name|replyRect20
operator|.
name|value
argument_list|()
decl_stmt|;
name|QDBusReply
argument_list|<
name|QRect
argument_list|>
name|replyRect21
init|=
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetCharacterExtents"
argument_list|,
literal|21
argument_list|,
name|ATSPI_COORD_TYPE_SCREEN
argument_list|)
decl_stmt|;
name|QRect
name|r2
init|=
name|replyRect21
operator|.
name|value
argument_list|()
decl_stmt|;
name|QDBusReply
argument_list|<
name|QRect
argument_list|>
name|reply
init|=
name|textInterface
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"GetRangeExtents"
argument_list|,
literal|20
argument_list|,
literal|21
argument_list|,
name|ATSPI_COORD_TYPE_SCREEN
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|reply
operator|.
name|value
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rect
argument_list|,
name|r1
operator||
name|r2
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|clearChildren
argument_list|()
expr_stmt|;
operator|delete
name|textInterface
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testSlider
name|void
name|tst_QtAtSpi
operator|::
name|testSlider
parameter_list|()
block|{
name|QSlider
modifier|*
name|slider
init|=
operator|new
name|QSlider
argument_list|(
name|m_window
argument_list|)
decl_stmt|;
name|slider
operator|->
name|setMinimum
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|slider
operator|->
name|setMaximum
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|slider
operator|->
name|setValue
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|addWidget
argument_list|(
name|slider
argument_list|)
expr_stmt|;
name|QStringList
name|children
init|=
name|getChildren
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|accessibleInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Accessible"
argument_list|)
decl_stmt|;
name|QDBusInterface
modifier|*
name|valueInterface
init|=
name|getInterface
argument_list|(
name|children
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"org.a11y.atspi.Value"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|accessibleInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|valueInterface
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|valueInterface
operator|->
name|property
argument_list|(
literal|"CurrentValue"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|valueInterface
operator|->
name|property
argument_list|(
literal|"MinimumValue"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|valueInterface
operator|->
name|property
argument_list|(
literal|"MaximumValue"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|valueInterface
operator|->
name|setProperty
argument_list|(
literal|"CurrentValue"
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|valueInterface
operator|->
name|property
argument_list|(
literal|"CurrentValue"
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QtAtSpi
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qaccessibilitylinux.moc"
end_include
end_unit
