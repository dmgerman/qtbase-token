begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qdesktopwidget.h>
end_include
begin_include
include|#
directive|include
file|<qscreen_qws.h>
end_include
begin_include
include|#
directive|include
file|<qscreendriverfactory_qws.h>
end_include
begin_include
include|#
directive|include
file|<qlabel.h>
end_include
begin_class
DECL|class|tst_QMultiScreen
class|class
name|tst_QMultiScreen
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QMultiScreen
name|tst_QMultiScreen
parameter_list|()
member_init_list|:
name|screen
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|oldScreen
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|~tst_QMultiScreen
name|~
name|tst_QMultiScreen
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|widgetSetFixedSize
parameter_list|()
function_decl|;
name|void
name|grabWindow
parameter_list|()
function_decl|;
private|private:
DECL|member|screen
name|QScreen
modifier|*
name|screen
decl_stmt|;
DECL|member|oldScreen
name|QScreen
modifier|*
name|oldScreen
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QMultiScreen
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|screen
operator|->
name|shutdownDevice
argument_list|()
expr_stmt|;
name|screen
operator|->
name|disconnect
argument_list|()
expr_stmt|;
operator|delete
name|screen
expr_stmt|;
name|screen
operator|=
literal|0
expr_stmt|;
name|qt_screen
operator|=
name|oldScreen
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initTestCase
name|void
name|tst_QMultiScreen
operator|::
name|initTestCase
parameter_list|()
block|{
name|oldScreen
operator|=
name|qt_screen
expr_stmt|;
name|QVERIFY
argument_list|(
name|QScreenDriverFactory
operator|::
name|keys
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"Multi"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QScreenDriverFactory
operator|::
name|keys
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"VNC"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|int
name|id
init|=
literal|10
decl_stmt|;
name|screen
operator|=
name|QScreenDriverFactory
operator|::
name|create
argument_list|(
literal|"Multi"
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|screen
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|screen
operator|->
name|connect
argument_list|(
name|QString
argument_list|(
literal|"Multi: "
literal|"VNC:size=640x480:depth=32:offset=0,0:%1 "
literal|"VNC:size=640x480:depth=32:offset=640,0:%2 "
literal|"VNC:size=640x480:depth=16:offset=0,480:%3 "
literal|":%4"
argument_list|)
operator|.
name|arg
argument_list|(
name|id
operator|+
literal|1
argument_list|)
operator|.
name|arg
argument_list|(
name|id
operator|+
literal|2
argument_list|)
operator|.
name|arg
argument_list|(
name|id
operator|+
literal|3
argument_list|)
operator|.
name|arg
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|screen
operator|->
name|initDevice
argument_list|()
argument_list|)
expr_stmt|;
name|QDesktopWidget
name|desktop
decl_stmt|;
name|QCOMPARE
argument_list|(
name|desktop
operator|.
name|numScreens
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|widgetSetFixedSize
name|void
name|tst_QMultiScreen
operator|::
name|widgetSetFixedSize
parameter_list|()
block|{
name|QDesktopWidget
name|desktop
decl_stmt|;
name|QRect
name|maxRect
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|desktop
operator|.
name|numScreens
argument_list|()
condition|;
operator|++
name|i
control|)
name|maxRect
operator||=
name|desktop
operator|.
name|availableGeometry
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|maxRect
operator|=
name|maxRect
operator|.
name|adjusted
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
operator|-
literal|50
argument_list|,
operator|-
literal|50
argument_list|)
expr_stmt|;
comment|// make sure we can set a size larger than a single screen (task 166368)
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|setFixedSize
argument_list|(
name|maxRect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|w
operator|.
name|geometry
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|maxRect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|grabWindow
name|void
name|tst_QMultiScreen
operator|::
name|grabWindow
parameter_list|()
block|{
name|QDesktopWidget
name|desktop
decl_stmt|;
name|QVERIFY
argument_list|(
name|desktop
operator|.
name|numScreens
argument_list|()
operator|>=
literal|2
argument_list|)
expr_stmt|;
specifier|const
name|QRect
name|r0
init|=
name|desktop
operator|.
name|availableGeometry
argument_list|(
literal|0
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
operator|-
literal|50
argument_list|,
operator|-
literal|50
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|r1
init|=
name|desktop
operator|.
name|availableGeometry
argument_list|(
literal|1
argument_list|)
operator|.
name|adjusted
argument_list|(
literal|60
argument_list|,
literal|60
argument_list|,
operator|-
literal|60
argument_list|,
operator|-
literal|60
argument_list|)
decl_stmt|;
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|setGeometry
argument_list|(
name|r0
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
name|QLabel
name|l
argument_list|(
literal|"hi there"
argument_list|)
decl_stmt|;
name|l
operator|.
name|setGeometry
argument_list|(
name|r1
argument_list|)
expr_stmt|;
name|l
operator|.
name|show
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
comment|// workaround for glib event loop
name|QVERIFY
argument_list|(
name|desktop
operator|.
name|screenNumber
argument_list|(
operator|&
name|w
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|desktop
operator|.
name|screenNumber
argument_list|(
operator|&
name|l
argument_list|)
operator|==
literal|1
argument_list|)
expr_stmt|;
specifier|const
name|QPixmap
name|p0
init|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|w
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
specifier|const
name|QPixmap
name|p1
init|=
name|QPixmap
operator|::
name|grabWindow
argument_list|(
name|l
operator|.
name|winId
argument_list|()
argument_list|)
decl_stmt|;
comment|//     p0.save("w.png", "PNG");
comment|//     p1.save("l.png", "PNG");
name|QCOMPARE
argument_list|(
name|p0
operator|.
name|size
argument_list|()
argument_list|,
name|w
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p1
operator|.
name|size
argument_list|()
argument_list|,
name|l
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QImage
name|img0
init|=
name|p0
operator|.
name|toImage
argument_list|()
decl_stmt|;
specifier|const
name|QImage
name|img1
init|=
name|p1
operator|.
name|toImage
argument_list|()
decl_stmt|;
comment|//     QPixmap::grabWidget(&w).toImage().convertToFormat(img0.format()).save("w_img.png", "PNG");
comment|//     QPixmap::grabWidget(&l).toImage().convertToFormat(img1.format()).save("l_img.png", "PNG");
name|QImage
operator|::
name|Format
name|format
init|=
name|QImage
operator|::
name|Format_RGB16
decl_stmt|;
name|QCOMPARE
argument_list|(
name|img0
operator|.
name|convertToFormat
argument_list|(
name|format
argument_list|)
argument_list|,
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|w
argument_list|)
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|format
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|img1
operator|.
name|convertToFormat
argument_list|(
name|format
argument_list|)
argument_list|,
name|QPixmap
operator|::
name|grabWidget
argument_list|(
operator|&
name|l
argument_list|)
operator|.
name|toImage
argument_list|()
operator|.
name|convertToFormat
argument_list|(
name|format
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QMultiScreen
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qmultiscreen.moc"
end_include
end_unit
