begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qgroupbox.h>
end_include
begin_include
include|#
directive|include
file|<qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<qwindowsstyle.h>
end_include
begin_include
include|#
directive|include
file|<qdatetimeedit.h>
end_include
begin_include
include|#
directive|include
file|<qlocale.h>
end_include
begin_include
include|#
directive|include
file|<qlayout.h>
end_include
begin_include
include|#
directive|include
file|<qeventloop.h>
end_include
begin_include
include|#
directive|include
file|<qstyle.h>
end_include
begin_include
include|#
directive|include
file|<qstyle.h>
end_include
begin_include
include|#
directive|include
file|<QStyleOptionSpinBox>
end_include
begin_include
include|#
directive|include
file|<QDate>
end_include
begin_include
include|#
directive|include
file|<QDateTime>
end_include
begin_include
include|#
directive|include
file|<QTime>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|<QDateTimeEdit>
end_include
begin_include
include|#
directive|include
file|<QCalendarWidget>
end_include
begin_include
include|#
directive|include
file|<QWidget>
end_include
begin_include
include|#
directive|include
file|<QLineEdit>
end_include
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QLocale>
end_include
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|<QVariantList>
end_include
begin_include
include|#
directive|include
file|<QVariant>
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QPoint>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QRect>
end_include
begin_include
include|#
directive|include
file|<QCursor>
end_include
begin_include
include|#
directive|include
file|<QEventLoop>
end_include
begin_include
include|#
directive|include
file|<QStyle>
end_include
begin_include
include|#
directive|include
file|<QStyleOptionComboBox>
end_include
begin_include
include|#
directive|include
file|<QTimeEdit>
end_include
begin_include
include|#
directive|include
file|<QMetaType>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|<QWheelEvent>
end_include
begin_include
include|#
directive|include
file|<QTest>
end_include
begin_include
include|#
directive|include
file|<QSignalSpy>
end_include
begin_include
include|#
directive|include
file|<QTestEventList>
end_include
begin_include
include|#
directive|include
file|<QDateEdit>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_WIN
end_ifdef
begin_include
include|#
directive|include
file|<windows.h>
end_include
begin_undef
DECL|macro|min
undef|#
directive|undef
name|min
end_undef
begin_undef
DECL|macro|max
undef|#
directive|undef
name|max
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
DECL|variable|QDate
name|Q_DECLARE_METATYPE
argument_list|(
name|QDate
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|Key
name|Q_DECLARE_METATYPE
argument_list|(
name|Qt
operator|::
name|Key
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|KeyboardModifiers
name|Q_DECLARE_METATYPE
argument_list|(
name|Qt
operator|::
name|KeyboardModifiers
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|KeyboardModifier
name|Q_DECLARE_METATYPE
argument_list|(
name|Qt
operator|::
name|KeyboardModifier
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|QDateTime
name|Q_DECLARE_METATYPE
argument_list|(
name|QDateTime
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|QTime
name|Q_DECLARE_METATYPE
argument_list|(
name|QTime
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|QList
name|Q_DECLARE_METATYPE
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|)
expr_stmt|;
end_expr_stmt
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
end_if
begin_function
DECL|function|qt_wince_is_platform
name|bool
name|qt_wince_is_platform
parameter_list|(
specifier|const
name|QString
modifier|&
name|platformString
parameter_list|)
block|{
name|wchar_t
name|tszPlatform
index|[
literal|64
index|]
decl_stmt|;
if|if
condition|(
name|SystemParametersInfo
argument_list|(
name|SPI_GETPLATFORMTYPE
argument_list|,
sizeof|sizeof
argument_list|(
name|tszPlatform
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
operator|*
name|tszPlatform
argument_list|)
argument_list|,
name|tszPlatform
argument_list|,
literal|0
argument_list|)
condition|)
if|if
condition|(
literal|0
operator|==
name|_tcsicmp
argument_list|(
cast|reinterpret_cast
argument_list|<
specifier|const
name|wchar_t
operator|*
argument_list|>
argument_list|(
name|platformString
operator|.
name|utf16
argument_list|()
argument_list|)
argument_list|,
name|tszPlatform
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|qt_wince_is_pocket_pc
name|bool
name|qt_wince_is_pocket_pc
parameter_list|()
block|{
return|return
name|qt_wince_is_platform
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"PocketPC"
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|qt_wince_is_smartphone
name|bool
name|qt_wince_is_smartphone
parameter_list|()
block|{
return|return
name|qt_wince_is_platform
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"Smartphone"
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|qt_wince_is_mobile
name|bool
name|qt_wince_is_mobile
parameter_list|()
block|{
return|return
operator|(
name|qt_wince_is_smartphone
argument_list|()
operator|||
name|qt_wince_is_pocket_pc
argument_list|()
operator|)
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_class
DECL|class|EditorDateEdit
class|class
name|EditorDateEdit
super|:
specifier|public
name|QDateTimeEdit
block|{
name|Q_OBJECT
public|public:
DECL|function|EditorDateEdit
name|EditorDateEdit
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QDateTimeEdit
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|lineEdit
name|QLineEdit
modifier|*
name|lineEdit
parameter_list|()
block|{
return|return
name|QDateTimeEdit
operator|::
name|lineEdit
argument_list|()
return|;
block|}
friend|friend
class_decl|class
name|tst_QDateTimeEdit
class_decl|;
block|}
class|;
end_class
begin_class
DECL|class|tst_QDateTimeEdit
class|class
name|tst_QDateTimeEdit
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QDateTimeEdit
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QDateTimeEdit
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|cachedDayTest
parameter_list|()
function_decl|;
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|constructor_qwidget
parameter_list|()
function_decl|;
name|void
name|constructor_qdatetime_data
parameter_list|()
function_decl|;
name|void
name|constructor_qdatetime
parameter_list|()
function_decl|;
name|void
name|constructor_qdate_data
parameter_list|()
function_decl|;
name|void
name|constructor_qdate
parameter_list|()
function_decl|;
name|void
name|constructor_qtime_data
parameter_list|()
function_decl|;
name|void
name|constructor_qtime
parameter_list|()
function_decl|;
name|void
name|sectionText_data
parameter_list|()
function_decl|;
name|void
name|sectionText
parameter_list|()
function_decl|;
name|void
name|dateTimeSignalChecking_data
parameter_list|()
function_decl|;
name|void
name|dateTimeSignalChecking
parameter_list|()
function_decl|;
name|void
name|mousePress
parameter_list|()
function_decl|;
name|void
name|stepHourAMPM_data
parameter_list|()
function_decl|;
name|void
name|stepHourAMPM
parameter_list|()
function_decl|;
name|void
name|displayedSections_data
parameter_list|()
function_decl|;
name|void
name|displayedSections
parameter_list|()
function_decl|;
name|void
name|currentSection_data
parameter_list|()
function_decl|;
name|void
name|currentSection
parameter_list|()
function_decl|;
name|void
name|setCurrentSection
parameter_list|()
function_decl|;
name|void
name|setCurrentSection_data
parameter_list|()
function_decl|;
name|void
name|minimumDate_data
parameter_list|()
function_decl|;
name|void
name|minimumDate
parameter_list|()
function_decl|;
name|void
name|maximumDate_data
parameter_list|()
function_decl|;
name|void
name|maximumDate
parameter_list|()
function_decl|;
name|void
name|clearMinimumDate_data
parameter_list|()
function_decl|;
name|void
name|clearMinimumDate
parameter_list|()
function_decl|;
name|void
name|clearMaximumDate_data
parameter_list|()
function_decl|;
name|void
name|clearMaximumDate
parameter_list|()
function_decl|;
name|void
name|minimumDateTime_data
parameter_list|()
function_decl|;
name|void
name|minimumDateTime
parameter_list|()
function_decl|;
name|void
name|maximumDateTime_data
parameter_list|()
function_decl|;
name|void
name|maximumDateTime
parameter_list|()
function_decl|;
name|void
name|clearMinimumDateTime_data
parameter_list|()
function_decl|;
name|void
name|clearMinimumDateTime
parameter_list|()
function_decl|;
name|void
name|clearMaximumDateTime_data
parameter_list|()
function_decl|;
name|void
name|clearMaximumDateTime
parameter_list|()
function_decl|;
name|void
name|displayFormat_data
parameter_list|()
function_decl|;
name|void
name|displayFormat
parameter_list|()
function_decl|;
name|void
name|specialValueText
parameter_list|()
function_decl|;
name|void
name|setRange_data
parameter_list|()
function_decl|;
name|void
name|setRange
parameter_list|()
function_decl|;
name|void
name|selectAndScrollWithKeys
parameter_list|()
function_decl|;
name|void
name|backspaceKey
parameter_list|()
function_decl|;
name|void
name|deleteKey
parameter_list|()
function_decl|;
name|void
name|tabKeyNavigation
parameter_list|()
function_decl|;
name|void
name|tabKeyNavigationWithPrefix
parameter_list|()
function_decl|;
name|void
name|tabKeyNavigationWithSuffix
parameter_list|()
function_decl|;
name|void
name|enterKey
parameter_list|()
function_decl|;
name|void
name|readOnly
parameter_list|()
function_decl|;
name|void
name|wrappingDate_data
parameter_list|()
function_decl|;
name|void
name|wrappingDate
parameter_list|()
function_decl|;
name|void
name|dateSignalChecking_data
parameter_list|()
function_decl|;
name|void
name|dateSignalChecking
parameter_list|()
function_decl|;
name|void
name|wrappingTime_data
parameter_list|()
function_decl|;
name|void
name|wrappingTime
parameter_list|()
function_decl|;
name|void
name|userKeyPress_Time_data
parameter_list|()
function_decl|;
name|void
name|userKeyPress_Time
parameter_list|()
function_decl|;
name|void
name|timeSignalChecking_data
parameter_list|()
function_decl|;
name|void
name|timeSignalChecking
parameter_list|()
function_decl|;
name|void
name|weirdCase
parameter_list|()
function_decl|;
name|void
name|newCase
parameter_list|()
function_decl|;
name|void
name|newCase2
parameter_list|()
function_decl|;
name|void
name|newCase3
parameter_list|()
function_decl|;
name|void
name|newCase4
parameter_list|()
function_decl|;
name|void
name|newCase5
parameter_list|()
function_decl|;
name|void
name|newCase6
parameter_list|()
function_decl|;
name|void
name|task98554
parameter_list|()
function_decl|;
name|void
name|task149097
parameter_list|()
function_decl|;
name|void
name|cursorPos
parameter_list|()
function_decl|;
name|void
name|calendarPopup
parameter_list|()
function_decl|;
name|void
name|hour12Test
parameter_list|()
function_decl|;
name|void
name|yyTest
parameter_list|()
function_decl|;
name|void
name|task108572
parameter_list|()
function_decl|;
name|void
name|task148725
parameter_list|()
function_decl|;
name|void
name|task148522
parameter_list|()
function_decl|;
name|void
name|setSelectedSection
parameter_list|()
function_decl|;
name|void
name|reverseTest
parameter_list|()
function_decl|;
name|void
name|ddMMMMyyyy
parameter_list|()
function_decl|;
name|void
name|wheelEvent
parameter_list|()
function_decl|;
name|void
name|specialValueCornerCase
parameter_list|()
function_decl|;
name|void
name|cursorPositionOnInit
parameter_list|()
function_decl|;
name|void
name|task118867
parameter_list|()
function_decl|;
name|void
name|nextPrevSection_data
parameter_list|()
function_decl|;
name|void
name|nextPrevSection
parameter_list|()
function_decl|;
name|void
name|dateEditTimeEditFormats
parameter_list|()
function_decl|;
name|void
name|timeSpec_data
parameter_list|()
function_decl|;
name|void
name|timeSpec
parameter_list|()
function_decl|;
name|void
name|timeSpecBug
parameter_list|()
function_decl|;
name|void
name|monthEdgeCase
parameter_list|()
function_decl|;
name|void
name|setLocale
parameter_list|()
function_decl|;
name|void
name|potentialYYValueBug
parameter_list|()
function_decl|;
name|void
name|textSectionAtEnd
parameter_list|()
function_decl|;
name|void
name|keypadAutoAdvance_data
parameter_list|()
function_decl|;
name|void
name|keypadAutoAdvance
parameter_list|()
function_decl|;
name|void
name|task196924
parameter_list|()
function_decl|;
name|void
name|focusNextPrevChild
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_12384_timeSpecShowTimeOnly
parameter_list|()
function_decl|;
name|void
name|deleteCalendarWidget
parameter_list|()
function_decl|;
private|private:
DECL|member|testWidget
name|EditorDateEdit
modifier|*
name|testWidget
decl_stmt|;
DECL|member|testFocusWidget
name|QWidget
modifier|*
name|testFocusWidget
decl_stmt|;
block|}
class|;
end_class
begin_typedef
DECL|typedef|TimeList
typedef|typedef
name|QList
argument_list|<
name|QTime
argument_list|>
name|TimeList
typedef|;
end_typedef
begin_typedef
DECL|typedef|KeyList
typedef|typedef
name|QList
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
name|KeyList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|TimeList
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|KeyList
argument_list|)
end_macro
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QDateTimeEdit
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QDateTimeEdit
name|obj1
decl_stmt|;
name|obj1
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z AP"
argument_list|)
expr_stmt|;
comment|// Section QDateTimeEdit::currentSection()
comment|// void QDateTimeEdit::setCurrentSection(Section)
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|NoSection
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|obj1
operator|.
name|currentSection
argument_list|()
operator|!=
name|QDateTimeEdit
operator|::
name|NoSection
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|AmPmSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|AmPmSection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MSecSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|MSecSection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|SecondSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|SecondSection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|HourSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|HourSection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|,
name|obj1
operator|.
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QDateTimeEdit
name|tst_QDateTimeEdit
operator|::
name|tst_QDateTimeEdit
parameter_list|()
block|{
name|qRegisterMetaType
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"QDate"
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"QTime"
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"QDateTime"
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"QList<int>"
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~tst_QDateTimeEdit
name|tst_QDateTimeEdit
operator|::
name|~
name|tst_QDateTimeEdit
parameter_list|()
block|{  }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QDateTimeEdit
operator|::
name|initTestCase
parameter_list|()
block|{
name|QLocale
name|system
init|=
name|QLocale
operator|::
name|system
argument_list|()
decl_stmt|;
if|if
condition|(
name|system
operator|.
name|language
argument_list|()
operator|!=
name|QLocale
operator|::
name|C
operator|&&
name|system
operator|.
name|language
argument_list|()
operator|!=
name|QLocale
operator|::
name|English
condition|)
name|qWarning
argument_list|(
literal|"Running under locale %s/%s -- this test may generate failures due to language differences"
argument_list|,
name|qPrintable
argument_list|(
name|QLocale
operator|::
name|languageToString
argument_list|(
name|system
operator|.
name|language
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|qPrintable
argument_list|(
name|QLocale
operator|::
name|countryToString
argument_list|(
name|system
operator|.
name|country
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|=
operator|new
name|EditorDateEdit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|=
operator|new
name|QWidget
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|testFocusWidget
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QDateTimeEdit
operator|::
name|cleanupTestCase
parameter_list|()
block|{
operator|delete
name|testFocusWidget
expr_stmt|;
name|testFocusWidget
operator|=
literal|0
expr_stmt|;
operator|delete
name|testWidget
expr_stmt|;
name|testWidget
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QDateTimeEdit
operator|::
name|init
parameter_list|()
block|{
name|QLocale
operator|::
name|setDefault
argument_list|(
name|QLocale
argument_list|(
name|QLocale
operator|::
name|C
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|Q_OS_WINCE
argument_list|)
name|SetThreadLocale
argument_list|(
name|MAKELCID
argument_list|(
name|MAKELANGID
argument_list|(
name|LANG_ENGLISH
argument_list|,
name|SUBLANG_ENGLISH_US
argument_list|)
argument_list|,
name|SORT_DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
comment|// Nice default to have
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|testFocusWidget
operator|->
name|move
argument_list|(
operator|-
literal|1000
argument_list|,
operator|-
literal|1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QDateTimeEdit
operator|::
name|cleanup
parameter_list|()
block|{
name|testWidget
operator|->
name|clearMinimumDateTime
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|clearMaximumDateTime
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setSpecialValueText
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWrapping
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructor_qwidget
name|void
name|tst_QDateTimeEdit
operator|::
name|constructor_qwidget
parameter_list|()
block|{
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QDateTimeEdit
name|dte
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dte
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|dateTime
argument_list|()
argument_list|,
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructor_qdatetime_data
name|void
name|tst_QDateTimeEdit
operator|::
name|constructor_qdatetime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"parameter"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"displayDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"minimumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"minimumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"maximumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"maximumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|46
argument_list|,
literal|32
argument_list|,
literal|764
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|46
argument_list|,
literal|32
argument_list|,
literal|764
argument_list|)
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|9999
argument_list|,
literal|99
argument_list|,
literal|99
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|46
argument_list|,
literal|32
argument_list|,
literal|764
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructor_qdatetime
name|void
name|tst_QDateTimeEdit
operator|::
name|constructor_qdatetime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|parameter
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|displayDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|minimumTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|maximumTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QDateTimeEdit
name|dte
argument_list|(
name|parameter
argument_list|)
decl_stmt|;
name|dte
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|dateTime
argument_list|()
argument_list|,
name|displayDateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|minimumTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|maximumTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructor_qdate_data
name|void
name|tst_QDateTimeEdit
operator|::
name|constructor_qdate_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"parameter"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"displayDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"minimumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"minimumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"maximumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"maximumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|16
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|16
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|9999
argument_list|,
literal|99
argument_list|,
literal|99
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructor_qdate
name|void
name|tst_QDateTimeEdit
operator|::
name|constructor_qdate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|parameter
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|displayDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|minimumTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|maximumTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QDateTimeEdit
name|dte
argument_list|(
name|parameter
argument_list|)
decl_stmt|;
name|dte
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|dateTime
argument_list|()
argument_list|,
name|displayDateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|minimumTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|maximumTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructor_qtime_data
name|void
name|tst_QDateTimeEdit
operator|::
name|constructor_qtime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"parameter"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"displayDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"minimumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"minimumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"maximumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"maximumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|13
argument_list|,
literal|46
argument_list|,
literal|32
argument_list|,
literal|764
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|46
argument_list|,
literal|32
argument_list|,
literal|764
argument_list|)
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid"
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|99
argument_list|,
literal|99
argument_list|,
literal|99
argument_list|,
literal|5000
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructor_qtime
name|void
name|tst_QDateTimeEdit
operator|::
name|constructor_qtime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|parameter
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|displayDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|minimumTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|maximumTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QDateTimeEdit
name|dte
argument_list|(
name|parameter
argument_list|)
decl_stmt|;
name|dte
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|dateTime
argument_list|()
argument_list|,
name|displayDateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|minimumTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|maximumTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minimumDate_data
name|void
name|tst_QDateTimeEdit
operator|::
name|minimumDate_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"minimumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"expectedMinDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|3
argument_list|,
literal|15
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|3
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1753
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1753
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"old"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1492
argument_list|,
literal|8
argument_list|,
literal|3
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1492
argument_list|,
literal|8
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minimumDate
name|void
name|tst_QDateTimeEdit
operator|::
name|minimumDate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|expectedMinDate
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumDate
argument_list|(
name|minimumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|minimumDate
argument_list|()
argument_list|,
name|expectedMinDate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minimumDateTime_data
name|void
name|tst_QDateTimeEdit
operator|::
name|minimumDateTime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"minimumDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expectedMinDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|14
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|31
argument_list|,
literal|23
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|31
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|23
argument_list|,
literal|23
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|23
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-4"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2008
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2008
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|()
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"old"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1492
argument_list|,
literal|8
argument_list|,
literal|3
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1492
argument_list|,
literal|8
argument_list|,
literal|3
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|minimumDateTime
name|void
name|tst_QDateTimeEdit
operator|::
name|minimumDateTime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|minimumDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expectedMinDateTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumDateTime
argument_list|(
name|minimumDateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|minimumDateTime
argument_list|()
argument_list|,
name|expectedMinDateTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maximumDateTime_data
name|void
name|tst_QDateTimeEdit
operator|::
name|maximumDateTime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"maximumDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expectedMinDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|14
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|31
argument_list|,
literal|23
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2006
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|31
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|23
argument_list|,
literal|23
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|22
argument_list|,
literal|23
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-4"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2008
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2008
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|()
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maximumDateTime
name|void
name|tst_QDateTimeEdit
operator|::
name|maximumDateTime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|maximumDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expectedMinDateTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMaximumDateTime
argument_list|(
name|maximumDateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|maximumDateTime
argument_list|()
argument_list|,
name|expectedMinDateTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maximumDate_data
name|void
name|tst_QDateTimeEdit
operator|::
name|maximumDate_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"maximumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"expectedMaxDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|10
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|03
argument_list|,
literal|15
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|3
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1753
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1753
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|maximumDate
name|void
name|tst_QDateTimeEdit
operator|::
name|maximumDate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|expectedMaxDate
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMaximumDate
argument_list|(
name|maximumDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|maximumDate
argument_list|()
argument_list|,
name|expectedMaxDate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMinimumDate_data
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMinimumDate_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"minimumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"valid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"expectedMinDateAfterClear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|10
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|3
argument_list|,
literal|15
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1753
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMinimumDate
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMinimumDate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|expectedMinDateAfterClear
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumDate
argument_list|(
name|minimumDate
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
block|{
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|minimumDate
argument_list|()
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
block|}
name|testWidget
operator|->
name|clearMinimumDate
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|minimumDate
argument_list|()
argument_list|,
name|expectedMinDateAfterClear
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMinimumDateTime_data
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMinimumDateTime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"minimumDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"valid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expectedMinDateTimeAfterClear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|3
argument_list|,
literal|15
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1753
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|()
operator|<<
literal|false
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"old"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1492
argument_list|,
literal|8
argument_list|,
literal|3
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMinimumDateTime
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMinimumDateTime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|minimumDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expectedMinDateTimeAfterClear
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumDateTime
argument_list|(
name|minimumDateTime
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
block|{
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|minimumDateTime
argument_list|()
argument_list|,
name|minimumDateTime
argument_list|)
expr_stmt|;
block|}
name|testWidget
operator|->
name|clearMinimumDateTime
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|minimumDateTime
argument_list|()
argument_list|,
name|expectedMinDateTimeAfterClear
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMaximumDateTime_data
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMaximumDateTime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"maximumDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"valid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expectedMinDateTimeAfterClear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|3
argument_list|,
literal|15
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|1753
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
operator|<<
literal|true
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDateTime
argument_list|()
operator|<<
literal|false
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMaximumDateTime
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMaximumDateTime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|maximumDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expectedMinDateTimeAfterClear
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMaximumDateTime
argument_list|(
name|maximumDateTime
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
block|{
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|maximumDateTime
argument_list|()
argument_list|,
name|maximumDateTime
argument_list|)
expr_stmt|;
block|}
name|testWidget
operator|->
name|clearMaximumDateTime
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|maximumDateTime
argument_list|()
argument_list|,
name|expectedMinDateTimeAfterClear
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMaximumDate_data
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMaximumDate_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"maximumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"valid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"expectedMaxDateAfterClear"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|10
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2002
argument_list|,
literal|03
argument_list|,
literal|15
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-2"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal-3"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|7999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clearMaximumDate
name|void
name|tst_QDateTimeEdit
operator|::
name|clearMaximumDate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|expectedMaxDateAfterClear
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMaximumDate
argument_list|(
name|maximumDate
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
block|{
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|maximumDate
argument_list|()
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
block|}
name|testWidget
operator|->
name|clearMaximumDate
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|maximumDate
argument_list|()
argument_list|,
name|expectedMaxDateAfterClear
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|displayFormat_data
name|void
name|tst_QDateTimeEdit
operator|::
name|displayFormat_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"valid"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"date"
argument_list|)
expr_stmt|;
specifier|const
name|QDateTime
name|dt
argument_list|(
name|QDate
argument_list|(
literal|2999
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|3
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"valid-0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyy MM dd"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"2999 12 31"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"valid-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd MM yyyy::ss:mm:hh"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"31 12 2999::59:59:03"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"valid-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh-dd-mm-MM-yy"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"03-31-59-12-99"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"valid-3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"ddd MM d yyyy::ss:mm:hh"
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
operator|::
name|shortDayName
argument_list|(
literal|2
argument_list|)
operator|+
literal|" 12 31 2999::59:59:03"
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"valid-4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh-dd-mm-MM-yyyy"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"03-31-59-12-2999"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"yyyy.MM.yy"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"2999.12.99"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"y"
argument_list|)
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|""
argument_list|)
operator|<<
literal|false
operator|<<
name|QString
argument_list|()
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"quoted-1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"'Midday is at:' dd"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"Midday is at: 31"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"leading1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"h:hh:hhh"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"3:03:033"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"H1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"HH:hh:ap"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"03:03:am"
argument_list|)
operator|<<
name|dt
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"H2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"HH:hh:ap"
argument_list|)
operator|<<
literal|true
operator|<<
name|QString
argument_list|(
literal|"23:11:pm"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|displayFormat
name|void
name|tst_QDateTimeEdit
operator|::
name|displayFormat
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|valid
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|date
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|QString
name|compareFormat
init|=
name|format
decl_stmt|;
if|if
condition|(
operator|!
name|valid
condition|)
name|compareFormat
operator|=
name|testWidget
operator|->
name|displayFormat
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|displayFormat
argument_list|()
argument_list|,
name|compareFormat
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectAndScrollWithKeys
name|void
name|tst_QDateTimeEdit
operator|::
name|selectAndScrollWithKeys
parameter_list|()
block|{
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/0"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/20"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/200"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now the year part should be selected
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|5
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2005"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2004"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"4"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"04"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"5/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Now the day part should be selected
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"12"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Now the day part should be selected
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|backspaceKey
name|void
name|tst_QDateTimeEdit
operator|::
name|backspaceKey
parameter_list|()
block|{
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"d/MM/yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/200"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/20"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check that moving into another field reverts it
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
block|}
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/0/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|interpretText
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/200"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/20"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/2"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/05/"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11/0/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11//2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteKey
name|void
name|tst_QDateTimeEdit
operator|::
name|deleteKey
parameter_list|()
block|{
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"d/MM/yyyy"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1/05/2004"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabKeyNavigation
name|void
name|tst_QDateTimeEdit
operator|::
name|tabKeyNavigation
parameter_list|()
block|{
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabKeyNavigationWithPrefix
name|void
name|tst_QDateTimeEdit
operator|::
name|tabKeyNavigationWithPrefix
parameter_list|()
block|{
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"prefix dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|tabKeyNavigationWithSuffix
name|void
name|tst_QDateTimeEdit
operator|::
name|tabKeyNavigationWithSuffix
parameter_list|()
block|{
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|05
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy 'suffix'"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2004"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|enterKey
name|void
name|tst_QDateTimeEdit
operator|::
name|enterKey
parameter_list|()
block|{
name|qApp
operator|->
name|setActiveWindow
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"prefix d/MM/yyyy 'suffix'"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|setFocus
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|hasSelectedText
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|hasSelectedText
argument_list|()
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"15"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_9
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"9"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|5
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|enterSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateChanged
argument_list|(
specifier|const
name|QDate
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|enterSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|#
directive|if
literal|0
block|QVariantList list = enterSpy.takeFirst();     QCOMPARE(list.at(0).toDate(), QDate(2004, 9, 15));
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|specialValueText
name|void
name|tst_QDateTimeEdit
operator|::
name|specialValueText
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateRange
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setSpecialValueText
argument_list|(
literal|"fOo"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"02/01/2000"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"fOo"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"fOo"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"02/01/2000"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"fOo"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"02/01/2000"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"fOo"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"fO"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"f"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_F
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"f"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_O
argument_list|)
expr_stmt|;
comment|// will automatically uppercase
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"fO"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_O
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"fOo"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setRange_data
name|void
name|tst_QDateTimeEdit
operator|::
name|setRange_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"minTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"maxTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"minDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"maxDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expectedMin"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"expectedMax"
argument_list|)
expr_stmt|;
specifier|const
name|QDate
name|cdt
init|=
name|QDate
operator|::
name|currentDate
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|14
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|)
operator|<<
name|cdt
operator|<<
name|cdt
operator|<<
name|QDateTime
argument_list|(
name|cdt
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|cdt
argument_list|,
name|QTime
argument_list|(
literal|14
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|)
operator|<<
name|cdt
operator|.
name|addDays
argument_list|(
operator|-
literal|1
argument_list|)
operator|<<
name|cdt
operator|<<
name|QDateTime
argument_list|(
name|cdt
operator|.
name|addDays
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|cdt
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|12
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setRange
name|void
name|tst_QDateTimeEdit
operator|::
name|setRange
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|minTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|maxTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|minDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|maxDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expectedMin
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|expectedMax
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
block|{
name|QDateTimeEdit
name|dte
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dte
operator|.
name|setTimeRange
argument_list|(
name|minTime
argument_list|,
name|maxTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|dte
operator|.
name|setDateRange
argument_list|(
name|minDate
argument_list|,
name|maxDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDateTime
argument_list|()
argument_list|,
name|expectedMin
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDateTime
argument_list|()
argument_list|,
name|expectedMax
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|dte
operator|.
name|setDateTimeRange
argument_list|(
name|QDateTime
argument_list|(
name|minDate
argument_list|,
name|minTime
argument_list|)
argument_list|,
name|QDateTime
argument_list|(
name|maxDate
argument_list|,
name|maxTime
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumDateTime
argument_list|()
argument_list|,
name|expectedMin
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumDateTime
argument_list|()
argument_list|,
name|expectedMax
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QDateTimeEdit
name|dte2
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dte2
operator|.
name|setDateRange
argument_list|(
name|minDate
argument_list|,
name|maxDate
argument_list|)
expr_stmt|;
name|dte2
operator|.
name|setTimeRange
argument_list|(
name|minTime
argument_list|,
name|maxTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte2
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte2
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte2
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte2
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QDateTimeEdit
name|dte3
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dte3
operator|.
name|setMinimumTime
argument_list|(
name|minTime
argument_list|)
expr_stmt|;
name|dte3
operator|.
name|setMaximumTime
argument_list|(
name|maxTime
argument_list|)
expr_stmt|;
name|dte3
operator|.
name|setMinimumDate
argument_list|(
name|minDate
argument_list|)
expr_stmt|;
name|dte3
operator|.
name|setMaximumDate
argument_list|(
name|maxDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte3
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte3
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte3
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte3
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QDateTimeEdit
name|dte4
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|dte4
operator|.
name|setMinimumDate
argument_list|(
name|minDate
argument_list|)
expr_stmt|;
name|dte4
operator|.
name|setMaximumDate
argument_list|(
name|maxDate
argument_list|)
expr_stmt|;
name|dte4
operator|.
name|setMinimumTime
argument_list|(
name|minTime
argument_list|)
expr_stmt|;
name|dte4
operator|.
name|setMaximumTime
argument_list|(
name|maxTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte4
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte4
operator|.
name|maximumDate
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte4
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|expectedMin
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dte4
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|expectedMax
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|wrappingTime_data
name|void
name|tst_QDateTimeEdit
operator|::
name|wrappingTime_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"startWithMin"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"minimumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"maximumTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"section"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"newTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|,
literal|22
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|22
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|,
literal|22
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|,
literal|22
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|0
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|,
literal|22
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|59
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|,
literal|22
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|22
argument_list|,
literal|22
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
literal|false
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
literal|true
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|59
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|wrappingTime
name|void
name|tst_QDateTimeEdit
operator|::
name|wrappingTime
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|startWithMin
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|minimumTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|maximumTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|section
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|newTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh:mm:ss"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumTime
argument_list|(
name|minimumTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMaximumTime
argument_list|(
name|maximumTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|section
argument_list|)
expr_stmt|;
if|if
condition|(
name|startWithMin
condition|)
block|{
name|testWidget
operator|->
name|setTime
argument_list|(
name|minimumTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|testWidget
operator|->
name|setTime
argument_list|(
name|maximumTime
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
block|}
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|time
argument_list|()
argument_list|,
name|newTime
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|userKeyPress_Time_data
name|void
name|tst_QDateTimeEdit
operator|::
name|userKeyPress_Time_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"ampm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTestEventList
argument_list|>
argument_list|(
literal|"keys"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"expected_time"
argument_list|)
expr_stmt|;
comment|// ***************** test the hours ***************
comment|// use up/down keys to change hour in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|13
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// use up/down keys to change hour in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
name|QTestEventList
name|keys
decl_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|13
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a one digit valid hour
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data12"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// entering a two digit valid hour
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data13"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// entering an invalid hour
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
comment|// the '5' creates an invalid hour (25) so it must be ignored
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data14"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a value, in hour which causes a field change
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data15"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a one digit valid hour in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data16"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a two digit valid hour in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data17"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a two digit valid hour (>12) in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data18"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a two digit valid hour (>20) in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|21
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data19"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a two digit invalid hour (>23) in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'4'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data20"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// ***************** test the minutes ***************
comment|// use up/down keys to change the minutes in 12 hour mode
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data21"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|16
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data22"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test maximum value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|59
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data23"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'overflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data24"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'underflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data25"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|58
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data26"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// use up/down keys to change the minutes in 24 hour mode
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data27"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|16
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data28"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test maximum value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|59
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data29"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'overflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data30"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'underflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data31"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|58
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data32"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a valid one digit minute in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data33"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a valid two digit minutes in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'4'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|24
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data34"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the lower limit of the minutes in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data35"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the upper limit of the minutes in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'9'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data36"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter an invalid two digit minutes in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'6'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data37"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// test minutes in 24 hour motestWidget-> Behaviour should be exactly the same
comment|// enter a valid one digit minute in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data38"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a valid two digit minutes in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'4'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|24
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data39"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the lower limit of the minutes in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data40"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the upper limit of the minutes in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'9'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|59
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data41"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter an invalid two digit minutes in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'6'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data42"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// ***************** test the seconds ***************
comment|// use up/down to edit the seconds...
comment|// use up/down keys to change the seconds in 12 hour mode
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data43"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data44"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test maximum value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|59
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data45"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'overflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data46"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'underflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data47"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|58
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data48"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// use up/down keys to change the seconds in 24 hour mode
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data49"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test a valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data50"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test maximum value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|59
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data51"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'overflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|60
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data52"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test 'underflow'
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data53"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|{
comment|// test valid value
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
for|for
control|(
name|uint
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|58
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data54"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a valid one digit second in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data55"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a valid two digit seconds in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'4'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|24
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data56"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the lower limit of the seconds in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data57"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the upper limit of the seconds in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'9'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data58"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter an invalid two digit seconds in 12 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'6'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data59"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// test seconds in 24 hour mode. Behaviour should be exactly the same
comment|// enter a valid one digit minute in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data60"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter a valid two digit seconds in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'2'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'4'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|24
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data61"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the lower limit of the seconds in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data62"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// check the upper limit of the seconds in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'5'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'9'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|59
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data63"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// enter an invalid two digit seconds in 24 h mode
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'6'
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data64"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|false
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// Test the AMPM indicator
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data65"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// Test the AMPM indicator
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data66"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// Test the AMPM indicator
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data67"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
comment|// Test the AMPM indicator
block|{
name|QTestEventList
name|keys
decl_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|keys
operator|.
name|addKeyClick
argument_list|(
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QTime
name|expected
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data68"
argument_list|)
operator|<<
name|bool
argument_list|(
literal|true
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|userKeyPress_Time
name|void
name|tst_QDateTimeEdit
operator|::
name|userKeyPress_Time
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|ampm
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTestEventList
argument_list|,
name|keys
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|expected_time
argument_list|)
expr_stmt|;
if|if
condition|(
name|ampm
condition|)
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh:mm:ss ap"
argument_list|)
expr_stmt|;
else|else
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh:mm:ss"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setFocus
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
comment|// Make sure the first section is now focused
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|keys
operator|.
name|simulate
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|time
argument_list|()
argument_list|,
name|expected_time
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|wrappingDate_data
name|void
name|tst_QDateTimeEdit
operator|::
name|wrappingDate_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"startWithMin"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"minimumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"maximumDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"section"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"newDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MonthSection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MonthSection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MonthSection
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MonthSection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
literal|false
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
literal|true
operator|<<
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
operator|<<
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|wrappingDate
name|void
name|tst_QDateTimeEdit
operator|::
name|wrappingDate
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|startWithMin
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|minimumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|maximumDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|section
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|newDate
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumDate
argument_list|(
name|minimumDate
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMaximumDate
argument_list|(
name|maximumDate
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|section
argument_list|)
expr_stmt|;
if|if
condition|(
name|startWithMin
condition|)
block|{
name|testWidget
operator|->
name|setDate
argument_list|(
name|minimumDate
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|testWidget
operator|->
name|setDate
argument_list|(
name|maximumDate
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|testWidget
operator|->
name|currentSection
argument_list|()
operator|==
name|QDateTimeEdit
operator|::
name|MonthSection
condition|)
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|newDate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dateSignalChecking_data
name|void
name|tst_QDateTimeEdit
operator|::
name|dateSignalChecking_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"originalDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDate
argument_list|>
argument_list|(
literal|"newDate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"timesEmitted"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|06
argument_list|,
literal|22
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|07
argument_list|,
literal|23
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|06
argument_list|,
literal|22
argument_list|)
operator|<<
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|06
argument_list|,
literal|22
argument_list|)
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dateSignalChecking
name|void
name|tst_QDateTimeEdit
operator|::
name|dateSignalChecking
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|originalDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDate
argument_list|,
name|newDate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|timesEmitted
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|originalDate
argument_list|)
expr_stmt|;
name|QSignalSpy
name|dateSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateChanged
argument_list|(
specifier|const
name|QDate
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|dateTimeSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateTimeChanged
argument_list|(
specifier|const
name|QDateTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|timeSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|timeChanged
argument_list|(
specifier|const
name|QTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|newDate
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dateSpy
operator|.
name|count
argument_list|()
argument_list|,
name|timesEmitted
argument_list|)
expr_stmt|;
if|if
condition|(
name|timesEmitted
operator|>
literal|0
condition|)
block|{
name|QList
argument_list|<
name|QVariant
argument_list|>
name|list
init|=
name|dateSpy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QDate
name|d
decl_stmt|;
name|d
operator|=
name|qVariantValue
argument_list|<
name|QDate
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
argument_list|,
name|newDate
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dateTimeSpy
operator|.
name|count
argument_list|()
argument_list|,
name|timesEmitted
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|timeSignalChecking_data
name|void
name|tst_QDateTimeEdit
operator|::
name|timeSignalChecking_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"originalTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"newTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"timesEmitted"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|00
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|17
argument_list|,
literal|12
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|00
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|00
argument_list|)
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|timeSignalChecking
name|void
name|tst_QDateTimeEdit
operator|::
name|timeSignalChecking
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|originalTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|newTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|timesEmitted
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|originalTime
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh:mm:ss"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|dateSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateChanged
argument_list|(
specifier|const
name|QDate
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|dateTimeSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateTimeChanged
argument_list|(
specifier|const
name|QDateTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|timeSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|timeChanged
argument_list|(
specifier|const
name|QTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|newTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|timeSpy
operator|.
name|count
argument_list|()
argument_list|,
name|timesEmitted
argument_list|)
expr_stmt|;
if|if
condition|(
name|timesEmitted
operator|>
literal|0
condition|)
block|{
name|QList
argument_list|<
name|QVariant
argument_list|>
name|list
init|=
name|timeSpy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QTime
name|t
decl_stmt|;
name|t
operator|=
name|qVariantValue
argument_list|<
name|QTime
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
argument_list|,
name|newTime
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dateTimeSpy
operator|.
name|count
argument_list|()
argument_list|,
name|timesEmitted
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dateSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dateTimeSignalChecking_data
name|void
name|tst_QDateTimeEdit
operator|::
name|dateTimeSignalChecking_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"originalDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"newDateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"timesDateEmitted"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"timesTimeEmitted"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"timesDateTimeEmitted"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|7
argument_list|,
literal|23
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|17
argument_list|,
literal|12
argument_list|)
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|17
argument_list|,
literal|12
argument_list|)
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|7
argument_list|,
literal|23
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|0
argument_list|)
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dateTimeSignalChecking
name|void
name|tst_QDateTimeEdit
operator|::
name|dateTimeSignalChecking
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|originalDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|newDateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|timesDateEmitted
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|timesTimeEmitted
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|timesDateTimeEmitted
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|originalDateTime
argument_list|)
expr_stmt|;
name|QSignalSpy
name|dateSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateChanged
argument_list|(
specifier|const
name|QDate
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|timeSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|timeChanged
argument_list|(
specifier|const
name|QTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|dateTimeSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateTimeChanged
argument_list|(
specifier|const
name|QDateTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|newDateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dateSpy
operator|.
name|count
argument_list|()
argument_list|,
name|timesDateEmitted
argument_list|)
expr_stmt|;
if|if
condition|(
name|timesDateEmitted
operator|>
literal|0
condition|)
block|{
name|QCOMPARE
argument_list|(
name|timesDateEmitted
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|list
init|=
name|dateSpy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QDate
name|d
decl_stmt|;
name|d
operator|=
name|qVariantValue
argument_list|<
name|QDate
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
argument_list|,
name|newDateTime
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|timeSpy
operator|.
name|count
argument_list|()
argument_list|,
name|timesTimeEmitted
argument_list|)
expr_stmt|;
if|if
condition|(
name|timesTimeEmitted
operator|>
literal|0
condition|)
block|{
name|QList
argument_list|<
name|QVariant
argument_list|>
name|list
init|=
name|timeSpy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QTime
name|t
decl_stmt|;
name|t
operator|=
name|qVariantValue
argument_list|<
name|QTime
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
argument_list|,
name|newDateTime
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|dateTimeSpy
operator|.
name|count
argument_list|()
argument_list|,
name|timesDateTimeEmitted
argument_list|)
expr_stmt|;
if|if
condition|(
name|timesDateTimeEmitted
operator|>
literal|0
condition|)
block|{
name|QList
argument_list|<
name|QVariant
argument_list|>
name|list
init|=
name|dateTimeSpy
operator|.
name|takeFirst
argument_list|()
decl_stmt|;
name|QDateTime
name|dt
decl_stmt|;
name|dt
operator|=
name|qVariantValue
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
argument_list|,
name|newDateTime
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|sectionText_data
name|void
name|tst_QDateTimeEdit
operator|::
name|sectionText_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"section"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"sectionText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|NoSection
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|AmPmSection
operator|<<
name|QString
argument_list|(
literal|"pm"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MSecSection
operator|<<
name|QString
argument_list|(
literal|"789"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
name|QString
argument_list|(
literal|"03"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
name|QString
argument_list|(
literal|"55"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QString
argument_list|(
literal|"03"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
name|QString
argument_list|(
literal|"15"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
operator|<<
name|QString
argument_list|(
literal|"22"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MonthSection
operator|<<
name|QString
argument_list|(
literal|"06"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
operator|<<
name|QString
argument_list|(
literal|"2004"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz AP"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|AmPmSection
operator|<<
name|QString
argument_list|(
literal|"PM"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data11"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss ap"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|22
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|15
argument_list|,
literal|55
argument_list|,
literal|3
argument_list|,
literal|789
argument_list|)
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MSecSection
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sectionText
name|void
name|tst_QDateTimeEdit
operator|::
name|sectionText
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|section
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|sectionText
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|dateTime
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|sectionText
argument_list|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|section
argument_list|)
argument_list|,
name|sectionText
argument_list|)
expr_stmt|;
comment|//    QApplication::setLayoutDirection(Qt::RightToLeft);
comment|//    testWidget->setDisplayFormat(format);
comment|//    QCOMPARE(format, testWidget->displayFormat());
comment|//     testWidget->setDateTime(dateTime);
comment|//     QCOMPARE(testWidget->sectionText((QDateTimeEdit::Section)section), sectionText);
comment|//     QApplication::setLayoutDirection(Qt::LeftToRight);
block|}
end_function
begin_function
DECL|function|mousePress
name|void
name|tst_QDateTimeEdit
operator|::
name|mousePress
parameter_list|()
block|{
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2004
argument_list|,
literal|6
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
comment|// Ask the SC_SpinBoxUp button location from style
name|QStyleOptionSpinBox
name|so
decl_stmt|;
name|so
operator|.
name|rect
operator|=
name|testWidget
operator|->
name|rect
argument_list|()
expr_stmt|;
name|QRect
name|rectUp
init|=
name|testWidget
operator|->
name|style
argument_list|()
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_SpinBox
argument_list|,
operator|&
name|so
argument_list|,
name|QStyle
operator|::
name|SC_SpinBoxUp
argument_list|,
name|testWidget
argument_list|)
decl_stmt|;
comment|// Send mouseClick to center of SC_SpinBoxUp
name|QTest
operator|::
name|mouseClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|rectUp
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
operator|.
name|year
argument_list|()
argument_list|,
literal|2005
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stepHourAMPM_data
name|void
name|tst_QDateTimeEdit
operator|::
name|stepHourAMPM_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|KeyList
argument_list|>
argument_list|(
literal|"keys"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|TimeList
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"start"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"min"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTime
argument_list|>
argument_list|(
literal|"max"
argument_list|)
expr_stmt|;
block|{
name|KeyList
name|keys
decl_stmt|;
name|TimeList
name|expected
decl_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|7
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|13
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|14
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|17
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|18
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|19
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|21
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|21
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|19
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|18
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|17
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|14
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|13
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|7
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh 1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh:ap 1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh:ap"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"HH:ap 2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"HH:ap"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
expr_stmt|;
block|}
block|{
name|KeyList
name|keys
decl_stmt|;
name|TimeList
name|expected
decl_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Down
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh 2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh:ap 2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh:ap"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
expr_stmt|;
block|}
block|{
name|KeyList
name|keys
decl_stmt|;
name|TimeList
name|expected
decl_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh 3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh:ap 3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh:ap"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|22
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|)
expr_stmt|;
block|}
block|{
name|KeyList
name|keys
decl_stmt|;
name|TimeList
name|expected
decl_stmt|;
name|keys
operator|<<
name|Qt
operator|::
name|Key_Up
expr_stmt|;
name|expected
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|31
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh:mm:ap 3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh:mm:ap"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|31
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hh:mm 3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh:mm"
argument_list|)
operator|<<
name|keys
operator|<<
name|expected
operator|<<
name|QTime
argument_list|(
literal|15
argument_list|,
literal|31
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QTime
argument_list|(
literal|16
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|stepHourAMPM
name|void
name|tst_QDateTimeEdit
operator|::
name|stepHourAMPM
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|KeyList
argument_list|,
name|keys
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|TimeList
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|start
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|min
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTime
argument_list|,
name|max
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|start
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumTime
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMaximumTime
argument_list|(
name|max
argument_list|)
expr_stmt|;
if|if
condition|(
name|keys
operator|.
name|size
argument_list|()
operator|!=
name|expected
operator|.
name|size
argument_list|()
condition|)
block|{
name|qWarning
argument_list|(
literal|"%s:%d Test broken"
argument_list|,
name|__FILE__
argument_list|,
name|__LINE__
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|keys
operator|.
name|size
argument_list|()
argument_list|,
name|expected
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|keys
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|keys
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|time
argument_list|()
argument_list|,
name|expected
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|displayedSections_data
name|void
name|tst_QDateTimeEdit
operator|::
name|displayedSections_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"section"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
call|(
name|uint
call|)
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
operator||
name|QDateTimeEdit
operator|::
name|MonthSection
operator||
name|QDateTimeEdit
operator|::
name|YearSection
operator||
name|QDateTimeEdit
operator|::
name|HourSection
operator||
name|QDateTimeEdit
operator|::
name|MinuteSection
operator||
name|QDateTimeEdit
operator|::
name|SecondSection
operator||
name|QDateTimeEdit
operator|::
name|MSecSection
operator||
name|QDateTimeEdit
operator|::
name|AmPmSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
call|(
name|uint
call|)
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
operator||
name|QDateTimeEdit
operator|::
name|YearSection
operator||
name|QDateTimeEdit
operator|::
name|HourSection
operator||
name|QDateTimeEdit
operator|::
name|MinuteSection
operator||
name|QDateTimeEdit
operator|::
name|SecondSection
operator||
name|QDateTimeEdit
operator|::
name|MSecSection
operator||
name|QDateTimeEdit
operator|::
name|AmPmSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy mm zzz ap"
argument_list|)
operator|<<
call|(
name|uint
call|)
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
operator||
name|QDateTimeEdit
operator|::
name|MonthSection
operator||
name|QDateTimeEdit
operator|::
name|YearSection
operator||
name|QDateTimeEdit
operator|::
name|MinuteSection
operator||
name|QDateTimeEdit
operator|::
name|MSecSection
operator||
name|QDateTimeEdit
operator|::
name|AmPmSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
operator|<<
call|(
name|uint
call|)
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
operator||
name|QDateTimeEdit
operator|::
name|MonthSection
operator||
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"hh:mm:ss zzz ap"
argument_list|)
operator|<<
call|(
name|uint
call|)
argument_list|(
name|QDateTimeEdit
operator|::
name|HourSection
operator||
name|QDateTimeEdit
operator|::
name|MinuteSection
operator||
name|QDateTimeEdit
operator|::
name|SecondSection
operator||
name|QDateTimeEdit
operator|::
name|MSecSection
operator||
name|QDateTimeEdit
operator|::
name|AmPmSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd ap"
argument_list|)
operator|<<
call|(
name|uint
call|)
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
operator||
name|QDateTimeEdit
operator|::
name|AmPmSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"zzz"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MSecSection
expr_stmt|;
block|}
end_function
begin_function
DECL|function|displayedSections
name|void
name|tst_QDateTimeEdit
operator|::
name|displayedSections
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|section
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|section
operator|==
name|testWidget
operator|->
name|displayedSections
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentSection_data
name|void
name|tst_QDateTimeEdit
operator|::
name|currentSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"section"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|uint
argument_list|>
argument_list|(
literal|"currentSection"
argument_list|)
expr_stmt|;
comment|// First is deliberate, this way we can make sure that it is not reset by specifying no section.
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data0"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|NoSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data1"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|AmPmSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|AmPmSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data2"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MSecSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MSecSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data3"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|SecondSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data4"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MinuteSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data5"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|HourSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data6"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data7"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MonthSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MonthSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data8"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|YearSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data9"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss zzz AP"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|AmPmSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|AmPmSection
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"data10"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss ap"
argument_list|)
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|MSecSection
operator|<<
operator|(
name|uint
operator|)
name|QDateTimeEdit
operator|::
name|DaySection
expr_stmt|;
block|}
end_function
begin_function
DECL|function|currentSection
name|void
name|tst_QDateTimeEdit
operator|::
name|currentSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|section
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|uint
argument_list|,
name|currentSection
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|section
operator|==
name|QDateTimeEdit
operator|::
name|NoSection
condition|)
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
comment|// Ensure it's not reset (see above)
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|section
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|currentSection
operator|==
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|readOnly
name|void
name|tst_QDateTimeEdit
operator|::
name|readOnly
parameter_list|()
block|{
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QDateTimeEdit
name|dt
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|dt
operator|.
name|setDisplayFormat
argument_list|(
literal|"yyyy.MM.dd"
argument_list|)
expr_stmt|;
name|dt
operator|.
name|show
argument_list|()
expr_stmt|;
name|dt
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|dt
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|dt
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|dt
operator|.
name|stepBy
argument_list|(
literal|1
argument_list|)
expr_stmt|;
comment|// stepBy should still work
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|dt
operator|.
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|dt
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dt
operator|.
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|weirdCase
name|void
name|tst_QDateTimeEdit
operator|::
name|weirdCase
parameter_list|()
block|{
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|setCursorPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateRange
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QDate
argument_list|(
literal|2010
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd//MM//yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|testWidget
operator|->
name|minimumDate
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|hasSelectedText
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|hasSelectedText
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"01//01//005"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"01//01//005"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newCase
name|void
name|tst_QDateTimeEdit
operator|::
name|newCase
parameter_list|()
block|{
if|if
condition|(
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|6
argument_list|)
operator|!=
literal|"Jun"
operator|||
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|7
argument_list|)
operator|!=
literal|"Jul"
operator|||
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|6
argument_list|)
operator|!=
literal|"June"
operator|||
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|7
argument_list|)
operator|!=
literal|"July"
condition|)
name|QSKIP
argument_list|(
literal|"This test only works in English"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"MMMM'a'MbMMMcMM"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Junea6bJunc06"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Julya7bJulc07"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"July"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Jula7bJulc07"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Jua7bJulc07"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_N
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Juna7bJulc07"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_E
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Junea6bJunc06"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newCase2
name|void
name|tst_QDateTimeEdit
operator|::
name|newCase2
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"MMMM yyyy-MM-dd MMMM"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|" 2005-08-08 "
argument_list|)
operator|+
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newCase3
name|void
name|tst_QDateTimeEdit
operator|::
name|newCase3
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|1
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"Januar"
argument_list|)
condition|)
name|QSKIP
argument_list|(
literal|"This test does not work in this locale"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd MMMM yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setGeometry
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|testWidget
operator|->
name|sizeHint
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_J
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"01 J 2000"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_N
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_U
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_R
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cursorPos
name|void
name|tst_QDateTimeEdit
operator|::
name|cursorPos
parameter_list|()
block|{
if|if
condition|(
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|1
argument_list|)
operator|!=
literal|"January"
condition|)
name|QSKIP
argument_list|(
literal|"This test only works in English"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd MMMM yyyy"
argument_list|)
expr_stmt|;
comment|//testWidget->setGeometry(0, 0, 200, 200);
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_J
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_N
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_U
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_A
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_R
argument_list|)
expr_stmt|;
comment|//QCursor::setPos(20, 20);
comment|//QEventLoop l;
comment|//l.exec();
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Y
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|11
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newCase4
name|void
name|tst_QDateTimeEdit
operator|::
name|newCase4
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh:mm"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setMinimumTime
argument_list|(
name|QTime
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0:03"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0:03"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"04:03"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newCase5
name|void
name|tst_QDateTimeEdit
operator|::
name|newCase5
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"yyyy-MM-dd hh:mm:ss zzz 'ms'"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|10
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|17
argument_list|,
literal|44
argument_list|,
literal|13
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2005-10-07 17:44:13 100 ms"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backtab
argument_list|,
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_2
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2005-10-07 17:44:13 124 ms"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2005-10-07 17:44:13 12 ms"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newCase6
name|void
name|tst_QDateTimeEdit
operator|::
name|newCase6
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"d-yyyy-MM-dd"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|10
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"7-2005-10-07"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"12-2005-10-12"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task98554
name|void
name|tst_QDateTimeEdit
operator|::
name|task98554
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"mm.ss.zzz(ms)"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|SecondSection
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"00.09.000(09)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|9
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"00.10.000(010)"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeList
specifier|static
name|QList
argument_list|<
name|int
argument_list|>
name|makeList
parameter_list|(
name|int
name|val1
parameter_list|,
name|int
name|val2
parameter_list|,
name|int
name|val3
parameter_list|)
block|{
name|QList
argument_list|<
name|int
argument_list|>
name|ret
decl_stmt|;
name|ret
operator|<<
name|val1
operator|<<
name|val2
operator|<<
name|val3
expr_stmt|;
return|return
name|ret
return|;
block|}
end_function
begin_function
DECL|function|setCurrentSection_data
name|void
name|tst_QDateTimeEdit
operator|::
name|setCurrentSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QDateTime
argument_list|>
argument_list|(
literal|"dateTime"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"setCurrentSections"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QList
argument_list|<
name|int
argument_list|>
argument_list|>
argument_list|(
literal|"expectedCursorPositions"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Day"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|makeList
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|,
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|,
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
operator|<<
name|makeList
argument_list|(
literal|24
argument_list|,
literal|0
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Month"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|makeList
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|,
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|,
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
operator|<<
name|makeList
argument_list|(
literal|3
argument_list|,
literal|26
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Year"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|makeList
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|,
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|,
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
operator|<<
name|makeList
argument_list|(
literal|6
argument_list|,
literal|28
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Hour"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|makeList
argument_list|(
name|QDateTimeEdit
operator|::
name|HourSection
argument_list|,
name|QDateTimeEdit
operator|::
name|HourSection
argument_list|,
name|QDateTimeEdit
operator|::
name|HourSection
argument_list|)
operator|<<
name|makeList
argument_list|(
literal|11
argument_list|,
literal|31
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Minute"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|makeList
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|,
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|,
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|)
operator|<<
name|makeList
argument_list|(
literal|14
argument_list|,
literal|33
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Second"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|makeList
argument_list|(
name|QDateTimeEdit
operator|::
name|SecondSection
argument_list|,
name|QDateTimeEdit
operator|::
name|SecondSection
argument_list|,
name|QDateTimeEdit
operator|::
name|SecondSection
argument_list|)
operator|<<
name|makeList
argument_list|(
literal|17
argument_list|,
literal|35
argument_list|,
literal|17
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"MSec"
argument_list|)
operator|<<
name|QString
argument_list|(
literal|"dd/MM/yyyy hh:mm:ss.zzz d/M/yy h:m:s.z"
argument_list|)
operator|<<
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
operator|<<
name|makeList
argument_list|(
name|QDateTimeEdit
operator|::
name|MSecSection
argument_list|,
name|QDateTimeEdit
operator|::
name|MSecSection
argument_list|,
name|QDateTimeEdit
operator|::
name|MSecSection
argument_list|)
operator|<<
name|makeList
argument_list|(
literal|20
argument_list|,
literal|37
argument_list|,
literal|20
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setCurrentSection
name|void
name|tst_QDateTimeEdit
operator|::
name|setCurrentSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QDateTime
argument_list|,
name|dateTime
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|setCurrentSections
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QList
argument_list|<
name|int
argument_list|>
argument_list|,
name|expectedCursorPositions
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|setCurrentSections
operator|.
name|size
argument_list|()
argument_list|,
name|expectedCursorPositions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|dateTime
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|testWidget
operator|->
name|resize
argument_list|(
literal|400
argument_list|,
literal|100
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|setCurrentSections
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|setCurrentSections
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|,
operator|(
name|QDateTimeEdit
operator|::
name|Section
operator|)
name|setCurrentSections
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
name|expectedCursorPositions
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setSelectedSection
name|void
name|tst_QDateTimeEdit
operator|::
name|setSelectedSection
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"mm.ss.zzz('ms') m"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|hasSelectedText
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setSelectedSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"00"
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setSelectedSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setSelectedSection
argument_list|(
name|QDateTimeEdit
operator|::
name|SecondSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"09"
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setSelectedSection
argument_list|(
name|QDateTimeEdit
operator|::
name|NoSection
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|hasSelectedText
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|calendarPopup
name|void
name|tst_QDateTimeEdit
operator|::
name|calendarPopup
parameter_list|()
block|{
block|{
name|QDateEdit
name|edit
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setCalendarPopup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QTimeEdit
name|edit
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setCalendarPopup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QDateEdit
name|edit
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
name|QCalendarWidget
modifier|*
name|cw
init|=
operator|new
name|QCalendarWidget
decl_stmt|;
name|edit
operator|.
name|setCalendarWidget
argument_list|(
name|cw
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setCalendarPopup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setCalendarWidget
argument_list|(
name|cw
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|,
name|cw
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDateRange
argument_list|(
name|QDate
argument_list|(
literal|1980
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|,
name|QDate
argument_list|(
literal|1980
argument_list|,
literal|2
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cw
operator|->
name|minimumDate
argument_list|()
argument_list|,
name|edit
operator|.
name|minimumDate
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cw
operator|->
name|maximumDate
argument_list|()
argument_list|,
name|edit
operator|.
name|maximumDate
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|1980
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|date
argument_list|()
argument_list|,
name|cw
operator|->
name|selectedDate
argument_list|()
argument_list|)
expr_stmt|;
name|cw
operator|->
name|setSelectedDate
argument_list|(
name|QDate
argument_list|(
literal|1980
argument_list|,
literal|1
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|date
argument_list|()
argument_list|,
name|cw
operator|->
name|selectedDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|show
argument_list|()
expr_stmt|;
name|testWidget
operator|->
name|setCalendarPopup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|calendarPopup
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|QStyle
modifier|*
name|style
init|=
name|testWidget
operator|->
name|style
argument_list|()
decl_stmt|;
name|QStyleOptionComboBox
name|opt
decl_stmt|;
name|opt
operator|.
name|initFrom
argument_list|(
name|testWidget
argument_list|)
expr_stmt|;
name|opt
operator|.
name|editable
operator|=
literal|true
expr_stmt|;
name|opt
operator|.
name|subControls
operator|=
name|QStyle
operator|::
name|SC_ComboBoxArrow
expr_stmt|;
name|QRect
name|rect
init|=
name|style
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_ComboBox
argument_list|,
operator|&
name|opt
argument_list|,
name|QStyle
operator|::
name|SC_ComboBoxArrow
argument_list|,
name|testWidget
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|wid
init|=
name|qFindChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|testWidget
argument_list|,
literal|"qt_datetimedit_calendar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|wid
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QTimeEdit
name|timeEdit
decl_stmt|;
name|timeEdit
operator|.
name|setCalendarPopup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|timeEdit
operator|.
name|show
argument_list|()
expr_stmt|;
name|opt
operator|.
name|initFrom
argument_list|(
operator|&
name|timeEdit
argument_list|)
expr_stmt|;
name|opt
operator|.
name|subControls
operator|=
name|QStyle
operator|::
name|SC_ComboBoxArrow
expr_stmt|;
name|rect
operator|=
name|style
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_ComboBox
argument_list|,
operator|&
name|opt
argument_list|,
name|QStyle
operator|::
name|SC_ComboBoxArrow
argument_list|,
operator|&
name|timeEdit
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|timeEdit
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|wid2
init|=
name|qFindChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|timeEdit
argument_list|,
literal|"qt_datetimedit_calendar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|wid2
operator|==
literal|0
argument_list|)
expr_stmt|;
name|timeEdit
operator|.
name|hide
argument_list|()
expr_stmt|;
name|QDateEdit
name|dateEdit
decl_stmt|;
name|dateEdit
operator|.
name|setCalendarPopup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dateEdit
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dateEdit
operator|.
name|show
argument_list|()
expr_stmt|;
name|opt
operator|.
name|initFrom
argument_list|(
operator|&
name|dateEdit
argument_list|)
expr_stmt|;
name|opt
operator|.
name|subControls
operator|=
name|QStyle
operator|::
name|SC_ComboBoxArrow
expr_stmt|;
name|rect
operator|=
name|style
operator|->
name|subControlRect
argument_list|(
name|QStyle
operator|::
name|CC_ComboBox
argument_list|,
operator|&
name|opt
argument_list|,
name|QStyle
operator|::
name|SC_ComboBoxArrow
argument_list|,
operator|&
name|dateEdit
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
operator|&
name|dateEdit
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|QPoint
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|+
name|rect
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|wid3
init|=
name|qFindChild
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
operator|&
name|dateEdit
argument_list|,
literal|"qt_datetimedit_calendar"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|wid3
operator|==
literal|0
argument_list|)
expr_stmt|;
name|dateEdit
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
end_function
begin_class
DECL|class|RestoreLayoutDirectioner
class|class
name|RestoreLayoutDirectioner
block|{
public|public:
DECL|function|RestoreLayoutDirectioner
name|RestoreLayoutDirectioner
parameter_list|(
name|Qt
operator|::
name|LayoutDirection
name|was
parameter_list|)
member_init_list|:
name|old
argument_list|(
name|was
argument_list|)
block|{}
DECL|function|~RestoreLayoutDirectioner
name|~
name|RestoreLayoutDirectioner
parameter_list|()
block|{
name|QApplication
operator|::
name|setLayoutDirection
argument_list|(
name|old
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|old
specifier|const
name|Qt
operator|::
name|LayoutDirection
name|old
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|reverseTest
name|void
name|tst_QDateTimeEdit
operator|::
name|reverseTest
parameter_list|()
block|{
specifier|const
name|RestoreLayoutDirectioner
name|restorer
argument_list|(
name|QApplication
operator|::
name|layoutDirection
argument_list|()
argument_list|)
decl_stmt|;
name|QApplication
operator|::
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|3
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2001/03/30"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|3
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2001/03/31"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hour12Test
name|void
name|tst_QDateTimeEdit
operator|::
name|hour12Test
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh a"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"12 am"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
operator|++
name|i
control|)
block|{
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11 am"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"12 pm"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
operator|++
name|i
control|)
block|{
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11 pm"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11 pm"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|12
condition|;
operator|++
name|i
control|)
block|{
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"11 am"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1 am"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"1 am"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|yyTest
name|void
name|tst_QDateTimeEdit
operator|::
name|yyTest
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd-MMM-yy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateRange
argument_list|(
name|QDate
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QDate
argument_list|(
literal|2010
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|testWidget
operator|->
name|minimumDate
argument_list|()
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|QString
name|jan
init|=
name|QDate
operator|::
name|shortMonthName
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-05"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-06"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-07"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-08"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-09"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-10"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-10"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
literal|"01-"
operator|+
name|jan
operator|+
literal|"-05"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateRange
argument_list|(
name|QDate
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QDate
argument_list|(
literal|8000
argument_list|,
literal|12
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWrapping
argument_list|(
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|50
condition|;
operator|++
name|j
control|)
block|{
name|testWidget
operator|->
name|stepBy
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|testWidget
operator|->
name|stepBy
argument_list|(
operator|-
literal|50
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|sectionText
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"00"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
operator|-
operator|(
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
literal|100
operator|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|task108572
name|void
name|tst_QDateTimeEdit
operator|::
name|task108572
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh:mm:ss.zzz"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"00:01:02.000"
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MSecSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"000"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"00:01:02.2"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|displayText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"00:01:02.200"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"200"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|time
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task149097
name|void
name|tst_QDateTimeEdit
operator|::
name|task149097
parameter_list|()
block|{
name|QSignalSpy
name|dtSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateTimeChanged
argument_list|(
specifier|const
name|QDateTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|dSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dateChanged
argument_list|(
specifier|const
name|QDate
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QSignalSpy
name|tSpy
argument_list|(
name|testWidget
argument_list|,
name|SIGNAL
argument_list|(
name|timeChanged
argument_list|(
specifier|const
name|QTime
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"yyyy/MM/dd hh:mm:ss"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDateTime
argument_list|(
name|QDateTime
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|02
argument_list|,
literal|03
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//    QTest::keyClick(testWidget, Qt::Key_Enter);
name|QCOMPARE
argument_list|(
name|dtSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|stepBy
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dtSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|stepBy
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dtSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|dSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task148725
name|void
name|tst_QDateTimeEdit
operator|::
name|task148725
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd/MM"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|2
argument_list|,
literal|27
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|stepBy
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|stepBy
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setWrapping
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|stepBy
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2001
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task148522
name|void
name|tst_QDateTimeEdit
operator|::
name|task148522
parameter_list|()
block|{
name|QTimeEdit
name|edit
decl_stmt|;
specifier|const
name|QDateTime
name|dt
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|12
argument_list|,
literal|13
argument_list|,
literal|14
argument_list|,
literal|15
argument_list|)
argument_list|)
decl_stmt|;
name|edit
operator|.
name|setDateTime
argument_list|(
name|dt
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|dateTime
argument_list|()
argument_list|,
name|dt
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|ddMMMMyyyy
name|void
name|tst_QDateTimeEdit
operator|::
name|ddMMMMyyyy
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dd.MMMM.yyyy"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Enter
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2000"
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|text
argument_list|()
argument_list|,
literal|"01."
operator|+
name|QDate
operator|::
name|longMonthName
argument_list|(
literal|1
argument_list|)
operator|+
literal|".200"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|wheelEvent
name|void
name|tst_QDateTimeEdit
operator|::
name|wheelEvent
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"dddd/MM"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|21
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QWheelEvent
name|w
argument_list|(
name|testWidget
operator|->
name|lineEdit
argument_list|()
operator|->
name|geometry
argument_list|()
operator|.
name|center
argument_list|()
argument_list|,
literal|120
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|testWidget
argument_list|,
operator|&
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|sendEvent
argument_list|(
name|testWidget
argument_list|,
operator|&
name|w
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|3
argument_list|,
literal|22
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|specialValueCornerCase
name|void
name|tst_QDateTimeEdit
operator|::
name|specialValueCornerCase
parameter_list|()
block|{
comment|// if you set minimum to value it won't update since value won't
comment|// be bounded to anything. If you have a specialValueText it needs
comment|// to call updateEdit to make sure the text is changed
name|QDateTimeEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setSpecialValueText
argument_list|(
literal|"foobar"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setMinimumDate
argument_list|(
name|edit
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|edit
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"foobar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cursorPositionOnInit
name|void
name|tst_QDateTimeEdit
operator|::
name|cursorPositionOnInit
parameter_list|()
block|{
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/MM"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/MM"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setSpecialValueText
argument_list|(
literal|"special"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setMinimumDate
argument_list|(
name|edit
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|show
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|cursorPosition
argument_list|()
argument_list|,
literal|7
argument_list|)
expr_stmt|;
comment|// ### legacy behavior. Keep it like this rather than changing
comment|// ### but add a test none-the-less
block|}
block|}
end_function
begin_function
DECL|function|task118867
name|void
name|tst_QDateTimeEdit
operator|::
name|task118867
parameter_list|()
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"hh:mm"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setMinimumTime
argument_list|(
name|QTime
argument_list|(
literal|5
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setMaximumTime
argument_list|(
name|QTime
argument_list|(
literal|6
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05:30"
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|setCursorPosition
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05:3"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05:"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05:"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05:"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05:3"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"05:33"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nextPrevSection_data
name|void
name|tst_QDateTimeEdit
operator|::
name|nextPrevSection_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|Qt
operator|::
name|Key
argument_list|>
argument_list|(
literal|"key"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|Qt
operator|::
name|KeyboardModifiers
argument_list|>
argument_list|(
literal|"modifiers"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"selectedText"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"tab"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_Tab
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|NoModifier
operator|<<
name|QString
argument_list|(
literal|"56"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"backtab"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_Backtab
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|NoModifier
operator|<<
name|QString
argument_list|(
literal|"12"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"shift-tab"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_Tab
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|ShiftModifier
operator|<<
name|QString
argument_list|(
literal|"12"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_Slash
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|NoModifier
operator|<<
name|QString
argument_list|(
literal|"56"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"b"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_B
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|NoModifier
operator|<<
name|QString
argument_list|(
literal|"56"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"c"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_C
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|NoModifier
operator|<<
name|QString
argument_list|(
literal|"56"
argument_list|)
expr_stmt|;
comment|// 1. mac doesn't do these,
comment|// 2. some WinCE devices do not have modifiers
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|WINCE_NO_MODIFIER_KEYS
argument_list|)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ctrl-right"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_Right
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|ControlModifier
operator|<<
name|QString
argument_list|(
literal|"56"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ctrl-left"
argument_list|)
operator|<<
name|Qt
operator|::
name|Key_Left
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|ControlModifier
operator|<<
name|QString
argument_list|(
literal|"12"
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|nextPrevSection
name|void
name|tst_QDateTimeEdit
operator|::
name|nextPrevSection
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|Qt
operator|::
name|Key
argument_list|,
name|key
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|Qt
operator|::
name|KeyboardModifiers
argument_list|,
name|modifiers
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|selectedText
argument_list|)
expr_stmt|;
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"hh/mm/bc9ss"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|12
argument_list|,
literal|34
argument_list|,
literal|56
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|show
argument_list|()
expr_stmt|;
name|edit
operator|.
name|setSelectedSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MinuteSection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"34"
argument_list|)
argument_list|)
expr_stmt|;
comment|// selftest
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|key
argument_list|,
name|modifiers
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|selectedText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dateEditTimeEditFormats
name|void
name|tst_QDateTimeEdit
operator|::
name|dateEditTimeEditFormats
parameter_list|()
block|{
name|QTimeEdit
name|t
decl_stmt|;
name|t
operator|.
name|setDisplayFormat
argument_list|(
literal|"hh yyyy"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|t
operator|.
name|displayedSections
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|HourSection
argument_list|)
expr_stmt|;
name|QDateEdit
name|d
decl_stmt|;
name|d
operator|.
name|setDisplayFormat
argument_list|(
literal|"hh yyyy"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|d
operator|.
name|displayedSections
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|YearSection
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|timeSpec_data
name|void
name|tst_QDateTimeEdit
operator|::
name|timeSpec_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"useSetProperty"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setProperty"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"setTimeSpec"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|timeSpec
name|void
name|tst_QDateTimeEdit
operator|::
name|timeSpec
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|useSetProperty
argument_list|)
expr_stmt|;
name|QDateTimeEdit
name|edit
decl_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|dateTime
argument_list|()
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|edit
operator|.
name|timeSpec
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|minimumDateTime
argument_list|()
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|edit
operator|.
name|timeSpec
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|maximumDateTime
argument_list|()
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|edit
operator|.
name|timeSpec
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|useSetProperty
condition|)
block|{
name|edit
operator|.
name|setProperty
argument_list|(
literal|"timeSpec"
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|edit
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|minimumDateTime
argument_list|()
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|edit
operator|.
name|timeSpec
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|maximumDateTime
argument_list|()
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|edit
operator|.
name|timeSpec
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|dateTime
argument_list|()
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|edit
operator|.
name|timeSpec
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|useSetProperty
condition|)
block|{
name|edit
operator|.
name|setProperty
argument_list|(
literal|"timeSpec"
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|edit
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
specifier|const
name|QDateTime
name|dt
init|=
name|edit
operator|.
name|dateTime
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|timeSpec
argument_list|()
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
specifier|const
name|QDateTime
name|utc
init|=
name|dt
operator|.
name|toUTC
argument_list|()
decl_stmt|;
if|if
condition|(
name|dt
operator|.
name|time
argument_list|()
operator|!=
name|utc
operator|.
name|time
argument_list|()
condition|)
block|{
specifier|const
name|QDateTime
name|min
argument_list|(
name|QDate
argument_list|(
literal|1999
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|QTime
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
decl_stmt|;
name|edit
operator|.
name|setMinimumDateTime
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|min
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|useSetProperty
condition|)
block|{
name|edit
operator|.
name|setProperty
argument_list|(
literal|"timeSpec"
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|edit
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|edit
operator|.
name|minimumTime
argument_list|()
operator|!=
name|min
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|.
name|minimumDateTime
argument_list|()
operator|.
name|timeSpec
argument_list|()
operator|!=
name|min
operator|.
name|timeSpec
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|minimumDateTime
argument_list|()
operator|.
name|toTime_t
argument_list|()
argument_list|,
name|min
operator|.
name|toTime_t
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QSKIP
argument_list|(
literal|"Not tested in the GMT timezone"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|timeSpecBug
name|void
name|tst_QDateTimeEdit
operator|::
name|timeSpecBug
parameter_list|()
block|{
name|testWidget
operator|->
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"hh:mm"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|oldText
init|=
name|testWidget
operator|->
name|text
argument_list|()
decl_stmt|;
specifier|const
name|QDateTime
name|oldDateTime
init|=
name|testWidget
operator|->
name|dateTime
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|oldDateTime
argument_list|,
name|testWidget
operator|->
name|dateTime
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|oldText
argument_list|,
name|testWidget
operator|->
name|text
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cachedDayTest
name|void
name|tst_QDateTimeEdit
operator|::
name|cachedDayTest
parameter_list|()
block|{
name|testWidget
operator|->
name|setDisplayFormat
argument_list|(
literal|"MM/dd"
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|1
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
comment|//QTest::keyClick(testWidget->lineEdit(), Qt::Key_Up); // this doesn't work
comment|//on Mac. QTestLib bug? ###
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|3
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|1
argument_list|,
literal|31
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Down
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|1
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|2
argument_list|,
literal|28
argument_list|)
argument_list|)
expr_stmt|;
name|testWidget
operator|->
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
name|testWidget
argument_list|,
name|Qt
operator|::
name|Key_Up
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testWidget
operator|->
name|date
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|2007
argument_list|,
literal|3
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|monthEdgeCase
name|void
name|tst_QDateTimeEdit
operator|::
name|monthEdgeCase
parameter_list|()
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setLocale
argument_list|(
name|QLocale
argument_list|(
literal|"fr_FR"
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"MMM d"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"janv. 1"
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|setCursorPosition
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"janv 1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|RestoreLocaler
class|class
name|RestoreLocaler
block|{
public|public:
DECL|function|RestoreLocaler
name|RestoreLocaler
parameter_list|()
member_init_list|:
name|old
argument_list|(
name|QLocale
argument_list|()
argument_list|)
block|{}
DECL|function|~RestoreLocaler
name|~
name|RestoreLocaler
parameter_list|()
block|{
name|QLocale
operator|::
name|setDefault
argument_list|(
name|old
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|old
specifier|const
name|QLocale
name|old
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|setLocale
name|void
name|tst_QDateTimeEdit
operator|::
name|setLocale
parameter_list|()
block|{
name|RestoreLocaler
name|r
decl_stmt|;
name|QLocale
operator|::
name|setDefault
argument_list|(
name|QLocale
argument_list|(
literal|"en_US"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"MMMM d"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"January 1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QLocale
operator|::
name|setDefault
argument_list|(
name|QLocale
argument_list|(
literal|"no_NO"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"MMMM d"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
operator|.
name|toLower
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"januar 1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// I get Januar on Mac and januar on linux
block|}
name|QLocale
operator|::
name|setDefault
argument_list|(
name|QLocale
argument_list|(
literal|"en_US"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"MMMM d"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"January 1"
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setLocale
argument_list|(
name|QLocale
argument_list|(
literal|"no_NO"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
operator|.
name|toLower
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"januar 1"
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setLocale
argument_list|(
name|QLocale
argument_list|(
literal|"no_NO"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|potentialYYValueBug
name|void
name|tst_QDateTimeEdit
operator|::
name|potentialYYValueBug
parameter_list|()
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yy"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|minimumDate
argument_list|()
argument_list|,
name|QDate
argument_list|(
literal|1752
argument_list|,
literal|9
argument_list|,
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|edit
operator|.
name|minimumDate
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|setFocus
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"14/09/5"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|textSectionAtEnd
name|void
name|tst_QDateTimeEdit
operator|::
name|textSectionAtEnd
parameter_list|()
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"MMMM"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|setFocus
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Right
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_End
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Backspace
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"Januar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keypadAutoAdvance_data
name|void
name|tst_QDateTimeEdit
operator|::
name|keypadAutoAdvance_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|Qt
operator|::
name|KeyboardModifiers
argument_list|>
argument_list|(
literal|"modifiers"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"None"
argument_list|)
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|NoModifier
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Keypad"
argument_list|)
operator|<<
operator|(
name|Qt
operator|::
name|KeyboardModifiers
operator|)
name|Qt
operator|::
name|KeypadModifier
expr_stmt|;
comment|// QTBUG-7842: Using KeyPad with shift (numlock off)
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Keypad+Shift"
argument_list|)
operator|<<
call|(
name|Qt
operator|::
name|KeyboardModifiers
call|)
argument_list|(
name|Qt
operator|::
name|KeypadModifier
operator||
name|Qt
operator|::
name|ShiftModifier
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keypadAutoAdvance
name|void
name|tst_QDateTimeEdit
operator|::
name|keypadAutoAdvance
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|Qt
operator|::
name|KeyboardModifiers
argument_list|,
name|modifiers
argument_list|)
expr_stmt|;
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2000
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/MM"
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Left
argument_list|,
name|Qt
operator|::
name|ControlModifier
argument_list|)
expr_stmt|;
else|#
directive|else
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Home
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Return
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"01"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_1
argument_list|,
name|modifiers
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_2
argument_list|,
name|modifiers
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"02"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|task196924
name|void
name|tst_QDateTimeEdit
operator|::
name|task196924
parameter_list|()
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/M/yyyy"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2345
argument_list|,
literal|6
argument_list|,
literal|17
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"17/6/2345"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2345"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"17/3/2345"
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDate
argument_list|(
name|QDate
argument_list|(
literal|2345
argument_list|,
literal|6
argument_list|,
literal|17
argument_list|)
argument_list|)
expr_stmt|;
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|setCursorPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"17/06/2345"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_Tab
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"06"
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|keyClick
argument_list|(
operator|&
name|edit
argument_list|,
name|Qt
operator|::
name|Key_3
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|lineEdit
argument_list|()
operator|->
name|selectedText
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"2345"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|text
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"17/03/2345"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusNextPrevChild
name|void
name|tst_QDateTimeEdit
operator|::
name|focusNextPrevChild
parameter_list|()
block|{
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"dd/MM/yyyy"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|show
argument_list|()
expr_stmt|;
name|edit
operator|.
name|setFocus
argument_list|()
expr_stmt|;
name|edit
operator|.
name|setCurrentSection
argument_list|(
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|DaySection
argument_list|)
expr_stmt|;
name|edit
operator|.
name|focusNextPrevChild
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|currentSection
argument_list|()
argument_list|,
name|QDateTimeEdit
operator|::
name|MonthSection
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|taskQTBUG_12384_timeSpecShowTimeOnly
name|void
name|tst_QDateTimeEdit
operator|::
name|taskQTBUG_12384_timeSpecShowTimeOnly
parameter_list|()
block|{
name|QDateTime
name|time
init|=
name|QDateTime
operator|::
name|fromString
argument_list|(
literal|"20100723 04:02:40"
argument_list|,
literal|"yyyyMMdd hh:mm:ss"
argument_list|)
decl_stmt|;
name|time
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|EditorDateEdit
name|edit
decl_stmt|;
name|edit
operator|.
name|setDisplayFormat
argument_list|(
literal|"hh:mm:ss"
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setDateTime
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|minimumTime
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|maximumTime
argument_list|()
argument_list|,
name|QTime
argument_list|(
literal|23
argument_list|,
literal|59
argument_list|,
literal|59
argument_list|,
literal|999
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|edit
operator|.
name|time
argument_list|()
argument_list|,
name|time
operator|.
name|time
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deleteCalendarWidget
name|void
name|tst_QDateTimeEdit
operator|::
name|deleteCalendarWidget
parameter_list|()
block|{
block|{
comment|// setup
name|QCalendarWidget
modifier|*
name|cw
init|=
literal|0
decl_stmt|;
name|QDateEdit
name|edit
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|setCalendarPopup
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
name|edit
operator|.
name|calendarWidget
argument_list|()
operator|->
name|setObjectName
argument_list|(
literal|"cw1"
argument_list|)
expr_stmt|;
empty_stmt|;
comment|// delete
name|cw
operator|=
name|edit
operator|.
name|calendarWidget
argument_list|()
expr_stmt|;
operator|delete
name|cw
expr_stmt|;
comment|// it should create a new widget
name|QVERIFY
argument_list|(
name|edit
operator|.
name|calendarWidget
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|edit
operator|.
name|calendarWidget
argument_list|()
operator|->
name|objectName
argument_list|()
operator|!=
literal|"cw1"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDateTimeEdit
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdatetimeedit.moc"
end_include
end_unit
