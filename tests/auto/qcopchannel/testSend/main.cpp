begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QByteArray>
end_include
begin_include
include|#
directive|include
file|<QCopChannel>
end_include
begin_include
include|#
directive|include
file|<stdio.h>
end_include
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|Q_WS_QWS
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QStringList
name|args
init|=
name|app
operator|.
name|arguments
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|args
operator|.
name|count
argument_list|()
operator|==
literal|3
operator|||
name|args
operator|.
name|count
argument_list|()
operator|==
literal|4
argument_list|)
expr_stmt|;
name|QString
name|channelName
init|=
name|args
operator|.
name|at
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|QString
name|msg
init|=
name|args
operator|.
name|at
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|QByteArray
name|data
decl_stmt|;
if|if
condition|(
name|args
operator|.
name|count
argument_list|()
operator|==
literal|4
condition|)
name|data
operator|=
name|QByteArray
argument_list|(
name|args
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|.
name|toAscii
argument_list|()
argument_list|)
expr_stmt|;
name|QCopChannel
operator|::
name|send
argument_list|(
name|channelName
argument_list|,
name|msg
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QCopChannel
operator|::
name|flush
argument_list|()
expr_stmt|;
name|fprintf
argument_list|(
name|stdout
argument_list|,
literal|"done"
argument_list|)
expr_stmt|;
name|fflush
argument_list|(
name|stdout
argument_list|)
expr_stmt|;
endif|#
directive|endif
return|return
literal|0
return|;
block|}
end_function
end_unit
