begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Jeremy LainÃ©<jeremy.laine@m4x.org> ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<QtNetwork/QDnsLookup>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_class
DECL|class|tst_QDnsLookup_Appless
class|class
name|tst_QDnsLookup_Appless
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|noApplication
parameter_list|()
function_decl|;
name|void
name|recreateApplication
parameter_list|()
function_decl|;
name|void
name|destroyApplicationDuringLookup
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|noApplication
name|void
name|tst_QDnsLookup_Appless
operator|::
name|noApplication
parameter_list|()
block|{
name|QTest
operator|::
name|ignoreMessage
argument_list|(
name|QtWarningMsg
argument_list|,
literal|"QDnsLookup requires a QCoreApplication"
argument_list|)
expr_stmt|;
name|QDnsLookup
name|dns
argument_list|(
name|QDnsLookup
operator|::
name|A
argument_list|,
literal|"a-single.test.qt-project.org"
argument_list|)
decl_stmt|;
name|dns
operator|.
name|lookup
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|recreateApplication
name|void
name|tst_QDnsLookup_Appless
operator|::
name|recreateApplication
parameter_list|()
block|{
name|int
name|argc
init|=
literal|0
decl_stmt|;
name|char
modifier|*
modifier|*
name|argv
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|QCoreApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QDnsLookup
name|dns
argument_list|(
name|QDnsLookup
operator|::
name|A
argument_list|,
literal|"a-single.test.qt-project.org"
argument_list|)
decl_stmt|;
name|dns
operator|.
name|lookup
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|dns
operator|.
name|isFinished
argument_list|()
condition|)
block|{
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|dns
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
operator|&
name|QTestEventLoop
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|10
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
name|dns
operator|.
name|isFinished
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|destroyApplicationDuringLookup
name|void
name|tst_QDnsLookup_Appless
operator|::
name|destroyApplicationDuringLookup
parameter_list|()
block|{
name|int
name|argc
init|=
literal|0
decl_stmt|;
name|char
modifier|*
modifier|*
name|argv
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|QCoreApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QDnsLookup
name|dns
argument_list|(
name|QDnsLookup
operator|::
name|A
argument_list|,
literal|"a-single.test.macieira.info"
argument_list|)
decl_stmt|;
name|dns
operator|.
name|lookup
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_APPLESS_MAIN
argument_list|(
argument|tst_QDnsLookup_Appless
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdnslookup_appless.moc"
end_include
end_unit
