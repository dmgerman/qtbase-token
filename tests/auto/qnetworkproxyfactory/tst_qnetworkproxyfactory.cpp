begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QTest>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qnetworkproxy.h>
end_include
begin_class
DECL|class|tst_QNetworkProxyFactory
class|class
name|tst_QNetworkProxyFactory
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|systemProxyForQuery
parameter_list|()
specifier|const
function_decl|;
private|private:
name|QString
name|formatProxyName
parameter_list|(
specifier|const
name|QNetworkProxy
modifier|&
name|proxy
parameter_list|)
specifier|const
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|formatProxyName
name|QString
name|tst_QNetworkProxyFactory
operator|::
name|formatProxyName
parameter_list|(
specifier|const
name|QNetworkProxy
modifier|&
name|proxy
parameter_list|)
specifier|const
block|{
name|QString
name|proxyName
decl_stmt|;
if|if
condition|(
operator|!
name|proxy
operator|.
name|user
argument_list|()
operator|.
name|isNull
argument_list|()
condition|)
name|proxyName
operator|.
name|append
argument_list|(
literal|"%1:%2@"
argument_list|)
operator|.
name|arg
argument_list|(
name|proxy
operator|.
name|user
argument_list|()
argument_list|,
name|proxy
operator|.
name|password
argument_list|()
argument_list|)
expr_stmt|;
name|proxyName
operator|.
name|append
argument_list|(
name|QString
argument_list|(
literal|"%1:%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|proxy
operator|.
name|hostName
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|proxy
operator|.
name|port
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|proxyName
operator|.
name|append
argument_list|(
name|QString
argument_list|(
literal|" (type=%1, capabilities=%2)"
argument_list|)
operator|.
name|arg
argument_list|(
name|proxy
operator|.
name|type
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|proxy
operator|.
name|capabilities
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|proxyName
return|;
block|}
end_function
begin_function
DECL|function|systemProxyForQuery
name|void
name|tst_QNetworkProxyFactory
operator|::
name|systemProxyForQuery
parameter_list|()
specifier|const
block|{
name|QNetworkProxyQuery
name|query
argument_list|(
name|QUrl
argument_list|(
name|QString
argument_list|(
literal|"http://www.abc.com"
argument_list|)
argument_list|)
argument_list|,
name|QNetworkProxyQuery
operator|::
name|UrlRequest
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QNetworkProxy
argument_list|>
name|systemProxyList
init|=
name|QNetworkProxyFactory
operator|::
name|systemProxyForQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|bool
name|pass
init|=
literal|true
decl_stmt|;
name|QNetworkProxy
name|proxy
decl_stmt|;
name|QList
argument_list|<
name|QNetworkProxy
argument_list|>
name|nativeProxyList
decl_stmt|;
name|nativeProxyList
operator|<<
name|QNetworkProxy
argument_list|(
name|QNetworkProxy
operator|::
name|HttpProxy
argument_list|,
name|QString
argument_list|(
literal|"http://test.proxy.com"
argument_list|)
argument_list|,
literal|8080
argument_list|)
operator|<<
name|QNetworkProxy
operator|::
name|NoProxy
expr_stmt|;
foreach|foreach
control|(
name|proxy
init|,
name|systemProxyList
control|)
block|{
if|if
condition|(
operator|!
name|nativeProxyList
operator|.
name|contains
argument_list|(
name|proxy
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"System proxy not found in native proxy list: "
operator|<<
name|formatProxyName
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|pass
operator|=
literal|false
expr_stmt|;
block|}
block|}
foreach|foreach
control|(
name|proxy
init|,
name|nativeProxyList
control|)
block|{
if|if
condition|(
operator|!
name|systemProxyList
operator|.
name|contains
argument_list|(
name|proxy
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"Native proxy not found in system proxy list: "
operator|<<
name|formatProxyName
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
name|pass
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|pass
condition|)
name|QFAIL
argument_list|(
literal|"One or more system proxy lookup failures occurred."
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QNetworkProxyFactory
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qnetworkproxyfactory.moc"
end_include
end_unit
