begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qapplication.h>
end_include
begin_include
include|#
directive|include
file|<qtabbar.h>
end_include
begin_include
include|#
directive|include
file|<qpushbutton.h>
end_include
begin_include
include|#
directive|include
file|<qstyle.h>
end_include
begin_include
include|#
directive|include
file|"../../shared/util.h"
end_include
begin_class
DECL|class|tst_QTabBar
class|class
name|tst_QTabBar
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QTabBar
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QTabBar
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|getSetCheck
parameter_list|()
function_decl|;
name|void
name|setIconSize
parameter_list|()
function_decl|;
name|void
name|setIconSize_data
parameter_list|()
function_decl|;
name|void
name|testCurrentChanged_data
parameter_list|()
function_decl|;
name|void
name|testCurrentChanged
parameter_list|()
function_decl|;
name|void
name|insertAtCurrentIndex
parameter_list|()
function_decl|;
name|void
name|removeTab_data
parameter_list|()
function_decl|;
name|void
name|removeTab
parameter_list|()
function_decl|;
name|void
name|setElideMode_data
parameter_list|()
function_decl|;
name|void
name|setElideMode
parameter_list|()
function_decl|;
name|void
name|sizeHints
parameter_list|()
function_decl|;
name|void
name|setUsesScrollButtons_data
parameter_list|()
function_decl|;
name|void
name|setUsesScrollButtons
parameter_list|()
function_decl|;
name|void
name|removeLastTab
parameter_list|()
function_decl|;
name|void
name|closeButton
parameter_list|()
function_decl|;
name|void
name|tabButton_data
parameter_list|()
function_decl|;
name|void
name|tabButton
parameter_list|()
function_decl|;
name|void
name|selectionBehaviorOnRemove_data
parameter_list|()
function_decl|;
name|void
name|selectionBehaviorOnRemove
parameter_list|()
function_decl|;
name|void
name|moveTab_data
parameter_list|()
function_decl|;
name|void
name|moveTab
parameter_list|()
function_decl|;
name|void
name|task251184_removeTab
parameter_list|()
function_decl|;
name|void
name|changeTitleWhileDoubleClickingTab
parameter_list|()
function_decl|;
name|void
name|taskQTBUG_10052_widgetLayoutWhenMoving
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_comment
comment|// Testing get/set functions
end_comment
begin_function
DECL|function|getSetCheck
name|void
name|tst_QTabBar
operator|::
name|getSetCheck
parameter_list|()
block|{
name|QTabBar
name|obj1
decl_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
literal|"Tab1"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
literal|"Tab2"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
literal|"Tab3"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
literal|"Tab4"
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|addTab
argument_list|(
literal|"Tab5"
argument_list|)
expr_stmt|;
comment|// Shape QTabBar::shape()
comment|// void QTabBar::setShape(Shape)
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedNorth
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedNorth
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedSouth
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedSouth
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedWest
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedWest
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedEast
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|RoundedEast
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularNorth
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularNorth
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularSouth
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularSouth
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularWest
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularWest
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setShape
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularEast
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|(
name|QTabBar
operator|::
name|TriangularEast
argument_list|)
argument_list|,
name|obj1
operator|.
name|shape
argument_list|()
argument_list|)
expr_stmt|;
comment|// bool QTabBar::drawBase()
comment|// void QTabBar::setDrawBase(bool)
name|obj1
operator|.
name|setDrawBase
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|false
argument_list|,
name|obj1
operator|.
name|drawBase
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setDrawBase
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|true
argument_list|,
name|obj1
operator|.
name|drawBase
argument_list|()
argument_list|)
expr_stmt|;
comment|// int QTabBar::currentIndex()
comment|// void QTabBar::setCurrentIndex(int)
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
name|INT_MIN
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
name|INT_MAX
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|0
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
name|obj1
operator|.
name|setCurrentIndex
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
literal|4
argument_list|,
name|obj1
operator|.
name|currentIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|tst_QTabBar
name|tst_QTabBar
operator|::
name|tst_QTabBar
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QTabBar
name|tst_QTabBar
operator|::
name|~
name|tst_QTabBar
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QTabBar
operator|::
name|initTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QTabBar
operator|::
name|cleanupTestCase
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|init
name|void
name|tst_QTabBar
operator|::
name|init
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|setIconSize_data
name|void
name|tst_QTabBar
operator|::
name|setIconSize_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"sizeToSet"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedWidth"
argument_list|)
expr_stmt|;
name|int
name|iconDefault
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarIconSize
argument_list|)
decl_stmt|;
name|int
name|small
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_SmallIconSize
argument_list|)
decl_stmt|;
name|int
name|large
init|=
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_LargeIconSize
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"default"
argument_list|)
operator|<<
operator|-
literal|1
operator|<<
name|iconDefault
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"zero"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"same as default"
argument_list|)
operator|<<
name|iconDefault
operator|<<
name|iconDefault
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"large"
argument_list|)
operator|<<
name|large
operator|<<
name|large
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"small"
argument_list|)
operator|<<
name|small
operator|<<
name|small
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setIconSize
name|void
name|tst_QTabBar
operator|::
name|setIconSize
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|sizeToSet
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedWidth
argument_list|)
expr_stmt|;
name|QTabBar
name|tabBar
decl_stmt|;
name|tabBar
operator|.
name|setIconSize
argument_list|(
name|QSize
argument_list|(
name|sizeToSet
argument_list|,
name|sizeToSet
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabBar
operator|.
name|iconSize
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
name|expectedWidth
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testCurrentChanged_data
name|void
name|tst_QTabBar
operator|::
name|testCurrentChanged_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"tabToSet"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pressAntotherTab"
argument_list|)
operator|<<
literal|1
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"pressTheSameTab"
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|testCurrentChanged
name|void
name|tst_QTabBar
operator|::
name|testCurrentChanged
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|tabToSet
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expectedCount
argument_list|)
expr_stmt|;
name|QTabBar
name|tabBar
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|tabBar
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"Tab1"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"Tab2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabBar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|setCurrentIndex
argument_list|(
name|tabToSet
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabBar
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|tabToSet
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
name|expectedCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|insertAtCurrentIndex
name|void
name|tst_QTabBar
operator|::
name|insertAtCurrentIndex
parameter_list|()
block|{
name|QTabBar
name|tabBar
decl_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"Tab1"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabBar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|insertTab
argument_list|(
literal|0
argument_list|,
literal|"Tab2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabBar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|insertTab
argument_list|(
literal|0
argument_list|,
literal|"Tab3"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabBar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|insertTab
argument_list|(
literal|2
argument_list|,
literal|"Tab4"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabBar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeTab_data
name|void
name|tst_QTabBar
operator|::
name|removeTab_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"currentIndex"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"deleteIndex"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"spyCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"finalIndex"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteEnd"
argument_list|)
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteEndWithIndexOnEnd"
argument_list|)
operator|<<
literal|2
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteMiddle"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"deleteMiddleOnMiddle"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeTab
name|void
name|tst_QTabBar
operator|::
name|removeTab
parameter_list|()
block|{
name|QTabBar
name|tabbar
decl_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|currentIndex
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|deleteIndex
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|addTab
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|addTab
argument_list|(
literal|"bar"
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|addTab
argument_list|(
literal|"baz"
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|setCurrentIndex
argument_list|(
name|currentIndex
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|tabbar
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|tabbar
operator|.
name|removeTab
argument_list|(
name|deleteIndex
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|"spyCount"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|tabbar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|"finalIndex"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setElideMode_data
name|void
name|tst_QTabBar
operator|::
name|setElideMode_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"tabElideMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expectedMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"default"
argument_list|)
operator|<<
operator|-
literal|128
operator|<<
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TabBar_ElideMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"explicit default"
argument_list|)
operator|<<
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TabBar_ElideMode
argument_list|)
operator|<<
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TabBar_ElideMode
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"None"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideNone
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideNone
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Left"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideLeft
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideLeft
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Center"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideMiddle
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideMiddle
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Right"
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideRight
argument_list|)
operator|<<
name|int
argument_list|(
name|Qt
operator|::
name|ElideRight
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setElideMode
name|void
name|tst_QTabBar
operator|::
name|setElideMode
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|tabElideMode
argument_list|)
expr_stmt|;
name|QTabBar
name|tabBar
decl_stmt|;
if|if
condition|(
name|tabElideMode
operator|!=
operator|-
literal|128
condition|)
name|tabBar
operator|.
name|setElideMode
argument_list|(
name|Qt
operator|::
name|TextElideMode
argument_list|(
name|tabElideMode
argument_list|)
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|int
argument_list|(
name|tabBar
operator|.
name|elideMode
argument_list|()
argument_list|)
argument_list|,
literal|"expectedMode"
argument_list|)
expr_stmt|;
comment|// Make sure style sheet does not override user set mode
name|tabBar
operator|.
name|setStyleSheet
argument_list|(
literal|"QWidget { background-color: #ABA8A6;}"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|int
argument_list|(
name|tabBar
operator|.
name|elideMode
argument_list|()
argument_list|)
argument_list|,
literal|"expectedMode"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeHints
name|void
name|tst_QTabBar
operator|::
name|sizeHints
parameter_list|()
block|{
name|QTabBar
name|tabBar
decl_stmt|;
name|QSKIP
argument_list|(
literal|"To be fixed on Mac (font size below not large enough) and Linux QWS (probably too large for the screen)."
argument_list|,
name|SkipSingle
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|setFont
argument_list|(
name|QFont
argument_list|(
literal|"Arial"
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"tab 01"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"tab 02"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"tab 03"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"tab 04"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"tab 05"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"tab 06"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"This is tab7"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"This is tab8"
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"This is tab9 with a very long title"
argument_list|)
expr_stmt|;
comment|// No eliding and no scrolling -> tabbar becomes very wide
name|tabBar
operator|.
name|setUsesScrollButtons
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|setElideMode
argument_list|(
name|Qt
operator|::
name|ElideNone
argument_list|)
expr_stmt|;
comment|//    qDebug()<< tabBar.minimumSizeHint()<< tabBar.sizeHint();
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|minimumSizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|>
literal|700
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|>
literal|700
argument_list|)
expr_stmt|;
comment|// Scrolling enabled -> no reason to become very wide
name|tabBar
operator|.
name|setUsesScrollButtons
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|//   qDebug()<< tabBar.minimumSizeHint()<< tabBar.sizeHint();
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|minimumSizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|<
literal|200
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|>
literal|700
argument_list|)
expr_stmt|;
comment|// unchanged
comment|// Eliding enabled -> no reason to become very wide
name|tabBar
operator|.
name|setUsesScrollButtons
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|setElideMode
argument_list|(
name|Qt
operator|::
name|ElideRight
argument_list|)
expr_stmt|;
comment|//    qDebug()<< tabBar.minimumSizeHint()<< tabBar.sizeHint();
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|minimumSizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|<
literal|500
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|>
literal|700
argument_list|)
expr_stmt|;
comment|// unchanged
name|tabBar
operator|.
name|addTab
argument_list|(
literal|"This is tab10 with a very long title"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|minimumSizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|<
literal|600
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabBar
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|>
literal|700
argument_list|)
expr_stmt|;
comment|// unchanged
block|}
end_function
begin_function
DECL|function|setUsesScrollButtons_data
name|void
name|tst_QTabBar
operator|::
name|setUsesScrollButtons_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"usesArrows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"expectedArrows"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"default"
argument_list|)
operator|<<
operator|-
literal|128
operator|<<
operator|!
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TabBar_PreferNoArrows
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"explicit default"
argument_list|)
operator|<<
name|int
argument_list|(
operator|!
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TabBar_PreferNoArrows
argument_list|)
argument_list|)
operator|<<
operator|!
name|qApp
operator|->
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TabBar_PreferNoArrows
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"No"
argument_list|)
operator|<<
name|int
argument_list|(
literal|false
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Yes"
argument_list|)
operator|<<
name|int
argument_list|(
literal|true
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setUsesScrollButtons
name|void
name|tst_QTabBar
operator|::
name|setUsesScrollButtons
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|usesArrows
argument_list|)
expr_stmt|;
name|QTabBar
name|tabBar
decl_stmt|;
if|if
condition|(
name|usesArrows
operator|!=
operator|-
literal|128
condition|)
name|tabBar
operator|.
name|setUsesScrollButtons
argument_list|(
name|usesArrows
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|tabBar
operator|.
name|usesScrollButtons
argument_list|()
argument_list|,
literal|"expectedArrows"
argument_list|)
expr_stmt|;
comment|// Make sure style sheet does not override user set mode
name|tabBar
operator|.
name|setStyleSheet
argument_list|(
literal|"QWidget { background-color: #ABA8A6;}"
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|tabBar
operator|.
name|usesScrollButtons
argument_list|()
argument_list|,
literal|"expectedArrows"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|removeLastTab
name|void
name|tst_QTabBar
operator|::
name|removeLastTab
parameter_list|()
block|{
name|QTabBar
name|tabbar
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|tabbar
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|index
init|=
name|tabbar
operator|.
name|addTab
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
name|tabbar
operator|.
name|removeTab
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|spy
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|closeButton
name|void
name|tst_QTabBar
operator|::
name|closeButton
parameter_list|()
block|{
name|QTabBar
name|tabbar
decl_stmt|;
name|QCOMPARE
argument_list|(
name|tabbar
operator|.
name|tabsClosable
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|setTabsClosable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabbar
operator|.
name|tabsClosable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|addTab
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QTabBar
operator|::
name|ButtonPosition
name|closeSide
init|=
operator|(
name|QTabBar
operator|::
name|ButtonPosition
operator|)
name|tabbar
operator|.
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_TabBar_CloseButtonPosition
argument_list|,
literal|0
argument_list|,
operator|&
name|tabbar
argument_list|)
decl_stmt|;
name|QTabBar
operator|::
name|ButtonPosition
name|otherSide
init|=
operator|(
name|closeSide
operator|==
name|QTabBar
operator|::
name|LeftSide
condition|?
name|QTabBar
operator|::
name|RightSide
else|:
name|QTabBar
operator|::
name|LeftSide
operator|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
literal|0
argument_list|,
name|otherSide
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
literal|0
argument_list|,
name|closeSide
argument_list|)
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|QAbstractButton
modifier|*
name|button
init|=
cast|static_cast
argument_list|<
name|QAbstractButton
operator|*
argument_list|>
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
literal|0
argument_list|,
name|closeSide
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|QSignalSpy
name|spy
argument_list|(
operator|&
name|tabbar
argument_list|,
name|SIGNAL
argument_list|(
name|tabCloseRequested
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|button
operator|->
name|click
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabbar
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QTabBar::ButtonPosition
argument_list|)
end_macro
begin_function
DECL|function|tabButton_data
name|void
name|tst_QTabBar
operator|::
name|tabButton_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTabBar
operator|::
name|ButtonPosition
argument_list|>
argument_list|(
literal|"position"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|LeftSide
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RightSide
expr_stmt|;
block|}
end_function
begin_comment
comment|// QTabBar::setTabButton(index, closeSide, closeButton);
end_comment
begin_function
DECL|function|tabButton
name|void
name|tst_QTabBar
operator|::
name|tabButton
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTabBar
operator|::
name|ButtonPosition
argument_list|,
name|position
argument_list|)
expr_stmt|;
name|QTabBar
operator|::
name|ButtonPosition
name|otherSide
init|=
operator|(
name|position
operator|==
name|QTabBar
operator|::
name|LeftSide
condition|?
name|QTabBar
operator|::
name|RightSide
else|:
name|QTabBar
operator|::
name|LeftSide
operator|)
decl_stmt|;
name|QTabBar
name|tabbar
decl_stmt|;
name|tabbar
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|tabbar
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|setTabButton
argument_list|(
operator|-
literal|1
argument_list|,
name|position
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
operator|-
literal|1
argument_list|,
name|position
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
literal|0
argument_list|,
name|position
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|addTab
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabbar
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|setTabButton
argument_list|(
literal|0
argument_list|,
name|position
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
literal|0
argument_list|,
name|position
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
decl_stmt|;
name|button
operator|->
name|show
argument_list|()
expr_stmt|;
name|button
operator|->
name|setText
argument_list|(
literal|"hi"
argument_list|)
expr_stmt|;
name|button
operator|->
name|resize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|button
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|button
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|tabbar
operator|.
name|setTabButton
argument_list|(
literal|0
argument_list|,
name|position
argument_list|,
name|button
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
literal|0
argument_list|,
name|position
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|button
argument_list|)
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
operator|!
name|button
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabbar
operator|.
name|tabButton
argument_list|(
literal|0
argument_list|,
name|otherSide
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|button
operator|->
name|parent
argument_list|()
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|tabbar
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|button
operator|->
name|pos
argument_list|()
operator|!=
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button2
init|=
operator|new
name|QPushButton
decl_stmt|;
name|tabbar
operator|.
name|setTabButton
argument_list|(
literal|0
argument_list|,
name|position
argument_list|,
name|button2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|button
operator|->
name|isHidden
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_typedef
DECL|typedef|IntList
typedef|typedef
name|QList
argument_list|<
name|int
argument_list|>
name|IntList
typedef|;
end_typedef
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QTabBar::SelectionBehavior
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|IntList
argument_list|)
end_macro
begin_define
DECL|macro|ONE
define|#
directive|define
name|ONE
parameter_list|(
name|x
parameter_list|)
value|(IntList()<< x)
end_define
begin_function
DECL|function|selectionBehaviorOnRemove_data
name|void
name|tst_QTabBar
operator|::
name|selectionBehaviorOnRemove_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTabBar
operator|::
name|SelectionBehavior
argument_list|>
argument_list|(
literal|"selectionBehavior"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"tabs"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"select"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|IntList
argument_list|>
argument_list|(
literal|"remove"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"expected"
argument_list|)
expr_stmt|;
comment|//                                               Count            select remove current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-1"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-2"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-3"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-4"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-5"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-6"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-7"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|1
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-8"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|1
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"left-9"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectLeftTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-1"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-2"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-3"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-4"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-5"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-6"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|1
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-7"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|1
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-8"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|1
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"right-9"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectRightTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-0"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-1"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-2"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-3"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|0
argument_list|)
operator|<<
literal|1
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-4"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|1
argument_list|)
operator|<<
literal|1
expr_stmt|;
comment|// not removing current
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-5"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|3
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|)
operator|<<
name|ONE
argument_list|(
literal|2
argument_list|)
operator|<<
literal|0
expr_stmt|;
comment|// go back one
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-6"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|4
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|)
operator|<<
literal|2
expr_stmt|;
comment|// go back two
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-7"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|4
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|)
operator|<<
literal|1
expr_stmt|;
comment|// go back three
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-8"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|4
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|1
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
literal|0
expr_stmt|;
comment|// pick from the middle
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-9"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|4
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|3
operator|<<
literal|1
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|2
operator|<<
literal|1
operator|)
operator|<<
literal|1
expr_stmt|;
comment|// every other one
name|QTest
operator|::
name|newRow
argument_list|(
literal|"previous-10"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|SelectPreviousTab
operator|<<
literal|7
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|0
operator|<<
literal|2
operator|<<
literal|4
operator|<<
literal|6
operator|)
operator|<<
operator|(
name|IntList
argument_list|()
operator|<<
literal|6
operator|<<
literal|4
operator|)
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectionBehaviorOnRemove
name|void
name|tst_QTabBar
operator|::
name|selectionBehaviorOnRemove
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTabBar
operator|::
name|SelectionBehavior
argument_list|,
name|selectionBehavior
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|tabs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|select
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|IntList
argument_list|,
name|remove
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|expected
argument_list|)
expr_stmt|;
name|QTabBar
name|tabbar
decl_stmt|;
name|tabbar
operator|.
name|setSelectionBehaviorOnRemove
argument_list|(
name|selectionBehavior
argument_list|)
expr_stmt|;
while|while
condition|(
operator|--
name|tabs
operator|>=
literal|0
condition|)
name|tabbar
operator|.
name|addTab
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|tabs
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabbar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|select
operator|.
name|isEmpty
argument_list|()
condition|)
name|tabbar
operator|.
name|setCurrentIndex
argument_list|(
name|select
operator|.
name|takeFirst
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|remove
operator|.
name|isEmpty
argument_list|()
condition|)
name|tabbar
operator|.
name|removeTab
argument_list|(
name|remove
operator|.
name|takeFirst
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|tabbar
operator|.
name|count
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|tabbar
operator|.
name|currentIndex
argument_list|()
argument_list|,
name|expected
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TabBar
class|class
name|TabBar
super|:
specifier|public
name|QTabBar
block|{
name|Q_OBJECT
public|public:
DECL|function|callMoveTab
name|void
name|callMoveTab
parameter_list|(
name|int
name|from
parameter_list|,
name|int
name|to
parameter_list|)
block|{
name|moveTab
argument_list|(
name|from
argument_list|,
name|to
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QTabBar::Shape
argument_list|)
end_macro
begin_function
DECL|function|moveTab_data
name|void
name|tst_QTabBar
operator|::
name|moveTab_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTabBar
operator|::
name|Shape
argument_list|>
argument_list|(
literal|"shape"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"tabs"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"from"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"to"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null-0"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|0
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null-1"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedEast
operator|<<
literal|0
operator|<<
operator|-
literal|1
operator|<<
operator|-
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null-2"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedEast
operator|<<
literal|1
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two-0"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|2
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two-1"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|2
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"five-0"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|5
operator|<<
literal|1
operator|<<
literal|3
expr_stmt|;
comment|// forward
name|QTest
operator|::
name|newRow
argument_list|(
literal|"five-1"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|5
operator|<<
literal|3
operator|<<
literal|1
expr_stmt|;
comment|// reverse
name|QTest
operator|::
name|newRow
argument_list|(
literal|"five-2"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|5
operator|<<
literal|0
operator|<<
literal|4
expr_stmt|;
comment|// forward
name|QTest
operator|::
name|newRow
argument_list|(
literal|"five-3"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|5
operator|<<
literal|1
operator|<<
literal|4
expr_stmt|;
comment|// forward
name|QTest
operator|::
name|newRow
argument_list|(
literal|"five-4"
argument_list|)
operator|<<
name|QTabBar
operator|::
name|RoundedNorth
operator|<<
literal|5
operator|<<
literal|3
operator|<<
literal|4
expr_stmt|;
comment|// forward
block|}
end_function
begin_function
DECL|function|moveTab
name|void
name|tst_QTabBar
operator|::
name|moveTab
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTabBar
operator|::
name|Shape
argument_list|,
name|shape
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|tabs
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|from
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|to
argument_list|)
expr_stmt|;
name|TabBar
name|bar
decl_stmt|;
name|bar
operator|.
name|setShape
argument_list|(
name|shape
argument_list|)
expr_stmt|;
while|while
condition|(
operator|--
name|tabs
operator|>=
literal|0
condition|)
name|bar
operator|.
name|addTab
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|tabs
argument_list|)
argument_list|)
expr_stmt|;
name|bar
operator|.
name|callMoveTab
argument_list|(
name|from
argument_list|,
name|to
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MyTabBar
class|class
name|MyTabBar
super|:
specifier|public
name|QTabBar
block|{
name|Q_OBJECT
public|public
name|slots
public|:
DECL|function|onCurrentChanged
name|void
name|onCurrentChanged
parameter_list|()
block|{
comment|//we just want this to be done once
name|disconnect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|onCurrentChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|removeTab
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|task251184_removeTab
name|void
name|tst_QTabBar
operator|::
name|task251184_removeTab
parameter_list|()
block|{
name|MyTabBar
name|bar
decl_stmt|;
name|bar
operator|.
name|addTab
argument_list|(
literal|"bar1"
argument_list|)
expr_stmt|;
name|bar
operator|.
name|addTab
argument_list|(
literal|"bar2"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bar
operator|.
name|count
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|bar
operator|.
name|connect
argument_list|(
operator|&
name|bar
argument_list|,
name|SIGNAL
argument_list|(
name|currentChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|onCurrentChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|bar
operator|.
name|setCurrentIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bar
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bar
operator|.
name|currentIndex
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|bar
operator|.
name|tabText
argument_list|(
name|bar
operator|.
name|currentIndex
argument_list|()
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"bar2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TitleChangeTabBar
class|class
name|TitleChangeTabBar
super|:
specifier|public
name|QTabBar
block|{
name|Q_OBJECT
DECL|member|timer
name|QTimer
name|timer
decl_stmt|;
DECL|member|count
name|int
name|count
decl_stmt|;
public|public:
DECL|function|TitleChangeTabBar
name|TitleChangeTabBar
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QTabBar
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|count
argument_list|(
literal|0
argument_list|)
block|{
name|setMovable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|addTab
argument_list|(
literal|"0"
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|timer
argument_list|,
name|SIGNAL
argument_list|(
name|timeout
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateTabText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|timer
operator|.
name|start
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|updateTabText
name|void
name|updateTabText
parameter_list|()
block|{
name|count
operator|++
expr_stmt|;
name|setTabText
argument_list|(
literal|0
argument_list|,
name|QString
argument_list|(
literal|"%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|count
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|changeTitleWhileDoubleClickingTab
name|void
name|tst_QTabBar
operator|::
name|changeTitleWhileDoubleClickingTab
parameter_list|()
block|{
name|TitleChangeTabBar
name|bar
decl_stmt|;
name|QPoint
name|tabPos
init|=
name|bar
operator|.
name|tabRect
argument_list|(
literal|0
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
name|QTest
operator|::
name|mouseDClick
argument_list|(
operator|&
name|bar
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|tabPos
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|Widget10052
class|class
name|Widget10052
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|Widget10052
name|Widget10052
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|moved
argument_list|(
literal|false
argument_list|)
block|{ }
DECL|function|moveEvent
name|void
name|moveEvent
parameter_list|(
name|QMoveEvent
modifier|*
name|e
parameter_list|)
block|{
name|moved
operator|=
name|e
operator|->
name|oldPos
argument_list|()
operator|!=
name|e
operator|->
name|pos
argument_list|()
expr_stmt|;
name|QWidget
operator|::
name|moveEvent
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
DECL|member|moved
name|bool
name|moved
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|taskQTBUG_10052_widgetLayoutWhenMoving
name|void
name|tst_QTabBar
operator|::
name|taskQTBUG_10052_widgetLayoutWhenMoving
parameter_list|()
block|{
name|QTabBar
name|tabBar
decl_stmt|;
name|tabBar
operator|.
name|insertTab
argument_list|(
literal|0
argument_list|,
literal|"My first tab"
argument_list|)
expr_stmt|;
name|Widget10052
name|w1
argument_list|(
operator|&
name|tabBar
argument_list|)
decl_stmt|;
name|tabBar
operator|.
name|setTabButton
argument_list|(
literal|0
argument_list|,
name|QTabBar
operator|::
name|RightSide
argument_list|,
operator|&
name|w1
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|insertTab
argument_list|(
literal|1
argument_list|,
literal|"My other tab"
argument_list|)
expr_stmt|;
name|Widget10052
name|w2
argument_list|(
operator|&
name|tabBar
argument_list|)
decl_stmt|;
name|tabBar
operator|.
name|setTabButton
argument_list|(
literal|1
argument_list|,
name|QTabBar
operator|::
name|RightSide
argument_list|,
operator|&
name|w2
argument_list|)
expr_stmt|;
name|tabBar
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|tabBar
argument_list|)
expr_stmt|;
name|w1
operator|.
name|moved
operator|=
name|w2
operator|.
name|moved
operator|=
literal|false
expr_stmt|;
name|tabBar
operator|.
name|moveTab
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|w1
operator|.
name|moved
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|w2
operator|.
name|moved
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QTabBar
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtabbar.moc"
end_include
end_unit
