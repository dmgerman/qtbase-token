begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<qstandarditemmodel.h>
end_include
begin_include
include|#
directive|include
file|<qitemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<qcolumnview.h>
end_include
begin_include
include|#
directive|include
file|"../../../src/gui/itemviews/qcolumnviewgrip_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|Q_OS_SYMBIAN
end_ifndef
begin_include
include|#
directive|include
file|"../../../src/gui/dialogs/qfilesystemmodel_p.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<qdirmodel.h>
end_include
begin_include
include|#
directive|include
file|<qstringlistmodel.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qitemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<qscrollbar.h>
end_include
begin_include
include|#
directive|include
file|<private/qcolumnview_p.h>
end_include
begin_include
include|#
directive|include
file|"../../shared/util.h"
end_include
begin_comment
comment|//TESTED_CLASS=
end_comment
begin_comment
comment|//TESTED_FILES=
end_comment
begin_define
DECL|macro|ANIMATION_DELAY
define|#
directive|define
name|ANIMATION_DELAY
value|300
end_define
begin_class
DECL|class|tst_QColumnView
class|class
name|tst_QColumnView
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QColumnView
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QColumnView
parameter_list|()
destructor_decl|;
public|public
name|Q_SLOTS
public|:
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|rootIndex
parameter_list|()
function_decl|;
name|void
name|grips
parameter_list|()
function_decl|;
name|void
name|isIndexHidden
parameter_list|()
function_decl|;
name|void
name|indexAt
parameter_list|()
function_decl|;
name|void
name|scrollContentsBy_data
parameter_list|()
function_decl|;
name|void
name|scrollContentsBy
parameter_list|()
function_decl|;
name|void
name|scrollTo_data
parameter_list|()
function_decl|;
name|void
name|scrollTo
parameter_list|()
function_decl|;
name|void
name|moveCursor_data
parameter_list|()
function_decl|;
name|void
name|moveCursor
parameter_list|()
function_decl|;
name|void
name|selectAll
parameter_list|()
function_decl|;
name|void
name|clicked
parameter_list|()
function_decl|;
name|void
name|selectedColumns
parameter_list|()
function_decl|;
name|void
name|setSelection
parameter_list|()
function_decl|;
name|void
name|setSelectionModel
parameter_list|()
function_decl|;
name|void
name|visualRegionForSelection
parameter_list|()
function_decl|;
name|void
name|dynamicModelChanges
parameter_list|()
function_decl|;
comment|// grip
name|void
name|moveGrip_basic
parameter_list|()
function_decl|;
name|void
name|moveGrip_data
parameter_list|()
function_decl|;
name|void
name|moveGrip
parameter_list|()
function_decl|;
name|void
name|doubleClick
parameter_list|()
function_decl|;
name|void
name|gripMoved
parameter_list|()
function_decl|;
name|void
name|preview
parameter_list|()
function_decl|;
name|void
name|swapPreview
parameter_list|()
function_decl|;
name|void
name|sizes
parameter_list|()
function_decl|;
name|void
name|rowDelegate
parameter_list|()
function_decl|;
name|void
name|resize
parameter_list|()
function_decl|;
name|void
name|changeSameColumn
parameter_list|()
function_decl|;
name|void
name|parentCurrentIndex_data
parameter_list|()
function_decl|;
name|void
name|parentCurrentIndex
parameter_list|()
function_decl|;
name|void
name|pullRug_data
parameter_list|()
function_decl|;
name|void
name|pullRug
parameter_list|()
function_decl|;
protected|protected
name|slots
protected|:
name|void
name|setPreviewWidget
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|TreeModel
class|class
name|TreeModel
super|:
specifier|public
name|QStandardItemModel
block|{
public|public:
DECL|function|TreeModel
name|TreeModel
parameter_list|()
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|10
condition|;
operator|++
name|j
control|)
block|{
name|QStandardItem
modifier|*
name|parentItem
init|=
name|invisibleRootItem
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|parentItem
operator|->
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|QStandardItem
modifier|*
name|item2
init|=
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|parentItem
operator|->
name|appendRow
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|item2
operator|->
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"item %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|parentItem
operator|->
name|appendRow
argument_list|(
operator|new
name|QStandardItem
argument_list|(
name|QString
argument_list|(
literal|"file %0"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|parentItem
operator|=
name|item
expr_stmt|;
block|}
block|}
block|}
DECL|function|firstLevel
specifier|inline
name|QModelIndex
name|firstLevel
parameter_list|()
block|{
return|return
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
return|;
block|}
DECL|function|secondLevel
specifier|inline
name|QModelIndex
name|secondLevel
parameter_list|()
block|{
return|return
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|firstLevel
argument_list|()
argument_list|)
return|;
block|}
DECL|function|thirdLevel
specifier|inline
name|QModelIndex
name|thirdLevel
parameter_list|()
block|{
return|return
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|secondLevel
argument_list|()
argument_list|)
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|ColumnView
class|class
name|ColumnView
super|:
specifier|public
name|QColumnView
block|{
public|public:
DECL|function|ColumnView
name|ColumnView
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QColumnView
argument_list|(
name|parent
argument_list|)
block|{}
DECL|member|createdColumns
name|QList
argument_list|<
name|QPointer
argument_list|<
name|QAbstractItemView
argument_list|>
argument_list|>
name|createdColumns
decl_stmt|;
DECL|function|ScrollContentsBy
name|void
name|ScrollContentsBy
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|scrollContentsBy
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|HorizontalOffset
name|int
name|HorizontalOffset
parameter_list|()
specifier|const
block|{
return|return
name|horizontalOffset
argument_list|()
return|;
block|}
DECL|function|emitClicked
name|void
name|emitClicked
parameter_list|()
block|{
emit|emit
name|clicked
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
emit|;
block|}
DECL|enum|PublicCursorAction
enum|enum
name|PublicCursorAction
block|{
DECL|enumerator|MoveUp
name|MoveUp
init|=
name|QAbstractItemView
operator|::
name|MoveUp
block|,
DECL|enumerator|MoveDown
name|MoveDown
init|=
name|QAbstractItemView
operator|::
name|MoveDown
block|,
DECL|enumerator|MoveLeft
name|MoveLeft
init|=
name|QAbstractItemView
operator|::
name|MoveLeft
block|,
DECL|enumerator|MoveRight
name|MoveRight
init|=
name|QAbstractItemView
operator|::
name|MoveRight
block|,
DECL|enumerator|MoveHome
name|MoveHome
init|=
name|QAbstractItemView
operator|::
name|MoveHome
block|,
DECL|enumerator|MoveEnd
name|MoveEnd
init|=
name|QAbstractItemView
operator|::
name|MoveEnd
block|,
DECL|enumerator|MovePageUp
name|MovePageUp
init|=
name|QAbstractItemView
operator|::
name|MovePageUp
block|,
DECL|enumerator|MovePageDown
name|MovePageDown
init|=
name|QAbstractItemView
operator|::
name|MovePageDown
block|,
DECL|enumerator|MoveNext
name|MoveNext
init|=
name|QAbstractItemView
operator|::
name|MoveNext
block|,
DECL|enumerator|MovePrevious
name|MovePrevious
init|=
name|QAbstractItemView
operator|::
name|MovePrevious
block|}
enum|;
DECL|function|MoveCursor
specifier|inline
name|QModelIndex
name|MoveCursor
parameter_list|(
name|PublicCursorAction
name|ca
parameter_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|kbm
parameter_list|)
block|{
return|return
name|QColumnView
operator|::
name|moveCursor
argument_list|(
operator|(
name|CursorAction
operator|)
name|ca
argument_list|,
name|kbm
argument_list|)
return|;
block|}
DECL|function|IsIndexHidden
name|bool
name|IsIndexHidden
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
return|return
name|isIndexHidden
argument_list|(
name|index
argument_list|)
return|;
block|}
DECL|function|setSelection
name|void
name|setSelection
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|QItemSelectionModel
operator|::
name|SelectionFlags
name|command
parameter_list|)
block|{
name|QColumnView
operator|::
name|setSelection
argument_list|(
name|rect
argument_list|,
name|command
argument_list|)
expr_stmt|;
block|}
DECL|function|visualRegionForSelection
name|QRegion
name|visualRegionForSelection
parameter_list|(
name|QItemSelection
name|selection
parameter_list|)
block|{
return|return
name|QColumnView
operator|::
name|visualRegionForSelection
argument_list|(
name|selection
argument_list|)
return|;
block|}
protected|protected:
DECL|function|createColumn
name|QAbstractItemView
modifier|*
name|createColumn
parameter_list|(
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
block|{
name|QAbstractItemView
modifier|*
name|view
init|=
name|QColumnView
operator|::
name|createColumn
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|QPointer
argument_list|<
name|QAbstractItemView
argument_list|>
name|savedView
init|=
name|view
decl_stmt|;
name|createdColumns
operator|.
name|append
argument_list|(
name|savedView
argument_list|)
expr_stmt|;
return|return
name|view
return|;
block|}
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QColumnView
name|tst_QColumnView
operator|::
name|tst_QColumnView
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QColumnView
name|tst_QColumnView
operator|::
name|~
name|tst_QColumnView
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|init
name|void
name|tst_QColumnView
operator|::
name|init
parameter_list|()
block|{
name|qApp
operator|->
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|LeftToRight
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_WINCE
comment|//disable magic for WindowsCE
name|qApp
operator|->
name|setAutoMaximizeThreshold
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QColumnView
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|rootIndex
name|void
name|tst_QColumnView
operator|::
name|rootIndex
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
comment|// no model
name|view
operator|.
name|setRootIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|// A top level index
name|QModelIndex
name|drive
init|=
name|model
operator|.
name|firstLevel
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|visualRect
argument_list|(
name|drive
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rootIndex
argument_list|()
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|visualRect
argument_list|(
name|drive
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// A item under the rootIndex exists
name|QModelIndex
name|home
init|=
name|model
operator|.
name|thirdLevel
argument_list|()
decl_stmt|;
name|QModelIndex
name|homeFile
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|home
argument_list|)
operator|-
literal|1
operator|&&
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|homeFile
argument_list|)
condition|)
name|homeFile
operator|=
name|model
operator|.
name|index
argument_list|(
operator|++
name|i
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rootIndex
argument_list|()
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|visualRect
argument_list|(
name|drive
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|visualRect
argument_list|(
name|home
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|homeFile
operator|.
name|isValid
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|view
operator|.
name|visualRect
argument_list|(
name|homeFile
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|// set root when there already is one and everything should still be ok
name|view
operator|.
name|setRootIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|homeFile
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|homeFile
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|rootIndex
argument_list|()
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|visualRect
argument_list|(
name|drive
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|view
operator|.
name|visualRect
argument_list|(
name|home
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|homeFile
operator|.
name|isValid
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|view
operator|.
name|visualRect
argument_list|(
name|homeFile
argument_list|)
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
comment|//
name|homeFile
operator|=
name|model
operator|.
name|thirdLevel
argument_list|()
expr_stmt|;
name|home
operator|=
name|homeFile
operator|.
name|parent
argument_list|()
expr_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|homeFile
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|i
operator|=
literal|0
expr_stmt|;
name|QModelIndex
name|two
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|homeFile
argument_list|)
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|homeFile
argument_list|)
operator|-
literal|1
operator|&&
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|two
argument_list|)
condition|)
name|two
operator|=
name|model
operator|.
name|index
argument_list|(
operator|++
name|i
argument_list|,
literal|0
argument_list|,
name|homeFile
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|two
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|two
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|two
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|homeFile
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|grips
name|void
name|tst_QColumnView
operator|::
name|grips
parameter_list|()
block|{
name|QColumnView
name|view
decl_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|resizeGripsVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setResizeGripsVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|resizeGripsVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QObjectList
name|list
init|=
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|children
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|QAbstractItemView
modifier|*
name|view
init|=
name|qobject_cast
argument_list|<
name|QAbstractItemView
operator|*
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
name|QVERIFY
argument_list|(
name|view
operator|->
name|cornerWidget
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
name|view
operator|.
name|setResizeGripsVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|resizeGripsVisible
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|{
specifier|const
name|QObjectList
name|list
init|=
name|view
operator|.
name|viewport
argument_list|()
operator|->
name|children
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|QAbstractItemView
modifier|*
name|view
init|=
name|qobject_cast
argument_list|<
name|QAbstractItemView
operator|*
argument_list|>
argument_list|(
name|list
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
if|if
condition|(
name|view
operator|->
name|isVisible
argument_list|()
condition|)
name|QVERIFY
argument_list|(
name|view
operator|->
name|cornerWidget
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|view
operator|.
name|setResizeGripsVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|resizeGripsVisible
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isIndexHidden
name|void
name|tst_QColumnView
operator|::
name|isIndexHidden
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|QModelIndex
name|idx
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|IsIndexHidden
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|IsIndexHidden
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|indexAt
name|void
name|tst_QColumnView
operator|::
name|indexAt
parameter_list|()
block|{
name|QColumnView
name|view
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|QModelIndex
name|homeFile
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|homeFile
operator|.
name|isValid
argument_list|()
condition|)
return|return;
name|view
operator|.
name|setRootIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QRect
name|rect
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|rect
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|=
name|view
operator|.
name|visualRect
argument_list|(
name|homeFile
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|child
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|home
argument_list|)
condition|;
operator|++
name|i
control|)
block|{
name|child
operator|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|rect
operator|=
name|view
operator|.
name|visualRect
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|>
literal|0
condition|)
name|QVERIFY
argument_list|(
name|rect
operator|.
name|top
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|indexAt
argument_list|(
name|rect
operator|.
name|center
argument_list|()
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|select
argument_list|(
name|child
argument_list|,
name|QItemSelectionModel
operator|::
name|SelectCurrent
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|// test that the second row doesn't start at 0
if|if
condition|(
name|model
operator|.
name|rowCount
argument_list|(
name|child
argument_list|)
operator|>
literal|0
condition|)
block|{
name|child
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|child
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|rect
operator|=
name|view
operator|.
name|visualRect
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|rect
operator|.
name|left
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|indexAt
argument_list|(
name|rect
operator|.
name|center
argument_list|()
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
end_function
begin_function
DECL|function|scrollContentsBy_data
name|void
name|tst_QColumnView
operator|::
name|scrollContentsBy_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"reverse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"reverse"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|scrollContentsBy
name|void
name|tst_QColumnView
operator|::
name|scrollContentsBy
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|reverse
argument_list|)
expr_stmt|;
if|if
condition|(
name|reverse
condition|)
name|qApp
operator|->
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|ColumnView
name|view
decl_stmt|;
name|view
operator|.
name|ScrollContentsBy
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|view
operator|.
name|ScrollContentsBy
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|ScrollContentsBy
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|thirdLevel
argument_list|()
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|view
operator|.
name|ScrollContentsBy
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|scrollTo_data
name|void
name|tst_QColumnView
operator|::
name|scrollTo_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"reverse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"giveFocus"
argument_list|)
expr_stmt|;
comment|/// ### add test later for giveFocus == true
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"reverse"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|scrollTo
name|void
name|tst_QColumnView
operator|::
name|scrollTo
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|reverse
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|giveFocus
argument_list|)
expr_stmt|;
if|if
condition|(
name|reverse
condition|)
name|qApp
operator|->
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|ColumnView
name|view
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|EnsureVisible
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|QModelIndex
argument_list|()
argument_list|,
name|QAbstractItemView
operator|::
name|EnsureVisible
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
decl_stmt|;
name|home
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|home
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|home
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|home
argument_list|,
name|QAbstractItemView
operator|::
name|EnsureVisible
argument_list|)
expr_stmt|;
name|QModelIndex
name|homeFile
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
decl_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QModelIndex
name|index
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
decl_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|index
argument_list|,
name|QAbstractItemView
operator|::
name|EnsureVisible
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// Embedded requires that at least one widget have focus
name|QWidget
name|w
decl_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
name|giveFocus
condition|)
name|view
operator|.
name|setFocus
argument_list|(
name|Qt
operator|::
name|OtherFocusReason
argument_list|)
expr_stmt|;
else|else
name|view
operator|.
name|clearFocus
argument_list|()
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|hasFocus
argument_list|()
argument_list|,
name|giveFocus
argument_list|)
expr_stmt|;
comment|// scroll to the right
name|int
name|level
init|=
literal|0
decl_stmt|;
name|int
name|last
init|=
name|view
operator|.
name|HorizontalOffset
argument_list|()
decl_stmt|;
while|while
condition|(
name|model
operator|.
name|hasChildren
argument_list|(
name|index
argument_list|)
operator|&&
name|level
operator|<
literal|5
condition|)
block|{
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|index
argument_list|,
name|QAbstractItemView
operator|::
name|EnsureVisible
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|index
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|level
operator|++
expr_stmt|;
if|if
condition|(
name|level
operator|>=
literal|2
condition|)
block|{
if|if
condition|(
operator|!
name|reverse
condition|)
block|{
name|QTRY_VERIFY
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
operator|<
literal|0
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|last
operator|>
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QTRY_VERIFY
argument_list|(
name|view
operator|.
name|HorizontalOffset
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QTRY_VERIFY
argument_list|(
name|last
operator|<
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|last
operator|=
name|view
operator|.
name|HorizontalOffset
argument_list|()
expr_stmt|;
block|}
comment|// scroll to the left
name|int
name|start
init|=
name|level
decl_stmt|;
while|while
condition|(
name|index
operator|.
name|parent
argument_list|()
operator|.
name|isValid
argument_list|()
operator|&&
name|index
operator|!=
name|view
operator|.
name|rootIndex
argument_list|()
condition|)
block|{
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|index
argument_list|,
name|QAbstractItemView
operator|::
name|EnsureVisible
argument_list|)
expr_stmt|;
name|index
operator|=
name|index
operator|.
name|parent
argument_list|()
expr_stmt|;
if|if
condition|(
name|start
operator|!=
name|level
condition|)
block|{
if|if
condition|(
operator|!
name|reverse
condition|)
name|QTRY_VERIFY
argument_list|(
name|last
operator|<
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|QTRY_VERIFY
argument_list|(
name|last
operator|>
name|view
operator|.
name|HorizontalOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|level
operator|--
expr_stmt|;
name|last
operator|=
name|view
operator|.
name|HorizontalOffset
argument_list|()
expr_stmt|;
block|}
comment|// It shouldn't automatically steal focus if it doesn't have it
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|hasFocus
argument_list|()
argument_list|,
name|giveFocus
argument_list|)
expr_stmt|;
comment|// Try scrolling to something that is above the root index
name|home
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QModelIndex
name|temp
init|=
name|model
operator|.
name|index
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
decl_stmt|;
name|home
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|home
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|setRootIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|view
operator|.
name|scrollTo
argument_list|(
name|temp
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveCursor_data
name|void
name|tst_QColumnView
operator|::
name|moveCursor_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"reverse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"reverse"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveCursor
name|void
name|tst_QColumnView
operator|::
name|moveCursor
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|reverse
argument_list|)
expr_stmt|;
if|if
condition|(
name|reverse
condition|)
name|qApp
operator|->
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|ColumnView
name|view
decl_stmt|;
comment|// don't crash
name|view
operator|.
name|MoveCursor
argument_list|(
name|ColumnView
operator|::
name|MoveUp
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
comment|// don't do anything
name|QCOMPARE
argument_list|(
name|view
operator|.
name|MoveCursor
argument_list|(
name|ColumnView
operator|::
name|MoveEnd
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|QModelIndex
name|ci
init|=
name|view
operator|.
name|currentIndex
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|MoveCursor
argument_list|(
name|ColumnView
operator|::
name|MoveUp
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|MoveCursor
argument_list|(
name|ColumnView
operator|::
name|MoveDown
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
comment|// left at root
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ColumnView
operator|::
name|PublicCursorAction
name|action
init|=
name|reverse
condition|?
name|ColumnView
operator|::
name|MoveRight
else|:
name|ColumnView
operator|::
name|MoveLeft
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|MoveCursor
argument_list|(
name|action
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// left shouldn't move up
name|int
name|i
init|=
literal|0
decl_stmt|;
name|ci
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
while|while
condition|(
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|()
operator|-
literal|1
operator|&&
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|ci
argument_list|)
condition|)
name|ci
operator|=
name|model
operator|.
name|index
argument_list|(
operator|++
name|i
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|hasChildren
argument_list|(
name|ci
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|action
operator|=
name|reverse
condition|?
name|ColumnView
operator|::
name|MoveRight
else|:
name|ColumnView
operator|::
name|MoveLeft
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|MoveCursor
argument_list|(
name|action
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
argument_list|,
name|ci
argument_list|)
expr_stmt|;
comment|// now move to the left (i.e. move over one column)
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|MoveCursor
argument_list|(
name|action
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
argument_list|,
name|home
operator|.
name|parent
argument_list|()
argument_list|)
expr_stmt|;
comment|// right
name|action
operator|=
name|reverse
condition|?
name|ColumnView
operator|::
name|MoveLeft
else|:
name|ColumnView
operator|::
name|MoveRight
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|QModelIndex
name|mc
init|=
name|view
operator|.
name|MoveCursor
argument_list|(
name|action
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|mc
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|ci
argument_list|)
argument_list|)
expr_stmt|;
comment|// next one should move down
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|ci
argument_list|)
decl_stmt|;
while|while
condition|(
name|model
operator|.
name|hasChildren
argument_list|(
name|idx
argument_list|)
operator|&&
name|model
operator|.
name|rowCount
argument_list|(
name|ci
argument_list|)
operator|>
name|idx
operator|.
name|row
argument_list|()
operator|+
literal|1
condition|)
name|idx
operator|=
name|idx
operator|.
name|sibling
argument_list|(
name|idx
operator|.
name|row
argument_list|()
operator|+
literal|1
argument_list|,
name|idx
operator|.
name|column
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|mc
operator|=
name|view
operator|.
name|MoveCursor
argument_list|(
name|action
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mc
argument_list|,
name|idx
operator|.
name|sibling
argument_list|(
name|idx
operator|.
name|row
argument_list|()
operator|+
literal|1
argument_list|,
name|idx
operator|.
name|column
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectAll
name|void
name|tst_QColumnView
operator|::
name|selectAll
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|QModelIndex
name|file
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|home
argument_list|)
condition|;
operator|++
name|i
control|)
if|if
condition|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
argument_list|)
condition|)
block|{
name|file
operator|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
break|break;
block|}
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|view
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|count
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clicked
name|void
name|tst_QColumnView
operator|::
name|clicked
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|800
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|home
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|QModelIndex
name|parent
init|=
name|home
operator|.
name|parent
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|parent
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|QModelIndex
argument_list|>
argument_list|(
literal|"QModelIndex"
argument_list|)
expr_stmt|;
name|QSignalSpy
name|clickedSpy
argument_list|(
operator|&
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QPoint
name|localPoint
init|=
name|view
operator|.
name|visualRect
argument_list|(
name|home
argument_list|)
operator|.
name|center
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mouseClick
argument_list|(
name|view
operator|.
name|viewport
argument_list|()
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|localPoint
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|clickedSpy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
if|if
condition|(
sizeof|sizeof
argument_list|(
name|qreal
argument_list|)
operator|!=
sizeof|sizeof
argument_list|(
name|double
argument_list|)
condition|)
block|{
name|QSKIP
argument_list|(
literal|"Skipped due to rounding errors"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|.
name|createdColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QAbstractItemView
modifier|*
name|column
init|=
name|view
operator|.
name|createdColumns
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|column
operator|&&
name|column
operator|->
name|selectionModel
argument_list|()
operator|&&
operator|(
name|column
operator|->
name|rootIndex
argument_list|()
operator|==
name|home
operator|)
condition|)
name|QVERIFY
argument_list|(
name|column
operator|->
name|selectionModel
argument_list|()
operator|->
name|selectedIndexes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|selectedColumns
name|void
name|tst_QColumnView
operator|::
name|selectedColumns
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|800
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|.
name|createdColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QAbstractItemView
modifier|*
name|column
init|=
name|view
operator|.
name|createdColumns
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|column
condition|)
continue|continue;
if|if
condition|(
operator|!
name|column
operator|->
name|rootIndex
argument_list|()
operator|.
name|isValid
argument_list|()
operator|||
name|column
operator|->
name|rootIndex
argument_list|()
operator|==
name|home
condition|)
continue|continue;
name|QTRY_VERIFY
argument_list|(
name|column
operator|->
name|currentIndex
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setSelection
name|void
name|tst_QColumnView
operator|::
name|setSelection
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
comment|// shouldn't do anything, it falls to the columns to handle this
name|QRect
name|r
decl_stmt|;
name|view
operator|.
name|setSelection
argument_list|(
name|r
argument_list|,
name|QItemSelectionModel
operator|::
name|NoUpdate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setSelectionModel
name|void
name|tst_QColumnView
operator|::
name|setSelectionModel
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|QItemSelectionModel
modifier|*
name|selectionModel
init|=
operator|new
name|QItemSelectionModel
argument_list|(
operator|&
name|model
argument_list|)
decl_stmt|;
name|view
operator|.
name|setSelectionModel
argument_list|(
name|selectionModel
argument_list|)
expr_stmt|;
name|bool
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|.
name|createdColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|view
operator|.
name|createdColumns
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|->
name|selectionModel
argument_list|()
operator|==
name|selectionModel
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
name|QVERIFY
argument_list|(
name|found
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visualRegionForSelection
name|void
name|tst_QColumnView
operator|::
name|visualRegionForSelection
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|QItemSelection
name|emptyItemSelection
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QRegion
argument_list|()
argument_list|,
name|view
operator|.
name|visualRegionForSelection
argument_list|(
name|emptyItemSelection
argument_list|)
argument_list|)
expr_stmt|;
comment|// a region that isn't empty
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
comment|// On Windows CE the home directory might actually be empty.
ifndef|#
directive|ifndef
name|Q_OS_WINCE
name|QString
name|location
init|=
name|QDir
operator|::
name|homePath
argument_list|()
decl_stmt|;
else|#
directive|else
name|QString
name|location
init|=
name|QLatin1String
argument_list|(
literal|"/Windows"
argument_list|)
decl_stmt|;
endif|#
directive|endif
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|location
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|home
argument_list|)
operator|>
literal|1
argument_list|)
expr_stmt|;
name|QItemSelection
name|itemSelection
argument_list|(
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
argument_list|,
name|model
operator|.
name|index
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|home
argument_list|)
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QRegion
argument_list|()
operator|!=
name|view
operator|.
name|visualRegionForSelection
argument_list|(
name|itemSelection
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveGrip_basic
name|void
name|tst_QColumnView
operator|::
name|moveGrip_basic
parameter_list|()
block|{
name|QColumnView
name|view
decl_stmt|;
name|QColumnViewGrip
modifier|*
name|grip
init|=
operator|new
name|QColumnViewGrip
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|grip
argument_list|,
name|SIGNAL
argument_list|(
name|gripMoved
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCornerWidget
argument_list|(
name|grip
argument_list|)
expr_stmt|;
name|int
name|oldX
init|=
name|view
operator|.
name|width
argument_list|()
decl_stmt|;
name|grip
operator|->
name|moveGrip
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|oldX
operator|+
literal|10
argument_list|,
name|view
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|grip
operator|->
name|moveGrip
argument_list|(
operator|-
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|oldX
argument_list|,
name|view
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|grip
operator|->
name|moveGrip
argument_list|(
operator|-
literal|800
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|width
argument_list|()
operator|==
literal|0
operator|||
name|view
operator|.
name|width
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|grip
operator|->
name|moveGrip
argument_list|(
literal|800
argument_list|)
expr_stmt|;
name|view
operator|.
name|setMinimumWidth
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|grip
operator|->
name|moveGrip
argument_list|(
operator|-
literal|800
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|width
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveGrip_data
name|void
name|tst_QColumnView
operator|::
name|moveGrip_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"reverse"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"normal"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"reverse"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveGrip
name|void
name|tst_QColumnView
operator|::
name|moveGrip
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|reverse
argument_list|)
expr_stmt|;
if|if
condition|(
name|reverse
condition|)
name|qApp
operator|->
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|RightToLeft
argument_list|)
expr_stmt|;
name|QWidget
name|topLevel
decl_stmt|;
name|ColumnView
name|view
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|thirdLevel
argument_list|()
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|640
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|int
name|columnNum
init|=
name|view
operator|.
name|createdColumns
operator|.
name|count
argument_list|()
operator|-
literal|2
decl_stmt|;
name|QVERIFY
argument_list|(
name|columnNum
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|QObjectList
name|list
init|=
name|view
operator|.
name|createdColumns
index|[
name|columnNum
index|]
operator|->
name|children
argument_list|()
decl_stmt|;
name|QColumnViewGrip
modifier|*
name|grip
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|(
name|grip
operator|=
name|qobject_cast
argument_list|<
name|QColumnViewGrip
operator|*
argument_list|>
argument_list|(
name|list
index|[
name|i
index|]
argument_list|)
operator|)
condition|)
block|{
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|grip
condition|)
return|return;
name|QAbstractItemView
modifier|*
name|column
init|=
name|qobject_cast
argument_list|<
name|QAbstractItemView
operator|*
argument_list|>
argument_list|(
name|grip
operator|->
name|parent
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|oldX
init|=
name|column
operator|->
name|width
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidths
argument_list|()
operator|.
name|value
argument_list|(
name|columnNum
argument_list|)
argument_list|,
name|oldX
argument_list|)
expr_stmt|;
name|grip
operator|->
name|moveGrip
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidths
argument_list|()
operator|.
name|value
argument_list|(
name|columnNum
argument_list|)
argument_list|,
operator|(
name|oldX
operator|+
operator|(
name|reverse
condition|?
operator|-
literal|10
else|:
literal|10
operator|)
operator|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|doubleClick
name|void
name|tst_QColumnView
operator|::
name|doubleClick
parameter_list|()
block|{
name|QColumnView
name|view
decl_stmt|;
name|QColumnViewGrip
modifier|*
name|grip
init|=
operator|new
name|QColumnViewGrip
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|grip
argument_list|,
name|SIGNAL
argument_list|(
name|gripMoved
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCornerWidget
argument_list|(
name|grip
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|width
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|mouseDClick
argument_list|(
name|grip
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|width
argument_list|()
argument_list|,
name|view
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|gripMoved
name|void
name|tst_QColumnView
operator|::
name|gripMoved
parameter_list|()
block|{
name|QColumnView
name|view
decl_stmt|;
name|QColumnViewGrip
modifier|*
name|grip
init|=
operator|new
name|QColumnViewGrip
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|QSignalSpy
name|spy
argument_list|(
name|grip
argument_list|,
name|SIGNAL
argument_list|(
name|gripMoved
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCornerWidget
argument_list|(
name|grip
argument_list|)
expr_stmt|;
name|view
operator|.
name|move
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|oldWidth
init|=
name|view
operator|.
name|width
argument_list|()
decl_stmt|;
name|QTest
operator|::
name|mousePress
argument_list|(
name|grip
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
literal|0
argument_list|,
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|//QTest::mouseMove(grip, QPoint(grip->globalX()+50, y));
name|QPoint
name|posNew
init|=
name|QPoint
argument_list|(
name|grip
operator|->
name|mapToGlobal
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|x
argument_list|()
operator|+
literal|65
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QMouseEvent
modifier|*
name|event
init|=
operator|new
name|QMouseEvent
argument_list|(
name|QEvent
operator|::
name|MouseMove
argument_list|,
name|posNew
argument_list|,
name|posNew
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|,
name|Qt
operator|::
name|NoModifier
argument_list|)
decl_stmt|;
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
name|grip
argument_list|,
name|event
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|mouseRelease
argument_list|(
name|grip
argument_list|,
name|Qt
operator|::
name|LeftButton
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|width
argument_list|()
argument_list|,
name|oldWidth
operator|+
literal|65
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|preview
name|void
name|tst_QColumnView
operator|::
name|preview
parameter_list|()
block|{
name|QColumnView
name|view
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|previewWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|previewWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|home
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|hasChildren
argument_list|(
name|home
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|previewWidget
argument_list|()
argument_list|,
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QModelIndex
name|file
decl_stmt|;
name|QVERIFY
argument_list|(
name|model
operator|.
name|rowCount
argument_list|(
name|home
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|home
argument_list|)
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
operator|!
name|model
operator|.
name|hasChildren
argument_list|(
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
argument_list|)
condition|)
block|{
name|file
operator|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|home
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|QVERIFY
argument_list|(
name|file
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|previewWidget
argument_list|()
operator|!=
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|previewWidget
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|view
operator|.
name|setPreviewWidget
argument_list|(
name|previewWidget
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|previewWidget
argument_list|()
argument_list|,
name|previewWidget
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|previewWidget
operator|->
name|parent
argument_list|()
operator|!=
operator|(
operator|(
name|QWidget
operator|*
operator|)
operator|&
name|view
operator|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
comment|// previewWidget should be marked for deletion
name|QWidget
modifier|*
name|previewWidget2
init|=
operator|new
name|QWidget
argument_list|(
operator|&
name|view
argument_list|)
decl_stmt|;
name|view
operator|.
name|setPreviewWidget
argument_list|(
name|previewWidget2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|previewWidget
argument_list|()
argument_list|,
name|previewWidget2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|swapPreview
name|void
name|tst_QColumnView
operator|::
name|swapPreview
parameter_list|()
block|{
comment|// swap the preview widget in updatePreviewWidget
name|QColumnView
name|view
decl_stmt|;
name|QStringList
name|sl
decl_stmt|;
name|sl
operator|<<
name|QLatin1String
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|QStringListModel
name|model
argument_list|(
name|sl
argument_list|)
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|view
argument_list|,
name|SIGNAL
argument_list|(
name|updatePreviewWidget
argument_list|(
specifier|const
name|QModelIndex
operator|&
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setPreviewWidget
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|view
operator|.
name|indexAt
argument_list|(
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setPreviewWidget
name|void
name|tst_QColumnView
operator|::
name|setPreviewWidget
parameter_list|()
block|{
operator|(
operator|(
name|QColumnView
operator|*
operator|)
name|sender
argument_list|()
operator|)
operator|->
name|setPreviewWidget
argument_list|(
operator|new
name|QWidget
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizes
name|void
name|tst_QColumnView
operator|::
name|sizes
parameter_list|()
block|{
name|QColumnView
name|view
decl_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidths
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|newSizes
decl_stmt|;
name|newSizes
operator|<<
literal|10
operator|<<
literal|4
operator|<<
literal|50
operator|<<
literal|6
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|visibleSizes
decl_stmt|;
name|view
operator|.
name|setColumnWidths
argument_list|(
name|newSizes
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|view
operator|.
name|columnWidths
argument_list|()
argument_list|,
name|visibleSizes
argument_list|)
expr_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|postSizes
init|=
name|view
operator|.
name|columnWidths
argument_list|()
operator|.
name|mid
argument_list|(
literal|0
argument_list|,
name|newSizes
operator|.
name|count
argument_list|()
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|postSizes
argument_list|,
name|newSizes
operator|.
name|mid
argument_list|(
literal|0
argument_list|,
name|postSizes
operator|.
name|count
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|columnWidths
argument_list|()
operator|.
name|count
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|smallerSizes
decl_stmt|;
name|smallerSizes
operator|<<
literal|6
expr_stmt|;
name|view
operator|.
name|setColumnWidths
argument_list|(
name|smallerSizes
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|int
argument_list|>
name|expectedSizes
init|=
name|newSizes
decl_stmt|;
name|expectedSizes
index|[
literal|0
index|]
operator|=
literal|6
expr_stmt|;
name|postSizes
operator|=
name|view
operator|.
name|columnWidths
argument_list|()
operator|.
name|mid
argument_list|(
literal|0
argument_list|,
name|newSizes
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|postSizes
argument_list|,
name|expectedSizes
operator|.
name|mid
argument_list|(
literal|0
argument_list|,
name|postSizes
operator|.
name|count
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rowDelegate
name|void
name|tst_QColumnView
operator|::
name|rowDelegate
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|QItemDelegate
modifier|*
name|d
init|=
operator|new
name|QItemDelegate
decl_stmt|;
name|view
operator|.
name|setItemDelegateForRow
argument_list|(
literal|3
argument_list|,
name|d
argument_list|)
expr_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|view
operator|.
name|createdColumns
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QAbstractItemView
modifier|*
name|column
init|=
name|view
operator|.
name|createdColumns
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|column
operator|->
name|itemDelegateForRow
argument_list|(
literal|3
argument_list|)
argument_list|,
operator|(
name|QAbstractItemDelegate
operator|*
operator|)
name|d
argument_list|)
expr_stmt|;
block|}
operator|delete
name|d
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resize
name|void
name|tst_QColumnView
operator|::
name|resize
parameter_list|()
block|{
name|QWidget
name|topLevel
decl_stmt|;
name|ColumnView
name|view
argument_list|(
operator|&
name|topLevel
argument_list|)
decl_stmt|;
name|QDirModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|topLevel
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|index
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
operator|.
name|parent
argument_list|()
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|200
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
operator|*
literal|10
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|view
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
operator|<=
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|changeSameColumn
name|void
name|tst_QColumnView
operator|::
name|changeSameColumn
parameter_list|()
block|{
name|ColumnView
name|view
decl_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|second
decl_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|secondLevel
argument_list|()
decl_stmt|;
comment|//index(QDir::homePath());
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|model
operator|.
name|rowCount
argument_list|(
name|home
operator|.
name|parent
argument_list|()
argument_list|)
condition|;
operator|++
name|i
control|)
block|{
name|QModelIndex
name|idx
init|=
name|model
operator|.
name|index
argument_list|(
name|i
argument_list|,
literal|0
argument_list|,
name|home
operator|.
name|parent
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|model
operator|.
name|hasChildren
argument_list|(
name|idx
argument_list|)
operator|&&
name|idx
operator|!=
name|home
condition|)
block|{
name|second
operator|=
name|idx
expr_stmt|;
break|break;
block|}
block|}
name|QVERIFY
argument_list|(
name|second
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QPointer
argument_list|<
name|QAbstractItemView
argument_list|>
argument_list|>
name|old
init|=
name|view
operator|.
name|createdColumns
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|second
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|old
argument_list|,
name|view
operator|.
name|createdColumns
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parentCurrentIndex_data
name|void
name|tst_QColumnView
operator|::
name|parentCurrentIndex_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"firstRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"secondRow"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"down"
argument_list|)
operator|<<
literal|0
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"up"
argument_list|)
operator|<<
literal|1
operator|<<
literal|0
expr_stmt|;
block|}
end_function
begin_function
DECL|function|parentCurrentIndex
name|void
name|tst_QColumnView
operator|::
name|parentCurrentIndex
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|firstRow
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|secondRow
argument_list|)
expr_stmt|;
name|ColumnView
name|view
decl_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QModelIndex
name|first
decl_stmt|;
name|QModelIndex
name|second
decl_stmt|;
name|QModelIndex
name|third
decl_stmt|;
name|first
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|second
operator|=
name|model
operator|.
name|index
argument_list|(
name|firstRow
argument_list|,
literal|0
argument_list|,
name|first
argument_list|)
expr_stmt|;
name|third
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|second
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|first
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|second
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|third
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|third
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|createdColumns
index|[
literal|0
index|]
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|first
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|createdColumns
index|[
literal|1
index|]
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|second
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|createdColumns
index|[
literal|2
index|]
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|third
argument_list|)
expr_stmt|;
name|first
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|second
operator|=
name|model
operator|.
name|index
argument_list|(
name|secondRow
argument_list|,
literal|0
argument_list|,
name|first
argument_list|)
expr_stmt|;
name|third
operator|=
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|second
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|first
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|second
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|third
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|third
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|createdColumns
index|[
literal|0
index|]
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|first
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|createdColumns
index|[
literal|1
index|]
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|second
argument_list|)
expr_stmt|;
name|QTRY_COMPARE
argument_list|(
name|view
operator|.
name|createdColumns
index|[
literal|2
index|]
operator|->
name|currentIndex
argument_list|()
argument_list|,
name|third
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pullRug_data
name|void
name|tst_QColumnView
operator|::
name|pullRug_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"removeModel"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"model"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"index"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pullRug
name|void
name|tst_QColumnView
operator|::
name|pullRug
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|removeModel
argument_list|)
expr_stmt|;
name|ColumnView
name|view
decl_stmt|;
name|TreeModel
name|model
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|QModelIndex
name|home
init|=
name|model
operator|.
name|thirdLevel
argument_list|()
decl_stmt|;
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|home
argument_list|)
expr_stmt|;
if|if
condition|(
name|removeModel
condition|)
name|view
operator|.
name|setModel
argument_list|(
literal|0
argument_list|)
expr_stmt|;
else|else
name|view
operator|.
name|setCurrentIndex
argument_list|(
name|QModelIndex
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
name|ANIMATION_DELAY
argument_list|)
expr_stmt|;
comment|// don't crash
block|}
end_function
begin_function
DECL|function|dynamicModelChanges
name|void
name|tst_QColumnView
operator|::
name|dynamicModelChanges
parameter_list|()
block|{
struct|struct
name|MyItemDelegate
super|:
specifier|public
name|QItemDelegate
block|{
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
name|paintedIndexes
operator|+=
name|index
expr_stmt|;
name|QItemDelegate
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
specifier|mutable
name|QSet
argument_list|<
name|QModelIndex
argument_list|>
name|paintedIndexes
decl_stmt|;
block|}
name|delegate
struct|;
empty_stmt|;
name|QStandardItemModel
name|model
decl_stmt|;
name|ColumnView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
operator|&
name|model
argument_list|)
expr_stmt|;
name|view
operator|.
name|setItemDelegate
argument_list|(
operator|&
name|delegate
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
operator|new
name|QStandardItem
argument_list|(
name|QLatin1String
argument_list|(
literal|"item"
argument_list|)
argument_list|)
decl_stmt|;
name|model
operator|.
name|appendRow
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|//let the time for painting to occur
name|QCOMPARE
argument_list|(
name|delegate
operator|.
name|paintedIndexes
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
operator|*
name|delegate
operator|.
name|paintedIndexes
operator|.
name|begin
argument_list|()
argument_list|,
name|model
operator|.
name|index
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QColumnView
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qcolumnview.moc"
end_include
end_unit
