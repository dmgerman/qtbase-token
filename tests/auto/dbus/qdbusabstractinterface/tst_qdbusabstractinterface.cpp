begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Copyright (C) 2016 Intel Corporation. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qsharedpointer.h>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtDBus>
end_include
begin_include
include|#
directive|include
file|"interface.h"
end_include
begin_include
include|#
directive|include
file|"pinger_interface.h"
end_include
begin_decl_stmt
DECL|variable|serviceName
specifier|static
specifier|const
name|char
name|serviceName
index|[]
init|=
literal|"org.qtproject.autotests.qpinger"
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|objectPath
specifier|static
specifier|const
name|char
name|objectPath
index|[]
init|=
literal|"/org/qtproject/qpinger"
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|interfaceName
specifier|static
specifier|const
name|char
modifier|*
name|interfaceName
init|=
name|serviceName
decl_stmt|;
end_decl_stmt
begin_typedef
DECL|typedef|Pinger
typedef|typedef
name|QSharedPointer
argument_list|<
name|org
operator|::
name|qtproject
operator|::
name|QtDBus
operator|::
name|Pinger
argument_list|>
name|Pinger
typedef|;
end_typedef
begin_class
DECL|class|tst_QDBusAbstractInterface
class|class
name|tst_QDBusAbstractInterface
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
DECL|member|targetObj
name|Interface
name|targetObj
decl_stmt|;
DECL|member|peerAddress
name|QString
name|peerAddress
decl_stmt|;
DECL|function|getPinger
name|Pinger
name|getPinger
parameter_list|(
name|QString
name|service
init|=
literal|""
parameter_list|,
specifier|const
name|QString
modifier|&
name|path
init|=
literal|"/"
parameter_list|)
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
condition|)
return|return
name|Pinger
argument_list|()
return|;
if|if
condition|(
name|service
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|service
operator|.
name|isNull
argument_list|()
condition|)
name|service
operator|=
name|con
operator|.
name|baseService
argument_list|()
expr_stmt|;
return|return
name|Pinger
argument_list|(
operator|new
name|org
operator|::
name|qtproject
operator|::
name|QtDBus
operator|::
name|Pinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|,
name|con
argument_list|)
argument_list|)
return|;
block|}
DECL|function|getPingerPeer
name|Pinger
name|getPingerPeer
parameter_list|(
specifier|const
name|QString
modifier|&
name|path
init|=
literal|"/"
parameter_list|,
specifier|const
name|QString
modifier|&
name|service
init|=
literal|""
parameter_list|)
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
argument_list|(
literal|"peer"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
condition|)
return|return
name|Pinger
argument_list|()
return|;
return|return
name|Pinger
argument_list|(
operator|new
name|org
operator|::
name|qtproject
operator|::
name|QtDBus
operator|::
name|Pinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|,
name|con
argument_list|)
argument_list|)
return|;
block|}
DECL|function|resetServer
name|void
name|resetServer
parameter_list|()
block|{
name|QDBusMessage
name|req
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"reset"
argument_list|)
decl_stmt|;
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|send
argument_list|(
name|req
argument_list|)
expr_stmt|;
block|}
public|public:
name|tst_QDBusAbstractInterface
parameter_list|()
constructor_decl|;
private|private
name|slots
private|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|cleanupTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
name|void
name|makeVoidCall
parameter_list|()
function_decl|;
name|void
name|makeStringCall
parameter_list|()
function_decl|;
name|void
name|makeComplexCall
parameter_list|()
function_decl|;
name|void
name|makeMultiOutCall
parameter_list|()
function_decl|;
name|void
name|makeVoidCallPeer
parameter_list|()
function_decl|;
name|void
name|makeStringCallPeer
parameter_list|()
function_decl|;
name|void
name|makeComplexCallPeer
parameter_list|()
function_decl|;
name|void
name|makeMultiOutCallPeer
parameter_list|()
function_decl|;
name|void
name|makeAsyncVoidCall
parameter_list|()
function_decl|;
name|void
name|makeAsyncStringCall
parameter_list|()
function_decl|;
name|void
name|makeAsyncComplexCall
parameter_list|()
function_decl|;
name|void
name|makeAsyncMultiOutCall
parameter_list|()
function_decl|;
name|void
name|makeAsyncVoidCallPeer
parameter_list|()
function_decl|;
name|void
name|makeAsyncStringCallPeer
parameter_list|()
function_decl|;
name|void
name|makeAsyncComplexCallPeer
parameter_list|()
function_decl|;
name|void
name|makeAsyncMultiOutCallPeer
parameter_list|()
function_decl|;
name|void
name|callWithTimeout
parameter_list|()
function_decl|;
name|void
name|stringPropRead
parameter_list|()
function_decl|;
name|void
name|stringPropWrite
parameter_list|()
function_decl|;
name|void
name|variantPropRead
parameter_list|()
function_decl|;
name|void
name|variantPropWrite
parameter_list|()
function_decl|;
name|void
name|complexPropRead
parameter_list|()
function_decl|;
name|void
name|complexPropWrite
parameter_list|()
function_decl|;
name|void
name|stringPropReadPeer
parameter_list|()
function_decl|;
name|void
name|stringPropWritePeer
parameter_list|()
function_decl|;
name|void
name|variantPropReadPeer
parameter_list|()
function_decl|;
name|void
name|variantPropWritePeer
parameter_list|()
function_decl|;
name|void
name|complexPropReadPeer
parameter_list|()
function_decl|;
name|void
name|complexPropWritePeer
parameter_list|()
function_decl|;
name|void
name|stringPropDirectRead
parameter_list|()
function_decl|;
name|void
name|stringPropDirectWrite
parameter_list|()
function_decl|;
name|void
name|variantPropDirectRead
parameter_list|()
function_decl|;
name|void
name|variantPropDirectWrite
parameter_list|()
function_decl|;
name|void
name|complexPropDirectRead
parameter_list|()
function_decl|;
name|void
name|complexPropDirectWrite
parameter_list|()
function_decl|;
name|void
name|stringPropDirectReadPeer
parameter_list|()
function_decl|;
name|void
name|stringPropDirectWritePeer
parameter_list|()
function_decl|;
name|void
name|variantPropDirectReadPeer
parameter_list|()
function_decl|;
name|void
name|variantPropDirectWritePeer
parameter_list|()
function_decl|;
name|void
name|complexPropDirectReadPeer
parameter_list|()
function_decl|;
name|void
name|complexPropDirectWritePeer
parameter_list|()
function_decl|;
name|void
name|getVoidSignal_data
parameter_list|()
function_decl|;
name|void
name|getVoidSignal
parameter_list|()
function_decl|;
name|void
name|getStringSignal_data
parameter_list|()
function_decl|;
name|void
name|getStringSignal
parameter_list|()
function_decl|;
name|void
name|getComplexSignal_data
parameter_list|()
function_decl|;
name|void
name|getComplexSignal
parameter_list|()
function_decl|;
name|void
name|getVoidSignalPeer_data
parameter_list|()
function_decl|;
name|void
name|getVoidSignalPeer
parameter_list|()
function_decl|;
name|void
name|getStringSignalPeer_data
parameter_list|()
function_decl|;
name|void
name|getStringSignalPeer
parameter_list|()
function_decl|;
name|void
name|getComplexSignalPeer_data
parameter_list|()
function_decl|;
name|void
name|getComplexSignalPeer
parameter_list|()
function_decl|;
name|void
name|followSignal
parameter_list|()
function_decl|;
name|void
name|connectDisconnect_data
parameter_list|()
function_decl|;
name|void
name|connectDisconnect
parameter_list|()
function_decl|;
name|void
name|connectDisconnectPeer_data
parameter_list|()
function_decl|;
name|void
name|connectDisconnectPeer
parameter_list|()
function_decl|;
name|void
name|createErrors_data
parameter_list|()
function_decl|;
name|void
name|createErrors
parameter_list|()
function_decl|;
name|void
name|createErrorsPeer_data
parameter_list|()
function_decl|;
name|void
name|createErrorsPeer
parameter_list|()
function_decl|;
name|void
name|callErrors_data
parameter_list|()
function_decl|;
name|void
name|callErrors
parameter_list|()
function_decl|;
name|void
name|asyncCallErrors_data
parameter_list|()
function_decl|;
name|void
name|asyncCallErrors
parameter_list|()
function_decl|;
name|void
name|callErrorsPeer_data
parameter_list|()
function_decl|;
name|void
name|callErrorsPeer
parameter_list|()
function_decl|;
name|void
name|asyncCallErrorsPeer_data
parameter_list|()
function_decl|;
name|void
name|asyncCallErrorsPeer
parameter_list|()
function_decl|;
name|void
name|propertyReadErrors_data
parameter_list|()
function_decl|;
name|void
name|propertyReadErrors
parameter_list|()
function_decl|;
name|void
name|propertyWriteErrors_data
parameter_list|()
function_decl|;
name|void
name|propertyWriteErrors
parameter_list|()
function_decl|;
name|void
name|directPropertyReadErrors_data
parameter_list|()
function_decl|;
name|void
name|directPropertyReadErrors
parameter_list|()
function_decl|;
name|void
name|directPropertyWriteErrors_data
parameter_list|()
function_decl|;
name|void
name|directPropertyWriteErrors
parameter_list|()
function_decl|;
name|void
name|propertyReadErrorsPeer_data
parameter_list|()
function_decl|;
name|void
name|propertyReadErrorsPeer
parameter_list|()
function_decl|;
name|void
name|propertyWriteErrorsPeer_data
parameter_list|()
function_decl|;
name|void
name|propertyWriteErrorsPeer
parameter_list|()
function_decl|;
name|void
name|directPropertyReadErrorsPeer_data
parameter_list|()
function_decl|;
name|void
name|directPropertyReadErrorsPeer
parameter_list|()
function_decl|;
name|void
name|directPropertyWriteErrorsPeer_data
parameter_list|()
function_decl|;
name|void
name|directPropertyWriteErrorsPeer
parameter_list|()
function_decl|;
name|void
name|validity_data
parameter_list|()
function_decl|;
name|void
name|validity
parameter_list|()
function_decl|;
private|private:
DECL|member|proc
name|QProcess
name|proc
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|SignalReceiver
class|class
name|SignalReceiver
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|member|callCount
name|int
name|callCount
decl_stmt|;
DECL|function|SignalReceiver
name|SignalReceiver
parameter_list|()
member_init_list|:
name|callCount
argument_list|(
literal|0
argument_list|)
block|{}
public|public
name|slots
public|:
DECL|function|receive
name|void
name|receive
parameter_list|()
block|{
operator|++
name|callCount
expr_stmt|;
block|}
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QDBusAbstractInterface
name|tst_QDBusAbstractInterface
operator|::
name|tst_QDBusAbstractInterface
parameter_list|()
block|{
comment|// register the meta types
name|qDBusRegisterMetaType
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
expr_stmt|;
name|qRegisterMetaType
argument_list|<
name|UnregisteredType
argument_list|>
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QDBusAbstractInterface
operator|::
name|initTestCase
parameter_list|()
block|{
comment|// enable debugging temporarily:
comment|//putenv("QDBUS_DEBUG=1");
comment|// register the object
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|con
operator|.
name|registerObject
argument_list|(
literal|"/"
argument_list|,
operator|&
name|targetObj
argument_list|,
name|QDBusConnection
operator|::
name|ExportScriptableContents
argument_list|)
expr_stmt|;
comment|// verify service isn't registered by something else
comment|// (e.g. a left over qpinger from a previous test run)
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|interface
argument_list|()
operator|->
name|isServiceRegistered
argument_list|(
name|serviceName
argument_list|)
argument_list|)
expr_stmt|;
comment|// start peer server
ifdef|#
directive|ifdef
name|Q_OS_WIN
DECL|macro|EXE
define|#
directive|define
name|EXE
value|".exe"
else|#
directive|else
define|#
directive|define
name|EXE
value|""
endif|#
directive|endif
name|proc
operator|.
name|setProcessChannelMode
argument_list|(
name|QProcess
operator|::
name|ForwardedErrorChannel
argument_list|)
expr_stmt|;
name|proc
operator|.
name|start
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"qpinger/qpinger"
name|EXE
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY2
argument_list|(
name|proc
operator|.
name|waitForStarted
argument_list|()
argument_list|,
name|qPrintable
argument_list|(
name|proc
operator|.
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|proc
operator|.
name|waitForReadyRead
argument_list|()
argument_list|)
expr_stmt|;
comment|// verify service is now registered
name|QTRY_VERIFY
argument_list|(
name|con
operator|.
name|interface
argument_list|()
operator|->
name|isServiceRegistered
argument_list|(
name|serviceName
argument_list|)
argument_list|)
expr_stmt|;
comment|// get peer server address
name|QDBusMessage
name|req
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"address"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|rpl
init|=
name|con
operator|.
name|call
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|rpl
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|)
expr_stmt|;
name|peerAddress
operator|=
name|rpl
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanupTestCase
name|void
name|tst_QDBusAbstractInterface
operator|::
name|cleanupTestCase
parameter_list|()
block|{
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"quit"
argument_list|)
decl_stmt|;
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|call
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|proc
operator|.
name|waitForFinished
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|proc
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QDBusAbstractInterface
operator|::
name|init
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
comment|// connect to peer server
name|QDBusConnection
name|peercon
init|=
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
name|peerAddress
argument_list|,
literal|"peer"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|peercon
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusMessage
name|req2
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"waitForConnected"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|rpl2
init|=
name|con
operator|.
name|call
argument_list|(
name|req2
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|rpl2
operator|.
name|type
argument_list|()
operator|==
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|,
name|rpl2
operator|.
name|errorMessage
argument_list|()
operator|.
name|toLatin1
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QDBusAbstractInterface
operator|::
name|cleanup
parameter_list|()
block|{
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"peer"
argument_list|)
expr_stmt|;
comment|// Reset the object exported by this process
name|targetObj
operator|.
name|m_stringProp
operator|=
name|QString
argument_list|()
expr_stmt|;
name|targetObj
operator|.
name|m_variantProp
operator|=
name|QDBusVariant
argument_list|()
expr_stmt|;
name|targetObj
operator|.
name|m_complexProp
operator|=
name|RegisteredType
argument_list|()
expr_stmt|;
name|QDBusMessage
name|resetCall
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"reset"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|call
argument_list|(
name|resetCall
argument_list|)
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeVoidCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeVoidCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|void
argument_list|>
name|r
init|=
name|p
operator|->
name|voidMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeStringCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeStringCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|stringMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexMethodArgs
specifier|static
name|QHash
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|complexMethodArgs
parameter_list|()
block|{
name|QHash
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|args
decl_stmt|;
name|args
operator|.
name|insert
argument_list|(
literal|"arg1"
argument_list|,
literal|"Hello world"
argument_list|)
expr_stmt|;
name|args
operator|.
name|insert
argument_list|(
literal|"arg2"
argument_list|,
literal|12345
argument_list|)
expr_stmt|;
return|return
name|args
return|;
block|}
end_function
begin_function
DECL|function|makeComplexCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeComplexCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|RegisteredType
argument_list|>
name|r
init|=
name|p
operator|->
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeMultiOutCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeMultiOutCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|int
name|value
decl_stmt|;
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|multiOutMethod
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|expectedValue
decl_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|multiOutMethod
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeVoidCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeVoidCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|void
argument_list|>
name|r
init|=
name|p
operator|->
name|voidMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeStringCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeStringCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|stringMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeComplexCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeComplexCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|RegisteredType
argument_list|>
name|r
init|=
name|p
operator|->
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeMultiOutCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeMultiOutCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|int
name|value
decl_stmt|;
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|multiOutMethod
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|expectedValue
decl_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|multiOutMethod
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncVoidCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncVoidCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|void
argument_list|>
name|r
init|=
name|p
operator|->
name|voidMethod
argument_list|()
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncStringCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncStringCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|stringMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncComplexCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncComplexCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|RegisteredType
argument_list|>
name|r
init|=
name|p
operator|->
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncMultiOutCall
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncMultiOutCall
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|,
name|int
argument_list|>
name|r
init|=
name|p
operator|->
name|multiOutMethod
argument_list|()
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|expectedValue
decl_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|multiOutMethod
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|argumentAt
argument_list|<
literal|1
argument_list|>
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncVoidCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncVoidCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|void
argument_list|>
name|r
init|=
name|p
operator|->
name|voidMethod
argument_list|()
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncStringCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncStringCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|p
operator|->
name|call
argument_list|(
name|QDBus
operator|::
name|BlockWithGui
argument_list|,
name|QLatin1String
argument_list|(
literal|"voidMethod"
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|stringMethod
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncComplexCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncComplexCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|RegisteredType
argument_list|>
name|r
init|=
name|p
operator|->
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|complexMethod
argument_list|(
name|complexMethodArgs
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeAsyncMultiOutCallPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|makeAsyncMultiOutCallPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|,
name|int
argument_list|>
name|r
init|=
name|p
operator|->
name|multiOutMethod
argument_list|()
decl_stmt|;
name|r
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|expectedValue
decl_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|value
argument_list|()
argument_list|,
name|targetObj
operator|.
name|multiOutMethod
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|r
operator|.
name|argumentAt
argument_list|<
literal|1
argument_list|>
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|server_serviceName
specifier|static
specifier|const
name|char
name|server_serviceName
index|[]
init|=
literal|"org.qtproject.autotests.dbusserver"
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|server_objectPath
specifier|static
specifier|const
name|char
name|server_objectPath
index|[]
init|=
literal|"/org/qtproject/server"
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|server_interfaceName
specifier|static
specifier|const
name|char
name|server_interfaceName
index|[]
init|=
literal|"org.qtproject.QtDBus.Pinger"
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|DBusServerThread
class|class
name|DBusServerThread
super|:
specifier|public
name|QThread
block|{
public|public:
DECL|function|DBusServerThread
name|DBusServerThread
parameter_list|()
block|{
name|start
argument_list|()
expr_stmt|;
name|m_ready
operator|.
name|acquire
argument_list|()
expr_stmt|;
block|}
DECL|function|~DBusServerThread
name|~
name|DBusServerThread
parameter_list|()
block|{
name|quit
argument_list|()
expr_stmt|;
name|wait
argument_list|()
expr_stmt|;
block|}
DECL|function|run
name|void
name|run
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToBus
argument_list|(
name|QDBusConnection
operator|::
name|SessionBus
argument_list|,
literal|"ThreadConnection"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
condition|)
name|qWarning
argument_list|(
literal|"Error registering to DBus"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|con
operator|.
name|registerService
argument_list|(
name|server_serviceName
argument_list|)
condition|)
name|qWarning
argument_list|(
literal|"Error registering service name"
argument_list|)
expr_stmt|;
name|Interface
name|targetObj
decl_stmt|;
name|con
operator|.
name|registerObject
argument_list|(
name|server_objectPath
argument_list|,
operator|&
name|targetObj
argument_list|,
name|QDBusConnection
operator|::
name|ExportScriptableContents
argument_list|)
expr_stmt|;
name|m_ready
operator|.
name|release
argument_list|()
expr_stmt|;
name|exec
argument_list|()
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromBus
argument_list|(
name|con
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_ready
name|QSemaphore
name|m_ready
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|callWithTimeout
name|void
name|tst_QDBusAbstractInterface
operator|::
name|callWithTimeout
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|DBusServerThread
name|serverThread
decl_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|server_serviceName
argument_list|,
name|server_objectPath
argument_list|,
name|server_interfaceName
argument_list|,
literal|"sleepMethod"
argument_list|)
decl_stmt|;
name|msg
operator|<<
literal|100
expr_stmt|;
comment|// sleep 100 ms
block|{
comment|// Call with no timeout -> works
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
operator|(
name|int
operator|)
name|reply
operator|.
name|type
argument_list|()
argument_list|,
operator|(
name|int
operator|)
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Call with 1 msec timeout -> fails
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|msg
argument_list|,
name|QDBus
operator|::
name|Block
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ErrorMessage
argument_list|)
expr_stmt|;
block|}
comment|// Now using QDBusInterface
name|QDBusInterface
name|iface
argument_list|(
name|server_serviceName
argument_list|,
name|server_objectPath
argument_list|,
name|server_interfaceName
argument_list|,
name|con
argument_list|)
decl_stmt|;
block|{
comment|// Call with no timeout
name|QDBusMessage
name|reply
init|=
name|iface
operator|.
name|call
argument_list|(
literal|"sleepMethod"
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Call with 1 msec timeout -> fails
name|iface
operator|.
name|setTimeout
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|iface
operator|.
name|call
argument_list|(
literal|"sleepMethod"
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ErrorMessage
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Call with 300 msec timeout -> works
name|iface
operator|.
name|setTimeout
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|iface
operator|.
name|call
argument_list|(
literal|"sleepMethod"
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|42
argument_list|)
expr_stmt|;
block|}
comment|// Now using generated code
name|org
operator|::
name|qtproject
operator|::
name|QtDBus
operator|::
name|Pinger
name|p
argument_list|(
name|server_serviceName
argument_list|,
name|server_objectPath
argument_list|,
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
argument_list|)
decl_stmt|;
block|{
comment|// Call with no timeout
name|QDBusReply
argument_list|<
name|int
argument_list|>
name|reply
init|=
name|p
operator|.
name|sleepMethod
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|reply
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|reply
argument_list|)
argument_list|,
literal|42
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Call with 1 msec timeout -> fails
name|p
operator|.
name|setTimeout
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|int
argument_list|>
name|reply
init|=
name|p
operator|.
name|sleepMethod
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|reply
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|stringPropRead
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropRead
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QString
name|expectedValue
init|=
name|targetObj
operator|.
name|m_stringProp
operator|=
literal|"This is a test"
decl_stmt|;
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"stringProp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stringPropWrite
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropWrite
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QString
name|expectedValue
init|=
literal|"This is a value"
decl_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|->
name|setProperty
argument_list|(
literal|"stringProp"
argument_list|,
name|expectedValue
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_stringProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropRead
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropRead
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|targetObj
operator|.
name|m_variantProp
operator|=
name|QDBusVariant
argument_list|(
name|QVariant
argument_list|(
literal|42
argument_list|)
argument_list|)
decl_stmt|;
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"variantProp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusVariant
name|value
init|=
name|v
operator|.
name|value
argument_list|<
name|QDBusVariant
argument_list|>
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropWrite
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropWrite
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|QDBusVariant
argument_list|(
name|Q_INT64_C
argument_list|(
operator|-
literal|47
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|->
name|setProperty
argument_list|(
literal|"variantProp"
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_variantProp
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropRead
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropRead
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|targetObj
operator|.
name|m_complexProp
operator|=
name|RegisteredType
argument_list|(
literal|"This is a test"
argument_list|)
decl_stmt|;
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"complexProp"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|userType
argument_list|()
argument_list|,
name|qMetaTypeId
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|value
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|,
name|targetObj
operator|.
name|m_complexProp
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropWrite
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropWrite
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|RegisteredType
argument_list|(
literal|"This is a value"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|->
name|setProperty
argument_list|(
literal|"complexProp"
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_complexProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stringPropReadPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropReadPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QString
name|expectedValue
init|=
literal|"This is a test"
decl_stmt|;
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"stringProp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stringPropWritePeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropWritePeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QString
name|expectedValue
init|=
literal|"This is a value"
decl_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|->
name|setProperty
argument_list|(
literal|"stringProp"
argument_list|,
name|expectedValue
argument_list|)
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24262 peer tests are broken"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_stringProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropReadPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropReadPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|QDBusVariant
argument_list|(
name|QVariant
argument_list|(
literal|42
argument_list|)
argument_list|)
decl_stmt|;
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"variantProp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusVariant
name|value
init|=
name|v
operator|.
name|value
argument_list|<
name|QDBusVariant
argument_list|>
argument_list|()
decl_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|value
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropWritePeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropWritePeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|QDBusVariant
argument_list|(
name|Q_INT64_C
argument_list|(
operator|-
literal|47
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|->
name|setProperty
argument_list|(
literal|"variantProp"
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24262 peer tests are broken"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_variantProp
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropReadPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropReadPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|RegisteredType
argument_list|(
literal|"This is a test"
argument_list|)
decl_stmt|;
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"complexProp"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|userType
argument_list|()
argument_list|,
name|qMetaTypeId
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|v
operator|.
name|value
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropWritePeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropWritePeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|RegisteredType
argument_list|(
literal|"This is a value"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|->
name|setProperty
argument_list|(
literal|"complexProp"
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|expectedValue
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24262 peer tests are broken"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_complexProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stringPropDirectRead
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropDirectRead
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QString
name|expectedValue
init|=
name|targetObj
operator|.
name|m_stringProp
operator|=
literal|"This is a test"
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|stringProp
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stringPropDirectWrite
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropDirectWrite
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QString
name|expectedValue
init|=
literal|"This is a value"
decl_stmt|;
name|p
operator|->
name|setStringProp
argument_list|(
name|expectedValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_stringProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropDirectRead
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropDirectRead
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|targetObj
operator|.
name|m_variantProp
operator|=
name|QDBusVariant
argument_list|(
literal|42
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|variantProp
argument_list|()
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropDirectWrite
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropDirectWrite
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|QDBusVariant
argument_list|(
name|Q_INT64_C
argument_list|(
operator|-
literal|47
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|->
name|setVariantProp
argument_list|(
name|expectedValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_variantProp
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_variantProp
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropDirectRead
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropDirectRead
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|targetObj
operator|.
name|m_complexProp
operator|=
name|RegisteredType
argument_list|(
literal|"This is a test"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|complexProp
argument_list|()
argument_list|,
name|targetObj
operator|.
name|m_complexProp
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropDirectWrite
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropDirectWrite
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|RegisteredType
argument_list|(
literal|"This is a value"
argument_list|)
decl_stmt|;
name|p
operator|->
name|setComplexProp
argument_list|(
name|expectedValue
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_complexProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stringPropDirectReadPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropDirectReadPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QString
name|expectedValue
init|=
literal|"This is a test"
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|stringProp
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stringPropDirectWritePeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|stringPropDirectWritePeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QString
name|expectedValue
init|=
literal|"This is a value"
decl_stmt|;
name|p
operator|->
name|setStringProp
argument_list|(
name|expectedValue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24262 peer tests are broken"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_stringProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropDirectReadPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropDirectReadPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|QDBusVariant
argument_list|(
literal|42
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|variantProp
argument_list|()
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|variantPropDirectWritePeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|variantPropDirectWritePeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|QDBusVariant
name|expectedValue
init|=
name|QDBusVariant
argument_list|(
name|Q_INT64_C
argument_list|(
operator|-
literal|47
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|->
name|setVariantProp
argument_list|(
name|expectedValue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24262 peer tests are broken"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_variantProp
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
operator|.
name|userType
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_variantProp
operator|.
name|variant
argument_list|()
argument_list|,
name|expectedValue
operator|.
name|variant
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropDirectReadPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropDirectReadPeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|RegisteredType
argument_list|(
literal|"This is a test"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|complexProp
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|complexPropDirectWritePeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|complexPropDirectWritePeer
parameter_list|()
block|{
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|resetServer
argument_list|()
expr_stmt|;
name|RegisteredType
name|expectedValue
init|=
name|RegisteredType
argument_list|(
literal|"This is a value"
argument_list|)
decl_stmt|;
name|p
operator|->
name|setComplexProp
argument_list|(
name|expectedValue
argument_list|)
expr_stmt|;
name|QEXPECT_FAIL
argument_list|(
literal|""
argument_list|,
literal|"QTBUG-24262 peer tests are broken"
argument_list|,
name|Abort
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|targetObj
operator|.
name|m_complexProp
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getVoidSignal_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getVoidSignal_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"service"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"specific"
argument_list|)
operator|<<
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|baseService
argument_list|()
operator|<<
literal|"/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"service-wildcard"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|"/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-wildcard"
argument_list|)
operator|<<
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|baseService
argument_list|()
operator|<<
name|QString
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"full-wildcard"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getVoidSignal
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getVoidSignal
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we need to connect the signal somewhere in order for D-Bus to enable the rules
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
emit|emit
name|targetObj
operator|.
name|voidSignal
argument_list|()
emit|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getStringSignal_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getStringSignal_data
parameter_list|()
block|{
name|getVoidSignal_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getStringSignal
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getStringSignal
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we need to connect the signal somewhere in order for D-Bus to enable the rules
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|stringSignal
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|stringSignal
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QString
name|expectedValue
init|=
literal|"Good morning"
decl_stmt|;
emit|emit
name|targetObj
operator|.
name|stringSignal
argument_list|(
name|expectedValue
argument_list|)
emit|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|userType
argument_list|()
argument_list|,
name|int
argument_list|(
name|QVariant
operator|::
name|String
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getComplexSignal_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getComplexSignal_data
parameter_list|()
block|{
name|getVoidSignal_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getComplexSignal
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getComplexSignal
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we need to connect the signal somewhere in order for D-Bus to enable the rules
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|complexSignal
argument_list|(
name|RegisteredType
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|complexSignal
argument_list|(
name|RegisteredType
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|RegisteredType
name|expectedValue
argument_list|(
literal|"Good evening"
argument_list|)
decl_stmt|;
emit|emit
name|targetObj
operator|.
name|complexSignal
argument_list|(
name|expectedValue
argument_list|)
emit|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|userType
argument_list|()
argument_list|,
name|qMetaTypeId
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|value
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getVoidSignalPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getVoidSignalPeer_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"specific"
argument_list|)
operator|<<
literal|"/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"wildcard"
argument_list|)
operator|<<
name|QString
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getVoidSignalPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getVoidSignalPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we need to connect the signal somewhere in order for D-Bus to enable the rules
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|QDBusMessage
name|req
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"voidSignal"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|send
argument_list|(
name|req
argument_list|)
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getStringSignalPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getStringSignalPeer_data
parameter_list|()
block|{
name|getVoidSignalPeer_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getStringSignalPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getStringSignalPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we need to connect the signal somewhere in order for D-Bus to enable the rules
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|stringSignal
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|stringSignal
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|QString
name|expectedValue
init|=
literal|"Good morning"
decl_stmt|;
name|QDBusMessage
name|req
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"stringSignal"
argument_list|)
decl_stmt|;
name|req
operator|<<
name|expectedValue
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|send
argument_list|(
name|req
argument_list|)
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|userType
argument_list|()
argument_list|,
name|int
argument_list|(
name|QVariant
operator|::
name|String
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|toString
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getComplexSignalPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getComplexSignalPeer_data
parameter_list|()
block|{
name|getVoidSignalPeer_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|getComplexSignalPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|getComplexSignalPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we need to connect the signal somewhere in order for D-Bus to enable the rules
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|complexSignal
argument_list|(
name|RegisteredType
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|complexSignal
argument_list|(
name|RegisteredType
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|RegisteredType
name|expectedValue
argument_list|(
literal|"Good evening"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|req
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"complexSignal"
argument_list|)
decl_stmt|;
name|req
operator|<<
literal|"Good evening"
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|send
argument_list|(
name|req
argument_list|)
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|userType
argument_list|()
argument_list|,
name|qMetaTypeId
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
index|[
literal|0
index|]
index|[
literal|0
index|]
operator|.
name|value
argument_list|<
name|RegisteredType
argument_list|>
argument_list|()
argument_list|,
name|expectedValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|followSignal
name|void
name|tst_QDBusAbstractInterface
operator|::
name|followSignal
parameter_list|()
block|{
specifier|const
name|QString
name|serviceToFollow
init|=
literal|"org.qtproject.tst_qdbusabstractinterface.FollowMe"
decl_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|serviceToFollow
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QDBusConnection
name|con
init|=
name|p
operator|->
name|connection
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|interface
argument_list|()
operator|->
name|isServiceRegistered
argument_list|(
name|serviceToFollow
argument_list|)
argument_list|)
expr_stmt|;
name|Pinger
name|control
init|=
name|getPinger
argument_list|(
literal|""
argument_list|)
decl_stmt|;
comment|// connect our test signal
comment|// FRAGILE CODE AHEAD:
comment|// Connection order is important: we connect the control first because that
comment|// needs to be delivered last, to ensure that we don't exitLoop() before
comment|// the signal delivery to QSignalSpy is posted to the current thread. That
comment|// happens because QDBusConnectionPrivate runs in a separate thread and
comment|// uses a QMultiHash and insertMulti prepends to the list of items with the
comment|// same key.
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|control
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QSignalSpy
name|s
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
emit|emit
name|targetObj
operator|.
name|voidSignal
argument_list|()
emit|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
comment|// signal must not have been received because the service isn't registered
name|QVERIFY
argument_list|(
name|s
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// now register the service
name|QDBusReply
argument_list|<
name|QDBusConnectionInterface
operator|::
name|RegisterServiceReply
argument_list|>
name|r
init|=
name|con
operator|.
name|interface
argument_list|()
operator|->
name|registerService
argument_list|(
name|serviceToFollow
argument_list|,
name|QDBusConnectionInterface
operator|::
name|DontQueueService
argument_list|,
name|QDBusConnectionInterface
operator|::
name|DontAllowReplacement
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isValid
argument_list|()
operator|&&
name|r
operator|.
name|value
argument_list|()
operator|==
name|QDBusConnectionInterface
operator|::
name|ServiceRegistered
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|interface
argument_list|()
operator|->
name|isServiceRegistered
argument_list|(
name|serviceToFollow
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|instance
argument_list|()
operator|->
name|processEvents
argument_list|()
expr_stmt|;
comment|// emit the signal again:
emit|emit
name|targetObj
operator|.
name|voidSignal
argument_list|()
emit|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
comment|// now the signal must have been received:
name|QCOMPARE
argument_list|(
name|s
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|s
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// cleanup:
name|con
operator|.
name|interface
argument_list|()
operator|->
name|unregisterService
argument_list|(
name|serviceToFollow
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectDisconnect_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|connectDisconnect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"connectCount"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"disconnectCount"
argument_list|)
expr_stmt|;
comment|// we don't actually need multiple disconnects
comment|// QObject::disconnect() disconnects all matching rules
comment|// we'd have to use QMetaObject::disconnectOne if we wanted just one
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
literal|0
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"connect-disconnect"
argument_list|)
operator|<<
literal|1
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"connect-disconnect-wildcard"
argument_list|)
operator|<<
literal|1
operator|<<
operator|-
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"connect-twice"
argument_list|)
operator|<<
literal|2
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"connect-twice-disconnect"
argument_list|)
operator|<<
literal|2
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"connect-twice-disconnect-wildcard"
argument_list|)
operator|<<
literal|2
operator|<<
operator|-
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectDisconnect
name|void
name|tst_QDBusAbstractInterface
operator|::
name|connectDisconnect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|connectCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|disconnectCount
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// connect the exitLoop slot first
comment|// if the disconnect() below does something weird, we'll get a timeout
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|SignalReceiver
name|sr
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|connectCount
condition|;
operator|++
name|i
control|)
name|sr
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|receive
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|disconnectCount
condition|)
name|QObject
operator|::
name|disconnect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|disconnectCount
operator|>
literal|0
condition|?
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
else|:
literal|0
argument_list|,
operator|&
name|sr
argument_list|,
name|SLOT
argument_list|(
name|receive
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
emit|emit
name|targetObj
operator|.
name|voidSignal
argument_list|()
emit|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|disconnectCount
operator|!=
literal|0
condition|)
name|QCOMPARE
argument_list|(
name|sr
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|sr
operator|.
name|callCount
argument_list|,
name|connectCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectDisconnectPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|connectDisconnectPeer_data
parameter_list|()
block|{
name|connectDisconnect_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectDisconnectPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|connectDisconnectPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|connectCount
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|disconnectCount
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|()
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// connect the exitLoop slot first
comment|// if the disconnect() below does something weird, we'll get a timeout
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|SignalReceiver
name|sr
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|connectCount
condition|;
operator|++
name|i
control|)
name|sr
operator|.
name|connect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|receive
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|disconnectCount
condition|)
name|QObject
operator|::
name|disconnect
argument_list|(
name|p
operator|.
name|data
argument_list|()
argument_list|,
name|disconnectCount
operator|>
literal|0
condition|?
name|SIGNAL
argument_list|(
name|voidSignal
argument_list|()
argument_list|)
else|:
literal|0
argument_list|,
operator|&
name|sr
argument_list|,
name|SLOT
argument_list|(
name|receive
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|req
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|,
name|objectPath
argument_list|,
name|interfaceName
argument_list|,
literal|"voidSignal"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|send
argument_list|(
name|req
argument_list|)
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|disconnectCount
operator|!=
literal|0
condition|)
name|QCOMPARE
argument_list|(
name|sr
operator|.
name|callCount
argument_list|,
literal|0
argument_list|)
expr_stmt|;
else|else
name|QCOMPARE
argument_list|(
name|sr
operator|.
name|callCount
argument_list|,
name|connectCount
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createErrors_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|createErrors_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"service"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"errorName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-service"
argument_list|)
operator|<<
literal|"this isn't valid"
operator|<<
literal|"/"
operator|<<
literal|"org.qtproject.QtDBus.Error.InvalidService"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-path"
argument_list|)
operator|<<
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|baseService
argument_list|()
operator|<<
literal|"this isn't valid"
operator|<<
literal|"org.qtproject.QtDBus.Error.InvalidObjectPath"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createErrors
name|void
name|tst_QDBusAbstractInterface
operator|::
name|createErrors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createErrorsPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|createErrorsPeer_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"errorName"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"invalid-path"
argument_list|)
operator|<<
literal|"this isn't valid"
operator|<<
literal|"org.qtproject.QtDBus.Error.InvalidObjectPath"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createErrorsPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|createErrorsPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callErrors_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|callErrors_data
parameter_list|()
block|{
name|createErrors_data
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"service-wildcard"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|"/"
operator|<<
literal|"org.qtproject.QtDBus.Error.InvalidService"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-wildcard"
argument_list|)
operator|<<
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
operator|.
name|baseService
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|"org.qtproject.QtDBus.Error.InvalidObjectPath"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"full-wildcard"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
name|QString
argument_list|()
operator|<<
literal|"org.qtproject.QtDBus.Error.InvalidService"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callErrors
name|void
name|tst_QDBusAbstractInterface
operator|::
name|callErrors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to make this call:
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|asyncCallErrors_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|asyncCallErrors_data
parameter_list|()
block|{
name|callErrors_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|asyncCallErrors
name|void
name|tst_QDBusAbstractInterface
operator|::
name|asyncCallErrors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to make this call:
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callErrorsPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|callErrorsPeer_data
parameter_list|()
block|{
name|createErrorsPeer_data
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"path-wildcard"
argument_list|)
operator|<<
name|QString
argument_list|()
operator|<<
literal|"org.qtproject.QtDBus.Error.InvalidObjectPath"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callErrorsPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|callErrorsPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to make this call:
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|r
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|asyncCallErrorsPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|asyncCallErrorsPeer_data
parameter_list|()
block|{
name|callErrorsPeer_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|asyncCallErrorsPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|asyncCallErrorsPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to make this call:
name|QDBusPendingReply
argument_list|<
name|QString
argument_list|>
name|r
init|=
name|p
operator|->
name|stringMethod
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|r
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
name|r
operator|.
name|error
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyReadErrors_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyReadErrors_data
parameter_list|()
block|{
name|callErrors_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyReadErrors
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyReadErrors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"stringProp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyWriteErrors_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyWriteErrors_data
parameter_list|()
block|{
name|callErrors_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyWriteErrors
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyWriteErrors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
if|if
condition|(
name|p
operator|->
name|isValid
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|type
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QDBusError
operator|::
name|NoError
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|->
name|setProperty
argument_list|(
literal|"stringProp"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyReadErrors_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyReadErrors_data
parameter_list|()
block|{
name|callErrors_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyReadErrors
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyReadErrors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
name|QString
name|v
init|=
name|p
operator|->
name|stringProp
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyWriteErrors_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyWriteErrors_data
parameter_list|()
block|{
name|callErrors_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyWriteErrors
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyWriteErrors
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPinger
argument_list|(
name|service
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
comment|// but there's no direct way of verifying that the setting failed
if|if
condition|(
name|p
operator|->
name|isValid
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|type
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QDBusError
operator|::
name|NoError
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setStringProp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyReadErrorsPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyReadErrorsPeer_data
parameter_list|()
block|{
name|callErrorsPeer_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyReadErrorsPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyReadErrorsPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
name|QVariant
name|v
init|=
name|p
operator|->
name|property
argument_list|(
literal|"stringProp"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|v
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyWriteErrorsPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyWriteErrorsPeer_data
parameter_list|()
block|{
name|callErrorsPeer_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|propertyWriteErrorsPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|propertyWriteErrorsPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
if|if
condition|(
name|p
operator|->
name|isValid
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|type
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QDBusError
operator|::
name|NoError
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|p
operator|->
name|setProperty
argument_list|(
literal|"stringProp"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyReadErrorsPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyReadErrorsPeer_data
parameter_list|()
block|{
name|callErrorsPeer_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyReadErrorsPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyReadErrorsPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
name|QString
name|v
init|=
name|p
operator|->
name|stringProp
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|v
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyWriteErrorsPeer_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyWriteErrorsPeer_data
parameter_list|()
block|{
name|callErrorsPeer_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|directPropertyWriteErrorsPeer
name|void
name|tst_QDBusAbstractInterface
operator|::
name|directPropertyWriteErrorsPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
comment|// we shouldn't be able to get this value:
comment|// but there's no direct way of verifying that the setting failed
if|if
condition|(
name|p
operator|->
name|isValid
argument_list|()
condition|)
name|QCOMPARE
argument_list|(
name|int
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|type
argument_list|()
argument_list|)
argument_list|,
name|int
argument_list|(
name|QDBusError
operator|::
name|NoError
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setStringProp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|QTEST
argument_list|(
name|p
operator|->
name|lastError
argument_list|()
operator|.
name|name
argument_list|()
argument_list|,
literal|"errorName"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|validity_data
name|void
name|tst_QDBusAbstractInterface
operator|::
name|validity_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"service"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null-service"
argument_list|)
operator|<<
literal|""
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ignored-service"
argument_list|)
operator|<<
literal|"org.example.anyservice"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|validity
name|void
name|tst_QDBusAbstractInterface
operator|::
name|validity
parameter_list|()
block|{
comment|/* Test case for QTBUG-32374 */
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|service
argument_list|)
expr_stmt|;
name|Pinger
name|p
init|=
name|getPingerPeer
argument_list|(
literal|"/"
argument_list|,
name|service
argument_list|)
decl_stmt|;
name|QVERIFY2
argument_list|(
name|p
argument_list|,
literal|"Not connected to D-Bus"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|p
operator|->
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDBusAbstractInterface
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdbusabstractinterface.moc"
end_include
end_unit
