begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QtDBus>
end_include
begin_class
DECL|class|BaseObject
class|class
name|BaseObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|Q_CLASSINFO
argument_list|(
literal|"D-Bus Interface"
argument_list|,
literal|"local.BaseObject"
argument_list|)
decl|public
range|:
DECL|function|BaseObject
name|BaseObject
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
operator|:
name|QObject
argument_list|(
argument|parent
argument_list|)
block|{ }
specifier|public
name|slots
operator|:
DECL|function|anotherMethod
name|void
name|anotherMethod
argument_list|()
block|{ }
block|}
class|;
end_class
begin_class
DECL|class|MyObject
class|class
name|MyObject
super|:
specifier|public
name|BaseObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
name|void
name|method
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|msg
parameter_list|)
function_decl|;
public|public:
DECL|member|path
specifier|static
name|QString
name|path
decl_stmt|;
DECL|member|callCount
name|int
name|callCount
decl_stmt|;
DECL|function|MyObject
name|MyObject
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|BaseObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|callCount
argument_list|(
literal|0
argument_list|)
block|{}
block|}
class|;
end_class
begin_function
DECL|function|method
name|void
name|MyObject
operator|::
name|method
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|msg
parameter_list|)
block|{
name|path
operator|=
name|msg
operator|.
name|path
argument_list|()
expr_stmt|;
operator|++
name|callCount
expr_stmt|;
comment|//qDebug()<< msg;
block|}
end_function
begin_class
DECL|class|MyObjectWithoutInterface
class|class
name|MyObjectWithoutInterface
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
name|void
name|method
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|msg
parameter_list|)
function_decl|;
public|public:
DECL|member|path
specifier|static
name|QString
name|path
decl_stmt|;
DECL|member|interface
specifier|static
name|QString
name|interface
decl_stmt|;
DECL|member|callCount
name|int
name|callCount
decl_stmt|;
DECL|function|MyObjectWithoutInterface
name|MyObjectWithoutInterface
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|callCount
argument_list|(
literal|0
argument_list|)
block|{}
block|}
class|;
end_class
begin_function
DECL|function|method
name|void
name|MyObjectWithoutInterface
operator|::
name|method
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|msg
parameter_list|)
block|{
name|path
operator|=
name|msg
operator|.
name|path
argument_list|()
expr_stmt|;
name|interface
operator|=
name|msg
operator|.
name|interface
argument_list|()
expr_stmt|;
operator|++
name|callCount
expr_stmt|;
comment|//qDebug()<< msg;
block|}
end_function
begin_class
DECL|class|tst_QDBusConnection
class|class
name|tst_QDBusConnection
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
DECL|member|signalsReceived
name|int
name|signalsReceived
decl_stmt|;
public|public
name|slots
public|:
DECL|function|oneSlot
name|void
name|oneSlot
parameter_list|()
block|{
operator|++
name|signalsReceived
expr_stmt|;
block|}
DECL|function|exitLoop
name|void
name|exitLoop
parameter_list|()
block|{
operator|++
name|signalsReceived
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|exitLoop
argument_list|()
expr_stmt|;
block|}
name|void
name|secondCallWithCallback
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|noConnection
parameter_list|()
function_decl|;
name|void
name|connectToBus
parameter_list|()
function_decl|;
name|void
name|connectToPeer
parameter_list|()
function_decl|;
name|void
name|connect
parameter_list|()
function_decl|;
name|void
name|send
parameter_list|()
function_decl|;
name|void
name|sendWithGui
parameter_list|()
function_decl|;
name|void
name|sendAsync
parameter_list|()
function_decl|;
name|void
name|sendSignal
parameter_list|()
function_decl|;
name|void
name|sendSignalToName
parameter_list|()
function_decl|;
name|void
name|sendSignalToOtherName
parameter_list|()
function_decl|;
name|void
name|registerObject_data
parameter_list|()
function_decl|;
name|void
name|registerObject
parameter_list|()
function_decl|;
name|void
name|registerObjectWithInterface_data
parameter_list|()
function_decl|;
name|void
name|registerObjectWithInterface
parameter_list|()
function_decl|;
name|void
name|registerObjectPeer_data
parameter_list|()
function_decl|;
name|void
name|registerObjectPeer
parameter_list|()
function_decl|;
name|void
name|registerObject2
parameter_list|()
function_decl|;
name|void
name|registerObjectPeer2
parameter_list|()
function_decl|;
name|void
name|registerQObjectChildren
parameter_list|()
function_decl|;
name|void
name|registerQObjectChildrenPeer
parameter_list|()
function_decl|;
name|void
name|callSelf
parameter_list|()
function_decl|;
name|void
name|callSelfByAnotherName_data
parameter_list|()
function_decl|;
name|void
name|callSelfByAnotherName
parameter_list|()
function_decl|;
name|void
name|multipleInterfacesInQObject
parameter_list|()
function_decl|;
name|void
name|slotsWithLessParameters
parameter_list|()
function_decl|;
name|void
name|nestedCallWithCallback
parameter_list|()
function_decl|;
name|void
name|serviceRegistrationRaceCondition
parameter_list|()
function_decl|;
name|void
name|registerVirtualObject
parameter_list|()
function_decl|;
name|void
name|callVirtualObject
parameter_list|()
function_decl|;
name|void
name|callVirtualObjectLocal
parameter_list|()
function_decl|;
public|public:
DECL|function|serviceName
name|QString
name|serviceName
parameter_list|()
specifier|const
block|{
return|return
literal|"org.qtproject.Qt.Autotests.QDBusConnection"
return|;
block|}
name|bool
name|callMethod
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|conn
parameter_list|,
specifier|const
name|QString
modifier|&
name|path
parameter_list|)
function_decl|;
name|bool
name|callMethod
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|conn
parameter_list|,
specifier|const
name|QString
modifier|&
name|path
parameter_list|,
specifier|const
name|QString
modifier|&
name|interface
parameter_list|)
function_decl|;
name|bool
name|callMethodPeer
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|conn
parameter_list|,
specifier|const
name|QString
modifier|&
name|path
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|QDBusSpy
class|class
name|QDBusSpy
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
DECL|function|handlePing
name|void
name|handlePing
parameter_list|(
specifier|const
name|QString
modifier|&
name|str
parameter_list|)
block|{
name|args
operator|.
name|clear
argument_list|()
expr_stmt|;
name|args
operator|<<
name|str
expr_stmt|;
block|}
DECL|function|asyncReply
name|void
name|asyncReply
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|msg
parameter_list|)
block|{
name|args
operator|=
name|msg
operator|.
name|arguments
argument_list|()
expr_stmt|;
block|}
public|public:
DECL|member|args
name|QList
argument_list|<
name|QVariant
argument_list|>
name|args
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|noConnection
name|void
name|tst_QDBusConnection
operator|::
name|noConnection
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToBus
argument_list|(
literal|"unix:path=/dev/null"
argument_list|,
literal|"testconnection"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
comment|// try sending a message. This should fail
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
literal|"org.kde.selftest"
argument_list|,
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"Ping"
argument_list|)
decl_stmt|;
name|msg
operator|<<
name|QLatin1String
argument_list|(
literal|"ping"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|send
argument_list|(
name|msg
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusSpy
name|spy
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|callWithCallback
argument_list|(
name|msg
argument_list|,
operator|&
name|spy
argument_list|,
name|SLOT
argument_list|(
name|asyncReply
argument_list|)
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ErrorMessage
argument_list|)
expr_stmt|;
name|QDBusReply
argument_list|<
name|void
argument_list|>
name|voidreply
argument_list|(
name|reply
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|voidreply
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromBus
argument_list|(
literal|"testconnection"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendSignal
name|void
name|tst_QDBusConnection
operator|::
name|sendSignal
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createSignal
argument_list|(
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"Ping"
argument_list|)
decl_stmt|;
name|msg
operator|<<
name|QLatin1String
argument_list|(
literal|"ping"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|send
argument_list|(
name|msg
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendSignalToName
name|void
name|tst_QDBusConnection
operator|::
name|sendSignalToName
parameter_list|()
block|{
name|QDBusSpy
name|spy
decl_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|con
operator|.
name|connect
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"ping"
argument_list|,
operator|&
name|spy
argument_list|,
name|SLOT
argument_list|(
name|handlePing
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createTargetedSignal
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"ping"
argument_list|)
decl_stmt|;
name|msg
operator|<<
name|QLatin1String
argument_list|(
literal|"ping"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|send
argument_list|(
name|msg
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|args
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"ping"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendSignalToOtherName
name|void
name|tst_QDBusConnection
operator|::
name|sendSignalToOtherName
parameter_list|()
block|{
name|QDBusSpy
name|spy
decl_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|con
operator|.
name|connect
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"ping"
argument_list|,
operator|&
name|spy
argument_list|,
name|SLOT
argument_list|(
name|handlePing
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createTargetedSignal
argument_list|(
literal|"some.other.service"
argument_list|,
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"ping"
argument_list|)
decl_stmt|;
name|msg
operator|<<
name|QLatin1String
argument_list|(
literal|"ping"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|send
argument_list|(
name|msg
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|args
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|send
name|void
name|tst_QDBusConnection
operator|::
name|send
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
literal|"org.freedesktop.DBus"
argument_list|,
literal|"/org/freedesktop/DBus"
argument_list|,
literal|"org.freedesktop.DBus"
argument_list|,
literal|"ListNames"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|msg
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"QStringList"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toStringList
argument_list|()
operator|.
name|contains
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendWithGui
name|void
name|tst_QDBusConnection
operator|::
name|sendWithGui
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
literal|"org.freedesktop.DBus"
argument_list|,
literal|"/org/freedesktop/DBus"
argument_list|,
literal|"org.freedesktop.DBus"
argument_list|,
literal|"ListNames"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|msg
argument_list|,
name|QDBus
operator|::
name|BlockWithGui
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"QStringList"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toStringList
argument_list|()
operator|.
name|contains
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sendAsync
name|void
name|tst_QDBusConnection
operator|::
name|sendAsync
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusSpy
name|spy
decl_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
literal|"org.freedesktop.DBus"
argument_list|,
literal|"/org/freedesktop/DBus"
argument_list|,
literal|"org.freedesktop.DBus"
argument_list|,
literal|"ListNames"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|callWithCallback
argument_list|(
name|msg
argument_list|,
operator|&
name|spy
argument_list|,
name|SLOT
argument_list|(
name|asyncReply
argument_list|(
name|QDBusMessage
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|args
operator|.
name|value
argument_list|(
literal|0
argument_list|)
operator|.
name|typeName
argument_list|()
argument_list|,
literal|"QStringList"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|spy
operator|.
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toStringList
argument_list|()
operator|.
name|contains
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connect
name|void
name|tst_QDBusConnection
operator|::
name|connect
parameter_list|()
block|{
name|QDBusSpy
name|spy
decl_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|con
operator|.
name|connect
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"ping"
argument_list|,
operator|&
name|spy
argument_list|,
name|SLOT
argument_list|(
name|handlePing
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createSignal
argument_list|(
literal|"/org/kde/selftest"
argument_list|,
literal|"org.kde.selftest"
argument_list|,
literal|"ping"
argument_list|)
decl_stmt|;
name|msg
operator|<<
name|QLatin1String
argument_list|(
literal|"ping"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|send
argument_list|(
name|msg
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|args
operator|.
name|count
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|spy
operator|.
name|args
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"ping"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|connectToBus
name|void
name|tst_QDBusConnection
operator|::
name|connectToBus
parameter_list|()
block|{
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToBus
argument_list|(
name|QDBusConnection
operator|::
name|SessionBus
argument_list|,
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
name|con2
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con2
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con2
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|con2
operator|=
name|con
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con2
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con2
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"bubu"
argument_list|)
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QDBusConnection
operator|::
name|disconnectFromBus
argument_list|(
literal|"bubu"
argument_list|)
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QByteArray
name|address
init|=
name|qgetenv
argument_list|(
literal|"DBUS_SESSION_BUS_ADDRESS"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|address
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToBus
argument_list|(
name|address
argument_list|,
literal|"newconn"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromBus
argument_list|(
literal|"newconn"
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|connectToPeer
name|void
name|tst_QDBusConnection
operator|::
name|connectToPeer
parameter_list|()
block|{
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
literal|""
argument_list|,
literal|"newconn"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"newconn"
argument_list|)
expr_stmt|;
block|}
name|QDBusServer
name|server
decl_stmt|;
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
literal|"unix:abstract=/tmp/dbus-XXXXXXXXXX,guid=00000000000000000000000000000000"
argument_list|,
literal|"newconn2"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"newconn2"
argument_list|)
expr_stmt|;
block|}
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
name|server
operator|.
name|address
argument_list|()
argument_list|,
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
name|con2
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con2
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con2
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|con2
operator|=
name|con
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con2
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con2
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QDBusConnection
operator|::
name|disconnectFromBus
argument_list|(
literal|"bubu"
argument_list|)
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"bubu"
argument_list|)
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"bubu"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|lastError
argument_list|()
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|registerObject_data
name|void
name|tst_QDBusConnection
operator|::
name|registerObject_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/"
argument_list|)
operator|<<
literal|"/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1"
argument_list|)
operator|<<
literal|"/p1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p2"
argument_list|)
operator|<<
literal|"/p2"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1/q"
argument_list|)
operator|<<
literal|"/p1/q"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1/q/r"
argument_list|)
operator|<<
literal|"/p1/q/r"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerObject
name|void
name|tst_QDBusConnection
operator|::
name|registerObject
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
comment|//QVERIFY(!callMethod(con, path));
block|{
comment|// register one object at root:
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerObjectWithInterface_data
name|void
name|tst_QDBusConnection
operator|::
name|registerObjectWithInterface_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"interface"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/"
argument_list|)
operator|<<
literal|"/"
operator|<<
literal|"org.foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1"
argument_list|)
operator|<<
literal|"/p1"
operator|<<
literal|"org.foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p2"
argument_list|)
operator|<<
literal|"/p2"
operator|<<
literal|"org.foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1/q"
argument_list|)
operator|<<
literal|"/p1/q"
operator|<<
literal|"org.foo"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1/q/r"
argument_list|)
operator|<<
literal|"/p1/q/r"
operator|<<
literal|"org.foo"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerObjectWithInterface
name|void
name|tst_QDBusConnection
operator|::
name|registerObjectWithInterface
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|interface
argument_list|)
expr_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
block|{
comment|// register one object at root:
name|MyObjectWithoutInterface
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
name|path
argument_list|,
name|interface
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
name|path
argument_list|,
name|interface
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|interface
argument_list|,
name|interface
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
name|path
argument_list|,
name|interface
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|MyServer
class|class
name|MyServer
super|:
specifier|public
name|QDBusServer
block|{
name|Q_OBJECT
public|public:
DECL|function|MyServer
name|MyServer
parameter_list|(
name|QString
name|path
parameter_list|)
member_init_list|:
name|m_path
argument_list|(
name|path
argument_list|)
member_init_list|,
name|m_connections
argument_list|()
block|{
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|newConnection
argument_list|(
name|QDBusConnection
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|handleConnection
argument_list|(
name|QDBusConnection
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|registerObject
name|bool
name|registerObject
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|c
parameter_list|)
block|{
name|QDBusConnection
name|conn
argument_list|(
name|c
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|conn
operator|.
name|registerObject
argument_list|(
name|m_path
argument_list|,
operator|&
name|m_obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|conn
operator|.
name|objectRegisteredAt
argument_list|(
name|m_path
argument_list|)
operator|==
operator|&
name|m_obj
operator|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
DECL|function|registerObject
name|bool
name|registerObject
parameter_list|()
block|{
name|Q_FOREACH
argument_list|(
argument|const QString&name
argument_list|,
argument|m_connections
argument_list|)
block|{
if|if
condition|(
operator|!
name|registerObject
argument_list|(
name|QDBusConnection
argument_list|(
name|name
argument_list|)
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|function|unregisterObject
name|void
name|unregisterObject
parameter_list|()
block|{
name|Q_FOREACH
argument_list|(
argument|const QString&name
argument_list|,
argument|m_connections
argument_list|)
block|{
name|QDBusConnection
name|c
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|c
operator|.
name|unregisterObject
argument_list|(
name|m_path
argument_list|)
expr_stmt|;
block|}
block|}
public|public
name|slots
public|:
DECL|function|handleConnection
name|void
name|handleConnection
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|c
parameter_list|)
block|{
name|m_connections
operator|<<
name|c
operator|.
name|name
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|c
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|registerObject
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_obj
name|MyObject
name|m_obj
decl_stmt|;
DECL|member|m_path
name|QString
name|m_path
decl_stmt|;
DECL|member|m_connections
name|QStringList
name|m_connections
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|registerObjectPeer_data
name|void
name|tst_QDBusConnection
operator|::
name|registerObjectPeer_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"path"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/"
argument_list|)
operator|<<
literal|"/"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1"
argument_list|)
operator|<<
literal|"/p1"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p2"
argument_list|)
operator|<<
literal|"/p2"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1/q"
argument_list|)
operator|<<
literal|"/p1/q"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"/p1/q/r"
argument_list|)
operator|<<
literal|"/p1/q/r"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerObjectPeer
name|void
name|tst_QDBusConnection
operator|::
name|registerObjectPeer
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|MyServer
name|server
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
name|server
operator|.
name|address
argument_list|()
argument_list|,
literal|"beforeFoo"
argument_list|)
expr_stmt|;
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
name|server
operator|.
name|address
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|con
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
name|server
operator|.
name|address
argument_list|()
argument_list|,
literal|"afterFoo"
argument_list|)
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|con
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|server
operator|.
name|unregisterObject
argument_list|()
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|con
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|server
operator|.
name|registerObject
argument_list|()
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|con
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
block|{
name|QDBusConnection
name|con
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|con
argument_list|,
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"beforeFoo"
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"afterFoo"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerObject2
name|void
name|tst_QDBusConnection
operator|::
name|registerObject2
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
comment|// make sure nothing is using our paths:
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// register one object at root:
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|obj
operator|.
name|path
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// register one at an element:
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|obj
operator|.
name|path
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// re-register it somewhere else
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p2"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// register at a deep path
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1/q/r"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1/q2"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try unregistering
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/q2"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// register it again
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1/q2"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// now try removing things around it:
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p2"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unrelated object shouldn't affect
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering just the parent shouldn't affect it
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/q2/r"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering non-existing child shouldn't affect it either
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/q"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering sibling (before) shouldn't affect
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/r"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering sibling (after) shouldn't affect
comment|// now remove it:
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1"
argument_list|,
name|QDBusConnection
operator|::
name|UnregisterTree
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// we removed the full tree
block|}
block|}
end_function
begin_class
DECL|class|MyServer2
class|class
name|MyServer2
super|:
specifier|public
name|QDBusServer
block|{
name|Q_OBJECT
public|public:
DECL|function|MyServer2
name|MyServer2
parameter_list|()
member_init_list|:
name|m_conn
argument_list|(
literal|"none"
argument_list|)
block|{
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|newConnection
argument_list|(
name|QDBusConnection
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|handleConnection
argument_list|(
name|QDBusConnection
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|function|connection
name|QDBusConnection
name|connection
parameter_list|()
block|{
return|return
name|m_conn
return|;
block|}
public|public
name|slots
public|:
DECL|function|handleConnection
name|void
name|handleConnection
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|c
parameter_list|)
block|{
name|m_conn
operator|=
name|c
expr_stmt|;
name|QVERIFY
argument_list|(
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|m_conn
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_obj
name|MyObject
name|m_obj
decl_stmt|;
DECL|member|m_conn
name|QDBusConnection
name|m_conn
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|registerObjectPeer2
name|void
name|tst_QDBusConnection
operator|::
name|registerObjectPeer2
parameter_list|()
block|{
name|MyServer2
name|server
decl_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
name|server
operator|.
name|address
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
name|srv_con
init|=
name|server
operator|.
name|connection
argument_list|()
decl_stmt|;
comment|// make sure nothing is using our paths:
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// register one object at root:
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|obj
operator|.
name|path
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// register one at an element:
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|obj
operator|.
name|path
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
comment|// re-register it somewhere else
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p2"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p2"
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// register at a deep path
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1/q/r"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// make sure it's gone
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q/r"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|MyObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1/q2"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// try unregistering
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/q2"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// register it again
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1/q2"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|path
argument_list|,
name|QString
argument_list|(
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// now try removing things around it:
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p2"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unrelated object shouldn't affect
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering just the parent shouldn't affect it
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/q2/r"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering non-existing child shouldn't affect it either
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/q"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering sibling (before) shouldn't affect
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1/r"
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// unregistering sibling (after) shouldn't affect
comment|// now remove it:
name|con
operator|.
name|unregisterObject
argument_list|(
literal|"/p1"
argument_list|,
name|QDBusConnection
operator|::
name|UnregisterTree
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/q2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// we removed the full tree
block|}
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerQObjectChildren
name|void
name|tst_QDBusConnection
operator|::
name|registerQObjectChildren
parameter_list|()
block|{
comment|// make sure no one is there
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|MyObject
name|obj
decl_stmt|,
modifier|*
name|a
decl_stmt|,
modifier|*
name|b
decl_stmt|,
modifier|*
name|c
decl_stmt|,
modifier|*
name|cc
decl_stmt|;
name|a
operator|=
operator|new
name|MyObject
argument_list|(
operator|&
name|obj
argument_list|)
expr_stmt|;
name|a
operator|->
name|setObjectName
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|b
operator|=
operator|new
name|MyObject
argument_list|(
operator|&
name|obj
argument_list|)
expr_stmt|;
name|b
operator|->
name|setObjectName
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|c
operator|=
operator|new
name|MyObject
argument_list|(
operator|&
name|obj
argument_list|)
expr_stmt|;
name|c
operator|->
name|setObjectName
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|cc
operator|=
operator|new
name|MyObject
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|cc
operator|->
name|setObjectName
argument_list|(
literal|"cc"
argument_list|)
expr_stmt|;
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
operator||
name|QDBusConnection
operator|::
name|ExportChildObjects
argument_list|)
expr_stmt|;
comment|// make calls
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/a"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/b"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/c"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/c/cc"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cc
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/d"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/c/abc"
argument_list|)
argument_list|)
expr_stmt|;
comment|// pull an object, see if it goes away:
operator|delete
name|b
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/b"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|c
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/c"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/c/cc"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/a"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/b"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/c"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1/c/cc"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|registerQObjectChildrenPeer
name|void
name|tst_QDBusConnection
operator|::
name|registerQObjectChildrenPeer
parameter_list|()
block|{
name|MyServer2
name|server
decl_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|connectToPeer
argument_list|(
name|server
operator|.
name|address
argument_list|()
argument_list|,
literal|"foo"
argument_list|)
decl_stmt|;
name|QCoreApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
name|srv_con
init|=
name|server
operator|.
name|connection
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
block|{
name|MyObject
name|obj
decl_stmt|,
modifier|*
name|a
decl_stmt|,
modifier|*
name|b
decl_stmt|,
modifier|*
name|c
decl_stmt|,
modifier|*
name|cc
decl_stmt|;
name|a
operator|=
operator|new
name|MyObject
argument_list|(
operator|&
name|obj
argument_list|)
expr_stmt|;
name|a
operator|->
name|setObjectName
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|b
operator|=
operator|new
name|MyObject
argument_list|(
operator|&
name|obj
argument_list|)
expr_stmt|;
name|b
operator|->
name|setObjectName
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|c
operator|=
operator|new
name|MyObject
argument_list|(
operator|&
name|obj
argument_list|)
expr_stmt|;
name|c
operator|->
name|setObjectName
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|cc
operator|=
operator|new
name|MyObject
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|cc
operator|->
name|setObjectName
argument_list|(
literal|"cc"
argument_list|)
expr_stmt|;
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
operator||
name|QDBusConnection
operator|::
name|ExportChildObjects
argument_list|)
expr_stmt|;
comment|// make calls
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/a"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|a
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/b"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|b
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/c"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|c
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/c/cc"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|cc
operator|->
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/d"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/c/abc"
argument_list|)
argument_list|)
expr_stmt|;
comment|// pull an object, see if it goes away:
operator|delete
name|b
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/b"
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|c
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/c"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/c/cc"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/a"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/b"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/c"
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethodPeer
argument_list|(
name|srv_con
argument_list|,
literal|"/p1/c/cc"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromPeer
argument_list|(
literal|"foo"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callMethod
name|bool
name|tst_QDBusConnection
operator|::
name|callMethod
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|conn
parameter_list|,
specifier|const
name|QString
modifier|&
name|path
parameter_list|)
block|{
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|conn
operator|.
name|baseService
argument_list|()
argument_list|,
name|path
argument_list|,
literal|""
argument_list|,
literal|"method"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|conn
operator|.
name|call
argument_list|(
name|msg
argument_list|,
name|QDBus
operator|::
name|Block
comment|/*WithGui*/
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|type
argument_list|()
operator|!=
name|QDBusMessage
operator|::
name|ReplyMessage
condition|)
return|return
literal|false
return|;
name|QTest
operator|::
name|qCompare
argument_list|(
name|MyObject
operator|::
name|path
argument_list|,
name|path
argument_list|,
literal|"MyObject::path"
argument_list|,
literal|"path"
argument_list|,
name|__FILE__
argument_list|,
name|__LINE__
argument_list|)
expr_stmt|;
return|return
operator|(
name|MyObject
operator|::
name|path
operator|==
name|path
operator|)
return|;
block|}
end_function
begin_function
DECL|function|callMethod
name|bool
name|tst_QDBusConnection
operator|::
name|callMethod
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|conn
parameter_list|,
specifier|const
name|QString
modifier|&
name|path
parameter_list|,
specifier|const
name|QString
modifier|&
name|interface
parameter_list|)
block|{
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|conn
operator|.
name|baseService
argument_list|()
argument_list|,
name|path
argument_list|,
name|interface
argument_list|,
literal|"method"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|conn
operator|.
name|call
argument_list|(
name|msg
argument_list|,
name|QDBus
operator|::
name|Block
comment|/*WithGui*/
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|type
argument_list|()
operator|!=
name|QDBusMessage
operator|::
name|ReplyMessage
condition|)
return|return
literal|false
return|;
name|QTest
operator|::
name|qCompare
argument_list|(
name|MyObjectWithoutInterface
operator|::
name|path
argument_list|,
name|path
argument_list|,
literal|"MyObjectWithoutInterface::path"
argument_list|,
literal|"path"
argument_list|,
name|__FILE__
argument_list|,
name|__LINE__
argument_list|)
expr_stmt|;
return|return
operator|(
name|MyObjectWithoutInterface
operator|::
name|path
operator|==
name|path
operator|)
operator|&&
name|MyObjectWithoutInterface
operator|::
name|interface
operator|==
name|interface
return|;
block|}
end_function
begin_function
DECL|function|callMethodPeer
name|bool
name|tst_QDBusConnection
operator|::
name|callMethodPeer
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|conn
parameter_list|,
specifier|const
name|QString
modifier|&
name|path
parameter_list|)
block|{
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
literal|""
argument_list|,
name|path
argument_list|,
literal|""
argument_list|,
literal|"method"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|conn
operator|.
name|call
argument_list|(
name|msg
argument_list|,
name|QDBus
operator|::
name|BlockWithGui
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|type
argument_list|()
operator|!=
name|QDBusMessage
operator|::
name|ReplyMessage
condition|)
return|return
literal|false
return|;
name|QTest
operator|::
name|qCompare
argument_list|(
name|MyObject
operator|::
name|path
argument_list|,
name|path
argument_list|,
literal|"MyObject::path"
argument_list|,
literal|"path"
argument_list|,
name|__FILE__
argument_list|,
name|__LINE__
argument_list|)
expr_stmt|;
return|return
operator|(
name|MyObject
operator|::
name|path
operator|==
name|path
operator|)
return|;
block|}
end_function
begin_class
DECL|class|TestObject
class|class
name|TestObject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|TestObject
name|TestObject
parameter_list|(
name|QObject
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|~TestObject
name|~
name|TestObject
parameter_list|()
block|{}
DECL|member|func
name|QString
name|func
decl_stmt|;
public|public
name|slots
public|:
DECL|function|test0
name|void
name|test0
parameter_list|()
block|{
name|func
operator|=
literal|"test0"
expr_stmt|;
block|}
DECL|function|test1
name|void
name|test1
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|func
operator|=
literal|"test1 "
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
DECL|function|test2
name|int
name|test2
parameter_list|()
block|{
name|func
operator|=
literal|"test2"
expr_stmt|;
return|return
literal|43
return|;
block|}
DECL|function|test3
name|int
name|test3
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|func
operator|=
literal|"test2"
expr_stmt|;
return|return
name|i
operator|+
literal|1
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|callSelf
name|void
name|tst_QDBusConnection
operator|::
name|callSelf
parameter_list|()
block|{
name|TestObject
name|testObject
decl_stmt|;
name|QDBusConnection
name|connection
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|connection
operator|.
name|registerObject
argument_list|(
literal|"/test"
argument_list|,
operator|&
name|testObject
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllContents
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|connection
operator|.
name|objectRegisteredAt
argument_list|(
literal|"/test"
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|testObject
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connection
operator|.
name|registerService
argument_list|(
name|serviceName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusInterface
name|interface
argument_list|(
name|serviceName
argument_list|()
argument_list|,
literal|"/test"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|interface
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|interface
operator|.
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"test0"
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testObject
operator|.
name|func
argument_list|,
name|QString
argument_list|(
literal|"test0"
argument_list|)
argument_list|)
expr_stmt|;
name|interface
operator|.
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"test1"
argument_list|,
literal|42
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|testObject
operator|.
name|func
argument_list|,
name|QString
argument_list|(
literal|"test1 42"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|interface
operator|.
name|call
argument_list|(
name|QDBus
operator|::
name|Block
argument_list|,
literal|"test2"
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|testObject
operator|.
name|func
argument_list|,
name|QString
argument_list|(
literal|"test2"
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|value
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|43
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|serviceName
argument_list|()
argument_list|,
literal|"/test"
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"test3"
argument_list|)
decl_stmt|;
name|msg
operator|<<
literal|44
expr_stmt|;
name|reply
operator|=
name|connection
operator|.
name|call
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|value
argument_list|(
literal|0
argument_list|)
operator|.
name|toInt
argument_list|()
argument_list|,
literal|45
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callSelfByAnotherName_data
name|void
name|tst_QDBusConnection
operator|::
name|callSelfByAnotherName_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"registerMethod"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"connection"
argument_list|)
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"connection-interface"
argument_list|)
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"direct"
argument_list|)
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callSelfByAnotherName
name|void
name|tst_QDBusConnection
operator|::
name|callSelfByAnotherName
parameter_list|()
block|{
specifier|static
name|int
name|counter
init|=
literal|0
decl_stmt|;
name|QString
name|sname
init|=
name|serviceName
argument_list|()
operator|+
name|QString
operator|::
name|number
argument_list|(
name|counter
operator|++
argument_list|)
decl_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|TestObject
name|testObject
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
literal|"/test"
argument_list|,
operator|&
name|testObject
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllContents
argument_list|)
argument_list|)
expr_stmt|;
name|con
operator|.
name|connect
argument_list|(
literal|"org.freedesktop.DBus"
argument_list|,
literal|"/org/freedesktop/DBus"
argument_list|,
literal|"org.freedesktop.DBus"
argument_list|,
literal|"NameOwnerChanged"
argument_list|,
name|QStringList
argument_list|()
operator|<<
name|sname
operator|<<
literal|""
argument_list|,
name|QString
argument_list|()
argument_list|,
operator|&
name|QTestEventLoop
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// register the name
name|QFETCH
argument_list|(
name|int
argument_list|,
name|registerMethod
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|registerMethod
condition|)
block|{
case|case
literal|0
case|:
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerService
argument_list|(
name|sname
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|QCOMPARE
argument_list|(
name|con
operator|.
name|interface
argument_list|()
operator|->
name|registerService
argument_list|(
name|sname
argument_list|)
operator|.
name|value
argument_list|()
argument_list|,
name|QDBusConnectionInterface
operator|::
name|ServiceRegistered
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
block|{
comment|// flag is DBUS_NAME_FLAG_DO_NOT_QUEUE = 0x04
comment|// reply is DBUS_REQUEST_NAME_REPLY_PRIMARY_OWNER = 1
name|QDBusReply
argument_list|<
name|uint
argument_list|>
name|reply
init|=
name|con
operator|.
name|interface
argument_list|()
operator|->
name|call
argument_list|(
literal|"RequestName"
argument_list|,
name|sname
argument_list|,
literal|4u
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|value
argument_list|()
argument_list|,
name|uint
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
struct|struct
name|Deregisterer
block|{
name|QDBusConnection
name|con
decl_stmt|;
name|QString
name|sname
decl_stmt|;
name|Deregisterer
parameter_list|(
specifier|const
name|QDBusConnection
modifier|&
name|con
parameter_list|,
specifier|const
name|QString
modifier|&
name|sname
parameter_list|)
member_init_list|:
name|con
argument_list|(
name|con
argument_list|)
member_init_list|,
name|sname
argument_list|(
name|sname
argument_list|)
block|{}
name|~
name|Deregisterer
parameter_list|()
block|{
name|con
operator|.
name|interface
argument_list|()
operator|->
name|unregisterService
argument_list|(
name|sname
argument_list|)
expr_stmt|;
block|}
block|}
name|deregisterer
argument_list|(
name|con
argument_list|,
name|sname
argument_list|)
struct|;
comment|// give the connection a chance to find out that we're good to go
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|con
operator|.
name|disconnect
argument_list|(
literal|"org.freedesktop.DBus"
argument_list|,
literal|"/org/freedesktop/DBus"
argument_list|,
literal|"org.freedesktop.DBus"
argument_list|,
literal|"NameOwnerChanged"
argument_list|,
name|QStringList
argument_list|()
operator|<<
name|sname
operator|<<
literal|""
argument_list|,
name|QString
argument_list|()
argument_list|,
operator|&
name|QTestEventLoop
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
comment|// make the call
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|sname
argument_list|,
literal|"/test"
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"test0"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|msg
argument_list|,
name|QDBus
operator|::
name|Block
argument_list|,
literal|1000
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|multipleInterfacesInQObject
name|void
name|tst_QDBusConnection
operator|::
name|multipleInterfacesInQObject
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|callMethod
argument_list|(
name|con
argument_list|,
literal|"/p1"
argument_list|)
argument_list|)
expr_stmt|;
name|MyObject
name|obj
decl_stmt|;
name|con
operator|.
name|registerObject
argument_list|(
literal|"/p1"
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllSlots
argument_list|)
expr_stmt|;
comment|// check if we can call the BaseObject's interface
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/p1"
argument_list|,
literal|"local.BaseObject"
argument_list|,
literal|"anotherMethod"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|msg
argument_list|,
name|QDBus
operator|::
name|Block
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|type
argument_list|()
argument_list|,
name|QDBusMessage
operator|::
name|ReplyMessage
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|arguments
argument_list|()
operator|.
name|count
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|slotsWithLessParameters
name|void
name|tst_QDBusConnection
operator|::
name|slotsWithLessParameters
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QDBusMessage
name|signal
init|=
name|QDBusMessage
operator|::
name|createSignal
argument_list|(
literal|"/"
argument_list|,
literal|"org.qtproject.TestCase"
argument_list|,
literal|"oneSignal"
argument_list|)
decl_stmt|;
name|signal
operator|<<
literal|"one parameter"
expr_stmt|;
name|signalsReceived
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|connect
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|signal
operator|.
name|path
argument_list|()
argument_list|,
name|signal
operator|.
name|interface
argument_list|()
argument_list|,
name|signal
operator|.
name|member
argument_list|()
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|oneSlot
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|send
argument_list|(
name|signal
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// disconnect and try with a signature
name|signalsReceived
operator|=
literal|0
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|disconnect
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|signal
operator|.
name|path
argument_list|()
argument_list|,
name|signal
operator|.
name|interface
argument_list|()
argument_list|,
name|signal
operator|.
name|member
argument_list|()
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|oneSlot
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|connect
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|signal
operator|.
name|path
argument_list|()
argument_list|,
name|signal
operator|.
name|interface
argument_list|()
argument_list|,
name|signal
operator|.
name|member
argument_list|()
argument_list|,
literal|"s"
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|oneSlot
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|send
argument_list|(
name|signal
argument_list|)
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|secondCallWithCallback
name|void
name|tst_QDBusConnection
operator|::
name|secondCallWithCallback
parameter_list|()
block|{
name|qDebug
argument_list|(
literal|"Hello"
argument_list|)
expr_stmt|;
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/test"
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"test0"
argument_list|)
decl_stmt|;
name|con
operator|.
name|callWithCallback
argument_list|(
name|msg
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|secondCallWithCallback
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|nestedCallWithCallback
name|void
name|tst_QDBusConnection
operator|::
name|nestedCallWithCallback
parameter_list|()
block|{
name|TestObject
name|testObject
decl_stmt|;
name|QDBusConnection
name|connection
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|connection
operator|.
name|registerObject
argument_list|(
literal|"/test"
argument_list|,
operator|&
name|testObject
argument_list|,
name|QDBusConnection
operator|::
name|ExportAllContents
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|connection
operator|.
name|baseService
argument_list|()
argument_list|,
literal|"/test"
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"ThisFunctionDoesntExist"
argument_list|)
decl_stmt|;
name|signalsReceived
operator|=
literal|0
expr_stmt|;
name|connection
operator|.
name|callWithCallback
argument_list|(
name|msg
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|secondCallWithCallback
argument_list|()
argument_list|)
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|signalsReceived
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|RaceConditionSignalWaiter
class|class
name|RaceConditionSignalWaiter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|member|count
name|int
name|count
decl_stmt|;
DECL|function|RaceConditionSignalWaiter
name|RaceConditionSignalWaiter
parameter_list|()
member_init_list|:
name|count
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|~RaceConditionSignalWaiter
specifier|virtual
name|~
name|RaceConditionSignalWaiter
parameter_list|()
block|{}
public|public
name|slots
public|:
DECL|function|countUp
name|void
name|countUp
parameter_list|()
block|{
operator|++
name|count
expr_stmt|;
emit|emit
name|done
argument_list|()
emit|;
block|}
signals|signals:
name|void
name|done
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|serviceRegistrationRaceCondition
name|void
name|tst_QDBusConnection
operator|::
name|serviceRegistrationRaceCondition
parameter_list|()
block|{
comment|// There was a race condition in the updating of list of name owners in
comment|// Qt D-Bus. When the user connects to a signal coming from a given
comment|// service, we must listen for NameOwnerChanged signals relevant to that
comment|// name and update when the owner changes. However, it's possible that we
comment|// receive in one chunk from the server both the NameOwnerChanged signal
comment|// about the service and the signal we're interested in. Since Qt D-Bus
comment|// posts events in order to handle the incoming signals, the update
comment|// happens too late.
specifier|const
name|QString
name|connectionName
init|=
literal|"testConnectionName"
decl_stmt|;
specifier|const
name|QString
name|serviceName
init|=
literal|"org.example.SecondaryName"
decl_stmt|;
name|QDBusConnection
name|session
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|session
operator|.
name|interface
argument_list|()
operator|->
name|isServiceRegistered
argument_list|(
name|serviceName
argument_list|)
argument_list|)
expr_stmt|;
comment|// connect to the signal:
name|RaceConditionSignalWaiter
name|recv
decl_stmt|;
name|session
operator|.
name|connect
argument_list|(
name|serviceName
argument_list|,
literal|"/"
argument_list|,
literal|"org.qtproject.TestCase"
argument_list|,
literal|"oneSignal"
argument_list|,
operator|&
name|recv
argument_list|,
name|SLOT
argument_list|(
name|countUp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// create a secondary connection and register a name
name|QDBusConnection
name|connection
init|=
name|QDBusConnection
operator|::
name|connectToBus
argument_list|(
name|QDBusConnection
operator|::
name|SessionBus
argument_list|,
name|connectionName
argument_list|)
decl_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromBus
argument_list|(
name|connectionName
argument_list|)
expr_stmt|;
comment|// disconnection happens when "connection" goes out of scope
name|QVERIFY
argument_list|(
name|connection
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|connection
operator|.
name|registerService
argument_list|(
name|serviceName
argument_list|)
argument_list|)
expr_stmt|;
comment|// send a signal
name|QDBusMessage
name|msg
init|=
name|QDBusMessage
operator|::
name|createSignal
argument_list|(
literal|"/"
argument_list|,
literal|"org.qtproject.TestCase"
argument_list|,
literal|"oneSignal"
argument_list|)
decl_stmt|;
name|connection
operator|.
name|send
argument_list|(
name|msg
argument_list|)
expr_stmt|;
comment|// make a blocking call just to be sure that the buffer was flushed
name|msg
operator|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
literal|"org.freedesktop.DBus"
argument_list|,
literal|"/org/freedesktop/DBus"
argument_list|,
literal|"org.freedesktop.DBus"
argument_list|,
literal|"NameHasOwner"
argument_list|)
expr_stmt|;
name|msg
operator|<<
name|connectionName
expr_stmt|;
name|connection
operator|.
name|call
argument_list|(
name|msg
argument_list|)
expr_stmt|;
comment|// ignore result
comment|// Now here's the race condition (more info on task QTBUG-15651):
comment|// the bus has most likely queued three signals for us to work on:
comment|// 1) NameOwnerChanged for the connection we created above
comment|// 2) NameOwnerChanged for the service we registered above
comment|// 3) The "oneSignal" signal we sent
comment|//
comment|// We'll most likely receive all three in one go from the server. We must
comment|// update the owner of serviceName before we start processing the
comment|// "oneSignal" signal.
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|connect
argument_list|(
operator|&
name|recv
argument_list|,
name|SIGNAL
argument_list|(
name|done
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|recv
operator|.
name|count
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_class
DECL|class|VirtualObject
class|class
name|VirtualObject
super|:
specifier|public
name|QDBusVirtualObject
block|{
name|Q_OBJECT
public|public:
DECL|function|VirtualObject
name|VirtualObject
parameter_list|()
member_init_list|:
name|success
argument_list|(
literal|true
argument_list|)
block|{}
DECL|function|introspect
name|QString
name|introspect
parameter_list|(
specifier|const
name|QString
modifier|&
comment|/* path */
parameter_list|)
specifier|const
block|{
return|return
name|QString
argument_list|()
return|;
block|}
DECL|function|handleMessage
name|bool
name|handleMessage
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|message
parameter_list|,
specifier|const
name|QDBusConnection
modifier|&
name|connection
parameter_list|)
block|{
operator|++
name|callCount
expr_stmt|;
name|lastMessage
operator|=
name|message
expr_stmt|;
if|if
condition|(
name|success
condition|)
block|{
name|QDBusMessage
name|reply
init|=
name|message
operator|.
name|createReply
argument_list|(
name|replyArguments
argument_list|)
decl_stmt|;
name|connection
operator|.
name|send
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
emit|emit
name|messageReceived
argument_list|(
name|message
argument_list|)
emit|;
return|return
name|success
return|;
block|}
signals|signals:
name|void
name|messageReceived
parameter_list|(
specifier|const
name|QDBusMessage
modifier|&
name|message
parameter_list|)
specifier|const
function_decl|;
public|public:
DECL|member|lastMessage
specifier|mutable
name|QDBusMessage
name|lastMessage
decl_stmt|;
DECL|member|replyArguments
name|QVariantList
name|replyArguments
decl_stmt|;
DECL|member|callCount
specifier|mutable
name|int
name|callCount
decl_stmt|;
DECL|member|success
name|bool
name|success
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|registerVirtualObject
name|void
name|tst_QDBusConnection
operator|::
name|registerVirtualObject
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|path
init|=
literal|"/tree/node"
decl_stmt|;
name|QString
name|childPath
init|=
literal|"/tree/node/child"
decl_stmt|;
name|QString
name|childChildPath
init|=
literal|"/tree/node/child/another"
decl_stmt|;
block|{
comment|// Register VirtualObject that handles child paths. Unregister by going out of scope.
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childChildPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|{
comment|// Register VirtualObject that handles child paths. Unregister by calling unregister.
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childChildPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|con
operator|.
name|unregisterObject
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Single node has no sub path handling.
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SingleNode
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Register VirtualObject that handles child paths. Try to register an object on a child path of that.
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
name|objectAtSubPath
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|registerObject
argument_list|(
name|path
argument_list|,
operator|&
name|objectAtSubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|registerObject
argument_list|(
name|childPath
argument_list|,
operator|&
name|objectAtSubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|obj
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Register object, make sure no SubPath handling object can be registered on a parent path.
name|QObject
name|objectAtSubPath
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
name|childPath
argument_list|,
operator|&
name|objectAtSubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|objectAtSubPath
argument_list|)
argument_list|)
expr_stmt|;
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
comment|// Register object, make sure no SubPath handling object can be registered on a parent path.
comment|// (same as above, but deeper)
name|QObject
name|objectAtSubPath
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerObject
argument_list|(
name|childChildPath
argument_list|,
operator|&
name|objectAtSubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childChildPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
operator|&
name|objectAtSubPath
argument_list|)
argument_list|)
expr_stmt|;
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|path
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|con
operator|.
name|objectRegisteredAt
argument_list|(
name|childChildPath
argument_list|)
argument_list|,
cast|static_cast
argument_list|<
name|QObject
operator|*
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callVirtualObject
name|void
name|tst_QDBusConnection
operator|::
name|callVirtualObject
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QDBusConnection
name|con2
init|=
name|QDBusConnection
operator|::
name|connectToBus
argument_list|(
name|QDBusConnection
operator|::
name|SessionBus
argument_list|,
literal|"con2"
argument_list|)
decl_stmt|;
name|QString
name|path
init|=
literal|"/tree/node"
decl_stmt|;
name|QString
name|childPath
init|=
literal|"/tree/node/child"
decl_stmt|;
comment|// register one object at root:
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
name|obj
operator|.
name|replyArguments
operator|<<
literal|42
operator|<<
literal|47u
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|obj
argument_list|,
name|SIGNAL
argument_list|(
name|messageReceived
argument_list|(
name|QDBusMessage
argument_list|)
argument_list|)
argument_list|,
operator|&
name|QTestEventLoop
operator|::
name|instance
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|exitLoop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|message
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|path
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"hello"
argument_list|)
decl_stmt|;
name|QDBusPendingCall
name|reply
init|=
name|con2
operator|.
name|asyncCall
argument_list|(
name|message
argument_list|)
decl_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|service
argument_list|()
argument_list|,
name|con2
operator|.
name|baseService
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|interface
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|path
argument_list|()
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|reply
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|reply
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|reply
operator|.
name|reply
argument_list|()
operator|.
name|arguments
argument_list|()
argument_list|,
name|obj
operator|.
name|replyArguments
argument_list|)
expr_stmt|;
comment|// call sub path
name|QDBusMessage
name|childMessage
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|childPath
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"helloChild"
argument_list|)
decl_stmt|;
name|obj
operator|.
name|replyArguments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|obj
operator|.
name|replyArguments
operator|<<
literal|99
expr_stmt|;
name|QDBusPendingCall
name|childReply
init|=
name|con2
operator|.
name|asyncCall
argument_list|(
name|childMessage
argument_list|)
decl_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|callCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|service
argument_list|()
argument_list|,
name|con2
operator|.
name|baseService
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|interface
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|path
argument_list|()
argument_list|,
name|childPath
argument_list|)
expr_stmt|;
name|childReply
operator|.
name|waitForFinished
argument_list|()
expr_stmt|;
name|QVERIFY
argument_list|(
name|childReply
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|childReply
operator|.
name|reply
argument_list|()
operator|.
name|arguments
argument_list|()
argument_list|,
name|obj
operator|.
name|replyArguments
argument_list|)
expr_stmt|;
comment|// let the call fail by having the virtual object return false
name|obj
operator|.
name|success
operator|=
literal|false
expr_stmt|;
name|QDBusMessage
name|errorMessage
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|childPath
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"someFunc"
argument_list|)
decl_stmt|;
name|QDBusPendingCall
name|errorReply
init|=
name|con2
operator|.
name|asyncCall
argument_list|(
name|errorMessage
argument_list|)
decl_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|errorReply
operator|.
name|isError
argument_list|()
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|errorReply
operator|.
name|reply
argument_list|()
operator|.
name|arguments
argument_list|()
expr_stmt|;
name|QCOMPARE
argument_list|(
name|errorReply
operator|.
name|reply
argument_list|()
operator|.
name|errorName
argument_list|()
argument_list|,
name|QString
argument_list|(
literal|"org.freedesktop.DBus.Error.UnknownObject"
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|disconnectFromBus
argument_list|(
literal|"con2"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|callVirtualObjectLocal
name|void
name|tst_QDBusConnection
operator|::
name|callVirtualObjectLocal
parameter_list|()
block|{
name|QDBusConnection
name|con
init|=
name|QDBusConnection
operator|::
name|sessionBus
argument_list|()
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|isConnected
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|path
init|=
literal|"/tree/node"
decl_stmt|;
name|QString
name|childPath
init|=
literal|"/tree/node/child"
decl_stmt|;
comment|// register one object at root:
name|VirtualObject
name|obj
decl_stmt|;
name|QVERIFY
argument_list|(
name|con
operator|.
name|registerVirtualObject
argument_list|(
name|path
argument_list|,
operator|&
name|obj
argument_list|,
name|QDBusConnection
operator|::
name|SubPath
argument_list|)
argument_list|)
expr_stmt|;
name|obj
operator|.
name|callCount
operator|=
literal|0
expr_stmt|;
name|obj
operator|.
name|replyArguments
operator|<<
literal|42
operator|<<
literal|47u
expr_stmt|;
name|QDBusMessage
name|message
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|path
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"hello"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|reply
init|=
name|con
operator|.
name|call
argument_list|(
name|message
argument_list|,
name|QDBus
operator|::
name|Block
argument_list|,
literal|5000
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|callCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|service
argument_list|()
argument_list|,
name|con
operator|.
name|baseService
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|interface
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|path
argument_list|()
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|replyArguments
argument_list|,
name|reply
operator|.
name|arguments
argument_list|()
argument_list|)
expr_stmt|;
name|obj
operator|.
name|replyArguments
operator|<<
name|QString
argument_list|(
literal|"alien abduction"
argument_list|)
expr_stmt|;
name|QDBusMessage
name|subPathMessage
init|=
name|QDBusMessage
operator|::
name|createMethodCall
argument_list|(
name|con
operator|.
name|baseService
argument_list|()
argument_list|,
name|childPath
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|"hello"
argument_list|)
decl_stmt|;
name|QDBusMessage
name|subPathReply
init|=
name|con
operator|.
name|call
argument_list|(
name|subPathMessage
argument_list|,
name|QDBus
operator|::
name|Block
argument_list|,
literal|5000
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|callCount
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|service
argument_list|()
argument_list|,
name|con
operator|.
name|baseService
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|interface
argument_list|()
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|lastMessage
operator|.
name|path
argument_list|()
argument_list|,
name|childPath
argument_list|)
expr_stmt|;
name|QCOMPARE
argument_list|(
name|obj
operator|.
name|replyArguments
argument_list|,
name|subPathReply
operator|.
name|arguments
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|member|path
name|QString
name|MyObject
operator|::
name|path
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|path
name|QString
name|MyObjectWithoutInterface
operator|::
name|path
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|interface
name|QString
name|MyObjectWithoutInterface
operator|::
name|interface
decl_stmt|;
end_decl_stmt
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDBusConnection
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdbusconnection.moc"
end_include
end_unit
