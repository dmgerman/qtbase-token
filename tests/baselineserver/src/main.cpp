begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_include
include|#
directive|include
file|"baselineserver.h"
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QCoreApplication
name|a
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QString
name|queryString
argument_list|(
name|qgetenv
argument_list|(
literal|"QUERY_STRING"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|queryString
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// run as CGI script
name|Report
operator|::
name|handleCGIQuery
argument_list|(
name|queryString
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
if|if
condition|(
name|a
operator|.
name|arguments
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"-testmapping"
argument_list|)
argument_list|)
condition|)
block|{
name|BaselineHandler
name|h
argument_list|(
name|QLS
argument_list|(
literal|"SomeRunId"
argument_list|)
argument_list|)
decl_stmt|;
name|h
operator|.
name|testPathMapping
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
name|BaselineServer
name|server
decl_stmt|;
if|if
condition|(
operator|!
name|server
operator|.
name|listen
argument_list|(
name|QHostAddress
operator|::
name|Any
argument_list|,
name|BaselineProtocol
operator|::
name|ServerPort
argument_list|)
condition|)
block|{
name|qWarning
argument_list|(
literal|"Failed to listen!"
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
name|qDebug
argument_list|()
operator|<<
literal|"\n*****"
operator|<<
name|argv
index|[
literal|0
index|]
operator|<<
literal|"started, ready to serve on port"
operator|<<
name|BaselineProtocol
operator|::
name|ServerPort
operator|<<
literal|"with baseline protocol version"
operator|<<
name|BaselineProtocol
operator|::
name|ProtocolVersion
operator|<<
literal|"*****\n"
expr_stmt|;
return|return
name|a
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
