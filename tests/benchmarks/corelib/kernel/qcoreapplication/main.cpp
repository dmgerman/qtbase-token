begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Robin Burchell<robin+qt@viroteck.net> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_class
DECL|class|QCoreApplicationBenchmark
class|class
name|QCoreApplicationBenchmark
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|event_posting_benchmark_data
parameter_list|()
function_decl|;
name|void
name|event_posting_benchmark
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|event_posting_benchmark_data
name|void
name|QCoreApplicationBenchmark
operator|::
name|event_posting_benchmark_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"50 events"
argument_list|)
operator|<<
literal|50
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100 events"
argument_list|)
operator|<<
literal|100
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"200 events"
argument_list|)
operator|<<
literal|200
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1000 events"
argument_list|)
operator|<<
literal|1000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10000 events"
argument_list|)
operator|<<
literal|10000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100000 events"
argument_list|)
operator|<<
literal|100000
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"1000000 events"
argument_list|)
operator|<<
literal|1000000
expr_stmt|;
block|}
end_function
begin_function
DECL|function|event_posting_benchmark
name|void
name|QCoreApplicationBenchmark
operator|::
name|event_posting_benchmark
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|int
name|type
init|=
name|QEvent
operator|::
name|registerEventType
argument_list|()
decl_stmt|;
name|QCoreApplication
modifier|*
name|app
init|=
name|QCoreApplication
operator|::
name|instance
argument_list|()
decl_stmt|;
comment|// benchmark posting& sending events
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
name|QCoreApplication
operator|::
name|postEvent
argument_list|(
name|app
argument_list|,
operator|new
name|QEvent
argument_list|(
name|QEvent
operator|::
name|Type
argument_list|(
name|type
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QCoreApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|QCoreApplicationBenchmark
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
