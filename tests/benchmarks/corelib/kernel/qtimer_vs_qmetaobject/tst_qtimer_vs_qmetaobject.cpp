begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_define
DECL|macro|INVOKE_COUNT
define|#
directive|define
name|INVOKE_COUNT
value|10000
end_define
begin_class
DECL|class|qtimer_vs_qmetaobject
class|class
name|qtimer_vs_qmetaobject
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|testZeroTimerSingleShot
parameter_list|()
function_decl|;
name|void
name|testQueuedInvokeMethod
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|InvokeCounter
class|class
name|InvokeCounter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|InvokeCounter
name|InvokeCounter
parameter_list|()
member_init_list|:
name|count
argument_list|(
literal|0
argument_list|)
block|{ }
empty_stmt|;
public|public
name|slots
public|:
DECL|function|invokeSlot
name|void
name|invokeSlot
parameter_list|()
block|{
name|count
operator|++
expr_stmt|;
if|if
condition|(
name|count
operator|==
name|INVOKE_COUNT
condition|)
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|exitLoop
argument_list|()
expr_stmt|;
block|}
protected|protected:
DECL|member|count
name|int
name|count
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|testZeroTimerSingleShot
name|void
name|qtimer_vs_qmetaobject
operator|::
name|testZeroTimerSingleShot
parameter_list|()
block|{
name|QBENCHMARK
block|{
name|InvokeCounter
name|invokeCounter
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|INVOKE_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|0
argument_list|,
operator|&
name|invokeCounter
argument_list|,
name|SLOT
argument_list|(
name|invokeSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|testQueuedInvokeMethod
name|void
name|qtimer_vs_qmetaobject
operator|::
name|testQueuedInvokeMethod
parameter_list|()
block|{
name|QBENCHMARK
block|{
name|InvokeCounter
name|invokeCounter
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|INVOKE_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|invokeCounter
argument_list|,
literal|"invokeSlot"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
block|}
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|qtimer_vs_qmetaobject
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qtimer_vs_qmetaobject.moc"
end_include
end_unit
