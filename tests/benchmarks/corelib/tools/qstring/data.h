begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|DATA_H
end_ifndef
begin_define
DECL|macro|DATA_H
define|#
directive|define
name|DATA_H
end_define
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_struct
DECL|struct|StringCollection
struct|struct
name|StringCollection
block|{
DECL|member|len
name|int
name|len
decl_stmt|;
DECL|member|offset1
DECL|member|offset2
name|int
name|offset1
decl_stmt|,
name|offset2
decl_stmt|;
DECL|member|align1
DECL|member|align2
name|ushort
name|align1
decl_stmt|,
name|align2
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
specifier|extern
specifier|const
name|ushort
name|stringCollectionData
index|[]
decl_stmt|;
end_decl_stmt
begin_decl_stmt
specifier|extern
specifier|const
name|StringCollection
name|stringCollection
index|[]
decl_stmt|;
end_decl_stmt
begin_decl_stmt
specifier|extern
specifier|const
name|int
name|stringCollectionCount
decl_stmt|;
end_decl_stmt
begin_struct
DECL|struct|StringData
struct|struct
name|StringData
block|{
DECL|member|entries
specifier|const
name|int
modifier|*
name|entries
decl_stmt|;
union|union
block|{
DECL|member|charData
specifier|const
name|char
modifier|*
name|charData
decl_stmt|;
DECL|member|ushortData
specifier|const
name|ushort
modifier|*
name|ushortData
decl_stmt|;
block|}
union|;
DECL|member|entryCount
name|int
name|entryCount
decl_stmt|;
DECL|member|maxLength
name|int
name|maxLength
decl_stmt|;
block|}
struct|;
end_struct
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// DATA_H
end_comment
end_unit
