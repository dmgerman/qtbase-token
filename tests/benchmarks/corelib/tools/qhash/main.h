begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtTest module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QString>
end_include
begin_decl_stmt
DECL|struct|QString
name|struct
name|Qt4String
range|:
name|QString
block|{
DECL|function|Qt4String
name|Qt4String
argument_list|()
block|{}
DECL|function|Qt4String
name|Qt4String
argument_list|(
specifier|const
name|QString
operator|&
name|s
argument_list|)
operator|:
name|QString
argument_list|(
argument|s
argument_list|)
block|{}
block|}
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QT_BEGIN_NAMESPACE
name|uint
name|qHash
parameter_list|(
specifier|const
name|Qt4String
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|QT_END_NAMESPACE
DECL|struct|QString
name|struct
name|String
range|:
name|QString
block|{
DECL|function|String
name|String
argument_list|()
block|{}
DECL|function|String
name|String
argument_list|(
specifier|const
name|QString
operator|&
name|s
argument_list|)
operator|:
name|QString
argument_list|(
argument|s
argument_list|)
block|{}
block|}
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QT_BEGIN_NAMESPACE
name|uint
name|qHash
parameter_list|(
specifier|const
name|String
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|QT_END_NAMESPACE
DECL|struct|QString
name|struct
name|JavaString
range|:
name|QString
block|{
DECL|function|JavaString
name|JavaString
argument_list|()
block|{}
DECL|function|JavaString
name|JavaString
argument_list|(
specifier|const
name|QString
operator|&
name|s
argument_list|)
operator|:
name|QString
argument_list|(
argument|s
argument_list|)
block|{}
block|}
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QT_BEGIN_NAMESPACE
name|uint
name|qHash
parameter_list|(
specifier|const
name|JavaString
modifier|&
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
