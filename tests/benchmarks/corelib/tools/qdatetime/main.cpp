begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QLocale>
end_include
begin_include
include|#
directive|include
file|<QTest>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_class
DECL|class|tst_QDateTime
class|class
name|tst_QDateTime
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
name|enum
type|{
DECL|enumerator|SECS_PER_DAY
name|SECS_PER_DAY
init|=
literal|86400
decl_stmt|,
DECL|enumerator|MSECS_PER_DAY
name|MSECS_PER_DAY
init|=
literal|86400000
decl_stmt|,
DECL|enumerator|JULIAN_DAY_1950
name|JULIAN_DAY_1950
init|=
literal|2433283
decl_stmt|,
DECL|enumerator|JULIAN_DAY_1960
name|JULIAN_DAY_1960
init|=
literal|2436935
decl_stmt|,
DECL|enumerator|JULIAN_DAY_2010
name|JULIAN_DAY_2010
init|=
literal|2455198
decl_stmt|,
DECL|enumerator|JULIAN_DAY_2011
name|JULIAN_DAY_2011
init|=
literal|2455563
decl_stmt|,
DECL|enumerator|JULIAN_DAY_2020
name|JULIAN_DAY_2020
init|=
literal|2458850
decl_stmt|,
DECL|enumerator|JULIAN_DAY_2050
name|JULIAN_DAY_2050
init|=
literal|2469808
decl_stmt|,
DECL|enumerator|JULIAN_DAY_2060
name|JULIAN_DAY_2060
init|=
literal|2473460
block|}
class|;
end_class
begin_private
private|private
name|Q_SLOTS
private|:
name|void
name|create
parameter_list|()
function_decl|;
name|void
name|isNull
parameter_list|()
function_decl|;
name|void
name|isValid
parameter_list|()
function_decl|;
name|void
name|date
parameter_list|()
function_decl|;
name|void
name|time
parameter_list|()
function_decl|;
name|void
name|timeSpec
parameter_list|()
function_decl|;
name|void
name|offsetFromUtc
parameter_list|()
function_decl|;
name|void
name|timeZoneAbbreviation
parameter_list|()
function_decl|;
name|void
name|toMSecsSinceEpoch
parameter_list|()
function_decl|;
name|void
name|toMSecsSinceEpoch1950
parameter_list|()
function_decl|;
name|void
name|toMSecsSinceEpoch2050
parameter_list|()
function_decl|;
name|void
name|toTime_t
parameter_list|()
function_decl|;
name|void
name|setDate
parameter_list|()
function_decl|;
name|void
name|setTime
parameter_list|()
function_decl|;
name|void
name|setTimeSpec
parameter_list|()
function_decl|;
name|void
name|setOffsetFromUtc
parameter_list|()
function_decl|;
name|void
name|setMSecsSinceEpoch
parameter_list|()
function_decl|;
name|void
name|setTime_t
parameter_list|()
function_decl|;
name|void
name|toString
parameter_list|()
function_decl|;
name|void
name|toStringTextFormat
parameter_list|()
function_decl|;
name|void
name|toStringIsoFormat
parameter_list|()
function_decl|;
name|void
name|addDays
parameter_list|()
function_decl|;
name|void
name|addMonths
parameter_list|()
function_decl|;
name|void
name|addYears
parameter_list|()
function_decl|;
name|void
name|addSecs
parameter_list|()
function_decl|;
name|void
name|addMSecs
parameter_list|()
function_decl|;
name|void
name|toTimeSpec
parameter_list|()
function_decl|;
name|void
name|toOffsetFromUtc
parameter_list|()
function_decl|;
name|void
name|daysTo
parameter_list|()
function_decl|;
name|void
name|secsTo
parameter_list|()
function_decl|;
name|void
name|msecsTo
parameter_list|()
function_decl|;
name|void
name|equivalent
parameter_list|()
function_decl|;
name|void
name|equivalentUtc
parameter_list|()
function_decl|;
name|void
name|lessThan
parameter_list|()
function_decl|;
name|void
name|lessThanUtc
parameter_list|()
function_decl|;
name|void
name|currentDateTime
parameter_list|()
function_decl|;
name|void
name|currentDate
parameter_list|()
function_decl|;
name|void
name|currentTime
parameter_list|()
function_decl|;
name|void
name|currentDateTimeUtc
parameter_list|()
function_decl|;
name|void
name|currentMSecsSinceEpoch
parameter_list|()
function_decl|;
name|void
name|fromString
parameter_list|()
function_decl|;
name|void
name|fromStringText
parameter_list|()
function_decl|;
name|void
name|fromStringIso
parameter_list|()
function_decl|;
name|void
name|fromTime_t
parameter_list|()
function_decl|;
name|void
name|fromMSecsSinceEpoch
parameter_list|()
function_decl|;
name|void
name|fromMSecsSinceEpochUtc
parameter_list|()
function_decl|;
end_private
begin_function
unit|};
DECL|function|create
name|void
name|tst_QDateTime
operator|::
name|create
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
block|{
name|QDateTime
name|test
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|Q_UNUSED
argument_list|(
argument|test
argument_list|)
block|}
block|}
block|}
end_function
begin_function
DECL|function|isNull
name|void
name|tst_QDateTime
operator|::
name|isNull
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|isValid
name|void
name|tst_QDateTime
operator|::
name|isValid
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|isValid
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|date
name|void
name|tst_QDateTime
operator|::
name|date
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|date
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|time
name|void
name|tst_QDateTime
operator|::
name|time
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|time
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|timeSpec
name|void
name|tst_QDateTime
operator|::
name|timeSpec
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|timeSpec
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|offsetFromUtc
name|void
name|tst_QDateTime
operator|::
name|offsetFromUtc
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|offsetFromUtc
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|timeZoneAbbreviation
name|void
name|tst_QDateTime
operator|::
name|timeZoneAbbreviation
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|timeZoneAbbreviation
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toMSecsSinceEpoch
name|void
name|tst_QDateTime
operator|::
name|toMSecsSinceEpoch
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toMSecsSinceEpoch
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toMSecsSinceEpoch1950
name|void
name|tst_QDateTime
operator|::
name|toMSecsSinceEpoch1950
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_1950
init|;
name|jd
operator|<
name|JULIAN_DAY_1960
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toMSecsSinceEpoch
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toMSecsSinceEpoch2050
name|void
name|tst_QDateTime
operator|::
name|toMSecsSinceEpoch2050
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2050
init|;
name|jd
operator|<
name|JULIAN_DAY_2060
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toMSecsSinceEpoch
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toTime_t
name|void
name|tst_QDateTime
operator|::
name|toTime_t
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toTime_t
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setDate
name|void
name|tst_QDateTime
operator|::
name|setDate
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
name|QDateTime
name|test
decl|,
name|list
control|)
name|test
operator|.
name|setDate
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setTime
name|void
name|tst_QDateTime
operator|::
name|setTime
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
name|QDateTime
name|test
decl|,
name|list
control|)
name|test
operator|.
name|setTime
argument_list|(
name|QTime
argument_list|(
literal|12
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setTimeSpec
name|void
name|tst_QDateTime
operator|::
name|setTimeSpec
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
name|QDateTime
name|test
decl|,
name|list
control|)
name|test
operator|.
name|setTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setOffsetFromUtc
name|void
name|tst_QDateTime
operator|::
name|setOffsetFromUtc
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
name|QDateTime
name|test
decl|,
name|list
control|)
name|test
operator|.
name|setOffsetFromUtc
argument_list|(
literal|3600
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setMSecsSinceEpoch
name|void
name|tst_QDateTime
operator|::
name|setMSecsSinceEpoch
parameter_list|()
block|{
name|qint64
name|msecs
init|=
name|qint64
argument_list|(
name|JULIAN_DAY_2010
operator|+
literal|180
argument_list|)
operator|*
name|MSECS_PER_DAY
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
name|QDateTime
name|test
decl|,
name|list
control|)
name|test
operator|.
name|setMSecsSinceEpoch
argument_list|(
name|msecs
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setTime_t
name|void
name|tst_QDateTime
operator|::
name|setTime_t
parameter_list|()
block|{
name|time_t
name|secs
init|=
name|time_t
argument_list|(
name|JULIAN_DAY_2010
operator|+
literal|180
argument_list|)
operator|*
name|SECS_PER_DAY
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
name|QDateTime
name|test
decl|,
name|list
control|)
name|test
operator|.
name|setTime_t
argument_list|(
name|secs
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toString
name|void
name|tst_QDateTime
operator|::
name|toString
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2011
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toString
argument_list|(
name|QStringLiteral
argument_list|(
literal|"yyy-MM-dd hh:mm:ss.zzz t"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toStringTextFormat
name|void
name|tst_QDateTime
operator|::
name|toStringTextFormat
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2011
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|TextDate
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toStringIsoFormat
name|void
name|tst_QDateTime
operator|::
name|toStringIsoFormat
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2011
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toString
argument_list|(
name|Qt
operator|::
name|ISODate
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addDays
name|void
name|tst_QDateTime
operator|::
name|addDays
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|addDays
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addMonths
name|void
name|tst_QDateTime
operator|::
name|addMonths
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|addMonths
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addYears
name|void
name|tst_QDateTime
operator|::
name|addYears
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|addYears
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addSecs
name|void
name|tst_QDateTime
operator|::
name|addSecs
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|addSecs
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addMSecs
name|void
name|tst_QDateTime
operator|::
name|addMSecs
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|addMSecs
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toTimeSpec
name|void
name|tst_QDateTime
operator|::
name|toTimeSpec
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toTimeSpec
argument_list|(
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|toOffsetFromUtc
name|void
name|tst_QDateTime
operator|::
name|toOffsetFromUtc
parameter_list|()
block|{
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|toOffsetFromUtc
argument_list|(
literal|3600
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|daysTo
name|void
name|tst_QDateTime
operator|::
name|daysTo
parameter_list|()
block|{
name|QDateTime
name|other
init|=
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|qint64
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
operator|*
name|MSECS_PER_DAY
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|daysTo
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|secsTo
name|void
name|tst_QDateTime
operator|::
name|secsTo
parameter_list|()
block|{
name|QDateTime
name|other
init|=
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|qint64
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
operator|*
name|MSECS_PER_DAY
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|secsTo
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|msecsTo
name|void
name|tst_QDateTime
operator|::
name|msecsTo
parameter_list|()
block|{
name|QDateTime
name|other
init|=
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|qint64
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
operator|*
name|MSECS_PER_DAY
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|test
operator|.
name|msecsTo
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|equivalent
name|void
name|tst_QDateTime
operator|::
name|equivalent
parameter_list|()
block|{
name|bool
name|result
decl_stmt|;
name|QDateTime
name|other
init|=
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|qint64
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
operator|*
name|MSECS_PER_DAY
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|result
operator|=
operator|(
name|test
operator|==
name|other
operator|)
expr_stmt|;
block|}
name|Q_UNUSED
argument_list|(
argument|result
argument_list|)
block|}
end_function
begin_function
DECL|function|equivalentUtc
name|void
name|tst_QDateTime
operator|::
name|equivalentUtc
parameter_list|()
block|{
name|bool
name|result
init|=
literal|false
decl_stmt|;
name|QDateTime
name|other
init|=
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|qint64
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
operator|*
name|MSECS_PER_DAY
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|result
operator|=
operator|(
name|test
operator|==
name|other
operator|)
expr_stmt|;
block|}
name|Q_UNUSED
argument_list|(
argument|result
argument_list|)
block|}
end_function
begin_function
DECL|function|lessThan
name|void
name|tst_QDateTime
operator|::
name|lessThan
parameter_list|()
block|{
name|bool
name|result
init|=
literal|false
decl_stmt|;
name|QDateTime
name|other
init|=
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|qint64
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
operator|*
name|MSECS_PER_DAY
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|result
operator|=
operator|(
name|test
operator|<
name|other
operator|)
expr_stmt|;
block|}
name|Q_UNUSED
argument_list|(
argument|result
argument_list|)
block|}
end_function
begin_function
DECL|function|lessThanUtc
name|void
name|tst_QDateTime
operator|::
name|lessThanUtc
parameter_list|()
block|{
name|bool
name|result
init|=
literal|false
decl_stmt|;
name|QDateTime
name|other
init|=
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|qint64
argument_list|(
name|JULIAN_DAY_2010
argument_list|)
operator|*
name|MSECS_PER_DAY
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QDateTime
argument_list|>
name|list
decl_stmt|;
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|list
operator|.
name|append
argument_list|(
name|QDateTime
argument_list|(
name|QDate
operator|::
name|fromJulianDay
argument_list|(
name|jd
argument_list|)
argument_list|,
name|QTime
operator|::
name|fromMSecsSinceStartOfDay
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
foreach|foreach
control|(
specifier|const
name|QDateTime
modifier|&
name|test
decl|,
name|list
control|)
name|result
operator|=
operator|(
name|test
operator|<
name|other
operator|)
expr_stmt|;
block|}
name|Q_UNUSED
argument_list|(
argument|result
argument_list|)
block|}
end_function
begin_function
DECL|function|currentDateTime
name|void
name|tst_QDateTime
operator|::
name|currentDateTime
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|currentDate
name|void
name|tst_QDateTime
operator|::
name|currentDate
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QDate
operator|::
name|currentDate
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|currentTime
name|void
name|tst_QDateTime
operator|::
name|currentTime
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QTime
operator|::
name|currentTime
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|currentDateTimeUtc
name|void
name|tst_QDateTime
operator|::
name|currentDateTimeUtc
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QDateTime
operator|::
name|currentDateTimeUtc
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|currentMSecsSinceEpoch
name|void
name|tst_QDateTime
operator|::
name|currentMSecsSinceEpoch
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QDateTime
operator|::
name|currentMSecsSinceEpoch
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromString
name|void
name|tst_QDateTime
operator|::
name|fromString
parameter_list|()
block|{
name|QString
name|format
init|=
literal|"yyy-MM-dd hh:mm:ss.zzz t"
decl_stmt|;
name|QString
name|input
init|=
literal|"2010-01-01 13:12:11.999 UTC"
decl_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QDateTime
operator|::
name|fromString
argument_list|(
name|input
argument_list|,
name|format
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromStringText
name|void
name|tst_QDateTime
operator|::
name|fromStringText
parameter_list|()
block|{
name|QString
name|input
init|=
literal|"Wed Jan 2 01:02:03.000 2013 GMT"
decl_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QDateTime
operator|::
name|fromString
argument_list|(
name|input
argument_list|,
name|Qt
operator|::
name|TextDate
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromStringIso
name|void
name|tst_QDateTime
operator|::
name|fromStringIso
parameter_list|()
block|{
name|QString
name|input
init|=
literal|"2010-01-01T13:28:34.999Z"
decl_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
name|QDateTime
operator|::
name|fromString
argument_list|(
name|input
argument_list|,
name|Qt
operator|::
name|ISODate
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromTime_t
name|void
name|tst_QDateTime
operator|::
name|fromTime_t
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|QDateTime
operator|::
name|fromTime_t
argument_list|(
name|jd
operator|*
name|SECS_PER_DAY
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromMSecsSinceEpoch
name|void
name|tst_QDateTime
operator|::
name|fromMSecsSinceEpoch
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|jd
operator|*
name|MSECS_PER_DAY
argument_list|,
name|Qt
operator|::
name|LocalTime
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fromMSecsSinceEpochUtc
name|void
name|tst_QDateTime
operator|::
name|fromMSecsSinceEpochUtc
parameter_list|()
block|{
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|jd
init|=
name|JULIAN_DAY_2010
init|;
name|jd
operator|<
name|JULIAN_DAY_2020
condition|;
operator|++
name|jd
control|)
name|QDateTime
operator|::
name|fromMSecsSinceEpoch
argument_list|(
name|jd
operator|*
name|MSECS_PER_DAY
argument_list|,
name|Qt
operator|::
name|UTC
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDateTime
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
