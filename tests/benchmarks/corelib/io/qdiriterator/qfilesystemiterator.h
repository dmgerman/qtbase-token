begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QFILESYSTEMITERATOR_H
end_ifndef
begin_define
DECL|macro|QFILESYSTEMITERATOR_H
define|#
directive|define
name|QFILESYSTEMITERATOR_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qdir.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|namespace
name|QDirIteratorTest
block|{
name|class
name|QFileSystemIteratorPrivate
decl_stmt|;
name|class
comment|//Q_CORE_EXPORT
name|QFileSystemIterator
block|{
name|public
label|:
enum|enum
name|IteratorFlag
block|{
name|NoIteratorFlags
init|=
literal|0x0
block|,
name|FollowSymlinks
init|=
literal|0x1
block|,
name|Subdirectories
init|=
literal|0x2
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|IteratorFlags
argument_list|,
argument|IteratorFlag
argument_list|)
name|QFileSystemIterator
argument_list|(
argument|const QDir&dir
argument_list|,
argument|IteratorFlags flags = NoIteratorFlags
argument_list|)
empty_stmt|;
name|QFileSystemIterator
argument_list|(
argument|const QString&path
argument_list|,
argument|IteratorFlags flags = NoIteratorFlags
argument_list|)
empty_stmt|;
name|QFileSystemIterator
argument_list|(
argument|const QString&path
argument_list|,
argument|QDir::Filters filter
argument_list|,
argument|IteratorFlags flags = NoIteratorFlags
argument_list|)
empty_stmt|;
name|QFileSystemIterator
argument_list|(
argument|const QString&path
argument_list|,
argument|const QStringList&nameFilters
argument_list|,
argument|QDir::Filters filters = QDir::NoFilter
argument_list|,
argument|IteratorFlags flags = NoIteratorFlags
argument_list|)
empty_stmt|;
name|virtual
operator|~
name|QFileSystemIterator
argument_list|()
expr_stmt|;
name|void
name|next
parameter_list|()
function_decl|;
name|bool
name|atEnd
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|fileName
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|filePath
argument_list|()
specifier|const
expr_stmt|;
name|QFileInfo
name|fileInfo
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|path
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|Q_DISABLE_COPY
argument_list|(
argument|QFileSystemIterator
argument_list|)
name|QFileSystemIteratorPrivate
modifier|*
name|d
decl_stmt|;
name|friend
name|class
name|QDir
decl_stmt|;
block|}
empty_stmt|;
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QFileSystemIterator::IteratorFlags
argument_list|)
block|}
end_decl_stmt
begin_comment
comment|// namespace QDirIteratorTest
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
