begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_class
DECL|class|tst_QMimeDatabase
class|class
name|tst_QMimeDatabase
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|inheritsPerformance
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|inheritsPerformance
name|void
name|tst_QMimeDatabase
operator|::
name|inheritsPerformance
parameter_list|()
block|{
comment|// Check performance of inherits().
comment|// This benchmark (which started in 2009 in kmimetypetest.cpp) uses 40 mimetypes.
name|QStringList
name|mimeTypes
decl_stmt|;
name|mimeTypes
operator|<<
name|QLatin1String
argument_list|(
literal|"image/jpeg"
argument_list|)
operator|<<
name|QLatin1String
argument_list|(
literal|"image/png"
argument_list|)
operator|<<
name|QLatin1String
argument_list|(
literal|"image/tiff"
argument_list|)
operator|<<
name|QLatin1String
argument_list|(
literal|"text/plain"
argument_list|)
operator|<<
name|QLatin1String
argument_list|(
literal|"text/html"
argument_list|)
expr_stmt|;
name|mimeTypes
operator|+=
name|mimeTypes
expr_stmt|;
name|mimeTypes
operator|+=
name|mimeTypes
expr_stmt|;
name|mimeTypes
operator|+=
name|mimeTypes
expr_stmt|;
name|QCOMPARE
argument_list|(
name|mimeTypes
operator|.
name|count
argument_list|()
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|QMimeDatabase
name|db
decl_stmt|;
name|QMimeType
name|mime
init|=
name|db
operator|.
name|mimeTypeForName
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"text/x-chdr"
argument_list|)
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|mime
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|QString
name|match
decl_stmt|;
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|mt
decl|,
name|mimeTypes
control|)
block|{
if|if
condition|(
name|mime
operator|.
name|inherits
argument_list|(
name|mt
argument_list|)
condition|)
block|{
name|match
operator|=
name|mt
expr_stmt|;
comment|// of course there would normally be a "break" here, but we're testing worse-case
comment|// performance here
block|}
block|}
name|QCOMPARE
argument_list|(
name|match
argument_list|,
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Numbers from 2011, in release mode:
comment|// KDE 4.7 numbers: 0.21 msec / 494,000 ticks / 568,345 instr. loads per iteration
comment|// QMimeBinaryProvider (with Qt 5): 0.16 msec / NA / 416,049 instr. reads per iteration
comment|// QMimeXmlProvider (with Qt 5): 0.062 msec / NA / 172,889 instr. reads per iteration
comment|//   (but the startup time is way higher)
comment|// And memory usage is flat at 200K with QMimeBinaryProvider, while it peaks at 6 MB when
comment|// parsing XML, and then keeps being around 4.5 MB for all the in-memory hashes.
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QMimeDatabase
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
