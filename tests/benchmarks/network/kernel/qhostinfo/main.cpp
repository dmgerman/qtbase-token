begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|<QHostInfo>
end_include
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_include
include|#
directive|include
file|<qtesteventloop.h>
end_include
begin_include
include|#
directive|include
file|"private/qhostinfo_p.h"
end_include
begin_class
DECL|class|tst_qhostinfo
class|class
name|tst_qhostinfo
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public
name|slots
public|:
name|void
name|init
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|lookupSpeed_data
parameter_list|()
function_decl|;
name|void
name|lookupSpeed
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|SignalReceiver
class|class
name|SignalReceiver
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|SignalReceiver
name|SignalReceiver
parameter_list|(
name|int
name|nrc
parameter_list|)
member_init_list|:
name|receiveCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|neededReceiveCount
argument_list|(
name|nrc
argument_list|)
block|{}
empty_stmt|;
DECL|member|receiveCount
name|int
name|receiveCount
decl_stmt|;
DECL|member|neededReceiveCount
name|int
name|neededReceiveCount
decl_stmt|;
public|public
name|slots
public|:
DECL|function|resultsReady
name|void
name|resultsReady
parameter_list|(
specifier|const
name|QHostInfo
parameter_list|)
block|{
name|receiveCount
operator|++
expr_stmt|;
if|if
condition|(
name|receiveCount
operator|==
name|neededReceiveCount
condition|)
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|exitLoop
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|init
name|void
name|tst_qhostinfo
operator|::
name|init
parameter_list|()
block|{
comment|// delete the cache so inidividual testcase results are independent from each other
name|qt_qhostinfo_clear_cache
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|lookupSpeed_data
name|void
name|tst_qhostinfo
operator|::
name|lookupSpeed_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"cache"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"WithCache"
argument_list|)
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"WithoutCache"
argument_list|)
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|lookupSpeed
name|void
name|tst_qhostinfo
operator|::
name|lookupSpeed
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|qt_qhostinfo_enable_cache
argument_list|(
name|cache
argument_list|)
expr_stmt|;
name|QStringList
name|hostnameList
decl_stmt|;
name|hostnameList
operator|<<
literal|"www.ovi.com"
operator|<<
literal|"www.nokia.com"
operator|<<
literal|"qt-project.org"
operator|<<
literal|"www.trolltech.com"
operator|<<
literal|"troll.no"
operator|<<
literal|"www.qtcentre.org"
operator|<<
literal|"forum.nokia.com"
operator|<<
literal|"www.forum.nokia.com"
operator|<<
literal|"wiki.forum.nokia.com"
operator|<<
literal|"www.nokia.no"
operator|<<
literal|"nokia.de"
operator|<<
literal|"127.0.0.1"
operator|<<
literal|"----"
expr_stmt|;
comment|// also add some duplicates:
name|hostnameList
operator|<<
literal|"www.nokia.com"
operator|<<
literal|"127.0.0.1"
operator|<<
literal|"www.trolltech.com"
expr_stmt|;
comment|// and some more
name|hostnameList
operator|<<
name|hostnameList
expr_stmt|;
specifier|const
name|int
name|COUNT
init|=
name|hostnameList
operator|.
name|size
argument_list|()
decl_stmt|;
name|SignalReceiver
name|receiver
argument_list|(
name|COUNT
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hostnameList
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|QHostInfo
operator|::
name|lookupHost
argument_list|(
name|hostnameList
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
operator|&
name|receiver
argument_list|,
name|SLOT
argument_list|(
name|resultsReady
argument_list|(
name|QHostInfo
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|enterLoop
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|QTestEventLoop
operator|::
name|instance
argument_list|()
operator|.
name|timeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_qhostinfo
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
