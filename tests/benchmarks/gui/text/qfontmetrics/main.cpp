begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QFont>
end_include
begin_include
include|#
directive|include
file|<QFontMetrics>
end_include
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_comment
comment|//this test benchmarks the once-off (per font configuration) cost
end_comment
begin_comment
comment|//associated with using QFontMetrics
end_comment
begin_class
DECL|class|tst_QFontMetrics
class|class
name|tst_QFontMetrics
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QFontMetrics
name|tst_QFontMetrics
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|fontmetrics_create
parameter_list|()
function_decl|;
name|void
name|fontmetrics_create_once_loaded
parameter_list|()
function_decl|;
name|void
name|fontmetrics_height
parameter_list|()
function_decl|;
name|void
name|fontmetrics_height_once_loaded
parameter_list|()
function_decl|;
private|private:
name|void
name|testQFontMetrics
parameter_list|(
specifier|const
name|QFontMetrics
modifier|&
name|fm
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|testQFontMetrics
name|void
name|tst_QFontMetrics
operator|::
name|testQFontMetrics
parameter_list|(
specifier|const
name|QFontMetrics
modifier|&
name|fm
parameter_list|)
block|{
name|int
name|fontHeight
init|=
name|fm
operator|.
name|height
argument_list|()
decl_stmt|;
name|Q_UNUSED
argument_list|(
argument|fontHeight
argument_list|)
block|}
end_function
begin_function
DECL|function|fontmetrics_create
name|void
name|tst_QFontMetrics
operator|::
name|fontmetrics_create
parameter_list|()
block|{
name|QBENCHMARK
block|{
name|QFont
name|boldfont
init|=
name|QGuiApplication
operator|::
name|font
argument_list|()
decl_stmt|;
name|boldfont
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|boldfont
operator|.
name|setPointSize
argument_list|(
name|boldfont
operator|.
name|pointSize
argument_list|()
operator|*
literal|1.5
argument_list|)
expr_stmt|;
name|QFontMetrics
name|bfm
argument_list|(
name|boldfont
argument_list|)
decl_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fontmetrics_create_once_loaded
name|void
name|tst_QFontMetrics
operator|::
name|fontmetrics_create_once_loaded
parameter_list|()
block|{
name|QBENCHMARK
block|{
name|QFont
name|boldfont
init|=
name|QGuiApplication
operator|::
name|font
argument_list|()
decl_stmt|;
name|boldfont
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|boldfont
operator|.
name|setPointSize
argument_list|(
name|boldfont
operator|.
name|pointSize
argument_list|()
operator|*
literal|1.5
argument_list|)
expr_stmt|;
name|QFontMetrics
name|bfm
argument_list|(
name|boldfont
argument_list|)
decl_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fontmetrics_height
name|void
name|tst_QFontMetrics
operator|::
name|fontmetrics_height
parameter_list|()
block|{
name|QFont
name|boldfont
init|=
name|QGuiApplication
operator|::
name|font
argument_list|()
decl_stmt|;
name|boldfont
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|boldfont
operator|.
name|setPointSize
argument_list|(
name|boldfont
operator|.
name|pointSize
argument_list|()
operator|*
literal|1.5
argument_list|)
expr_stmt|;
name|QFontMetrics
name|bfm
argument_list|(
name|boldfont
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|testQFontMetrics
argument_list|(
name|bfm
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fontmetrics_height_once_loaded
name|void
name|tst_QFontMetrics
operator|::
name|fontmetrics_height_once_loaded
parameter_list|()
block|{
name|QFont
name|boldfont
init|=
name|QGuiApplication
operator|::
name|font
argument_list|()
decl_stmt|;
name|boldfont
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|boldfont
operator|.
name|setPointSize
argument_list|(
name|boldfont
operator|.
name|pointSize
argument_list|()
operator|*
literal|1.5
argument_list|)
expr_stmt|;
name|QFontMetrics
name|bfm
argument_list|(
name|boldfont
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|testQFontMetrics
argument_list|(
name|bfm
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QFontMetrics
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
