begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_include
include|#
directive|include
file|"dummyobject.h"
end_include
begin_include
include|#
directive|include
file|"dummyanimation.h"
end_include
begin_include
include|#
directive|include
file|"rectanimation.h"
end_include
begin_define
DECL|macro|ITERATION_COUNT
define|#
directive|define
name|ITERATION_COUNT
value|10e3
end_define
begin_class
DECL|class|tst_qanimation
class|class
name|tst_qanimation
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|itemPropertyAnimation
parameter_list|()
function_decl|;
DECL|function|itemPropertyAnimation_data
name|void
name|itemPropertyAnimation_data
parameter_list|()
block|{
name|data
argument_list|()
expr_stmt|;
block|}
name|void
name|dummyAnimation
parameter_list|()
function_decl|;
DECL|function|dummyAnimation_data
name|void
name|dummyAnimation_data
parameter_list|()
block|{
name|data
argument_list|()
expr_stmt|;
block|}
name|void
name|dummyPropertyAnimation
parameter_list|()
function_decl|;
DECL|function|dummyPropertyAnimation_data
name|void
name|dummyPropertyAnimation_data
parameter_list|()
block|{
name|data
argument_list|()
expr_stmt|;
block|}
name|void
name|rectAnimation
parameter_list|()
function_decl|;
DECL|function|rectAnimation_data
name|void
name|rectAnimation_data
parameter_list|()
block|{
name|data
argument_list|()
expr_stmt|;
block|}
DECL|function|floatAnimation_data
name|void
name|floatAnimation_data
parameter_list|()
block|{
name|data
argument_list|()
expr_stmt|;
block|}
name|void
name|floatAnimation
parameter_list|()
function_decl|;
private|private:
name|void
name|data
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|data
name|void
name|tst_qanimation
operator|::
name|data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"started"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"NotRunning"
argument_list|)
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Running"
argument_list|)
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemPropertyAnimation
name|void
name|tst_qanimation
operator|::
name|itemPropertyAnimation
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|started
argument_list|)
expr_stmt|;
name|QGraphicsWidget
name|item
decl_stmt|;
comment|//then the property animation
block|{
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|item
argument_list|,
literal|"pos"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
name|ITERATION_COUNT
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|QPointF
argument_list|(
name|ITERATION_COUNT
argument_list|,
name|ITERATION_COUNT
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|started
condition|)
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ITERATION_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|dummyAnimation
name|void
name|tst_qanimation
operator|::
name|dummyAnimation
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|started
argument_list|)
expr_stmt|;
name|DummyObject
name|dummy
decl_stmt|;
comment|//first the dummy animation
block|{
name|DummyAnimation
name|anim
argument_list|(
operator|&
name|dummy
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
name|ITERATION_COUNT
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|ITERATION_COUNT
argument_list|,
name|ITERATION_COUNT
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|started
condition|)
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|anim
operator|.
name|duration
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|dummyPropertyAnimation
name|void
name|tst_qanimation
operator|::
name|dummyPropertyAnimation
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|started
argument_list|)
expr_stmt|;
name|DummyObject
name|dummy
decl_stmt|;
comment|//then the property animation
block|{
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|dummy
argument_list|,
literal|"rect"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
name|ITERATION_COUNT
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|ITERATION_COUNT
argument_list|,
name|ITERATION_COUNT
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|started
condition|)
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ITERATION_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|rectAnimation
name|void
name|tst_qanimation
operator|::
name|rectAnimation
parameter_list|()
block|{
comment|//this is the simplest animation you can do
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|started
argument_list|)
expr_stmt|;
name|DummyObject
name|dummy
decl_stmt|;
comment|//then the property animation
block|{
name|RectAnimation
name|anim
argument_list|(
operator|&
name|dummy
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
name|ITERATION_COUNT
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|ITERATION_COUNT
argument_list|,
name|ITERATION_COUNT
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|started
condition|)
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ITERATION_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|floatAnimation
name|void
name|tst_qanimation
operator|::
name|floatAnimation
parameter_list|()
block|{
comment|//this is the simplest animation you can do
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|started
argument_list|)
expr_stmt|;
name|DummyObject
name|dummy
decl_stmt|;
comment|//then the property animation
block|{
name|QPropertyAnimation
name|anim
argument_list|(
operator|&
name|dummy
argument_list|,
literal|"opacity"
argument_list|)
decl_stmt|;
name|anim
operator|.
name|setDuration
argument_list|(
name|ITERATION_COUNT
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setStartValue
argument_list|(
literal|0.f
argument_list|)
expr_stmt|;
name|anim
operator|.
name|setEndValue
argument_list|(
literal|1.f
argument_list|)
expr_stmt|;
if|if
condition|(
name|started
condition|)
name|anim
operator|.
name|start
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ITERATION_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|anim
operator|.
name|setCurrentTime
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_qanimation
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
