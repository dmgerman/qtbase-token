begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QGraphicsView>
end_include
begin_include
include|#
directive|include
file|<QGraphicsWidget>
end_include
begin_include
include|#
directive|include
file|<QGraphicsLinearLayout>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|"button.h"
end_include
begin_include
include|#
directive|include
file|"menu.h"
end_include
begin_include
include|#
directive|include
file|"themeevent.h"
end_include
begin_include
include|#
directive|include
file|"theme.h"
end_include
begin_decl_stmt
DECL|variable|MinMenuItemWidth
specifier|static
specifier|const
name|int
name|MinMenuItemWidth
init|=
literal|150
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|MinMenuItemHeight
specifier|static
specifier|const
name|int
name|MinMenuItemHeight
init|=
literal|40
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|Menu
name|Menu
operator|::
name|Menu
parameter_list|(
name|QGraphicsView
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QGraphicsWidget
argument_list|()
member_init_list|,
name|m_Parent
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_Layout
argument_list|(
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|,
name|this
argument_list|)
argument_list|)
member_init_list|,
name|m_ButtonContainer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_isMenuVisible
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|m_currentSelectedIndex
argument_list|(
operator|-
literal|1
argument_list|)
block|{
name|init
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~Menu
name|Menu
operator|::
name|~
name|Menu
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_ButtonContainer
operator|->
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
operator|delete
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|m_ButtonContainer
operator|->
name|clear
argument_list|()
expr_stmt|;
operator|delete
name|m_ButtonContainer
expr_stmt|;
name|m_ButtonContainer
operator|=
literal|0
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|init
name|void
name|Menu
operator|::
name|init
parameter_list|()
block|{
name|m_ButtonContainer
operator|=
operator|new
name|QList
argument_list|<
name|Button
operator|*
argument_list|>
expr_stmt|;
name|m_Layout
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_Layout
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|setMinimumWidth
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|m_Layout
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|Theme
operator|::
name|p
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|themeChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|themeChange
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addMenuItem
name|Button
modifier|*
name|Menu
operator|::
name|addMenuItem
parameter_list|(
specifier|const
name|QString
name|itemName
parameter_list|,
name|QObject
modifier|*
name|receiver
parameter_list|,
specifier|const
name|char
modifier|*
name|member
parameter_list|)
block|{
name|Button
modifier|*
name|button
init|=
operator|new
name|Button
argument_list|(
name|itemName
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|button
operator|->
name|setVisible
argument_list|(
name|m_isMenuVisible
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|receiver
argument_list|,
name|member
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|menuShowHide
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_ButtonContainer
operator|->
name|append
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|->
name|setMinimumWidth
argument_list|(
name|MinMenuItemWidth
argument_list|)
expr_stmt|;
name|button
operator|->
name|setMinimumHeight
argument_list|(
name|MinMenuItemHeight
argument_list|)
expr_stmt|;
return|return
name|button
return|;
block|}
end_function
begin_function
DECL|function|menuShowHide
name|void
name|Menu
operator|::
name|menuShowHide
parameter_list|()
block|{
name|m_isMenuVisible
condition|?
name|menuHide
argument_list|()
else|:
name|menuShow
argument_list|()
expr_stmt|;
name|m_isMenuVisible
operator|=
operator|!
name|m_isMenuVisible
expr_stmt|;
block|}
end_function
begin_function
DECL|function|menuShow
name|void
name|Menu
operator|::
name|menuShow
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_ButtonContainer
operator|->
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|m_Layout
operator|->
name|addItem
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|menuHide
name|void
name|Menu
operator|::
name|menuHide
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_ButtonContainer
operator|->
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|button
operator|->
name|hide
argument_list|()
expr_stmt|;
name|m_Layout
operator|->
name|removeItem
argument_list|(
name|button
argument_list|)
expr_stmt|;
block|}
name|m_currentSelectedIndex
operator|=
operator|-
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|themeChange
name|void
name|Menu
operator|::
name|themeChange
parameter_list|()
block|{
name|QPixmap
name|pixmap
init|=
name|Theme
operator|::
name|p
argument_list|()
operator|->
name|pixmap
argument_list|(
literal|"status_field_middle.svg"
argument_list|,
name|QSize
argument_list|(
name|MinMenuItemWidth
argument_list|,
name|MinMenuItemHeight
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_ButtonContainer
operator|->
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|button
operator|->
name|setBackground
argument_list|(
name|pixmap
argument_list|)
expr_stmt|;
block|}
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|keyPressEvent
name|void
name|Menu
operator|::
name|keyPressEvent
parameter_list|(
name|QKeyEvent
modifier|*
name|event
parameter_list|)
block|{
comment|//S60 3.x specific
if|if
condition|(
name|event
operator|->
name|key
argument_list|()
operator|==
literal|16777235
condition|)
block|{
comment|//Up Arrow
if|if
condition|(
name|m_currentSelectedIndex
operator|>
literal|0
condition|)
block|{
comment|//One step up
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
decl_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
name|m_currentSelectedIndex
operator|--
expr_stmt|;
name|button
operator|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
expr_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|//Jump to bottom
if|if
condition|(
name|m_currentSelectedIndex
operator|>=
literal|0
condition|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
decl_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
name|m_currentSelectedIndex
operator|=
name|m_ButtonContainer
operator|->
name|count
argument_list|()
operator|-
literal|1
expr_stmt|;
if|if
condition|(
name|m_currentSelectedIndex
operator|>=
literal|0
condition|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
decl_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|event
operator|->
name|key
argument_list|()
operator|==
literal|16777237
condition|)
block|{
comment|//Down Arrow
if|if
condition|(
name|m_currentSelectedIndex
operator|<
name|m_ButtonContainer
operator|->
name|count
argument_list|()
operator|-
literal|1
condition|)
block|{
comment|//One step down
if|if
condition|(
name|m_currentSelectedIndex
operator|>=
literal|0
condition|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
decl_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
name|m_currentSelectedIndex
operator|++
expr_stmt|;
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
decl_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|//Jump to top
if|if
condition|(
name|m_currentSelectedIndex
operator|>=
literal|0
condition|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
decl_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
name|m_currentSelectedIndex
operator|=
literal|0
expr_stmt|;
name|button
operator|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
expr_stmt|;
name|button
operator|->
name|select
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|button
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|event
operator|->
name|key
argument_list|()
operator|==
literal|17825792
operator|||
name|event
operator|->
name|key
argument_list|()
operator|==
literal|16842752
operator|||
comment|//LSK, center key or enter
name|event
operator|->
name|key
argument_list|()
operator|==
literal|16777221
condition|)
block|{
if|if
condition|(
name|m_currentSelectedIndex
operator|>=
literal|0
condition|)
block|{
name|Button
modifier|*
name|button
init|=
name|m_ButtonContainer
operator|->
name|at
argument_list|(
name|m_currentSelectedIndex
argument_list|)
decl_stmt|;
name|button
operator|->
name|click
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|event
operator|->
name|key
argument_list|()
operator|==
literal|17825793
condition|)
block|{
comment|//RSK
name|menuShowHide
argument_list|()
expr_stmt|;
block|}
block|}
end_function
end_unit
