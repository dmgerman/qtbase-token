begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|__MAINWINDOW_H__
end_ifndef
begin_define
DECL|macro|__MAINWINDOW_H__
define|#
directive|define
name|__MAINWINDOW_H__
end_define
begin_include
include|#
directive|include
file|<QGraphicsView>
end_include
begin_include
include|#
directive|include
file|<QTime>
end_include
begin_include
include|#
directive|include
file|<QTimer>
end_include
begin_include
include|#
directive|include
file|"settings.h"
end_include
begin_decl_stmt
DECL|variable|QGraphicsScene
name|class
name|QGraphicsScene
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsLinearLayout
name|class
name|QGraphicsLinearLayout
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QResizeEvent
name|class
name|QResizeEvent
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|Label
name|class
name|Label
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|Menu
name|class
name|Menu
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|BackgroundItem
name|class
name|BackgroundItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|TopBar
name|class
name|TopBar
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|MainView
range|:
name|public
name|QGraphicsView
block|{
name|Q_OBJECT
name|public
operator|:
name|MainView
argument_list|(
argument|const bool enableOpenGL
argument_list|,
argument|const bool outputFps
argument_list|,
argument|const bool imageBasedRendering = false
argument_list|,
argument|QWidget *parent =
literal|0
argument_list|)
block|;
operator|~
name|MainView
argument_list|()
block|;
name|void
name|setTestWidget
argument_list|(
name|QGraphicsWidget
operator|*
name|testWidget
argument_list|)
block|;
name|QGraphicsWidget
operator|*
name|takeTestWidget
argument_list|()
block|;
name|QGraphicsWidget
operator|*
name|testWidget
argument_list|()
block|;
name|qreal
name|fps
argument_list|()
block|;
name|void
name|fpsReset
argument_list|()
block|;
name|void
name|setImageBasedRendering
argument_list|(
argument|const bool imageBasedRendering
argument_list|)
block|;
name|bool
name|imageBasedRendering
argument_list|()
specifier|const
block|;
name|Menu
operator|*
name|menu
argument_list|()
block|;
name|int
name|rotationAngle
argument_list|()
specifier|const
block|;
name|signals
operator|:
name|void
name|repainted
argument_list|()
block|;
name|public
name|slots
operator|:
name|void
name|rotateContent
argument_list|(
argument|int angle
argument_list|)
block|;
name|protected
operator|:
name|virtual
name|void
name|resizeEvent
argument_list|(
name|QResizeEvent
operator|*
name|event
argument_list|)
block|;
name|virtual
name|void
name|paintEvent
argument_list|(
name|QPaintEvent
operator|*
name|event
argument_list|)
block|;
name|virtual
name|void
name|keyPressEvent
argument_list|(
name|QKeyEvent
operator|*
name|event
argument_list|)
block|;
name|virtual
name|void
name|wheelEvent
argument_list|(
argument|QWheelEvent *event
argument_list|)
block|{
name|Q_UNUSED
argument_list|(
name|event
argument_list|)
block|; }
block|;
name|private
name|slots
operator|:
name|void
name|updateFps
argument_list|()
block|;
name|private
operator|:
name|void
name|construct
argument_list|()
block|;
name|void
name|resizeContent
argument_list|(
specifier|const
name|QSize
operator|&
name|s
argument_list|)
block|;
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|MainView
argument_list|)
name|QGraphicsScene
operator|*
name|m_scene
block|;
name|QGraphicsLinearLayout
operator|*
name|m_mainLayout
block|;
name|QGraphicsWidget
operator|*
name|m_mainWidget
block|;
name|QGraphicsWidget
operator|*
name|m_testWidget
block|;
name|Menu
operator|*
name|m_menu
block|;
name|BackgroundItem
operator|*
name|m_backGround
block|;
name|TopBar
operator|*
name|m_topBar
block|;
name|bool
name|m_imageBasedRendering
block|;
name|QPixmap
operator|*
name|m_pixmapToRender
block|;
comment|// Used for FPS
name|int
name|m_frameCount
block|;
name|QTime
name|m_fpsFirstTs
block|;
name|QTime
name|m_fpsLatestTs
block|;
name|bool
name|m_OutputFps
block|;
name|QTime
name|m_fpsUpdated
block|;
name|QList
operator|<
name|qreal
operator|>
name|m_Fpss
block|;
name|int
name|m_angle
block|;
name|bool
name|m_enableOpenGL
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//__MAINWINDOW_H__
end_comment
end_unit
