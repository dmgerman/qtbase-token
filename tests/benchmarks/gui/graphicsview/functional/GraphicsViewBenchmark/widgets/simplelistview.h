begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|SIMPLELISTVIEW_H
end_ifndef
begin_define
DECL|macro|SIMPLELISTVIEW_H
define|#
directive|define
name|SIMPLELISTVIEW_H
end_define
begin_include
include|#
directive|include
file|"scrollbar.h"
end_include
begin_include
include|#
directive|include
file|"abstractscrollarea.h"
end_include
begin_decl_stmt
DECL|variable|SimpleListViewPrivate
name|class
name|SimpleListViewPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|SimpleListView
range|:
name|public
name|AbstractScrollArea
block|{
name|Q_OBJECT
name|Q_DECLARE_PRIVATE
argument_list|(
argument|SimpleListView
argument_list|)
name|public
operator|:
name|SimpleListView
argument_list|(
name|QGraphicsWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|virtual
operator|~
name|SimpleListView
argument_list|()
block|;
name|public
operator|:
name|void
name|addItem
argument_list|(
name|QGraphicsWidget
operator|*
name|item
argument_list|)
block|;
name|void
name|insertItem
argument_list|(
argument|int index
argument_list|,
argument|QGraphicsWidget *item
argument_list|)
block|;
name|QGraphicsWidget
operator|*
name|takeItem
argument_list|(
argument|int row
argument_list|)
block|;
name|QGraphicsWidget
operator|*
name|itemAt
argument_list|(
argument|int row
argument_list|)
block|;
name|int
name|itemCount
argument_list|()
block|;
name|void
name|updateListContents
argument_list|()
block|;
name|void
name|setTwoColumns
argument_list|(
argument|const bool twoColumns
argument_list|)
block|;
name|bool
name|twoColumns
argument_list|()
block|;
name|public
name|slots
operator|:
name|void
name|themeChange
argument_list|()
block|;
name|bool
name|listItemCaching
argument_list|()
specifier|const
block|;
name|void
name|setListItemCaching
argument_list|(
argument|bool enabled
argument_list|)
block|;
name|protected
operator|:
name|virtual
name|void
name|scrollContentsBy
argument_list|(
argument|qreal dx
argument_list|,
argument|qreal dy
argument_list|)
block|;
name|void
name|resizeEvent
argument_list|(
name|QGraphicsSceneResizeEvent
operator|*
name|event
argument_list|)
block|;
name|QSizeF
name|sizeHint
argument_list|(
argument|Qt::SizeHint which
argument_list|,
argument|const QSizeF& constraint
argument_list|)
specifier|const
block|;
name|private
operator|:
name|SimpleListViewPrivate
operator|*
name|d_ptr
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
