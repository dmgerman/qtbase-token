begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|ABSTRACTITEMCONTAINER_H
end_ifndef
begin_define
DECL|macro|ABSTRACTITEMCONTAINER_H
define|#
directive|define
name|ABSTRACTITEMCONTAINER_H
end_define
begin_include
include|#
directive|include
file|<QModelIndex>
end_include
begin_include
include|#
directive|include
file|"gvbwidget.h"
end_include
begin_decl_stmt
DECL|variable|QGraphicsWidget
name|class
name|QGraphicsWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|AbstractItemView
name|class
name|AbstractItemView
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|AbstractViewItem
name|class
name|AbstractViewItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|AbstractItemContainer
range|:
name|public
name|GvbWidget
block|{
name|Q_OBJECT
name|public
operator|:
name|AbstractItemContainer
argument_list|(
argument|int bufferSize
argument_list|,
argument|QGraphicsWidget *parent=
literal|0
argument_list|)
block|;
name|virtual
operator|~
name|AbstractItemContainer
argument_list|()
block|;
name|virtual
name|void
name|addItem
argument_list|(
specifier|const
name|QModelIndex
operator|&
name|index
argument_list|)
block|;
name|virtual
name|void
name|removeItem
argument_list|(
specifier|const
name|QModelIndex
operator|&
name|index
argument_list|)
block|;
name|virtual
name|void
name|setItemView
argument_list|(
name|AbstractItemView
operator|*
name|view
argument_list|)
block|;
name|virtual
name|void
name|setItemPrototype
argument_list|(
name|AbstractViewItem
operator|*
name|ptype
argument_list|)
block|;
name|virtual
name|void
name|reset
argument_list|()
block|;
name|virtual
name|int
name|itemCount
argument_list|()
specifier|const
block|;
name|virtual
name|AbstractViewItem
operator|*
name|itemAt
argument_list|(
argument|const int row
argument_list|)
specifier|const
block|;
name|AbstractViewItem
operator|*
name|findItemByIndex
argument_list|(
argument|const QModelIndex&index
argument_list|)
specifier|const
block|;
name|AbstractViewItem
operator|*
name|prototype
argument_list|()
block|;
name|AbstractViewItem
operator|*
name|firstItem
argument_list|()
block|;
name|void
name|updateContent
argument_list|()
block|;
name|void
name|themeChange
argument_list|()
block|;
name|int
name|bufferSize
argument_list|()
specifier|const
block|;
name|virtual
name|void
name|setTwoColumns
argument_list|(
argument|const bool enabled
argument_list|)
block|;
name|bool
name|twoColumns
argument_list|()
block|;
name|void
name|setSubtreeCacheEnabled
argument_list|(
argument|const bool enabled
argument_list|)
block|;
name|virtual
name|void
name|setListItemCaching
argument_list|(
argument|const bool enabled
argument_list|,
argument|const int index
argument_list|)
operator|=
literal|0
block|;
name|protected
operator|:
name|virtual
name|void
name|adjustVisibleContainerSize
argument_list|(
specifier|const
name|QSizeF
operator|&
name|size
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|void
name|addItemToVisibleLayout
argument_list|(
argument|int index
argument_list|,
argument|AbstractViewItem *item
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|void
name|removeItemFromVisibleLayout
argument_list|(
name|AbstractViewItem
operator|*
name|item
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|bool
name|event
argument_list|(
name|QEvent
operator|*
name|e
argument_list|)
block|;
name|virtual
name|bool
name|eventFilter
argument_list|(
name|QObject
operator|*
name|obj
argument_list|,
name|QEvent
operator|*
name|event
argument_list|)
block|;
name|virtual
name|QVariant
name|itemChange
argument_list|(
argument|GraphicsItemChange change
argument_list|,
argument|const QVariant&value
argument_list|)
block|;
name|virtual
name|int
name|maxItemCountInItemBuffer
argument_list|()
specifier|const
block|;
name|bool
name|itemVisibleInView
argument_list|(
argument|AbstractViewItem* item
argument_list|,
argument|const QRectF&viewRect
argument_list|,
argument|bool fullyVisible = true
argument_list|)
specifier|const
block|;
name|protected
operator|:
name|void
name|updateItemBuffer
argument_list|()
block|;
name|void
name|findFirstAndLastVisibleBufferIndex
argument_list|(
argument|int&firstVisibleBufferIndex
argument_list|,
argument|int&lastVisibleBufferIndex
argument_list|,
argument|const QRectF&viewRect
argument_list|,
argument|bool fullyVisible
argument_list|)
specifier|const
block|;
name|QList
operator|<
name|AbstractViewItem
operator|*
operator|>
name|m_items
block|;
name|AbstractItemView
operator|*
name|m_itemView
block|;
name|AbstractViewItem
operator|*
name|m_prototype
block|;
name|int
name|m_bufferSize
block|;
name|private
operator|:
name|void
name|insertItem
argument_list|(
argument|int pos
argument_list|,
argument|const QModelIndex&index
argument_list|)
block|;
name|bool
name|m_twoColumns
block|;
name|Q_DISABLE_COPY
argument_list|(
argument|AbstractItemContainer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// ABSTRACTITEMCONTAINER_H
end_comment
end_unit
