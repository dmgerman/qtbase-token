begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QGraphicsSceneResizeEvent>
end_include
begin_include
include|#
directive|include
file|<QGraphicsWidget>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|"abstractscrollarea.h"
end_include
begin_include
include|#
directive|include
file|"scrollbar.h"
end_include
begin_constructor
DECL|function|AbstractScrollArea
name|AbstractScrollArea
operator|::
name|AbstractScrollArea
parameter_list|(
name|QGraphicsWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|GvbWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_viewport
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_horizontalScrollBar
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_verticalScrollBar
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_prevHorizontalValue
argument_list|(
literal|0.0
argument_list|)
member_init_list|,
name|m_prevVerticalValue
argument_list|(
literal|0.0
argument_list|)
block|{
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Expanding
argument_list|,
name|QSizePolicy
operator|::
name|Expanding
argument_list|)
expr_stmt|;
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_horizontalScrollBar
operator|=
operator|new
name|ScrollBar
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|m_horizontalScrollBar
operator|->
name|hide
argument_list|()
expr_stmt|;
name|m_horizontalScrollBar
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_horizontalScrollBarPolicy
operator|=
name|Qt
operator|::
name|ScrollBarAsNeeded
expr_stmt|;
name|m_horizontalScrollBar
operator|->
name|setZValue
argument_list|(
name|zValue
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// Raise scroll bar to top
name|m_horizontalScrollBar
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_horizontalScrollBar
argument_list|,
name|SIGNAL
argument_list|(
name|sliderPositionChange
argument_list|(
name|qreal
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|horizontalScroll
argument_list|(
name|qreal
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_horizontalScrollBar
argument_list|,
name|SIGNAL
argument_list|(
name|sliderPressed
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|horizontalScrollStart
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_verticalScrollBar
operator|=
operator|new
name|ScrollBar
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|m_verticalScrollBar
operator|->
name|hide
argument_list|()
expr_stmt|;
name|m_verticalScrollBar
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_verticalScrollBarPolicy
operator|=
name|Qt
operator|::
name|ScrollBarAsNeeded
expr_stmt|;
name|m_verticalScrollBar
operator|->
name|setZValue
argument_list|(
name|zValue
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|// Raise scroll bar to top
name|m_verticalScrollBar
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_verticalScrollBar
argument_list|,
name|SIGNAL
argument_list|(
name|sliderPositionChange
argument_list|(
name|qreal
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|verticalScroll
argument_list|(
name|qreal
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_verticalScrollBar
argument_list|,
name|SIGNAL
argument_list|(
name|sliderPressed
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|verticalScrollStart
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QGraphicsWidget
modifier|*
name|viewport
init|=
operator|new
name|QGraphicsWidget
decl_stmt|;
name|setViewport
argument_list|(
name|viewport
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~AbstractScrollArea
name|AbstractScrollArea
operator|::
name|~
name|AbstractScrollArea
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|verticalScrollBar
name|ScrollBar
modifier|*
name|AbstractScrollArea
operator|::
name|verticalScrollBar
parameter_list|()
specifier|const
block|{
return|return
name|m_verticalScrollBar
return|;
block|}
end_function
begin_function
DECL|function|horizontalScrollBar
name|ScrollBar
modifier|*
name|AbstractScrollArea
operator|::
name|horizontalScrollBar
parameter_list|()
specifier|const
block|{
return|return
name|m_horizontalScrollBar
return|;
block|}
end_function
begin_function
DECL|function|setHorizontalScrollBarPolicy
name|void
name|AbstractScrollArea
operator|::
name|setHorizontalScrollBarPolicy
parameter_list|(
name|Qt
operator|::
name|ScrollBarPolicy
name|policy
parameter_list|)
block|{
name|m_horizontalScrollBarPolicy
operator|=
name|policy
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setVerticalScrollBarPolicy
name|void
name|AbstractScrollArea
operator|::
name|setVerticalScrollBarPolicy
parameter_list|(
name|Qt
operator|::
name|ScrollBarPolicy
name|policy
parameter_list|)
block|{
name|m_verticalScrollBarPolicy
operator|=
name|policy
expr_stmt|;
block|}
end_function
begin_function
DECL|function|verticalScrollBarPolicy
name|Qt
operator|::
name|ScrollBarPolicy
name|AbstractScrollArea
operator|::
name|verticalScrollBarPolicy
parameter_list|()
specifier|const
block|{
return|return
name|m_verticalScrollBarPolicy
return|;
block|}
end_function
begin_function
DECL|function|horizontalScrollBarPolicy
name|Qt
operator|::
name|ScrollBarPolicy
name|AbstractScrollArea
operator|::
name|horizontalScrollBarPolicy
parameter_list|()
specifier|const
block|{
return|return
name|m_horizontalScrollBarPolicy
return|;
block|}
end_function
begin_function
DECL|function|viewport
name|QGraphicsWidget
modifier|*
name|AbstractScrollArea
operator|::
name|viewport
parameter_list|()
specifier|const
block|{
return|return
name|m_viewport
return|;
block|}
end_function
begin_function
DECL|function|setViewport
name|void
name|AbstractScrollArea
operator|::
name|setViewport
parameter_list|(
name|QGraphicsWidget
modifier|*
name|viewport
parameter_list|)
block|{
if|if
condition|(
name|m_viewport
condition|)
block|{
name|m_viewport
operator|->
name|setParentItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|children
init|=
name|m_viewport
operator|->
name|childItems
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|child
decl|,
name|children
control|)
name|child
operator|->
name|setParentItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|m_viewport
expr_stmt|;
block|}
name|m_viewport
operator|=
name|viewport
expr_stmt|;
if|if
condition|(
name|viewport
condition|)
block|{
name|m_viewport
operator|->
name|setParentItem
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|m_viewport
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|adjustScrollBars
argument_list|()
expr_stmt|;
block|}
emit|emit
name|viewportChanged
argument_list|(
name|viewport
argument_list|)
emit|;
block|}
end_function
begin_function
DECL|function|event
name|bool
name|AbstractScrollArea
operator|::
name|event
parameter_list|(
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|ApplicationLayoutDirectionChange
operator|||
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|LayoutDirectionChange
condition|)
block|{     }
elseif|else
if|if
condition|(
name|e
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|GraphicsSceneResize
condition|)
block|{
name|QGraphicsSceneResizeEvent
modifier|*
name|event
init|=
cast|static_cast
argument_list|<
name|QGraphicsSceneResizeEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|QSizeF
name|newSize
init|=
name|event
operator|->
name|newSize
argument_list|()
decl_stmt|;
name|QRectF
name|hrect
init|=
name|m_horizontalScrollBar
operator|->
name|boundingRect
argument_list|()
decl_stmt|;
name|QRectF
name|vrect
init|=
name|m_verticalScrollBar
operator|->
name|boundingRect
argument_list|()
decl_stmt|;
name|QSizeF
name|vpSize
init|=
name|newSize
decl_stmt|;
if|if
condition|(
name|m_horizontalScrollBarPolicy
operator|!=
name|Qt
operator|::
name|ScrollBarAlwaysOff
condition|)
name|vpSize
operator|.
name|setHeight
argument_list|(
name|newSize
operator|.
name|height
argument_list|()
operator|-
name|hrect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_verticalScrollBarPolicy
operator|!=
name|Qt
operator|::
name|ScrollBarAlwaysOff
condition|)
name|vpSize
operator|.
name|setWidth
argument_list|(
name|newSize
operator|.
name|width
argument_list|()
operator|-
name|vrect
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|m_viewport
operator|->
name|resize
argument_list|(
name|vpSize
argument_list|)
expr_stmt|;
name|adjustScrollBars
argument_list|()
expr_stmt|;
block|}
return|return
name|QGraphicsWidget
operator|::
name|event
argument_list|(
name|e
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|scrollContentsBy
name|void
name|AbstractScrollArea
operator|::
name|scrollContentsBy
parameter_list|(
name|qreal
name|dx
parameter_list|,
name|qreal
name|dy
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|dx
argument_list|)
name|Q_UNUSED
argument_list|(
argument|dy
argument_list|)
name|prepareGeometryChange
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|verticalScrollStart
name|void
name|AbstractScrollArea
operator|::
name|verticalScrollStart
parameter_list|()
block|{
name|m_prevVerticalValue
operator|=
name|m_verticalScrollBar
operator|->
name|sliderPosition
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|verticalScroll
name|void
name|AbstractScrollArea
operator|::
name|verticalScroll
parameter_list|(
name|qreal
name|value
parameter_list|)
block|{
name|qreal
name|dy
init|=
name|value
operator|-
name|m_prevVerticalValue
decl_stmt|;
if|if
condition|(
operator|!
name|qFuzzyCompare
argument_list|(
name|dy
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
condition|)
block|{
name|scrollContentsBy
argument_list|(
literal|0.0
argument_list|,
name|dy
argument_list|)
expr_stmt|;
name|m_prevVerticalValue
operator|=
name|value
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|horizontalScrollStart
name|void
name|AbstractScrollArea
operator|::
name|horizontalScrollStart
parameter_list|()
block|{
name|m_prevHorizontalValue
operator|=
name|m_horizontalScrollBar
operator|->
name|sliderPosition
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|horizontalScroll
name|void
name|AbstractScrollArea
operator|::
name|horizontalScroll
parameter_list|(
name|qreal
name|value
parameter_list|)
block|{
name|qreal
name|dx
init|=
name|value
operator|-
name|m_prevHorizontalValue
decl_stmt|;
if|if
condition|(
operator|!
name|qFuzzyCompare
argument_list|(
name|dx
argument_list|,
name|qreal
argument_list|(
literal|0.0
argument_list|)
argument_list|)
condition|)
block|{
name|scrollContentsBy
argument_list|(
name|dx
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|m_prevHorizontalValue
operator|=
name|value
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|adjustScrollBars
name|void
name|AbstractScrollArea
operator|::
name|adjustScrollBars
parameter_list|()
block|{
if|if
condition|(
name|m_horizontalScrollBarPolicy
operator|==
name|Qt
operator|::
name|ScrollBarAlwaysOff
condition|)
block|{
name|m_horizontalScrollBar
operator|->
name|hide
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|m_horizontalScrollBar
operator|->
name|show
argument_list|()
expr_stmt|;
name|QRectF
name|sbgeom
init|=
name|boundingRect
argument_list|()
decl_stmt|;
name|sbgeom
operator|.
name|setTop
argument_list|(
name|sbgeom
operator|.
name|bottom
argument_list|()
operator|-
name|m_horizontalScrollBar
operator|->
name|boundingRect
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|sbgeom
operator|.
name|setRight
argument_list|(
name|sbgeom
operator|.
name|right
argument_list|()
operator|-
name|m_verticalScrollBar
operator|->
name|boundingRect
argument_list|()
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|m_horizontalScrollBar
operator|->
name|setGeometry
argument_list|(
name|sbgeom
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|m_verticalScrollBarPolicy
operator|==
name|Qt
operator|::
name|ScrollBarAlwaysOff
condition|)
block|{
name|m_verticalScrollBar
operator|->
name|hide
argument_list|()
expr_stmt|;
name|QRectF
name|sbgeom
init|=
name|boundingRect
argument_list|()
decl_stmt|;
name|sbgeom
operator|.
name|setLeft
argument_list|(
name|sbgeom
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
name|sbgeom
operator|.
name|setBottom
argument_list|(
name|sbgeom
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|m_verticalScrollBar
operator|->
name|setGeometry
argument_list|(
name|sbgeom
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m_verticalScrollBar
operator|->
name|show
argument_list|()
expr_stmt|;
name|QRectF
name|sbgeom
init|=
name|boundingRect
argument_list|()
decl_stmt|;
name|sbgeom
operator|.
name|setLeft
argument_list|(
name|sbgeom
operator|.
name|right
argument_list|()
operator|-
name|m_verticalScrollBar
operator|->
name|boundingRect
argument_list|()
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_horizontalScrollBarPolicy
operator|!=
name|Qt
operator|::
name|ScrollBarAlwaysOff
condition|)
name|sbgeom
operator|.
name|setBottom
argument_list|(
name|sbgeom
operator|.
name|bottom
argument_list|()
operator|-
name|m_horizontalScrollBar
operator|->
name|boundingRect
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|m_verticalScrollBar
operator|->
name|setGeometry
argument_list|(
name|sbgeom
argument_list|)
expr_stmt|;
block|}
block|}
end_function
end_unit
