begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|BUTTON_H
end_ifndef
begin_define
DECL|macro|BUTTON_H
define|#
directive|define
name|BUTTON_H
end_define
begin_include
include|#
directive|include
file|<QGraphicsWidget>
end_include
begin_decl_stmt
DECL|variable|ButtonPrivate
name|class
name|ButtonPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTextDocument
name|class
name|QTextDocument
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPixmap
name|class
name|QPixmap
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QFont
name|class
name|QFont
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Button
range|:
name|public
name|QGraphicsWidget
block|{
name|Q_OBJECT
name|Q_DECLARE_PRIVATE
argument_list|(
argument|Button
argument_list|)
name|public
operator|:
name|Button
argument_list|(
argument|const QString&text
argument_list|,
argument|QGraphicsItem *parent=
literal|0
argument_list|,
argument|QSizeF minimumSize = QSizeF()
argument_list|)
block|;
name|virtual
operator|~
name|Button
argument_list|()
block|;
name|signals
operator|:
name|void
name|clicked
argument_list|(
argument|bool checked = false
argument_list|)
block|;
name|void
name|pressed
argument_list|()
block|;
name|void
name|released
argument_list|()
block|;
name|public
name|slots
operator|:
name|void
name|themeChange
argument_list|()
block|;
name|void
name|setText
argument_list|(
specifier|const
name|QString
operator|&
name|text
argument_list|)
block|;
name|QString
name|text
argument_list|()
block|;
name|public
operator|:
name|void
name|setBackground
argument_list|(
name|QPixmap
operator|&
name|background
argument_list|)
block|;
name|bool
name|isDown
argument_list|()
block|;
name|void
name|select
argument_list|(
argument|bool select
argument_list|)
block|{
name|m_selected
operator|=
name|select
block|;}
name|void
name|click
argument_list|()
block|{
name|emit
name|clicked
argument_list|()
block|;}
name|private
operator|:
name|void
name|paint
argument_list|(
name|QPainter
operator|*
name|painter
argument_list|,
specifier|const
name|QStyleOptionGraphicsItem
operator|*
name|option
argument_list|,
name|QWidget
operator|*
name|widget
operator|=
literal|0
argument_list|)
block|;
name|QSizeF
name|sizeHint
argument_list|(
argument|Qt::SizeHint which
argument_list|,
argument|const QSizeF&constraint = QSizeF()
argument_list|)
specifier|const
block|;
name|void
name|mousePressEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|mouseReleaseEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|mouseMoveEvent
argument_list|(
name|QGraphicsSceneMouseEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|resizeEvent
argument_list|(
name|QGraphicsSceneResizeEvent
operator|*
name|event
argument_list|)
block|;
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|Button
argument_list|)
name|ButtonPrivate
operator|*
name|d_ptr
block|;
name|QPixmap
name|m_background
block|;
name|QFont
name|m_font
block|;
name|bool
name|m_selected
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// BUTTON_H
end_comment
end_unit
