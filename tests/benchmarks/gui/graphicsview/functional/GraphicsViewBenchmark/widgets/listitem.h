begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LISTITEM_H
end_ifndef
begin_define
DECL|macro|LISTITEM_H
define|#
directive|define
name|LISTITEM_H
end_define
begin_include
include|#
directive|include
file|<QPen>
end_include
begin_include
include|#
directive|include
file|"iconitem.h"
end_include
begin_include
include|#
directive|include
file|"label.h"
end_include
begin_include
include|#
directive|include
file|"gvbwidget.h"
end_include
begin_decl_stmt
DECL|variable|QGraphicsGridLayout
name|class
name|QGraphicsGridLayout
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsLinearLayout
name|class
name|QGraphicsLinearLayout
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneMouseEvent
name|class
name|QGraphicsSceneMouseEvent
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsItem
name|class
name|QGraphicsItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|ListItem
range|:
name|public
name|GvbWidget
block|{
name|Q_OBJECT
name|public
operator|:
expr|enum
name|TextPos
block|{
name|FirstPos
operator|=
literal|0
block|,
name|SecondPos
operator|=
literal|1
block|,
name|ThirdPos
operator|=
literal|2
block|,
name|LastPos
operator|=
literal|3
block|}
block|;      enum
name|IconItemPos
block|{
name|LeftIcon
operator|=
literal|0
block|,
name|RightIcon
operator|=
literal|1
block|}
block|;
name|ListItem
argument_list|(
name|QGraphicsWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|virtual
operator|~
name|ListItem
argument_list|()
block|;
name|void
name|setIcon
argument_list|(
argument|IconItem *iconItem
argument_list|,
argument|const IconItemPos iconPos
argument_list|)
block|;
name|IconItem
operator|*
name|icon
argument_list|(
argument|const IconItemPos position
argument_list|)
specifier|const
block|;
name|void
name|setText
argument_list|(
argument|const QString str
argument_list|,
argument|const TextPos position
argument_list|)
block|;
name|QString
name|text
argument_list|(
argument|const TextPos position
argument_list|)
specifier|const
block|;
name|void
name|setFont
argument_list|(
argument|const QFont font
argument_list|,
argument|const TextPos position
argument_list|)
block|;
name|QVariant
name|data
argument_list|(
argument|int role = Qt::DisplayRole
argument_list|)
specifier|const
block|;
name|void
name|setData
argument_list|(
argument|const QVariant&value
argument_list|,
argument|int role = Qt::DisplayRole
argument_list|)
block|;
name|void
name|setBorderPen
argument_list|(
argument|const QPen pen
argument_list|)
block|{
name|m_borderPen
operator|=
name|pen
block|; }
name|void
name|setBackgroundBrush
argument_list|(
argument|const QBrush brush
argument_list|)
block|{
name|m_backgroundBrush
operator|=
name|brush
block|; }
name|void
name|setBackgroundOpacity
argument_list|(
argument|const qreal opacity
argument_list|)
block|{
name|m_backgroundOpacity
operator|=
name|opacity
block|; }
name|void
name|setRounding
argument_list|(
argument|const QSize rounding
argument_list|)
block|{
name|m_rounding
operator|=
name|rounding
block|; }
name|protected
operator|:
name|void
name|paint
argument_list|(
name|QPainter
operator|*
name|painter
argument_list|,
specifier|const
name|QStyleOptionGraphicsItem
operator|*
name|option
argument_list|,
name|QWidget
operator|*
name|widget
argument_list|)
block|;
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|ListItem
argument_list|)
name|QGraphicsGridLayout
operator|*
name|m_txtlayout
block|;
name|QGraphicsLinearLayout
operator|*
name|m_layout
block|;
name|QGraphicsLinearLayout
operator|*
name|m_liconlayout
block|;
name|QGraphicsLinearLayout
operator|*
name|m_riconlayout
block|;
name|QHash
operator|<
name|TextPos
block|,
name|QFont
operator|>
name|m_fonts
block|;
name|QPen
name|m_borderPen
block|;
name|QBrush
name|m_backgroundBrush
block|;
name|qreal
name|m_backgroundOpacity
block|;
name|QSize
name|m_rounding
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// LISTITEM_H
end_comment
end_unit
