begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtGui/qgraphicslinearlayout.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qgraphicswidget.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qgraphicsview.h>
end_include
begin_class
DECL|class|tst_QGraphicsLinearLayout
class|class
name|tst_QGraphicsLinearLayout
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QGraphicsLinearLayout
name|tst_QGraphicsLinearLayout
parameter_list|()
block|{}
DECL|function|~tst_QGraphicsLinearLayout
name|~
name|tst_QGraphicsLinearLayout
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|heightForWidth_data
parameter_list|()
function_decl|;
name|void
name|heightForWidth
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_struct
DECL|struct|MySquareWidget
struct|struct
name|MySquareWidget
super|:
specifier|public
name|QGraphicsWidget
block|{
DECL|function|MySquareWidget
name|MySquareWidget
parameter_list|()
block|{}
DECL|function|sizeHint
specifier|virtual
name|QSizeF
name|sizeHint
parameter_list|(
name|Qt
operator|::
name|SizeHint
name|which
parameter_list|,
specifier|const
name|QSizeF
modifier|&
name|constraint
init|=
name|QSizeF
argument_list|()
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|which
operator|!=
name|Qt
operator|::
name|PreferredSize
condition|)
return|return
name|QGraphicsWidget
operator|::
name|sizeHint
argument_list|(
name|which
argument_list|,
name|constraint
argument_list|)
return|;
if|if
condition|(
name|constraint
operator|.
name|width
argument_list|()
operator|<
literal|0
condition|)
return|return
name|QGraphicsWidget
operator|::
name|sizeHint
argument_list|(
name|which
argument_list|,
name|constraint
argument_list|)
return|;
return|return
name|QSizeF
argument_list|(
name|constraint
operator|.
name|width
argument_list|()
argument_list|,
name|constraint
operator|.
name|width
argument_list|()
argument_list|)
return|;
block|}
block|}
struct|;
end_struct
begin_function
DECL|function|heightForWidth_data
name|void
name|tst_QGraphicsLinearLayout
operator|::
name|heightForWidth_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"hfw"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"nested"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hfw"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"hfw, nested"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"not hfw"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"not hfw, nested"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|heightForWidth
name|void
name|tst_QGraphicsLinearLayout
operator|::
name|heightForWidth
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|hfw
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|nested
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsWidget
modifier|*
name|form
init|=
operator|new
name|QGraphicsWidget
decl_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|form
argument_list|)
expr_stmt|;
name|QGraphicsLinearLayout
modifier|*
name|outerlayout
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|nested
condition|)
block|{
name|outerlayout
operator|=
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|form
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
name|i
operator|++
control|)
block|{
name|QGraphicsLinearLayout
modifier|*
name|layout
init|=
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|outerlayout
operator|->
name|addItem
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|outerlayout
operator|=
name|layout
expr_stmt|;
block|}
block|}
name|QGraphicsLinearLayout
modifier|*
name|qlayout
init|=
literal|0
decl_stmt|;
name|qlayout
operator|=
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
expr_stmt|;
if|if
condition|(
name|nested
condition|)
name|outerlayout
operator|->
name|addItem
argument_list|(
name|qlayout
argument_list|)
expr_stmt|;
else|else
name|form
operator|->
name|setLayout
argument_list|(
name|qlayout
argument_list|)
expr_stmt|;
name|MySquareWidget
modifier|*
name|widget
init|=
operator|new
name|MySquareWidget
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|widget
operator|=
operator|new
name|MySquareWidget
expr_stmt|;
name|QSizePolicy
name|sizepolicy
init|=
name|widget
operator|->
name|sizePolicy
argument_list|()
decl_stmt|;
name|sizepolicy
operator|.
name|setHeightForWidth
argument_list|(
name|hfw
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setSizePolicy
argument_list|(
name|sizepolicy
argument_list|)
expr_stmt|;
name|qlayout
operator|->
name|addItem
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
comment|// make sure only one iteration is done.
comment|// run with tst_QGraphicsLinearLayout.exe "heightForWidth" -tickcounter -iterations 6
comment|// this will iterate 6 times the whole test, (not only the benchmark)
comment|// which should reduce warmup time and give a realistic picture of the performance of
comment|// effectiveSizeHint()
name|QSizeF
name|constraint
argument_list|(
name|hfw
condition|?
literal|100
else|:
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
operator|(
name|void
operator|)
name|form
operator|->
name|effectiveSizeHint
argument_list|(
name|Qt
operator|::
name|PreferredSize
argument_list|,
name|constraint
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QGraphicsLinearLayout
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qgraphicslinearlayout.moc"
end_include
end_unit
