begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_DEAD_CODE_FROM_QT4_WIN
end_ifdef
begin_define
DECL|macro|CALLGRIND_START_INSTRUMENTATION
define|#
directive|define
name|CALLGRIND_START_INSTRUMENTATION
value|{}
end_define
begin_define
DECL|macro|CALLGRIND_STOP_INSTRUMENTATION
define|#
directive|define
name|CALLGRIND_STOP_INSTRUMENTATION
value|{}
end_define
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|"valgrind/callgrind.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_class
DECL|class|ItemMover
class|class
name|ItemMover
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|ItemMover
name|ItemMover
parameter_list|(
name|QGraphicsItem
modifier|*
name|item
parameter_list|)
member_init_list|:
name|_item
argument_list|(
name|item
argument_list|)
block|{
name|startTimer
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|timerEvent
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
name|event
parameter_list|)
block|{
name|_item
operator|->
name|moveBy
argument_list|(
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|_item
name|QGraphicsItem
modifier|*
name|_item
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|ClipItem
class|class
name|ClipItem
super|:
specifier|public
name|QGraphicsRectItem
block|{
public|public:
DECL|function|ClipItem
name|ClipItem
parameter_list|(
name|qreal
name|x
parameter_list|,
name|qreal
name|y
parameter_list|,
name|qreal
name|w
parameter_list|,
name|qreal
name|h
parameter_list|,
specifier|const
name|QPen
modifier|&
name|pen
parameter_list|,
specifier|const
name|QBrush
modifier|&
name|brush
parameter_list|)
member_init_list|:
name|QGraphicsRectItem
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
block|{
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
block|}
DECL|function|shape
name|QPainterPath
name|shape
parameter_list|()
specifier|const
block|{
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|addRect
argument_list|(
name|rect
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|CountView
class|class
name|CountView
super|:
specifier|public
name|QGraphicsView
block|{
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|event
parameter_list|)
block|{
specifier|static
name|int
name|n
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|n
condition|)
name|CALLGRIND_START_INSTRUMENTATION
name|QGraphicsView
operator|::
name|paintEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|n
condition|)
name|CALLGRIND_STOP_INSTRUMENTATION
if|if
condition|(
operator|++
name|n
operator|==
literal|500
condition|)
name|qApp
operator|->
name|quit
argument_list|()
expr_stmt|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|setItemIndexMethod
argument_list|(
name|QGraphicsScene
operator|::
name|NoIndex
argument_list|)
expr_stmt|;
name|ClipItem
modifier|*
name|clipItem
init|=
operator|new
name|ClipItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|QPen
argument_list|()
argument_list|,
name|QBrush
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
argument_list|)
decl_stmt|;
name|clipItem
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemClipsChildrenToShape
argument_list|)
expr_stmt|;
name|clipItem
operator|->
name|setData
argument_list|(
literal|0
argument_list|,
literal|"clipItem"
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|clipItem
argument_list|)
expr_stmt|;
name|QGraphicsRectItem
modifier|*
name|scrollItem
init|=
name|scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
argument_list|)
decl_stmt|;
name|scrollItem
operator|->
name|setParentItem
argument_list|(
name|clipItem
argument_list|)
expr_stmt|;
name|scrollItem
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsMovable
argument_list|)
expr_stmt|;
name|scrollItem
operator|->
name|setData
argument_list|(
literal|0
argument_list|,
literal|"scrollItem"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
literal|25
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|25
condition|;
operator|++
name|x
control|)
block|{
name|ClipItem
modifier|*
name|rect
init|=
operator|new
name|ClipItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|90
argument_list|,
literal|20
argument_list|,
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
argument_list|)
decl_stmt|;
name|rect
operator|->
name|setParentItem
argument_list|(
name|scrollItem
argument_list|)
expr_stmt|;
name|rect
operator|->
name|setPos
argument_list|(
name|x
operator|*
literal|95
argument_list|,
name|y
operator|*
literal|25
argument_list|)
expr_stmt|;
name|rect
operator|->
name|setData
argument_list|(
literal|0
argument_list|,
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"rect %1 %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|x
argument_list|)
operator|.
name|arg
argument_list|(
name|y
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rect
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemClipsChildrenToShape
argument_list|)
expr_stmt|;
name|QGraphicsEllipseItem
modifier|*
name|ellipse
init|=
operator|new
name|QGraphicsEllipseItem
argument_list|(
operator|-
literal|5
argument_list|,
operator|-
literal|5
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|ellipse
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
argument_list|)
expr_stmt|;
name|ellipse
operator|->
name|setBrush
argument_list|(
name|QBrush
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
argument_list|)
expr_stmt|;
name|ellipse
operator|->
name|setParentItem
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|ellipse
operator|->
name|setData
argument_list|(
literal|0
argument_list|,
name|qPrintable
argument_list|(
name|QString
argument_list|(
literal|"ellipse %1 %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|x
argument_list|)
operator|.
name|arg
argument_list|(
name|y
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|scrollItem
operator|->
name|setRect
argument_list|(
name|scrollItem
operator|->
name|childrenBoundingRect
argument_list|()
argument_list|)
expr_stmt|;
if|#
directive|if
literal|0
block|ItemMover mover(scrollItem);
endif|#
directive|endif
name|CountView
name|view
decl_stmt|;
name|view
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|view
operator|.
name|setSceneRect
argument_list|(
operator|-
literal|25
argument_list|,
operator|-
literal|25
argument_list|,
literal|150
argument_list|,
literal|150
argument_list|)
expr_stmt|;
name|view
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
