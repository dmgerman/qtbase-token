begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|<QGraphicsItem>
end_include
begin_include
include|#
directive|include
file|<QGraphicsScene>
end_include
begin_include
include|#
directive|include
file|<QGraphicsView>
end_include
begin_include
include|#
directive|include
file|<QImage>
end_include
begin_include
include|#
directive|include
file|"chiptester/chiptester.h"
end_include
begin_comment
comment|//#define CALLGRIND_DEBUG
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
end_ifdef
begin_include
include|#
directive|include
file|"valgrind/callgrind.h"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//TESTED_FILES=
end_comment
begin_function
DECL|function|processEvents
specifier|static
specifier|inline
name|void
name|processEvents
parameter_list|()
block|{
name|QPixmapCache
operator|::
name|clear
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|flush
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_class
DECL|class|TestView
class|class
name|TestView
super|:
specifier|public
name|QGraphicsView
block|{
name|Q_OBJECT
public|public:
DECL|function|TestView
name|TestView
parameter_list|()
member_init_list|:
name|QGraphicsView
argument_list|()
member_init_list|,
name|waiting
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|timerId
argument_list|(
operator|-
literal|1
argument_list|)
block|{}
DECL|function|waitForPaintEvent
name|void
name|waitForPaintEvent
parameter_list|(
name|int
name|timeout
init|=
literal|4000
parameter_list|)
block|{
if|if
condition|(
name|waiting
condition|)
return|return;
name|waiting
operator|=
literal|true
expr_stmt|;
name|timerId
operator|=
name|startTimer
argument_list|(
name|timeout
argument_list|)
expr_stmt|;
name|eventLoop
operator|.
name|exec
argument_list|()
expr_stmt|;
name|killTimer
argument_list|(
name|timerId
argument_list|)
expr_stmt|;
name|timerId
operator|=
operator|-
literal|1
expr_stmt|;
name|waiting
operator|=
literal|false
expr_stmt|;
block|}
DECL|function|tryResize
name|void
name|tryResize
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
block|{
name|QDesktopWidget
modifier|*
name|desktop
init|=
name|QApplication
operator|::
name|desktop
argument_list|()
decl_stmt|;
if|if
condition|(
name|desktop
operator|->
name|width
argument_list|()
operator|<
name|width
condition|)
name|width
operator|=
name|desktop
operator|->
name|width
argument_list|()
expr_stmt|;
if|if
condition|(
name|desktop
operator|->
name|height
argument_list|()
operator|<
name|height
condition|)
name|height
operator|=
name|desktop
operator|->
name|height
argument_list|()
expr_stmt|;
if|if
condition|(
name|size
argument_list|()
operator|!=
name|QSize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
condition|)
block|{
name|resize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
block|}
block|}
protected|protected:
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|event
parameter_list|)
block|{
name|QGraphicsView
operator|::
name|paintEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|waiting
condition|)
name|eventLoop
operator|.
name|exit
argument_list|()
expr_stmt|;
block|}
DECL|function|timerEvent
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|timerId
argument_list|()
operator|==
name|timerId
condition|)
name|eventLoop
operator|.
name|exit
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|eventLoop
name|QEventLoop
name|eventLoop
decl_stmt|;
DECL|member|waiting
name|bool
name|waiting
decl_stmt|;
DECL|member|timerId
name|int
name|timerId
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|tst_QGraphicsView
class|class
name|tst_QGraphicsView
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QGraphicsView
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QGraphicsView
parameter_list|()
destructor_decl|;
public|public
name|slots
public|:
name|void
name|initTestCase
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|cleanup
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|construct
parameter_list|()
function_decl|;
name|void
name|paintSingleItem
parameter_list|()
function_decl|;
name|void
name|paintDeepStackingItems
parameter_list|()
function_decl|;
name|void
name|paintDeepStackingItems_clipped
parameter_list|()
function_decl|;
name|void
name|moveSingleItem
parameter_list|()
function_decl|;
name|void
name|mapPointToScene_data
parameter_list|()
function_decl|;
name|void
name|mapPointToScene
parameter_list|()
function_decl|;
name|void
name|mapPointFromScene_data
parameter_list|()
function_decl|;
name|void
name|mapPointFromScene
parameter_list|()
function_decl|;
name|void
name|mapRectToScene_data
parameter_list|()
function_decl|;
name|void
name|mapRectToScene
parameter_list|()
function_decl|;
name|void
name|mapRectFromScene_data
parameter_list|()
function_decl|;
name|void
name|mapRectFromScene
parameter_list|()
function_decl|;
name|void
name|chipTester_data
parameter_list|()
function_decl|;
name|void
name|chipTester
parameter_list|()
function_decl|;
name|void
name|deepNesting_data
parameter_list|()
function_decl|;
name|void
name|deepNesting
parameter_list|()
function_decl|;
name|void
name|imageRiver_data
parameter_list|()
function_decl|;
name|void
name|imageRiver
parameter_list|()
function_decl|;
name|void
name|textRiver_data
parameter_list|()
function_decl|;
name|void
name|textRiver
parameter_list|()
function_decl|;
name|void
name|moveItemCache_data
parameter_list|()
function_decl|;
name|void
name|moveItemCache
parameter_list|()
function_decl|;
name|void
name|paintItemCache_data
parameter_list|()
function_decl|;
name|void
name|paintItemCache
parameter_list|()
function_decl|;
private|private:
DECL|member|mView
name|TestView
name|mView
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QGraphicsView
name|tst_QGraphicsView
operator|::
name|tst_QGraphicsView
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QGraphicsView
name|tst_QGraphicsView
operator|::
name|~
name|tst_QGraphicsView
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|initTestCase
name|void
name|tst_QGraphicsView
operator|::
name|initTestCase
parameter_list|()
block|{
name|mView
operator|.
name|setFrameStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setHorizontalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setVerticalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|mView
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|mView
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|tst_QGraphicsView
operator|::
name|init
parameter_list|()
block|{
name|mView
operator|.
name|setRenderHints
argument_list|(
name|QPainter
operator|::
name|RenderHints
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|mView
operator|.
name|viewport
argument_list|()
operator|->
name|setMouseTracking
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setViewportUpdateMode
argument_list|(
name|QGraphicsView
operator|::
name|BoundingRectViewportUpdate
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
name|processEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|cleanup
name|void
name|tst_QGraphicsView
operator|::
name|cleanup
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|construct
name|void
name|tst_QGraphicsView
operator|::
name|construct
parameter_list|()
block|{
name|QBENCHMARK
block|{
name|QGraphicsView
name|view
decl_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|paintSingleItem
name|void
name|tst_QGraphicsView
operator|::
name|paintSingleItem
parameter_list|()
block|{
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|mView
operator|.
name|viewport
argument_list|()
operator|->
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_define
DECL|macro|DEEP_STACKING_COUNT
define|#
directive|define
name|DEEP_STACKING_COUNT
value|85
end_define
begin_function
DECL|function|paintDeepStackingItems
name|void
name|tst_QGraphicsView
operator|::
name|paintDeepStackingItems
parameter_list|()
block|{
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QGraphicsRectItem
modifier|*
name|item
init|=
name|scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|QGraphicsRectItem
modifier|*
name|lastRect
init|=
name|item
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|DEEP_STACKING_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|QGraphicsRectItem
modifier|*
name|rect
init|=
name|scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|rect
operator|->
name|setPos
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|rect
operator|->
name|setParentItem
argument_list|(
name|lastRect
argument_list|)
expr_stmt|;
name|lastRect
operator|=
name|rect
expr_stmt|;
block|}
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|mView
operator|.
name|viewport
argument_list|()
operator|->
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|paintDeepStackingItems_clipped
name|void
name|tst_QGraphicsView
operator|::
name|paintDeepStackingItems_clipped
parameter_list|()
block|{
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QGraphicsRectItem
modifier|*
name|item
init|=
name|scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|item
operator|->
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemClipsChildrenToShape
argument_list|)
expr_stmt|;
name|QGraphicsRectItem
modifier|*
name|lastRect
init|=
name|item
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|DEEP_STACKING_COUNT
condition|;
operator|++
name|i
control|)
block|{
name|QGraphicsRectItem
modifier|*
name|rect
init|=
name|scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|rect
operator|->
name|setPos
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|rect
operator|->
name|setParentItem
argument_list|(
name|lastRect
argument_list|)
expr_stmt|;
name|lastRect
operator|=
name|rect
expr_stmt|;
block|}
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QImage
name|image
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|image
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|mView
operator|.
name|viewport
argument_list|()
operator|->
name|render
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|moveSingleItem
name|void
name|tst_QGraphicsView
operator|::
name|moveSingleItem
parameter_list|()
block|{
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QGraphicsRectItem
modifier|*
name|item
init|=
name|scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|n
init|=
literal|1
decl_stmt|;
name|QBENCHMARK
block|{
name|item
operator|->
name|setPos
argument_list|(
literal|25
operator|*
name|n
argument_list|,
literal|25
operator|*
name|n
argument_list|)
expr_stmt|;
name|mView
operator|.
name|waitForPaintEvent
argument_list|()
expr_stmt|;
name|n
operator|=
name|n
condition|?
literal|0
else|:
literal|1
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mapPointToScene_data
name|void
name|tst_QGraphicsView
operator|::
name|mapPointToScene_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPoint
argument_list|>
argument_list|(
literal|"point"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QPoint
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"identity  QPoint(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate    QPoint(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scale     QPoint(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|scale
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate QPoint(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"shear     QPoint(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|shear
argument_list|(
literal|1.5
argument_list|,
literal|1.5
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"perspect  QPoint(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|45
argument_list|,
name|Qt
operator|::
name|XAxis
argument_list|)
operator|<<
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapPointToScene
name|void
name|tst_QGraphicsView
operator|::
name|mapPointToScene
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPoint
argument_list|,
name|point
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
decl_stmt|;
name|view
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|view
operator|.
name|mapToScene
argument_list|(
name|point
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mapPointFromScene_data
name|void
name|tst_QGraphicsView
operator|::
name|mapPointFromScene_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPointF
argument_list|>
argument_list|(
literal|"point"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QPointF
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"identity  QPointF(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate    QPointF(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scale     QPointF(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|scale
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate QPointF(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"shear     QPointF(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|shear
argument_list|(
literal|1.5
argument_list|,
literal|1.5
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"perspect  QPointF(100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|45
argument_list|,
name|Qt
operator|::
name|XAxis
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapPointFromScene
name|void
name|tst_QGraphicsView
operator|::
name|mapPointFromScene
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPointF
argument_list|,
name|point
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
decl_stmt|;
name|view
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|view
operator|.
name|mapFromScene
argument_list|(
name|point
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mapRectToScene_data
name|void
name|tst_QGraphicsView
operator|::
name|mapRectToScene_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRect
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QRect
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"identity  QRect(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate    QRect(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scale     QRect(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|scale
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate QRect(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"shear     QRect(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|shear
argument_list|(
literal|1.5
argument_list|,
literal|1.5
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"perspect  QRect(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|45
argument_list|,
name|Qt
operator|::
name|XAxis
argument_list|)
operator|<<
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapRectToScene
name|void
name|tst_QGraphicsView
operator|::
name|mapRectToScene
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRect
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
decl_stmt|;
name|view
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|view
operator|.
name|mapToScene
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mapRectFromScene_data
name|void
name|tst_QGraphicsView
operator|::
name|mapRectFromScene_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QRectF
argument_list|>
argument_list|(
literal|"rect"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"null"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QRectF
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"identity  QRectF(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|<<
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate    QRectF(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|90
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"scale     QRectF(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|scale
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate QRectF(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"shear     QRectF(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|shear
argument_list|(
literal|1.5
argument_list|,
literal|1.5
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"perspect  QRectF(0, 0, 100, 100)"
argument_list|)
operator|<<
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|45
argument_list|,
name|Qt
operator|::
name|XAxis
argument_list|)
operator|<<
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mapRectFromScene
name|void
name|tst_QGraphicsView
operator|::
name|mapRectFromScene
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QRectF
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
decl_stmt|;
name|view
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|view
operator|.
name|mapFromScene
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|chipTester_data
name|void
name|tst_QGraphicsView
operator|::
name|chipTester_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"antialias"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"opengl"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"operation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate, normal"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate, normal, antialias"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate, opengl"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotate, opengl, antialias"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|0
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"zoom, normal"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"zoom, normal, antialias"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"zoom, opengl"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"zoom, opengl, antialias"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|1
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate, normal"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate, normal, antialias"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate, opengl"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|2
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"translate, opengl, antialias"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|chipTester
name|void
name|tst_QGraphicsView
operator|::
name|chipTester
parameter_list|()
block|{
ifdef|#
directive|ifdef
name|Q_WS_WINCE_WM
name|QSKIP
argument_list|(
literal|"WinCE WM: Fails on Windows Mobile w/o OpenGL"
argument_list|,
name|SkipAll
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|antialias
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|opengl
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|operation
argument_list|)
expr_stmt|;
name|ChipTester
name|tester
decl_stmt|;
name|tester
operator|.
name|setAntialias
argument_list|(
name|antialias
argument_list|)
expr_stmt|;
name|tester
operator|.
name|setOpenGL
argument_list|(
name|opengl
argument_list|)
expr_stmt|;
name|tester
operator|.
name|setOperation
argument_list|(
name|ChipTester
operator|::
name|Operation
argument_list|(
name|operation
argument_list|)
argument_list|)
expr_stmt|;
name|tester
operator|.
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
operator|&
name|tester
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|250
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|tester
operator|.
name|runBenchmark
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addChildHelper
specifier|static
name|void
name|addChildHelper
parameter_list|(
name|QGraphicsItem
modifier|*
name|parent
parameter_list|,
name|int
name|n
parameter_list|,
name|bool
name|rotate
parameter_list|)
block|{
if|if
condition|(
operator|!
name|n
condition|)
return|return;
name|QGraphicsRectItem
modifier|*
name|item
init|=
operator|new
name|QGraphicsRectItem
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|parent
argument_list|)
decl_stmt|;
name|item
operator|->
name|setPos
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
if|if
condition|(
name|rotate
condition|)
name|item
operator|->
name|rotate
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|addChildHelper
argument_list|(
name|item
argument_list|,
name|n
operator|-
literal|1
argument_list|,
name|rotate
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deepNesting_data
name|void
name|tst_QGraphicsView
operator|::
name|deepNesting_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"rotate"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"sortCache"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"bsp"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bsp, no transform"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bsp, rotation"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bsp, no transform, sort cache"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"bsp, rotation, sort cache"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no transform"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotation"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"no transform, sort cache"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rotation, sort cache"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deepNesting
name|void
name|tst_QGraphicsView
operator|::
name|deepNesting
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|rotate
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|sortCache
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|bsp
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
literal|15
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|15
condition|;
operator|++
name|x
control|)
block|{
name|QGraphicsItem
modifier|*
name|item1
init|=
name|scene
operator|.
name|addRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|rotate
condition|)
name|item1
operator|->
name|rotate
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|item1
operator|->
name|setPos
argument_list|(
name|x
operator|*
literal|25
argument_list|,
name|y
operator|*
literal|25
argument_list|)
expr_stmt|;
name|addChildHelper
argument_list|(
name|item1
argument_list|,
literal|30
argument_list|,
name|rotate
argument_list|)
expr_stmt|;
block|}
block|}
name|scene
operator|.
name|setItemIndexMethod
argument_list|(
name|bsp
condition|?
name|QGraphicsScene
operator|::
name|BspTreeIndex
else|:
name|QGraphicsScene
operator|::
name|NoIndex
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setSortCacheEnabled
argument_list|(
name|sortCache
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setSceneRect
argument_list|(
name|scene
operator|.
name|sceneRect
argument_list|()
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|600
argument_list|,
literal|600
argument_list|)
expr_stmt|;
operator|(
name|void
operator|)
name|scene
operator|.
name|itemAt
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_START_INSTRUMENTATION
endif|#
directive|endif
name|mView
operator|.
name|viewport
argument_list|()
decl|->
name|update
argument_list|()
decl_stmt|;
name|mView
operator|.
name|waitForPaintEvent
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_STOP_INSTRUMENTATION
endif|#
directive|endif
block|}
block|}
end_function
begin_class
DECL|class|AnimatedPixmapItem
class|class
name|AnimatedPixmapItem
super|:
specifier|public
name|QGraphicsPixmapItem
block|{
public|public:
DECL|function|AnimatedPixmapItem
name|AnimatedPixmapItem
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|bool
name|rot
parameter_list|,
name|bool
name|scal
parameter_list|,
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsPixmapItem
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|rotateFactor
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|scaleFactor
argument_list|(
literal|0
argument_list|)
block|{
name|rotate
operator|=
name|rot
expr_stmt|;
name|scale
operator|=
name|scal
expr_stmt|;
name|xspeed
operator|=
name|x
expr_stmt|;
name|yspeed
operator|=
name|y
expr_stmt|;
block|}
protected|protected:
DECL|function|advance
name|void
name|advance
parameter_list|(
name|int
name|i
parameter_list|)
block|{
if|if
condition|(
operator|!
name|i
condition|)
return|return;
name|int
name|x
init|=
name|int
argument_list|(
name|pos
argument_list|()
operator|.
name|x
argument_list|()
argument_list|)
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
decl_stmt|;
name|x
operator|+=
name|xspeed
expr_stmt|;
name|x
operator|=
operator|(
name|x
operator|%
operator|(
literal|300
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
operator|*
literal|2
operator|)
operator|)
operator|-
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
expr_stmt|;
name|int
name|y
init|=
name|int
argument_list|(
name|pos
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
decl_stmt|;
name|y
operator|+=
name|yspeed
expr_stmt|;
name|y
operator|=
operator|(
name|y
operator|%
operator|(
literal|300
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
operator|*
literal|2
operator|)
operator|)
operator|-
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
expr_stmt|;
name|setPos
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|int
name|rot
init|=
name|rotateFactor
decl_stmt|;
name|int
name|sca
init|=
name|scaleFactor
decl_stmt|;
if|if
condition|(
name|rotate
condition|)
name|rotateFactor
operator|=
literal|1
operator|+
operator|(
name|rot
operator|+
name|xspeed
operator|)
operator|%
literal|360
expr_stmt|;
if|if
condition|(
name|scale
condition|)
name|scaleFactor
operator|=
literal|1
operator|+
operator|(
name|sca
operator|+
name|yspeed
operator|)
operator|%
literal|50
expr_stmt|;
if|if
condition|(
name|rotate
operator|||
name|scale
condition|)
block|{
name|qreal
name|s
init|=
literal|0.5
operator|+
name|scaleFactor
operator|/
literal|50.0
decl_stmt|;
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
name|rotateFactor
argument_list|)
operator|.
name|scale
argument_list|(
name|s
argument_list|,
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
private|private:
DECL|member|xspeed
name|int
name|xspeed
decl_stmt|;
DECL|member|yspeed
name|int
name|yspeed
decl_stmt|;
DECL|member|rotateFactor
name|int
name|rotateFactor
decl_stmt|;
DECL|member|scaleFactor
name|int
name|scaleFactor
decl_stmt|;
DECL|member|rotate
name|bool
name|rotate
decl_stmt|;
DECL|member|scale
name|bool
name|scale
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|imageRiver_data
name|void
name|tst_QGraphicsView
operator|::
name|imageRiver_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"rotation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"scale"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal"
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical"
argument_list|)
operator|<<
literal|1
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"both"
argument_list|)
operator|<<
literal|2
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal rot"
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal scale"
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal rot + scale"
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageRiver
name|void
name|tst_QGraphicsView
operator|::
name|imageRiver
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|rotation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
decl_stmt|;
name|QPixmap
name|pix
argument_list|(
literal|":/images/designer.png"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pix
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|items
decl_stmt|;
name|QFile
name|file
argument_list|(
literal|":/random.data"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QDataStream
name|str
argument_list|(
operator|&
name|file
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
operator|++
name|i
control|)
block|{
name|AnimatedPixmapItem
modifier|*
name|item
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|direction
operator|==
literal|0
condition|)
name|item
operator|=
operator|new
name|AnimatedPixmapItem
argument_list|(
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
literal|0
argument_list|,
name|rotation
argument_list|,
name|scale
argument_list|)
expr_stmt|;
if|if
condition|(
name|direction
operator|==
literal|1
condition|)
name|item
operator|=
operator|new
name|AnimatedPixmapItem
argument_list|(
literal|0
argument_list|,
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
name|rotation
argument_list|,
name|scale
argument_list|)
expr_stmt|;
if|if
condition|(
name|direction
operator|==
literal|2
condition|)
name|item
operator|=
operator|new
name|AnimatedPixmapItem
argument_list|(
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
name|rotation
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPixmap
argument_list|(
name|pix
argument_list|)
expr_stmt|;
name|int
name|rnd1
decl_stmt|,
name|rnd2
decl_stmt|;
name|str
operator|>>
name|rnd1
operator|>>
name|rnd2
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
operator|-
name|pix
operator|.
name|width
argument_list|()
operator|+
name|rnd1
operator|%
operator|(
literal|300
operator|+
name|pix
operator|.
name|width
argument_list|()
operator|)
argument_list|,
operator|-
name|pix
operator|.
name|height
argument_list|()
operator|+
name|rnd2
operator|%
operator|(
literal|300
operator|+
name|pix
operator|.
name|height
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|scene
operator|.
name|setSceneRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_START_INSTRUMENTATION
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
operator|++
name|i
control|)
block|{
name|scene
operator|.
name|advance
argument_list|()
expr_stmt|;
name|mView
operator|.
name|waitForPaintEvent
argument_list|()
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_STOP_INSTRUMENTATION
endif|#
directive|endif
block|}
block|}
end_function
begin_class
DECL|class|AnimatedTextItem
class|class
name|AnimatedTextItem
super|:
specifier|public
name|QGraphicsSimpleTextItem
block|{
public|public:
DECL|function|AnimatedTextItem
name|AnimatedTextItem
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|bool
name|rot
parameter_list|,
name|bool
name|scal
parameter_list|,
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsSimpleTextItem
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|rotateFactor
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|scaleFactor
argument_list|(
literal|25
argument_list|)
block|{
name|setText
argument_list|(
literal|"River of text"
argument_list|)
expr_stmt|;
name|rotate
operator|=
name|rot
expr_stmt|;
name|scale
operator|=
name|scal
expr_stmt|;
name|xspeed
operator|=
name|x
expr_stmt|;
name|yspeed
operator|=
name|y
expr_stmt|;
block|}
protected|protected:
DECL|function|advance
name|void
name|advance
parameter_list|(
name|int
name|i
parameter_list|)
block|{
if|if
condition|(
operator|!
name|i
condition|)
return|return;
name|QRect
name|r
init|=
name|boundingRect
argument_list|()
operator|.
name|toRect
argument_list|()
decl_stmt|;
name|int
name|x
init|=
name|int
argument_list|(
name|pos
argument_list|()
operator|.
name|x
argument_list|()
argument_list|)
operator|+
name|r
operator|.
name|width
argument_list|()
decl_stmt|;
name|x
operator|+=
name|xspeed
expr_stmt|;
name|x
operator|=
operator|(
name|x
operator|%
operator|(
literal|300
operator|+
name|r
operator|.
name|width
argument_list|()
operator|*
literal|2
operator|)
operator|)
operator|-
name|r
operator|.
name|width
argument_list|()
expr_stmt|;
name|int
name|y
init|=
name|int
argument_list|(
name|pos
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
operator|+
name|r
operator|.
name|width
argument_list|()
decl_stmt|;
name|y
operator|+=
name|yspeed
expr_stmt|;
name|y
operator|=
operator|(
name|y
operator|%
operator|(
literal|300
operator|+
name|r
operator|.
name|width
argument_list|()
operator|*
literal|2
operator|)
operator|)
operator|-
name|r
operator|.
name|width
argument_list|()
expr_stmt|;
name|setPos
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|int
name|rot
init|=
name|rotateFactor
decl_stmt|;
name|int
name|sca
init|=
name|scaleFactor
decl_stmt|;
if|if
condition|(
name|rotate
condition|)
name|rotateFactor
operator|=
literal|1
operator|+
operator|(
name|rot
operator|+
name|xspeed
operator|)
operator|%
literal|360
expr_stmt|;
if|if
condition|(
name|scale
condition|)
name|scaleFactor
operator|=
literal|1
operator|+
operator|(
name|sca
operator|+
name|yspeed
operator|)
operator|%
literal|50
expr_stmt|;
if|if
condition|(
name|rotate
operator|||
name|scale
condition|)
block|{
name|qreal
name|s
init|=
literal|0.5
operator|+
name|scaleFactor
operator|/
literal|50.0
decl_stmt|;
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
name|rotateFactor
argument_list|)
operator|.
name|scale
argument_list|(
name|s
argument_list|,
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
private|private:
DECL|member|xspeed
name|int
name|xspeed
decl_stmt|;
DECL|member|yspeed
name|int
name|yspeed
decl_stmt|;
DECL|member|rotateFactor
name|int
name|rotateFactor
decl_stmt|;
DECL|member|scaleFactor
name|int
name|scaleFactor
decl_stmt|;
DECL|member|rotate
name|bool
name|rotate
decl_stmt|;
DECL|member|scale
name|bool
name|scale
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|textRiver_data
name|void
name|tst_QGraphicsView
operator|::
name|textRiver_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"rotation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"scale"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal"
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"vertical"
argument_list|)
operator|<<
literal|1
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"both"
argument_list|)
operator|<<
literal|2
operator|<<
literal|false
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal rot"
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
operator|<<
literal|false
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal scale"
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
operator|<<
literal|true
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"horizontal rot + scale"
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
operator|<<
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|textRiver
name|void
name|tst_QGraphicsView
operator|::
name|textRiver
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|rotation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
decl_stmt|;
name|QPixmap
name|pix
argument_list|(
literal|":/images/designer.png"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pix
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|items
decl_stmt|;
name|QFile
name|file
argument_list|(
literal|":/random.data"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QDataStream
name|str
argument_list|(
operator|&
name|file
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
operator|++
name|i
control|)
block|{
name|AnimatedTextItem
modifier|*
name|item
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|direction
operator|==
literal|0
condition|)
name|item
operator|=
operator|new
name|AnimatedTextItem
argument_list|(
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
literal|0
argument_list|,
name|rotation
argument_list|,
name|scale
argument_list|)
expr_stmt|;
if|if
condition|(
name|direction
operator|==
literal|1
condition|)
name|item
operator|=
operator|new
name|AnimatedTextItem
argument_list|(
literal|0
argument_list|,
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
name|rotation
argument_list|,
name|scale
argument_list|)
expr_stmt|;
if|if
condition|(
name|direction
operator|==
literal|2
condition|)
name|item
operator|=
operator|new
name|AnimatedTextItem
argument_list|(
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
name|rotation
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|int
name|rnd1
decl_stmt|,
name|rnd2
decl_stmt|;
name|str
operator|>>
name|rnd1
operator|>>
name|rnd2
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
operator|-
name|pix
operator|.
name|width
argument_list|()
operator|+
name|rnd1
operator|%
operator|(
literal|300
operator|+
name|pix
operator|.
name|width
argument_list|()
operator|)
argument_list|,
operator|-
name|pix
operator|.
name|height
argument_list|()
operator|+
name|rnd2
operator|%
operator|(
literal|300
operator|+
name|pix
operator|.
name|height
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setAcceptDrops
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|item
operator|->
name|setAcceptHoverEvents
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|scene
operator|.
name|setSceneRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_START_INSTRUMENTATION
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|50
condition|;
operator|++
name|i
control|)
block|{
name|scene
operator|.
name|advance
argument_list|()
expr_stmt|;
name|mView
operator|.
name|waitForPaintEvent
argument_list|()
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_STOP_INSTRUMENTATION
endif|#
directive|endif
block|}
block|}
end_function
begin_class
DECL|class|AnimatedPixmapCacheItem
class|class
name|AnimatedPixmapCacheItem
super|:
specifier|public
name|QGraphicsPixmapItem
block|{
public|public:
DECL|function|AnimatedPixmapCacheItem
name|AnimatedPixmapCacheItem
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsPixmapItem
argument_list|(
name|parent
argument_list|)
block|{
name|xspeed
operator|=
name|x
expr_stmt|;
name|yspeed
operator|=
name|y
expr_stmt|;
block|}
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|)
block|{
name|QGraphicsPixmapItem
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|//We just want to wait, and we don't want to process the event loop with qWait
name|QTest
operator|::
name|qSleep
argument_list|(
literal|3
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|advance
name|void
name|advance
parameter_list|(
name|int
name|i
parameter_list|)
block|{
if|if
condition|(
operator|!
name|i
condition|)
return|return;
name|int
name|x
init|=
name|int
argument_list|(
name|pos
argument_list|()
operator|.
name|x
argument_list|()
argument_list|)
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
decl_stmt|;
name|x
operator|+=
name|xspeed
expr_stmt|;
name|x
operator|=
operator|(
name|x
operator|%
operator|(
literal|300
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
operator|*
literal|2
operator|)
operator|)
operator|-
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
expr_stmt|;
name|int
name|y
init|=
name|int
argument_list|(
name|pos
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
decl_stmt|;
name|y
operator|+=
name|yspeed
expr_stmt|;
name|y
operator|=
operator|(
name|y
operator|%
operator|(
literal|300
operator|+
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
operator|*
literal|2
operator|)
operator|)
operator|-
name|pixmap
argument_list|()
operator|.
name|width
argument_list|()
expr_stmt|;
name|setPos
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|xspeed
name|int
name|xspeed
decl_stmt|;
DECL|member|yspeed
name|int
name|yspeed
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|moveItemCache_data
name|void
name|tst_QGraphicsView
operator|::
name|moveItemCache_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"direction"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"rotation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"cacheMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Horizontal movement : ItemCoordinate Cache"
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Horizontal movement : DeviceCoordinate Cache"
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|DeviceCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Horizontal movement : No Cache"
argument_list|)
operator|<<
literal|0
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|NoCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Vertical +  Horizontal movement : ItemCoordinate Cache"
argument_list|)
operator|<<
literal|2
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Vertical +  Horizontal movement : DeviceCoordinate Cache"
argument_list|)
operator|<<
literal|2
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|DeviceCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Vertical +  Horizontal movement : No Cache"
argument_list|)
operator|<<
literal|2
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|NoCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Horizontal movement + Rotation : ItemCoordinate Cache"
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Horizontal movement + Rotation : DeviceCoordinate Cache"
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|DeviceCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Horizontal movement + Rotation : No Cache"
argument_list|)
operator|<<
literal|0
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|NoCache
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveItemCache
name|void
name|tst_QGraphicsView
operator|::
name|moveItemCache
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|direction
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|rotation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|cacheMode
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
decl_stmt|;
name|QPixmap
name|pix
argument_list|(
literal|":/images/wine.jpeg"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pix
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|items
decl_stmt|;
name|QFile
name|file
argument_list|(
literal|":/random.data"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QDataStream
name|str
argument_list|(
operator|&
name|file
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|AnimatedPixmapCacheItem
modifier|*
name|item
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|direction
operator|==
literal|0
condition|)
name|item
operator|=
operator|new
name|AnimatedPixmapCacheItem
argument_list|(
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|direction
operator|==
literal|1
condition|)
name|item
operator|=
operator|new
name|AnimatedPixmapCacheItem
argument_list|(
literal|0
argument_list|,
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|direction
operator|==
literal|2
condition|)
name|item
operator|=
operator|new
name|AnimatedPixmapCacheItem
argument_list|(
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|,
operator|(
name|i
operator|%
literal|4
operator|)
operator|+
literal|1
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPixmap
argument_list|(
name|pix
argument_list|)
expr_stmt|;
name|item
operator|->
name|setCacheMode
argument_list|(
operator|(
name|QGraphicsItem
operator|::
name|CacheMode
operator|)
name|cacheMode
argument_list|)
expr_stmt|;
if|if
condition|(
name|rotation
condition|)
name|item
operator|->
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|45
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|rnd1
decl_stmt|,
name|rnd2
decl_stmt|;
name|str
operator|>>
name|rnd1
operator|>>
name|rnd2
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
operator|-
name|pix
operator|.
name|width
argument_list|()
operator|+
name|rnd1
operator|%
operator|(
literal|400
operator|+
name|pix
operator|.
name|width
argument_list|()
operator|)
argument_list|,
operator|-
name|pix
operator|.
name|height
argument_list|()
operator|+
name|rnd2
operator|%
operator|(
literal|400
operator|+
name|pix
operator|.
name|height
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|scene
operator|.
name|setSceneRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_START_INSTRUMENTATION
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|scene
operator|.
name|advance
argument_list|()
expr_stmt|;
name|mView
operator|.
name|waitForPaintEvent
argument_list|()
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_STOP_INSTRUMENTATION
endif|#
directive|endif
block|}
block|}
end_function
begin_class
DECL|class|UpdatedPixmapCacheItem
class|class
name|UpdatedPixmapCacheItem
super|:
specifier|public
name|QGraphicsPixmapItem
block|{
public|public:
DECL|function|UpdatedPixmapCacheItem
name|UpdatedPixmapCacheItem
parameter_list|(
name|bool
name|partial
parameter_list|,
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsPixmapItem
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|partial
argument_list|(
name|partial
argument_list|)
block|{     }
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|)
block|{
name|QGraphicsPixmapItem
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|advance
name|void
name|advance
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|partial
condition|)
name|update
argument_list|(
name|QRectF
argument_list|(
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
name|boundingRect
argument_list|()
operator|.
name|center
argument_list|()
operator|.
name|x
argument_list|()
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|update
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|partial
name|bool
name|partial
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|paintItemCache_data
name|void
name|tst_QGraphicsView
operator|::
name|paintItemCache_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"updatePartial"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"rotation"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"cacheMode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Partial Update : ItemCoordinate Cache"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Partial Update : DeviceCoordinate Cache"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|DeviceCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Partial Update : No Cache"
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|NoCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Full Update : ItemCoordinate Cache"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Full Update : DeviceCoordinate Cache"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|DeviceCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Full Update : No Cache"
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|NoCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Partial Update : ItemCoordinate Cache item rotated"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Partial Update : DeviceCoordinate Cache item rotated"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|DeviceCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Partial Update : No Cache item rotated"
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|NoCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Full Update : ItemCoordinate Cache item rotated"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Full Update : DeviceCoordinate Cache item rotated"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|DeviceCoordinateCache
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"Full Update : No Cache item rotated"
argument_list|)
operator|<<
literal|false
operator|<<
literal|true
operator|<<
operator|(
name|int
operator|)
name|QGraphicsItem
operator|::
name|NoCache
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintItemCache
name|void
name|tst_QGraphicsView
operator|::
name|paintItemCache
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|updatePartial
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|rotation
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|cacheMode
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
decl_stmt|;
name|QPixmap
name|pix
argument_list|(
literal|":/images/wine.jpeg"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
operator|!
name|pix
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|items
decl_stmt|;
name|QFile
name|file
argument_list|(
literal|":/random.data"
argument_list|)
decl_stmt|;
name|QVERIFY
argument_list|(
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
argument_list|)
expr_stmt|;
name|QDataStream
name|str
argument_list|(
operator|&
name|file
argument_list|)
decl_stmt|;
name|UpdatedPixmapCacheItem
modifier|*
name|item
init|=
operator|new
name|UpdatedPixmapCacheItem
argument_list|(
name|updatePartial
argument_list|)
decl_stmt|;
name|item
operator|->
name|setPixmap
argument_list|(
name|pix
argument_list|)
expr_stmt|;
name|item
operator|->
name|setCacheMode
argument_list|(
operator|(
name|QGraphicsItem
operator|::
name|CacheMode
operator|)
name|cacheMode
argument_list|)
expr_stmt|;
if|if
condition|(
name|rotation
condition|)
name|item
operator|->
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|45
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|QPixmap
name|pix2
argument_list|(
literal|":/images/wine-big.jpeg"
argument_list|)
decl_stmt|;
name|item
operator|=
operator|new
name|UpdatedPixmapCacheItem
argument_list|(
name|updatePartial
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPixmap
argument_list|(
name|pix2
argument_list|)
expr_stmt|;
name|item
operator|->
name|setCacheMode
argument_list|(
operator|(
name|QGraphicsItem
operator|::
name|CacheMode
operator|)
name|cacheMode
argument_list|)
expr_stmt|;
if|if
condition|(
name|rotation
condition|)
name|item
operator|->
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|45
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setPos
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setSceneRect
argument_list|(
operator|-
literal|100
argument_list|,
operator|-
literal|100
argument_list|,
literal|600
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|mView
operator|.
name|tryResize
argument_list|(
literal|600
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|mView
operator|.
name|setScene
argument_list|(
operator|&
name|scene
argument_list|)
expr_stmt|;
name|processEvents
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_START_INSTRUMENTATION
endif|#
directive|endif
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|scene
operator|.
name|advance
argument_list|()
expr_stmt|;
name|mView
operator|.
name|waitForPaintEvent
argument_list|()
expr_stmt|;
block|}
ifdef|#
directive|ifdef
name|CALLGRIND_DEBUG
name|CALLGRIND_STOP_INSTRUMENTATION
endif|#
directive|endif
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QGraphicsView
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qgraphicsview.moc"
end_include
end_unit
