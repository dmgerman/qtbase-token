begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtTest/QtTest>
end_include
begin_include
include|#
directive|include
file|<QtGui/qgraphicslayout.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qgraphicslinearlayout.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qgraphicswidget.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qgraphicsview.h>
end_include
begin_class
DECL|class|tst_QGraphicsLayout
class|class
name|tst_QGraphicsLayout
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QGraphicsLayout
name|tst_QGraphicsLayout
parameter_list|()
block|{}
DECL|function|~tst_QGraphicsLayout
name|~
name|tst_QGraphicsLayout
parameter_list|()
block|{}
private|private
name|slots
private|:
name|void
name|invalidate
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_class
DECL|class|RectWidget
class|class
name|RectWidget
super|:
specifier|public
name|QGraphicsWidget
block|{
public|public:
DECL|function|RectWidget
name|RectWidget
parameter_list|(
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|wFlags
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsWidget
argument_list|(
name|parent
argument_list|,
name|wFlags
argument_list|)
member_init_list|,
name|setGeometryCalls
argument_list|(
literal|0
argument_list|)
block|{}
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|option
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRoundRect
argument_list|(
name|rect
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
argument_list|()
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
argument_list|()
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|rect
argument_list|()
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|rect
argument_list|()
operator|.
name|topRight
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|function|setGeometry
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
comment|//qDebug()<< "setGeometry():"<< this->data(0).toString();
name|setGeometryCalls
operator|->
name|insert
argument_list|(
name|this
argument_list|,
name|rect
argument_list|)
expr_stmt|;
name|QGraphicsWidget
operator|::
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
DECL|function|callUpdateGeometry
name|void
name|callUpdateGeometry
parameter_list|()
block|{
name|QGraphicsWidget
operator|::
name|updateGeometry
argument_list|()
expr_stmt|;
block|}
DECL|member|setGeometryCalls
name|QMap
argument_list|<
name|RectWidget
modifier|*
argument_list|,
name|QRectF
argument_list|>
modifier|*
name|setGeometryCalls
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|/**  * Test to see how much time is needed to resize all widgets in a  * layout-widget-layout-widget-.... hierarchy from the point where a  * leaf widget changes its size hint. (updateGeometry() is called).  *  * If you run the test for 4.7 you'll get some really high numbers, but  * that's because they also include painting (and possible processing of  * some other events).  */
end_comment
begin_function
DECL|function|invalidate
name|void
name|tst_QGraphicsLayout
operator|::
name|invalidate
parameter_list|()
block|{
name|QGraphicsLayout
operator|::
name|setInstantInvalidatePropagation
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|QMap
argument_list|<
name|RectWidget
modifier|*
argument_list|,
name|QRectF
argument_list|>
name|setGeometryCalls
decl_stmt|;
name|RectWidget
modifier|*
name|window
init|=
operator|new
name|RectWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Window
argument_list|)
decl_stmt|;
name|window
operator|->
name|setGeometryCalls
operator|=
operator|&
name|setGeometryCalls
expr_stmt|;
name|window
operator|->
name|setData
argument_list|(
literal|0
argument_list|,
name|QString
argument_list|(
name|QChar
argument_list|(
literal|'a'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|RectWidget
modifier|*
name|leaf
init|=
literal|0
decl_stmt|;
specifier|const
name|int
name|depth
init|=
literal|100
decl_stmt|;
name|RectWidget
modifier|*
name|parent
init|=
name|window
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|depth
condition|;
operator|++
name|i
control|)
block|{
name|QGraphicsLinearLayout
modifier|*
name|l
init|=
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|l
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|RectWidget
modifier|*
name|child
init|=
operator|new
name|RectWidget
decl_stmt|;
name|child
operator|->
name|setData
argument_list|(
literal|0
argument_list|,
name|QString
argument_list|(
name|QChar
argument_list|(
literal|'a'
operator|+
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|->
name|setGeometryCalls
operator|=
operator|&
name|setGeometryCalls
expr_stmt|;
name|l
operator|->
name|addItem
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|parent
operator|=
name|child
expr_stmt|;
block|}
name|leaf
operator|=
name|parent
expr_stmt|;
name|leaf
operator|->
name|setMinimumSize
argument_list|(
name|QSizeF
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|view
argument_list|)
expr_stmt|;
comment|// ...then measure...
name|int
name|pass
init|=
literal|1
decl_stmt|;
comment|// should be as small as possible, to reduce overhead of painting
name|QSizeF
name|size
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|setGeometryCalls
operator|.
name|clear
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|leaf
operator|->
name|setMinimumSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|leaf
operator|->
name|setMaximumSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
while|while
condition|(
name|setGeometryCalls
operator|.
name|count
argument_list|()
operator|<
name|depth
condition|)
block|{
name|QApplication
operator|::
name|sendPostedEvents
argument_list|()
expr_stmt|;
block|}
comment|// force a resize on each widget, this will ensure
comment|// that each iteration will resize all 50 widgets
name|int
name|w
init|=
name|int
argument_list|(
name|size
operator|.
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|w
operator|^=
literal|2
expr_stmt|;
name|size
operator|.
name|setWidth
argument_list|(
name|w
argument_list|)
expr_stmt|;
block|}
operator|delete
name|view
expr_stmt|;
name|QGraphicsLayout
operator|::
name|setInstantInvalidatePropagation
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QGraphicsLayout
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qgraphicslayout.moc"
end_include
end_unit
