begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// This file contains benchmarks for QRect/QRectF functions.
end_comment
begin_include
include|#
directive|include
file|<QtWidgets/QWidget>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGridLayout>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QPushButton>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QComboBox>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QSpinBox>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QCheckBox>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QRadioButton>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QLabel>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QProgressBar>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QLineEdit>
end_include
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_class
DECL|class|tst_qstylesheetstyle
class|class
name|tst_qstylesheetstyle
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|empty
parameter_list|()
function_decl|;
name|void
name|empty_events
parameter_list|()
function_decl|;
name|void
name|simple
parameter_list|()
function_decl|;
name|void
name|simple_events
parameter_list|()
function_decl|;
name|void
name|grid_data
parameter_list|()
function_decl|;
name|void
name|grid
parameter_list|()
function_decl|;
private|private:
name|QWidget
modifier|*
name|buildSimpleWidgets
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|buildSimpleWidgets
name|QWidget
modifier|*
name|tst_qstylesheetstyle
operator|::
name|buildSimpleWidgets
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|w
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QPushButton
argument_list|(
literal|"pushButton"
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QComboBox
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QCheckBox
argument_list|(
literal|"checkBox"
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QRadioButton
argument_list|(
literal|"radioButton"
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLineEdit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"label"
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QSpinBox
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QProgressBar
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
return|return
name|w
return|;
block|}
end_function
begin_function
DECL|function|empty
name|void
name|tst_qstylesheetstyle
operator|::
name|empty
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
name|buildSimpleWidgets
argument_list|()
decl_stmt|;
name|w
operator|->
name|setStyleSheet
argument_list|(
literal|"/* */"
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|QBENCHMARK
block|{
name|w
operator|->
name|setStyleSheet
argument_list|(
literal|"/*"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|+
literal|"*/"
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
comment|// we want a different string in case we have severals iterations
block|}
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_function
DECL|function|empty_events
name|void
name|tst_qstylesheetstyle
operator|::
name|empty_events
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
name|buildSimpleWidgets
argument_list|()
decl_stmt|;
name|w
operator|->
name|setStyleSheet
argument_list|(
literal|"/* */"
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|QBENCHMARK
block|{
name|w
operator|->
name|setStyleSheet
argument_list|(
literal|"/*"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|+
literal|"*/"
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
comment|// we want a different string in case we have severals iterations
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|}
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|simple_css
specifier|static
specifier|const
name|char
modifier|*
name|simple_css
init|=
literal|" QLineEdit { background: red; }   QPushButton { border: 1px solid yellow; color: pink; }  \n"
literal|" QCheckBox { margin: 3px 5px; background-color:red; } QAbstractButton { background-color: #456; } \n"
literal|" QFrame { padding: 3px; } QLabel { color: black } QSpinBox:hover { background-color:blue; }  "
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|simple
name|void
name|tst_qstylesheetstyle
operator|::
name|simple
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
name|buildSimpleWidgets
argument_list|()
decl_stmt|;
name|w
operator|->
name|setStyleSheet
argument_list|(
literal|"/* */"
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|QBENCHMARK
block|{
name|w
operator|->
name|setStyleSheet
argument_list|(
name|QString
argument_list|(
name|simple_css
argument_list|)
operator|+
literal|"/*"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|+
literal|"*/"
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
comment|// we want a different string in case we have severals iterations
block|}
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_function
DECL|function|simple_events
name|void
name|tst_qstylesheetstyle
operator|::
name|simple_events
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
name|buildSimpleWidgets
argument_list|()
decl_stmt|;
name|w
operator|->
name|setStyleSheet
argument_list|(
literal|"/* */"
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|QBENCHMARK
block|{
name|w
operator|->
name|setStyleSheet
argument_list|(
name|QString
argument_list|(
name|simple_css
argument_list|)
operator|+
literal|"/*"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|+
literal|"*/"
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
comment|// we want a different string in case we have severals iterations
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|}
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_function
DECL|function|grid_data
name|void
name|tst_qstylesheetstyle
operator|::
name|grid_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"events"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"show"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"N"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|n
init|=
literal|5
init|;
name|n
operator|<=
literal|25
condition|;
name|n
operator|+=
literal|5
control|)
block|{
specifier|const
name|QByteArray
name|nString
init|=
name|QByteArray
operator|::
name|number
argument_list|(
name|n
operator|*
name|n
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
literal|"simple--"
operator|+
name|nString
operator|)
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
literal|false
operator|<<
literal|false
operator|<<
name|n
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
literal|"events--"
operator|+
name|nString
operator|)
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
literal|true
operator|<<
literal|false
operator|<<
name|n
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
operator|(
literal|"show--"
operator|+
name|nString
operator|)
operator|.
name|constData
argument_list|()
argument_list|)
operator|<<
literal|true
operator|<<
literal|true
operator|<<
name|n
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|grid
name|void
name|tst_qstylesheetstyle
operator|::
name|grid
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|events
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|show
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|N
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|w
init|=
operator|new
name|QWidget
argument_list|()
decl_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
argument_list|(
name|w
argument_list|)
decl_stmt|;
name|w
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|QString
name|stylesheet
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|N
condition|;
name|x
operator|++
control|)
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|N
condition|;
name|y
operator|++
control|)
block|{
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|y
operator|*
name|N
operator|+
name|x
argument_list|)
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|label
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|label
operator|->
name|setObjectName
argument_list|(
name|QString
argument_list|(
literal|"label%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|y
operator|*
name|N
operator|+
name|x
argument_list|)
argument_list|)
expr_stmt|;
name|stylesheet
operator|+=
name|QString
argument_list|(
literal|"#label%1 { background-color: rgb(0,%2,%3); color: rgb(%2,%3,255);  } "
argument_list|)
operator|.
name|arg
argument_list|(
name|y
operator|*
name|N
operator|+
name|x
argument_list|)
operator|.
name|arg
argument_list|(
name|y
operator|*
literal|255
operator|/
name|N
argument_list|)
operator|.
name|arg
argument_list|(
name|x
operator|*
literal|255
operator|/
name|N
argument_list|)
expr_stmt|;
block|}
name|w
operator|->
name|setStyleSheet
argument_list|(
literal|"/* */"
argument_list|)
expr_stmt|;
if|if
condition|(
name|show
condition|)
block|{
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWaitForWindowShown
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|flush
argument_list|()
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
block|}
name|QApplication
operator|::
name|processEvents
argument_list|()
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|QBENCHMARK
block|{
name|w
operator|->
name|setStyleSheet
argument_list|(
name|stylesheet
operator|+
literal|"/*"
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
argument_list|)
operator|+
literal|"*/"
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
comment|// we want a different string in case we have severals iterations
if|if
condition|(
name|events
condition|)
name|qApp
operator|->
name|processEvents
argument_list|()
expr_stmt|;
block|}
operator|delete
name|w
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_qstylesheetstyle
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
