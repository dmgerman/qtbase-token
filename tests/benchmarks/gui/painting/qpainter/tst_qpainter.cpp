begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QPixmap>
end_include
begin_include
include|#
directive|include
file|<QDialog>
end_include
begin_include
include|#
directive|include
file|<QImage>
end_include
begin_include
include|#
directive|include
file|<QPaintEngine>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|M_PI
end_ifndef
begin_define
DECL|macro|M_PI
define|#
directive|define
name|M_PI
value|3.14159265358979323846
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<private/qpixmap_raster_p.h>
end_include
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QLine
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QRect
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QSize
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPoint
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainterPath
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainter::RenderHint
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_METATYPE
argument_list|(
argument|QPainter::CompositionMode
argument_list|)
end_macro
begin_expr_stmt
name|Q_DECLARE_METATYPE
argument_list|(
name|QImage
operator|::
name|Format
argument_list|)
expr|enum
DECL|enum|PrimitiveType
name|PrimitiveType
block|{
DECL|enumerator|Primitive_Int_DiagLine
name|Primitive_Int_DiagLine
block|,
DECL|enumerator|Primitive_Int_VerLine
name|Primitive_Int_VerLine
block|,
DECL|enumerator|Primitive_Int_HorLine
name|Primitive_Int_HorLine
block|,
DECL|enumerator|Primitive_Int_Rect
name|Primitive_Int_Rect
block|,
DECL|enumerator|Primitive_Int_Ellipse
name|Primitive_Int_Ellipse
block|,
DECL|enumerator|Primitive_Int_Pie
name|Primitive_Int_Pie
block|,
DECL|enumerator|Primitive_Int_Arc
name|Primitive_Int_Arc
block|,
DECL|enumerator|Primitive_Int_Chord
name|Primitive_Int_Chord
block|,
DECL|enumerator|Primitive_Int_TriPoly
name|Primitive_Int_TriPoly
block|,
DECL|enumerator|Primitive_Int_RectPoly
name|Primitive_Int_RectPoly
block|,
DECL|enumerator|Primitive_Int_2RectPoly
name|Primitive_Int_2RectPoly
block|,
DECL|enumerator|Primitive_Float_DiagLine
name|Primitive_Float_DiagLine
block|,
DECL|enumerator|Primitive_Float_VerLine
name|Primitive_Float_VerLine
block|,
DECL|enumerator|Primitive_Float_HorLine
name|Primitive_Float_HorLine
block|,
DECL|enumerator|Primitive_Float_Rect
name|Primitive_Float_Rect
block|,
DECL|enumerator|Primitive_Float_Ellipse
name|Primitive_Float_Ellipse
block|,
DECL|enumerator|Primitive_Float_Pie
name|Primitive_Float_Pie
block|,
DECL|enumerator|Primitive_Float_Arc
name|Primitive_Float_Arc
block|,
DECL|enumerator|Primitive_Float_Chord
name|Primitive_Float_Chord
block|,
DECL|enumerator|Primitive_Float_TriPoly
name|Primitive_Float_TriPoly
block|,
DECL|enumerator|Primitive_Float_RectPoly
name|Primitive_Float_RectPoly
block|,
DECL|enumerator|Primitive_Float_2RectPoly
name|Primitive_Float_2RectPoly
block|,
DECL|enumerator|Primitive_Float_TriPath
name|Primitive_Float_TriPath
block|,
DECL|enumerator|Primitive_Float_RectPath
name|Primitive_Float_RectPath
block|,
DECL|enumerator|Primitive_Float_2RectPath
name|Primitive_Float_2RectPath
block|,
DECL|enumerator|Primitive_Float_EllipsePath
name|Primitive_Float_EllipsePath
block|,
DECL|enumerator|Primitive_Last_Primitive
name|Primitive_Last_Primitive
block|}
expr_stmt|;
end_expr_stmt
begin_enum
DECL|enum|StateChanges
enum|enum
name|StateChanges
block|{
DECL|enumerator|ChangePen
name|ChangePen
init|=
literal|0x0001
block|,
DECL|enumerator|ChangeBrush
name|ChangeBrush
init|=
literal|0x0002
block|,
DECL|enumerator|ChangeClip
name|ChangeClip
init|=
literal|0x0004
block|,
DECL|enumerator|ChangeTransform
name|ChangeTransform
init|=
literal|0x0008
block|}
enum|;
end_enum
begin_struct
DECL|struct|PrimitiveSet
struct|struct
name|PrimitiveSet
block|{
DECL|member|i_rect
name|QRect
name|i_rect
decl_stmt|;
DECL|member|i_line_diag
name|QLine
name|i_line_diag
decl_stmt|;
DECL|member|i_line_ver
name|QLine
name|i_line_ver
decl_stmt|;
DECL|member|i_line_hor
name|QLine
name|i_line_hor
decl_stmt|;
DECL|member|i_poly_tri
name|QPolygon
name|i_poly_tri
decl_stmt|;
DECL|member|i_poly_2rects
name|QPolygon
name|i_poly_2rects
decl_stmt|;
DECL|member|i_poly_rect
name|QPolygon
name|i_poly_rect
decl_stmt|;
DECL|member|f_rect
name|QRectF
name|f_rect
decl_stmt|;
DECL|member|f_line_diag
name|QLineF
name|f_line_diag
decl_stmt|;
DECL|member|f_line_ver
name|QLineF
name|f_line_ver
decl_stmt|;
DECL|member|f_line_hor
name|QLineF
name|f_line_hor
decl_stmt|;
DECL|member|f_poly_tri
name|QPolygonF
name|f_poly_tri
decl_stmt|;
DECL|member|f_poly_2rects
name|QPolygonF
name|f_poly_2rects
decl_stmt|;
DECL|member|f_poly_rect
name|QPolygonF
name|f_poly_rect
decl_stmt|;
DECL|member|f_path_tri
name|QPainterPath
name|f_path_tri
decl_stmt|;
DECL|member|f_path_2rects
name|QPainterPath
name|f_path_2rects
decl_stmt|;
DECL|member|f_path_rect
name|QPainterPath
name|f_path_rect
decl_stmt|;
DECL|member|f_path_ellipse
name|QPainterPath
name|f_path_ellipse
decl_stmt|;
block|}
struct|;
end_struct
begin_function
DECL|function|rasterPixmap
name|QPixmap
name|rasterPixmap
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
block|{
name|QPixmapData
modifier|*
name|data
init|=
operator|new
name|QRasterPixmapData
argument_list|(
name|QPixmapData
operator|::
name|PixmapType
argument_list|)
decl_stmt|;
name|data
operator|->
name|resize
argument_list|(
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
return|return
name|QPixmap
argument_list|(
name|data
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|rasterPixmap
name|QPixmap
name|rasterPixmap
parameter_list|(
specifier|const
name|QSize
modifier|&
name|size
parameter_list|)
block|{
return|return
name|rasterPixmap
argument_list|(
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|rasterPixmap
name|QPixmap
name|rasterPixmap
parameter_list|(
specifier|const
name|QImage
modifier|&
name|image
parameter_list|)
block|{
name|QPixmapData
modifier|*
name|data
init|=
operator|new
name|QRasterPixmapData
argument_list|(
name|QPixmapData
operator|::
name|PixmapType
argument_list|)
decl_stmt|;
name|data
operator|->
name|fromImage
argument_list|(
name|image
argument_list|,
name|Qt
operator|::
name|AutoColor
argument_list|)
expr_stmt|;
return|return
name|QPixmap
argument_list|(
name|data
argument_list|)
return|;
block|}
end_function
begin_class
DECL|class|tst_QPainter
class|class
name|tst_QPainter
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
DECL|function|tst_QPainter
name|tst_QPainter
parameter_list|()
block|{
name|setupBrushes
argument_list|()
expr_stmt|;
name|createPrimitives
argument_list|()
expr_stmt|;
name|m_surface
operator|=
name|surface
argument_list|()
expr_stmt|;
block|}
private|private
name|slots
private|:
name|void
name|beginAndEnd
parameter_list|()
function_decl|;
name|void
name|saveRestore_data
parameter_list|()
function_decl|;
name|void
name|saveRestore
parameter_list|()
function_decl|;
name|void
name|drawLine_data
parameter_list|()
function_decl|;
name|void
name|drawLine
parameter_list|()
function_decl|;
name|void
name|drawLine_clipped_data
parameter_list|()
function_decl|;
name|void
name|drawLine_clipped
parameter_list|()
function_decl|;
name|void
name|drawLine_antialiased_clipped_data
parameter_list|()
function_decl|;
name|void
name|drawLine_antialiased_clipped
parameter_list|()
function_decl|;
name|void
name|drawPixmap_data
parameter_list|()
function_decl|;
name|void
name|drawPixmap
parameter_list|()
function_decl|;
name|void
name|drawImage_data
parameter_list|()
function_decl|;
name|void
name|drawImage
parameter_list|()
function_decl|;
name|void
name|drawTiledPixmap_data
parameter_list|()
function_decl|;
name|void
name|drawTiledPixmap
parameter_list|()
function_decl|;
name|void
name|compositionModes_data
parameter_list|()
function_decl|;
name|void
name|compositionModes
parameter_list|()
function_decl|;
DECL|function|fillPrimitives_10_data
name|void
name|fillPrimitives_10_data
parameter_list|()
block|{
name|drawPrimitives_data_helper
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|function|fillPrimitives_100_data
name|void
name|fillPrimitives_100_data
parameter_list|()
block|{
name|drawPrimitives_data_helper
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|function|fillPrimitives_1000_data
name|void
name|fillPrimitives_1000_data
parameter_list|()
block|{
name|drawPrimitives_data_helper
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|void
name|fillPrimitives_10
parameter_list|()
function_decl|;
name|void
name|fillPrimitives_100
parameter_list|()
function_decl|;
name|void
name|fillPrimitives_1000
parameter_list|()
function_decl|;
DECL|function|strokePrimitives_10_data
name|void
name|strokePrimitives_10_data
parameter_list|()
block|{
name|drawPrimitives_data_helper
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|strokePrimitives_100_data
name|void
name|strokePrimitives_100_data
parameter_list|()
block|{
name|drawPrimitives_data_helper
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|function|strokePrimitives_1000_data
name|void
name|strokePrimitives_1000_data
parameter_list|()
block|{
name|drawPrimitives_data_helper
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|void
name|strokePrimitives_10
parameter_list|()
function_decl|;
name|void
name|strokePrimitives_100
parameter_list|()
function_decl|;
name|void
name|strokePrimitives_1000
parameter_list|()
function_decl|;
name|void
name|drawText_data
parameter_list|()
function_decl|;
name|void
name|drawText
parameter_list|()
function_decl|;
name|void
name|clipAndFill_data
parameter_list|()
function_decl|;
name|void
name|clipAndFill
parameter_list|()
function_decl|;
name|void
name|drawRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawScaledRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawTransformedRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawScaledAntialiasedRoundedRect_data
parameter_list|()
function_decl|;
name|void
name|drawTransformedAntialiasedRoundedRect_data
parameter_list|()
function_decl|;
name|void
name|drawAntialiasedRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawScaledAntialiasedRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawTransformedAntialiasedRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawScaledImageRoundedRect_data
parameter_list|()
function_decl|;
name|void
name|drawTransformedImageRoundedRect_data
parameter_list|()
function_decl|;
name|void
name|drawImageRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawScaledImageRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawTransformedImageRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawScaledBorderPixmapRoundedRect_data
parameter_list|()
function_decl|;
name|void
name|drawTransformedBorderPixmapRoundedRect_data
parameter_list|()
function_decl|;
name|void
name|drawBorderPixmapRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawScaledBorderPixmapRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawTransformedBorderPixmapRoundedRect
parameter_list|()
function_decl|;
name|void
name|drawTransformedTransparentImage_data
parameter_list|()
function_decl|;
name|void
name|drawTransformedSemiTransparentImage_data
parameter_list|()
function_decl|;
name|void
name|drawTransformedFilledImage_data
parameter_list|()
function_decl|;
name|void
name|drawTransformedTransparentImage
parameter_list|()
function_decl|;
name|void
name|drawTransformedSemiTransparentImage
parameter_list|()
function_decl|;
name|void
name|drawTransformedFilledImage
parameter_list|()
function_decl|;
private|private:
name|void
name|setupBrushes
parameter_list|()
function_decl|;
name|void
name|createPrimitives
parameter_list|()
function_decl|;
name|void
name|drawPrimitives_data_helper
parameter_list|(
name|bool
name|fancypens
parameter_list|)
function_decl|;
name|void
name|fillPrimitives_helper
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
name|PrimitiveType
name|type
parameter_list|,
name|PrimitiveSet
modifier|*
name|s
parameter_list|)
function_decl|;
name|QTransform
name|transformForAngle
parameter_list|(
name|qreal
name|angle
parameter_list|)
function_decl|;
DECL|function|surface
name|QPaintDevice
modifier|*
name|surface
parameter_list|()
block|{
name|m_pixmap
operator|=
name|rasterPixmap
argument_list|(
literal|1024
argument_list|,
literal|1024
argument_list|)
expr_stmt|;
return|return
operator|&
name|m_pixmap
return|;
block|}
DECL|member|m_pens
name|QMap
argument_list|<
name|QString
argument_list|,
name|QPen
argument_list|>
name|m_pens
decl_stmt|;
DECL|member|m_brushes
name|QMap
argument_list|<
name|QString
argument_list|,
name|QBrush
argument_list|>
name|m_brushes
decl_stmt|;
DECL|member|m_primitives_10
name|PrimitiveSet
name|m_primitives_10
decl_stmt|;
DECL|member|m_primitives_100
name|PrimitiveSet
name|m_primitives_100
decl_stmt|;
DECL|member|m_primitives_1000
name|PrimitiveSet
name|m_primitives_1000
decl_stmt|;
DECL|member|m_pixmap
name|QPixmap
name|m_pixmap
decl_stmt|;
DECL|member|m_surface
name|QPaintDevice
modifier|*
name|m_surface
decl_stmt|;
DECL|member|m_painter
name|QPainter
name|m_painter
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|createPrimitives
name|void
name|tst_QPainter
operator|::
name|createPrimitives
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|PrimitiveSet
modifier|*
name|ps
decl_stmt|;
name|int
name|size
decl_stmt|;
switch|switch
condition|(
name|i
condition|)
block|{
case|case
literal|0
case|:
name|ps
operator|=
operator|&
name|m_primitives_10
expr_stmt|;
name|size
operator|=
literal|10
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|ps
operator|=
operator|&
name|m_primitives_100
expr_stmt|;
name|size
operator|=
literal|100
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|ps
operator|=
operator|&
name|m_primitives_1000
expr_stmt|;
name|size
operator|=
literal|1000
expr_stmt|;
break|break;
block|}
name|ps
operator|->
name|f_rect
operator|=
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_line_diag
operator|=
name|QLineF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_line_ver
operator|=
name|QLineF
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_line_hor
operator|=
name|QLineF
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
name|size
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_poly_rect
operator|=
name|QPolygonF
argument_list|()
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_poly_2rects
operator|=
name|QPolygonF
argument_list|()
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
operator|*
literal|0.75
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
operator|*
literal|0.75
argument_list|,
name|size
operator|*
literal|0.75
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
operator|*
literal|0.25
argument_list|,
name|size
operator|*
literal|0.75
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
operator|*
literal|0.25
argument_list|,
name|size
operator|*
literal|0.25
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
argument_list|,
name|size
operator|*
literal|0.25
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_poly_tri
operator|=
name|QPolygonF
argument_list|()
operator|<<
name|QPointF
argument_list|(
name|size
operator|/
literal|2.0
argument_list|,
literal|0
argument_list|)
operator|<<
name|QPointF
argument_list|(
literal|0
argument_list|,
name|size
argument_list|)
operator|<<
name|QPointF
argument_list|(
name|size
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_path_tri
operator|.
name|addPolygon
argument_list|(
name|ps
operator|->
name|f_poly_tri
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_path_rect
operator|.
name|addRect
argument_list|(
name|ps
operator|->
name|f_rect
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_path_2rects
operator|.
name|addPolygon
argument_list|(
name|ps
operator|->
name|f_poly_2rects
argument_list|)
expr_stmt|;
name|ps
operator|->
name|f_path_ellipse
operator|.
name|addEllipse
argument_list|(
name|ps
operator|->
name|f_rect
argument_list|)
expr_stmt|;
name|ps
operator|->
name|i_rect
operator|=
name|ps
operator|->
name|f_rect
operator|.
name|toRect
argument_list|()
expr_stmt|;
name|ps
operator|->
name|i_line_diag
operator|=
name|ps
operator|->
name|f_line_diag
operator|.
name|toLine
argument_list|()
expr_stmt|;
name|ps
operator|->
name|i_line_hor
operator|=
name|ps
operator|->
name|f_line_hor
operator|.
name|toLine
argument_list|()
expr_stmt|;
name|ps
operator|->
name|i_line_ver
operator|=
name|ps
operator|->
name|f_line_ver
operator|.
name|toLine
argument_list|()
expr_stmt|;
name|ps
operator|->
name|i_poly_tri
operator|=
name|ps
operator|->
name|f_poly_tri
operator|.
name|toPolygon
argument_list|()
expr_stmt|;
name|ps
operator|->
name|i_poly_rect
operator|=
name|ps
operator|->
name|f_poly_rect
operator|.
name|toPolygon
argument_list|()
expr_stmt|;
name|ps
operator|->
name|i_poly_2rects
operator|=
name|ps
operator|->
name|f_poly_2rects
operator|.
name|toPolygon
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawLine_data
name|void
name|tst_QPainter
operator|::
name|drawLine_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QLine
argument_list|>
argument_list|(
literal|"line"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPen
argument_list|>
argument_list|(
literal|"pen"
argument_list|)
expr_stmt|;
name|QVector
argument_list|<
name|QPen
argument_list|>
name|pens
decl_stmt|;
name|pens
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|DashDotLine
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|4
argument_list|)
operator|<<
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|4
argument_list|,
name|Qt
operator|::
name|DashDotLine
argument_list|)
operator|<<
name|QPen
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
argument_list|)
operator|<<
name|QPen
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|DashDotLine
argument_list|)
operator|<<
name|QPen
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|4
argument_list|)
operator|<<
name|QPen
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|4
argument_list|,
name|Qt
operator|::
name|DashDotLine
argument_list|)
expr_stmt|;
name|QStringList
name|penNames
decl_stmt|;
name|penNames
operator|<<
literal|"black-0"
operator|<<
literal|"black-0-dashdot"
operator|<<
literal|"black-4"
operator|<<
literal|"black-4-dashdot"
operator|<<
literal|"alpha-0"
operator|<<
literal|"alpha-0-dashdot"
operator|<<
literal|"alpha-4"
operator|<<
literal|"alpha-4-dashdot"
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|QPen
name|pen
decl|,
name|pens
control|)
block|{
specifier|const
name|QString
name|s
init|=
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"%1:%2"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|penNames
index|[
name|i
index|]
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"horizontal"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"vertical:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"0-45:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"45-90:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|,
literal|0
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"90-135:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|20
argument_list|,
literal|100
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"135-180:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|100
argument_list|,
literal|20
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"180-225:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"225-270:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|20
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"270-315:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|)
operator|<<
name|pen
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|s
operator|.
name|arg
argument_list|(
literal|"315-360:"
argument_list|)
argument_list|)
argument_list|)
operator|<<
name|QLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
operator|<<
name|pen
expr_stmt|;
operator|++
name|i
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setupBrushes
name|void
name|tst_QPainter
operator|::
name|setupBrushes
parameter_list|()
block|{
comment|// Solid brushes...
name|m_brushes
index|[
literal|"black-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"white-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"transparent-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"alpha1-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"alpha2-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
comment|// Patterns
name|m_brushes
index|[
literal|"dense1-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|Dense1Pattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"dense2-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|Dense2Pattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"dense3-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|Dense3Pattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"dense4-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|Dense4Pattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"dense5-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|Dense5Pattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"dense6-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|Dense6Pattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"dense7-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|Dense7Pattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"hor-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|HorPattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"ver-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|VerPattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"cross-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|CrossPattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"bdiag-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|BDiagPattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"fdiag-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|FDiagPattern
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"diagcross-brush"
index|]
operator|=
name|QBrush
argument_list|(
name|Qt
operator|::
name|DiagCrossPattern
argument_list|)
expr_stmt|;
comment|// Gradients
name|QGradientStops
name|gradient_white_black
decl_stmt|;
name|gradient_white_black
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|gradient_white_black
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
literal|1
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|QGradientStops
name|gradient_white_black10
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|gradient_white_black10
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
name|i
operator|/
literal|10.0
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|gradient_white_black10
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
name|i
operator|/
literal|10.0
operator|+
literal|0.05
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QGradientStops
name|gradient_white_alpha
decl_stmt|;
name|gradient_white_alpha
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|gradient_white_alpha
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
argument_list|)
expr_stmt|;
name|QGradientStops
name|gradient_white_alpha10
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
operator|++
name|i
control|)
block|{
name|gradient_white_alpha10
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
name|i
operator|/
literal|10.0
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|gradient_white_alpha10
operator|<<
name|QPair
argument_list|<
name|qreal
argument_list|,
name|QColor
argument_list|>
argument_list|(
name|i
operator|/
literal|10.0
operator|+
literal|0.05
argument_list|,
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|4
condition|;
operator|++
name|j
control|)
block|{
name|QLinearGradient
name|lg
decl_stmt|;
name|lg
operator|.
name|setStart
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QRadialGradient
name|rg
decl_stmt|;
name|QConicalGradient
name|cg
decl_stmt|;
name|QGradientStops
name|stops
decl_stmt|;
if|if
condition|(
name|j
operator|==
literal|0
condition|)
name|stops
operator|=
name|gradient_white_black
expr_stmt|;
elseif|else
if|if
condition|(
name|j
operator|==
literal|1
condition|)
name|stops
operator|=
name|gradient_white_black10
expr_stmt|;
elseif|else
if|if
condition|(
name|j
operator|==
literal|2
condition|)
name|stops
operator|=
name|gradient_white_alpha
expr_stmt|;
elseif|else
if|if
condition|(
name|j
operator|==
literal|3
condition|)
name|stops
operator|=
name|gradient_white_alpha10
expr_stmt|;
name|lg
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
name|cg
operator|.
name|setStops
argument_list|(
name|stops
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
operator|++
name|i
control|)
block|{
name|lg
operator|.
name|setSpread
argument_list|(
call|(
name|QGradient
operator|::
name|Spread
call|)
argument_list|(
name|i
operator|%
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|lg
operator|.
name|setCoordinateMode
argument_list|(
call|(
name|QGradient
operator|::
name|CoordinateMode
call|)
argument_list|(
name|j
operator|/
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|name
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"-%1%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|lg
operator|.
name|spread
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|lg
operator|.
name|coordinateMode
argument_list|()
argument_list|)
decl_stmt|;
name|lg
operator|.
name|setFinalStop
argument_list|(
literal|100
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"hor-lingrad-w/b-brush"
operator|+
name|name
index|]
operator|=
name|QBrush
argument_list|(
name|lg
argument_list|)
expr_stmt|;
name|lg
operator|.
name|setFinalStop
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"ver-lingrad-w/b-brush"
operator|+
name|name
index|]
operator|=
name|QBrush
argument_list|(
name|lg
argument_list|)
expr_stmt|;
name|lg
operator|.
name|setFinalStop
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"diag-lingrad-w/b-brush"
operator|+
name|name
index|]
operator|=
name|QBrush
argument_list|(
name|lg
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setRadius
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setCenter
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setFocalPoint
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"radgrad-brush"
operator|+
name|name
index|]
operator|=
name|QBrush
argument_list|(
name|rg
argument_list|)
expr_stmt|;
name|cg
operator|.
name|setCenter
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cg
operator|.
name|setAngle
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|m_brushes
index|[
literal|"congrad-brush"
operator|+
name|name
index|]
operator|=
name|QBrush
argument_list|(
name|cg
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Set up pens...
comment|//     m_pens["black-pen"] = QPen(Qt::black);
comment|//     m_pens["white-pen"] = QPen(Qt::white);
comment|//     m_pens["transparent-pen"] = QPen(QColor(255, 255, 255, 0));
comment|//     m_pens["translucent1-pen"] = QPen(QColor(255, 255, 255, 100));
comment|//     m_pens["translucent2-pen"] = QPen(QColor(255, 255, 255, 200));
block|}
end_function
begin_comment
comment|// void QPainter_Primitives::fillRect_data() {
end_comment
begin_comment
comment|//     QTest::addColumn<QBrush>("brush");
end_comment
begin_comment
comment|//     QTest::addColumn<QSize>("size");
end_comment
begin_comment
comment|//     for (QMap<QString, QBrush>::const_iterator it = m_brushes.constBegin();
end_comment
begin_comment
comment|//          it != m_brushes.constEnd(); ++it) {
end_comment
begin_comment
comment|//         for (int w=2; w<1025; w*=2) {
end_comment
begin_comment
comment|//             for (int h=2; h<1025; h*=2) {
end_comment
begin_comment
comment|//                 QTest::newRow(QString("brush=%1; size=[%2,%3]").arg(it.key()).arg(w).arg(h).toAscii().data())
end_comment
begin_comment
comment|//<< *it<< QSize(w, h);
end_comment
begin_comment
comment|//             }
end_comment
begin_comment
comment|//         }
end_comment
begin_comment
comment|//     }
end_comment
begin_comment
comment|// }
end_comment
begin_comment
comment|// void QPainter_Primitives::fillRect()
end_comment
begin_comment
comment|// {
end_comment
begin_comment
comment|//     QFETCH(QBrush, brush);
end_comment
begin_comment
comment|//     QFETCH(QSize, size);
end_comment
begin_comment
comment|//     QImage img(1024, 1024, QImage::Format_ARGB32_Premultiplied);
end_comment
begin_comment
comment|//     QPainter p(&img);
end_comment
begin_comment
comment|//     p.setPen(Qt::NoPen);
end_comment
begin_comment
comment|//     p.setBrush(brush);
end_comment
begin_comment
comment|//     QRect rect(QPoint(0, 0), size);
end_comment
begin_comment
comment|//     QBENCHMARK {
end_comment
begin_comment
comment|//         p.drawRect(rect);
end_comment
begin_comment
comment|//     }
end_comment
begin_comment
comment|// }
end_comment
begin_function
DECL|function|beginAndEnd
name|void
name|tst_QPainter
operator|::
name|beginAndEnd
parameter_list|()
block|{
name|QPixmap
name|pixmap
init|=
name|rasterPixmap
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|QPainter
name|p
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawLine
name|void
name|tst_QPainter
operator|::
name|drawLine
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QLine
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
specifier|const
name|int
name|offset
init|=
literal|5
decl_stmt|;
name|QPixmap
name|pixmapUnclipped
init|=
name|rasterPixmap
argument_list|(
name|qMin
argument_list|(
name|line
operator|.
name|x1
argument_list|()
argument_list|,
name|line
operator|.
name|x2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dx
argument_list|()
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|line
operator|.
name|y1
argument_list|()
argument_list|,
name|line
operator|.
name|y2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dy
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|pixmapUnclipped
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmapUnclipped
argument_list|)
decl_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|paintEngine
argument_list|()
operator|->
name|syncState
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_clipped_data
name|void
name|tst_QPainter
operator|::
name|drawLine_clipped_data
parameter_list|()
block|{
name|drawLine_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_clipped
name|void
name|tst_QPainter
operator|::
name|drawLine_clipped
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QLine
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
specifier|const
name|int
name|offset
init|=
literal|5
decl_stmt|;
name|QPixmap
name|pixmapClipped
init|=
name|rasterPixmap
argument_list|(
name|qMin
argument_list|(
name|line
operator|.
name|x1
argument_list|()
argument_list|,
name|line
operator|.
name|x2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dx
argument_list|()
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|line
operator|.
name|y1
argument_list|()
argument_list|,
name|line
operator|.
name|y2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dy
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|clip
init|=
name|QRect
argument_list|(
name|line
operator|.
name|p1
argument_list|()
argument_list|,
name|line
operator|.
name|p2
argument_list|()
argument_list|)
operator|.
name|normalized
argument_list|()
decl_stmt|;
name|pixmapClipped
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmapClipped
argument_list|)
decl_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|clip
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|paintEngine
argument_list|()
operator|->
name|syncState
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_antialiased_clipped_data
name|void
name|tst_QPainter
operator|::
name|drawLine_antialiased_clipped_data
parameter_list|()
block|{
name|drawLine_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawLine_antialiased_clipped
name|void
name|tst_QPainter
operator|::
name|drawLine_antialiased_clipped
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QLine
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPen
argument_list|,
name|pen
argument_list|)
expr_stmt|;
specifier|const
name|int
name|offset
init|=
literal|5
decl_stmt|;
name|QPixmap
name|pixmapClipped
init|=
name|rasterPixmap
argument_list|(
name|qMin
argument_list|(
name|line
operator|.
name|x1
argument_list|()
argument_list|,
name|line
operator|.
name|x2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dx
argument_list|()
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|line
operator|.
name|y1
argument_list|()
argument_list|,
name|line
operator|.
name|y2
argument_list|()
argument_list|)
operator|+
literal|2
operator|*
name|offset
operator|+
name|qAbs
argument_list|(
name|line
operator|.
name|dy
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|clip
init|=
name|QRect
argument_list|(
name|line
operator|.
name|p1
argument_list|()
argument_list|,
name|line
operator|.
name|p2
argument_list|()
argument_list|)
operator|.
name|normalized
argument_list|()
decl_stmt|;
name|pixmapClipped
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|pixmapClipped
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|p
operator|.
name|translate
argument_list|(
name|offset
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|clip
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|paintEngine
argument_list|()
operator|->
name|syncState
argument_list|()
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawPixmap_data
name|void
name|tst_QPainter
operator|::
name|drawPixmap_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"sourceFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QImage
operator|::
name|Format
argument_list|>
argument_list|(
literal|"targetFormat"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
comment|// 0 = circle, 1 = diag line, 2 = solid rect, 3 = alpharect
name|QList
argument_list|<
name|QSize
argument_list|>
name|sizes
decl_stmt|;
name|sizes
operator|<<
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|1000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|typeNames
index|[]
init|=
block|{
literal|"circle"
block|,
literal|"line"
block|,
literal|"solidrect"
block|,
literal|"alpharect"
block|}
decl_stmt|;
specifier|const
name|char
modifier|*
name|formatNames
index|[]
init|=
block|{
literal|"Invalid"
block|,
literal|"Mono"
block|,
literal|"MonoLSB"
block|,
literal|"Indexed8"
block|,
literal|"RGB32"
block|,
literal|"ARGB32"
block|,
literal|"ARGB32_pm"
block|,
literal|"RGB16"
block|,
literal|"ARGB8565_pm"
block|,
literal|"RGB666"
block|,
literal|"ARGB6666_pm"
block|,
literal|"RGB555"
block|,
literal|"ARGB8555_pm"
block|,
literal|"RGB888"
block|,
literal|"RGB444"
block|,
literal|"ARGB4444_pm"
block|}
decl_stmt|;
for|for
control|(
name|int
name|tar
init|=
literal|4
init|;
name|tar
operator|<
name|QImage
operator|::
name|NImageFormats
condition|;
operator|++
name|tar
control|)
block|{
for|for
control|(
name|int
name|src
init|=
literal|4
init|;
name|src
operator|<
name|QImage
operator|::
name|NImageFormats
condition|;
operator|++
name|src
control|)
block|{
comment|// skip the low-priority formats to keep resultset manageable...
if|if
condition|(
name|tar
operator|==
name|QImage
operator|::
name|Format_RGB444
operator|||
name|src
operator|==
name|QImage
operator|::
name|Format_RGB444
operator|||
name|tar
operator|==
name|QImage
operator|::
name|Format_RGB555
operator|||
name|src
operator|==
name|QImage
operator|::
name|Format_RGB555
operator|||
name|tar
operator|==
name|QImage
operator|::
name|Format_RGB666
operator|||
name|src
operator|==
name|QImage
operator|::
name|Format_RGB666
operator|||
name|tar
operator|==
name|QImage
operator|::
name|Format_RGB888
operator|||
name|src
operator|==
name|QImage
operator|::
name|Format_RGB888
operator|||
name|tar
operator|==
name|QImage
operator|::
name|Format_ARGB4444_Premultiplied
operator|||
name|src
operator|==
name|QImage
operator|::
name|Format_ARGB4444_Premultiplied
operator|||
name|tar
operator|==
name|QImage
operator|::
name|Format_ARGB6666_Premultiplied
operator|||
name|src
operator|==
name|QImage
operator|::
name|Format_ARGB6666_Premultiplied
condition|)
continue|continue;
foreach|foreach
control|(
specifier|const
name|QSize
modifier|&
name|s
decl|,
name|sizes
control|)
block|{
for|for
control|(
name|int
name|type
init|=
literal|0
init|;
name|type
operator|<=
literal|3
condition|;
operator|++
name|type
control|)
block|{
name|QString
name|name
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"%1 on %2, (%3x%4), %5"
argument_list|)
operator|.
name|arg
argument_list|(
name|formatNames
index|[
name|src
index|]
argument_list|)
operator|.
name|arg
argument_list|(
name|formatNames
index|[
name|tar
index|]
argument_list|)
operator|.
name|arg
argument_list|(
name|s
operator|.
name|width
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|s
operator|.
name|height
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|typeNames
index|[
name|type
index|]
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|name
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
operator|(
name|QImage
operator|::
name|Format
operator|)
name|src
operator|<<
operator|(
name|QImage
operator|::
name|Format
operator|)
name|tar
operator|<<
name|s
operator|<<
name|type
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|createImage
specifier|static
name|QImage
name|createImage
parameter_list|(
name|int
name|type
parameter_list|,
specifier|const
name|QSize
modifier|&
name|size
parameter_list|)
block|{
name|QImage
name|base
argument_list|(
name|size
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|base
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|base
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
literal|0
case|:
comment|// ellipse
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawEllipse
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
comment|// line
name|p
operator|.
name|drawLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|,
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|255
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
return|return
name|base
return|;
block|}
end_function
begin_function
DECL|function|drawPixmap
name|void
name|tst_QPainter
operator|::
name|drawPixmap
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|sourceFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|targetFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QImage
name|sourceImage
init|=
name|createImage
argument_list|(
name|type
argument_list|,
name|size
argument_list|)
operator|.
name|convertToFormat
argument_list|(
name|sourceFormat
argument_list|)
decl_stmt|;
name|QImage
name|targetImage
argument_list|(
name|size
argument_list|,
name|targetFormat
argument_list|)
decl_stmt|;
name|QPixmap
name|sourcePixmap
init|=
name|rasterPixmap
argument_list|(
name|sourceImage
argument_list|)
decl_stmt|;
name|QPixmap
name|targetPixmap
init|=
name|rasterPixmap
argument_list|(
name|targetImage
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|targetPixmap
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|sourcePixmap
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawImage_data
name|void
name|tst_QPainter
operator|::
name|drawImage_data
parameter_list|()
block|{
name|drawPixmap_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawImage
name|void
name|tst_QPainter
operator|::
name|drawImage
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|sourceFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QImage
operator|::
name|Format
argument_list|,
name|targetFormat
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QImage
name|sourceImage
init|=
name|createImage
argument_list|(
name|type
argument_list|,
name|size
argument_list|)
operator|.
name|convertToFormat
argument_list|(
name|sourceFormat
argument_list|)
decl_stmt|;
name|QImage
name|targetImage
argument_list|(
name|size
argument_list|,
name|targetFormat
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|targetImage
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|sourceImage
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|compositionModes_data
name|void
name|tst_QPainter
operator|::
name|compositionModes_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainter
operator|::
name|CompositionMode
argument_list|>
argument_list|(
literal|"mode"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"color"
argument_list|)
expr_stmt|;
specifier|const
name|int
name|n
init|=
name|QPainter
operator|::
name|RasterOp_SourceAndNotDestination
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|n
condition|;
operator|++
name|i
control|)
block|{
name|QString
name|title
argument_list|(
literal|"%1:%2"
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|title
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
literal|"10x10:opaque"
argument_list|)
argument_list|)
argument_list|)
operator|<<
call|(
name|QPainter
operator|::
name|CompositionMode
call|)
argument_list|(
name|i
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|title
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
literal|"10x10:!opaque"
argument_list|)
argument_list|)
argument_list|)
operator|<<
call|(
name|QPainter
operator|::
name|CompositionMode
call|)
argument_list|(
name|i
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|title
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
literal|"300x300:opaque"
argument_list|)
argument_list|)
argument_list|)
operator|<<
call|(
name|QPainter
operator|::
name|CompositionMode
call|)
argument_list|(
name|i
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|255
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|qPrintable
argument_list|(
name|title
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|arg
argument_list|(
literal|"300x300:!opaque"
argument_list|)
argument_list|)
argument_list|)
operator|<<
call|(
name|QPainter
operator|::
name|CompositionMode
call|)
argument_list|(
name|i
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|compositionModes
name|void
name|tst_QPainter
operator|::
name|compositionModes
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QPainter
operator|::
name|CompositionMode
argument_list|,
name|mode
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|QPixmap
name|src
init|=
name|rasterPixmap
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|src
operator|.
name|fill
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|QPixmap
name|dest
init|=
name|rasterPixmap
argument_list|(
name|size
argument_list|)
decl_stmt|;
if|if
condition|(
name|mode
operator|<
name|QPainter
operator|::
name|RasterOp_SourceOrDestination
condition|)
name|color
operator|.
name|setAlpha
argument_list|(
literal|127
argument_list|)
expr_stmt|;
comment|// porter-duff needs an alpha channel
name|dest
operator|.
name|fill
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|dest
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|mode
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|src
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTiledPixmap_data
name|void
name|tst_QPainter
operator|::
name|drawTiledPixmap_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"srcSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QSize
argument_list|>
argument_list|(
literal|"dstSize"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QColor
argument_list|>
argument_list|(
literal|"color"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QPainter
operator|::
name|RenderHint
argument_list|>
argument_list|(
literal|"renderHint"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20, smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20, !opaque"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20, !opaque, smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20, rotate(30)"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20, rotate(30), smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20, rotate(30), !opaque"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"10x10=>20x20, rotate(30), !opaque, smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200, smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200, !opaque"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200, !opaque, smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200, rotate(30)"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200, rotate(30), smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200, rotate(30), !opaque"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|RenderHint
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"100x100=>200x200, rotate(30), !opaque, smooth"
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
operator|<<
name|QSize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
operator|<<
operator|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|30
argument_list|)
operator|)
operator|<<
name|QColor
argument_list|(
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|,
literal|127
argument_list|)
operator|<<
name|QPainter
operator|::
name|SmoothPixmapTransform
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTiledPixmap
name|void
name|tst_QPainter
operator|::
name|drawTiledPixmap
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|srcSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QSize
argument_list|,
name|dstSize
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QColor
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QPainter
operator|::
name|RenderHint
argument_list|,
name|renderHint
argument_list|)
expr_stmt|;
name|QPixmap
name|src
init|=
name|rasterPixmap
argument_list|(
name|srcSize
argument_list|)
decl_stmt|;
name|src
operator|.
name|fill
argument_list|(
name|color
argument_list|)
expr_stmt|;
specifier|const
name|QRect
name|dstRect
init|=
name|transform
operator|.
name|mapRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|dstSize
argument_list|)
argument_list|)
decl_stmt|;
name|QPixmap
name|dst
init|=
name|rasterPixmap
argument_list|(
name|dstRect
operator|.
name|right
argument_list|()
operator|+
literal|5
argument_list|,
name|dstRect
operator|.
name|bottom
argument_list|()
operator|+
literal|5
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|dst
argument_list|)
decl_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|renderHint
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawTiledPixmap
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|dstSize
argument_list|)
argument_list|,
name|src
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|fillPrimitives_helper
name|void
name|tst_QPainter
operator|::
name|fillPrimitives_helper
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
name|PrimitiveType
name|type
parameter_list|,
name|PrimitiveSet
modifier|*
name|s
parameter_list|)
block|{
name|p
operator|->
name|paintEngine
argument_list|()
operator|->
name|syncState
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|Primitive_Int_DiagLine
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawLine
argument_list|(
name|s
operator|->
name|i_line_diag
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_VerLine
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawLine
argument_list|(
name|s
operator|->
name|i_line_ver
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_HorLine
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawLine
argument_list|(
name|s
operator|->
name|i_line_hor
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_Rect
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawRect
argument_list|(
name|s
operator|->
name|i_rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_Ellipse
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawEllipse
argument_list|(
name|s
operator|->
name|i_rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_Pie
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPie
argument_list|(
name|s
operator|->
name|i_rect
argument_list|,
literal|45
operator|*
literal|16
argument_list|,
literal|270
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_Arc
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawArc
argument_list|(
name|s
operator|->
name|i_rect
argument_list|,
literal|45
operator|*
literal|16
argument_list|,
literal|270
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_Chord
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawChord
argument_list|(
name|s
operator|->
name|i_rect
argument_list|,
literal|45
operator|*
literal|16
argument_list|,
literal|270
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_TriPoly
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPolygon
argument_list|(
name|s
operator|->
name|i_poly_tri
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_RectPoly
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPolygon
argument_list|(
name|s
operator|->
name|i_poly_rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Int_2RectPoly
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPolygon
argument_list|(
name|s
operator|->
name|i_poly_2rects
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_DiagLine
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawLine
argument_list|(
name|s
operator|->
name|f_line_diag
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_VerLine
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawLine
argument_list|(
name|s
operator|->
name|f_line_ver
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_HorLine
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawLine
argument_list|(
name|s
operator|->
name|f_line_hor
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_Rect
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawRect
argument_list|(
name|s
operator|->
name|f_rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_Ellipse
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawEllipse
argument_list|(
name|s
operator|->
name|f_rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_Pie
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPie
argument_list|(
name|s
operator|->
name|f_rect
argument_list|,
literal|45
operator|*
literal|16
argument_list|,
literal|270
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_Arc
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawArc
argument_list|(
name|s
operator|->
name|f_rect
argument_list|,
literal|45
operator|*
literal|16
argument_list|,
literal|270
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_Chord
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawChord
argument_list|(
name|s
operator|->
name|f_rect
argument_list|,
literal|45
operator|*
literal|16
argument_list|,
literal|270
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_TriPoly
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPolygon
argument_list|(
name|s
operator|->
name|f_poly_tri
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_RectPoly
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPolygon
argument_list|(
name|s
operator|->
name|f_poly_rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_2RectPoly
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPolygon
argument_list|(
name|s
operator|->
name|f_poly_2rects
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_TriPath
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPath
argument_list|(
name|s
operator|->
name|f_path_tri
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_RectPath
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPath
argument_list|(
name|s
operator|->
name|f_path_rect
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_2RectPath
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPath
argument_list|(
name|s
operator|->
name|f_path_2rects
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Primitive_Float_EllipsePath
case|:
name|QBENCHMARK
block|{
name|p
operator|->
name|drawPath
argument_list|(
name|s
operator|->
name|f_path_ellipse
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
block|}
end_function
begin_function
DECL|function|drawPrimitives_data_helper
name|void
name|tst_QPainter
operator|::
name|drawPrimitives_data_helper
parameter_list|(
name|bool
name|fancypens
parameter_list|)
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"aa"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|bool
argument_list|>
argument_list|(
literal|"dash"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"width"
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
specifier|const
name|names
index|[]
init|=
block|{
literal|"IDLine"
block|,
literal|"IVLine"
block|,
literal|"IHLine"
block|,
literal|"IRect"
block|,
literal|"IElli"
block|,
literal|"IPie"
block|,
literal|"IArc"
block|,
literal|"IChord"
block|,
literal|"ITriPol"
block|,
literal|"IRectPol"
block|,
literal|"I2RectPol"
block|,
literal|"FDLine"
block|,
literal|"FVLine"
block|,
literal|"FHLine"
block|,
literal|"FRect"
block|,
literal|"FElli"
block|,
literal|"FPie"
block|,
literal|"FArc"
block|,
literal|"FChord"
block|,
literal|"FTriPol"
block|,
literal|"FRectPol"
block|,
literal|"F2RectPol"
block|,
literal|"FTriPa"
block|,
literal|"FRectPa"
block|,
literal|"F2RectPa"
block|,
literal|"FElliPa"
block|}
decl_stmt|;
if|if
condition|(
name|fancypens
condition|)
block|{
for|for
control|(
name|int
name|dash
init|=
literal|0
init|;
name|dash
operator|<
literal|2
condition|;
operator|++
name|dash
control|)
block|{
for|for
control|(
name|int
name|width
init|=
literal|0
init|;
name|width
operator|<=
literal|4
condition|;
name|width
operator|+=
literal|4
control|)
block|{
for|for
control|(
name|int
name|aa
init|=
literal|0
init|;
name|aa
operator|<
literal|2
condition|;
operator|++
name|aa
control|)
block|{
for|for
control|(
name|int
name|type
init|=
literal|0
init|;
name|type
operator|<
name|Primitive_Last_Primitive
condition|;
operator|++
name|type
control|)
block|{
name|QString
name|name
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
name|names
index|[
name|type
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|aa
condition|)
name|name
operator|+=
literal|" aa"
expr_stmt|;
if|if
condition|(
name|dash
condition|)
name|name
operator|+=
literal|" dotted"
expr_stmt|;
if|if
condition|(
name|width
condition|)
name|name
operator|+=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|" width=%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|width
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|name
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|type
operator|<<
operator|(
name|bool
operator|)
name|aa
operator|<<
operator|(
name|bool
operator|)
name|dash
operator|<<
name|width
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
else|else
block|{
for|for
control|(
name|int
name|aa
init|=
literal|0
init|;
name|aa
operator|<
literal|2
condition|;
operator|++
name|aa
control|)
block|{
for|for
control|(
name|int
name|type
init|=
literal|0
init|;
name|type
operator|<
name|Primitive_Last_Primitive
condition|;
operator|++
name|type
control|)
block|{
name|QString
name|name
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
name|names
index|[
name|type
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|aa
condition|)
name|name
operator|+=
literal|" aa"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|name
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|type
operator|<<
operator|(
name|bool
operator|)
name|aa
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|fillPrimitives_10
name|void
name|tst_QPainter
operator|::
name|fillPrimitives_10
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|fillPrimitives_helper
argument_list|(
operator|&
name|p
argument_list|,
operator|(
name|PrimitiveType
operator|)
name|type
argument_list|,
operator|&
name|m_primitives_10
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillPrimitives_100
name|void
name|tst_QPainter
operator|::
name|fillPrimitives_100
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|fillPrimitives_helper
argument_list|(
operator|&
name|p
argument_list|,
operator|(
name|PrimitiveType
operator|)
name|type
argument_list|,
operator|&
name|m_primitives_100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|fillPrimitives_1000
name|void
name|tst_QPainter
operator|::
name|fillPrimitives_1000
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|fillPrimitives_helper
argument_list|(
operator|&
name|p
argument_list|,
operator|(
name|PrimitiveType
operator|)
name|type
argument_list|,
operator|&
name|m_primitives_1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|strokePrimitives_10
name|void
name|tst_QPainter
operator|::
name|strokePrimitives_10
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|dash
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|,
name|width
argument_list|,
name|dash
condition|?
name|Qt
operator|::
name|DashLine
else|:
name|Qt
operator|::
name|SolidLine
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|fillPrimitives_helper
argument_list|(
operator|&
name|p
argument_list|,
operator|(
name|PrimitiveType
operator|)
name|type
argument_list|,
operator|&
name|m_primitives_10
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|strokePrimitives_100
name|void
name|tst_QPainter
operator|::
name|strokePrimitives_100
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|dash
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|,
name|width
argument_list|,
name|dash
condition|?
name|Qt
operator|::
name|DashLine
else|:
name|Qt
operator|::
name|SolidLine
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|fillPrimitives_helper
argument_list|(
operator|&
name|p
argument_list|,
operator|(
name|PrimitiveType
operator|)
name|type
argument_list|,
operator|&
name|m_primitives_100
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|strokePrimitives_1000
name|void
name|tst_QPainter
operator|::
name|strokePrimitives_1000
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|bool
argument_list|,
name|dash
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|red
argument_list|,
name|width
argument_list|,
name|dash
condition|?
name|Qt
operator|::
name|DashLine
else|:
name|Qt
operator|::
name|SolidLine
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
name|aa
argument_list|)
expr_stmt|;
name|fillPrimitives_helper
argument_list|(
operator|&
name|p
argument_list|,
operator|(
name|PrimitiveType
operator|)
name|type
argument_list|,
operator|&
name|m_primitives_1000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawText_data
name|void
name|tst_QPainter
operator|::
name|drawText_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"a"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ab"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"ab"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"abc"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"abcd"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcd"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"abcde"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcde"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"abcdef"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcdef"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"abcdefg"
argument_list|)
operator|<<
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"abcdefg"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawText
name|void
name|tst_QPainter
operator|::
name|drawText
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawText
argument_list|(
name|QPointF
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|saveRestore_data
name|void
name|tst_QPainter
operator|::
name|saveRestore_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"change"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|16
condition|;
operator|++
name|i
control|)
block|{
name|QString
name|change
init|=
literal|"change="
decl_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
name|change
operator|+=
literal|" none"
expr_stmt|;
if|if
condition|(
name|i
operator|&
name|ChangePen
condition|)
name|change
operator|+=
literal|" pen"
expr_stmt|;
if|if
condition|(
name|i
operator|&
name|ChangeBrush
condition|)
name|change
operator|+=
literal|" brush"
expr_stmt|;
if|if
condition|(
name|i
operator|&
name|ChangeClip
condition|)
name|change
operator|+=
literal|" clip"
expr_stmt|;
if|if
condition|(
name|i
operator|&
name|ChangeTransform
condition|)
name|change
operator|+=
literal|" xform"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
name|change
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|i
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|saveRestore
name|void
name|tst_QPainter
operator|::
name|saveRestore
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|change
argument_list|)
expr_stmt|;
name|QPen
name|pen
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
decl_stmt|;
name|QBrush
name|brush
argument_list|(
name|Qt
operator|::
name|green
argument_list|)
decl_stmt|;
name|QRect
name|r
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|save
argument_list|()
expr_stmt|;
if|if
condition|(
name|change
operator|&
name|ChangePen
condition|)
block|{
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|change
operator|&
name|ChangeBrush
condition|)
block|{
name|p
operator|.
name|setBrush
argument_list|(
name|brush
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|change
operator|&
name|ChangeClip
condition|)
name|p
operator|.
name|setClipRect
argument_list|(
name|r
argument_list|)
expr_stmt|;
if|if
condition|(
name|change
operator|&
name|ChangeTransform
condition|)
block|{
name|p
operator|.
name|scale
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|p
operator|.
name|scale
argument_list|(
literal|1
operator|/
literal|3.0
argument_list|,
literal|1
operator|/
literal|5.0
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|drawRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|p
operator|.
name|restore
argument_list|()
expr_stmt|;
block|}
empty_stmt|;
block|}
end_function
begin_enum
DECL|enum|ClipType
enum|enum
name|ClipType
block|{
DECL|enumerator|RectClipType
name|RectClipType
block|,
DECL|enumerator|RectPathClipType
name|RectPathClipType
block|,
DECL|enumerator|RectRegionClipType
name|RectRegionClipType
block|,
DECL|enumerator|RegionClipType
name|RegionClipType
block|,
DECL|enumerator|PathClipType
name|PathClipType
block|}
enum|;
end_enum
begin_function
DECL|function|clipAndFill_data
name|void
name|tst_QPainter
operator|::
name|clipAndFill_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"type"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rect"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|RectClipType
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rectpath"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|RectPathClipType
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"rectregion"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|RectRegionClipType
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipseRegion"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|RegionClipType
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"ellipsePath"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|PathClipType
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clipAndFill
name|void
name|tst_QPainter
operator|::
name|clipAndFill
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|QRegion
name|region
decl_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|QRectF
name|rect
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|RectClipType
case|:
name|rect
operator|=
name|QRectF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
break|break;
case|case
name|RectPathClipType
case|:
name|path
operator|.
name|addRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
break|break;
case|case
name|RectRegionClipType
case|:
name|region
operator|=
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
break|break;
case|case
name|RegionClipType
case|:
name|region
operator|=
name|QRegion
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
name|QRegion
operator|::
name|Ellipse
argument_list|)
expr_stmt|;
break|break;
case|case
name|PathClipType
case|:
name|path
operator|.
name|addEllipse
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
break|break;
block|}
name|QPainter
name|p
argument_list|(
name|m_surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
if|if
condition|(
name|type
operator|==
name|RectClipType
condition|)
name|p
operator|.
name|setClipRect
argument_list|(
name|rect
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|type
operator|==
name|RectPathClipType
operator|||
name|type
operator|==
name|PathClipType
condition|)
name|p
operator|.
name|setClipPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
else|else
name|p
operator|.
name|setClipRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRect
argument_list|(
literal|110
argument_list|,
literal|110
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|transformForAngle
name|QTransform
name|tst_QPainter
operator|::
name|transformForAngle
parameter_list|(
name|qreal
name|angle
parameter_list|)
block|{
specifier|const
name|qreal
name|inv_dist_to_plane
init|=
literal|1.
operator|/
literal|1024.
decl_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|QTransform
name|rotTrans
decl_stmt|;
name|rotTrans
operator|.
name|translate
argument_list|(
operator|-
literal|40
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QTransform
name|rotTrans2
decl_stmt|;
name|rotTrans2
operator|.
name|translate
argument_list|(
literal|40
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qreal
name|rad
init|=
name|angle
operator|*
literal|2.
operator|*
name|M_PI
operator|/
literal|360.
decl_stmt|;
name|qreal
name|c
init|=
operator|::
name|cos
argument_list|(
name|rad
argument_list|)
decl_stmt|;
name|qreal
name|s
init|=
operator|::
name|sin
argument_list|(
name|rad
argument_list|)
decl_stmt|;
name|qreal
name|x
init|=
literal|0
decl_stmt|;
name|qreal
name|y
init|=
literal|80
decl_stmt|;
name|qreal
name|z
init|=
literal|0
decl_stmt|;
name|qreal
name|len
init|=
name|x
operator|*
name|x
operator|+
name|y
operator|*
name|y
operator|+
name|z
operator|*
name|z
decl_stmt|;
if|if
condition|(
name|len
operator|!=
literal|1.
condition|)
block|{
name|len
operator|=
operator|::
name|sqrt
argument_list|(
name|len
argument_list|)
expr_stmt|;
name|x
operator|/=
name|len
expr_stmt|;
name|y
operator|/=
name|len
expr_stmt|;
name|z
operator|/=
name|len
expr_stmt|;
block|}
name|QTransform
name|rot
argument_list|(
name|x
operator|*
name|x
operator|*
operator|(
literal|1
operator|-
name|c
operator|)
operator|+
name|c
argument_list|,
name|x
operator|*
name|y
operator|*
operator|(
literal|1
operator|-
name|c
operator|)
operator|-
name|z
operator|*
name|s
argument_list|,
name|x
operator|*
name|z
operator|*
operator|(
literal|1
operator|-
name|c
operator|)
operator|+
name|y
operator|*
name|s
operator|*
name|inv_dist_to_plane
argument_list|,
name|y
operator|*
name|x
operator|*
operator|(
literal|1
operator|-
name|c
operator|)
operator|+
name|z
operator|*
name|s
argument_list|,
name|y
operator|*
name|y
operator|*
operator|(
literal|1
operator|-
name|c
operator|)
operator|+
name|c
argument_list|,
name|y
operator|*
name|z
operator|*
operator|(
literal|1
operator|-
name|c
operator|)
operator|-
name|x
operator|*
name|s
operator|*
name|inv_dist_to_plane
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|transform
operator|*=
name|rotTrans
expr_stmt|;
name|transform
operator|*=
name|rot
expr_stmt|;
name|transform
operator|*=
name|rotTrans2
expr_stmt|;
return|return
name|transform
return|;
block|}
end_function
begin_function
DECL|function|drawRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawRoundedRect
parameter_list|()
block|{
name|QImage
name|surface
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
literal|.5
argument_list|,
literal|.5
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawScaledRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawScaledRoundedRect
parameter_list|()
block|{
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|scale
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawRoundedRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTransformedRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawTransformedRoundedRect
parameter_list|()
block|{
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|setWorldTransform
argument_list|(
name|QTransform
argument_list|(
literal|0.956957
argument_list|,
literal|0
argument_list|,
literal|0.000704124
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|16.141
argument_list|,
literal|0
argument_list|,
literal|0.735953
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRoundedRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawAntialiasedRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawAntialiasedRoundedRect
parameter_list|()
block|{
name|QImage
name|surface
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
literal|.5
argument_list|,
literal|.5
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawScaledAntialiasedRoundedRect_data
name|void
name|tst_QPainter
operator|::
name|drawScaledAntialiasedRoundedRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|float
argument_list|>
argument_list|(
literal|"scale"
argument_list|)
expr_stmt|;
for|for
control|(
name|float
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|+=
literal|.1
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"scale=%1"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|i
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawScaledAntialiasedRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawScaledAntialiasedRoundedRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|float
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|p
operator|.
name|scale
argument_list|(
name|scale
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawRoundedRect
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTransformedAntialiasedRoundedRect_data
name|void
name|tst_QPainter
operator|::
name|drawTransformedAntialiasedRoundedRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
for|for
control|(
name|float
name|angle
init|=
literal|0
init|;
name|angle
operator|<
literal|360
condition|;
name|angle
operator|+=
literal|10
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"angle=%1"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|angle
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|transformForAngle
argument_list|(
name|angle
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTransformedAntialiasedRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawTransformedAntialiasedRoundedRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|QPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|setWorldTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawRoundedRect
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawImageRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawImageRoundedRect
parameter_list|()
block|{
comment|//setup image
specifier|const
name|int
name|radius
init|=
literal|10
decl_stmt|;
name|QImage
name|rectImage
argument_list|(
literal|81
argument_list|,
literal|81
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|rectImage
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|rp
argument_list|(
operator|&
name|rectImage
argument_list|)
decl_stmt|;
name|rp
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
literal|.5
argument_list|,
literal|.5
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|rectImage
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawScaledImageRoundedRect_data
name|void
name|tst_QPainter
operator|::
name|drawScaledImageRoundedRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"imageType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB32_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB8565_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawScaledImageRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawScaledImageRoundedRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|imageType
argument_list|)
expr_stmt|;
comment|//setup image
specifier|const
name|int
name|radius
init|=
literal|10
decl_stmt|;
name|QImage
name|rectImage
argument_list|(
literal|81
argument_list|,
literal|81
argument_list|,
operator|(
name|QImage
operator|::
name|Format
operator|)
name|imageType
argument_list|)
decl_stmt|;
name|rectImage
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|rp
argument_list|(
operator|&
name|rectImage
argument_list|)
decl_stmt|;
name|rp
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
literal|.5
argument_list|,
literal|.5
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|scale
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|rectImage
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTransformedImageRoundedRect_data
name|void
name|tst_QPainter
operator|::
name|drawTransformedImageRoundedRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"imageType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB32_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB8565_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTransformedImageRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawTransformedImageRoundedRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|imageType
argument_list|)
expr_stmt|;
comment|//setup image
specifier|const
name|int
name|radius
init|=
literal|10
decl_stmt|;
name|QImage
name|rectImage
argument_list|(
literal|81
argument_list|,
literal|81
argument_list|,
operator|(
name|QImage
operator|::
name|Format
operator|)
name|imageType
argument_list|)
decl_stmt|;
name|rectImage
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|rp
argument_list|(
operator|&
name|rectImage
argument_list|)
decl_stmt|;
name|rp
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
literal|.5
argument_list|,
literal|.5
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|setWorldTransform
argument_list|(
name|QTransform
argument_list|(
literal|0.956957
argument_list|,
literal|0
argument_list|,
literal|0.000704124
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|16.141
argument_list|,
literal|0
argument_list|,
literal|0.735953
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|rectImage
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//code from QDeclarativeRectangle for drawing rounded rects
end_comment
begin_function
DECL|function|drawBorderPixmapRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawBorderPixmapRoundedRect
parameter_list|()
block|{
comment|//setup image
specifier|const
name|int
name|pw
init|=
literal|1
decl_stmt|;
specifier|const
name|int
name|radius
init|=
literal|10
decl_stmt|;
name|QImage
name|rectImage
argument_list|(
name|radius
operator|*
literal|2
operator|+
literal|3
operator|+
name|pw
operator|*
literal|2
argument_list|,
name|radius
operator|*
literal|2
operator|+
literal|3
operator|+
name|pw
operator|*
literal|2
argument_list|,
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
decl_stmt|;
name|rectImage
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|rp
argument_list|(
operator|&
name|rectImage
argument_list|)
decl_stmt|;
name|rp
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
if|if
condition|(
name|pw
operator|%
literal|2
condition|)
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|rectImage
operator|.
name|width
argument_list|()
operator|-
operator|(
name|pw
operator|+
literal|1
operator|)
argument_list|,
name|rectImage
operator|.
name|height
argument_list|()
operator|-
operator|(
name|pw
operator|+
literal|1
operator|)
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
else|else
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
argument_list|,
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
argument_list|,
name|rectImage
operator|.
name|width
argument_list|()
operator|-
name|pw
argument_list|,
name|rectImage
operator|.
name|height
argument_list|()
operator|-
name|pw
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
name|QPixmap
name|rectPixmap
init|=
name|rasterPixmap
argument_list|(
name|rectImage
argument_list|)
decl_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
specifier|const
name|int
name|pw
init|=
literal|2
decl_stmt|;
name|int
name|width
init|=
literal|80
decl_stmt|;
name|int
name|height
init|=
literal|80
decl_stmt|;
name|int
name|xOffset
init|=
operator|(
name|rectPixmap
operator|.
name|width
argument_list|()
operator|-
literal|1
operator|)
operator|/
literal|2
decl_stmt|;
name|int
name|yOffset
init|=
operator|(
name|rectPixmap
operator|.
name|height
argument_list|()
operator|-
literal|1
operator|)
operator|/
literal|2
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|rectPixmap
operator|.
name|width
argument_list|()
operator|==
literal|2
operator|*
name|xOffset
operator|+
literal|1
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|rectPixmap
operator|.
name|height
argument_list|()
operator|==
literal|2
operator|*
name|yOffset
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QMargins
name|margins
argument_list|(
name|xOffset
argument_list|,
name|yOffset
argument_list|,
name|xOffset
argument_list|,
name|yOffset
argument_list|)
decl_stmt|;
name|QTileRules
name|rules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
decl_stmt|;
comment|//NOTE: even though our item may have qreal-based width and height, qDrawBorderPixmap only supports QRects
name|qDrawBorderPixmap
argument_list|(
operator|&
name|p
argument_list|,
name|QRect
argument_list|(
operator|-
name|pw
operator|/
literal|2
argument_list|,
operator|-
name|pw
operator|/
literal|2
argument_list|,
name|width
operator|+
name|pw
argument_list|,
name|height
operator|+
name|pw
argument_list|)
argument_list|,
name|margins
argument_list|,
name|rectPixmap
argument_list|,
name|rectPixmap
operator|.
name|rect
argument_list|()
argument_list|,
name|margins
argument_list|,
name|rules
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawScaledBorderPixmapRoundedRect_data
name|void
name|tst_QPainter
operator|::
name|drawScaledBorderPixmapRoundedRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|float
argument_list|>
argument_list|(
literal|"scale"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"imageType"
argument_list|)
expr_stmt|;
for|for
control|(
name|float
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|+=
literal|.1
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"scale=%1; imagetype=ARGB32_Pre"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|i
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
comment|//for (float i = 0; i< 3; i += .1)
comment|//    QTest::newRow(QString(QLatin1String("scale=%1; imagetype=ARGB8565_Pre")).arg(i).toLatin1())<< i<< (int)QImage::Format_ARGB8565_Premultiplied;
block|}
end_function
begin_comment
comment|//code from QDeclarativeRectangle for drawing rounded rects
end_comment
begin_function
DECL|function|drawScaledBorderPixmapRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawScaledBorderPixmapRoundedRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|float
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|imageType
argument_list|)
expr_stmt|;
comment|//setup image
specifier|const
name|int
name|pw
init|=
literal|1
decl_stmt|;
specifier|const
name|int
name|radius
init|=
literal|10
decl_stmt|;
name|QImage
name|rectImage
argument_list|(
name|radius
operator|*
literal|2
operator|+
literal|3
operator|+
name|pw
operator|*
literal|2
argument_list|,
name|radius
operator|*
literal|2
operator|+
literal|3
operator|+
name|pw
operator|*
literal|2
argument_list|,
operator|(
name|QImage
operator|::
name|Format
operator|)
name|imageType
argument_list|)
decl_stmt|;
name|rectImage
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|rp
argument_list|(
operator|&
name|rectImage
argument_list|)
decl_stmt|;
name|rp
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
if|if
condition|(
name|pw
operator|%
literal|2
condition|)
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|rectImage
operator|.
name|width
argument_list|()
operator|-
operator|(
name|pw
operator|+
literal|1
operator|)
argument_list|,
name|rectImage
operator|.
name|height
argument_list|()
operator|-
operator|(
name|pw
operator|+
literal|1
operator|)
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
else|else
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
argument_list|,
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
argument_list|,
name|rectImage
operator|.
name|width
argument_list|()
operator|-
name|pw
argument_list|,
name|rectImage
operator|.
name|height
argument_list|()
operator|-
name|pw
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
name|QPixmap
name|rectPixmap
init|=
name|rasterPixmap
argument_list|(
name|rectImage
argument_list|)
decl_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|p
operator|.
name|scale
argument_list|(
name|scale
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
specifier|const
name|int
name|pw
init|=
literal|2
decl_stmt|;
name|int
name|width
init|=
literal|80
decl_stmt|;
name|int
name|height
init|=
literal|80
decl_stmt|;
name|int
name|xOffset
init|=
operator|(
name|rectPixmap
operator|.
name|width
argument_list|()
operator|-
literal|1
operator|)
operator|/
literal|2
decl_stmt|;
name|int
name|yOffset
init|=
operator|(
name|rectPixmap
operator|.
name|height
argument_list|()
operator|-
literal|1
operator|)
operator|/
literal|2
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|rectPixmap
operator|.
name|width
argument_list|()
operator|==
literal|2
operator|*
name|xOffset
operator|+
literal|1
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|rectPixmap
operator|.
name|height
argument_list|()
operator|==
literal|2
operator|*
name|yOffset
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QMargins
name|margins
argument_list|(
name|xOffset
argument_list|,
name|yOffset
argument_list|,
name|xOffset
argument_list|,
name|yOffset
argument_list|)
decl_stmt|;
name|QTileRules
name|rules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
decl_stmt|;
name|qDrawBorderPixmap
argument_list|(
operator|&
name|p
argument_list|,
name|QRect
argument_list|(
operator|-
name|pw
operator|/
literal|2
argument_list|,
operator|-
name|pw
operator|/
literal|2
argument_list|,
name|width
operator|+
name|pw
argument_list|,
name|height
operator|+
name|pw
argument_list|)
argument_list|,
name|margins
argument_list|,
name|rectPixmap
argument_list|,
name|rectPixmap
operator|.
name|rect
argument_list|()
argument_list|,
name|margins
argument_list|,
name|rules
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTransformedBorderPixmapRoundedRect_data
name|void
name|tst_QPainter
operator|::
name|drawTransformedBorderPixmapRoundedRect_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QTransform
argument_list|>
argument_list|(
literal|"transform"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"imageType"
argument_list|)
expr_stmt|;
for|for
control|(
name|float
name|angle
init|=
literal|0
init|;
name|angle
operator|<
literal|360
condition|;
name|angle
operator|+=
literal|10
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"angle=%1; imagetype=ARGB32_Pre"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|angle
argument_list|)
operator|.
name|toLatin1
argument_list|()
argument_list|)
operator|<<
name|transformForAngle
argument_list|(
name|angle
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
comment|//for (float angle = 0; angle< 360; angle += 10)
comment|//    QTest::newRow(QString(QLatin1String("angle=%1; imagetype=ARGB8565_Pre")).arg(angle).toLatin1())<< transformForAngle(angle)<< (int)QImage::Format_ARGB8565_Premultiplied;
block|}
end_function
begin_comment
comment|//code from QDeclarativeRectangle for drawing rounded rects
end_comment
begin_function
DECL|function|drawTransformedBorderPixmapRoundedRect
name|void
name|tst_QPainter
operator|::
name|drawTransformedBorderPixmapRoundedRect
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QTransform
argument_list|,
name|transform
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|int
argument_list|,
name|imageType
argument_list|)
expr_stmt|;
comment|//setup image
specifier|const
name|int
name|pw
init|=
literal|1
decl_stmt|;
specifier|const
name|int
name|radius
init|=
literal|10
decl_stmt|;
name|QImage
name|rectImage
argument_list|(
name|radius
operator|*
literal|2
operator|+
literal|3
operator|+
name|pw
operator|*
literal|2
argument_list|,
name|radius
operator|*
literal|2
operator|+
literal|3
operator|+
name|pw
operator|*
literal|2
argument_list|,
operator|(
name|QImage
operator|::
name|Format
operator|)
name|imageType
argument_list|)
decl_stmt|;
name|rectImage
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QPainter
name|rp
argument_list|(
operator|&
name|rectImage
argument_list|)
decl_stmt|;
name|rp
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|rp
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
if|if
condition|(
name|pw
operator|%
literal|2
condition|)
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|rectImage
operator|.
name|width
argument_list|()
operator|-
operator|(
name|pw
operator|+
literal|1
operator|)
argument_list|,
name|rectImage
operator|.
name|height
argument_list|()
operator|-
operator|(
name|pw
operator|+
literal|1
operator|)
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
else|else
name|rp
operator|.
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
argument_list|,
name|qreal
argument_list|(
name|pw
argument_list|)
operator|/
literal|2
argument_list|,
name|rectImage
operator|.
name|width
argument_list|()
operator|-
name|pw
argument_list|,
name|rectImage
operator|.
name|height
argument_list|()
operator|-
name|pw
argument_list|)
argument_list|,
name|radius
argument_list|,
name|radius
argument_list|)
expr_stmt|;
name|QPixmap
name|rectPixmap
init|=
name|rasterPixmap
argument_list|(
name|rectImage
argument_list|)
decl_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|setWorldTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
specifier|const
name|int
name|pw
init|=
literal|2
decl_stmt|;
name|int
name|width
init|=
literal|80
decl_stmt|;
name|int
name|height
init|=
literal|80
decl_stmt|;
name|int
name|xOffset
init|=
operator|(
name|rectPixmap
operator|.
name|width
argument_list|()
operator|-
literal|1
operator|)
operator|/
literal|2
decl_stmt|;
name|int
name|yOffset
init|=
operator|(
name|rectPixmap
operator|.
name|height
argument_list|()
operator|-
literal|1
operator|)
operator|/
literal|2
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|rectPixmap
operator|.
name|width
argument_list|()
operator|==
literal|2
operator|*
name|xOffset
operator|+
literal|1
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|rectPixmap
operator|.
name|height
argument_list|()
operator|==
literal|2
operator|*
name|yOffset
operator|+
literal|1
argument_list|)
expr_stmt|;
name|QMargins
name|margins
argument_list|(
name|xOffset
argument_list|,
name|yOffset
argument_list|,
name|xOffset
argument_list|,
name|yOffset
argument_list|)
decl_stmt|;
name|QTileRules
name|rules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
decl_stmt|;
name|qDrawBorderPixmap
argument_list|(
operator|&
name|p
argument_list|,
name|QRect
argument_list|(
operator|-
name|pw
operator|/
literal|2
argument_list|,
operator|-
name|pw
operator|/
literal|2
argument_list|,
name|width
operator|+
name|pw
argument_list|,
name|height
operator|+
name|pw
argument_list|)
argument_list|,
name|margins
argument_list|,
name|rectPixmap
argument_list|,
name|rectPixmap
operator|.
name|rect
argument_list|()
argument_list|,
name|margins
argument_list|,
name|rules
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTransformedTransparentImage_data
name|void
name|tst_QPainter
operator|::
name|drawTransformedTransparentImage_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"imageType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB32_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB8565_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTransformedTransparentImage
name|void
name|tst_QPainter
operator|::
name|drawTransformedTransparentImage
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|imageType
argument_list|)
expr_stmt|;
comment|//setup image
name|QImage
name|transImage
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
operator|(
name|QImage
operator|::
name|Format
operator|)
name|imageType
argument_list|)
decl_stmt|;
name|transImage
operator|.
name|fill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|setWorldTransform
argument_list|(
name|QTransform
argument_list|(
literal|0.956957
argument_list|,
literal|0
argument_list|,
literal|0.000704124
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|16.141
argument_list|,
literal|0
argument_list|,
literal|0.735953
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|transImage
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTransformedSemiTransparentImage_data
name|void
name|tst_QPainter
operator|::
name|drawTransformedSemiTransparentImage_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"imageType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB32_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB8565_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTransformedSemiTransparentImage
name|void
name|tst_QPainter
operator|::
name|drawTransformedSemiTransparentImage
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|imageType
argument_list|)
expr_stmt|;
comment|//setup image
name|QImage
name|transImage
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
operator|(
name|QImage
operator|::
name|Format
operator|)
name|imageType
argument_list|)
decl_stmt|;
name|transImage
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|128
argument_list|)
operator|.
name|rgba
argument_list|()
argument_list|)
expr_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|setWorldTransform
argument_list|(
name|QTransform
argument_list|(
literal|0.956957
argument_list|,
literal|0
argument_list|,
literal|0.000704124
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|16.141
argument_list|,
literal|0
argument_list|,
literal|0.735953
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|transImage
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawTransformedFilledImage_data
name|void
name|tst_QPainter
operator|::
name|drawTransformedFilledImage_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"imageType"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB32_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"imagetype=ARGB8565_Pre"
argument_list|)
operator|<<
operator|(
name|int
operator|)
name|QImage
operator|::
name|Format_ARGB8565_Premultiplied
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawTransformedFilledImage
name|void
name|tst_QPainter
operator|::
name|drawTransformedFilledImage
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|imageType
argument_list|)
expr_stmt|;
comment|//setup image
name|QImage
name|filledImage
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
operator|(
name|QImage
operator|::
name|Format
operator|)
name|imageType
argument_list|)
decl_stmt|;
name|filledImage
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
comment|//setup surface
name|QImage
name|surface
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
name|QImage
operator|::
name|Format_RGB16
argument_list|)
decl_stmt|;
name|surface
operator|.
name|fill
argument_list|(
name|QColor
argument_list|(
literal|255
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
operator|.
name|rgb
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|surface
argument_list|)
decl_stmt|;
name|QBENCHMARK
block|{
name|p
operator|.
name|setWorldTransform
argument_list|(
name|QTransform
argument_list|(
literal|0.956957
argument_list|,
literal|0
argument_list|,
literal|0.000704124
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|16.141
argument_list|,
literal|0
argument_list|,
literal|0.735953
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawImage
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|filledImage
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QPainter
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qpainter.moc"
end_include
end_unit
