begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qvariant.h>
end_include
begin_define
DECL|macro|ITERATION_COUNT
define|#
directive|define
name|ITERATION_COUNT
value|1e5
end_define
begin_class
DECL|class|tst_QGuiVariant
class|class
name|tst_QGuiVariant
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
public|public:
name|tst_QGuiVariant
parameter_list|()
constructor_decl|;
specifier|virtual
name|~
name|tst_QGuiVariant
parameter_list|()
destructor_decl|;
private|private
name|slots
private|:
name|void
name|createGuiType_data
parameter_list|()
function_decl|;
name|void
name|createGuiType
parameter_list|()
function_decl|;
name|void
name|createGuiTypeCopy_data
parameter_list|()
function_decl|;
name|void
name|createGuiTypeCopy
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|tst_QGuiVariant
name|tst_QGuiVariant
operator|::
name|tst_QGuiVariant
parameter_list|()
block|{ }
end_constructor
begin_destructor
DECL|function|~tst_QGuiVariant
name|tst_QGuiVariant
operator|::
name|~
name|tst_QGuiVariant
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|createGuiType_data
name|void
name|tst_QGuiVariant
operator|::
name|createGuiType_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"typeId"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|QMetaType
operator|::
name|FirstGuiType
init|;
name|i
operator|<=
name|QMetaType
operator|::
name|LastGuiType
condition|;
operator|++
name|i
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|QMetaType
operator|::
name|typeName
argument_list|(
name|i
argument_list|)
argument_list|)
operator|<<
name|i
expr_stmt|;
block|}
end_function
begin_comment
comment|// Tests how fast a Qt GUI type can be default-constructed by a
end_comment
begin_comment
comment|// QVariant. The purpose of this benchmark is to measure the overhead
end_comment
begin_comment
comment|// of creating (and destroying) a QVariant compared to creating the
end_comment
begin_comment
comment|// type directly.
end_comment
begin_function
DECL|function|createGuiType
name|void
name|tst_QGuiVariant
operator|::
name|createGuiType
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|typeId
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ITERATION_COUNT
condition|;
operator|++
name|i
control|)
name|QVariant
argument_list|(
name|typeId
argument_list|,
operator|(
name|void
operator|*
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|createGuiTypeCopy_data
name|void
name|tst_QGuiVariant
operator|::
name|createGuiTypeCopy_data
parameter_list|()
block|{
name|createGuiType_data
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|// Tests how fast a Qt GUI type can be copy-constructed by a
end_comment
begin_comment
comment|// QVariant. The purpose of this benchmark is to measure the overhead
end_comment
begin_comment
comment|// of creating (and destroying) a QVariant compared to creating the
end_comment
begin_comment
comment|// type directly.
end_comment
begin_function
DECL|function|createGuiTypeCopy
name|void
name|tst_QGuiVariant
operator|::
name|createGuiTypeCopy
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|typeId
argument_list|)
expr_stmt|;
name|QVariant
name|other
argument_list|(
name|typeId
argument_list|,
operator|(
name|void
operator|*
operator|)
literal|0
argument_list|)
decl_stmt|;
specifier|const
name|void
modifier|*
name|copy
init|=
name|other
operator|.
name|constData
argument_list|()
decl_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ITERATION_COUNT
condition|;
operator|++
name|i
control|)
name|QVariant
argument_list|(
name|typeId
argument_list|,
name|copy
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QGuiVariant
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qguivariant.moc"
end_include
end_unit
