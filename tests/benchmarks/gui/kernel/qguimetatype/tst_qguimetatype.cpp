begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qtest.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmetatype.h>
end_include
begin_class
DECL|class|tst_QGuiMetaType
class|class
name|tst_QGuiMetaType
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|slots
private|:
name|void
name|constructInPlace_data
parameter_list|()
function_decl|;
name|void
name|constructInPlace
parameter_list|()
function_decl|;
name|void
name|constructInPlaceCopy_data
parameter_list|()
function_decl|;
name|void
name|constructInPlaceCopy
parameter_list|()
function_decl|;
private|private:
name|void
name|constructableGuiTypes
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|constructableGuiTypes
name|void
name|tst_QGuiMetaType
operator|::
name|constructableGuiTypes
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|int
argument_list|>
argument_list|(
literal|"typeId"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|QMetaType
operator|::
name|FirstGuiType
init|;
name|i
operator|<=
name|QMetaType
operator|::
name|LastGuiType
condition|;
operator|++
name|i
control|)
name|QTest
operator|::
name|newRow
argument_list|(
name|QMetaType
operator|::
name|typeName
argument_list|(
name|i
argument_list|)
argument_list|)
operator|<<
name|i
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructInPlace_data
name|void
name|tst_QGuiMetaType
operator|::
name|constructInPlace_data
parameter_list|()
block|{
name|constructableGuiTypes
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructInPlace
name|void
name|tst_QGuiMetaType
operator|::
name|constructInPlace
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|typeId
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|QMetaType
operator|::
name|sizeOf
argument_list|(
name|typeId
argument_list|)
decl_stmt|;
name|void
modifier|*
name|storage
init|=
name|qMallocAligned
argument_list|(
name|size
argument_list|,
literal|2
operator|*
sizeof|sizeof
argument_list|(
name|qlonglong
argument_list|)
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|construct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|,
comment|/*copy=*/
literal|0
argument_list|)
argument_list|,
name|storage
argument_list|)
expr_stmt|;
name|QMetaType
operator|::
name|destruct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
operator|++
name|i
control|)
block|{
name|QMetaType
operator|::
name|construct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|,
comment|/*copy=*/
literal|0
argument_list|)
expr_stmt|;
name|QMetaType
operator|::
name|destruct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|)
expr_stmt|;
block|}
block|}
name|qFreeAligned
argument_list|(
name|storage
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructInPlaceCopy_data
name|void
name|tst_QGuiMetaType
operator|::
name|constructInPlaceCopy_data
parameter_list|()
block|{
name|constructableGuiTypes
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|constructInPlaceCopy
name|void
name|tst_QGuiMetaType
operator|::
name|constructInPlaceCopy
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|int
argument_list|,
name|typeId
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|QMetaType
operator|::
name|sizeOf
argument_list|(
name|typeId
argument_list|)
decl_stmt|;
name|void
modifier|*
name|storage
init|=
name|qMallocAligned
argument_list|(
name|size
argument_list|,
literal|2
operator|*
sizeof|sizeof
argument_list|(
name|qlonglong
argument_list|)
argument_list|)
decl_stmt|;
name|void
modifier|*
name|other
init|=
name|QMetaType
operator|::
name|create
argument_list|(
name|typeId
argument_list|)
decl_stmt|;
name|QCOMPARE
argument_list|(
name|QMetaType
operator|::
name|construct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|,
name|other
argument_list|)
argument_list|,
name|storage
argument_list|)
expr_stmt|;
name|QMetaType
operator|::
name|destruct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|)
expr_stmt|;
name|QBENCHMARK
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
operator|++
name|i
control|)
block|{
name|QMetaType
operator|::
name|construct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|QMetaType
operator|::
name|destruct
argument_list|(
name|typeId
argument_list|,
name|storage
argument_list|)
expr_stmt|;
block|}
block|}
name|QMetaType
operator|::
name|destroy
argument_list|(
name|typeId
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|qFreeAligned
argument_list|(
name|storage
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QGuiMetaType
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qguimetatype.moc"
end_include
end_unit
