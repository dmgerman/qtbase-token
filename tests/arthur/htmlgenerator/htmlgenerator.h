begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|HTMLGENERATOR_H
end_ifndef
begin_define
DECL|macro|HTMLGENERATOR_H
define|#
directive|define
name|HTMLGENERATOR_H
end_define
begin_include
include|#
directive|include
file|"xmldata.h"
end_include
begin_include
include|#
directive|include
file|<QTextStream>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|<QString>
end_include
begin_macro
DECL|function|QT_FORWARD_DECLARE_CLASS
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QStringList
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QSettings
argument_list|)
end_macro
begin_struct
struct|struct
name|HTMLImage
block|{
name|public
label|:
name|QString
name|file
decl_stmt|;
name|QString
name|generatorName
decl_stmt|;
name|GeneratorFlags
name|flags
decl_stmt|;
name|QString
name|details
decl_stmt|;
block|}
struct|;
end_struct
begin_struct
DECL|struct|HTMLRow
struct|struct
name|HTMLRow
block|{
DECL|member|public
name|public
label|:
name|QString
name|testcase
decl_stmt|;
DECL|member|referenceImages
name|QList
operator|<
name|HTMLImage
operator|>
name|referenceImages
expr_stmt|;
DECL|member|foreignImages
name|QList
operator|<
name|HTMLImage
operator|>
name|foreignImages
expr_stmt|;
DECL|member|images
name|QList
operator|<
name|HTMLImage
operator|>
name|images
expr_stmt|;
block|}
struct|;
end_struct
begin_struct
DECL|struct|HTMLSuite
struct|struct
name|HTMLSuite
block|{
DECL|member|public
name|public
label|:
name|QString
name|name
decl_stmt|;
DECL|member|QString
DECL|member|rows
name|QMap
operator|<
name|QString
operator|,
name|HTMLRow
operator|*
operator|>
name|rows
expr_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
name|class
name|HTMLGenerator
block|{
name|public
label|:
name|HTMLGenerator
argument_list|()
expr_stmt|;
name|void
name|startSuite
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
function_decl|;
name|void
name|startRow
parameter_list|(
specifier|const
name|QString
modifier|&
name|testcase
parameter_list|)
function_decl|;
name|void
name|addImage
parameter_list|(
specifier|const
name|QString
modifier|&
name|generator
parameter_list|,
specifier|const
name|QString
modifier|&
name|image
parameter_list|,
specifier|const
name|QString
modifier|&
name|details
parameter_list|,
name|GeneratorFlags
name|flags
parameter_list|)
function_decl|;
name|void
name|endRow
parameter_list|()
function_decl|;
name|void
name|endSuite
parameter_list|()
function_decl|;
name|void
name|generateIndex
parameter_list|(
specifier|const
name|QString
modifier|&
name|file
parameter_list|)
function_decl|;
name|void
name|generatePages
parameter_list|()
function_decl|;
name|void
name|run
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
function_decl|;
name|private
label|:
name|void
name|generateSuite
parameter_list|(
specifier|const
name|HTMLSuite
modifier|&
name|suite
parameter_list|)
function_decl|;
name|void
name|generateReferencePage
parameter_list|(
specifier|const
name|HTMLSuite
modifier|&
name|suite
parameter_list|)
function_decl|;
name|void
name|generateHistoryPages
parameter_list|(
specifier|const
name|HTMLSuite
modifier|&
name|suite
parameter_list|)
function_decl|;
name|void
name|generateHistoryForEngine
parameter_list|(
specifier|const
name|HTMLSuite
modifier|&
name|suite
parameter_list|,
specifier|const
name|QString
modifier|&
name|engine
parameter_list|)
function_decl|;
name|void
name|generateQtComparisonPage
parameter_list|(
specifier|const
name|HTMLSuite
modifier|&
name|suite
parameter_list|)
function_decl|;
name|void
name|generateHeader
parameter_list|(
name|QTextStream
modifier|&
name|out
parameter_list|,
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|generators
parameter_list|)
function_decl|;
name|void
name|startGenerateRow
parameter_list|(
name|QTextStream
modifier|&
name|out
parameter_list|,
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
function_decl|;
name|void
name|generateImages
argument_list|(
name|QTextStream
operator|&
name|out
argument_list|,
specifier|const
name|QList
operator|<
name|HTMLImage
operator|>
operator|&
name|images
argument_list|)
decl_stmt|;
name|void
name|generateHistoryImages
argument_list|(
name|QTextStream
operator|&
name|out
argument_list|,
specifier|const
name|QList
operator|<
name|HTMLImage
operator|>
operator|&
name|images
argument_list|)
decl_stmt|;
name|void
name|finishGenerateRow
parameter_list|(
name|QTextStream
modifier|&
name|out
parameter_list|,
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
function_decl|;
name|void
name|generateFooter
parameter_list|(
name|QTextStream
modifier|&
name|out
parameter_list|)
function_decl|;
name|void
name|processArguments
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
function_decl|;
name|void
name|convertToHtml
parameter_list|()
function_decl|;
name|void
name|createPerformance
parameter_list|()
function_decl|;
name|private
label|:
name|QMap
operator|<
name|QString
operator|,
name|HTMLSuite
operator|*
operator|>
name|suites
expr_stmt|;
name|QMap
operator|<
name|QString
operator|,
name|XMLEngine
operator|*
operator|>
name|engines
expr_stmt|;
name|QSettings
modifier|*
name|settings
decl_stmt|;
name|QString
name|outputDirName
decl_stmt|;
name|QString
name|baseDataDir
decl_stmt|;
name|QString
name|htmlOutputDir
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
