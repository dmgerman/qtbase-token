begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_class
DECL|class|MyWidget
class|class
name|MyWidget
super|:
specifier|public
name|QWidget
block|{
public|public:
DECL|function|MyWidget
name|MyWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|QString
modifier|&
name|imagefname
parameter_list|,
name|bool
name|scaleImage
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|fileName
argument_list|(
name|imagefname
argument_list|)
member_init_list|,
name|scale
argument_list|(
name|scaleImage
argument_list|)
block|{      }
DECL|function|paintEvent
specifier|virtual
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
comment|/*event*/
parameter_list|)
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QImageReader
name|reader
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|reader
operator|.
name|canRead
argument_list|()
condition|)
block|{
name|qWarning
argument_list|(
literal|"Unable to read image file %s"
argument_list|,
name|fileName
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
operator|!
name|scale
condition|)
block|{
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|painter
operator|.
name|drawImage
argument_list|(
name|rect
argument_list|()
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|reader
operator|.
name|setScaledSize
argument_list|(
name|QSize
argument_list|(
name|rect
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
name|rect
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QImage
name|image
init|=
name|reader
operator|.
name|read
argument_list|()
decl_stmt|;
name|painter
operator|.
name|drawImage
argument_list|(
name|rect
argument_list|()
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
block|}
private|private:
DECL|member|fileName
name|QString
name|fileName
decl_stmt|;
DECL|member|scale
name|bool
name|scale
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|// both the scaled and unscaled version of the CMYK encoded JPEG
end_comment
begin_comment
comment|//      should have the same colors and not look corrupted.
end_comment
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QWidget
name|mainWidget
decl_stmt|;
name|mainWidget
operator|.
name|setWindowTitle
argument_list|(
literal|"Colors in images are identical?"
argument_list|)
expr_stmt|;
name|mainWidget
operator|.
name|setMinimumSize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|l
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|MyWidget
modifier|*
name|w1
init|=
operator|new
name|MyWidget
argument_list|(
operator|&
name|mainWidget
argument_list|,
literal|"Qt_logostrap_CMYK.jpg"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|MyWidget
modifier|*
name|w2
init|=
operator|new
name|MyWidget
argument_list|(
operator|&
name|mainWidget
argument_list|,
literal|"Qt_logostrap_CMYK.jpg"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|w1
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|w2
argument_list|)
expr_stmt|;
name|mainWidget
operator|.
name|setLayout
argument_list|(
name|l
argument_list|)
expr_stmt|;
name|mainWidget
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
