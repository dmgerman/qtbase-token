begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qget.h"
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_constructor
DECL|function|TransferItem
name|TransferItem
operator|::
name|TransferItem
parameter_list|(
specifier|const
name|QNetworkRequest
modifier|&
name|r
parameter_list|,
specifier|const
name|QString
modifier|&
name|u
parameter_list|,
specifier|const
name|QString
modifier|&
name|p
parameter_list|,
name|QNetworkAccessManager
modifier|&
name|n
parameter_list|,
name|Method
name|m
parameter_list|)
member_init_list|:
name|method
argument_list|(
name|m
argument_list|)
member_init_list|,
name|request
argument_list|(
name|r
argument_list|)
member_init_list|,
name|reply
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|nam
argument_list|(
name|n
argument_list|)
member_init_list|,
name|inputFile
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|outputFile
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|user
argument_list|(
name|u
argument_list|)
member_init_list|,
name|password
argument_list|(
name|p
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|progress
name|void
name|TransferItem
operator|::
name|progress
parameter_list|(
name|qint64
name|sent
parameter_list|,
name|qint64
name|total
parameter_list|)
block|{
if|if
condition|(
name|total
operator|>
literal|0
condition|)
name|qDebug
argument_list|()
operator|<<
operator|(
name|sent
operator|*
literal|100
operator|/
name|total
operator|)
operator|<<
literal|'%'
expr_stmt|;
else|else
name|qDebug
argument_list|()
operator|<<
name|sent
operator|<<
literal|'B'
expr_stmt|;
block|}
end_function
begin_function
DECL|function|start
name|void
name|TransferItem
operator|::
name|start
parameter_list|()
block|{
switch|switch
condition|(
name|method
condition|)
block|{
case|case
name|Get
case|:
name|reply
operator|=
name|nam
operator|.
name|get
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|reply
argument_list|,
name|SIGNAL
argument_list|(
name|readyRead
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|readyRead
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|reply
argument_list|,
name|SIGNAL
argument_list|(
name|downloadProgress
argument_list|(
name|qint64
argument_list|,
name|qint64
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|progress
argument_list|(
name|qint64
argument_list|,
name|qint64
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Put
case|:
name|reply
operator|=
name|nam
operator|.
name|put
argument_list|(
name|request
argument_list|,
name|inputFile
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|reply
argument_list|,
name|SIGNAL
argument_list|(
name|uploadProgress
argument_list|(
name|qint64
argument_list|,
name|qint64
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|progress
argument_list|(
name|qint64
argument_list|,
name|qint64
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Post
case|:
name|reply
operator|=
name|nam
operator|.
name|post
argument_list|(
name|request
argument_list|,
name|inputFile
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|reply
argument_list|,
name|SIGNAL
argument_list|(
name|uploadProgress
argument_list|(
name|qint64
argument_list|,
name|qint64
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|progress
argument_list|(
name|qint64
argument_list|,
name|qint64
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|connect
argument_list|(
name|reply
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|DownloadItem
name|DownloadItem
operator|::
name|DownloadItem
parameter_list|(
specifier|const
name|QNetworkRequest
modifier|&
name|r
parameter_list|,
specifier|const
name|QString
modifier|&
name|user
parameter_list|,
specifier|const
name|QString
modifier|&
name|password
parameter_list|,
name|QNetworkAccessManager
modifier|&
name|manager
parameter_list|)
member_init_list|:
name|TransferItem
argument_list|(
name|r
argument_list|,
name|user
argument_list|,
name|password
argument_list|,
name|manager
argument_list|,
name|Get
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~DownloadItem
name|DownloadItem
operator|::
name|~
name|DownloadItem
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|readyRead
name|void
name|DownloadItem
operator|::
name|readyRead
parameter_list|()
block|{
if|if
condition|(
operator|!
name|outputFile
condition|)
name|outputFile
operator|=
operator|new
name|QFile
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|outputFile
operator|->
name|isOpen
argument_list|()
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
name|reply
operator|->
name|header
argument_list|(
name|QNetworkRequest
operator|::
name|ContentTypeHeader
argument_list|)
operator|<<
name|reply
operator|->
name|header
argument_list|(
name|QNetworkRequest
operator|::
name|ContentLengthHeader
argument_list|)
expr_stmt|;
name|QString
name|path
init|=
name|reply
operator|->
name|url
argument_list|()
operator|.
name|path
argument_list|()
decl_stmt|;
name|path
operator|=
name|path
operator|.
name|mid
argument_list|(
name|path
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|path
operator|.
name|isEmpty
argument_list|()
condition|)
name|path
operator|=
name|QLatin1String
argument_list|(
literal|"index.html"
argument_list|)
expr_stmt|;
name|outputFile
operator|->
name|setFileName
argument_list|(
name|path
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|outputFile
operator|->
name|exists
argument_list|()
operator|&&
name|outputFile
operator|->
name|open
argument_list|(
name|QIODevice
operator|::
name|WriteOnly
operator||
name|QIODevice
operator|::
name|Truncate
argument_list|)
condition|)
break|break;
name|outputFile
operator|->
name|setFileName
argument_list|(
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"%1.%2"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|path
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|outputFile
operator|->
name|isOpen
argument_list|()
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"couldn't open output file"
expr_stmt|;
name|reply
operator|->
name|abort
argument_list|()
expr_stmt|;
return|return;
block|}
name|qDebug
argument_list|()
operator|<<
name|reply
operator|->
name|url
argument_list|()
operator|<<
literal|" -> "
operator|<<
name|outputFile
operator|->
name|fileName
argument_list|()
expr_stmt|;
block|}
name|outputFile
operator|->
name|write
argument_list|(
name|reply
operator|->
name|readAll
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|finished
name|void
name|DownloadItem
operator|::
name|finished
parameter_list|()
block|{
if|if
condition|(
name|reply
operator|->
name|attribute
argument_list|(
name|QNetworkRequest
operator|::
name|RedirectionTargetAttribute
argument_list|)
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|QUrl
name|url
init|=
name|reply
operator|->
name|attribute
argument_list|(
name|QNetworkRequest
operator|::
name|RedirectionTargetAttribute
argument_list|)
operator|.
name|toUrl
argument_list|()
decl_stmt|;
name|url
operator|=
name|reply
operator|->
name|url
argument_list|()
operator|.
name|resolved
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|reply
operator|->
name|url
argument_list|()
operator|<<
literal|"redirected to "
operator|<<
name|url
expr_stmt|;
if|if
condition|(
name|redirects
operator|.
name|contains
argument_list|(
name|url
argument_list|)
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"redirect loop detected"
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|redirects
operator|.
name|count
argument_list|()
operator|>
literal|10
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"too many redirects"
expr_stmt|;
block|}
else|else
block|{
comment|//follow redirect
if|if
condition|(
name|outputFile
operator|&&
name|outputFile
operator|->
name|isOpen
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|outputFile
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
operator|||
operator|!
name|outputFile
operator|->
name|resize
argument_list|(
literal|0
argument_list|)
condition|)
block|{
name|outputFile
operator|->
name|close
argument_list|()
expr_stmt|;
name|outputFile
operator|->
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
name|reply
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
name|reply
operator|=
name|nam
operator|.
name|get
argument_list|(
name|QNetworkRequest
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|reply
operator|->
name|setParent
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|reply
argument_list|,
name|SIGNAL
argument_list|(
name|readyRead
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|readyRead
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|reply
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|redirects
operator|.
name|append
argument_list|(
name|url
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
if|if
condition|(
name|outputFile
operator|&&
name|outputFile
operator|->
name|isOpen
argument_list|()
condition|)
block|{
name|outputFile
operator|->
name|write
argument_list|(
name|reply
operator|->
name|readAll
argument_list|()
argument_list|)
expr_stmt|;
name|outputFile
operator|->
name|close
argument_list|()
expr_stmt|;
block|}
emit|emit
name|downloadFinished
argument_list|(
name|this
argument_list|)
emit|;
block|}
end_function
begin_constructor
DECL|function|UploadItem
name|UploadItem
operator|::
name|UploadItem
parameter_list|(
specifier|const
name|QNetworkRequest
modifier|&
name|r
parameter_list|,
specifier|const
name|QString
modifier|&
name|user
parameter_list|,
specifier|const
name|QString
modifier|&
name|password
parameter_list|,
name|QNetworkAccessManager
modifier|&
name|n
parameter_list|,
name|QFile
modifier|*
name|f
parameter_list|,
name|TransferItem
operator|::
name|Method
name|method
parameter_list|)
member_init_list|:
name|TransferItem
argument_list|(
name|r
argument_list|,
name|user
argument_list|,
name|password
argument_list|,
name|n
argument_list|,
name|method
argument_list|)
block|{
name|inputFile
operator|=
name|f
expr_stmt|;
name|f
operator|->
name|setParent
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
name|f
operator|->
name|fileName
argument_list|()
operator|<<
name|f
operator|->
name|isOpen
argument_list|()
operator|<<
name|f
operator|->
name|size
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~UploadItem
name|UploadItem
operator|::
name|~
name|UploadItem
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|finished
name|void
name|UploadItem
operator|::
name|finished
parameter_list|()
block|{
emit|emit
name|downloadFinished
argument_list|(
name|this
argument_list|)
emit|;
block|}
end_function
end_unit
