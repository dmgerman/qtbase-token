begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"../shared/shared.h"
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QPushButton>
end_include
begin_class
DECL|class|Child
class|class
name|Child
super|:
specifier|public
name|StaticWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|Child
name|Child
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|StaticWidget
argument_list|(
name|parent
argument_list|)
block|{
name|hue
operator|=
literal|0
expr_stmt|;
block|}
block|}
class|;
end_class
begin_decl_stmt
DECL|variable|c
name|QWidget
modifier|*
name|c
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|TopLevel
class|class
name|TopLevel
super|:
specifier|public
name|StaticWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|TopLevel
name|TopLevel
parameter_list|()
block|{
name|resizeButton
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"resize"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|resizeButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|buttonResizeClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|movebutton
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"move"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|movebutton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|buttonMoveClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|movebutton
operator|->
name|move
argument_list|(
literal|70
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|moveResizebutton
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"move + resize"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|moveResizebutton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|buttonMoveResizeClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|moveResizebutton
operator|->
name|move
argument_list|(
literal|150
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|scrollbutton
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"scroll"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|scrollbutton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|buttonScrollClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|scrollbutton
operator|->
name|move
argument_list|(
literal|280
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|buttonResizeClicked
name|void
name|buttonResizeClicked
parameter_list|()
block|{
name|c
operator|->
name|resize
argument_list|(
name|c
operator|->
name|size
argument_list|()
operator|+
name|QSize
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"child new size"
operator|<<
name|c
operator|->
name|size
argument_list|()
expr_stmt|;
block|}
DECL|function|buttonMoveClicked
name|void
name|buttonMoveClicked
parameter_list|()
block|{
name|c
operator|->
name|move
argument_list|(
name|c
operator|->
name|pos
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"child moved"
operator|<<
name|c
operator|->
name|pos
argument_list|()
expr_stmt|;
block|}
DECL|function|buttonMoveResizeClicked
name|void
name|buttonMoveResizeClicked
parameter_list|()
block|{
name|QRect
name|g
init|=
name|c
operator|->
name|geometry
argument_list|()
decl_stmt|;
name|g
operator|.
name|adjust
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|c
operator|->
name|setGeometry
argument_list|(
name|g
argument_list|)
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"child moved"
operator|<<
name|c
operator|->
name|pos
argument_list|()
operator|<<
literal|"rezied"
operator|<<
name|c
operator|->
name|size
argument_list|()
expr_stmt|;
block|}
DECL|function|buttonScrollClicked
name|void
name|buttonScrollClicked
parameter_list|()
block|{
name|c
operator|->
name|scroll
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|member|resizeButton
name|QPushButton
modifier|*
name|resizeButton
decl_stmt|;
DECL|member|movebutton
name|QPushButton
modifier|*
name|movebutton
decl_stmt|;
DECL|member|moveResizebutton
name|QPushButton
modifier|*
name|moveResizebutton
decl_stmt|;
DECL|member|scrollbutton
name|QPushButton
modifier|*
name|scrollbutton
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|TopLevel
name|bc
decl_stmt|;
name|bc
operator|.
name|resize
argument_list|(
literal|500
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|c
operator|=
operator|new
name|Child
argument_list|(
operator|&
name|bc
argument_list|)
expr_stmt|;
name|c
operator|->
name|move
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|c
operator|->
name|resize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|gc
init|=
operator|new
name|StaticWidget
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|gc
operator|->
name|move
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|gc
operator|->
name|resize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|bc
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
