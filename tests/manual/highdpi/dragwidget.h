begin_unit
begin_comment
comment|/****************************************************************************  **  ** Copyright (C) 2016 The Qt Company Ltd.  ** Contact: https://www.qt.io/licensing/  **  ** This file is part of the test suite of the Qt Toolkit.  **  ** $QT_BEGIN_LICENSE:GPL-EXCEPT$  ** Commercial License Usage  ** Licensees holding valid commercial Qt licenses may use this file in  ** accordance with the commercial license agreement provided with the  ** Software or, alternatively, in accordance with the terms contained in  ** a written agreement between you and The Qt Company. For licensing terms  ** and conditions see https://www.qt.io/terms-conditions. For further  ** information use the contact form at https://www.qt.io/contact-us.  **  ** GNU General Public License Usage  ** Alternatively, this file may be used under the terms of the GNU  ** General Public License version 3 as published by the Free Software  ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT  ** included in the packaging of this file. Please review the following  ** information to ensure the GNU General Public License requirements will  ** be met: https://www.gnu.org/licenses/gpl-3.0.html.  **  ** $QT_END_LICENSE$  **  ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|DRAGWIDGET_H
end_ifndef
begin_define
DECL|macro|DRAGWIDGET_H
define|#
directive|define
name|DRAGWIDGET_H
end_define
begin_include
include|#
directive|include
file|<QWidget>
end_include
begin_include
include|#
directive|include
file|<QBasicTimer>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QDragEnterEvent
name|class
name|QDragEnterEvent
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QDropEvent
name|class
name|QDropEvent
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
name|class
name|DragWidget
range|:
name|public
name|QWidget
block|{
name|public
operator|:
name|DragWidget
argument_list|(
argument|QString text = QString()
argument_list|,
argument|QWidget *parent =
literal|0
argument_list|)
block|;
name|protected
operator|:
name|void
name|dragEnterEvent
argument_list|(
argument|QDragEnterEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|dragLeaveEvent
argument_list|(
argument|QDragLeaveEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|dropEvent
argument_list|(
argument|QDropEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|mousePressEvent
argument_list|(
argument|QMouseEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|dragMoveEvent
argument_list|(
argument|QDragMoveEvent * event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|paintEvent
argument_list|(
argument|QPaintEvent *
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|timerEvent
argument_list|(
argument|QTimerEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|showEvent
argument_list|(
argument|QShowEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|hideEvent
argument_list|(
argument|QHideEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|private
operator|:
name|QPoint
name|dragPos
block|;
name|QPoint
name|dropPos
block|;
name|QBasicTimer
name|dragTimer
block|;
name|QBasicTimer
name|dropTimer
block|;
name|QWidget
operator|*
name|otherWindow
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// DRAGWIDGET_H
end_comment
end_unit
