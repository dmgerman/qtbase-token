begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"openglwidget.h"
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QPushButton>
end_include
begin_include
include|#
directive|include
file|<QMdiArea>
end_include
begin_include
include|#
directive|include
file|<QLCDNumber>
end_include
begin_include
include|#
directive|include
file|<QTimer>
end_include
begin_include
include|#
directive|include
file|<QSurfaceFormat>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|a
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QSurfaceFormat
name|format
decl_stmt|;
if|if
condition|(
name|QCoreApplication
operator|::
name|arguments
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"--multisample"
argument_list|)
argument_list|)
condition|)
name|format
operator|.
name|setSamples
argument_list|(
literal|4
argument_list|)
expr_stmt|;
if|if
condition|(
name|QCoreApplication
operator|::
name|arguments
argument_list|()
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"--coreprofile"
argument_list|)
argument_list|)
condition|)
block|{
name|format
operator|.
name|setVersion
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|format
operator|.
name|setProfile
argument_list|(
name|QSurfaceFormat
operator|::
name|CoreProfile
argument_list|)
expr_stmt|;
block|}
name|qDebug
argument_list|()
operator|<<
literal|"Requesting"
operator|<<
name|format
expr_stmt|;
name|QMdiArea
name|w
decl_stmt|;
name|w
operator|.
name|resize
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|OpenGLWidget
modifier|*
name|glw
init|=
operator|new
name|OpenGLWidget
decl_stmt|;
name|glw
operator|->
name|setFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|w
operator|.
name|addSubWindow
argument_list|(
name|glw
argument_list|)
expr_stmt|;
name|glw
operator|->
name|setMinimumSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|OpenGLWidget
modifier|*
name|glw2
init|=
operator|new
name|OpenGLWidget
decl_stmt|;
name|glw2
operator|->
name|setFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
name|glw2
operator|->
name|setMinimumSize
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|w
operator|.
name|addSubWindow
argument_list|(
name|glw2
argument_list|)
expr_stmt|;
name|QLCDNumber
modifier|*
name|lcd
init|=
operator|new
name|QLCDNumber
decl_stmt|;
name|lcd
operator|->
name|display
argument_list|(
literal|1337
argument_list|)
expr_stmt|;
name|lcd
operator|->
name|setMinimumSize
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|w
operator|.
name|addSubWindow
argument_list|(
name|lcd
argument_list|)
expr_stmt|;
name|w
operator|.
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
name|glw
operator|->
name|isValid
argument_list|()
condition|)
name|qDebug
argument_list|()
operator|<<
literal|"Got"
operator|<<
name|glw
operator|->
name|format
argument_list|()
expr_stmt|;
return|return
name|a
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
