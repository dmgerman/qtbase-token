begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_PRINTER
end_ifndef
begin_include
include|#
directive|include
file|"printdialogpanel.h"
end_include
begin_include
include|#
directive|include
file|"utils.h"
end_include
begin_include
include|#
directive|include
file|<QPrinter>
end_include
begin_include
include|#
directive|include
file|<QPrintDialog>
end_include
begin_include
include|#
directive|include
file|<QPrintPreviewDialog>
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QDesktopWidget>
end_include
begin_include
include|#
directive|include
file|<QGroupBox>
end_include
begin_include
include|#
directive|include
file|<QCheckBox>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_include
include|#
directive|include
file|<QPushButton>
end_include
begin_include
include|#
directive|include
file|<QGridLayout>
end_include
begin_include
include|#
directive|include
file|<QFormLayout>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QDoubleSpinBox>
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QFont>
end_include
begin_include
include|#
directive|include
file|<QFontMetrics>
end_include
begin_include
include|#
directive|include
file|<QDateTime>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|<QTextStream>
end_include
begin_decl_stmt
DECL|variable|modeComboData
specifier|const
name|FlagData
name|modeComboData
index|[]
init|=
block|{
block|{
literal|"ScreenResolution"
block|,
name|QPrinter
operator|::
name|ScreenResolution
block|}
block|,
block|{
literal|"PrinterResolution"
block|,
name|QPrinter
operator|::
name|PrinterResolution
block|}
block|,
block|{
literal|"HighResolution"
block|,
name|QPrinter
operator|::
name|HighResolution
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|orientationComboData
specifier|const
name|FlagData
name|orientationComboData
index|[]
init|=
block|{
block|{
literal|"Portrait"
block|,
name|QPrinter
operator|::
name|Portrait
block|}
block|,
block|{
literal|"Landscape"
block|,
name|QPrinter
operator|::
name|Landscape
block|}
block|, }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|pageSizeComboData
specifier|const
name|FlagData
name|pageSizeComboData
index|[]
init|=
block|{
block|{
literal|"A4"
block|,
name|QPrinter
operator|::
name|A4
block|}
block|,
block|{
literal|"B5"
block|,
name|QPrinter
operator|::
name|B5
block|}
block|,
block|{
literal|"Letter"
block|,
name|QPrinter
operator|::
name|Letter
block|}
block|,
block|{
literal|"Legal"
block|,
name|QPrinter
operator|::
name|Legal
block|}
block|,
block|{
literal|"Executive"
block|,
name|QPrinter
operator|::
name|Executive
block|}
block|,
block|{
literal|"A0"
block|,
name|QPrinter
operator|::
name|A0
block|}
block|,
block|{
literal|"A1"
block|,
name|QPrinter
operator|::
name|A1
block|}
block|,
block|{
literal|"A2"
block|,
name|QPrinter
operator|::
name|A2
block|}
block|,
block|{
literal|"A3"
block|,
name|QPrinter
operator|::
name|A3
block|}
block|,
block|{
literal|"A5"
block|,
name|QPrinter
operator|::
name|A5
block|}
block|,
block|{
literal|"A6"
block|,
name|QPrinter
operator|::
name|A6
block|}
block|,
block|{
literal|"A7"
block|,
name|QPrinter
operator|::
name|A7
block|}
block|,
block|{
literal|"A8"
block|,
name|QPrinter
operator|::
name|A8
block|}
block|,
block|{
literal|"A9"
block|,
name|QPrinter
operator|::
name|A9
block|}
block|,
block|{
literal|"B0"
block|,
name|QPrinter
operator|::
name|B0
block|}
block|,
block|{
literal|"B1"
block|,
name|QPrinter
operator|::
name|B1
block|}
block|,
block|{
literal|"B10"
block|,
name|QPrinter
operator|::
name|B10
block|}
block|,
block|{
literal|"B2"
block|,
name|QPrinter
operator|::
name|B2
block|}
block|,
block|{
literal|"B3"
block|,
name|QPrinter
operator|::
name|B3
block|}
block|,
block|{
literal|"B4"
block|,
name|QPrinter
operator|::
name|B4
block|}
block|,
block|{
literal|"B6"
block|,
name|QPrinter
operator|::
name|B6
block|}
block|,
block|{
literal|"B7"
block|,
name|QPrinter
operator|::
name|B7
block|}
block|,
block|{
literal|"B8"
block|,
name|QPrinter
operator|::
name|B8
block|}
block|,
block|{
literal|"B9"
block|,
name|QPrinter
operator|::
name|B9
block|}
block|,
block|{
literal|"C5E"
block|,
name|QPrinter
operator|::
name|C5E
block|}
block|,
block|{
literal|"Comm10E"
block|,
name|QPrinter
operator|::
name|Comm10E
block|}
block|,
block|{
literal|"DLE"
block|,
name|QPrinter
operator|::
name|DLE
block|}
block|,
block|{
literal|"Folio"
block|,
name|QPrinter
operator|::
name|Folio
block|}
block|,
block|{
literal|"Ledger"
block|,
name|QPrinter
operator|::
name|Ledger
block|}
block|,
block|{
literal|"Tabloid"
block|,
name|QPrinter
operator|::
name|Tabloid
block|}
block|,
block|{
literal|"Custom"
block|,
name|QPrinter
operator|::
name|Custom
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|printDialogOptions
specifier|const
name|FlagData
name|printDialogOptions
index|[]
init|=
block|{
block|{
literal|"PrintToFile"
block|,
name|QPrintDialog
operator|::
name|PrintToFile
block|}
block|,
block|{
literal|"PrintSelection"
block|,
name|QPrintDialog
operator|::
name|PrintSelection
block|}
block|,
block|{
literal|"PrintPageRange"
block|,
name|QPrintDialog
operator|::
name|PrintPageRange
block|}
block|,
block|{
literal|"PrintShowPageSize"
block|,
name|QPrintDialog
operator|::
name|PrintShowPageSize
block|}
block|,
block|{
literal|"PrintCollateCopies"
block|,
name|QPrintDialog
operator|::
name|PrintCollateCopies
block|}
block|,
block|{
literal|"PrintCurrentPage"
block|,
name|QPrintDialog
operator|::
name|PrintCurrentPage
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|printRangeOptions
specifier|const
name|FlagData
name|printRangeOptions
index|[]
init|=
block|{
block|{
literal|"AllPages"
block|,
name|QPrintDialog
operator|::
name|AllPages
block|}
block|,
block|{
literal|"Selection"
block|,
name|QPrintDialog
operator|::
name|Selection
block|}
block|,
block|{
literal|"PageRange"
block|,
name|QPrintDialog
operator|::
name|PageRange
block|}
block|,
block|{
literal|"CurrentPage"
block|,
name|QPrintDialog
operator|::
name|CurrentPage
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|operator <<
name|QTextStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QTextStream
modifier|&
name|s
parameter_list|,
specifier|const
name|QSizeF
modifier|&
name|size
parameter_list|)
block|{
name|s
operator|<<
name|size
operator|.
name|width
argument_list|()
operator|<<
literal|'x'
operator|<<
name|size
operator|.
name|height
argument_list|()
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_function
DECL|function|operator <<
name|QTextStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QTextStream
modifier|&
name|s
parameter_list|,
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
name|s
operator|<<
name|rect
operator|.
name|width
argument_list|()
operator|<<
literal|'x'
operator|<<
name|rect
operator|.
name|height
argument_list|()
operator|<<
name|forcesign
operator|<<
name|rect
operator|.
name|x
argument_list|()
operator|<<
name|rect
operator|.
name|y
argument_list|()
operator|<<
name|noforcesign
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_function
DECL|function|operator <<
name|QTextStream
modifier|&
name|operator
name|<<
parameter_list|(
name|QTextStream
modifier|&
name|s
parameter_list|,
specifier|const
name|QPrinter
modifier|&
name|printer
parameter_list|)
block|{
name|s
operator|<<
literal|'"'
operator|<<
name|printer
operator|.
name|printerName
argument_list|()
operator|<<
literal|"\"\nPaper #"
operator|<<
name|printer
operator|.
name|paperSize
argument_list|()
if|#
directive|if
name|QT_VERSION
operator|>=
literal|0x050000
operator|<<
literal|" \""
operator|<<
name|printer
operator|.
name|paperName
argument_list|()
operator|<<
literal|'"'
endif|#
directive|endif
operator|<<
operator|(
name|printer
operator|.
name|orientation
argument_list|()
operator|==
name|QPrinter
operator|::
name|Portrait
condition|?
literal|", Portrait"
else|:
literal|", Landscape"
operator|)
expr_stmt|;
if|if
condition|(
name|printer
operator|.
name|fullPage
argument_list|()
condition|)
name|s
operator|<<
literal|", full page"
expr_stmt|;
name|s
operator|<<
literal|"\nPaper size: "
operator|<<
name|printer
operator|.
name|paperSize
argument_list|(
name|QPrinter
operator|::
name|Point
argument_list|)
operator|<<
literal|"pt "
operator|<<
name|printer
operator|.
name|paperSize
argument_list|(
name|QPrinter
operator|::
name|Millimeter
argument_list|)
operator|<<
literal|"mm "
operator|<<
literal|"\n            "
operator|<<
name|printer
operator|.
name|paperSize
argument_list|(
name|QPrinter
operator|::
name|DevicePixel
argument_list|)
operator|<<
literal|"device pt "
operator|<<
name|printer
operator|.
name|paperSize
argument_list|(
name|QPrinter
operator|::
name|Inch
argument_list|)
operator|<<
literal|"inch "
if|#
directive|if
name|QT_VERSION
operator|>=
literal|0x050000
operator|<<
literal|"\nPagedPaintDevSize: "
operator|<<
name|printer
operator|.
name|pageSizeMM
argument_list|()
operator|<<
literal|"mm"
endif|#
directive|endif
operator|<<
literal|"\nLogical resolution : "
operator|<<
name|printer
operator|.
name|logicalDpiX
argument_list|()
operator|<<
literal|','
operator|<<
name|printer
operator|.
name|logicalDpiY
argument_list|()
operator|<<
literal|"DPI"
operator|<<
literal|"\nPhysical resolution: "
operator|<<
name|printer
operator|.
name|physicalDpiX
argument_list|()
operator|<<
literal|','
operator|<<
name|printer
operator|.
name|physicalDpiY
argument_list|()
operator|<<
literal|"DPI"
operator|<<
literal|"\nPaperRect: "
operator|<<
name|printer
operator|.
name|paperRect
argument_list|(
name|QPrinter
operator|::
name|Point
argument_list|)
operator|<<
literal|"pt "
operator|<<
name|printer
operator|.
name|paperRect
argument_list|(
name|QPrinter
operator|::
name|Millimeter
argument_list|)
operator|<<
literal|"mm "
operator|<<
literal|"\n           "
operator|<<
name|printer
operator|.
name|paperRect
argument_list|(
name|QPrinter
operator|::
name|DevicePixel
argument_list|)
operator|<<
literal|"device pt"
operator|<<
literal|"\nPageRect:  "
operator|<<
name|printer
operator|.
name|pageRect
argument_list|(
name|QPrinter
operator|::
name|Point
argument_list|)
operator|<<
literal|"pt "
operator|<<
name|printer
operator|.
name|pageRect
argument_list|(
name|QPrinter
operator|::
name|Millimeter
argument_list|)
operator|<<
literal|"mm "
operator|<<
literal|"\n           "
operator|<<
name|printer
operator|.
name|pageRect
argument_list|(
name|QPrinter
operator|::
name|DevicePixel
argument_list|)
operator|<<
literal|"device pt"
expr_stmt|;
return|return
name|s
return|;
block|}
end_function
begin_comment
comment|// Print a page with a rectangular frame, vertical / horizontal rulers in cm and printer info.
end_comment
begin_function
DECL|function|drawHorizCmRuler
specifier|static
name|void
name|drawHorizCmRuler
parameter_list|(
name|QPainter
modifier|&
name|painter
parameter_list|,
name|int
name|x1
parameter_list|,
name|int
name|x2
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|painter
operator|.
name|drawLine
argument_list|(
name|x1
argument_list|,
name|y
argument_list|,
name|x2
argument_list|,
name|y
argument_list|)
expr_stmt|;
specifier|const
name|int
name|dpI
init|=
name|painter
operator|.
name|device
argument_list|()
operator|->
name|logicalDpiX
argument_list|()
decl_stmt|;
specifier|const
name|int
name|dpCm
init|=
name|qRound
argument_list|(
name|double
argument_list|(
name|dpI
argument_list|)
operator|/
literal|2.54
argument_list|)
decl_stmt|;
specifier|const
name|int
name|h
init|=
name|dpCm
operator|/
literal|2
decl_stmt|;
specifier|const
name|QFontMetrics
name|fm
argument_list|(
name|painter
operator|.
name|font
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|cm
init|=
literal|0
init|,
name|x
init|=
name|x1
init|;
name|x
operator|<
name|x2
condition|;
name|x
operator|+=
name|dpCm
operator|,
operator|++
name|cm
control|)
block|{
name|painter
operator|.
name|drawLine
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|x
argument_list|,
name|y
operator|-
name|h
argument_list|)
expr_stmt|;
if|if
condition|(
name|cm
condition|)
block|{
specifier|const
name|QString
name|n
init|=
name|QString
operator|::
name|number
argument_list|(
name|cm
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|br
init|=
name|fm
operator|.
name|boundingRect
argument_list|(
name|n
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
name|x
operator|-
name|br
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|y
operator|-
name|h
operator|-
literal|10
argument_list|,
name|n
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|drawVertCmRuler
specifier|static
name|void
name|drawVertCmRuler
parameter_list|(
name|QPainter
modifier|&
name|painter
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y1
parameter_list|,
name|int
name|y2
parameter_list|)
block|{
name|painter
operator|.
name|drawLine
argument_list|(
name|x
argument_list|,
name|y1
argument_list|,
name|x
argument_list|,
name|y2
argument_list|)
expr_stmt|;
specifier|const
name|int
name|dpI
init|=
name|painter
operator|.
name|device
argument_list|()
operator|->
name|logicalDpiY
argument_list|()
decl_stmt|;
specifier|const
name|int
name|dpCm
init|=
name|qRound
argument_list|(
name|double
argument_list|(
name|dpI
argument_list|)
operator|/
literal|2.54
argument_list|)
decl_stmt|;
specifier|const
name|int
name|h
init|=
name|dpCm
operator|/
literal|2
decl_stmt|;
specifier|const
name|QFontMetrics
name|fm
argument_list|(
name|painter
operator|.
name|font
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|cm
init|=
literal|0
init|,
name|y
init|=
name|y1
init|;
name|y
operator|<
name|y2
condition|;
name|y
operator|+=
name|dpCm
operator|,
operator|++
name|cm
control|)
block|{
name|painter
operator|.
name|drawLine
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|x
operator|+
name|h
argument_list|,
name|y
argument_list|)
expr_stmt|;
if|if
condition|(
name|cm
condition|)
block|{
specifier|const
name|QString
name|n
init|=
name|QString
operator|::
name|number
argument_list|(
name|cm
argument_list|)
decl_stmt|;
specifier|const
name|QRect
name|br
init|=
name|fm
operator|.
name|boundingRect
argument_list|(
name|n
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
name|x
operator|+
name|h
operator|+
literal|10
argument_list|,
name|y
operator|+
name|br
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|n
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|print
specifier|static
name|void
name|print
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|)
block|{
name|QPainter
name|painter
argument_list|(
name|printer
argument_list|)
decl_stmt|;
specifier|const
name|QRectF
name|pageF
init|=
name|printer
operator|->
name|pageRect
argument_list|()
decl_stmt|;
name|painter
operator|.
name|drawRect
argument_list|(
name|pageF
argument_list|)
expr_stmt|;
name|drawHorizCmRuler
argument_list|(
name|painter
argument_list|,
name|pageF
operator|.
name|x
argument_list|()
argument_list|,
name|pageF
operator|.
name|right
argument_list|()
argument_list|,
name|pageF
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|drawVertCmRuler
argument_list|(
name|painter
argument_list|,
name|pageF
operator|.
name|x
argument_list|()
operator|+
name|pageF
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|pageF
operator|.
name|top
argument_list|()
argument_list|,
name|pageF
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
name|QFont
name|font
init|=
name|painter
operator|.
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setFamily
argument_list|(
literal|"Courier"
argument_list|)
expr_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
comment|// Format message.
specifier|const
name|int
name|charHeight
init|=
name|QFontMetrics
argument_list|(
name|font
argument_list|)
operator|.
name|boundingRect
argument_list|(
literal|'X'
argument_list|)
operator|.
name|height
argument_list|()
decl_stmt|;
name|QString
name|msg
decl_stmt|;
name|QTextStream
name|str
argument_list|(
operator|&
name|msg
argument_list|)
decl_stmt|;
name|str
operator|<<
literal|"Qt "
operator|<<
name|QT_VERSION_STR
expr_stmt|;
if|#
directive|if
name|QT_VERSION
operator|>=
literal|0x050000
name|str
operator|<<
literal|' '
operator|<<
name|QGuiApplication
operator|::
name|platformName
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|str
operator|<<
literal|' '
operator|<<
name|QDateTime
operator|::
name|currentDateTime
argument_list|()
operator|.
name|toString
argument_list|()
operator|<<
literal|"\nFont: "
operator|<<
name|font
operator|.
name|family
argument_list|()
operator|<<
literal|' '
operator|<<
name|font
operator|.
name|pointSize
argument_list|()
operator|<<
literal|'\n'
operator|<<
operator|*
name|printer
expr_stmt|;
name|QPointF
name|textPoint
init|=
name|pageF
operator|.
name|topLeft
argument_list|()
operator|+
name|QPoint
argument_list|(
literal|10
argument_list|,
name|charHeight
operator|+
literal|10
argument_list|)
decl_stmt|;
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|line
decl|,
name|msg
operator|.
name|split
argument_list|(
literal|'\n'
argument_list|)
control|)
block|{
name|painter
operator|.
name|drawText
argument_list|(
name|textPoint
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|textPoint
operator|.
name|ry
argument_list|()
operator|+=
operator|(
literal|15
operator|*
name|charHeight
operator|)
operator|/
literal|10
expr_stmt|;
block|}
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
end_function
begin_class
DECL|class|PrintPreviewDialog
class|class
name|PrintPreviewDialog
super|:
specifier|public
name|QPrintPreviewDialog
block|{
name|Q_OBJECT
public|public:
DECL|function|PrintPreviewDialog
specifier|explicit
name|PrintPreviewDialog
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QPrintPreviewDialog
argument_list|(
name|printer
argument_list|,
name|parent
argument_list|)
block|{
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|paintRequested
argument_list|(
name|QPrinter
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|slotPaintRequested
argument_list|(
name|QPrinter
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
public|public
name|slots
public|:
DECL|function|slotPaintRequested
name|void
name|slotPaintRequested
parameter_list|(
name|QPrinter
modifier|*
name|p
parameter_list|)
block|{
name|print
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_class
DECL|class|PageSizeControl
class|class
name|PageSizeControl
super|:
specifier|public
name|QWidget
block|{
public|public:
specifier|explicit
name|PageSizeControl
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
constructor_decl|;
DECL|function|pageSize
name|QSizeF
name|pageSize
parameter_list|()
specifier|const
block|{
return|return
name|QSizeF
argument_list|(
name|m_width
operator|->
name|value
argument_list|()
argument_list|,
name|m_height
operator|->
name|value
argument_list|()
argument_list|)
return|;
block|}
DECL|function|setPageSize
name|void
name|setPageSize
parameter_list|(
specifier|const
name|QSizeF
modifier|&
name|s
parameter_list|)
block|{
name|m_width
operator|->
name|setValue
argument_list|(
name|s
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|m_height
operator|->
name|setValue
argument_list|(
name|s
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_width
name|QDoubleSpinBox
modifier|*
name|m_width
decl_stmt|;
DECL|member|m_height
name|QDoubleSpinBox
modifier|*
name|m_height
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|PageSizeControl
name|PageSizeControl
operator|::
name|PageSizeControl
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_width
argument_list|(
operator|new
name|QDoubleSpinBox
argument_list|(
name|this
argument_list|)
argument_list|)
member_init_list|,
name|m_height
argument_list|(
operator|new
name|QDoubleSpinBox
argument_list|(
name|this
argument_list|)
argument_list|)
block|{
name|m_width
operator|->
name|setRange
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|m_width
operator|->
name|setSingleStep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|m_height
operator|->
name|setRange
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|m_height
operator|->
name|setSingleStep
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|hBoxLayout
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|hBoxLayout
operator|->
name|addWidget
argument_list|(
name|m_width
argument_list|)
expr_stmt|;
name|hBoxLayout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"x"
argument_list|,
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|hBoxLayout
operator|->
name|addWidget
argument_list|(
name|m_height
argument_list|)
expr_stmt|;
name|hBoxLayout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"mm"
argument_list|,
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_constructor
DECL|function|PrintDialogPanel
name|PrintDialogPanel
operator|::
name|PrintDialogPanel
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_creationGroupBox
argument_list|(
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Create"
argument_list|)
argument_list|,
name|this
argument_list|)
argument_list|)
member_init_list|,
name|m_settingsGroupBox
argument_list|(
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Settings"
argument_list|)
argument_list|,
name|this
argument_list|)
argument_list|)
member_init_list|,
name|m_dialogsGroupBox
argument_list|(
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Dialogs"
argument_list|)
argument_list|,
name|this
argument_list|)
argument_list|)
member_init_list|,
name|m_pageSizeCombo
argument_list|(
operator|new
name|QComboBox
argument_list|)
block|{
comment|// Create with resolution
name|QHBoxLayout
modifier|*
name|hBoxLayout
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|m_creationGroupBox
argument_list|)
decl_stmt|;
name|m_modeCombo
operator|=
name|createCombo
argument_list|(
name|m_creationGroupBox
argument_list|,
name|modeComboData
argument_list|,
sizeof|sizeof
argument_list|(
name|modeComboData
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|FlagData
argument_list|)
argument_list|)
expr_stmt|;
name|hBoxLayout
operator|->
name|addWidget
argument_list|(
name|m_modeCombo
argument_list|)
expr_stmt|;
name|m_createButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Create"
argument_list|)
argument_list|,
name|m_creationGroupBox
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_createButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|createPrinter
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|hBoxLayout
operator|->
name|addWidget
argument_list|(
name|m_createButton
argument_list|)
expr_stmt|;
name|m_deleteButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Delete"
argument_list|)
argument_list|,
name|m_creationGroupBox
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_deleteButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|deletePrinter
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|hBoxLayout
operator|->
name|addWidget
argument_list|(
name|m_deleteButton
argument_list|)
expr_stmt|;
name|hBoxLayout
operator|->
name|addItem
argument_list|(
operator|new
name|QSpacerItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QSizePolicy
operator|::
name|MinimumExpanding
argument_list|,
name|QSizePolicy
operator|::
name|Ignored
argument_list|)
argument_list|)
expr_stmt|;
name|QFormLayout
modifier|*
name|formLayout
init|=
operator|new
name|QFormLayout
argument_list|(
name|m_settingsGroupBox
argument_list|)
decl_stmt|;
name|m_pageSizeCombo
operator|=
name|createCombo
argument_list|(
name|m_settingsGroupBox
argument_list|,
name|pageSizeComboData
argument_list|,
sizeof|sizeof
argument_list|(
name|pageSizeComboData
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|FlagData
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_pageSizeCombo
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|enableCustomSizeControl
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
name|tr
argument_list|(
literal|"Paper #:"
argument_list|)
argument_list|,
name|m_pageSizeCombo
argument_list|)
expr_stmt|;
name|m_customPageSizeControl
operator|=
operator|new
name|PageSizeControl
expr_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
name|tr
argument_list|(
literal|"Custom size:"
argument_list|)
argument_list|,
name|m_customPageSizeControl
argument_list|)
expr_stmt|;
name|m_orientationCombo
operator|=
name|createCombo
argument_list|(
name|m_settingsGroupBox
argument_list|,
name|orientationComboData
argument_list|,
sizeof|sizeof
argument_list|(
name|orientationComboData
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|FlagData
argument_list|)
argument_list|)
expr_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
literal|"Orientation:"
argument_list|,
name|m_orientationCombo
argument_list|)
expr_stmt|;
name|m_fullPageCheckBox
operator|=
operator|new
name|QCheckBox
argument_list|(
name|tr
argument_list|(
literal|"Full page"
argument_list|)
argument_list|,
name|m_settingsGroupBox
argument_list|)
expr_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
name|m_fullPageCheckBox
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|vBoxLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|m_dialogsGroupBox
argument_list|)
decl_stmt|;
name|m_printDialogOptionsControl
operator|=
operator|new
name|OptionsControl
argument_list|(
name|tr
argument_list|(
literal|"Options"
argument_list|)
argument_list|,
name|printDialogOptions
argument_list|,
sizeof|sizeof
argument_list|(
name|printDialogOptions
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|FlagData
argument_list|)
argument_list|,
name|m_dialogsGroupBox
argument_list|)
expr_stmt|;
name|vBoxLayout
operator|->
name|addWidget
argument_list|(
name|m_printDialogOptionsControl
argument_list|)
expr_stmt|;
name|m_printDialogRangeCombo
operator|=
name|createCombo
argument_list|(
name|m_dialogsGroupBox
argument_list|,
name|printRangeOptions
argument_list|,
sizeof|sizeof
argument_list|(
name|printRangeOptions
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|FlagData
argument_list|)
argument_list|)
expr_stmt|;
name|vBoxLayout
operator|->
name|addWidget
argument_list|(
name|m_printDialogRangeCombo
argument_list|)
expr_stmt|;
block|{
name|QPrintDialog
name|dialog
decl_stmt|;
name|m_printDialogOptionsControl
operator|->
name|setValue
argument_list|(
name|dialog
operator|.
name|options
argument_list|()
argument_list|)
expr_stmt|;
name|m_printDialogRangeCombo
operator|->
name|setCurrentIndex
argument_list|(
name|dialog
operator|.
name|printRange
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Print..."
argument_list|)
argument_list|,
name|m_dialogsGroupBox
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|showPrintDialog
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|vBoxLayout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Preview..."
argument_list|)
argument_list|,
name|m_dialogsGroupBox
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|showPreviewDialog
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|vBoxLayout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|gridLayout
init|=
operator|new
name|QGridLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|gridLayout
operator|->
name|addWidget
argument_list|(
name|m_creationGroupBox
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|gridLayout
operator|->
name|addWidget
argument_list|(
name|m_settingsGroupBox
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|gridLayout
operator|->
name|addWidget
argument_list|(
name|m_dialogsGroupBox
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|gridLayout
operator|->
name|addItem
argument_list|(
operator|new
name|QSpacerItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QSizePolicy
operator|::
name|Ignored
argument_list|,
name|QSizePolicy
operator|::
name|MinimumExpanding
argument_list|)
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|enablePanels
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~PrintDialogPanel
name|PrintDialogPanel
operator|::
name|~
name|PrintDialogPanel
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|enablePanels
name|void
name|PrintDialogPanel
operator|::
name|enablePanels
parameter_list|()
block|{
specifier|const
name|bool
name|exists
init|=
operator|!
name|m_printer
operator|.
name|isNull
argument_list|()
decl_stmt|;
name|m_createButton
operator|->
name|setEnabled
argument_list|(
operator|!
name|exists
argument_list|)
expr_stmt|;
name|m_modeCombo
operator|->
name|setEnabled
argument_list|(
operator|!
name|exists
argument_list|)
expr_stmt|;
name|m_deleteButton
operator|->
name|setEnabled
argument_list|(
name|exists
argument_list|)
expr_stmt|;
name|m_settingsGroupBox
operator|->
name|setEnabled
argument_list|(
name|exists
argument_list|)
expr_stmt|;
name|m_dialogsGroupBox
operator|->
name|setEnabled
argument_list|(
name|exists
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createPrinter
name|void
name|PrintDialogPanel
operator|::
name|createPrinter
parameter_list|()
block|{
specifier|const
name|QPrinter
operator|::
name|PrinterMode
name|mode
init|=
name|comboBoxValue
argument_list|<
name|QPrinter
operator|::
name|PrinterMode
argument_list|>
argument_list|(
name|m_modeCombo
argument_list|)
decl_stmt|;
name|m_printer
operator|.
name|reset
argument_list|(
operator|new
name|QPrinter
argument_list|(
name|mode
argument_list|)
argument_list|)
expr_stmt|;
comment|// Can set only once.
name|retrieveSettings
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|enablePanels
argument_list|()
expr_stmt|;
name|enableCustomSizeControl
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|deletePrinter
name|void
name|PrintDialogPanel
operator|::
name|deletePrinter
parameter_list|()
block|{
name|m_printer
operator|.
name|reset
argument_list|()
expr_stmt|;
name|enablePanels
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|applySettings
name|void
name|PrintDialogPanel
operator|::
name|applySettings
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|)
specifier|const
block|{
specifier|const
name|QPrinter
operator|::
name|PageSize
name|pageSize
init|=
name|comboBoxValue
argument_list|<
name|QPrinter
operator|::
name|PageSize
argument_list|>
argument_list|(
name|m_pageSizeCombo
argument_list|)
decl_stmt|;
if|if
condition|(
name|pageSize
operator|==
name|QPrinter
operator|::
name|Custom
condition|)
name|printer
operator|->
name|setPaperSize
argument_list|(
name|m_customPageSizeControl
operator|->
name|pageSize
argument_list|()
argument_list|,
name|QPrinter
operator|::
name|Millimeter
argument_list|)
expr_stmt|;
else|else
name|printer
operator|->
name|setPageSize
argument_list|(
name|pageSize
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setOrientation
argument_list|(
name|comboBoxValue
argument_list|<
name|QPrinter
operator|::
name|Orientation
argument_list|>
argument_list|(
name|m_orientationCombo
argument_list|)
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setFullPage
argument_list|(
name|m_fullPageCheckBox
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|retrieveSettings
name|void
name|PrintDialogPanel
operator|::
name|retrieveSettings
parameter_list|(
specifier|const
name|QPrinter
modifier|*
name|printer
parameter_list|)
block|{
name|setComboBoxValue
argument_list|(
name|m_pageSizeCombo
argument_list|,
name|printer
operator|->
name|pageSize
argument_list|()
argument_list|)
expr_stmt|;
name|setComboBoxValue
argument_list|(
name|m_orientationCombo
argument_list|,
name|printer
operator|->
name|orientation
argument_list|()
argument_list|)
expr_stmt|;
name|m_fullPageCheckBox
operator|->
name|setChecked
argument_list|(
name|printer
operator|->
name|fullPage
argument_list|()
argument_list|)
expr_stmt|;
name|m_customPageSizeControl
operator|->
name|setPageSize
argument_list|(
name|m_printer
operator|->
name|paperSize
argument_list|(
name|QPrinter
operator|::
name|Millimeter
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|enableCustomSizeControl
name|void
name|PrintDialogPanel
operator|::
name|enableCustomSizeControl
parameter_list|()
block|{
name|m_customPageSizeControl
operator|->
name|setEnabled
argument_list|(
name|m_pageSizeCombo
operator|->
name|currentIndex
argument_list|()
operator|==
name|QPrinter
operator|::
name|Custom
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showPrintDialog
name|void
name|PrintDialogPanel
operator|::
name|showPrintDialog
parameter_list|()
block|{
name|applySettings
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|QPrintDialog
name|dialog
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setOptions
argument_list|(
name|m_printDialogOptionsControl
operator|->
name|value
argument_list|<
name|QPrintDialog
operator|::
name|PrintDialogOptions
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setPrintRange
argument_list|(
name|comboBoxValue
argument_list|<
name|QPrintDialog
operator|::
name|PrintRange
argument_list|>
argument_list|(
name|m_printDialogRangeCombo
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|dialog
operator|.
name|exec
argument_list|()
operator|==
name|QDialog
operator|::
name|Accepted
condition|)
block|{
name|retrieveSettings
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|print
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|showPreviewDialog
name|void
name|PrintDialogPanel
operator|::
name|showPreviewDialog
parameter_list|()
block|{
name|applySettings
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
name|PrintPreviewDialog
name|dialog
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|resize
argument_list|(
name|QApplication
operator|::
name|desktop
argument_list|()
operator|->
name|availableGeometry
argument_list|()
operator|.
name|size
argument_list|()
operator|*
literal|4
operator|/
literal|5
argument_list|)
expr_stmt|;
if|if
condition|(
name|dialog
operator|.
name|exec
argument_list|()
operator|==
name|QDialog
operator|::
name|Accepted
condition|)
name|retrieveSettings
argument_list|(
name|m_printer
operator|.
name|data
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_include
include|#
directive|include
file|"printdialogpanel.moc"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !QT_NO_PRINTER
end_comment
end_unit
