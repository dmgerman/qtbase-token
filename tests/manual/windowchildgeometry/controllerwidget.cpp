begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:GPL-EXCEPT$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3 as published by the Free Software ** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"controllerwidget.h"
end_include
begin_include
include|#
directive|include
file|<controls.h>
end_include
begin_if
if|#
directive|if
name|QT_VERSION
operator|>=
literal|0x050000
end_if
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QWindow>
end_include
begin_include
include|#
directive|include
file|<QBackingStore>
end_include
begin_include
include|#
directive|include
file|<QPaintDevice>
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<QResizeEvent>
end_include
begin_constructor
DECL|function|CoordinateControl
name|CoordinateControl
operator|::
name|CoordinateControl
parameter_list|(
specifier|const
name|QString
modifier|&
name|sep
parameter_list|)
member_init_list|:
name|m_x
argument_list|(
operator|new
name|QSpinBox
argument_list|)
member_init_list|,
name|m_y
argument_list|(
operator|new
name|QSpinBox
argument_list|)
block|{
name|m_x
operator|->
name|setMinimum
argument_list|(
operator|-
literal|2000
argument_list|)
expr_stmt|;
name|m_x
operator|->
name|setMaximum
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_x
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|spinBoxChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_y
operator|->
name|setMinimum
argument_list|(
operator|-
literal|2000
argument_list|)
expr_stmt|;
name|m_y
operator|->
name|setMaximum
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_y
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|spinBoxChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|l
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|l
operator|->
name|setSpacing
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|m_x
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|sep
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|m_y
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setCoordinates
name|void
name|CoordinateControl
operator|::
name|setCoordinates
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|m_x
operator|->
name|blockSignals
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|m_y
operator|->
name|blockSignals
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|m_x
operator|->
name|setValue
argument_list|(
name|x
argument_list|)
expr_stmt|;
name|m_y
operator|->
name|setValue
argument_list|(
name|y
argument_list|)
expr_stmt|;
name|m_x
operator|->
name|blockSignals
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|m_y
operator|->
name|blockSignals
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|coordinates
name|QPair
argument_list|<
name|int
argument_list|,
name|int
argument_list|>
name|CoordinateControl
operator|::
name|coordinates
parameter_list|()
specifier|const
block|{
return|return
name|QPair
argument_list|<
name|int
argument_list|,
name|int
argument_list|>
argument_list|(
name|m_x
operator|->
name|value
argument_list|()
argument_list|,
name|m_y
operator|->
name|value
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|spinBoxChanged
name|void
name|CoordinateControl
operator|::
name|spinBoxChanged
parameter_list|()
block|{
specifier|const
name|int
name|x
init|=
name|m_x
operator|->
name|value
argument_list|()
decl_stmt|;
specifier|const
name|int
name|y
init|=
name|m_y
operator|->
name|value
argument_list|()
decl_stmt|;
emit|emit
name|pointValueChanged
argument_list|(
name|QPoint
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
emit|;
emit|emit
name|sizeValueChanged
argument_list|(
name|QSize
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
emit|;
block|}
end_function
begin_constructor
DECL|function|RectControl
name|RectControl
operator|::
name|RectControl
parameter_list|()
member_init_list|:
name|m_point
argument_list|(
operator|new
name|CoordinateControl
argument_list|(
name|QLatin1String
argument_list|(
literal|"+"
argument_list|)
argument_list|)
argument_list|)
member_init_list|,
name|m_size
argument_list|(
operator|new
name|CoordinateControl
argument_list|(
name|QLatin1String
argument_list|(
literal|"x"
argument_list|)
argument_list|)
argument_list|)
block|{
name|QHBoxLayout
modifier|*
name|l
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|l
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|l
operator|->
name|setMargin
argument_list|(
name|ControlLayoutMargin
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_point
argument_list|,
name|SIGNAL
argument_list|(
name|pointValueChanged
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|handleChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_point
argument_list|,
name|SIGNAL
argument_list|(
name|pointValueChanged
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|positionChanged
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|m_point
argument_list|)
expr_stmt|;
name|l
operator|->
name|addSpacerItem
argument_list|(
operator|new
name|QSpacerItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QSizePolicy
operator|::
name|MinimumExpanding
argument_list|,
name|QSizePolicy
operator|::
name|Ignored
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_size
argument_list|,
name|SIGNAL
argument_list|(
name|sizeValueChanged
argument_list|(
name|QSize
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|handleChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_size
argument_list|,
name|SIGNAL
argument_list|(
name|sizeValueChanged
argument_list|(
name|QSize
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|sizeChanged
argument_list|(
name|QSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|m_size
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setRectValue
name|void
name|RectControl
operator|::
name|setRectValue
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|)
block|{
name|m_point
operator|->
name|setPointValue
argument_list|(
name|r
operator|.
name|topLeft
argument_list|()
argument_list|)
expr_stmt|;
name|m_size
operator|->
name|setSizeValue
argument_list|(
name|r
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rectValue
name|QRect
name|RectControl
operator|::
name|rectValue
parameter_list|()
specifier|const
block|{
return|return
name|QRect
argument_list|(
name|m_point
operator|->
name|pointValue
argument_list|()
argument_list|,
name|m_size
operator|->
name|sizeValue
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|handleChanged
name|void
name|RectControl
operator|::
name|handleChanged
parameter_list|()
block|{
emit|emit
name|changed
argument_list|(
name|rectValue
argument_list|()
argument_list|)
emit|;
block|}
end_function
begin_constructor
DECL|function|BaseWindowControl
name|BaseWindowControl
operator|::
name|BaseWindowControl
parameter_list|(
name|QObject
modifier|*
name|w
parameter_list|)
member_init_list|:
name|m_layout
argument_list|(
operator|new
name|QGridLayout
argument_list|(
name|this
argument_list|)
argument_list|)
member_init_list|,
name|m_object
argument_list|(
name|w
argument_list|)
member_init_list|,
name|m_geometry
argument_list|(
operator|new
name|RectControl
argument_list|)
member_init_list|,
name|m_framePosition
argument_list|(
operator|new
name|CoordinateControl
argument_list|(
name|QLatin1String
argument_list|(
literal|"x"
argument_list|)
argument_list|)
argument_list|)
member_init_list|,
name|m_moveEventLabel
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Move events"
argument_list|)
argument_list|)
argument_list|)
member_init_list|,
name|m_resizeEventLabel
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Resize events"
argument_list|)
argument_list|)
argument_list|)
member_init_list|,
name|m_mouseEventLabel
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Mouse events"
argument_list|)
argument_list|)
argument_list|)
member_init_list|,
name|m_moveCount
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_resizeCount
argument_list|(
literal|0
argument_list|)
block|{
name|m_object
operator|->
name|installEventFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|m_geometry
operator|->
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"Geometry"
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|row
init|=
literal|0
decl_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|m_geometry
argument_list|,
name|row
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|setMargin
argument_list|(
name|ControlLayoutMargin
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|frameGB
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Frame"
argument_list|)
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|frameL
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|frameGB
argument_list|)
decl_stmt|;
name|frameL
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|frameL
operator|->
name|setMargin
argument_list|(
name|ControlLayoutMargin
argument_list|)
expr_stmt|;
name|frameL
operator|->
name|addWidget
argument_list|(
name|m_framePosition
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|frameGB
argument_list|,
name|row
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|eventGroupBox
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Events"
argument_list|)
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|l
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|eventGroupBox
argument_list|)
decl_stmt|;
name|l
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|l
operator|->
name|setMargin
argument_list|(
name|ControlLayoutMargin
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|m_moveEventLabel
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|m_resizeEventLabel
argument_list|)
expr_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|m_mouseEventLabel
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|eventGroupBox
argument_list|,
operator|++
name|row
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_geometry
argument_list|,
name|SIGNAL
argument_list|(
name|positionChanged
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|posChanged
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_geometry
argument_list|,
name|SIGNAL
argument_list|(
name|sizeChanged
argument_list|(
name|QSize
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|sizeChanged
argument_list|(
name|QSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_framePosition
argument_list|,
name|SIGNAL
argument_list|(
name|pointValueChanged
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|framePosChanged
argument_list|(
name|QPoint
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|eventFilter
name|bool
name|BaseWindowControl
operator|::
name|eventFilter
parameter_list|(
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
switch|switch
condition|(
name|e
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QEvent
operator|::
name|Resize
case|:
block|{
specifier|const
name|QResizeEvent
modifier|*
name|re
init|=
cast|static_cast
argument_list|<
specifier|const
name|QResizeEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|m_resizeEventLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Resize %1x%2 (#%3)"
argument_list|)
operator|.
name|arg
argument_list|(
name|re
operator|->
name|size
argument_list|()
operator|.
name|width
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|re
operator|->
name|size
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
operator|++
name|m_resizeCount
argument_list|)
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QEvent
operator|::
name|Move
case|:
block|{
specifier|const
name|QMoveEvent
modifier|*
name|me
init|=
cast|static_cast
argument_list|<
specifier|const
name|QMoveEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
name|m_moveEventLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Move %1,%2 (#%3)"
argument_list|)
operator|.
name|arg
argument_list|(
name|me
operator|->
name|pos
argument_list|()
operator|.
name|x
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|me
operator|->
name|pos
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
operator|++
name|m_moveCount
argument_list|)
argument_list|)
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
block|}
break|break;
case|case
name|QEvent
operator|::
name|MouseMove
case|:
block|{
specifier|const
name|QMouseEvent
modifier|*
name|me
init|=
cast|static_cast
argument_list|<
specifier|const
name|QMouseEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|pos
init|=
name|me
operator|->
name|pos
argument_list|()
decl_stmt|;
name|QPoint
name|globalPos
init|=
name|objectMapToGlobal
argument_list|(
name|m_object
argument_list|,
name|pos
argument_list|)
decl_stmt|;
name|m_mouseEventLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Mouse: %1,%2 Global: %3,%4 "
argument_list|)
operator|.
name|arg
argument_list|(
name|pos
operator|.
name|x
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|pos
operator|.
name|y
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|globalPos
operator|.
name|x
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|globalPos
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|QEvent
operator|::
name|WindowStateChange
case|:
name|refresh
argument_list|()
expr_stmt|;
default|default:
break|break;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|posChanged
name|void
name|BaseWindowControl
operator|::
name|posChanged
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
block|{
name|QRect
name|geom
init|=
name|objectGeometry
argument_list|(
name|m_object
argument_list|)
decl_stmt|;
name|geom
operator|.
name|moveTopLeft
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|setObjectGeometry
argument_list|(
name|m_object
argument_list|,
name|geom
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeChanged
name|void
name|BaseWindowControl
operator|::
name|sizeChanged
parameter_list|(
specifier|const
name|QSize
modifier|&
name|s
parameter_list|)
block|{
name|QRect
name|geom
init|=
name|objectGeometry
argument_list|(
name|m_object
argument_list|)
decl_stmt|;
name|geom
operator|.
name|setSize
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|setObjectGeometry
argument_list|(
name|m_object
argument_list|,
name|geom
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|framePosChanged
name|void
name|BaseWindowControl
operator|::
name|framePosChanged
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
block|{
name|setObjectFramePosition
argument_list|(
name|m_object
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|refresh
name|void
name|BaseWindowControl
operator|::
name|refresh
parameter_list|()
block|{
name|m_geometry
operator|->
name|setRectValue
argument_list|(
name|objectGeometry
argument_list|(
name|m_object
argument_list|)
argument_list|)
expr_stmt|;
name|m_framePosition
operator|->
name|setPointValue
argument_list|(
name|objectFramePosition
argument_list|(
name|m_object
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// A control for a QWidget
end_comment
begin_class
DECL|class|WidgetWindowControl
class|class
name|WidgetWindowControl
super|:
specifier|public
name|BaseWindowControl
block|{
name|Q_OBJECT
public|public:
specifier|explicit
name|WidgetWindowControl
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
constructor_decl|;
specifier|virtual
name|void
name|refresh
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|statesChanged
parameter_list|()
function_decl|;
private|private:
DECL|function|objectGeometry
specifier|virtual
name|QRect
name|objectGeometry
parameter_list|(
specifier|const
name|QObject
modifier|*
name|o
parameter_list|)
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
specifier|const
name|QWidget
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|geometry
argument_list|()
return|;
block|}
DECL|function|setObjectGeometry
specifier|virtual
name|void
name|setObjectGeometry
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
specifier|const
name|QRect
modifier|&
name|r
parameter_list|)
specifier|const
block|{
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
DECL|function|objectFramePosition
specifier|virtual
name|QPoint
name|objectFramePosition
parameter_list|(
specifier|const
name|QObject
modifier|*
name|o
parameter_list|)
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
specifier|const
name|QWidget
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|pos
argument_list|()
return|;
block|}
DECL|function|setObjectFramePosition
specifier|virtual
name|void
name|setObjectFramePosition
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
specifier|const
block|{
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|move
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
DECL|function|objectMapToGlobal
specifier|virtual
name|QPoint
name|objectMapToGlobal
parameter_list|(
specifier|const
name|QObject
modifier|*
name|o
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
specifier|const
name|QWidget
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|mapToGlobal
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|function|objectWindowFlags
specifier|virtual
name|Qt
operator|::
name|WindowFlags
name|objectWindowFlags
parameter_list|(
specifier|const
name|QObject
modifier|*
name|o
parameter_list|)
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
specifier|const
name|QWidget
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|windowFlags
argument_list|()
return|;
block|}
specifier|virtual
name|void
name|setObjectWindowFlags
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|f
parameter_list|)
function_decl|;
DECL|member|m_statesControl
name|WindowStatesControl
modifier|*
name|m_statesControl
decl_stmt|;
block|}
class|;
end_class
begin_constructor
DECL|function|WidgetWindowControl
name|WidgetWindowControl
operator|::
name|WidgetWindowControl
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
member_init_list|:
name|BaseWindowControl
argument_list|(
name|w
argument_list|)
member_init_list|,
name|m_statesControl
argument_list|(
operator|new
name|WindowStatesControl
argument_list|(
name|WindowStatesControl
operator|::
name|WantVisibleCheckBox
operator||
name|WindowStatesControl
operator|::
name|WantActiveCheckBox
argument_list|)
argument_list|)
block|{
name|setTitle
argument_list|(
name|w
operator|->
name|windowTitle
argument_list|()
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|m_statesControl
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_statesControl
argument_list|,
name|SIGNAL
argument_list|(
name|changed
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|statesChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setObjectWindowFlags
name|void
name|WidgetWindowControl
operator|::
name|setObjectWindowFlags
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|f
parameter_list|)
block|{
name|QWidget
modifier|*
name|w
init|=
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
decl_stmt|;
specifier|const
name|bool
name|visible
init|=
name|w
operator|->
name|isVisible
argument_list|()
decl_stmt|;
name|w
operator|->
name|setWindowFlags
argument_list|(
name|f
argument_list|)
expr_stmt|;
comment|// hides.
if|if
condition|(
name|visible
condition|)
name|w
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|refresh
name|void
name|WidgetWindowControl
operator|::
name|refresh
parameter_list|()
block|{
specifier|const
name|QWidget
modifier|*
name|w
init|=
cast|static_cast
argument_list|<
specifier|const
name|QWidget
operator|*
argument_list|>
argument_list|(
name|m_object
argument_list|)
decl_stmt|;
name|m_statesControl
operator|->
name|setVisibleValue
argument_list|(
name|w
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|m_statesControl
operator|->
name|setStates
argument_list|(
name|w
operator|->
name|windowState
argument_list|()
argument_list|)
expr_stmt|;
name|BaseWindowControl
operator|::
name|refresh
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|statesChanged
name|void
name|WidgetWindowControl
operator|::
name|statesChanged
parameter_list|()
block|{
name|QWidget
modifier|*
name|w
init|=
cast|static_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|m_object
argument_list|)
decl_stmt|;
name|w
operator|->
name|setVisible
argument_list|(
name|m_statesControl
operator|->
name|visibleValue
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|->
name|setWindowState
argument_list|(
name|m_statesControl
operator|->
name|states
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|QT_VERSION
operator|>=
literal|0x050000
end_if
begin_comment
comment|// Test window drawing diagonal lines
end_comment
begin_class
DECL|class|Window
class|class
name|Window
super|:
specifier|public
name|QWindow
block|{
public|public:
DECL|function|Window
specifier|explicit
name|Window
parameter_list|(
name|QWindow
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QWindow
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_backingStore
argument_list|(
operator|new
name|QBackingStore
argument_list|(
name|this
argument_list|)
argument_list|)
member_init_list|,
name|m_color
argument_list|(
name|Qt
operator|::
name|GlobalColor
argument_list|(
name|qrand
argument_list|()
operator|%
literal|18
argument_list|)
argument_list|)
block|{
name|setObjectName
argument_list|(
name|QStringLiteral
argument_list|(
literal|"window"
argument_list|)
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"TestWindow"
argument_list|)
argument_list|)
expr_stmt|;
name|setFlags
argument_list|(
name|flags
argument_list|()
operator||
name|Qt
operator|::
name|MacUseNSWindow
argument_list|)
expr_stmt|;
block|}
protected|protected:
name|void
name|mouseMoveEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|ev
parameter_list|)
function_decl|;
name|void
name|mousePressEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|ev
parameter_list|)
function_decl|;
name|void
name|mouseReleaseEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|e
parameter_list|)
function_decl|;
DECL|function|exposeEvent
name|void
name|exposeEvent
parameter_list|(
name|QExposeEvent
modifier|*
parameter_list|)
block|{
name|render
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|m_backingStore
name|QBackingStore
modifier|*
name|m_backingStore
decl_stmt|;
DECL|member|m_color
name|Qt
operator|::
name|GlobalColor
name|m_color
decl_stmt|;
DECL|member|m_mouseDownPosition
name|QPoint
name|m_mouseDownPosition
decl_stmt|;
name|void
name|render
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|mouseMoveEvent
name|void
name|Window
operator|::
name|mouseMoveEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|ev
parameter_list|)
block|{
if|if
condition|(
name|m_mouseDownPosition
operator|.
name|isNull
argument_list|()
condition|)
return|return;
name|QPoint
name|delta
init|=
name|ev
operator|->
name|pos
argument_list|()
operator|-
name|m_mouseDownPosition
decl_stmt|;
name|QPoint
name|newPosition
init|=
name|position
argument_list|()
operator|+
name|delta
decl_stmt|;
name|setPosition
argument_list|(
name|newPosition
argument_list|)
expr_stmt|;
comment|//    qDebug()<< "diff"<< delta<< newPosition;
block|}
end_function
begin_function
DECL|function|mousePressEvent
name|void
name|Window
operator|::
name|mousePressEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|ev
parameter_list|)
block|{
name|m_mouseDownPosition
operator|=
name|ev
operator|->
name|pos
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mouseReleaseEvent
name|void
name|Window
operator|::
name|mouseReleaseEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|e
parameter_list|)
block|{
name|m_mouseDownPosition
operator|=
name|QPoint
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|render
name|void
name|Window
operator|::
name|render
parameter_list|()
block|{
name|QRect
name|rect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|geometry
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|m_backingStore
operator|->
name|resize
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|m_backingStore
operator|->
name|beginPaint
argument_list|(
name|rect
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|rect
operator|.
name|size
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QPaintDevice
modifier|*
name|device
init|=
name|m_backingStore
operator|->
name|paintDevice
argument_list|()
decl_stmt|;
name|QPainter
name|p
argument_list|(
name|device
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|,
name|m_color
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
literal|0
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|m_backingStore
operator|->
name|endPaint
argument_list|()
expr_stmt|;
name|m_backingStore
operator|->
name|flush
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// A control for a QWindow
end_comment
begin_class
DECL|class|WindowControl
class|class
name|WindowControl
super|:
specifier|public
name|BaseWindowControl
block|{
name|Q_OBJECT
public|public:
specifier|explicit
name|WindowControl
parameter_list|(
name|QWindow
modifier|*
name|w
parameter_list|)
constructor_decl|;
specifier|virtual
name|void
name|refresh
parameter_list|()
function_decl|;
private|private
name|slots
private|:
name|void
name|showWindow
parameter_list|()
function_decl|;
name|void
name|hideWindow
parameter_list|()
function_decl|;
name|void
name|raiseWindow
parameter_list|()
function_decl|;
name|void
name|lowerWindow
parameter_list|()
function_decl|;
name|void
name|toggleAttachWindow
parameter_list|()
function_decl|;
name|void
name|addChildWindow
parameter_list|()
function_decl|;
private|private:
DECL|function|objectGeometry
specifier|virtual
name|QRect
name|objectGeometry
parameter_list|(
specifier|const
name|QObject
modifier|*
name|o
parameter_list|)
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
specifier|const
name|QWindow
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|geometry
argument_list|()
return|;
block|}
DECL|function|setObjectGeometry
specifier|virtual
name|void
name|setObjectGeometry
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
specifier|const
name|QRect
modifier|&
name|r
parameter_list|)
specifier|const
block|{
cast|static_cast
argument_list|<
name|QWindow
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|setGeometry
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
DECL|function|objectFramePosition
specifier|virtual
name|QPoint
name|objectFramePosition
parameter_list|(
specifier|const
name|QObject
modifier|*
name|o
parameter_list|)
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
specifier|const
name|QWindow
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|framePosition
argument_list|()
return|;
block|}
DECL|function|setObjectFramePosition
specifier|virtual
name|void
name|setObjectFramePosition
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
specifier|const
block|{
cast|static_cast
argument_list|<
name|QWindow
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|setFramePosition
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
DECL|function|objectMapToGlobal
specifier|virtual
name|QPoint
name|objectMapToGlobal
parameter_list|(
specifier|const
name|QObject
modifier|*
name|o
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
specifier|const
name|QWindow
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|mapToGlobal
argument_list|(
name|p
argument_list|)
return|;
block|}
DECL|function|setObjectWindowFlags
specifier|virtual
name|void
name|setObjectWindowFlags
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|f
parameter_list|)
block|{
cast|static_cast
argument_list|<
name|QWindow
operator|*
argument_list|>
argument_list|(
name|o
argument_list|)
operator|->
name|setFlags
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
DECL|member|m_stateControl
name|WindowStateControl
modifier|*
name|m_stateControl
decl_stmt|;
DECL|member|m_window
name|QWindow
modifier|*
name|m_window
decl_stmt|;
DECL|member|m_detachedParent
name|QWindow
modifier|*
name|m_detachedParent
decl_stmt|;
comment|// set when this window is detached. This is the window we should re-attach to.
block|}
class|;
end_class
begin_constructor
DECL|function|WindowControl
name|WindowControl
operator|::
name|WindowControl
parameter_list|(
name|QWindow
modifier|*
name|w
parameter_list|)
member_init_list|:
name|BaseWindowControl
argument_list|(
name|w
argument_list|)
member_init_list|,
name|m_stateControl
argument_list|(
operator|new
name|WindowStateControl
argument_list|(
name|WindowStateControl
operator|::
name|WantVisibleCheckBox
operator||
name|WindowStateControl
operator|::
name|WantMinimizeRadioButton
argument_list|)
argument_list|)
member_init_list|,
name|m_window
argument_list|(
name|w
argument_list|)
member_init_list|,
name|m_detachedParent
argument_list|(
literal|0
argument_list|)
block|{
name|setTitle
argument_list|(
name|w
operator|->
name|title
argument_list|()
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button
init|=
operator|new
name|QPushButton
argument_list|(
literal|"Show Window"
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|showWindow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"hide Window"
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|hideWindow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"Rase Window"
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|raiseWindow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"Lower Window"
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|lowerWindow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"Toggle attach"
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|toggleAttachWindow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"Add Child Window"
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|addChildWindow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|refresh
name|void
name|WindowControl
operator|::
name|refresh
parameter_list|()
block|{
specifier|const
name|QWindow
modifier|*
name|w
init|=
cast|static_cast
argument_list|<
specifier|const
name|QWindow
operator|*
argument_list|>
argument_list|(
name|m_object
argument_list|)
decl_stmt|;
name|BaseWindowControl
operator|::
name|refresh
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showWindow
name|void
name|WindowControl
operator|::
name|showWindow
parameter_list|()
block|{
name|m_window
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|hideWindow
name|void
name|WindowControl
operator|::
name|hideWindow
parameter_list|()
block|{
name|m_window
operator|->
name|hide
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|raiseWindow
name|void
name|WindowControl
operator|::
name|raiseWindow
parameter_list|()
block|{
name|m_window
operator|->
name|raise
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|lowerWindow
name|void
name|WindowControl
operator|::
name|lowerWindow
parameter_list|()
block|{
name|m_window
operator|->
name|lower
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toggleAttachWindow
name|void
name|WindowControl
operator|::
name|toggleAttachWindow
parameter_list|()
block|{
if|if
condition|(
name|m_detachedParent
condition|)
block|{
name|m_window
operator|->
name|hide
argument_list|()
expr_stmt|;
name|m_window
operator|->
name|setParent
argument_list|(
name|m_detachedParent
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|show
argument_list|()
expr_stmt|;
name|m_detachedParent
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|m_detachedParent
operator|=
name|m_window
operator|->
name|parent
argument_list|()
expr_stmt|;
name|m_window
operator|->
name|hide
argument_list|()
expr_stmt|;
name|m_window
operator|->
name|setParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|m_window
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|addChildWindow
name|void
name|WindowControl
operator|::
name|addChildWindow
parameter_list|()
block|{
name|qDebug
argument_list|()
operator|<<
literal|"WindowControl::addChildWindow"
expr_stmt|;
name|Window
modifier|*
name|childWindow
init|=
operator|new
name|Window
argument_list|(
name|m_window
argument_list|)
decl_stmt|;
name|QRect
name|childGeometry
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|40
argument_list|,
literal|40
argument_list|)
decl_stmt|;
name|childWindow
operator|->
name|setGeometry
argument_list|(
name|childGeometry
argument_list|)
expr_stmt|;
name|WindowControl
modifier|*
name|control
init|=
operator|new
name|WindowControl
argument_list|(
name|childWindow
argument_list|)
decl_stmt|;
name|control
operator|->
name|show
argument_list|()
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_constructor
DECL|function|ControllerWidget
name|ControllerWidget
operator|::
name|ControllerWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_testWindow
argument_list|(
operator|new
name|Window
argument_list|)
block|{
name|QMenu
modifier|*
name|fileMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"File"
argument_list|)
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|exitAction
init|=
name|fileMenu
operator|->
name|addAction
argument_list|(
name|tr
argument_list|(
literal|"Exit"
argument_list|)
argument_list|)
decl_stmt|;
name|exitAction
operator|->
name|setShortcut
argument_list|(
name|QKeySequence
argument_list|(
name|Qt
operator|::
name|CTRL
operator||
name|Qt
operator|::
name|Key_Q
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|exitAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|qApp
argument_list|,
name|SLOT
argument_list|(
name|closeAllWindows
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QString
name|title
init|=
name|QLatin1String
argument_list|(
literal|"Child Window Geometry test, (Qt "
argument_list|)
decl_stmt|;
name|title
operator|+=
name|QLatin1String
argument_list|(
name|QT_VERSION_STR
argument_list|)
expr_stmt|;
name|title
operator|+=
name|QLatin1String
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|title
operator|+=
name|qApp
operator|->
name|platformName
argument_list|()
expr_stmt|;
name|title
operator|+=
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|int
name|x
init|=
literal|100
decl_stmt|;
name|int
name|y
init|=
literal|100
decl_stmt|;
specifier|const
name|QStringList
name|args
init|=
name|QApplication
operator|::
name|arguments
argument_list|()
decl_stmt|;
specifier|const
name|int
name|offsetArgIndex
init|=
name|args
operator|.
name|indexOf
argument_list|(
name|QLatin1String
argument_list|(
literal|"-offset"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|offsetArgIndex
operator|>=
literal|0
operator|&&
name|offsetArgIndex
operator|<
name|args
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|)
block|{
name|y
operator|+=
name|args
operator|.
name|at
argument_list|(
name|offsetArgIndex
operator|+
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|QT_VERSION
operator|<
literal|0x050000
condition|)
name|y
operator|+=
literal|400
expr_stmt|;
block|}
name|move
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|x
operator|+=
literal|800
expr_stmt|;
name|x
operator|+=
literal|300
expr_stmt|;
name|m_testWindow
operator|->
name|setFlags
argument_list|(
name|Qt
operator|::
name|Window
operator||
name|Qt
operator|::
name|WindowSystemMenuHint
operator||
name|Qt
operator|::
name|WindowCloseButtonHint
operator||
name|Qt
operator|::
name|WindowMinimizeButtonHint
operator||
name|Qt
operator|::
name|WindowMaximizeButtonHint
operator||
name|Qt
operator|::
name|WindowTitleHint
operator||
name|Qt
operator|::
name|WindowFullscreenButtonHint
argument_list|)
expr_stmt|;
name|m_testWindow
operator|->
name|setFramePosition
argument_list|(
name|QPoint
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
expr_stmt|;
name|m_testWindow
operator|->
name|resize
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|m_testWindow
operator|->
name|setTitle
argument_list|(
name|tr
argument_list|(
literal|"TestWindow"
argument_list|)
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|central
init|=
operator|new
name|QWidget
decl_stmt|;
name|QVBoxLayout
modifier|*
name|l
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|central
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|labelText
init|=
name|tr
argument_list|(
literal|"<html><head/><body><p>This example lets you control the geometry"
literal|" of QWindows and child QWindows"
argument_list|)
decl_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|labelText
argument_list|)
argument_list|)
expr_stmt|;
name|WindowControl
modifier|*
name|windowControl
init|=
operator|new
name|WindowControl
argument_list|(
name|m_testWindow
operator|.
name|data
argument_list|()
argument_list|)
decl_stmt|;
name|l
operator|->
name|addWidget
argument_list|(
name|windowControl
argument_list|)
expr_stmt|;
name|setCentralWidget
argument_list|(
name|central
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~ControllerWidget
name|ControllerWidget
operator|::
name|~
name|ControllerWidget
parameter_list|()
block|{   }
end_destructor
begin_include
include|#
directive|include
file|"controllerwidget.moc"
end_include
end_unit
