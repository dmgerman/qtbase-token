begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Intel Corporation. ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|<QtTest>
end_include
begin_include
include|#
directive|include
file|<QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<QDesktopServices>
end_include
begin_class
DECL|class|tst_QDesktopServices
class|class
name|tst_QDesktopServices
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
private|private
name|Q_SLOTS
private|:
name|void
name|openUrl
parameter_list|()
function_decl|;
name|void
name|openUrl_data
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|openUrl_data
name|void
name|tst_QDesktopServices
operator|::
name|openUrl_data
parameter_list|()
block|{
name|QTest
operator|::
name|addColumn
argument_list|<
name|QUrl
argument_list|>
argument_list|(
literal|"data"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|addColumn
argument_list|<
name|QString
argument_list|>
argument_list|(
literal|"message"
argument_list|)
expr_stmt|;
name|QUrl
name|localFile
init|=
name|QUrl
operator|::
name|fromLocalFile
argument_list|(
name|QFINDTESTDATA
argument_list|(
literal|"test.txt"
argument_list|)
argument_list|)
decl_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text-file"
argument_list|)
operator|<<
name|localFile
operator|<<
literal|"This should open test.txt in a text editor"
expr_stmt|;
name|localFile
operator|.
name|setQuery
argument_list|(
literal|"x=y"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text-file-with-query"
argument_list|)
operator|<<
name|localFile
operator|<<
literal|"This should open test.txt in a text editor. Queries do not usually show up."
expr_stmt|;
name|localFile
operator|.
name|setQuery
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|localFile
operator|.
name|setFragment
argument_list|(
literal|"top"
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"text-file-with-fragment"
argument_list|)
operator|<<
name|localFile
operator|<<
literal|"This should open test.txt in a text editor. Fragments do not usually show up."
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"browser-plain"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://qt-project.org"
argument_list|)
operator|<<
literal|"This should open http://qt-project.org in the default web browser"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"search-url"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://google.com/search?q=Qt+Project"
argument_list|)
operator|<<
literal|"This should search \"Qt Project\" on Google"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"search-url-with-space"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://google.com/search?q=Qt Project"
argument_list|)
operator|<<
literal|"This should search \"Qt Project\" on Google"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"search-url-with-quotes"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://google.com/search?q=\"Qt+Project\""
argument_list|)
operator|<<
literal|"This should search '\"Qt Project\"' on Google (including the quotes)"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"search-url-with-hashtag"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://google.com/search?q=%23qtproject"
argument_list|)
operator|<<
literal|"This should search \"#qtproject\" on Google. The # should appear in the Google search field"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"search-url-with-fragment"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://google.com/search?q=Qt+Project#top"
argument_list|)
operator|<<
literal|"This should search \"Qt Project\" on Google. There should be no # in the Google search field"
expr_stmt|;
comment|// see QTBUG-32311
name|QTest
operator|::
name|newRow
argument_list|(
literal|"search-url-with-slashes"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://google.com/search?q=/profile/5"
argument_list|)
operator|<<
literal|"This should search \"/profile/5\" on Google."
expr_stmt|;
comment|// see QTBUG-31945
name|QTest
operator|::
name|newRow
argument_list|(
literal|"two-fragments"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"http://developer.apple.com/library/ios/#documentation/uikit/reference/UIViewController_Class/Reference/Reference.html#//apple_ref/doc/uid/TP40006926-CH3-SW81"
argument_list|)
operator|<<
literal|"This should open \"Implementing a Container View Controller\" in the UIViewController docs"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mail"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"mailto:development@qt-project.org"
argument_list|)
operator|<<
literal|"This should open an email composer with the destination set to development@qt-project.org"
expr_stmt|;
name|QTest
operator|::
name|newRow
argument_list|(
literal|"mail-subject"
argument_list|)
operator|<<
name|QUrl
argument_list|(
literal|"mailto:development@qt-project.org?subject=[Development]%20Test%20Mail"
argument_list|)
operator|<<
literal|"This should open an email composer and tries to set the subject"
expr_stmt|;
block|}
end_function
begin_function
DECL|function|openUrl
name|void
name|tst_QDesktopServices
operator|::
name|openUrl
parameter_list|()
block|{
name|QFETCH
argument_list|(
name|QUrl
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|QFETCH
argument_list|(
name|QString
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|qWarning
argument_list|(
literal|"\n\nOpening \"%s\": %s"
argument_list|,
name|qPrintable
argument_list|(
name|data
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|qPrintable
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
name|QVERIFY
argument_list|(
name|QDesktopServices
operator|::
name|openUrl
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QTEST_MAIN
argument_list|(
argument|tst_QDesktopServices
argument_list|)
end_macro
begin_include
include|#
directive|include
file|"tst_qdesktopservices.moc"
end_include
end_unit
