begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"bearerex.h"
end_include
begin_include
include|#
directive|include
file|"datatransferer.h"
end_include
begin_include
include|#
directive|include
file|<QtNetwork>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_constructor
DECL|function|BearerEx
name|BearerEx
operator|::
name|BearerEx
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
block|{
name|setupUi
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|createMenus
argument_list|()
expr_stmt|;
name|connect
argument_list|(
operator|&
name|m_NetworkConfigurationManager
argument_list|,
name|SIGNAL
argument_list|(
name|updateCompleted
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|configurationsUpdateCompleted
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|m_NetworkConfigurationManager
argument_list|,
name|SIGNAL
argument_list|(
name|configurationAdded
argument_list|(
name|QNetworkConfiguration
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|configurationAdded
argument_list|(
name|QNetworkConfiguration
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|m_NetworkConfigurationManager
argument_list|,
name|SIGNAL
argument_list|(
name|configurationRemoved
argument_list|(
name|QNetworkConfiguration
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|configurationRemoved
argument_list|(
name|QNetworkConfiguration
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|m_NetworkConfigurationManager
argument_list|,
name|SIGNAL
argument_list|(
name|onlineStateChanged
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|onlineStateChanged
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|m_NetworkConfigurationManager
argument_list|,
name|SIGNAL
argument_list|(
name|configurationChanged
argument_list|(
name|QNetworkConfiguration
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|configurationChanged
argument_list|(
name|QNetworkConfiguration
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|showConfigurations
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|createMenus
name|void
name|BearerEx
operator|::
name|createMenus
parameter_list|()
block|{
name|QAction
modifier|*
name|act1
init|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Show Details"
argument_list|)
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|menuBar
argument_list|()
operator|->
name|addAction
argument_list|(
name|act1
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|act1
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|on_showDetailsButton_clicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QAction
modifier|*
name|exitAct
init|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Exit"
argument_list|)
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|menuBar
argument_list|()
operator|->
name|addAction
argument_list|(
name|exitAct
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|exitAct
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showConfigurations
name|void
name|BearerEx
operator|::
name|showConfigurations
parameter_list|()
block|{
name|listWidget
operator|->
name|clear
argument_list|()
expr_stmt|;
name|QListWidgetItem
modifier|*
name|listItem
decl_stmt|;
name|QNetworkConfiguration
name|defaultConfig
init|=
name|m_NetworkConfigurationManager
operator|.
name|defaultConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
name|defaultConfig
operator|.
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|UserChoice
condition|)
block|{
name|listItem
operator|=
operator|new
name|QListWidgetItem
argument_list|()
expr_stmt|;
name|QFont
name|font
init|=
name|listItem
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|font
operator|.
name|setUnderline
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setText
argument_list|(
literal|"       UserChoice"
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|defaultConfig
argument_list|)
argument_list|)
expr_stmt|;
name|listWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
name|QList
argument_list|<
name|QNetworkConfiguration
argument_list|>
name|configurations
init|=
name|m_NetworkConfigurationManager
operator|.
name|allConfigurations
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|configurations
operator|.
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|listItem
operator|=
operator|new
name|QListWidgetItem
argument_list|()
expr_stmt|;
name|QString
name|text
decl_stmt|;
if|if
condition|(
name|configurations
index|[
name|i
index|]
operator|.
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|InternetAccessPoint
condition|)
block|{
name|text
operator|.
name|append
argument_list|(
literal|"(IAP,"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|configurations
index|[
name|i
index|]
operator|.
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|ServiceNetwork
condition|)
block|{
name|text
operator|.
name|append
argument_list|(
literal|"(SNAP,"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|configurations
index|[
name|i
index|]
operator|.
name|state
argument_list|()
operator|&
name|QNetworkConfiguration
operator|::
name|Active
operator|)
operator|==
name|QNetworkConfiguration
operator|::
name|Active
condition|)
block|{
name|text
operator|.
name|append
argument_list|(
literal|"Act) "
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
name|configurations
index|[
name|i
index|]
operator|.
name|state
argument_list|()
operator|&
name|QNetworkConfiguration
operator|::
name|Discovered
operator|)
operator|==
name|QNetworkConfiguration
operator|::
name|Discovered
condition|)
block|{
name|text
operator|.
name|append
argument_list|(
literal|"Disc) "
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|text
operator|.
name|append
argument_list|(
literal|"Def) "
argument_list|)
expr_stmt|;
block|}
name|text
operator|.
name|append
argument_list|(
name|configurations
index|[
name|i
index|]
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|defaultConfig
operator|.
name|isValid
argument_list|()
operator|&&
name|defaultConfig
operator|==
name|configurations
index|[
name|i
index|]
condition|)
block|{
name|QFont
name|font
init|=
name|listItem
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|font
operator|.
name|setUnderline
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
block|}
name|listItem
operator|->
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|configurations
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|listWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|on_updateConfigurationsButton_clicked
name|void
name|BearerEx
operator|::
name|on_updateConfigurationsButton_clicked
parameter_list|()
block|{
name|m_NetworkConfigurationManager
operator|.
name|updateConfigurations
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_updateListButton_clicked
name|void
name|BearerEx
operator|::
name|on_updateListButton_clicked
parameter_list|()
block|{
name|showConfigurations
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_showDetailsButton_clicked
name|void
name|BearerEx
operator|::
name|on_showDetailsButton_clicked
parameter_list|()
block|{
name|QListWidgetItem
modifier|*
name|item
init|=
name|listWidget
operator|->
name|currentItem
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|item
condition|)
block|{
return|return;
block|}
name|QNetworkConfiguration
name|networkConfiguration
init|=
name|qvariant_cast
argument_list|<
name|QNetworkConfiguration
argument_list|>
argument_list|(
name|item
operator|->
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|)
argument_list|)
decl_stmt|;
name|DetailedInfoDialog
name|infoDialog
argument_list|(
operator|&
name|networkConfiguration
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|infoDialog
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_createSessionButton_clicked
name|void
name|BearerEx
operator|::
name|on_createSessionButton_clicked
parameter_list|()
block|{
name|QListWidgetItem
modifier|*
name|item
init|=
name|listWidget
operator|->
name|currentItem
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|item
condition|)
block|{
return|return;
block|}
name|QNetworkConfiguration
name|networkConfiguration
init|=
name|qvariant_cast
argument_list|<
name|QNetworkConfiguration
argument_list|>
argument_list|(
name|item
operator|->
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|newTabIndex
init|=
name|mainTabWidget
operator|->
name|count
argument_list|()
decl_stmt|;
name|SessionTab
modifier|*
name|newTab
init|=
operator|new
name|SessionTab
argument_list|(
operator|&
name|networkConfiguration
argument_list|,
operator|&
name|m_NetworkConfigurationManager
argument_list|,
name|eventListWidget
argument_list|,
name|newTabIndex
operator|-
literal|1
argument_list|)
decl_stmt|;
name|QString
name|label
init|=
name|QLatin1Char
argument_list|(
literal|'S'
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|newTabIndex
operator|-
literal|1
argument_list|)
decl_stmt|;
name|mainTabWidget
operator|->
name|insertTab
argument_list|(
name|newTabIndex
argument_list|,
name|newTab
argument_list|,
name|label
argument_list|)
expr_stmt|;
name|mainTabWidget
operator|->
name|setCurrentIndex
argument_list|(
name|newTabIndex
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_clearEventListButton_clicked
name|void
name|BearerEx
operator|::
name|on_clearEventListButton_clicked
parameter_list|()
block|{
name|eventListWidget
operator|->
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|configurationAdded
name|void
name|BearerEx
operator|::
name|configurationAdded
parameter_list|(
specifier|const
name|QNetworkConfiguration
modifier|&
name|config
parameter_list|)
block|{
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|listItem
operator|->
name|setText
argument_list|(
name|QString
argument_list|(
literal|"Added: "
argument_list|)
operator|+
name|config
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|configurationRemoved
name|void
name|BearerEx
operator|::
name|configurationRemoved
parameter_list|(
specifier|const
name|QNetworkConfiguration
modifier|&
name|config
parameter_list|)
block|{
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|listItem
operator|->
name|setText
argument_list|(
name|QString
argument_list|(
literal|"Removed: "
argument_list|)
operator|+
name|config
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|onlineStateChanged
name|void
name|BearerEx
operator|::
name|onlineStateChanged
parameter_list|(
name|bool
name|isOnline
parameter_list|)
block|{
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|QFont
name|font
init|=
name|listItem
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
if|if
condition|(
name|isOnline
condition|)
block|{
name|listItem
operator|->
name|setText
argument_list|(
name|QString
argument_list|(
literal|"> Online"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|listItem
operator|->
name|setText
argument_list|(
name|QString
argument_list|(
literal|"< Offline"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|configurationChanged
name|void
name|BearerEx
operator|::
name|configurationChanged
parameter_list|(
specifier|const
name|QNetworkConfiguration
modifier|&
name|config
parameter_list|)
block|{
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|QString
name|state
decl_stmt|;
switch|switch
condition|(
name|config
operator|.
name|state
argument_list|()
condition|)
block|{
case|case
name|QNetworkConfiguration
operator|::
name|Undefined
case|:
name|state
operator|=
literal|"Undef : "
expr_stmt|;
break|break;
case|case
name|QNetworkConfiguration
operator|::
name|Defined
case|:
name|state
operator|=
literal|"Def : "
expr_stmt|;
break|break;
case|case
name|QNetworkConfiguration
operator|::
name|Discovered
case|:
name|state
operator|=
literal|"Disc : "
expr_stmt|;
break|break;
case|case
name|QNetworkConfiguration
operator|::
name|Active
case|:
name|state
operator|=
literal|"Act : "
expr_stmt|;
break|break;
block|}
name|listItem
operator|->
name|setText
argument_list|(
name|state
operator|+
name|config
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|configurationsUpdateCompleted
name|void
name|BearerEx
operator|::
name|configurationsUpdateCompleted
parameter_list|()
block|{
name|QMessageBox
name|msgBox
decl_stmt|;
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Close
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setText
argument_list|(
literal|"Configurations update completed."
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|DetailedInfoDialog
name|DetailedInfoDialog
operator|::
name|DetailedInfoDialog
parameter_list|(
name|QNetworkConfiguration
modifier|*
name|apNetworkConfiguration
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
name|setupUi
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|tableWidget
operator|->
name|setColumnCount
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|int
name|rowCount
init|=
literal|2
decl_stmt|;
if|if
condition|(
name|apNetworkConfiguration
operator|->
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|ServiceNetwork
condition|)
block|{
name|rowCount
operator|=
name|rowCount
operator|+
name|apNetworkConfiguration
operator|->
name|children
argument_list|()
operator|.
name|count
argument_list|()
expr_stmt|;
block|}
name|tableWidget
operator|->
name|setRowCount
argument_list|(
name|rowCount
argument_list|)
expr_stmt|;
name|tableWidget
operator|->
name|setColumnWidth
argument_list|(
literal|1
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|tableWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|tr
argument_list|(
literal|"Name"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tableWidget
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|apNetworkConfiguration
operator|->
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|tableWidget
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|tr
argument_list|(
literal|"Id"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tableWidget
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|apNetworkConfiguration
operator|->
name|identifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|apNetworkConfiguration
operator|->
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|ServiceNetwork
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|apNetworkConfiguration
operator|->
name|children
argument_list|()
operator|.
name|count
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|tableWidget
operator|->
name|setItem
argument_list|(
name|i
operator|+
literal|2
argument_list|,
literal|0
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|QString
argument_list|(
literal|"IAP"
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|i
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tableWidget
operator|->
name|setItem
argument_list|(
name|i
operator|+
literal|2
argument_list|,
literal|1
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|apNetworkConfiguration
operator|->
name|children
argument_list|()
index|[
name|i
index|]
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|tableWidget
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_constructor
DECL|function|SessionTab
name|SessionTab
operator|::
name|SessionTab
parameter_list|(
name|QNetworkConfiguration
modifier|*
name|apNetworkConfiguration
parameter_list|,
name|QNetworkConfigurationManager
modifier|*
name|configManager
parameter_list|,
name|QListWidget
modifier|*
name|eventListWidget
parameter_list|,
name|int
name|index
parameter_list|,
name|BearerEx
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_dataTransferer
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_eventListWidget
argument_list|(
name|eventListWidget
argument_list|)
member_init_list|,
name|m_index
argument_list|(
name|index
argument_list|)
member_init_list|,
name|m_alrEnabled
argument_list|(
literal|false
argument_list|)
block|{
name|setupUi
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|m_ConfigManager
operator|=
name|configManager
expr_stmt|;
name|m_NetworkSession
operator|=
operator|new
name|QNetworkSession
argument_list|(
operator|*
name|apNetworkConfiguration
argument_list|)
expr_stmt|;
comment|// Update initial Session state to UI
name|newState
argument_list|(
name|m_NetworkSession
operator|->
name|state
argument_list|()
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_NetworkSession
argument_list|,
name|SIGNAL
argument_list|(
name|newConfigurationActivated
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|newConfigurationActivated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_NetworkSession
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QNetworkSession
operator|::
name|State
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|stateChanged
argument_list|(
name|QNetworkSession
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_NetworkSession
argument_list|,
name|SIGNAL
argument_list|(
name|opened
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|opened
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_NetworkSession
argument_list|,
name|SIGNAL
argument_list|(
name|closed
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|closed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_NetworkSession
argument_list|,
name|SIGNAL
argument_list|(
name|error
argument_list|(
name|QNetworkSession
operator|::
name|SessionError
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|error
argument_list|(
name|QNetworkSession
operator|::
name|SessionError
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|apNetworkConfiguration
operator|->
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|InternetAccessPoint
condition|)
block|{
name|snapLabel
operator|->
name|hide
argument_list|()
expr_stmt|;
name|snapLineEdit
operator|->
name|hide
argument_list|()
expr_stmt|;
name|alrButton
operator|->
name|hide
argument_list|()
expr_stmt|;
name|iapLineEdit
operator|->
name|setText
argument_list|(
name|apNetworkConfiguration
operator|->
name|name
argument_list|()
operator|+
literal|" ("
operator|+
name|apNetworkConfiguration
operator|->
name|identifier
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|apNetworkConfiguration
operator|->
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|ServiceNetwork
condition|)
block|{
name|snapLineEdit
operator|->
name|setText
argument_list|(
name|apNetworkConfiguration
operator|->
name|name
argument_list|()
operator|+
literal|" ("
operator|+
name|apNetworkConfiguration
operator|->
name|identifier
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|bearerLineEdit
operator|->
name|setText
argument_list|(
name|apNetworkConfiguration
operator|->
name|bearerTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|sentRecDataLineEdit
operator|->
name|setText
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|m_NetworkSession
operator|->
name|bytesWritten
argument_list|()
argument_list|)
operator|+
name|QString
argument_list|(
literal|" / "
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|m_NetworkSession
operator|->
name|bytesReceived
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|snapLineEdit
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|iapLineEdit
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|bearerLineEdit
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|sentRecDataLineEdit
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
name|stateLineEdit
operator|->
name|setFocusPolicy
argument_list|(
name|Qt
operator|::
name|NoFocus
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~SessionTab
name|SessionTab
operator|::
name|~
name|SessionTab
parameter_list|()
block|{
operator|delete
name|m_NetworkSession
expr_stmt|;
name|m_NetworkSession
operator|=
literal|0
expr_stmt|;
operator|delete
name|m_dataTransferer
expr_stmt|;
name|m_dataTransferer
operator|=
literal|0
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|on_createQNetworkAccessManagerButton_clicked
name|void
name|SessionTab
operator|::
name|on_createQNetworkAccessManagerButton_clicked
parameter_list|()
block|{
if|if
condition|(
name|m_dataTransferer
condition|)
block|{
name|disconnect
argument_list|(
name|m_dataTransferer
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|m_dataTransferer
expr_stmt|;
name|m_dataTransferer
operator|=
literal|0
expr_stmt|;
block|}
comment|// Create new object according to current selection
name|QString
name|type
argument_list|(
name|comboBox
operator|->
name|currentText
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|==
literal|"QNAM"
condition|)
block|{
name|m_dataTransferer
operator|=
operator|new
name|DataTransfererQNam
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|type
operator|==
literal|"QTcpSocket"
condition|)
block|{
name|m_dataTransferer
operator|=
operator|new
name|DataTransfererQTcp
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|(
literal|"BearerEx Warning, unknown data transfer object requested, not creating anything."
argument_list|)
expr_stmt|;
return|return;
block|}
name|createQNetworkAccessManagerButton
operator|->
name|setText
argument_list|(
literal|"Recreate"
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_dataTransferer
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|(
name|quint32
argument_list|,
name|qint64
argument_list|,
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|finished
argument_list|(
name|quint32
argument_list|,
name|qint64
argument_list|,
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_sendRequestButton_clicked
name|void
name|SessionTab
operator|::
name|on_sendRequestButton_clicked
parameter_list|()
block|{
if|if
condition|(
name|m_dataTransferer
condition|)
block|{
if|if
condition|(
operator|!
name|m_dataTransferer
operator|->
name|transferData
argument_list|()
condition|)
block|{
name|QMessageBox
name|msgBox
decl_stmt|;
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Close
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setText
argument_list|(
literal|"Data transfer not started. \nVery likely data transfer ongoing."
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|QMessageBox
name|msgBox
decl_stmt|;
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Close
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setText
argument_list|(
literal|"Data object not created.\nCreate data object first."
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|on_openSessionButton_clicked
name|void
name|SessionTab
operator|::
name|on_openSessionButton_clicked
parameter_list|()
block|{
name|m_NetworkSession
operator|->
name|open
argument_list|()
expr_stmt|;
if|if
condition|(
name|m_NetworkSession
operator|->
name|isOpen
argument_list|()
condition|)
block|{
name|newState
argument_list|(
name|m_NetworkSession
operator|->
name|state
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|on_closeSessionButton_clicked
name|void
name|SessionTab
operator|::
name|on_closeSessionButton_clicked
parameter_list|()
block|{
name|m_NetworkSession
operator|->
name|close
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|m_NetworkSession
operator|->
name|isOpen
argument_list|()
condition|)
block|{
name|newState
argument_list|(
name|m_NetworkSession
operator|->
name|state
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|on_stopConnectionButton_clicked
name|void
name|SessionTab
operator|::
name|on_stopConnectionButton_clicked
parameter_list|()
block|{
name|m_NetworkSession
operator|->
name|stop
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_alrButton_clicked
name|void
name|SessionTab
operator|::
name|on_alrButton_clicked
parameter_list|()
block|{
if|if
condition|(
operator|!
name|m_alrEnabled
condition|)
block|{
name|connect
argument_list|(
name|m_NetworkSession
argument_list|,
name|SIGNAL
argument_list|(
name|preferredConfigurationChanged
argument_list|(
name|QNetworkConfiguration
argument_list|,
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|preferredConfigurationChanged
argument_list|(
name|QNetworkConfiguration
argument_list|,
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|alrButton
operator|->
name|setText
argument_list|(
literal|"Disable ALR"
argument_list|)
expr_stmt|;
name|m_alrEnabled
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|disconnect
argument_list|(
name|m_NetworkSession
argument_list|,
name|SIGNAL
argument_list|(
name|preferredConfigurationChanged
argument_list|(
name|QNetworkConfiguration
argument_list|,
name|bool
argument_list|)
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|alrButton
operator|->
name|setText
argument_list|(
literal|"Enable ALR"
argument_list|)
expr_stmt|;
name|m_alrEnabled
operator|=
literal|false
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|on_deleteSessionButton_clicked
name|void
name|SessionTab
operator|::
name|on_deleteSessionButton_clicked
parameter_list|()
block|{
name|setWindowTitle
argument_list|(
literal|"Bearer Example"
argument_list|)
expr_stmt|;
operator|delete
name|this
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newConfigurationActivated
name|void
name|SessionTab
operator|::
name|newConfigurationActivated
parameter_list|()
block|{
name|QMessageBox
name|msgBox
decl_stmt|;
name|msgBox
operator|.
name|setText
argument_list|(
literal|"New configuration activated."
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setInformativeText
argument_list|(
literal|"Do you want to accept new configuration?"
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Yes
operator||
name|QMessageBox
operator|::
name|No
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setDefaultButton
argument_list|(
name|QMessageBox
operator|::
name|Yes
argument_list|)
expr_stmt|;
if|if
condition|(
name|msgBox
operator|.
name|exec
argument_list|()
operator|==
name|QMessageBox
operator|::
name|Yes
condition|)
block|{
name|m_NetworkSession
operator|->
name|accept
argument_list|()
expr_stmt|;
name|iapLineEdit
operator|->
name|setText
argument_list|(
name|m_config
operator|.
name|name
argument_list|()
operator|+
literal|" ("
operator|+
name|m_config
operator|.
name|identifier
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m_NetworkSession
operator|->
name|reject
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|preferredConfigurationChanged
name|void
name|SessionTab
operator|::
name|preferredConfigurationChanged
parameter_list|(
specifier|const
name|QNetworkConfiguration
modifier|&
name|config
parameter_list|,
name|bool
comment|/*isSeamless*/
parameter_list|)
block|{
name|m_config
operator|=
name|config
expr_stmt|;
name|QMessageBox
name|msgBox
decl_stmt|;
name|msgBox
operator|.
name|setText
argument_list|(
literal|"Roaming to new configuration."
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setInformativeText
argument_list|(
literal|"Do you want to migrate to "
operator|+
name|config
operator|.
name|name
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|'?'
argument_list|)
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Yes
operator||
name|QMessageBox
operator|::
name|No
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setDefaultButton
argument_list|(
name|QMessageBox
operator|::
name|Yes
argument_list|)
expr_stmt|;
if|if
condition|(
name|msgBox
operator|.
name|exec
argument_list|()
operator|==
name|QMessageBox
operator|::
name|Yes
condition|)
block|{
name|m_NetworkSession
operator|->
name|migrate
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|m_NetworkSession
operator|->
name|ignore
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|opened
name|void
name|SessionTab
operator|::
name|opened
parameter_list|()
block|{
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|QFont
name|font
init|=
name|listItem
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setText
argument_list|(
name|QLatin1Char
argument_list|(
literal|'S'
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|m_index
argument_list|)
operator|+
name|QLatin1String
argument_list|(
literal|" - Opened"
argument_list|)
argument_list|)
expr_stmt|;
name|m_eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
name|QVariant
name|identifier
init|=
name|m_NetworkSession
operator|->
name|sessionProperty
argument_list|(
literal|"ActiveConfiguration"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|identifier
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QString
name|configId
init|=
name|identifier
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QNetworkConfiguration
name|config
init|=
name|m_ConfigManager
operator|->
name|configurationFromIdentifier
argument_list|(
name|configId
argument_list|)
decl_stmt|;
if|if
condition|(
name|config
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|iapLineEdit
operator|->
name|setText
argument_list|(
name|config
operator|.
name|name
argument_list|()
operator|+
literal|" ("
operator|+
name|config
operator|.
name|identifier
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|newState
argument_list|(
name|m_NetworkSession
operator|->
name|state
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the "(open)"
if|if
condition|(
name|m_NetworkSession
operator|->
name|configuration
argument_list|()
operator|.
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|UserChoice
condition|)
block|{
name|QVariant
name|identifier
init|=
name|m_NetworkSession
operator|->
name|sessionProperty
argument_list|(
literal|"UserChoiceConfiguration"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|identifier
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QString
name|configId
init|=
name|identifier
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QNetworkConfiguration
name|config
init|=
name|m_ConfigManager
operator|->
name|configurationFromIdentifier
argument_list|(
name|configId
argument_list|)
decl_stmt|;
if|if
condition|(
name|config
operator|.
name|isValid
argument_list|()
operator|&&
operator|(
name|config
operator|.
name|type
argument_list|()
operator|==
name|QNetworkConfiguration
operator|::
name|ServiceNetwork
operator|)
condition|)
block|{
name|snapLineEdit
operator|->
name|setText
argument_list|(
name|config
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|closed
name|void
name|SessionTab
operator|::
name|closed
parameter_list|()
block|{
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|QFont
name|font
init|=
name|listItem
operator|->
name|font
argument_list|()
decl_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|listItem
operator|->
name|setText
argument_list|(
name|QLatin1Char
argument_list|(
literal|'S'
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|m_index
argument_list|)
operator|+
name|QLatin1String
argument_list|(
literal|" - Closed"
argument_list|)
argument_list|)
expr_stmt|;
name|m_eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stateString
name|QString
name|SessionTab
operator|::
name|stateString
parameter_list|(
name|QNetworkSession
operator|::
name|State
name|state
parameter_list|)
block|{
name|QString
name|stateString
decl_stmt|;
switch|switch
condition|(
name|state
condition|)
block|{
case|case
name|QNetworkSession
operator|::
name|Invalid
case|:
name|stateString
operator|=
literal|"Invalid"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|NotAvailable
case|:
name|stateString
operator|=
literal|"NotAvailable"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|Connecting
case|:
name|stateString
operator|=
literal|"Connecting"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|Connected
case|:
name|stateString
operator|=
literal|"Connected"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|Closing
case|:
name|stateString
operator|=
literal|"Closing"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|Disconnected
case|:
name|stateString
operator|=
literal|"Disconnected"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|Roaming
case|:
name|stateString
operator|=
literal|"Roaming"
expr_stmt|;
break|break;
block|}
return|return
name|stateString
return|;
block|}
end_function
begin_function
DECL|function|on_dataObjectChanged
name|void
name|SessionTab
operator|::
name|on_dataObjectChanged
parameter_list|(
specifier|const
name|QString
modifier|&
name|newObjectType
parameter_list|)
block|{
name|qDebug
argument_list|()
operator|<<
literal|"BearerEx SessionTab dataObjectChanged to: "
operator|<<
name|newObjectType
expr_stmt|;
if|if
condition|(
name|m_dataTransferer
condition|)
block|{
name|disconnect
argument_list|(
name|m_dataTransferer
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|m_dataTransferer
expr_stmt|;
name|m_dataTransferer
operator|=
literal|0
expr_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"BearerEx SessionTab, previous data object deleted."
expr_stmt|;
block|}
name|createQNetworkAccessManagerButton
operator|->
name|setText
argument_list|(
literal|"Create"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stateChanged
name|void
name|SessionTab
operator|::
name|stateChanged
parameter_list|(
name|QNetworkSession
operator|::
name|State
name|state
parameter_list|)
block|{
name|newState
argument_list|(
name|state
argument_list|)
expr_stmt|;
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|listItem
operator|->
name|setText
argument_list|(
name|QLatin1Char
argument_list|(
literal|'S'
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|m_index
argument_list|)
operator|+
name|QLatin1String
argument_list|(
literal|" - "
argument_list|)
operator|+
name|stateString
argument_list|(
name|state
argument_list|)
argument_list|)
expr_stmt|;
name|m_eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|newState
name|void
name|SessionTab
operator|::
name|newState
parameter_list|(
name|QNetworkSession
operator|::
name|State
name|state
parameter_list|)
block|{
name|QVariant
name|identifier
init|=
name|m_NetworkSession
operator|->
name|sessionProperty
argument_list|(
literal|"ActiveConfiguration"
argument_list|)
decl_stmt|;
if|if
condition|(
name|state
operator|==
name|QNetworkSession
operator|::
name|Connected
operator|&&
operator|!
name|identifier
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QString
name|configId
init|=
name|identifier
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QNetworkConfiguration
name|config
init|=
name|m_ConfigManager
operator|->
name|configurationFromIdentifier
argument_list|(
name|configId
argument_list|)
decl_stmt|;
if|if
condition|(
name|config
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|iapLineEdit
operator|->
name|setText
argument_list|(
name|config
operator|.
name|name
argument_list|()
operator|+
literal|" ("
operator|+
name|config
operator|.
name|identifier
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|')'
argument_list|)
argument_list|)
expr_stmt|;
name|bearerLineEdit
operator|->
name|setText
argument_list|(
name|config
operator|.
name|bearerTypeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|bearerLineEdit
operator|->
name|setText
argument_list|(
name|m_NetworkSession
operator|->
name|configuration
argument_list|()
operator|.
name|bearerTypeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QString
name|active
decl_stmt|;
if|if
condition|(
name|m_NetworkSession
operator|->
name|isOpen
argument_list|()
condition|)
block|{
name|active
operator|=
literal|" (open)"
expr_stmt|;
block|}
name|stateLineEdit
operator|->
name|setText
argument_list|(
name|stateString
argument_list|(
name|state
argument_list|)
operator|+
name|active
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|error
name|void
name|SessionTab
operator|::
name|error
parameter_list|(
name|QNetworkSession
operator|::
name|SessionError
name|error
parameter_list|)
block|{
name|QListWidgetItem
modifier|*
name|listItem
init|=
operator|new
name|QListWidgetItem
argument_list|()
decl_stmt|;
name|QMessageBox
name|msgBox
decl_stmt|;
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Close
argument_list|)
expr_stmt|;
name|QString
name|errorString
decl_stmt|;
switch|switch
condition|(
name|error
condition|)
block|{
case|case
name|QNetworkSession
operator|::
name|UnknownSessionError
case|:
name|errorString
operator|=
literal|"UnknownSessionError"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|SessionAbortedError
case|:
name|errorString
operator|=
literal|"SessionAbortedError"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|RoamingError
case|:
name|errorString
operator|=
literal|"RoamingError"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|OperationNotSupportedError
case|:
name|errorString
operator|=
literal|"OperationNotSupportedError"
expr_stmt|;
break|break;
case|case
name|QNetworkSession
operator|::
name|InvalidConfigurationError
case|:
name|errorString
operator|=
literal|"InvalidConfigurationError"
expr_stmt|;
break|break;
block|}
name|listItem
operator|->
name|setText
argument_list|(
name|QLatin1Char
argument_list|(
literal|'S'
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|m_index
argument_list|)
operator|+
name|QString
argument_list|(
literal|" - "
argument_list|)
operator|+
name|errorString
argument_list|)
expr_stmt|;
name|m_eventListWidget
operator|->
name|addItem
argument_list|(
name|listItem
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setText
argument_list|(
name|errorString
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|finished
name|void
name|SessionTab
operator|::
name|finished
parameter_list|(
name|quint32
name|errorCode
parameter_list|,
name|qint64
name|dataReceived
parameter_list|,
name|QString
name|errorType
parameter_list|)
block|{
name|QMessageBox
name|msgBox
decl_stmt|;
name|msgBox
operator|.
name|setStandardButtons
argument_list|(
name|QMessageBox
operator|::
name|Close
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|setText
argument_list|(
name|QString
argument_list|(
literal|"Data transfer completed. \nError code: "
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|int
argument_list|(
name|errorCode
argument_list|)
argument_list|)
operator|+
literal|"\nError type: "
operator|+
name|errorType
operator|+
literal|"\nBytes received: "
operator|+
name|QString
operator|::
name|number
argument_list|(
name|dataReceived
argument_list|)
argument_list|)
expr_stmt|;
name|msgBox
operator|.
name|exec
argument_list|()
expr_stmt|;
comment|// Check if the networksession still exists - it may have gone after returning from
comment|// the modal dialog (in the case that app has been closed, and deleting QHttp will
comment|// trigger the done() invocation).
if|if
condition|(
name|m_NetworkSession
condition|)
block|{
name|sentRecDataLineEdit
operator|->
name|setText
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|m_NetworkSession
operator|->
name|bytesWritten
argument_list|()
argument_list|)
operator|+
name|QString
argument_list|(
literal|" / "
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|m_NetworkSession
operator|->
name|bytesReceived
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sentRecDataLineEdit
operator|->
name|setText
argument_list|(
literal|"Data amounts not available."
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|// End of file
end_comment
end_unit
