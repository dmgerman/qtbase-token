begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QDialog>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_class
DECL|class|Dialog
class|class
name|Dialog
super|:
specifier|public
name|QDialog
block|{
public|public:
DECL|function|Dialog
name|Dialog
parameter_list|()
block|{
name|QString
name|localFile
argument_list|(
literal|"test.html"
argument_list|)
decl_stmt|;
comment|// server/shared/test.html should be replaced to point to a real file
name|QString
name|UNCPath
argument_list|(
literal|"file://server/shared/test.html"
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vBox
init|=
operator|new
name|QVBoxLayout
argument_list|()
decl_stmt|;
name|vBox
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"Clicking on the links should open their"
literal|" contents in the default browser !"
argument_list|)
argument_list|)
expr_stmt|;
name|vBox
operator|->
name|addWidget
argument_list|(
name|createLink
argument_list|(
name|localFile
argument_list|)
argument_list|)
expr_stmt|;
name|vBox
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
literal|"The following link must point to "
literal|"a file in a shared folder on a network !"
argument_list|)
argument_list|)
expr_stmt|;
name|vBox
operator|->
name|addWidget
argument_list|(
name|createLink
argument_list|(
name|UNCPath
argument_list|)
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|vBox
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|createLink
name|QLabel
modifier|*
name|createLink
parameter_list|(
name|QString
name|path
parameter_list|)
block|{
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|()
decl_stmt|;
name|label
operator|->
name|setTextFormat
argument_list|(
name|Qt
operator|::
name|RichText
argument_list|)
expr_stmt|;
name|label
operator|->
name|setTextInteractionFlags
argument_list|(
name|Qt
operator|::
name|TextBrowserInteraction
argument_list|)
expr_stmt|;
name|label
operator|->
name|setOpenExternalLinks
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QString
name|link
argument_list|(
literal|"<a href="
operator|+
name|path
operator|+
literal|">"
operator|+
name|path
operator|+
literal|"</a>"
argument_list|)
decl_stmt|;
name|label
operator|->
name|setText
argument_list|(
name|link
argument_list|)
expr_stmt|;
return|return
name|label
return|;
block|}
block|}
class|;
end_class
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|Dialog
name|dlg
decl_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
