begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|_WINDOWDUMP_
end_ifndef
begin_define
DECL|macro|_WINDOWDUMP_
define|#
directive|define
name|_WINDOWDUMP_
end_define
begin_include
include|#
directive|include
file|<QtCore/qnamespace.h>
end_include
begin_macro
DECL|function|QT_FORWARD_DECLARE_CLASS
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QRect
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QObject
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QWindow
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QTextStream
argument_list|)
end_macro
begin_decl_stmt
name|namespace
name|QtDiag
block|{
enum|enum
name|FormatWindowOption
block|{
name|DontPrintWindowFlags
init|=
literal|0x001
block|,
name|PrintSizeConstraints
init|=
literal|0x002
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|FormatWindowOptions
argument_list|,
argument|FormatWindowOption
argument_list|)
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|FormatWindowOptions
argument_list|)
name|void
name|indentStream
parameter_list|(
name|QTextStream
modifier|&
name|s
parameter_list|,
name|int
name|indent
parameter_list|)
function_decl|;
name|void
name|formatObject
parameter_list|(
name|QTextStream
modifier|&
name|str
parameter_list|,
specifier|const
name|QObject
modifier|*
name|o
parameter_list|)
function_decl|;
name|void
name|formatRect
parameter_list|(
name|QTextStream
modifier|&
name|str
parameter_list|,
specifier|const
name|QRect
modifier|&
name|geom
parameter_list|)
function_decl|;
name|void
name|formatWindowFlags
argument_list|(
name|QTextStream
operator|&
name|str
argument_list|,
specifier|const
name|Qt
operator|::
name|WindowFlags
name|flags
argument_list|)
decl_stmt|;
name|void
name|formatWindow
parameter_list|(
name|QTextStream
modifier|&
name|str
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|w
parameter_list|,
name|FormatWindowOptions
name|options
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|dumpAllWindows
parameter_list|(
name|FormatWindowOptions
name|options
init|=
literal|0
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_comment
comment|// namespace QtDiag
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
