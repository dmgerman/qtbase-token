begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 ThorbjÃ¸rn Lund Martsum - tmartsum[at]gmail.com ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets/QtWidgets>
end_include
begin_class
DECL|class|SomeHandler
class|class
name|SomeHandler
super|:
specifier|public
name|QObject
block|{
name|Q_OBJECT
DECL|member|m_hv
name|QHeaderView
modifier|*
name|m_hv
decl_stmt|;
DECL|member|m_tv
name|QTableView
modifier|*
name|m_tv
decl_stmt|;
public|public:
name|SomeHandler
parameter_list|(
name|QHeaderView
modifier|*
name|hv
parameter_list|,
name|QTableView
modifier|*
name|tv
parameter_list|)
constructor_decl|;
public|public
name|slots
public|:
name|void
name|slotSectionResized
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
name|int
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|SomeHandler
name|SomeHandler
operator|::
name|SomeHandler
parameter_list|(
name|QHeaderView
modifier|*
name|hv
parameter_list|,
name|QTableView
modifier|*
name|tv
parameter_list|)
block|{
name|m_hv
operator|=
name|hv
expr_stmt|;
name|m_tv
operator|=
name|tv
expr_stmt|;
name|m_tv
operator|->
name|setHorizontalScrollMode
argument_list|(
name|QAbstractItemView
operator|::
name|ScrollPerPixel
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|hv
argument_list|,
name|SIGNAL
argument_list|(
name|sectionResized
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|slotSectionResized
argument_list|(
name|int
argument_list|,
name|int
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|slotSectionResized
name|void
name|SomeHandler
operator|::
name|slotSectionResized
parameter_list|(
name|int
name|logsection
parameter_list|,
name|int
name|oldsize
parameter_list|,
name|int
name|newsize
parameter_list|)
block|{
name|int
name|offset
init|=
name|m_hv
operator|->
name|offset
argument_list|()
decl_stmt|;
name|m_tv
operator|->
name|setUpdatesEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Do some manual resizing - lets make every section having the new size.
name|m_hv
operator|->
name|blockSignals
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|0
init|;
name|u
operator|<
name|m_hv
operator|->
name|count
argument_list|()
condition|;
operator|++
name|u
control|)
name|m_hv
operator|->
name|resizeSection
argument_list|(
name|u
argument_list|,
name|newsize
argument_list|)
expr_stmt|;
name|m_hv
operator|->
name|blockSignals
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Adjust offset and scrollbar. Maybe it isn't 100% perfect
comment|// but proof of concept
comment|// The test has sense without the define, too.
DECL|macro|DO_CORRECT_OFFSET_AND_SB
define|#
directive|define
name|DO_CORRECT_OFFSET_AND_SB
ifdef|#
directive|ifdef
name|DO_CORRECT_OFFSET_AND_SB
name|int
name|leftRemoved
init|=
operator|(
name|m_hv
operator|->
name|visualIndex
argument_list|(
name|logsection
argument_list|)
operator|)
operator|*
operator|(
name|oldsize
operator|-
name|newsize
operator|)
decl_stmt|;
name|int
name|newoffset
init|=
name|offset
operator|-
name|leftRemoved
decl_stmt|;
if|if
condition|(
name|newoffset
operator|<
literal|0
condition|)
name|newoffset
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|newoffset
operator|>
literal|0
operator|&&
name|newoffset
operator|>=
name|m_hv
operator|->
name|count
argument_list|()
operator|*
name|newsize
operator|-
name|m_tv
operator|->
name|viewport
argument_list|()
operator|->
name|width
argument_list|()
condition|)
name|m_hv
operator|->
name|setOffsetToLastSection
argument_list|()
expr_stmt|;
else|else
name|m_hv
operator|->
name|setOffset
argument_list|(
name|newoffset
argument_list|)
expr_stmt|;
name|m_tv
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|blockSignals
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|m_tv
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
name|m_hv
operator|->
name|count
argument_list|()
operator|*
name|newsize
operator|-
name|m_tv
operator|->
name|viewport
argument_list|()
operator|->
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|m_tv
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|newoffset
argument_list|)
expr_stmt|;
name|m_tv
operator|->
name|horizontalScrollBar
argument_list|()
operator|->
name|blockSignals
argument_list|(
literal|false
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|m_tv
operator|->
name|setUpdatesEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QTableView
name|tv
decl_stmt|;
name|QStandardItemModel
name|m
decl_stmt|;
name|m
operator|.
name|setRowCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|m
operator|.
name|setColumnCount
argument_list|(
literal|36
argument_list|)
expr_stmt|;
name|tv
operator|.
name|setModel
argument_list|(
operator|&
name|m
argument_list|)
expr_stmt|;
name|SomeHandler
name|handler
argument_list|(
name|tv
operator|.
name|horizontalHeader
argument_list|()
argument_list|,
operator|&
name|tv
argument_list|)
decl_stmt|;
name|tv
operator|.
name|horizontalHeader
argument_list|()
operator|->
name|setDefaultSectionSize
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|tv
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|tv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|setValue
argument_list|(
name|tv
operator|.
name|horizontalScrollBar
argument_list|()
operator|->
name|maximum
argument_list|()
argument_list|)
expr_stmt|;
name|app
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
end_function
begin_include
include|#
directive|include
file|"qheaderviewtest1.moc"
end_include
end_unit
