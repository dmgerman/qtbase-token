begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 ThorbjÃ¸rn Lund Martsum - tmartsum[at]gmail.com ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QTest>
end_include
begin_include
include|#
directive|include
file|<QDialog>
end_include
begin_include
include|#
directive|include
file|<QToolTip>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_include
include|#
directive|include
file|<QPushButton>
end_include
begin_include
include|#
directive|include
file|<QVBoxLayout>
end_include
begin_include
include|#
directive|include
file|<QProxyStyle>
end_include
begin_include
include|#
directive|include
file|<QSpinBox>
end_include
begin_class
DECL|class|QToolTipTest
class|class
name|QToolTipTest
super|:
specifier|public
name|QProxyStyle
block|{
name|Q_OBJECT
public|public:
DECL|function|QToolTipTest
name|QToolTipTest
parameter_list|()
member_init_list|:
name|QProxyStyle
argument_list|()
block|{
name|wakeTime
operator|=
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_ToolTip_WakeUpDelay
argument_list|)
expr_stmt|;
name|sleepTime
operator|=
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|styleHint
argument_list|(
name|SH_ToolTip_FallAsleepDelay
argument_list|)
expr_stmt|;
block|}
DECL|function|styleHint
name|int
name|styleHint
parameter_list|(
name|StyleHint
name|hint
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
init|=
literal|0
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
init|=
literal|0
parameter_list|,
name|QStyleHintReturn
modifier|*
name|returnData
init|=
literal|0
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|hint
condition|)
block|{
case|case
name|SH_ToolTip_WakeUpDelay
case|:
return|return
name|wakeTime
return|;
case|case
name|SH_ToolTip_FallAsleepDelay
case|:
return|return
name|sleepTime
return|;
default|default:
return|return
name|QProxyStyle
operator|::
name|styleHint
argument_list|(
name|hint
argument_list|,
name|option
argument_list|,
name|widget
argument_list|,
name|returnData
argument_list|)
return|;
block|}
block|}
public|public
name|slots
public|:
DECL|function|setWakeTime
name|void
name|setWakeTime
parameter_list|(
name|int
name|wake
parameter_list|)
block|{
name|wakeTime
operator|=
name|wake
expr_stmt|;
block|}
DECL|function|setSleepTime
name|void
name|setSleepTime
parameter_list|(
name|int
name|sleep
parameter_list|)
block|{
name|sleepTime
operator|=
name|sleep
expr_stmt|;
block|}
protected|protected:
DECL|member|wakeTime
name|int
name|wakeTime
decl_stmt|;
DECL|member|sleepTime
name|int
name|sleepTime
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|TestDialog
class|class
name|TestDialog
super|:
specifier|public
name|QDialog
block|{
name|Q_OBJECT
public|public:
name|TestDialog
parameter_list|(
name|QToolTipTest
modifier|*
name|s
parameter_list|)
constructor_decl|;
DECL|member|style
name|QToolTipTest
modifier|*
name|style
decl_stmt|;
protected|protected
name|slots
protected|:
name|void
name|showSomeToolTips
parameter_list|()
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|showSomeToolTips
name|void
name|TestDialog
operator|::
name|showSomeToolTips
parameter_list|()
block|{
name|QPoint
name|p
argument_list|(
literal|100
operator|+
literal|20
argument_list|,
literal|100
operator|+
literal|20
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|1
init|;
name|u
operator|<
literal|20
condition|;
name|u
operator|+=
literal|5
control|)
block|{
name|QString
name|s
init|=
name|tr
argument_list|(
literal|"Seconds: "
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|QToolTip
operator|::
name|showText
argument_list|(
name|p
argument_list|,
name|s
argument_list|,
literal|0
argument_list|,
name|QRect
argument_list|()
argument_list|,
literal|1000
operator|*
name|u
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
operator|(
name|u
operator|+
literal|1
operator|)
operator|*
literal|1000
argument_list|)
expr_stmt|;
block|}
name|QToolTip
operator|::
name|showText
argument_list|(
name|p
argument_list|,
name|tr
argument_list|(
literal|"Seconds: 2"
argument_list|)
argument_list|,
literal|0
argument_list|,
name|QRect
argument_list|()
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|QToolTip
operator|::
name|showText
argument_list|(
name|p
argument_list|,
name|tr
argument_list|(
literal|"Standard label"
argument_list|)
argument_list|,
literal|0
argument_list|,
name|QRect
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|12000
argument_list|)
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|TestDialog
name|TestDialog
operator|::
name|TestDialog
parameter_list|(
name|QToolTipTest
modifier|*
name|s
parameter_list|)
member_init_list|:
name|style
argument_list|(
name|s
argument_list|)
block|{
comment|// Notice that these tool tips will disappear if another tool tip is shown.
name|QLabel
modifier|*
name|label1
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Tooltip - Only two seconds display"
argument_list|)
argument_list|)
decl_stmt|;
name|label1
operator|->
name|setToolTip
argument_list|(
name|tr
argument_list|(
literal|"2 seconds display"
argument_list|)
argument_list|)
expr_stmt|;
name|label1
operator|->
name|setToolTipDuration
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|label1
operator|->
name|toolTipDuration
argument_list|()
operator|==
literal|2000
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|label2
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Tooltip - 30 seconds display time"
argument_list|)
argument_list|)
decl_stmt|;
name|label2
operator|->
name|setToolTip
argument_list|(
name|tr
argument_list|(
literal|"30 seconds display"
argument_list|)
argument_list|)
expr_stmt|;
name|label2
operator|->
name|setToolTipDuration
argument_list|(
literal|30000
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|pb
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"&Test"
argument_list|)
argument_list|)
decl_stmt|;
name|pb
operator|->
name|setToolTip
argument_list|(
name|tr
argument_list|(
literal|"Show some tool tips."
argument_list|)
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|pb
operator|->
name|toolTipDuration
argument_list|()
operator|==
operator|-
literal|1
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|pb
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|showSomeToolTips
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|wakeLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Wake Delay:"
argument_list|)
argument_list|)
decl_stmt|;
name|QSpinBox
modifier|*
name|wakeSpinBox
init|=
operator|new
name|QSpinBox
argument_list|()
decl_stmt|;
name|wakeSpinBox
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|wakeSpinBox
operator|->
name|setValue
argument_list|(
name|style
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ToolTip_WakeUpDelay
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|wakeSpinBox
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|style
argument_list|,
name|SLOT
argument_list|(
name|setWakeTime
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|sleepLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Sleep Delay:"
argument_list|)
argument_list|)
decl_stmt|;
name|QSpinBox
modifier|*
name|sleepSpinBox
init|=
operator|new
name|QSpinBox
argument_list|()
decl_stmt|;
name|sleepSpinBox
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|sleepSpinBox
operator|->
name|setValue
argument_list|(
name|style
operator|->
name|styleHint
argument_list|(
name|QStyle
operator|::
name|SH_ToolTip_FallAsleepDelay
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sleepSpinBox
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|style
argument_list|,
name|SLOT
argument_list|(
name|setSleepTime
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|label1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|label2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|pb
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|wakeLabel
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|wakeSpinBox
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|wakeLabel
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|sleepLabel
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|sleepSpinBox
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QToolTipTest
modifier|*
name|style
init|=
operator|new
name|QToolTipTest
argument_list|()
decl_stmt|;
name|QApplication
operator|::
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|TestDialog
name|dlg
argument_list|(
name|style
argument_list|)
decl_stmt|;
name|dlg
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
