begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 ThorbjÃ¸rn Lund Martsum - tmartsum[at]gmail.com ** Contact: http://www.qt-project.org/legal ** ** This file is part of the test suite of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QTest>
end_include
begin_function
DECL|function|showSomeToolTips
name|void
name|showSomeToolTips
parameter_list|()
block|{
name|QPoint
name|p
argument_list|(
literal|100
operator|+
literal|20
argument_list|,
literal|100
operator|+
literal|20
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|u
init|=
literal|1
init|;
name|u
operator|<
literal|20
condition|;
name|u
operator|+=
literal|5
control|)
block|{
name|QString
name|s
init|=
literal|"Seconds: "
operator|+
name|QString
operator|::
name|number
argument_list|(
name|u
argument_list|)
decl_stmt|;
name|QToolTip
operator|::
name|showText
argument_list|(
name|p
argument_list|,
name|s
argument_list|,
literal|0
argument_list|,
name|QRect
argument_list|()
argument_list|,
literal|1000
operator|*
name|u
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
operator|(
name|u
operator|+
literal|1
operator|)
operator|*
literal|1000
argument_list|)
expr_stmt|;
block|}
name|QToolTip
operator|::
name|showText
argument_list|(
name|p
argument_list|,
literal|"Seconds: 2"
argument_list|,
literal|0
argument_list|,
name|QRect
argument_list|()
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|3000
argument_list|)
expr_stmt|;
name|QToolTip
operator|::
name|showText
argument_list|(
name|p
argument_list|,
literal|"Standard label"
argument_list|,
literal|0
argument_list|,
name|QRect
argument_list|()
argument_list|)
expr_stmt|;
name|QTest
operator|::
name|qWait
argument_list|(
literal|12000
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|showSomeToolTips
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
end_unit
