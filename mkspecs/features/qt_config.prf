# This file is loaded by the mkspecs, before .qmake.cache has been loaded.
# Consequently, we have to do some stunts to get values out of the cache.

exists($$_QMAKE_CACHE_) {
    QMAKE_QT_CONFIG = $$fromfile($$_QMAKE_CACHE_, QMAKE_QT_CONFIG)
    QMAKE_EXTRA_MODULE_FORWARDS = $$fromfile($$_QMAKE_CACHE_, QMAKE_EXTRA_MODULE_FORWARDS)
}
isEmpty(QMAKE_QT_CONFIG)|!exists($$QMAKE_QT_CONFIG) {
   !isEmpty(QT_BUILD_TREE):QMAKE_QT_CONFIG = $$QT_BUILD_TREE/mkspecs/qconfig.pri
   else:exists($$_QMAKE_CACHE_):infile($$_QMAKE_CACHE_, QT_BUILD_TREE):QMAKE_QT_CONFIG = $$fromfile($$_QMAKE_CACHE_, QT_BUILD_TREE)/mkspecs/qconfig.pri
   isEmpty(QMAKE_QT_CONFIG):exists($$[QT_INSTALL_DATA]/mkspecs/qconfig.pri):QMAKE_QT_CONFIG = $$[QT_INSTALL_DATA]/mkspecs/qconfig.pri
}
!exists($$QMAKE_QT_CONFIG)|!include($$QMAKE_QT_CONFIG, "", true) {
   debug(1, "Cannot load qconfig.pri!")
} else {
   debug(1, "Loaded .qconfig.pri from ($$QMAKE_QT_CONFIG)")
   for(dir, $$list($$unique($$list($$dirname(QMAKE_QT_CONFIG) \
                                   $$replace($$list($$split($$list($$(QMAKEPATH)), $$DIRLIST_SEPARATOR)), $, /mkspecs) \
                                   $$QMAKE_EXTRA_MODULE_FORWARDS \
                                   )))) {
      debug(1, "Loading modules from $${dir}")
      for(mod, $$list($$files($$dir/modules/qt_*.pri))) {
         # For installed Qt these paths will be common for all modules
         # For development these will vary per module, and syncqt will override the value in the
         # qt_<module>.pri forwarding file
         QT_MODULE_INCLUDE_BASE = $$[QT_INSTALL_HEADERS]
         QT_MODULE_LIB_BASE = $$[QT_INSTALL_LIBS]
         QT_MODULE_PLUGIN_BASE = $$[QT_INSTALL_PLUGINS]
         QT_MODULE_BIN_BASE = $$[QT_INSTALL_BINS]
         QT_MODULE_IMPORT_BASE = $$[QT_INSTALL_IMPORTS]
         include($$mod)
      }
   }
}

load(qt_functions)

