begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 Green Hills Software. All rights reserved. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the qmake spec of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|Q_INTEGRITY_PLATFORMDEFS_H
end_ifndef
begin_define
DECL|macro|Q_INTEGRITY_PLATFORMDEFS_H
define|#
directive|define
name|Q_INTEGRITY_PLATFORMDEFS_H
end_define
begin_comment
comment|// Get Qt defines/settings
end_comment
begin_include
include|#
directive|include
file|"qglobal.h"
end_include
begin_include
include|#
directive|include
file|<stdbool.h>
end_include
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_include
include|#
directive|include
file|<unistd.h>
end_include
begin_define
DECL|macro|__STDC_CONSTANT_MACROS
define|#
directive|define
name|__STDC_CONSTANT_MACROS
end_define
begin_include
include|#
directive|include
file|<pthread.h>
end_include
begin_include
include|#
directive|include
file|<dirent.h>
end_include
begin_include
include|#
directive|include
file|<fcntl.h>
end_include
begin_include
include|#
directive|include
file|<signal.h>
end_include
begin_include
include|#
directive|include
file|<sys/select.h>
end_include
begin_include
include|#
directive|include
file|<sys/types.h>
end_include
begin_include
include|#
directive|include
file|<sys/ioctl.h>
end_include
begin_include
include|#
directive|include
file|<sys/time.h>
end_include
begin_comment
comment|// INTEGRITY doesn't have the System V<sys/shm.h> header. This is not a standard
end_comment
begin_comment
comment|// POSIX header, it's only documented in the Single UNIX Specification.
end_comment
begin_comment
comment|// The preferred POSIX compliant way to share memory is to use the functions
end_comment
begin_comment
comment|// in<sys/mman.h> that comply with the POSIX Real Time Interface (1003.1b).
end_comment
begin_include
include|#
directive|include
file|<sys/mman.h>
end_include
begin_include
include|#
directive|include
file|<sys/socket.h>
end_include
begin_include
include|#
directive|include
file|<sys/stat.h>
end_include
begin_include
include|#
directive|include
file|<sys/wait.h>
end_include
begin_include
include|#
directive|include
file|<netinet/in.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_IPV6IFNAME
end_ifndef
begin_include
include|#
directive|include
file|<net/if.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// for htonl
end_comment
begin_include
include|#
directive|include
file|<arpa/inet.h>
end_include
begin_define
DECL|macro|QT_SNPRINTF
define|#
directive|define
name|QT_SNPRINTF
value|::snprintf
end_define
begin_define
DECL|macro|QT_VSNPRINTF
define|#
directive|define
name|QT_VSNPRINTF
value|::vsnprintf
end_define
begin_comment
comment|// INTEGRITY doesn't have getpagesize()
end_comment
begin_function
DECL|function|getpagesize
specifier|inline
name|int
name|getpagesize
parameter_list|()
block|{
return|return
operator|::
name|sysconf
argument_list|(
name|_SC_PAGESIZE
argument_list|)
return|;
block|}
end_function
begin_comment
comment|// geteuid() is only available with multi-process posix, but we do not want
end_comment
begin_comment
comment|// to rely on it
end_comment
begin_function
DECL|function|geteuid
specifier|inline
name|uid_t
name|geteuid
parameter_list|(
name|void
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function
begin_comment
comment|// getuid() is only available with multi-process posix, but we do not want
end_comment
begin_comment
comment|// to rely on it
end_comment
begin_function
DECL|function|getuid
specifier|inline
name|uid_t
name|getuid
parameter_list|(
name|void
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
end_function
begin_include
include|#
directive|include
file|"../posix/qplatformdefs.h"
end_include
begin_undef
DECL|macro|QT_OPEN_LARGEFILE
undef|#
directive|undef
name|QT_OPEN_LARGEFILE
end_undef
begin_define
DECL|macro|QT_OPEN_LARGEFILE
define|#
directive|define
name|QT_OPEN_LARGEFILE
value|0
end_define
begin_define
DECL|macro|PATH_MAX
define|#
directive|define
name|PATH_MAX
value|1024
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_QNX_PLATFORMDEFS_H
end_comment
end_unit
