#
# qmake configuration for Broadcom's Raspberry PI
# http://wiki.qt-project.org/Devices/RaspberryPi

MAKEFILE_GENERATOR  = UNIX
TARGET_PLATFORM     = unix
TEMPLATE            = app
CONFIG              += qt warn_on release incremental link_prl gdb_dwarf_index
QT                  += core gui
QMAKE_INCREMENTAL_STYLE = sublib

include(../../common/linux.conf)
include(../../common/gcc-base-unix.conf)
include(../../common/g++-unix.conf)

load(device_config)

QMAKE_CC                = $${CROSS_COMPILE}gcc
QMAKE_CXX               = $${CROSS_COMPILE}g++
QMAKE_LINK              = $${QMAKE_CXX}
QMAKE_LINK_SHLIB        = $${QMAKE_CXX}

# modifications to linux.conf
QMAKE_AR                = $${CROSS_COMPILE}ar cqs
QMAKE_OBJCOPY           = $${CROSS_COMPILE}objcopy
QMAKE_STRIP             = $${CROSS_COMPILE}strip

QMAKE_LFLAGS            += -Wl,-rpath-link,$$[QT_SYSROOT]/opt/vc/lib

QMAKE_LIBDIR_OPENGL_ES2 = $$[QT_SYSROOT]/opt/vc/lib
QMAKE_LIBDIR_EGL        = $$QMAKE_LIBDIR_OPENGL_ES2

QMAKE_INCDIR_EGL        = $$[QT_SYSROOT]/opt/vc/include
QMAKE_INCDIR_OPENGL_ES2 = $${QMAKE_INCDIR_EGL}

QMAKE_LIBS_EGL          = -lEGL -lGLESv2

contains(DISTRO, wheezy) {
    QMAKE_LFLAGS        += -Wl,-rpath-link,$$[QT_SYSROOT]/usr/lib/arm-linux-gnueabi \
                           -Wl,-rpath-link,$$[QT_SYSROOT]/lib/arm-linux-gnueabi
} else:contains(DISTRO, bsquask) {
    FLOAT-ABI = hard
} else:contains(DISTRO, arch) {
    #On principle: no wizardry required
} else {
    #Legacy circular dependency
    QMAKE_LIBS_OPENGL_ES2          = -lGLESv2 -lEGL
}

QMAKE_CFLAGS            += \
                          -marm \
                          -mfpu=vfp \
                          -mtune=arm1176jzf-s \
                          -march=armv6zk \
                          -mabi=aapcs-linux

contains(FLOAT-ABI, hard) {
    QMAKE_CFLAGS += -mfloat-abi=hard
} else {
    QMAKE_CFLAGS += -mfloat-abi=softfp
}

QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS

EGLFS_PLATFORM_HOOKS_SOURCES = $$PWD/qeglfshooks_pi.cpp
EGLFS_PLATFORM_HOOKS_LIBS = -lbcm_host

deviceSanityCheckCompiler()

QT_QPA_DEFAULT_PLATFORM = eglfs

load(qt_config)
